uint64_t getEnumTagSinglePayload for AnyValue(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF6 && *(unsigned char *)(a1 + 34)) {
    return (*(_DWORD *)a1 + 246);
  }
  v3 = *(unsigned __int8 *)(a1 + 33);
  if (v3 >= 0xB) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

ValueMetadata *type metadata accessor for TypeSchema()
{
  return &type metadata for TypeSchema;
}

uint64_t destroy for AnyValue(uint64_t result)
{
  uint64_t v1 = result;
  unsigned int v2 = *(unsigned __int8 *)(result + 33);
  if (v2 >= 0xB) {
    unsigned int v2 = *(_DWORD *)result + 11;
  }
  switch(v2)
  {
    case 7u:
      swift_unknownObjectRelease();
      uint64_t v3 = *(void *)(v1 + 16);
      uint64_t v4 = *(void *)(v1 + 24);
      char v5 = *(unsigned char *)(v1 + 32);
      result = sub_259FB680C(v3, v4, v5);
      break;
    case 8u:
      result = swift_bridgeObjectRelease();
      break;
    case 9u:
      uint64_t v6 = *(void *)result;
      unint64_t v7 = *(void *)(v1 + 8);
      goto LABEL_9;
    case 0xAu:
      swift_unknownObjectRelease();
      uint64_t v6 = *(void *)(v1 + 16);
      unint64_t v7 = *(void *)(v1 + 24);
LABEL_9:
      result = sub_259FAE4A8(v6, v7);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AnyValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF5)
  {
    *(_WORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 246;
    if (a3 >= 0xF6) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF6) {
      *(unsigned char *)(result + 34) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 33) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EnumValue()
{
  return &type metadata for EnumValue;
}

ValueMetadata *type metadata accessor for AnyValue()
{
  return &type metadata for AnyValue;
}

ValueMetadata *type metadata accessor for SchematizedData()
{
  return &type metadata for SchematizedData;
}

uint64_t destroy for TypeSchema(uint64_t *a1)
{
  return sub_259FAD1BC(*a1, a1[1]);
}

void *sub_259FAD194(void *result, uint64_t a2)
{
  if (a2 < 2)
  {
    result[1] = result[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  }
  else
  {
    *result = (a2 - 2);
    result[1] = 0x8000000000000000;
  }
  return result;
}

uint64_t sub_259FAD1BC(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x8000000000000000) == 0) {
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for UnsafeAnyValue(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF6 && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 246);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 0xB) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

void *sub_259FAD204(void *a1, int64_t a2)
{
  return sub_259FAD21C(a1, a2);
}

void *sub_259FAD21C(void *result, int64_t a2)
{
  unsigned int v3 = *(const void **)(v2 + 16);
  if (!v3) {
    return 0;
  }
  unint64_t v4 = *(void *)(v2 + 24);
  if (v4) {
    BOOL v5 = (unint64_t)v3 >= v4;
  }
  else {
    BOOL v5 = 1;
  }
  if (v5 || a2 == 0) {
    return (void *)(v4 - (void)v3);
  }
  if ((uint64_t)(v4 - (void)v3) >= a2) {
    size_t v7 = a2;
  }
  else {
    size_t v7 = v4 - (void)v3;
  }
  if ((v7 & 0x8000000000000000) == 0)
  {
    memmove(result, v3, v7);
    return (void *)(v4 - (void)v3);
  }
  __break(1u);
  return result;
}

uint64_t initializeWithCopy for AnyValue(uint64_t a1, uint64_t *a2)
{
  unsigned int v3 = *((unsigned __int8 *)a2 + 33);
  if (v3 >= 0xB) {
    unsigned int v3 = *(_DWORD *)a2 + 11;
  }
  switch(v3)
  {
    case 1u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      char v4 = 1;
      goto LABEL_14;
    case 2u:
      *(void *)a1 = *a2;
      char v4 = 2;
      goto LABEL_14;
    case 3u:
      *(void *)a1 = *a2;
      char v4 = 3;
      goto LABEL_14;
    case 4u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      char v4 = 4;
      goto LABEL_14;
    case 5u:
      *(void *)a1 = *a2;
      char v4 = 5;
      goto LABEL_14;
    case 6u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      char v4 = 6;
      goto LABEL_14;
    case 7u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v5 = a2[2];
      uint64_t v6 = a2[3];
      char v7 = *((unsigned char *)a2 + 32);
      swift_unknownObjectRetain();
      sub_259FB94E4(v5, v6, v7);
      *(void *)(a1 + 16) = v5;
      *(void *)(a1 + 24) = v6;
      *(unsigned char *)(a1 + 32) = v7;
      char v4 = 7;
      goto LABEL_14;
    case 8u:
      uint64_t v13 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v13;
      *(unsigned char *)(a1 + 33) = 8;
      swift_bridgeObjectRetain();
      return a1;
    case 9u:
      uint64_t v8 = *a2;
      unint64_t v9 = a2[1];
      sub_259FAE450(*a2, v9);
      *(void *)a1 = v8;
      *(void *)(a1 + 8) = v9;
      char v4 = 9;
      goto LABEL_14;
    case 0xAu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v10 = a2[2];
      unint64_t v11 = a2[3];
      swift_unknownObjectRetain();
      sub_259FAE450(v10, v11);
      *(void *)(a1 + 16) = v10;
      *(void *)(a1 + 24) = v11;
      char v4 = 10;
LABEL_14:
      *(unsigned char *)(a1 + 33) = v4;
      break;
    default:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(unsigned char *)(a1 + 33) = 0;
      break;
  }
  return a1;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

void static Schematizer.searchValue(in:withFieldNumber:type:)(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = a5;
  uint64_t v140 = *MEMORY[0x263EF8340];
  uint64_t v8 = *a4;
  uint64_t v9 = a4[1];
  uint64_t v10 = a3;
  unint64_t v11 = a2;
  uint64_t v12 = a1;
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v110 = *a4;
      uint64_t v16 = v6;
      uint64_t v17 = (a1 >> 32) - (int)a1;
      if (a1 >> 32 >= (int)a1)
      {
        uint64_t v108 = a4[1];
        sub_259FAE450(a1, a2);
        uint64_t v18 = sub_25A00E270();
        if (!v18) {
          goto LABEL_10;
        }
        uint64_t v19 = sub_25A00E290();
        if (!__OFSUB__((int)v12, v19))
        {
          v18 += (int)v12 - v19;
LABEL_10:
          uint64_t v20 = sub_25A00E280();
          if (v20 >= v17) {
            uint64_t v21 = (v12 >> 32) - (int)v12;
          }
          else {
            uint64_t v21 = v20;
          }
          v22 = (char *)(v18 + v21);
          if (!v18) {
            v22 = 0;
          }
          v134 = (void *)v18;
          v135 = v22;
          if (!v18) {
            uint64_t v21 = 0;
          }
          uint64_t v137 = 0;
          uint64_t v138 = 0;
          uint64_t v136 = v21;
          char v139 = 1;
          uint64_t v23 = sub_259FAE178(v10);
          uint64_t v7 = a5;
          if (v6)
          {
            sub_259FAE4A8(v12, v11);
          }
          else if ((v23 & 0x100000000) != 0)
          {
            uint64_t v132 = 0;
            long long v130 = 0u;
            long long v131 = 0u;
            char v133 = -1;
            sub_259FAF090((uint64_t)&v130);
            sub_259FAE4A8(v12, v11);
LABEL_41:
            *(_OWORD *)uint64_t v7 = 0u;
            *(_OWORD *)(v7 + 16) = 0u;
            __int16 v37 = -256;
LABEL_42:
            *(_WORD *)(v7 + 32) = v37;
          }
          else
          {
            *(void *)&long long v126 = v110;
            *((void *)&v126 + 1) = v108;
            char v33 = sub_259FAE500(v23);
            sub_259FAE514((uint64_t *)&v126, v33, (uint64_t)&v130);
            sub_259FAEE8C((uint64_t)&v130, (uint64_t)&v126);
            switch(v129)
            {
              case 1u:
                uint64_t v40 = v126;
                sub_259FAED74((uint64_t)&v130);
                sub_259FAE4A8(v12, v11);
                goto LABEL_60;
              case 2u:
                uint64_t v41 = v126;
                sub_259FAED74((uint64_t)&v130);
                sub_259FAE4A8(v12, v11);
                goto LABEL_74;
              case 3u:
                uint64_t v42 = v126;
                sub_259FAED74((uint64_t)&v130);
                sub_259FAE4A8(v12, v11);
                goto LABEL_76;
              case 4u:
                uint64_t v43 = v126;
                sub_259FAED74((uint64_t)&v130);
                sub_259FAE4A8(v12, v11);
                goto LABEL_78;
              case 5u:
                uint64_t v44 = v126;
                sub_259FAED74((uint64_t)&v130);
                sub_259FAE4A8(v12, v11);
                goto LABEL_80;
              case 6u:
                uint64_t v45 = v126;
                sub_259FAED74((uint64_t)&v130);
                sub_259FAE4A8(v12, v11);
                goto LABEL_82;
              case 7u:
                long long v112 = v126;
                long long v65 = v127;
                __int16 v66 = v128;
                sub_259FAED74((uint64_t)&v130);
                sub_259FAE4A8(v12, v11);
                *(_OWORD *)a5 = v112;
                *(_OWORD *)(a5 + 16) = v65;
                *(_WORD *)(a5 + 32) = v66 | 0x700;
                break;
              case 8u:
                sub_259FAF0F0(&v126, (uint64_t)&v123);
                uint64_t v67 = v124;
                uint64_t v68 = v125;
                __swift_project_boxed_opaque_existential_1(&v123, v124);
                uint64_t v69 = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 24))(v67, v68);
                uint64_t v71 = v70;
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
                sub_259FAED74((uint64_t)&v130);
                sub_259FAE4A8(v12, v11);
                goto LABEL_85;
              case 9u:
                sub_259FAF0F0(&v126, (uint64_t)&v123);
                uint64_t v72 = v124;
                uint64_t v73 = v125;
                __swift_project_boxed_opaque_existential_1(&v123, v124);
                uint64_t v74 = (*(uint64_t (**)(uint64_t, uint64_t))(v73 + 16))(v72, v73);
                uint64_t v76 = v75;
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
                sub_259FAED74((uint64_t)&v130);
                sub_259FAE4A8(v12, v11);
                goto LABEL_88;
              case 0xAu:
                long long v77 = v126;
                uint64_t v124 = MEMORY[0x263F8D3E8];
                uint64_t v125 = MEMORY[0x263F07B80];
                long long v123 = v127;
                v78 = __swift_project_boxed_opaque_existential_1(&v123, MEMORY[0x263F8D3E8]);
                uint64_t v79 = *v78;
                if (*v78 && (v80 = (unsigned char *)v78[1], uint64_t v81 = (uint64_t)&v80[-v79], v80 != (unsigned char *)v79))
                {
                  if (v81 <= 14)
                  {
                    uint64_t v82 = sub_259FC3B50((unsigned char *)*v78, v80);
                    unint64_t v83 = v103 & 0xFFFFFFFFFFFFFFLL;
                    swift_unknownObjectRetain();
                  }
                  else
                  {
                    swift_unknownObjectRetain();
                    if ((unint64_t)v81 >= 0x7FFFFFFF)
                    {
                      uint64_t v82 = sub_259FC3C98(v79, (uint64_t)v80);
                      unint64_t v83 = v106 | 0x8000000000000000;
                    }
                    else
                    {
                      uint64_t v82 = sub_259FC3C14(v79, (uint64_t)v80);
                      unint64_t v83 = v100 | 0x4000000000000000;
                    }
                  }
                }
                else
                {
                  swift_unknownObjectRetain();
                  uint64_t v82 = 0;
                  unint64_t v83 = 0xC000000000000000;
                }
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
                swift_unknownObjectRelease();
                sub_259FAED74((uint64_t)&v130);
                sub_259FAE4A8(v12, v11);
                uint64_t v38 = a5;
                *(_OWORD *)a5 = v77;
                *(void *)(a5 + 16) = v82;
                *(void *)(a5 + 24) = v83;
                __int16 v39 = 2560;
                goto LABEL_45;
              default:
                uint64_t v15 = v126;
                sub_259FAED74((uint64_t)&v130);
                sub_259FAE4A8(v12, v11);
                goto LABEL_35;
            }
          }
          return;
        }
LABEL_112:
        __break(1u);
      }
      __break(1u);
      break;
    case 2uLL:
      uint64_t v109 = a4[1];
      uint64_t v111 = *a4;
      uint64_t v16 = v6;
      uint64_t v5 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v24 = *(void *)(a1 + 16);
      uint64_t v25 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      a1 = sub_25A00E270();
      v26 = (void *)a1;
      if (!a1) {
        goto LABEL_22;
      }
      a1 = sub_25A00E290();
      if (__OFSUB__(v24, a1))
      {
        __break(1u);
        goto LABEL_112;
      }
      v26 = (void *)((char *)v26 + v24 - a1);
LABEL_22:
      BOOL v27 = __OFSUB__(v25, v24);
      uint64_t v28 = v25 - v24;
      if (!v27)
      {
        uint64_t v29 = sub_25A00E280();
        if (v29 >= v28) {
          uint64_t v30 = v28;
        }
        else {
          uint64_t v30 = v29;
        }
        v31 = (char *)v26 + v30;
        if (!v26) {
          v31 = 0;
        }
        v134 = v26;
        v135 = v31;
        if (!v26) {
          uint64_t v30 = 0;
        }
        uint64_t v137 = 0;
        uint64_t v138 = 0;
        uint64_t v136 = v30;
        char v139 = 1;
        uint64_t v32 = sub_259FAE178(v10);
        if (v6)
        {
          swift_release();
          swift_release();
        }
        else if ((v32 & 0x100000000) != 0)
        {
          uint64_t v132 = 0;
          long long v130 = 0u;
          long long v131 = 0u;
          char v133 = -1;
          sub_259FAF090((uint64_t)&v130);
          swift_release();
          swift_release();
          uint64_t v38 = a5;
          *(_OWORD *)a5 = 0u;
          *(_OWORD *)(a5 + 16) = 0u;
          __int16 v39 = -256;
LABEL_45:
          *(_WORD *)(v38 + 32) = v39;
        }
        else
        {
          *(void *)&long long v126 = v111;
          *((void *)&v126 + 1) = v109;
          char v34 = sub_259FAE500(v32);
          sub_259FAE514((uint64_t *)&v126, v34, (uint64_t)&v130);
          uint64_t v7 = a5;
          sub_259FAEE8C((uint64_t)&v130, (uint64_t)&v126);
          __int16 v35 = v129;
          switch(v129)
          {
            case 2u:
              uint64_t v41 = v126;
              sub_259FAED74((uint64_t)&v130);
              swift_release();
              swift_release();
              goto LABEL_74;
            case 3u:
              uint64_t v42 = v126;
              sub_259FAED74((uint64_t)&v130);
              swift_release();
              swift_release();
              goto LABEL_76;
            case 4u:
              uint64_t v43 = v126;
              sub_259FAED74((uint64_t)&v130);
              swift_release();
              swift_release();
              goto LABEL_78;
            case 5u:
              uint64_t v44 = v126;
              sub_259FAED74((uint64_t)&v130);
              swift_release();
              swift_release();
              goto LABEL_80;
            case 6u:
              uint64_t v45 = v126;
              sub_259FAED74((uint64_t)&v130);
              swift_release();
              swift_release();
              goto LABEL_82;
            case 7u:
              long long v113 = v126;
              long long v84 = v127;
              __int16 v85 = v128;
              sub_259FAED74((uint64_t)&v130);
              swift_release();
              swift_release();
              *(_OWORD *)a5 = v113;
              *(_OWORD *)(a5 + 16) = v84;
              *(_WORD *)(a5 + 32) = v85 | 0x700;
              break;
            case 8u:
              sub_259FAF0F0(&v126, (uint64_t)&v123);
              uint64_t v86 = v124;
              uint64_t v87 = v125;
              __swift_project_boxed_opaque_existential_1(&v123, v124);
              uint64_t v69 = (*(uint64_t (**)(uint64_t, uint64_t))(v87 + 24))(v86, v87);
              uint64_t v71 = v88;
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
              sub_259FAED74((uint64_t)&v130);
              swift_release();
              swift_release();
LABEL_85:
              *(void *)uint64_t v7 = v69;
              *(void *)(v7 + 8) = v71;
              goto LABEL_86;
            case 9u:
              sub_259FAF0F0(&v126, (uint64_t)&v123);
              uint64_t v89 = v124;
              uint64_t v90 = v125;
              __swift_project_boxed_opaque_existential_1(&v123, v124);
              uint64_t v74 = (*(uint64_t (**)(uint64_t, uint64_t))(v90 + 16))(v89, v90);
              uint64_t v76 = v91;
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
              sub_259FAED74((uint64_t)&v130);
              swift_release();
              swift_release();
LABEL_88:
              *(void *)uint64_t v7 = v74;
              *(void *)(v7 + 8) = v76;
              goto LABEL_89;
            case 0xAu:
              long long v92 = v126;
              uint64_t v124 = MEMORY[0x263F8D3E8];
              uint64_t v125 = MEMORY[0x263F07B80];
              long long v123 = v127;
              v93 = __swift_project_boxed_opaque_existential_1(&v123, MEMORY[0x263F8D3E8]);
              uint64_t v94 = *v93;
              if (*v93 && (v95 = (unsigned char *)v93[1], uint64_t v96 = (uint64_t)&v95[-v94], v95 != (unsigned char *)v94))
              {
                if (v96 <= 14)
                {
                  uint64_t v97 = sub_259FC3B50((unsigned char *)*v93, v95);
                  unint64_t v98 = v104 & 0xFFFFFFFFFFFFFFLL;
                  swift_unknownObjectRetain();
                }
                else
                {
                  swift_unknownObjectRetain();
                  if ((unint64_t)v96 >= 0x7FFFFFFF)
                  {
                    uint64_t v97 = sub_259FC3C98(v94, (uint64_t)v95);
                    unint64_t v98 = v107 | 0x8000000000000000;
                  }
                  else
                  {
                    uint64_t v97 = sub_259FC3C14(v94, (uint64_t)v95);
                    unint64_t v98 = v101 | 0x4000000000000000;
                  }
                }
              }
              else
              {
                swift_unknownObjectRetain();
                uint64_t v97 = 0;
                unint64_t v98 = 0xC000000000000000;
              }
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
              swift_unknownObjectRelease();
              sub_259FAED74((uint64_t)&v130);
              swift_release();
              swift_release();
              *(_OWORD *)a5 = v92;
              *(void *)(a5 + 16) = v97;
              *(void *)(a5 + 24) = v98;
              *(_WORD *)(a5 + 32) = 2560;
              break;
            default:
              uint64_t v36 = v126;
              sub_259FAED74((uint64_t)&v130);
              swift_release();
              swift_release();
              __int16 v37 = v35 << 8;
              *(void *)a5 = v36;
              *(void *)(a5 + 8) = 0;
              *(void *)(a5 + 16) = 0;
              *(void *)(a5 + 24) = 0;
              goto LABEL_42;
          }
        }
        return;
      }
      break;
    case 3uLL:
      goto LABEL_41;
    default:
      uint64_t v117 = a1;
      __int16 v118 = a2;
      char v119 = BYTE2(a2);
      char v120 = BYTE3(a2);
      char v121 = BYTE4(a2);
      char v122 = BYTE5(a2);
      v134 = &v117;
      v135 = (char *)&v117 + BYTE6(a2);
      uint64_t v137 = 0;
      uint64_t v138 = 0;
      uint64_t v136 = BYTE6(a2);
      char v139 = 1;
      uint64_t v13 = sub_259FAE178(a3);
      if (v6) {
        return;
      }
      if ((v13 & 0x100000000) != 0)
      {
        uint64_t v132 = 0;
        long long v130 = 0u;
        long long v131 = 0u;
        char v133 = -1;
        sub_259FAF090((uint64_t)&v130);
        goto LABEL_41;
      }
      *(void *)&long long v126 = v8;
      *((void *)&v126 + 1) = v9;
      char v14 = sub_259FAE500(v13);
      sub_259FAE514((uint64_t *)&v126, v14, (uint64_t)&v130);
      sub_259FAEE8C((uint64_t)&v130, (uint64_t)&v126);
      switch(v129)
      {
        case 1u:
          uint64_t v40 = v126;
          sub_259FAED74((uint64_t)&v130);
LABEL_60:
          *(void *)uint64_t v7 = v40;
          *(void *)(v7 + 8) = 0;
          *(void *)(v7 + 16) = 0;
          *(void *)(v7 + 24) = 0;
          __int16 v37 = 256;
          goto LABEL_42;
        case 2u:
          uint64_t v41 = v126;
          sub_259FAED74((uint64_t)&v130);
LABEL_74:
          *(void *)uint64_t v7 = v41;
          *(void *)(v7 + 8) = 0;
          *(void *)(v7 + 16) = 0;
          *(void *)(v7 + 24) = 0;
          __int16 v37 = 512;
          goto LABEL_42;
        case 3u:
          uint64_t v42 = v126;
          sub_259FAED74((uint64_t)&v130);
LABEL_76:
          *(void *)uint64_t v7 = v42;
          *(void *)(v7 + 8) = 0;
          *(void *)(v7 + 16) = 0;
          *(void *)(v7 + 24) = 0;
          __int16 v37 = 768;
          goto LABEL_42;
        case 4u:
          uint64_t v43 = v126;
          sub_259FAED74((uint64_t)&v130);
LABEL_78:
          *(void *)uint64_t v7 = v43;
          *(void *)(v7 + 8) = 0;
          *(void *)(v7 + 16) = 0;
          *(void *)(v7 + 24) = 0;
          __int16 v37 = 1024;
          goto LABEL_42;
        case 5u:
          uint64_t v44 = v126;
          sub_259FAED74((uint64_t)&v130);
LABEL_80:
          *(void *)uint64_t v7 = v44;
          *(void *)(v7 + 8) = 0;
          *(void *)(v7 + 16) = 0;
          *(void *)(v7 + 24) = 0;
          __int16 v37 = 1280;
          goto LABEL_42;
        case 6u:
          uint64_t v45 = v126;
          sub_259FAED74((uint64_t)&v130);
LABEL_82:
          *(void *)uint64_t v7 = v45;
          *(void *)(v7 + 8) = 0;
          *(void *)(v7 + 16) = 0;
          *(void *)(v7 + 24) = 0;
          __int16 v37 = 1536;
          goto LABEL_42;
        case 7u:
          long long v116 = v126;
          long long v46 = v127;
          uint64_t v47 = v7;
          __int16 v48 = v128;
          sub_259FAED74((uint64_t)&v130);
          *(_OWORD *)uint64_t v47 = v116;
          *(_OWORD *)(v47 + 16) = v46;
          *(_WORD *)(v47 + 32) = v48 | 0x700;
          return;
        case 8u:
          sub_259FAF0F0(&v126, (uint64_t)&v123);
          uint64_t v49 = v124;
          uint64_t v50 = v125;
          __swift_project_boxed_opaque_existential_1(&v123, v124);
          uint64_t v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 24))(v49, v50);
          uint64_t v53 = v52;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
          sub_259FAED74((uint64_t)&v130);
          *(void *)uint64_t v7 = v51;
          *(void *)(v7 + 8) = v53;
LABEL_86:
          *(void *)(v7 + 16) = 0;
          *(void *)(v7 + 24) = 0;
          __int16 v37 = 2048;
          goto LABEL_42;
        case 9u:
          sub_259FAF0F0(&v126, (uint64_t)&v123);
          uint64_t v54 = v124;
          uint64_t v55 = v125;
          __swift_project_boxed_opaque_existential_1(&v123, v124);
          uint64_t v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 16))(v54, v55);
          uint64_t v58 = v57;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
          sub_259FAED74((uint64_t)&v130);
          *(void *)uint64_t v7 = v56;
          *(void *)(v7 + 8) = v58;
LABEL_89:
          *(void *)(v7 + 16) = 0;
          *(void *)(v7 + 24) = 0;
          __int16 v37 = 2304;
          goto LABEL_42;
        case 0xAu:
          uint64_t v10 = v7;
          uint64_t v16 = *((void *)&v126 + 1);
          uint64_t v5 = v126;
          uint64_t v124 = MEMORY[0x263F8D3E8];
          uint64_t v125 = MEMORY[0x263F07B80];
          long long v123 = v127;
          v59 = __swift_project_boxed_opaque_existential_1(&v123, MEMORY[0x263F8D3E8]);
          uint64_t v60 = *v59;
          if (!*v59 || (v61 = (unsigned char *)v59[1], uint64_t v62 = (uint64_t)&v61[-v60], v61 == (unsigned char *)v60))
          {
            swift_unknownObjectRetain();
            uint64_t v63 = 0;
            unint64_t v64 = 0xC000000000000000;
            goto LABEL_58;
          }
          if (v62 <= 14)
          {
            uint64_t v63 = sub_259FC3B50((unsigned char *)*v59, v61);
            unint64_t v64 = v102 & 0xFFFFFFFFFFFFFFLL;
            swift_unknownObjectRetain();
          }
          else
          {
            swift_unknownObjectRetain();
            a1 = v60;
            a2 = (unint64_t)v61;
            if ((unint64_t)v62 >= 0x7FFFFFFF) {
              goto LABEL_108;
            }
            uint64_t v63 = sub_259FC3C14(v60, (uint64_t)v61);
            unint64_t v64 = v99 | 0x4000000000000000;
          }
          break;
        default:
          uint64_t v15 = v126;
          sub_259FAED74((uint64_t)&v130);
LABEL_35:
          *(void *)uint64_t v7 = v15;
          *(void *)(v7 + 8) = 0;
          *(void *)(v7 + 16) = 0;
          *(void *)(v7 + 24) = 0;
          *(_WORD *)(v7 + 32) = 0;
          return;
      }
      goto LABEL_58;
  }
  __break(1u);
LABEL_108:
  uint64_t v63 = sub_259FC3C98(a1, a2);
  unint64_t v64 = v105 | 0x8000000000000000;
LABEL_58:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
  swift_unknownObjectRelease();
  sub_259FAED74((uint64_t)&v130);
  *(void *)uint64_t v10 = v5;
  *(void *)(v10 + 8) = v16;
  *(void *)(v10 + 16) = v63;
  *(void *)(v10 + 24) = v64;
  *(_WORD *)(v10 + 32) = 2560;
}

uint64_t sub_259FAE178(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  if (v3 >= v4)
  {
    unint64_t v10 = 0;
    BOOL v15 = 1;
    return v10 | ((unint64_t)v15 << 32);
  }
  uint64_t v6 = *v1;
  uint64_t v7 = v1[1] - *v1;
  uint64_t v8 = *v1 + 1;
  while (2)
  {
    if (v6)
    {
      uint64_t v9 = v7;
      if (v3 >= v7) {
        break;
      }
    }
    else
    {
      if ((v3 & 0x8000000000000000) == 0) {
        break;
      }
      uint64_t v9 = 0;
    }
    unint64_t v10 = *(unsigned __int8 *)(v6 + v3);
    uint64_t v11 = v3 + 1;
    if ((*(char *)(v6 + v3) & 0x80000000) == 0)
    {
      v1[3] = v11;
      goto LABEL_18;
    }
    if (v11 < v9)
    {
      v10 &= 0x7Fu;
      unint64_t v12 = 7;
      while (1)
      {
        uint64_t v11 = v3 + 2;
        v10 |= (unint64_t)(*(unsigned char *)(v8 + v3) & 0x7F) << v12;
        if ((*(unsigned char *)(v8 + v3) & 0x80) == 0) {
          break;
        }
        if (v11 < v9)
        {
          ++v3;
          BOOL v13 = v12 >= 0x39;
          v12 += 7;
          if (!v13) {
            continue;
          }
        }
        goto LABEL_62;
      }
      v1[3] = v11;
      if (v10 < 0xFFFFFFFF)
      {
LABEL_18:
        BOOL v13 = v10 < 8 || (v10 & 7) >= 6;
        if (v13) {
          break;
        }
        uint64_t result = v10 >> 3;
        BOOL v15 = v10 >> 3 != a1;
        if (v10 >> 3 == a1) {
          return v10 | ((unint64_t)v15 << 32);
        }
        switch(v10 & 7)
        {
          case 0uLL:
            if (v6)
            {
              uint64_t v16 = v7;
              if (v11 >= v7) {
                goto LABEL_62;
              }
            }
            else
            {
              if ((v11 & 0x8000000000000000) == 0) {
                goto LABEL_62;
              }
              uint64_t v16 = 0;
            }
            uint64_t v3 = v11 + 1;
            if ((*(char *)(v6 + v11) & 0x80000000) == 0) {
              goto LABEL_54;
            }
            if (v3 >= v16) {
              goto LABEL_62;
            }
            unint64_t v18 = 7;
            while (1)
            {
              uint64_t v3 = v11 + 2;
              if ((*(char *)(v8 + v11) & 0x80000000) == 0) {
                goto LABEL_54;
              }
              if (v3 < v16)
              {
                ++v11;
                BOOL v13 = v18 >= 0x39;
                v18 += 7;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_62;
            }
          case 1uLL:
            uint64_t v3 = v11 + 8;
            if (!__OFADD__(v11, 8)) {
              goto LABEL_54;
            }
            goto LABEL_68;
          case 2uLL:
            if (v6)
            {
              uint64_t v17 = v7;
              if (v11 >= v7) {
                goto LABEL_62;
              }
            }
            else
            {
              if ((v11 & 0x8000000000000000) == 0) {
                goto LABEL_62;
              }
              uint64_t v17 = 0;
            }
            LODWORD(v19) = *(unsigned __int8 *)(v6 + v11);
            uint64_t v20 = v11 + 1;
            if ((*(char *)(v6 + v11) & 0x80000000) == 0) {
              goto LABEL_52;
            }
            if (v20 >= v17) {
              goto LABEL_62;
            }
            v19 &= 0x7Fu;
            unint64_t v22 = 7;
            while (1)
            {
              uint64_t v20 = v11 + 2;
              v19 |= (unint64_t)(*(unsigned char *)(v8 + v11) & 0x7F) << v22;
              if ((*(unsigned char *)(v8 + v11) & 0x80) == 0) {
                break;
              }
              if (v20 < v17)
              {
                ++v11;
                BOOL v23 = v22 > 0x38;
                v22 += 7;
                if (!v23) {
                  continue;
                }
              }
              goto LABEL_62;
            }
LABEL_52:
            v1[3] = v20;
            if ((v19 & 0x80000000) != 0) {
              goto LABEL_62;
            }
            BOOL v21 = __OFADD__(v20, v19);
            uint64_t v3 = v20 + v19;
            if (v21)
            {
LABEL_70:
              __break(1u);
              return result;
            }
LABEL_54:
            v1[3] = v3;
            if (v3 < v4) {
              continue;
            }
LABEL_66:
            unint64_t v10 = 0;
            break;
          case 3uLL:
            uint64_t result = sub_259FC481C(result);
            if (v2) {
              return result;
            }
            uint64_t v3 = v1[3];
            if (v3 >= v4) {
              goto LABEL_66;
            }
            continue;
          case 4uLL:
            goto LABEL_62;
          case 5uLL:
            uint64_t v3 = v11 + 4;
            if (!__OFADD__(v11, 4)) {
              goto LABEL_54;
            }
            goto LABEL_69;
          default:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
            goto LABEL_70;
        }
        return v10 | ((unint64_t)v15 << 32);
      }
    }
    break;
  }
LABEL_62:
  sub_259FBA9FC();
  swift_allocError();
  *(void *)uint64_t v24 = 1;
  *(_OWORD *)(v24 + 8) = 0u;
  *(_OWORD *)(v24 + 24) = 0u;
  *(_OWORD *)(v24 + 40) = 0u;
  *(void *)(v24 + 56) = 0;
  *(unsigned char *)(v24 + 64) = 2;
  return swift_willThrow();
}

uint64_t sub_259FAE450(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_259FAE4A8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_259FAE500(char a1)
{
  uint64_t result = a1 & 7;
  if (result > 5) {
    __break(1u);
  }
  return result;
}

void sub_259FAE514(uint64_t *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v8 = *a1;
  unint64_t v7 = a1[1];
  if (!(v7 >> 62))
  {
    if (a2) {
      goto LABEL_7;
    }
    uint64_t v15 = *v3;
    if (*v3)
    {
      uint64_t v16 = v3[1] - v15;
      uint64_t v17 = v3[3];
      if (v17 >= v16) {
        goto LABEL_163;
      }
    }
    else
    {
      uint64_t v17 = v3[3];
      if ((v17 & 0x8000000000000000) == 0) {
        goto LABEL_163;
      }
      uint64_t v16 = 0;
    }
    LODWORD(v19) = *(unsigned __int8 *)(v15 + v17);
    uint64_t v20 = v17 + 1;
    if (*(char *)(v15 + v17) < 0)
    {
      if (v20 >= v16) {
        goto LABEL_163;
      }
      v19 &= 0x7Fu;
      uint64_t v51 = v15 + 1;
      unint64_t v52 = 7;
      while (1)
      {
        uint64_t v53 = v17 + 2;
        v19 |= (unint64_t)(*(unsigned char *)(v51 + v17) & 0x7F) << v52;
        if ((*(unsigned char *)(v51 + v17) & 0x80) == 0) {
          break;
        }
        if (v53 < v16)
        {
          ++v17;
          BOOL v54 = v52 >= 0x39;
          v52 += 7;
          if (!v54) {
            continue;
          }
        }
        goto LABEL_163;
      }
      v3[3] = v53;
    }
    else
    {
      v3[3] = v20;
    }
    *(void *)a3 = v8;
    *(void *)(a3 + 8) = v7;
    *(void *)(a3 + 16) = (int)v19;
    *(void *)(a3 + 24) = 0;
    *(unsigned char *)(a3 + 32) = 1;
    *(unsigned char *)(a3 + 40) = 7;
    sub_259FBAA50(v8, v7);
    return;
  }
  if (v7 >> 62 != 1)
  {
    switch(v8)
    {
      case 1:
        if (a2) {
          goto LABEL_71;
        }
        uint64_t v21 = *v3;
        if (*v3)
        {
          uint64_t v22 = v3[1] - v21;
          uint64_t v23 = v3[3];
          if (v23 >= v22) {
            break;
          }
        }
        else
        {
          uint64_t v23 = v3[3];
          if ((v23 & 0x8000000000000000) == 0) {
            break;
          }
          uint64_t v22 = 0;
        }
        LODWORD(v57) = *(unsigned __int8 *)(v21 + v23);
        uint64_t v58 = v23 + 1;
        if ((*(char *)(v21 + v23) & 0x80000000) == 0)
        {
          v3[3] = v58;
          goto LABEL_89;
        }
        if (v58 < v22)
        {
          v57 &= 0x7Fu;
          uint64_t v72 = v21 + 1;
          unint64_t v73 = 7;
          while (1)
          {
            uint64_t v74 = v23 + 2;
            v57 |= (unint64_t)(*(unsigned char *)(v72 + v23) & 0x7F) << v73;
            if ((*(unsigned char *)(v72 + v23) & 0x80) == 0) {
              break;
            }
            if (v74 < v22)
            {
              ++v23;
              BOOL v54 = v73 >= 0x39;
              v73 += 7;
              if (!v54) {
                continue;
              }
            }
            goto LABEL_163;
          }
          v3[3] = v74;
LABEL_89:
          *(_DWORD *)a3 = v57;
          char v18 = 1;
          goto LABEL_17;
        }
        break;
      case 2:
        if (a2) {
          goto LABEL_71;
        }
        uint64_t v24 = *v3;
        if (*v3)
        {
          uint64_t v25 = v3[1] - v24;
          uint64_t v26 = v3[3];
          if (v26 >= v25) {
            break;
          }
        }
        else
        {
          uint64_t v26 = v3[3];
          if ((v26 & 0x8000000000000000) == 0) {
            break;
          }
          uint64_t v25 = 0;
        }
        LODWORD(v59) = *(unsigned __int8 *)(v24 + v26);
        uint64_t v60 = v26 + 1;
        if ((*(char *)(v24 + v26) & 0x80000000) == 0)
        {
          v3[3] = v60;
          goto LABEL_94;
        }
        if (v60 < v25)
        {
          v59 &= 0x7Fu;
          uint64_t v75 = v24 + 1;
          unint64_t v76 = 7;
          while (1)
          {
            uint64_t v77 = v26 + 2;
            v59 |= (unint64_t)(*(unsigned char *)(v75 + v26) & 0x7F) << v76;
            if ((*(unsigned char *)(v75 + v26) & 0x80) == 0) {
              break;
            }
            if (v77 < v25)
            {
              ++v26;
              BOOL v54 = v76 >= 0x39;
              v76 += 7;
              if (!v54) {
                continue;
              }
            }
            goto LABEL_163;
          }
          v3[3] = v77;
LABEL_94:
          *(_DWORD *)a3 = -(v59 & 1) ^ (v59 >> 1);
          *(unsigned char *)(a3 + 40) = 0;
          return;
        }
        break;
      case 3:
        if (a2 != 5) {
          goto LABEL_71;
        }
        int v27 = sub_259FF3FF8();
        if (v4) {
          return;
        }
        *(_DWORD *)a3 = v27;
        char v18 = 1;
        goto LABEL_17;
      case 4:
        if (a2 != 5) {
          goto LABEL_71;
        }
        int v28 = sub_259FF3FF8();
        if (!v4)
        {
          *(_DWORD *)a3 = v28;
          *(unsigned char *)(a3 + 40) = 0;
        }
        return;
      case 5:
        if (a2) {
          goto LABEL_71;
        }
        uint64_t v29 = *v3;
        if (*v3)
        {
          uint64_t v30 = v3[1] - v29;
          uint64_t v31 = v3[3];
          if (v31 >= v30) {
            break;
          }
        }
        else
        {
          uint64_t v31 = v3[3];
          if ((v31 & 0x8000000000000000) == 0) {
            break;
          }
          uint64_t v30 = 0;
        }
        uint64_t v61 = *(unsigned __int8 *)(v29 + v31);
        uint64_t v62 = v31 + 1;
        if ((*(char *)(v29 + v31) & 0x80000000) == 0)
        {
          v3[3] = v62;
          goto LABEL_99;
        }
        if (v62 < v30)
        {
          v61 &= 0x7Fu;
          uint64_t v78 = v29 + 1;
          unint64_t v79 = 7;
          while (1)
          {
            uint64_t v80 = v31 + 2;
            v61 |= (unint64_t)(*(unsigned char *)(v78 + v31) & 0x7F) << v79;
            if ((*(unsigned char *)(v78 + v31) & 0x80) == 0) {
              break;
            }
            if (v80 < v30)
            {
              ++v31;
              BOOL v54 = v79 >= 0x39;
              v79 += 7;
              if (!v54) {
                continue;
              }
            }
            goto LABEL_163;
          }
          v3[3] = v80;
LABEL_99:
          *(void *)a3 = v61;
          char v18 = 2;
          goto LABEL_17;
        }
        break;
      case 6:
        if (a2) {
          goto LABEL_71;
        }
        uint64_t v32 = *v3;
        if (*v3)
        {
          uint64_t v33 = v3[1] - v32;
          uint64_t v34 = v3[3];
          if (v34 >= v33) {
            break;
          }
        }
        else
        {
          uint64_t v34 = v3[3];
          if ((v34 & 0x8000000000000000) == 0) {
            break;
          }
          uint64_t v33 = 0;
        }
        uint64_t v63 = *(unsigned __int8 *)(v32 + v34);
        uint64_t v64 = v34 + 1;
        if ((*(char *)(v32 + v34) & 0x80000000) == 0)
        {
          v3[3] = v64;
          goto LABEL_104;
        }
        if (v64 < v33)
        {
          v63 &= 0x7Fu;
          uint64_t v81 = v32 + 1;
          unint64_t v82 = 7;
          while (1)
          {
            uint64_t v83 = v34 + 2;
            v63 |= (unint64_t)(*(unsigned char *)(v81 + v34) & 0x7F) << v82;
            if ((*(unsigned char *)(v81 + v34) & 0x80) == 0) {
              break;
            }
            if (v83 < v33)
            {
              ++v34;
              BOOL v54 = v82 >= 0x39;
              v82 += 7;
              if (!v54) {
                continue;
              }
            }
            goto LABEL_163;
          }
          v3[3] = v83;
LABEL_104:
          *(void *)a3 = v63;
          char v18 = 3;
          goto LABEL_17;
        }
        break;
      case 7:
        if (a2) {
          goto LABEL_71;
        }
        uint64_t v35 = *v3;
        if (*v3)
        {
          uint64_t v36 = v3[1] - v35;
          uint64_t v37 = v3[3];
          if (v37 >= v36) {
            break;
          }
        }
        else
        {
          uint64_t v37 = v3[3];
          if ((v37 & 0x8000000000000000) == 0) {
            break;
          }
          uint64_t v36 = 0;
        }
        unint64_t v65 = *(unsigned __int8 *)(v35 + v37);
        uint64_t v66 = v37 + 1;
        if ((*(char *)(v35 + v37) & 0x80000000) == 0)
        {
          v3[3] = v66;
          goto LABEL_109;
        }
        if (v66 < v36)
        {
          v65 &= 0x7Fu;
          uint64_t v84 = v35 + 1;
          unint64_t v85 = 7;
          while (1)
          {
            uint64_t v86 = v37 + 2;
            v65 |= (unint64_t)(*(unsigned char *)(v84 + v37) & 0x7F) << v85;
            if ((*(unsigned char *)(v84 + v37) & 0x80) == 0) {
              break;
            }
            if (v86 < v36)
            {
              ++v37;
              BOOL v54 = v85 >= 0x39;
              v85 += 7;
              if (!v54) {
                continue;
              }
            }
            goto LABEL_163;
          }
          v3[3] = v86;
LABEL_109:
          *(void *)a3 = -(uint64_t)(v65 & 1) ^ (v65 >> 1);
          char v18 = 2;
          goto LABEL_17;
        }
        break;
      case 8:
        if (a2 != 1) {
          goto LABEL_71;
        }
        uint64_t v38 = sub_259FAF2D0();
        if (v4) {
          return;
        }
        *(void *)a3 = v38;
        char v18 = 3;
        goto LABEL_17;
      case 9:
        if (a2 != 1) {
          goto LABEL_71;
        }
        uint64_t v39 = sub_259FAF2D0();
        if (v4) {
          return;
        }
        *(void *)a3 = v39;
        char v18 = 2;
        goto LABEL_17;
      case 10:
        if (a2 != 1) {
          goto LABEL_71;
        }
        uint64_t v40 = sub_259FAF2D0();
        if (v4) {
          return;
        }
        *(void *)a3 = v40;
        char v18 = 5;
        goto LABEL_17;
      case 11:
        if (a2 != 5) {
          goto LABEL_71;
        }
        int v41 = sub_259FF3FF8();
        if (v4) {
          return;
        }
        *(_DWORD *)a3 = v41;
        char v18 = 4;
        goto LABEL_17;
      case 12:
        if (a2) {
          goto LABEL_71;
        }
        uint64_t v42 = *v3;
        if (*v3)
        {
          uint64_t v43 = v3[1] - v42;
          uint64_t v44 = v3[3];
          if (v44 >= v43) {
            break;
          }
        }
        else
        {
          uint64_t v44 = v3[3];
          if ((v44 & 0x8000000000000000) == 0) {
            break;
          }
          uint64_t v43 = 0;
        }
        uint64_t v67 = *(unsigned __int8 *)(v42 + v44);
        uint64_t v68 = v44 + 1;
        if ((*(char *)(v42 + v44) & 0x80000000) == 0)
        {
          v3[3] = v68;
          goto LABEL_114;
        }
        if (v68 < v43)
        {
          v67 &= 0x7Fu;
          uint64_t v87 = v42 + 1;
          unint64_t v88 = 7;
          while (1)
          {
            uint64_t v89 = v44 + 2;
            v67 |= (unint64_t)(*(unsigned char *)(v87 + v44) & 0x7F) << v88;
            if ((*(unsigned char *)(v87 + v44) & 0x80) == 0) {
              break;
            }
            if (v89 < v43)
            {
              ++v44;
              BOOL v54 = v88 >= 0x39;
              v88 += 7;
              if (!v54) {
                continue;
              }
            }
            goto LABEL_163;
          }
          v3[3] = v89;
LABEL_114:
          *(unsigned char *)a3 = v67 != 0;
          char v18 = 6;
          goto LABEL_17;
        }
        break;
      case 13:
        if (a2 != 2) {
          goto LABEL_71;
        }
        sub_259FAF160();
        if (v4) {
          return;
        }
        *(void *)(a3 + 24) = MEMORY[0x263F8D3E8];
        *(void *)(a3 + 32) = &protocol witness table for UnsafeRawBufferPointer;
        *(void *)a3 = v45;
        *(void *)(a3 + 8) = v46;
        char v18 = 8;
        goto LABEL_17;
      case 14:
        if (a2 != 2) {
          goto LABEL_71;
        }
        sub_259FAF160();
        if (v4) {
          return;
        }
        *(void *)(a3 + 24) = MEMORY[0x263F8D3E8];
        *(void *)(a3 + 32) = &protocol witness table for UnsafeRawBufferPointer;
        *(void *)a3 = v47;
        *(void *)(a3 + 8) = v48;
        char v18 = 9;
        goto LABEL_17;
      default:
        if (a2)
        {
LABEL_71:
          sub_259FBA9FC();
          swift_allocError();
          *(void *)uint64_t v49 = v8;
          *(void *)(v49 + 8) = v7;
          *(unsigned char *)(v49 + 16) = a2;
          char v50 = 1;
          goto LABEL_164;
        }
        uint64_t v12 = *v3;
        if (*v3)
        {
          uint64_t v13 = v3[1] - v12;
          uint64_t v14 = v3[3];
          if (v14 >= v13) {
            break;
          }
        }
        else
        {
          uint64_t v14 = v3[3];
          if ((v14 & 0x8000000000000000) == 0) {
            break;
          }
          uint64_t v13 = 0;
        }
        LODWORD(v55) = *(unsigned __int8 *)(v12 + v14);
        uint64_t v56 = v14 + 1;
        if ((*(char *)(v12 + v14) & 0x80000000) == 0)
        {
          v3[3] = v56;
          goto LABEL_84;
        }
        if (v56 < v13)
        {
          v55 &= 0x7Fu;
          uint64_t v69 = v12 + 1;
          unint64_t v70 = 7;
          while (1)
          {
            uint64_t v71 = v14 + 2;
            v55 |= (unint64_t)(*(unsigned char *)(v69 + v14) & 0x7F) << v70;
            if ((*(unsigned char *)(v69 + v14) & 0x80) == 0) {
              break;
            }
            if (v71 < v13)
            {
              ++v14;
              BOOL v54 = v70 >= 0x39;
              v70 += 7;
              if (!v54) {
                continue;
              }
            }
            goto LABEL_163;
          }
          v3[3] = v71;
LABEL_84:
          *(_DWORD *)a3 = v55;
          *(unsigned char *)(a3 + 40) = 0;
          return;
        }
        break;
    }
LABEL_163:
    sub_259FBA9FC();
    swift_allocError();
    *(void *)uint64_t v49 = 1;
    *(_OWORD *)(v49 + 8) = 0u;
    *(_OWORD *)(v49 + 24) = 0u;
    *(_OWORD *)(v49 + 40) = 0u;
    *(void *)(v49 + 56) = 0;
    char v50 = 2;
LABEL_164:
    *(unsigned char *)(v49 + 64) = v50;
    goto LABEL_165;
  }
  if (a2 != 2)
  {
LABEL_7:
    sub_259FBA9FC();
    swift_allocError();
    *(void *)uint64_t v11 = v8;
    *(void *)(v11 + 8) = v7;
    *(unsigned char *)(v11 + 16) = a2;
    *(unsigned char *)(v11 + 64) = 1;
    swift_unknownObjectRetain();
LABEL_165:
    swift_willThrow();
    return;
  }
  swift_unknownObjectRetain();
  sub_259FAF160();
  if (v4)
  {
    sub_259FAD1BC(v8, v7);
  }
  else
  {
    *(void *)a3 = v8;
    *(void *)(a3 + 8) = v7 & 0x3FFFFFFFFFFFFFFFLL;
    *(void *)(a3 + 16) = v9;
    *(void *)(a3 + 24) = v10;
    char v18 = 10;
LABEL_17:
    *(unsigned char *)(a3 + 40) = v18;
  }
}

uint64_t sub_259FAED74(uint64_t a1)
{
  return a1;
}

uint64_t destroy for UnsafeAnyValue(uint64_t result)
{
  uint64_t v1 = result;
  unsigned int v2 = *(unsigned __int8 *)(result + 40);
  if (v2 >= 0xB) {
    unsigned int v2 = *(_DWORD *)result + 11;
  }
  switch(v2)
  {
    case 7u:
      swift_unknownObjectRelease();
      uint64_t v3 = *(void *)(v1 + 16);
      uint64_t v4 = *(void *)(v1 + 24);
      char v5 = *(unsigned char *)(v1 + 32);
      uint64_t result = sub_259FB680C(v3, v4, v5);
      break;
    case 8u:
    case 9u:
      uint64_t result = __swift_destroy_boxed_opaque_existential_1(result);
      break;
    case 0xAu:
      uint64_t result = swift_unknownObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_259FAEE8C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for UnsafeAnyValue(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 0xB) {
    unsigned int v3 = *(_DWORD *)a2 + 11;
  }
  switch(v3)
  {
    case 1u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      char v4 = 1;
      goto LABEL_15;
    case 2u:
      *(void *)a1 = *(void *)a2;
      char v4 = 2;
      goto LABEL_15;
    case 3u:
      *(void *)a1 = *(void *)a2;
      char v4 = 3;
      goto LABEL_15;
    case 4u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      char v4 = 4;
      goto LABEL_15;
    case 5u:
      *(void *)a1 = *(void *)a2;
      char v4 = 5;
      goto LABEL_15;
    case 6u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      char v4 = 6;
      goto LABEL_15;
    case 7u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v5 = *(void *)(a2 + 16);
      uint64_t v6 = *(void *)(a2 + 24);
      char v7 = *(unsigned char *)(a2 + 32);
      swift_unknownObjectRetain();
      sub_259FB94E4(v5, v6, v7);
      *(void *)(a1 + 16) = v5;
      *(void *)(a1 + 24) = v6;
      *(unsigned char *)(a1 + 32) = v7;
      char v4 = 7;
      goto LABEL_15;
    case 8u:
      long long v10 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v10;
      (**(void (***)(uint64_t))(v10 - 8))(a1);
      char v4 = 8;
      goto LABEL_15;
    case 9u:
      long long v8 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v8;
      (**(void (***)(uint64_t))(v8 - 8))(a1);
      char v4 = 9;
LABEL_15:
      *(unsigned char *)(a1 + 40) = v4;
      break;
    case 0xAu:
      long long v9 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v9;
      *(unsigned char *)(a1 + 40) = 10;
      swift_unknownObjectRetain();
      break;
    default:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(unsigned char *)(a1 + 40) = 0;
      break;
  }
  return a1;
}

uint64_t sub_259FAF090(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26B324DC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_259FAF0F0(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_259FAF108()
{
  return sub_25A00EA30();
}

void sub_259FAF160()
{
  uint64_t v1 = *v0;
  if (*v0)
  {
    uint64_t v2 = v0[1] - v1;
    uint64_t v3 = v0[3];
    if (v3 >= v2) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v3 = v0[3];
    if ((v3 & 0x8000000000000000) == 0) {
      goto LABEL_17;
    }
    uint64_t v2 = 0;
  }
  LODWORD(v4) = *(unsigned __int8 *)(v1 + v3);
  uint64_t v5 = v3 + 1;
  if (*(char *)(v1 + v3) < 0)
  {
    if (v5 >= v2) {
      goto LABEL_17;
    }
    v4 &= 0x7Fu;
    unint64_t v8 = 7;
    while (1)
    {
      uint64_t v5 = v3 + 2;
      v4 |= (unint64_t)(*(unsigned char *)(v1 + 1 + v3) & 0x7F) << v8;
      if ((*(unsigned char *)(v1 + 1 + v3) & 0x80) == 0) {
        break;
      }
      if (v5 < v2)
      {
        ++v3;
        BOOL v9 = v8 >= 0x39;
        v8 += 7;
        if (!v9) {
          continue;
        }
      }
      goto LABEL_17;
    }
  }
  v0[3] = v5;
  if ((v4 & 0x80000000) != 0)
  {
LABEL_17:
    sub_259FBA9FC();
    swift_allocError();
    uint64_t v7 = 1;
    goto LABEL_18;
  }
  if (__OFSUB__(v2, v5))
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v2 - v5 < v4)
  {
    sub_259FBA9FC();
    swift_allocError();
    uint64_t v7 = 2;
LABEL_18:
    *(void *)uint64_t v6 = v7;
    *(void *)(v6 + 56) = 0;
    *(_OWORD *)(v6 + 40) = 0u;
    *(_OWORD *)(v6 + 24) = 0u;
    *(_OWORD *)(v6 + 8) = 0u;
    *(unsigned char *)(v6 + 64) = 2;
    swift_willThrow();
    return;
  }
  uint64_t v10 = v5 + v4;
  if (__OFADD__(v5, v4)) {
    goto LABEL_23;
  }
  if (v10 >= v5)
  {
    v0[3] = v10;
    return;
  }
LABEL_24:
  __break(1u);
}

uint64_t sub_259FAF2D0()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *v0;
  if (*v0)
  {
    if (v0[1] - v2 < v1)
    {
LABEL_9:
      __break(1u);
      goto LABEL_10;
    }
    uint64_t v3 = (uint64_t *)(v2 + v1);
    BOOL v4 = __OFADD__(v1, 8);
    uint64_t v5 = v1 + 8;
    if (!v4)
    {
LABEL_4:
      uint64_t result = *v3;
      v0[3] = v5;
      return result;
    }
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v1 <= 0)
  {
    uint64_t v3 = 0;
    BOOL v4 = __OFADD__(v1, 8);
    uint64_t v5 = v1 + 8;
    if (!v4) {
      goto LABEL_4;
    }
    goto LABEL_8;
  }
LABEL_10:
  __break(1u);
  return result;
}

void FieldManifest.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t FieldManifest.typeName.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FieldManifest.fieldNumber.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t FieldManifest.isRepeated.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

unint64_t FieldManifest.oneofIndex.getter()
{
  return *(unsigned int *)(v0 + 36) | ((unint64_t)*(unsigned __int8 *)(v0 + 40) << 32);
}

uint64_t FieldManifest.options.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_259FAF3C4(v1, *(void *)(v0 + 56));
  return v1;
}

uint64_t sub_259FAF3C4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_259FAE450(a1, a2);
  }
  return a1;
}

uint64_t FieldManifest.options.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_259FAF410(*(void *)(v2 + 48), *(void *)(v2 + 56));
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t sub_259FAF410(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_259FAE4A8(a1, a2);
  }
  return a1;
}

uint64_t (*FieldManifest.options.modify())()
{
  return nullsub_1;
}

unsigned char *FieldManifest.init(type:typeName:number:isRepeated:oneofIndex:options:)@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(unsigned char *)a9 = *result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(unsigned char *)(a9 + 32) = a5;
  *(_DWORD *)(a9 + 36) = a6;
  *(unsigned char *)(a9 + 40) = BYTE4(a6) & 1;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  return result;
}

uint64_t sub_259FAF478@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 56))(&v39, ObjectType, a1);
  if (v2) {
    return swift_unknownObjectRelease();
  }
  uint64_t v8 = v39;
  uint64_t v7 = v40;
  if (v40 >> 62)
  {
    if (v40 >> 62 == 1)
    {
      uint64_t v9 = v40 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v36 = swift_getObjectType();
      uint64_t v43 = v7;
      uint64_t v10 = *(void *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 8);
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 + 8) + 8);
      swift_unknownObjectRetain();
      uint64_t v12 = v10;
      uint64_t v7 = v43;
      uint64_t v37 = v11(v36, v12);
      uint64_t v14 = v13;
      sub_259FAD1BC(v8, v7);
      char v15 = 9;
    }
    else
    {
      uint64_t v37 = 0;
      uint64_t v14 = 0;
      char v15 = byte_25A010792[v39];
    }
  }
  else
  {
    uint64_t v16 = swift_getObjectType();
    uint64_t v17 = v7;
    uint64_t v18 = *(void *)(v7 + 8);
    uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8);
    uint64_t v38 = v16;
    swift_unknownObjectRetain();
    uint64_t v19 = v18;
    uint64_t v7 = v17;
    uint64_t v37 = v34(v38, v19);
    uint64_t v14 = v20;
    sub_259FAD1BC(v8, v17);
    char v15 = 12;
  }
  char v35 = v15;
  uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 48))(ObjectType, a1);
  char v31 = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 16))(ObjectType, a1);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v39, ObjectType, a1);
  uint64_t v21 = v39;
  uint64_t v43 = v7;
  uint64_t v33 = v14;
  if (v39)
  {
    uint64_t v23 = v41;
    unint64_t v22 = v42;
    uint64_t v29 = v40;
    sub_259FAE450(v41, v42);
    uint64_t v24 = v21;
    unint64_t v25 = v22;
    uint64_t v26 = v23;
    sub_259FAFD34(v24, v29, v23, v25);
  }
  else
  {
    uint64_t v26 = 0;
    unint64_t v25 = 0xF000000000000000;
  }
  int v28 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 40);
  unint64_t v30 = v25;
  sub_259FAF3C4(v26, v25);
  uint64_t v27 = v28(ObjectType, a1);
  swift_unknownObjectRelease();
  sub_259FAD1BC(v8, v43);
  uint64_t result = sub_259FAF410(v26, v30);
  *(unsigned char *)a2 = v35;
  *(void *)(a2 + 8) = v37;
  *(void *)(a2 + 16) = v33;
  *(void *)(a2 + 24) = v32;
  *(unsigned char *)(a2 + 32) = v31 & 1;
  *(_DWORD *)(a2 + 36) = v27;
  *(unsigned char *)(a2 + 40) = BYTE4(v27) & 1;
  *(void *)(a2 + 48) = v26;
  *(void *)(a2 + 56) = v30;
  return result;
}

BOOL _s17PoirotSchematizer13FieldManifestV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v3 = *((void *)a1 + 2);
  uint64_t v4 = *((void *)a1 + 3);
  int v5 = a1[32];
  int v6 = *((_DWORD *)a1 + 9);
  unsigned __int8 v7 = a1[40];
  uint64_t v8 = *((void *)a1 + 6);
  unint64_t v9 = *((void *)a1 + 7);
  uint64_t v10 = *((void *)a2 + 2);
  uint64_t v11 = *((void *)a2 + 3);
  int v12 = a2[32];
  int v13 = *((_DWORD *)a2 + 9);
  int v14 = a2[40];
  uint64_t v15 = *((void *)a2 + 6);
  unint64_t v16 = *((void *)a2 + 7);
  if (v3)
  {
    if (!v10) {
      return 0;
    }
    if (*((void *)a1 + 1) != *((void *)a2 + 1) || v3 != v10)
    {
      uint64_t v25 = *((void *)a2 + 6);
      uint64_t v26 = *((void *)a1 + 6);
      char v17 = sub_25A00EE40();
      BOOL result = 0;
      if ((v17 & 1) == 0) {
        return result;
      }
      if (v4 != v11) {
        return result;
      }
      uint64_t v15 = v25;
      uint64_t v8 = v26;
      if ((v5 ^ v12)) {
        return result;
      }
      goto LABEL_13;
    }
  }
  else if (v10)
  {
    return 0;
  }
  BOOL result = 0;
  if (v4 == v11 && ((v5 ^ v12) & 1) == 0)
  {
LABEL_13:
    if (v7)
    {
      if (!v14) {
        return 0;
      }
    }
    else
    {
      if (v6 == v13) {
        char v19 = v14;
      }
      else {
        char v19 = 1;
      }
      if (v19) {
        return 0;
      }
    }
    if (v9 >> 60 == 15)
    {
      if (v16 >> 60 == 15) {
        return 1;
      }
      goto LABEL_24;
    }
    if (v16 >> 60 == 15)
    {
LABEL_24:
      uint64_t v20 = v8;
      uint64_t v21 = v15;
      sub_259FAF3C4(v8, v9);
      sub_259FAF3C4(v21, v16);
      sub_259FAF410(v20, v9);
      sub_259FAF410(v21, v16);
      return 0;
    }
    uint64_t v22 = v8;
    uint64_t v23 = v15;
    sub_259FAF3C4(v8, v9);
    sub_259FAF3C4(v23, v16);
    char v24 = sub_259FFCCD4(v22, v9, v23, v16);
    sub_259FAF410(v23, v16);
    sub_259FAF410(v22, v9);
    return (v24 & 1) != 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FieldManifest(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for FieldManifest(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 56);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    return sub_259FAE4A8(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for FieldManifest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = (_OWORD *)(a2 + 48);
  unint64_t v5 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 48) = *v4;
  }
  else
  {
    uint64_t v6 = *(void *)v4;
    sub_259FAE450(v6, v5);
    *(void *)(a1 + 48) = v6;
    *(void *)(a1 + 56) = v5;
  }
  return a1;
}

uint64_t assignWithCopy for FieldManifest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  int v4 = *(_DWORD *)(a2 + 36);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_DWORD *)(a1 + 36) = v4;
  unint64_t v5 = (uint64_t *)(a2 + 48);
  unint64_t v6 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56) >> 60 != 15)
  {
    if (v6 >> 60 != 15)
    {
      uint64_t v8 = *v5;
      sub_259FAE450(*v5, v6);
      uint64_t v9 = *(void *)(a1 + 48);
      unint64_t v10 = *(void *)(a1 + 56);
      *(void *)(a1 + 48) = v8;
      *(void *)(a1 + 56) = v6;
      sub_259FAE4A8(v9, v10);
      return a1;
    }
    sub_259FAFB48(a1 + 48);
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v5;
    return a1;
  }
  uint64_t v7 = *v5;
  sub_259FAE450(*v5, v6);
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v6;
  return a1;
}

uint64_t sub_259FAFB48(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FieldManifest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  unint64_t v5 = (void *)(a2 + 48);
  unint64_t v6 = *(void *)(a1 + 56);
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = *(void *)(a2 + 56);
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *(void *)(a1 + 48);
      *(void *)(a1 + 48) = *v5;
      *(void *)(a1 + 56) = v7;
      sub_259FAE4A8(v8, v6);
      return a1;
    }
    sub_259FAFB48(a1 + 48);
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for FieldManifest(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FieldManifest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FieldManifest()
{
  return &type metadata for FieldManifest;
}

uint64_t sub_259FAFD34(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (result)
  {
    swift_unknownObjectRelease();
    return sub_259FAE4A8(a3, a4);
  }
  return result;
}

uint64_t MessageManifest.fields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MessageManifest.fields.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*MessageManifest.fields.modify())()
{
  return nullsub_1;
}

uint64_t MessageManifest.oneofs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MessageManifest.oneofs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*MessageManifest.oneofs.modify())()
{
  return nullsub_1;
}

uint64_t MessageManifest.options.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_259FAF3C4(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t MessageManifest.options.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_259FAF410(*(void *)(v2 + 16), *(void *)(v2 + 24));
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*MessageManifest.options.modify())()
{
  return nullsub_1;
}

unint64_t MessageManifest.init(fields:oneofs:options:)@<X0>(unint64_t result@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  if (!result) {
    uint64_t result = sub_259FB01F0(MEMORY[0x263F8EE78]);
  }
  unint64_t v9 = MEMORY[0x263F8EE78];
  if (a2) {
    unint64_t v9 = a2;
  }
  *a5 = result;
  a5[1] = v9;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

unint64_t sub_259FAFF0C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D00);
  uint64_t v2 = sub_25A00EDE0();
  unint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v21 = v2 + 64;
  swift_retain();
  unint64_t v5 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v22 = v4;
    uint64_t v6 = *(v5 - 3);
    uint64_t v7 = *(v5 - 2);
    uint64_t v8 = *(v5 - 1);
    uint64_t v9 = v5[1];
    uint64_t v23 = v5[2];
    uint64_t v24 = *v5;
    uint64_t v10 = v5[3];
    uint64_t v11 = v5[4];
    uint64_t v12 = v5[5];
    unint64_t v13 = v5[6];
    swift_bridgeObjectRetain();
    sub_259FB2BA4(v8, v24, v9, v23, v10, v11, v12, v13);
    unint64_t result = sub_259FE120C(v6, v7);
    if (v15) {
      break;
    }
    *(void *)(v21 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    unint64_t v16 = (uint64_t *)(v3[6] + 16 * result);
    *unint64_t v16 = v6;
    v16[1] = v7;
    char v17 = (uint64_t *)(v3[7] + (result << 6));
    *char v17 = v8;
    v17[1] = v24;
    v17[2] = v9;
    v17[3] = v23;
    v17[4] = v10;
    v17[5] = v11;
    v17[6] = v12;
    v17[7] = v13;
    uint64_t v18 = v3[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_11;
    }
    v3[2] = v20;
    v5 += 10;
    uint64_t v4 = v22 - 1;
    if (v22 == 1)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_259FB0094(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402CF0);
  uint64_t v2 = sub_25A00EDE0();
  unint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v20 = v2 + 64;
  swift_retain();
  unint64_t v5 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v6 = *(v5 - 1);
    uint64_t v7 = *v5;
    uint64_t v8 = v5[1];
    uint64_t v9 = v5[2];
    uint64_t v10 = v5[3];
    uint64_t v11 = v5[4];
    unint64_t v12 = v5[5];
    swift_bridgeObjectRetain();
    sub_259FB2B48(v8, v9, v10, v11, v12);
    unint64_t result = sub_259FE120C(v6, v7);
    if (v14) {
      break;
    }
    *(void *)(v20 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    char v15 = (uint64_t *)(v3[6] + 16 * result);
    *char v15 = v6;
    v15[1] = v7;
    unint64_t v16 = (uint64_t *)(v3[7] + 40 * result);
    *unint64_t v16 = v8;
    v16[1] = v9;
    v16[2] = v10;
    v16[3] = v11;
    v16[4] = v12;
    uint64_t v17 = v3[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18) {
      goto LABEL_11;
    }
    v3[2] = v19;
    v5 += 7;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_259FB01F0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D40);
  uint64_t v2 = sub_25A00EDE0();
  unint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v21 = v2 + 64;
  swift_retain();
  unint64_t v5 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v22 = v4;
    uint64_t v6 = *(v5 - 3);
    uint64_t v7 = *(v5 - 2);
    char v8 = *((unsigned char *)v5 - 8);
    uint64_t v10 = *v5;
    uint64_t v9 = v5[1];
    uint64_t v11 = v5[2];
    int v24 = *((_DWORD *)v5 + 7);
    char v25 = *((unsigned char *)v5 + 24);
    char v23 = *((unsigned char *)v5 + 32);
    uint64_t v12 = v5[5];
    unint64_t v13 = v5[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v12, v13);
    unint64_t result = sub_259FE120C(v6, v7);
    if (v15) {
      break;
    }
    *(void *)(v21 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    unint64_t v16 = (uint64_t *)(v3[6] + 16 * result);
    *unint64_t v16 = v6;
    v16[1] = v7;
    unint64_t v17 = v3[7] + (result << 6);
    *(unsigned char *)unint64_t v17 = v8;
    *(void *)(v17 + 8) = v10;
    *(void *)(v17 + 16) = v9;
    *(void *)(v17 + 24) = v11;
    *(unsigned char *)(v17 + 32) = v25;
    *(_DWORD *)(v17 + 36) = v24;
    *(unsigned char *)(v17 + 40) = v23;
    *(void *)(v17 + 48) = v12;
    *(void *)(v17 + 56) = v13;
    uint64_t v18 = v3[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_11;
    }
    v3[2] = v20;
    v5 += 10;
    uint64_t v4 = v22 - 1;
    if (v22 == 1)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_259FB0380(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D38);
  uint64_t v2 = (void *)sub_25A00EDE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *(v4 - 1);
    uint64_t v6 = *v4;
    uint64_t v7 = v4[1];
    uint64_t v8 = v4[2];
    unint64_t v9 = v4[3];
    uint64_t v10 = v4[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v8, v9);
    swift_bridgeObjectRetain();
    unint64_t result = sub_259FE120C(v5, v6);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v13 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v13 = v5;
    v13[1] = v6;
    char v14 = (uint64_t *)(v2[7] + 32 * result);
    *char v14 = v7;
    v14[1] = v8;
    v14[2] = v9;
    v14[3] = v10;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v2[2] = v17;
    v4 += 6;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_259FB04CC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D30);
  uint64_t v2 = (void *)sub_25A00EDE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = a1 + 40;
  while (1)
  {
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = *(void *)v4;
    long long v16 = *(_OWORD *)(v4 + 8);
    uint64_t v7 = *(void *)(v4 + 24);
    unint64_t v8 = *(void *)(v4 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v7, v8);
    unint64_t result = sub_259FE120C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = v2[7] + 32 * result;
    *(_OWORD *)uint64_t v12 = v16;
    *(void *)(v12 + 16) = v7;
    *(void *)(v12 + 24) = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 48;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_259FB0620(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D10);
  uint64_t v2 = (void *)sub_25A00EDE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_259FE120C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_259FB0734(uint64_t a1)
{
  return sub_259FB0774(a1, &qword_26A402D28, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_259FB2C64);
}

unint64_t sub_259FB0754(uint64_t a1)
{
  return sub_259FB0774(a1, &qword_26A402D20, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_259FB2BFC);
}

unint64_t sub_259FB0774(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v5 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v4 = sub_25A00EDE0();
  uint64_t v5 = (void *)v4;
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  uint64_t v22 = v4 + 64;
  swift_retain();
  uint64_t v7 = (unsigned __int8 *)(a1 + 80);
  while (1)
  {
    uint64_t v8 = *((void *)v7 - 6);
    uint64_t v9 = *((void *)v7 - 5);
    uint64_t v10 = *((void *)v7 - 4);
    uint64_t v11 = *((void *)v7 - 3);
    uint64_t v12 = *((void *)v7 - 2);
    uint64_t v13 = *((void *)v7 - 1);
    uint64_t v14 = *v7;
    swift_bridgeObjectRetain();
    a3(v10, v11, v12, v13, v14);
    unint64_t result = sub_259FE120C(v8, v9);
    if (v16) {
      break;
    }
    *(void *)(v22 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = (uint64_t *)(v5[6] + 16 * result);
    *uint64_t v17 = v8;
    v17[1] = v9;
    uint64_t v18 = v5[7] + 40 * result;
    *(void *)uint64_t v18 = v10;
    *(void *)(v18 + 8) = v11;
    *(void *)(v18 + 16) = v12;
    *(void *)(v18 + 24) = v13;
    *(unsigned char *)(v18 + 32) = v14;
    uint64_t v19 = v5[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v5[2] = v21;
    v7 += 56;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_259FB08D8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D18);
  uint64_t v2 = (void *)sub_25A00EDE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_259FE120C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_259FB09F4@<X0>(uint64_t *a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v7 = *a1;
  if (*a1)
  {
    uint64_t v9 = a1[1];
    uint64_t v10 = a1[2];
    unint64_t v11 = a1[3];
    uint64_t v12 = *v5;
    swift_bridgeObjectRetain_n();
    sub_259FB2A0C(v7, v9, v10, v11);
    swift_bridgeObjectRetain();
    int v20 = a2;
    uint64_t v13 = sub_259FB1528(v7, v12, a2);
    swift_bridgeObjectRelease();
    if (v4) {
      return sub_259FB2A68(v7, v9, v10, v11);
    }
    swift_bridgeObjectRelease();
    *uint64_t v5 = v13;
    sub_259FAF3C4(v10, v11);
    sub_259FB0B5C(v10, v11, v20, v19);
    sub_259FB2A68(v7, v9, v10, v11);
    sub_259FAF410(v10, v11);
    sub_259FAF410(v19[0], v19[1]);
  }
  uint64_t v15 = *v5;
  uint64_t v16 = v5[1];
  uint64_t v17 = v5[2];
  unint64_t v18 = v5[3];
  *a3 = v15;
  a3[1] = v16;
  a3[2] = v17;
  a3[3] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_259FAF3C4(v17, v18);
}

uint64_t sub_259FB0B5C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v7 = *v4;
  unint64_t v6 = v4[1];
  if (a2 >> 60 != 15)
  {
    unint64_t v8 = a2;
    if ((a2 & 0xF000000000000000) != 0xB000000000000000)
    {
      uint64_t v9 = a1;
      if (v6 >> 60 == 15)
      {
        *uint64_t v4 = a1;
        v4[1] = a2;
        *a4 = a1;
        a4[1] = a2;
        sub_259FB2AC4(a1, a2);
        return sub_259FAE450(v9, v8);
      }
      if (a3)
      {
        if (a3 == 1)
        {
          sub_259FB2AC4(a1, a2);
          sub_259FAF410(v7, v6);
          *uint64_t v4 = v9;
          v4[1] = v8;
LABEL_12:
          *a4 = v9;
          a4[1] = v8;
          uint64_t v11 = v9;
          unint64_t v12 = v8;
          return sub_259FAF3C4(v11, v12);
        }
        sub_259FB2AC4(a1, a2);
        sub_259FAF3C4(v7, v6);
        char v13 = sub_259FFCCD4(v7, v6, v9, v8);
        sub_259FAF410(v7, v6);
        if ((v13 & 1) == 0)
        {
          sub_25A00ED10();
          swift_bridgeObjectRelease();
          sub_259FB2AD8();
          swift_allocError();
          *uint64_t v14 = 0xD00000000000001FLL;
          v14[1] = 0x800000025A00F6C0;
          swift_willThrow();
          return sub_259FB2B2C(v9, v8);
        }
        sub_259FB2B2C(v9, v8);
      }
      uint64_t v9 = v7;
      unint64_t v8 = v6;
      goto LABEL_12;
    }
  }
  *a4 = v7;
  a4[1] = v6;
  uint64_t v11 = v7;
  unint64_t v12 = v6;
  return sub_259FAF3C4(v11, v12);
}

uint64_t sub_259FB0D14@<X0>(uint64_t a1@<X1>, char a2@<W2>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 16))(&v81, ObjectType, a1);
  uint64_t v8 = v81;
  if (v81)
  {
    uint64_t v10 = v83;
    unint64_t v9 = v84;
    uint64_t v11 = a1;
    uint64_t v12 = v82;
    sub_259FAE450(v83, v84);
    uint64_t v13 = v12;
    a1 = v11;
    sub_259FAFD34(v8, v13, v10, v9);
    if (a2)
    {
LABEL_3:
      sub_259FAF3C4(v10, v9);
      uint64_t v14 = (void *)sub_259FB01F0(MEMORY[0x263F8EE78]);
LABEL_22:
      uint64_t v43 = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 48))(ObjectType, a1);
      if (v4)
      {
        swift_unknownObjectRelease();
        sub_259FAF410(v10, v9);
      }
      else
      {
        uint64_t v44 = v43;
        uint64_t v78 = v14;
        int64_t v45 = *(void *)(v43 + 16);
        if (v45)
        {
          uint64_t v63 = a3;
          uint64_t v65 = v10;
          unint64_t v67 = v9;
          uint64_t v90 = (void *)MEMORY[0x263F8EE78];
          sub_259FE14E0(0, v45, 0);
          uint64_t v46 = v90;
          uint64_t v47 = (uint64_t *)(v44 + 40);
          do
          {
            uint64_t v48 = *v47;
            uint64_t v49 = swift_getObjectType();
            uint64_t v50 = *(void *)(v48 + 8);
            uint64_t v51 = *(uint64_t (**)(uint64_t, uint64_t))(v50 + 8);
            swift_unknownObjectRetain();
            uint64_t v80 = v51(v49, v50);
            uint64_t v53 = v52;
            (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v48 + 16))(&v81, v49, v48);
            uint64_t v54 = v81;
            if (v81)
            {
              uint64_t v56 = v83;
              unint64_t v55 = v84;
              uint64_t v57 = v82;
              sub_259FAE450(v83, v84);
              sub_259FAFD34(v54, v57, v56, v55);
            }
            else
            {
              uint64_t v56 = 0;
              unint64_t v55 = 0xF000000000000000;
            }
            swift_unknownObjectRelease();
            uint64_t v90 = v46;
            unint64_t v59 = v46[2];
            unint64_t v58 = v46[3];
            if (v59 >= v58 >> 1)
            {
              sub_259FE14E0(v58 > 1, v59 + 1, 1);
              uint64_t v46 = v90;
            }
            v46[2] = v59 + 1;
            uint64_t v60 = &v46[4 * v59];
            v60[4] = v80;
            v60[5] = v53;
            v60[6] = v56;
            v60[7] = v55;
            v47 += 2;
            --v45;
          }
          while (v45);
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          uint64_t v10 = v65;
          unint64_t v9 = v67;
          a3 = v63;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          uint64_t v46 = (void *)MEMORY[0x263F8EE78];
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_259FAF3C4(v10, v9);
        sub_259FAF410(v10, v9);
        *a3 = v78;
        a3[1] = v46;
        a3[2] = v10;
        a3[3] = v9;
        swift_bridgeObjectRelease();
      }
LABEL_35:
      swift_bridgeObjectRelease();
      return sub_259FAF410(v10, v9);
    }
  }
  else
  {
    uint64_t v10 = 0;
    unint64_t v9 = 0xF000000000000000;
    if (a2) {
      goto LABEL_3;
    }
  }
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 24);
  sub_259FAF3C4(v10, v9);
  uint64_t v16 = v15(ObjectType, a1);
  uint64_t v14 = (void *)sub_259FB01F0(MEMORY[0x263F8EE78]);
  uint64_t v17 = *(void *)(v16 + 16);
  if (!v17)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v62 = a3;
  uint64_t v64 = v10;
  uint64_t v69 = a1;
  unint64_t v66 = v9;
  uint64_t v68 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 56);
  swift_bridgeObjectRetain();
  unint64_t v18 = (uint64_t *)(v16 + 40);
  while (1)
  {
    uint64_t v79 = v17;
    uint64_t v23 = *(v18 - 1);
    uint64_t v24 = *v18;
    swift_bridgeObjectRetain_n();
    v68(v23, v24, ObjectType, v69);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = v64;
      unint64_t v9 = v66;
      sub_259FAF410(v64, v66);
      swift_unknownObjectRelease();
      goto LABEL_35;
    }
    sub_259FAF478(v25, (uint64_t)&v81);
    char v26 = v81;
    uint64_t v71 = v82;
    uint64_t v72 = v83;
    unint64_t v73 = v84;
    char v74 = v85;
    int v75 = v86;
    char v76 = v87;
    uint64_t v77 = v88;
    uint64_t v27 = v89;
    int v28 = v14;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v90 = v28;
    unint64_t v31 = sub_259FE120C(v23, v24);
    uint64_t v32 = v28[2];
    BOOL v33 = (v30 & 1) == 0;
    uint64_t v34 = v32 + v33;
    if (__OFADD__(v32, v33)) {
      break;
    }
    char v35 = v30;
    if (v28[3] >= v34)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_259FF9FE4();
      }
    }
    else
    {
      sub_259FF7F10(v34, isUniquelyReferenced_nonNull_native);
      unint64_t v36 = sub_259FE120C(v23, v24);
      if ((v35 & 1) != (v37 & 1)) {
        goto LABEL_38;
      }
      unint64_t v31 = v36;
    }
    uint64_t v14 = v90;
    if (v35)
    {
      unint64_t v19 = v90[7] + (v31 << 6);
      uint64_t v20 = v27;
      uint64_t v21 = *(void *)(v19 + 48);
      unint64_t v22 = *(void *)(v19 + 56);
      swift_bridgeObjectRelease();
      sub_259FAF410(v21, v22);
      *(unsigned char *)unint64_t v19 = v26;
      *(void *)(v19 + 8) = v71;
      *(void *)(v19 + 16) = v72;
      *(void *)(v19 + 24) = v73;
      *(unsigned char *)(v19 + 32) = v74;
      *(_DWORD *)(v19 + 36) = v75;
      *(unsigned char *)(v19 + 40) = v76;
      *(void *)(v19 + 48) = v77;
      *(void *)(v19 + 56) = v20;
    }
    else
    {
      v90[(v31 >> 6) + 8] |= 1 << v31;
      uint64_t v38 = (uint64_t *)(v14[6] + 16 * v31);
      *uint64_t v38 = v23;
      v38[1] = v24;
      unint64_t v39 = v14[7] + (v31 << 6);
      *(unsigned char *)unint64_t v39 = v26;
      *(void *)(v39 + 8) = v71;
      *(void *)(v39 + 16) = v72;
      *(void *)(v39 + 24) = v73;
      *(unsigned char *)(v39 + 32) = v74;
      *(_DWORD *)(v39 + 36) = v75;
      *(unsigned char *)(v39 + 40) = v76;
      *(void *)(v39 + 48) = v77;
      *(void *)(v39 + 56) = v27;
      uint64_t v40 = v14[2];
      BOOL v41 = __OFADD__(v40, 1);
      uint64_t v42 = v40 + 1;
      if (v41) {
        goto LABEL_37;
      }
      v14[2] = v42;
      swift_bridgeObjectRetain();
    }
    v18 += 2;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v4 = 0;
    --v17;
    if (v79 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v10 = v64;
      unint64_t v9 = v66;
      a3 = v62;
      a1 = v69;
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  uint64_t result = sub_25A00EF00();
  __break(1u);
  return result;
}

uint64_t MessageManifest.nextAvailableField.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 64);
  uint64_t v19 = *v0 + 64;
  uint64_t v3 = 1;
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & v2;
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v9 = 0;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v10 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    uint64_t v15 = (void *)(*(void *)(v1 + 56) + (i << 6));
    uint64_t v16 = v15[3];
    uint64_t v17 = v15[6];
    unint64_t v18 = v15[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_259FAF410(v17, v18);
    if (__OFADD__(v16, 1))
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    if (v16 + 1 > v3) {
      uint64_t v3 = v16 + 1;
    }
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_30;
    }
    if (v12 >= v7) {
      goto LABEL_28;
    }
    unint64_t v13 = *(void *)(v19 + 8 * v12);
    ++v9;
    if (!v13)
    {
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v7) {
        goto LABEL_28;
      }
      unint64_t v13 = *(void *)(v19 + 8 * v9);
      if (!v13)
      {
        int64_t v9 = v12 + 2;
        if (v12 + 2 >= v7) {
          goto LABEL_28;
        }
        unint64_t v13 = *(void *)(v19 + 8 * v9);
        if (!v13)
        {
          int64_t v9 = v12 + 3;
          if (v12 + 3 >= v7) {
            goto LABEL_28;
          }
          unint64_t v13 = *(void *)(v19 + 8 * v9);
          if (!v13)
          {
            int64_t v9 = v12 + 4;
            if (v12 + 4 >= v7) {
              goto LABEL_28;
            }
            unint64_t v13 = *(void *)(v19 + 8 * v9);
            if (!v13) {
              break;
            }
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 5;
  if (v14 >= v7)
  {
LABEL_28:
    swift_release();
    swift_bridgeObjectRelease();
    return v3;
  }
  unint64_t v13 = *(void *)(v19 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v7) {
      goto LABEL_28;
    }
    unint64_t v13 = *(void *)(v19 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_259FB1528(uint64_t a1, uint64_t a2, char a3)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = a2;
  sub_259FB15C4(a1, (uint64_t)sub_259FB1BE8, 0, isUniquelyReferenced_nonNull_native, &v10, a3);
  uint64_t v8 = v10;
  swift_bridgeObjectRelease();
  if (v3) {
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_259FB15C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5, char a6)
{
  unint64_t v98 = a5;
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v91 = a1;
  uint64_t v92 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v93 = v8;
  uint64_t v94 = 0;
  uint64_t v95 = v11 & v9;
  uint64_t v96 = a2;
  uint64_t v97 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_259FB1C74(&v81);
  uint64_t v12 = *((void *)&v81 + 1);
  if (!*((void *)&v81 + 1))
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_259FB2B40();
    return swift_release();
  }
  while (1)
  {
    uint64_t v21 = v81;
    uint64_t v79 = v81;
    uint64_t v80 = v12;
    char v22 = v82;
    uint64_t v23 = v83;
    uint64_t v14 = v85;
    char v57 = v86;
    int v58 = v87;
    char v60 = v88;
    uint64_t v61 = v84;
    uint64_t v62 = v89;
    unint64_t v63 = v90;
    uint64_t v24 = (void *)*v98;
    unint64_t v26 = sub_259FE120C(v81, v12);
    uint64_t v27 = v24[2];
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28))
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      sub_25A00EF00();
      __break(1u);
      goto LABEL_28;
    }
    char v30 = v25;
    if (v24[3] >= v29)
    {
      if ((a4 & 1) == 0) {
        sub_259FF9FE4();
      }
    }
    else
    {
      sub_259FF7F10(v29, a4 & 1);
      unint64_t v31 = sub_259FE120C(v21, v12);
      if ((v30 & 1) != (v32 & 1)) {
        goto LABEL_27;
      }
      unint64_t v26 = v31;
    }
    BOOL v33 = (void *)*v98;
    if (v30) {
      break;
    }
    v33[(v26 >> 6) + 8] |= 1 << v26;
    uint64_t v43 = (uint64_t *)(v33[6] + 16 * v26);
    *uint64_t v43 = v21;
    v43[1] = v12;
    unint64_t v44 = v33[7] + (v26 << 6);
    *(unsigned char *)unint64_t v44 = v22;
    *(void *)(v44 + 8) = v23;
    *(void *)(v44 + 16) = v61;
    *(void *)(v44 + 24) = v14;
    *(unsigned char *)(v44 + 32) = v57;
    *(_DWORD *)(v44 + 36) = v58;
    *(unsigned char *)(v44 + 40) = v60;
    *(void *)(v44 + 48) = v62;
    *(void *)(v44 + 56) = v63;
    uint64_t v45 = v33[2];
    BOOL v46 = __OFADD__(v45, 1);
    uint64_t v47 = v45 + 1;
    if (v46) {
      goto LABEL_26;
    }
    v33[2] = v47;
LABEL_8:
    sub_259FB1C74(&v81);
    uint64_t v12 = *((void *)&v81 + 1);
    a4 = 1;
    if (!*((void *)&v81 + 1)) {
      goto LABEL_5;
    }
  }
  unint64_t v34 = v33[7] + (v26 << 6);
  uint64_t v35 = *(void *)(v34 + 8);
  uint64_t v36 = *(void *)(v34 + 16);
  uint64_t v37 = *(void *)(v34 + 24);
  char v38 = *(unsigned char *)(v34 + 32);
  int v39 = *(_DWORD *)(v34 + 36);
  char v40 = *(unsigned char *)(v34 + 40);
  uint64_t v42 = *(void *)(v34 + 48);
  unint64_t v41 = *(void *)(v34 + 56);
  if (!a6)
  {
    char v56 = *(unsigned char *)v34;
    uint64_t v55 = *(void *)(v34 + 8);
    uint64_t v14 = *(void *)(v34 + 24);
    char v15 = *(unsigned char *)(v34 + 32);
    char v16 = *(unsigned char *)(v34 + 40);
    unint64_t v17 = *(void *)(v34 + 56);
    swift_bridgeObjectRetain();
    uint64_t v59 = v42;
    sub_259FAF3C4(v42, v17);
    swift_bridgeObjectRelease();
    sub_259FAF410(v62, v63);
    swift_bridgeObjectRelease();
LABEL_7:
    unint64_t v18 = v33[7] + (v26 << 6);
    uint64_t v19 = *(void *)(v18 + 48);
    unint64_t v20 = *(void *)(v18 + 56);
    swift_bridgeObjectRelease();
    sub_259FAF410(v19, v20);
    *(unsigned char *)unint64_t v18 = v56;
    *(void *)(v18 + 8) = v55;
    *(void *)(v18 + 16) = v36;
    *(void *)(v18 + 24) = v14;
    *(unsigned char *)(v18 + 32) = v15;
    *(_DWORD *)(v18 + 36) = v39;
    *(unsigned char *)(v18 + 40) = v16;
    *(void *)(v18 + 48) = v59;
    *(void *)(v18 + 56) = v17;
    goto LABEL_8;
  }
  if (a6 == 1)
  {
    swift_bridgeObjectRelease();
    char v56 = v22;
    uint64_t v55 = v23;
    uint64_t v36 = v61;
    char v15 = v57;
    int v39 = v58;
    char v16 = v60;
    uint64_t v59 = v62;
    unint64_t v17 = v63;
    goto LABEL_7;
  }
  char v56 = *(unsigned char *)v34;
  LOBYTE(v70) = *(unsigned char *)v34;
  uint64_t v55 = v35;
  uint64_t v71 = v35;
  uint64_t v72 = v36;
  uint64_t v53 = v37;
  uint64_t v73 = v37;
  int v52 = v39;
  char v74 = v38;
  int v75 = v39;
  char v51 = v40;
  char v76 = v40;
  uint64_t v77 = v42;
  unint64_t v78 = v41;
  LOBYTE(v64[0]) = v22;
  v64[1] = v23;
  v64[2] = v61;
  v64[3] = v14;
  char v65 = v57;
  int v66 = v58;
  char v67 = v60;
  uint64_t v68 = v62;
  unint64_t v69 = v63;
  unint64_t v48 = v41;
  swift_bridgeObjectRetain();
  sub_259FAF3C4(v42, v48);
  swift_bridgeObjectRetain();
  sub_259FAF3C4(v42, v48);
  swift_bridgeObjectRetain();
  sub_259FAF3C4(v62, v63);
  if (_s17PoirotSchematizer13FieldManifestV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v70, (unsigned __int8 *)v64))
  {
    swift_bridgeObjectRelease();
    sub_259FAF410(v62, v63);
    swift_bridgeObjectRelease();
    uint64_t v59 = v42;
    sub_259FAF410(v42, v48);
    unint64_t v17 = v48;
    swift_bridgeObjectRelease();
    sub_259FAF410(v62, v63);
    swift_bridgeObjectRelease();
    uint64_t v14 = v53;
    int v39 = v52;
    char v15 = v38;
    char v16 = v51;
    goto LABEL_7;
  }
  uint64_t v12 = 0xE000000000000000;
  sub_25A00ED10();
  swift_bridgeObjectRelease();
  sub_259FB2AD8();
  uint64_t v49 = swift_allocError();
  *uint64_t v50 = 0xD00000000000001ELL;
  v50[1] = 0x800000025A00F6E0;
  swift_willThrow();
  swift_bridgeObjectRelease();
  sub_259FAF410(v62, v63);
  swift_bridgeObjectRelease();
  sub_259FAF410(v42, v48);
  swift_bridgeObjectRelease();
  sub_259FAF410(v42, v48);
  v64[0] = v49;
  MEMORY[0x25A2F2990](v49);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402CE8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_259FAF410(v62, v63);
    swift_bridgeObjectRelease();
    sub_259FB2B40();
    swift_release();
    return MEMORY[0x25A2F2980](v64[0]);
  }
LABEL_28:
  uint64_t v70 = 0;
  uint64_t v71 = v12;
  sub_25A00ED10();
  sub_25A00EA80();
  sub_25A00ED90();
  sub_25A00EA80();
  uint64_t result = sub_25A00EDB0();
  __break(1u);
  return result;
}

uint64_t sub_259FB1BE8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[3];
  char v5 = *((unsigned char *)a1 + 48);
  int v6 = *((_DWORD *)a1 + 13);
  char v7 = *((unsigned char *)a1 + 56);
  uint64_t v8 = a1[8];
  unint64_t v9 = a1[9];
  *(unsigned char *)(a2 + 16) = *((unsigned char *)a1 + 16);
  *(void *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 32) = *((_OWORD *)a1 + 2);
  *(unsigned char *)(a2 + 48) = v5;
  *(_DWORD *)(a2 + 52) = v6;
  *(unsigned char *)(a2 + 56) = v7;
  *(void *)(a2 + 64) = v8;
  *(void *)(a2 + 72) = v9;
  *(void *)a2 = v2;
  *(void *)(a2 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_259FAF3C4(v8, v9);
}

void sub_259FB1C74(_OWORD *a1@<X8>)
{
  uint64_t v3 = *v1;
  int64_t v5 = v1[3];
  unint64_t v4 = v1[4];
  int64_t v6 = v5;
  if (!v4)
  {
    int64_t v21 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      return;
    }
    int64_t v22 = (unint64_t)(v1[2] + 64) >> 6;
    if (v21 < v22)
    {
      uint64_t v23 = v1[1];
      unint64_t v24 = *(void *)(v23 + 8 * v21);
      if (v24)
      {
LABEL_9:
        uint64_t v7 = (v24 - 1) & v24;
        unint64_t v8 = __clz(__rbit64(v24)) + (v21 << 6);
        int64_t v6 = v21;
        goto LABEL_3;
      }
      int64_t v25 = v5 + 2;
      int64_t v6 = v5 + 1;
      if (v5 + 2 < v22)
      {
        unint64_t v24 = *(void *)(v23 + 8 * v25);
        if (v24)
        {
LABEL_12:
          int64_t v21 = v25;
          goto LABEL_9;
        }
        int64_t v6 = v5 + 2;
        if (v5 + 3 < v22)
        {
          unint64_t v24 = *(void *)(v23 + 8 * (v5 + 3));
          if (v24)
          {
            int64_t v21 = v5 + 3;
            goto LABEL_9;
          }
          int64_t v25 = v5 + 4;
          int64_t v6 = v5 + 3;
          if (v5 + 4 < v22)
          {
            unint64_t v24 = *(void *)(v23 + 8 * v25);
            if (v24) {
              goto LABEL_12;
            }
            int64_t v21 = v5 + 5;
            int64_t v6 = v5 + 4;
            if (v5 + 5 < v22)
            {
              unint64_t v24 = *(void *)(v23 + 8 * v21);
              if (v24) {
                goto LABEL_9;
              }
              int64_t v6 = v22 - 1;
              int64_t v26 = v5 + 6;
              while (v22 != v26)
              {
                unint64_t v24 = *(void *)(v23 + 8 * v26++);
                if (v24)
                {
                  int64_t v21 = v26 - 1;
                  goto LABEL_9;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    *a1 = 0u;
    a1[1] = 0u;
    a1[2] = 0u;
    a1[3] = 0u;
    a1[4] = 0u;
    return;
  }
  uint64_t v7 = (v4 - 1) & v4;
  unint64_t v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
  unint64_t v9 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v8);
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  unint64_t v12 = *(void *)(v3 + 56) + (v8 << 6);
  LOBYTE(v9) = *(unsigned char *)v12;
  uint64_t v13 = *(void *)(v12 + 8);
  char v14 = *(unsigned char *)(v12 + 32);
  int v15 = *(_DWORD *)(v12 + 36);
  char v16 = *(unsigned char *)(v12 + 40);
  uint64_t v17 = *(void *)(v12 + 48);
  unint64_t v18 = *(void *)(v12 + 56);
  uint64_t v19 = (void (*)(void *))v1[5];
  v27[0] = v10;
  v27[1] = v11;
  char v28 = (char)v9;
  uint64_t v29 = v13;
  long long v20 = *(_OWORD *)(v12 + 16);
  v1[3] = v6;
  v1[4] = v7;
  long long v30 = v20;
  char v31 = v14;
  int v32 = v15;
  char v33 = v16;
  uint64_t v34 = v17;
  unint64_t v35 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_259FAF3C4(v17, v18);
  v19(v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FAF410(v17, v18);
}

uint64_t sub_259FB1E94@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = *v1;
  int64_t v5 = v1[3];
  unint64_t v4 = v1[4];
  int64_t v6 = v5;
  if (!v4)
  {
    int64_t v19 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      return result;
    }
    int64_t v20 = (unint64_t)(v1[2] + 64) >> 6;
    if (v19 < v20)
    {
      uint64_t v21 = v1[1];
      unint64_t v22 = *(void *)(v21 + 8 * v19);
      if (v22)
      {
LABEL_9:
        uint64_t v7 = (v22 - 1) & v22;
        unint64_t v8 = __clz(__rbit64(v22)) + (v19 << 6);
        int64_t v6 = v19;
        goto LABEL_3;
      }
      int64_t v23 = v5 + 2;
      int64_t v6 = v5 + 1;
      if (v5 + 2 < v20)
      {
        unint64_t v22 = *(void *)(v21 + 8 * v23);
        if (v22)
        {
LABEL_12:
          int64_t v19 = v23;
          goto LABEL_9;
        }
        int64_t v6 = v5 + 2;
        if (v5 + 3 < v20)
        {
          unint64_t v22 = *(void *)(v21 + 8 * (v5 + 3));
          if (v22)
          {
            int64_t v19 = v5 + 3;
            goto LABEL_9;
          }
          int64_t v23 = v5 + 4;
          int64_t v6 = v5 + 3;
          if (v5 + 4 < v20)
          {
            unint64_t v22 = *(void *)(v21 + 8 * v23);
            if (v22) {
              goto LABEL_12;
            }
            int64_t v19 = v5 + 5;
            int64_t v6 = v5 + 4;
            if (v5 + 5 < v20)
            {
              unint64_t v22 = *(void *)(v21 + 8 * v19);
              if (v22) {
                goto LABEL_9;
              }
              int64_t v6 = v20 - 1;
              int64_t v24 = v5 + 6;
              while (v20 != v24)
              {
                unint64_t v22 = *(void *)(v21 + 8 * v24++);
                if (v22)
                {
                  int64_t v19 = v24 - 1;
                  goto LABEL_9;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    *a1 = 0u;
    a1[1] = 0u;
    a1[2] = 0u;
    return result;
  }
  uint64_t v7 = (v4 - 1) & v4;
  unint64_t v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
  unint64_t v9 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v8);
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  unint64_t v12 = (uint64_t *)(*(void *)(v3 + 56) + 32 * v8);
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  unint64_t v15 = v12[2];
  uint64_t v16 = v12[3];
  v1[3] = v6;
  v1[4] = v7;
  uint64_t v17 = (void (*)(void *))v1[5];
  v25[0] = v10;
  v25[1] = v11;
  v25[2] = v13;
  v25[3] = v14;
  v25[4] = v15;
  v25[5] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_259FAF3C4(v14, v15);
  swift_bridgeObjectRetain();
  v17(v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FAF410(v14, v15);
  return swift_bridgeObjectRelease();
}

void sub_259FB2090(_OWORD *a1@<X8>)
{
  uint64_t v3 = *v1;
  int64_t v5 = v1[3];
  unint64_t v4 = v1[4];
  int64_t v6 = v5;
  if (!v4)
  {
    int64_t v18 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      return;
    }
    int64_t v19 = (unint64_t)(v1[2] + 64) >> 6;
    if (v18 < v19)
    {
      uint64_t v20 = v1[1];
      unint64_t v21 = *(void *)(v20 + 8 * v18);
      if (v21)
      {
LABEL_9:
        uint64_t v7 = (v21 - 1) & v21;
        unint64_t v8 = __clz(__rbit64(v21)) + (v18 << 6);
        int64_t v6 = v18;
        goto LABEL_3;
      }
      int64_t v22 = v5 + 2;
      int64_t v6 = v5 + 1;
      if (v5 + 2 < v19)
      {
        unint64_t v21 = *(void *)(v20 + 8 * v22);
        if (v21)
        {
LABEL_12:
          int64_t v18 = v22;
          goto LABEL_9;
        }
        int64_t v6 = v5 + 2;
        if (v5 + 3 < v19)
        {
          unint64_t v21 = *(void *)(v20 + 8 * (v5 + 3));
          if (v21)
          {
            int64_t v18 = v5 + 3;
            goto LABEL_9;
          }
          int64_t v22 = v5 + 4;
          int64_t v6 = v5 + 3;
          if (v5 + 4 < v19)
          {
            unint64_t v21 = *(void *)(v20 + 8 * v22);
            if (v21) {
              goto LABEL_12;
            }
            int64_t v18 = v5 + 5;
            int64_t v6 = v5 + 4;
            if (v5 + 5 < v19)
            {
              unint64_t v21 = *(void *)(v20 + 8 * v18);
              if (v21) {
                goto LABEL_9;
              }
              int64_t v6 = v19 - 1;
              int64_t v23 = v5 + 6;
              while (v19 != v23)
              {
                unint64_t v21 = *(void *)(v20 + 8 * v23++);
                if (v21)
                {
                  int64_t v18 = v23 - 1;
                  goto LABEL_9;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    *a1 = 0u;
    a1[1] = 0u;
    a1[2] = 0u;
    return;
  }
  uint64_t v7 = (v4 - 1) & v4;
  unint64_t v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
  unint64_t v9 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v8);
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  unint64_t v12 = (uint64_t *)(*(void *)(v3 + 56) + 32 * v8);
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  uint64_t v15 = v12[2];
  unint64_t v16 = v12[3];
  v1[3] = v6;
  v1[4] = v7;
  uint64_t v17 = (void (*)(void *))v1[5];
  v24[0] = v10;
  v24[1] = v11;
  v24[2] = v13;
  v24[3] = v14;
  v24[4] = v15;
  v24[5] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_259FAF3C4(v15, v16);
  v17(v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FAF410(v15, v16);
}

unint64_t sub_259FB228C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402CF8);
  uint64_t v3 = (void *)sub_25A00EDE0();
  uint64_t v4 = *(void *)(a1 + 32);
  long long v14 = *(_OWORD *)(a1 + 40);
  unint64_t result = sub_259FE1284(v4);
  long long v6 = v14;
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_unknownObjectRetain();
    return (unint64_t)v3;
  }
  unint64_t v8 = (_OWORD *)(a1 + 64);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v4;
    *(_OWORD *)(v3[7] + 16 * result) = v6;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    unint64_t v12 = (_OWORD *)((char *)v8 + 24);
    uint64_t v4 = *((void *)v8 - 1);
    long long v15 = *v8;
    swift_unknownObjectRetain();
    unint64_t result = sub_259FE1284(v4);
    unint64_t v8 = v12;
    long long v6 = v15;
    if (v13) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_259FB239C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402CD8);
  uint64_t v3 = (void *)sub_25A00EDE0();
  uint64_t v4 = *(void *)(a1 + 32);
  long long v15 = *(_OWORD *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 56);
  unint64_t v6 = *(void *)(a1 + 64);
  unint64_t result = sub_259FE1284(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x263F8EE80];
  }
  uint64_t v9 = (unint64_t *)(a1 + 104);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v4;
    uint64_t v10 = v3[7] + 32 * result;
    *(_OWORD *)uint64_t v10 = v15;
    *(void *)(v10 + 16) = v5;
    *(void *)(v10 + 24) = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    swift_unknownObjectRetain();
    sub_259FAE450(v5, v6);
    if (!--v1) {
      return (unint64_t)v3;
    }
    uint64_t v4 = *(v9 - 4);
    long long v15 = *(_OWORD *)(v9 - 3);
    uint64_t v5 = *(v9 - 1);
    unint64_t v6 = *v9;
    unint64_t result = sub_259FE1284(v4);
    v9 += 5;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_259FB24C8(void *a1)
{
  return sub_259FB24F8(a1, (uint64_t (*)(uint64_t))sub_259FE1284);
}

unint64_t sub_259FB24E0(void *a1)
{
  return sub_259FB24F8(a1, (uint64_t (*)(uint64_t))sub_259FE4C48);
}

unint64_t sub_259FB24F8(void *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2 = a1[2];
  if (!v2) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D08);
  uint64_t v5 = (void *)sub_25A00EDE0();
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  unint64_t v8 = a1[6];
  unint64_t result = a2(v7);
  if (v10)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x263F8EE80];
  }
  uint64_t v11 = a1 + 9;
  while (1)
  {
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v5[6] + 8 * result) = v7;
    BOOL v12 = (uint64_t *)(v5[7] + 16 * result);
    *BOOL v12 = v6;
    v12[1] = v8;
    uint64_t v13 = v5[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      break;
    }
    v5[2] = v15;
    sub_259FAE450(v6, v8);
    if (!--v2) {
      return (unint64_t)v5;
    }
    uint64_t v7 = *(v11 - 2);
    uint64_t v6 = *(v11 - 1);
    unint64_t v8 = *v11;
    unint64_t result = a2(v7);
    v11 += 3;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

BOOL _s17PoirotSchematizer15MessageManifestV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  unint64_t v6 = a2[3];
  if ((sub_259FCABF4(*a1, *a2) & 1) == 0 || (sub_259FCD684(v2, v5) & 1) == 0) {
    return 0;
  }
  if (v3 >> 60 == 15)
  {
    if (v6 >> 60 == 15) {
      return 1;
    }
    goto LABEL_7;
  }
  if (v6 >> 60 == 15)
  {
LABEL_7:
    sub_259FAF3C4(v4, v3);
    sub_259FAF3C4(v7, v6);
    sub_259FAF410(v4, v3);
    sub_259FAF410(v7, v6);
    return 0;
  }
  sub_259FAF3C4(v4, v3);
  sub_259FAF3C4(v7, v6);
  char v8 = sub_259FFCCD4(v4, v3, v7, v6);
  sub_259FAF410(v7, v6);
  sub_259FAF410(v4, v3);
  return (v8 & 1) != 0;
}

uint64_t destroy for MessageManifest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 16);
    return sub_259FAE4A8(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for MessageManifest(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2 + 2;
  unint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v4;
  }
  else
  {
    uint64_t v6 = *v4;
    sub_259FAE450(*v4, v5);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v5;
  }
  return a1;
}

void *assignWithCopy for MessageManifest(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2 + 2;
  unint64_t v5 = a2[3];
  if (a1[3] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_259FAE450(*v4, v5);
      uint64_t v8 = a1[2];
      unint64_t v9 = a1[3];
      a1[2] = v7;
      a1[3] = v5;
      sub_259FAE4A8(v8, v9);
      return a1;
    }
    sub_259FAFB48((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
    return a1;
  }
  uint64_t v6 = *v4;
  sub_259FAE450(*v4, v5);
  a1[2] = v6;
  a1[3] = v5;
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for MessageManifest(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v4 = a2 + 2;
  unint64_t v5 = a1[3];
  if (v5 >> 60 != 15)
  {
    unint64_t v6 = a2[3];
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = a1[2];
      a1[2] = *v4;
      a1[3] = v6;
      sub_259FAE4A8(v7, v5);
      return a1;
    }
    sub_259FAFB48((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageManifest(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageManifest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageManifest()
{
  return &type metadata for MessageManifest;
}

uint64_t sub_259FB2A0C(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_259FAF3C4(a3, a4);
  }
  return result;
}

uint64_t sub_259FB2A68(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_259FAF410(a3, a4);
  }
  return result;
}

uint64_t sub_259FB2AC4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11) {
    return sub_259FAF3C4(a1, a2);
  }
  return a1;
}

unint64_t sub_259FB2AD8()
{
  unint64_t result = qword_26A402CE0;
  if (!qword_26A402CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A402CE0);
  }
  return result;
}

uint64_t sub_259FB2B2C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11) {
    return sub_259FAF410(a1, a2);
  }
  return a1;
}

uint64_t sub_259FB2B40()
{
  return swift_release();
}

uint64_t sub_259FB2B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a1 < 0)
  {
    return swift_unknownObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    return sub_259FAF3C4(a4, a5);
  }
}

uint64_t sub_259FB2BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a6 < 0)
  {
    return swift_unknownObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    return sub_259FAF3C4(a7, a8);
  }
}

uint64_t sub_259FB2BFC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  if (a5)
  {
    return swift_retain();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_259FAF3C4(a3, a4);
  }
}

uint64_t sub_259FB2C64(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    return swift_retain();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_259FAF3C4(a2, a3);
    return swift_bridgeObjectRetain();
  }
}

uint64_t TypeSchema.makeValue(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = *v2;
  unint64_t v7 = v2[1];
  if (v7 >> 62)
  {
    if (v7 >> 62 == 1)
    {
      swift_unknownObjectRetain();
      sub_25A00ED10();
      swift_bridgeObjectRelease();
      *(void *)&long long v23 = 0xD000000000000024;
      *((void *)&v23 + 1) = 0x800000025A00F740;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v9 = *(void *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 8);
      char v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      swift_unknownObjectRetain();
      v10(ObjectType, v9);
      sub_259FAD1BC(v6, v7);
      sub_25A00EA80();
      swift_bridgeObjectRelease();
      sub_259FB3304();
      swift_allocError();
      *(_OWORD *)uint64_t v11 = v23;
      *(unsigned char *)(v11 + 16) = 6;
LABEL_4:
      swift_willThrow();
      return sub_259FAD1BC(v6, v7);
    }
    switch(v6)
    {
      case 1:
      case 3:
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        uint64_t result = sub_25A00E3A0();
        if (!v3)
        {
          *(void *)a2 = v23;
          *(void *)(a2 + 8) = 0;
          *(void *)(a2 + 16) = 0;
          *(void *)(a2 + 24) = 0;
          __int16 v15 = 256;
          goto LABEL_7;
        }
        break;
      case 5:
      case 7:
      case 9:
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        uint64_t result = sub_25A00E3A0();
        if (!v3)
        {
          *(void *)a2 = v23;
          *(void *)(a2 + 8) = 0;
          *(void *)(a2 + 16) = 0;
          *(void *)(a2 + 24) = 0;
          __int16 v15 = 512;
          goto LABEL_7;
        }
        break;
      case 6:
      case 8:
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        uint64_t result = sub_25A00E3A0();
        if (!v3)
        {
          *(void *)a2 = v23;
          *(void *)(a2 + 8) = 0;
          *(void *)(a2 + 16) = 0;
          *(void *)(a2 + 24) = 0;
          __int16 v15 = 768;
          goto LABEL_7;
        }
        break;
      case 10:
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        uint64_t result = sub_25A00E3A0();
        if (!v3)
        {
          *(void *)a2 = v23;
          *(void *)(a2 + 8) = 0;
          *(void *)(a2 + 16) = 0;
          *(void *)(a2 + 24) = 0;
          __int16 v15 = 1280;
          goto LABEL_7;
        }
        break;
      case 11:
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        uint64_t result = sub_25A00E3A0();
        if (!v3)
        {
          *(void *)a2 = v23;
          *(void *)(a2 + 8) = 0;
          *(void *)(a2 + 16) = 0;
          *(void *)(a2 + 24) = 0;
          __int16 v15 = 1024;
          goto LABEL_7;
        }
        break;
      case 12:
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        uint64_t result = sub_25A00E3A0();
        if (!v3)
        {
          *(void *)a2 = v23;
          *(void *)(a2 + 8) = 0;
          *(void *)(a2 + 16) = 0;
          *(void *)(a2 + 24) = 0;
          __int16 v15 = 1536;
          goto LABEL_7;
        }
        break;
      case 13:
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        uint64_t result = sub_25A00E3A0();
        if (!v3)
        {
          uint64_t v19 = *((void *)&v23 + 1);
          *(void *)a2 = v23;
          *(void *)(a2 + 8) = v19;
          *(void *)(a2 + 16) = 0;
          *(void *)(a2 + 24) = 0;
          __int16 v15 = 2048;
          goto LABEL_7;
        }
        break;
      case 14:
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        uint64_t result = sub_25A00E3A0();
        if (!v3)
        {
          *(_OWORD *)a2 = v23;
          *(void *)(a2 + 16) = 0;
          *(void *)(a2 + 24) = 0;
          __int16 v15 = 2304;
          goto LABEL_7;
        }
        break;
      default:
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        uint64_t result = sub_25A00E3A0();
        if (!v3)
        {
          *(void *)a2 = v23;
          *(void *)(a2 + 8) = 0;
          *(void *)(a2 + 16) = 0;
          *(void *)(a2 + 24) = 0;
          *(_WORD *)(a2 + 32) = 0;
        }
        break;
    }
  }
  else
  {
    sub_259FB3358((uint64_t)a1, (uint64_t)&v23);
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D50);
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      uint64_t v13 = v22[0];
      uint64_t v14 = v22[1];
      *(void *)a2 = v6;
      *(void *)(a2 + 8) = v7;
      *(void *)(a2 + 16) = v13;
      *(void *)(a2 + 24) = v14;
      __int16 v15 = 1792;
LABEL_7:
      *(_WORD *)(a2 + 32) = v15;
    }
    else
    {
      sub_259FB3358((uint64_t)a1, (uint64_t)v22);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D58);
      if (!swift_dynamicCast())
      {
        uint64_t v21 = 0;
        memset(v20, 0, sizeof(v20));
        sub_259FB33BC((uint64_t)v20);
        *(void *)&long long v23 = 0;
        *((void *)&v23 + 1) = 0xE000000000000000;
        sub_25A00ED10();
        swift_bridgeObjectRelease();
        *(void *)&long long v23 = 0xD000000000000025;
        *((void *)&v23 + 1) = 0x800000025A00F770;
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        swift_getDynamicType();
        sub_25A00EFE0();
        sub_25A00EA80();
        swift_bridgeObjectRelease();
        long long v17 = v23;
        sub_259FB3304();
        swift_allocError();
        *(_OWORD *)uint64_t v18 = v17;
        *(unsigned char *)(v18 + 16) = 6;
        goto LABEL_4;
      }
      sub_259FAF0F0(v20, (uint64_t)&v23);
      __swift_project_boxed_opaque_existential_1(&v23, v24);
      uint64_t v16 = sub_25A00ECA0();
      *(void *)a2 = v6;
      *(void *)(a2 + 8) = v7;
      *(void *)(a2 + 16) = v16;
      *(void *)(a2 + 24) = 0;
      *(_WORD *)(a2 + 32) = 1793;
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
    }
  }
  return result;
}

unint64_t sub_259FB3304()
{
  unint64_t result = qword_26A402D48;
  if (!qword_26A402D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A402D48);
  }
  return result;
}

uint64_t sub_259FB3358(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_259FB33BC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OneofSchema.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t))(*(void *)(v1 + 8) + 8))(ObjectType);
}

uint64_t OneofSchema.allFieldNumbers.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(ObjectType, v1);
}

uint64_t OneofSchema.allFieldNames.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 32))(ObjectType, v1);
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> OneofSchema.fieldName(forNumber:)(Swift::Int forNumber)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (*(uint64_t (**)(Swift::Int, uint64_t, uint64_t))(v3 + 40))(forNumber, ObjectType, v3);
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

Swift::Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> OneofSchema.fieldNumber(forName:)(Swift::String forName)
{
  object = forName._object;
  uint64_t countAndFlagsBits = forName._countAndFlagsBits;
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v4 + 48))(countAndFlagsBits, object, ObjectType, v4);
}

uint64_t OneofSchemaDescribing.asPublic()@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  *a2 = v2;
  a2[1] = a1;
  return swift_unknownObjectRetain();
}

_OWORD *initializeBufferWithCopyOfBuffer for OneofSchema(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for OneofSchema()
{
  return swift_unknownObjectRelease();
}

void *assignWithCopy for OneofSchema(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v3;
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *assignWithTake for OneofSchema(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for OneofSchema(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OneofSchema(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OneofSchema()
{
  return &type metadata for OneofSchema;
}

uint64_t dispatch thunk of OneofSchemaDescribing.options.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of OneofSchemaDescribing.allFieldNumbers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of OneofSchemaDescribing.allFieldNames.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of OneofSchemaDescribing.fieldName(forNumber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of OneofSchemaDescribing.fieldNumber(forName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_259FB37C8(unint64_t a1)
{
  unint64_t v1 = a1;
  v5[5] = *MEMORY[0x263EF8340];
  if (a1 >= 0x80)
  {
    do
    {
      uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D78);
      v5[3] = v2;
      v5[4] = sub_259FB3DA8(&qword_26A402D80, &qword_26A402D78);
      LOBYTE(v5[0]) = v1 | 0x80;
      __swift_project_boxed_opaque_existential_1(v5, v2);
      sub_25A00E320();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
      a1 = v1 >> 7;
      unint64_t v3 = v1 >> 14;
      v1 >>= 7;
    }
    while (v3);
  }
  return sub_259FB3924(a1);
}

uint64_t sub_259FB3924(char a1)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D78);
  uint64_t v5 = sub_259FB3DA8(&qword_26A402D80, &qword_26A402D78);
  LOBYTE(v3[0]) = a1;
  __swift_project_boxed_opaque_existential_1(v3, v4);
  sub_25A00E320();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

uint64_t sub_259FB3A4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  v14[3] = MEMORY[0x263F8D3E8];
  v14[4] = MEMORY[0x263F07B80];
  v14[0] = a1;
  v14[1] = a2;
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v14, MEMORY[0x263F8D3E8]);
  uint64_t v5 = (unsigned char *)*v4;
  if (*v4 && (uint64_t v6 = (unsigned char *)v4[1], v7 = v6 - v5, v6 != v5))
  {
    if (v7 <= 14)
    {
      uint64_t v8 = sub_259FC3B50(v5, v6);
      unint64_t v9 = v12 & 0xFFFFFFFFFFFFFFLL;
    }
    else if ((unint64_t)v7 >= 0x7FFFFFFF)
    {
      uint64_t v8 = sub_259FC3C98((uint64_t)v5, (uint64_t)v6);
      unint64_t v9 = v13 | 0x8000000000000000;
    }
    else
    {
      uint64_t v8 = sub_259FC3C14((uint64_t)v5, (uint64_t)v6);
      unint64_t v9 = v11 | 0x4000000000000000;
    }
  }
  else
  {
    uint64_t v8 = 0;
    unint64_t v9 = 0xC000000000000000;
  }
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  *a3 = v8;
  a3[1] = v9;
  return result;
}

uint64_t sub_259FB3B18(uint64_t a1, uint64_t a2)
{
  return sub_259FB3B30(a1, a2);
}

uint64_t sub_259FB3B30(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = a2 - a1;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D68);
  uint64_t v7 = sub_259FB3DA8(&qword_26A402D70, &qword_26A402D68);
  v5[0] = a1;
  v5[1] = v3;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  sub_25A00E330();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

uint64_t sub_259FB3BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  unint64_t v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *))(v7 + 16))(v9);
  unint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  sub_259FB37C8(v10);
  uint64_t v13 = a2;
  (*(void (**)(uint64_t (*)(uint64_t, uint64_t), unsigned char *, uint64_t, uint64_t, uint64_t))(a4 + 32))(sub_259FB3D8C, v12, MEMORY[0x263F8EE60] + 8, a3, a4);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, a3);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_259FB3D8C(uint64_t a1, uint64_t a2)
{
  return sub_259FB3B30(a1, a2);
}

uint64_t sub_259FB3DA8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_259FB3DEC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = *a1;
  uint64_t v29 = a1[1];
  unint64_t v7 = a1[3];
  uint64_t v30 = a1[2];
  *(void *)(v4 + 32) = a2;
  swift_bridgeObjectRetain_n();
  swift_retain();
  *(void *)(v4 + 40) = sub_259FD34C8(a2);
  *(void *)&v31[0] = MEMORY[0x263F8EE88];
  uint64_t v8 = a2 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a2 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v14 << 6);
      goto LABEL_5;
    }
    int64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v17 >= v12) {
      goto LABEL_25;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v14;
    if (!v18)
    {
      int64_t v14 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_25;
      }
      unint64_t v18 = *(void *)(v8 + 8 * v14);
      if (!v18)
      {
        int64_t v14 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_25;
        }
        unint64_t v18 = *(void *)(v8 + 8 * v14);
        if (!v18)
        {
          int64_t v14 = v17 + 3;
          if (v17 + 3 >= v12) {
            goto LABEL_25;
          }
          unint64_t v18 = *(void *)(v8 + 8 * v14);
          if (!v18)
          {
            int64_t v14 = v17 + 4;
            if (v17 + 4 >= v12) {
              goto LABEL_25;
            }
            unint64_t v18 = *(void *)(v8 + 8 * v14);
            if (!v18)
            {
              int64_t v19 = v17 + 5;
              if (v19 >= v12)
              {
LABEL_25:
                swift_release();
                swift_bridgeObjectRelease();
                *(void *)(v4 + 48) = *(void *)&v31[0];
                if (v7 >> 60 == 15)
                {
                  swift_unknownObjectRelease();
                  long long v20 = 0uLL;
                  long long v21 = 0uLL;
                  uint64_t v22 = v30;
                  goto LABEL_31;
                }
                uint64_t ObjectType = swift_getObjectType();
                uint64_t v22 = v30;
                sub_259FAE450(v30, v7);
                if (sub_259FD0668(ObjectType, a4))
                {
                  sub_259FD0684(ObjectType, a4);
                  if (v5)
                  {
                    swift_bridgeObjectRelease();
                    swift_release();
                    swift_unknownObjectRelease();
                    sub_259FAF410(v30, v7);
                    sub_259FAF410(v30, v7);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_deallocPartialClassInstance();
                    return v4;
                  }
                  uint64_t v25 = v24;
                  uint64_t v26 = swift_getObjectType();
                  (*(void (**)(_OWORD *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t))(v25 + 80))(v31, v30, v7, v26, v25);
                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();
                  sub_259FAF410(v30, v7);
                  long long v20 = v31[0];
                  long long v21 = v31[1];
                }
                else
                {
                  swift_unknownObjectRelease();
                  sub_259FAF410(v30, v7);
                  long long v20 = 0uLL;
                  long long v21 = 0uLL;
                }
LABEL_31:
                *(_OWORD *)(v4 + 56) = v20;
                *(_OWORD *)(v4 + 72) = v21;
                swift_release();
                *(void *)(v4 + 16) = v28;
                *(void *)(v4 + 24) = v29;
                sub_259FAF410(v22, v7);
                return v4;
              }
              unint64_t v18 = *(void *)(v8 + 8 * v19);
              if (!v18)
              {
                while (1)
                {
                  int64_t v14 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_35;
                  }
                  if (v14 >= v12) {
                    goto LABEL_25;
                  }
                  unint64_t v18 = *(void *)(v8 + 8 * v14);
                  ++v19;
                  if (v18) {
                    goto LABEL_24;
                  }
                }
              }
              int64_t v14 = v19;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_5:
    uint64_t result = sub_259FC6888(&v32, *(void *)(*(void *)(a2 + 56) + 8 * v16));
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

unint64_t sub_259FB41A8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 32);
  if (!*(void *)(v5 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_259FE120C(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    sub_25A00ED10();
    swift_bridgeObjectRelease();
    sub_25A00EA80();
    unint64_t v8 = 0x800000025A00F800;
    sub_259FB3304();
    swift_allocError();
    *(void *)uint64_t v9 = 0xD00000000000001BLL;
    *(void *)(v9 + 8) = 0x800000025A00F800;
    *(unsigned char *)(v9 + 16) = 3;
    swift_willThrow();
    return v8;
  }
  unint64_t v8 = *(void *)(*(void *)(v5 + 56) + 8 * v6);
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_259FB42A8(unint64_t result)
{
  int64_t v2 = 0;
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v3 + 64;
  unint64_t v7 = v5 & *(void *)(v3 + 64);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v2 + 1;
    if (__OFADD__(v2, 1)) {
      break;
    }
    if (v11 >= v8) {
      goto LABEL_26;
    }
    unint64_t v12 = *(void *)(v6 + 8 * v11);
    ++v2;
    if (!v12)
    {
      int64_t v2 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_26;
      }
      unint64_t v12 = *(void *)(v6 + 8 * v2);
      if (!v12)
      {
        int64_t v2 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_26;
        }
        unint64_t v12 = *(void *)(v6 + 8 * v2);
        if (!v12)
        {
          int64_t v2 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_26;
          }
          unint64_t v12 = *(void *)(v6 + 8 * v2);
          if (!v12)
          {
            int64_t v2 = v11 + 4;
            if (v11 + 4 >= v8) {
              goto LABEL_26;
            }
            unint64_t v12 = *(void *)(v6 + 8 * v2);
            if (!v12)
            {
              int64_t v13 = v11 + 5;
              if (v13 >= v8)
              {
LABEL_26:
                sub_25A00ED10();
                swift_bridgeObjectRelease();
                sub_25A00EE30();
                sub_25A00EA80();
                swift_bridgeObjectRelease();
                unint64_t v14 = 0xD000000000000020;
                sub_259FB3304();
                swift_allocError();
                *(void *)uint64_t v15 = 0xD000000000000020;
                *(void *)(v15 + 8) = 0x800000025A00F820;
                *(unsigned char *)(v15 + 16) = 3;
                swift_willThrow();
                return v14;
              }
              unint64_t v12 = *(void *)(v6 + 8 * v13);
              if (!v12)
              {
                while (1)
                {
                  int64_t v2 = v13 + 1;
                  if (__OFADD__(v13, 1)) {
                    goto LABEL_29;
                  }
                  if (v2 >= v8) {
                    goto LABEL_26;
                  }
                  unint64_t v12 = *(void *)(v6 + 8 * v2);
                  ++v13;
                  if (v12) {
                    goto LABEL_24;
                  }
                }
              }
              int64_t v2 = v13;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v2 << 6);
LABEL_5:
    if (*(void *)(*(void *)(v3 + 56) + 8 * v10) == result)
    {
      unint64_t v14 = *(void *)(*(void *)(v3 + 48) + 16 * v10);
      swift_bridgeObjectRetain();
      return v14;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_259FB44C8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  unint64_t v4 = v0[10];
  return sub_259FAFD34(v1, v2, v3, v4);
}

uint64_t sub_259FB450C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FAFD34(*(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80));
  return MEMORY[0x270FA0228](v0, 88, 7);
}

uint64_t type metadata accessor for ProtoOneOfSchema()
{
  return self;
}

uint64_t sub_259FB458C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[7];
  uint64_t v3 = v1[8];
  uint64_t v4 = v1[9];
  unint64_t v5 = v1[10];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_259FB45E0(v2, v3, v4, v5);
}

uint64_t sub_259FB45A0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_259FB45A8()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_259FB45B0(unint64_t a1)
{
  return sub_259FB42A8(a1);
}

unint64_t sub_259FB45C8(uint64_t a1, uint64_t a2)
{
  return sub_259FB41A8(a1, a2);
}

uint64_t sub_259FB45E0(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (result)
  {
    swift_unknownObjectRetain();
    return sub_259FAE450(a3, a4);
  }
  return result;
}

uint64_t SchemaStore.impl.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SchemaStore.allMessageNames.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(ObjectType, v1);
}

uint64_t SchemaStore.allEnumNames.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(ObjectType, v1);
}

uint64_t SchemaStore.messageSchema(withName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v8 = *(void *)(v3 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 24))(a1, a2, ObjectType, v8);
  if (!v4)
  {
    uint64_t v12 = v11;
    swift_getObjectType();
    MessageSchemaDescribing.asPublic()(v12, a3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t SchemaStore.enumSchema(withName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v8 = *(void *)(v3 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 32))(a1, a2, ObjectType, v8);
  if (!v4)
  {
    uint64_t v12 = v11;
    swift_getObjectType();
    EnumSchemaDescribing.asPublic()(v12, a3);
    return swift_unknownObjectRelease();
  }
  return result;
}

ValueMetadata *type metadata accessor for SchemaStore()
{
  return &type metadata for SchemaStore;
}

uint64_t MessageSchema.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t))(*(void *)(v1 + 8) + 8))(ObjectType);
}

uint64_t MessageSchemaDescribing.asPublic()@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  *a2 = v2;
  a2[1] = a1;
  return swift_unknownObjectRetain();
}

uint64_t MessageSchema.impl.getter()
{
  return swift_unknownObjectRetain();
}

id MessageSchema.options.getter()
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v1 = sub_25A00E9E0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v5 + 16))(&v24, ObjectType, v5);
  uint64_t v7 = v24;
  if (!(void)v24) {
    return 0;
  }
  uint64_t v9 = *((void *)&v24 + 1);
  uint64_t v8 = v25;
  unint64_t v10 = v26;
  uint64_t v25 = swift_getObjectType();
  unint64_t v26 = MEMORY[0x263F8D310];
  uint64_t v27 = v9;
  uint64_t v28 = sub_259FB4FE0;
  uint64_t v29 = 0;
  uint64_t v30 = v7;
  sub_25A00E340();
  sub_25A00E9D0();
  uint64_t v11 = sub_25A00E9B0();
  unint64_t v13 = v12;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v13 >> 60 == 15)
  {
    sub_259FAFD34(v7, v9, v8, v10);
    return 0;
  }
  uint64_t v15 = self;
  uint64_t v16 = v11;
  int64_t v17 = (void *)sub_25A00E350();
  v22[0] = 0;
  id v18 = objc_msgSend(v15, sel_JSONObjectWithData_options_error_, v17, 0, v22);

  id v19 = v22[0];
  if (!v18)
  {
    long long v20 = v19;
    uint64_t v21 = sub_25A00E2F0();

    swift_willThrow();
    sub_259FAF410(v16, v13);
    sub_259FAFD34(v7, v9, v8, v10);
    MEMORY[0x25A2F2980](v21);
    return 0;
  }
  sub_25A00ECB0();
  sub_259FAF410(v16, v13);
  swift_unknownObjectRelease();
  sub_259FAFD34(v7, v9, v8, v10);
  sub_259FB5020(v23, &v24);
  sub_259FB5020(&v24, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D88);
  if (swift_dynamicCast()) {
    return v22[0];
  }
  else {
    return 0;
  }
}

uint64_t MessageSchema.allFieldNames.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(ObjectType, v1);
}

uint64_t MessageSchema.allOneofNames.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 32))(ObjectType, v1);
}

uint64_t MessageSchema.fieldSchema(withName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v8 = *(void *)(v3 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, a2, ObjectType, v8);
  if (!v4)
  {
    uint64_t v12 = v11;
    swift_getObjectType();
    FieldSchemaDescribing.asPublic()(v12, a3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t MessageSchema.fieldSchema(withNumber:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v6 = *(void *)(v2 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 64))(a1, ObjectType, v6);
  if (!v3)
  {
    uint64_t v10 = v9;
    swift_getObjectType();
    FieldSchemaDescribing.asPublic()(v10, a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t MessageSchema.oneof(withName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v8 = *(void *)(v3 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 72))(a1, a2, ObjectType, v8);
  if (!v4)
  {
    uint64_t v12 = v11;
    swift_getObjectType();
    OneofSchemaDescribing.asPublic()(v12, a3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t MessageSchema.schematize(data:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 80))(a1, a2, ObjectType, v5);
}

uint64_t MessageSchemaDescribing.schematizing<A>(data:block:)()
{
  return sub_25A00E340();
}

void *sub_259FB4F3C(uint64_t a1, uint64_t a2, void (*a3)(_OWORD *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = (*(void *(**)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 88))(v12, a1, a2, a6, a8);
  if (!v8)
  {
    v11[0] = v12[0];
    v11[1] = v12[1];
    a3(v11);
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_259FB4FE0@<X0>(Swift::String *a1@<X8>)
{
  Swift::String v3 = UnsafeSchematizedData.asJSON()();
  uint64_t result = v3._countAndFlagsBits;
  if (!v4) {
    *a1 = v3;
  }
  return result;
}

_OWORD *sub_259FB5020(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void *sub_259FB5030(uint64_t a1, uint64_t a2)
{
  return sub_259FB4F3C(a1, a2, *(void (**)(_OWORD *))(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

ValueMetadata *type metadata accessor for MessageSchema()
{
  return &type metadata for MessageSchema;
}

uint64_t dispatch thunk of MessageSchemaDescribing.options.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MessageSchemaDescribing.allFieldNames.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MessageSchemaDescribing.allOneofNames.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MessageSchemaDescribing.getAllFields()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MessageSchemaDescribing.getAllOneofs()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of MessageSchemaDescribing.fieldSchema(withName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of MessageSchemaDescribing.fieldSchema(withNumber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of MessageSchemaDescribing.oneof(withName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of MessageSchemaDescribing.schematize(data:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of MessageSchemaDescribing.schematize(unsafeBuffer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t dispatch thunk of MessageSchemaDescribing.makeSchematizedData(constructor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t sub_259FB51E0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 32, 7);
}

uint64_t type metadata accessor for ProtoBaseSchema()
{
  return self;
}

uint64_t sub_259FB523C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_259FB526C()
{
  return 0;
}

uint64_t sub_259FB5278(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v28 = MEMORY[0x263F8EE78];
  sub_259FE15A4(0, v1, 0);
  uint64_t v2 = v28;
  uint64_t result = sub_25A005144(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v23 = v1;
  int v24 = v5;
  uint64_t v25 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v26 = v7;
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v6);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    uint64_t v27 = *(void *)(*(void *)(a1 + 56) + 8 * v6);
    unint64_t v15 = *(void *)(v28 + 16);
    unint64_t v16 = *(void *)(v28 + 24);
    uint64_t result = swift_bridgeObjectRetain();
    if (v15 >= v16 >> 1) {
      uint64_t result = sub_259FE15A4(v16 > 1, v15 + 1, 1);
    }
    *(void *)(v28 + 16) = v15 + 1;
    int64_t v17 = (void *)(v28 + 24 * v15);
    v17[4] = v13;
    v17[5] = v14;
    v17[6] = v27;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v18 = *(void *)(v25 + 8 * v11);
    if ((v18 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v24;
    if (*(_DWORD *)(a1 + 36) != v24) {
      goto LABEL_27;
    }
    unint64_t v19 = v18 & (-2 << (v6 & 0x3F));
    if (v19)
    {
      int64_t v9 = __clz(__rbit64(v19)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v23;
    }
    else
    {
      unint64_t v20 = v11 + 1;
      unint64_t v21 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v23;
      if (v11 + 1 < v21)
      {
        unint64_t v22 = *(void *)(v25 + 8 * v20);
        if (v22)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v22)) + (v20 << 6);
        }
        else
        {
          while (v21 - 2 != v11)
          {
            unint64_t v22 = *(void *)(a1 + 80 + 8 * v11++);
            if (v22)
            {
              unint64_t v20 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v26 + 1;
    uint64_t v6 = v9;
    if (v26 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_259FB5498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(a6 + 24))(0xD000000000000028, 0x800000025A00F5A0, ObjectType, a6);
  if (!v7)
  {
    *(void *)&long long v25 = result;
    *((void *)&v25 + 1) = v17;
    uint64_t v26 = sub_25A00E950();
    swift_bridgeObjectRetain();
    SchematizedDataComposer.subscript.setter(a1, a2, 1701667182, 0xE400000000000000);
    v29[0] = a3;
    memset(&v29[1], 0, 24);
    __int16 v30 = 0;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v21 = v26;
    sub_259FFB7FC((uint64_t)v29, 0x7265626D756ELL, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    if (a5 >> 60 == 15)
    {
      sub_259FFB0CC(0x736E6F6974706FLL, 0xE700000000000000, (uint64_t)&v21);
      sub_259FB66F8(v21, *((unint64_t *)&v21 + 1), v22, v23, v24);
      uint64_t v19 = v26;
    }
    else
    {
      v27[0] = a4;
      v27[1] = a5;
      void v27[2] = 0;
      v27[3] = 0;
      __int16 v28 = 2304;
      sub_259FAE450(a4, a5);
      char v20 = swift_isUniquelyReferenced_nonNull_native();
      sub_259FFB7FC((uint64_t)v27, 0x736E6F6974706FLL, 0xE700000000000000, v20);
      uint64_t v19 = v26;
      swift_bridgeObjectRelease();
    }
    long long v21 = v25;
    uint64_t v22 = v19;
    SchematizedDataComposer.compose()(a7);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_259FB56C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7 = *v4;
  uint64_t v8 = v4[1];
  unint64_t v10 = v4[2];
  uint64_t v9 = v4[3];
  *(void *)&long long v27 = sub_259FB5278(v7);
  swift_bridgeObjectRetain();
  sub_259FB5A00((void **)&v27);
  if (v5)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = v27;
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v8, v10);
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_259FB6440(v11, v7, v8, v10, v9);
    swift_bridgeObjectRelease();
    sub_259FAF410(v8, v10);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v14 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(a3 + 24))(0xD000000000000023, 0x800000025A00F4F0, ObjectType, a3);
    uint64_t v16 = v15;
    uint64_t v17 = sub_25A00E950();
    *(void *)&long long v31 = v14;
    *((void *)&v31 + 1) = v16;
    uint64_t v32 = v17;
    swift_bridgeObjectRetain();
    uint64_t v18 = SchematizedDataComposer.subscript.setter(a1, a2, 1701667182, 0xE400000000000000);
    MEMORY[0x270FA5388](v18);
    uint64_t v19 = sub_259FB6598(v12, (void (*)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))sub_259FB657C);
    swift_bridgeObjectRelease();
    SchematizedDataComposer.subscript.setter(v19, 0x65756C6176, 0xE500000000000000);
    if (v10 >> 60 == 15)
    {
      sub_259FFB0CC(0x736E6F6974706FLL, 0xE700000000000000, (uint64_t)&v27);
      sub_259FB66F8(v27, *((unint64_t *)&v27 + 1), v28, v29, v30);
      uint64_t v20 = v32;
    }
    else
    {
      v33[0] = v8;
      v33[1] = v10;
      v33[2] = 0;
      v33[3] = 0;
      __int16 v34 = 2304;
      sub_259FAE450(v8, v10);
      uint64_t v21 = v32;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v27 = v21;
      sub_259FFB7FC((uint64_t)v33, 0x736E6F6974706FLL, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
      uint64_t v20 = v27;
      swift_bridgeObjectRelease();
    }
    long long v27 = v31;
    uint64_t v28 = v20;
    SchematizedDataComposer.compose()(a4);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_259FB5A00(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_25A005108(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_259FB5A6C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_259FB5A6C(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_25A00EE20();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v88 = 0;
      uint64_t v89 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v91 = *(void *)(v89 + 24 * i + 16);
        uint64_t v92 = v88;
        do
        {
          uint64_t v93 = v89 + v92;
          if (v91 >= *(void *)(v89 + v92 + 16)) {
            break;
          }
          if (!v89) {
            goto LABEL_140;
          }
          uint64_t v94 = *(void *)(v93 + 24);
          uint64_t v95 = (void *)(v89 + v92);
          uint64_t v96 = *(void *)(v89 + v92 + 32);
          *(_OWORD *)(v93 + 24) = *(_OWORD *)v93;
          uint64_t result = *(void *)(v93 + 16);
          *(void *)(v93 + 40) = result;
          void *v95 = v94;
          v95[1] = v96;
          *(void *)(v93 + 16) = v91;
          v92 -= 24;
        }
        while (v92 != -24);
        v88 += 24;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v6 = result;
  uint64_t v105 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v12 = (char *)MEMORY[0x263F8EE78];
LABEL_102:
      uint64_t v97 = v12;
      uint64_t v107 = v9;
      if (v13 >= 2)
      {
        uint64_t v98 = *v105;
        do
        {
          unint64_t v99 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_131;
          }
          if (!v98) {
            goto LABEL_144;
          }
          uint64_t v100 = v97;
          uint64_t v101 = *(void *)&v97[16 * v99 + 32];
          uint64_t v102 = *(void *)&v97[16 * v13 + 24];
          sub_259FB6180((char *)(v98 + 24 * v101), (char *)(v98 + 24 * *(void *)&v97[16 * v13 + 16]), v98 + 24 * v102, __dst);
          if (v1) {
            break;
          }
          if (v102 < v101) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v100 = sub_25A004EB4((uint64_t)v100);
          }
          if (v99 >= *((void *)v100 + 2)) {
            goto LABEL_133;
          }
          uint64_t v103 = &v100[16 * v99 + 32];
          *(void *)uint64_t v103 = v101;
          *((void *)v103 + 1) = v102;
          unint64_t v104 = *((void *)v100 + 2);
          if (v13 > v104) {
            goto LABEL_134;
          }
          memmove(&v100[16 * v13 + 16], &v100[16 * v13 + 32], 16 * (v104 - v13));
          uint64_t v97 = v100;
          *((void *)v100 + 2) = v104 - 1;
          unint64_t v13 = v104 - 1;
        }
        while (v104 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v107 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v107 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D90);
    uint64_t v8 = sub_25A00EB90();
    *(void *)(v8 + 16) = v7;
    uint64_t v107 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v106 = *a1 + 64;
  uint64_t v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v108 = v6;
  uint64_t v109 = v3;
  uint64_t v110 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      uint64_t v15 = *(void *)(v11 + 24 * v10 + 16);
      uint64_t v16 = *(void *)(v11 + 24 * v14 + 16);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v17 = (uint64_t *)(v106 + 24 * v14);
        uint64_t v18 = v15;
        while (1)
        {
          uint64_t v20 = *v17;
          v17 += 3;
          uint64_t v19 = v20;
          if (v15 < v16 == v20 >= v18) {
            break;
          }
          ++v10;
          uint64_t v18 = v19;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_137;
        }
        if (v14 < v10)
        {
          uint64_t v21 = 24 * v10;
          uint64_t v22 = 24 * v14;
          uint64_t v23 = v10;
          uint64_t v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11) {
                goto LABEL_143;
              }
              uint64_t v25 = v11 + v22;
              uint64_t v26 = v11 + v21;
              long long v27 = *(_OWORD *)(v11 + v22);
              uint64_t v28 = *(void *)(v11 + v22 + 16);
              uint64_t v29 = *(void *)(v11 + v21 - 8);
              *(_OWORD *)uint64_t v25 = *(_OWORD *)(v11 + v21 - 24);
              *(void *)(v25 + 16) = v29;
              *(_OWORD *)(v26 - 24) = v27;
              *(void *)(v26 - 8) = v28;
            }
            ++v24;
            v21 -= 24;
            v22 += 24;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_135;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v30 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_138;
    }
    if (v30 >= v3) {
      uint64_t v30 = v3;
    }
    if (v30 < v14) {
      break;
    }
    if (v10 != v30)
    {
      long long v31 = (uint64_t *)(v11 + 24 * v10);
      do
      {
        uint64_t v32 = *(void *)(v11 + 24 * v10 + 16);
        uint64_t v33 = v14;
        __int16 v34 = v31;
        do
        {
          if (v32 >= *(v34 - 1)) {
            break;
          }
          if (!v11) {
            goto LABEL_141;
          }
          uint64_t v35 = *v34;
          uint64_t v36 = v34[1];
          *(_OWORD *)__int16 v34 = *(_OWORD *)(v34 - 3);
          v34[2] = *(v34 - 1);
          *(v34 - 2) = v36;
          *(v34 - 1) = v32;
          *(v34 - 3) = v35;
          v34 -= 3;
          ++v33;
        }
        while (v10 != v33);
        ++v10;
        v31 += 3;
      }
      while (v10 != v30);
      uint64_t v10 = v30;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_25A004A90(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v38 = *((void *)v12 + 2);
    unint64_t v37 = *((void *)v12 + 3);
    unint64_t v13 = v38 + 1;
    uint64_t v11 = v110;
    if (v38 >= v37 >> 1)
    {
      int v87 = sub_25A004A90((char *)(v37 > 1), v38 + 1, 1, v12);
      uint64_t v11 = v110;
      uint64_t v12 = v87;
    }
    *((void *)v12 + 2) = v13;
    int v39 = v12 + 32;
    char v40 = &v12[16 * v38 + 32];
    *(void *)char v40 = v14;
    *((void *)v40 + 1) = v10;
    if (v38)
    {
      while (1)
      {
        unint64_t v41 = v13 - 1;
        if (v13 >= 4)
        {
          BOOL v46 = &v39[16 * v13];
          uint64_t v47 = *((void *)v46 - 8);
          uint64_t v48 = *((void *)v46 - 7);
          BOOL v52 = __OFSUB__(v48, v47);
          uint64_t v49 = v48 - v47;
          if (v52) {
            goto LABEL_119;
          }
          uint64_t v51 = *((void *)v46 - 6);
          uint64_t v50 = *((void *)v46 - 5);
          BOOL v52 = __OFSUB__(v50, v51);
          uint64_t v44 = v50 - v51;
          char v45 = v52;
          if (v52) {
            goto LABEL_120;
          }
          unint64_t v53 = v13 - 2;
          uint64_t v54 = &v39[16 * v13 - 32];
          uint64_t v56 = *(void *)v54;
          uint64_t v55 = *((void *)v54 + 1);
          BOOL v52 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          if (v52) {
            goto LABEL_122;
          }
          BOOL v52 = __OFADD__(v44, v57);
          uint64_t v58 = v44 + v57;
          if (v52) {
            goto LABEL_125;
          }
          if (v58 >= v49)
          {
            char v76 = &v39[16 * v41];
            uint64_t v78 = *(void *)v76;
            uint64_t v77 = *((void *)v76 + 1);
            BOOL v52 = __OFSUB__(v77, v78);
            uint64_t v79 = v77 - v78;
            if (v52) {
              goto LABEL_129;
            }
            BOOL v69 = v44 < v79;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v70 = *((void *)v12 + 4);
            uint64_t v71 = *((void *)v12 + 5);
            BOOL v52 = __OFSUB__(v71, v70);
            uint64_t v63 = v71 - v70;
            char v64 = v52;
            goto LABEL_77;
          }
          uint64_t v43 = *((void *)v12 + 4);
          uint64_t v42 = *((void *)v12 + 5);
          BOOL v52 = __OFSUB__(v42, v43);
          uint64_t v44 = v42 - v43;
          char v45 = v52;
        }
        if (v45) {
          goto LABEL_121;
        }
        unint64_t v53 = v13 - 2;
        uint64_t v59 = &v39[16 * v13 - 32];
        uint64_t v61 = *(void *)v59;
        uint64_t v60 = *((void *)v59 + 1);
        BOOL v62 = __OFSUB__(v60, v61);
        uint64_t v63 = v60 - v61;
        char v64 = v62;
        if (v62) {
          goto LABEL_124;
        }
        char v65 = &v39[16 * v41];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        BOOL v52 = __OFSUB__(v66, v67);
        uint64_t v68 = v66 - v67;
        if (v52) {
          goto LABEL_127;
        }
        if (__OFADD__(v63, v68)) {
          goto LABEL_128;
        }
        if (v63 + v68 >= v44)
        {
          BOOL v69 = v44 < v68;
LABEL_83:
          if (v69) {
            unint64_t v41 = v53;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v64) {
          goto LABEL_123;
        }
        uint64_t v72 = &v39[16 * v41];
        uint64_t v74 = *(void *)v72;
        uint64_t v73 = *((void *)v72 + 1);
        BOOL v52 = __OFSUB__(v73, v74);
        uint64_t v75 = v73 - v74;
        if (v52) {
          goto LABEL_126;
        }
        if (v75 < v63) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v80 = v41 - 1;
        if (v41 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11) {
          goto LABEL_142;
        }
        long long v81 = v12;
        char v82 = &v39[16 * v80];
        uint64_t v83 = *(void *)v82;
        uint64_t v84 = &v39[16 * v41];
        uint64_t v85 = *((void *)v84 + 1);
        sub_259FB6180((char *)(v11 + 24 * *(void *)v82), (char *)(v11 + 24 * *(void *)v84), v11 + 24 * v85, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v85 < v83) {
          goto LABEL_116;
        }
        if (v41 > *((void *)v81 + 2)) {
          goto LABEL_117;
        }
        *(void *)char v82 = v83;
        *(void *)&v39[16 * v80 + 8] = v85;
        unint64_t v86 = *((void *)v81 + 2);
        if (v41 >= v86) {
          goto LABEL_118;
        }
        uint64_t v12 = v81;
        unint64_t v13 = v86 - 1;
        memmove(&v39[16 * v41], v84 + 16, 16 * (v86 - 1 - v41));
        *((void *)v81 + 2) = v86 - 1;
        uint64_t v11 = v110;
        if (v86 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v108;
    uint64_t v3 = v109;
    if (v10 >= v109)
    {
      uint64_t v9 = v107;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_25A00EDA0();
  __break(1u);
  return result;
}

uint64_t sub_259FB6180(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  uint64_t v26 = __src;
  uint64_t v25 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      if (__dst != a2 || &a2[24 * v11] <= __dst) {
        memmove(__dst, a2, 24 * v11);
      }
      uint64_t v17 = &v4[24 * v11];
      uint64_t v24 = v17;
      uint64_t v26 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        unint64_t v18 = a3 - 24;
        do
        {
          uint64_t v19 = (char *)(v18 + 24);
          if (*((void *)v17 - 1) >= *((void *)v6 - 1))
          {
            uint64_t v24 = v17 - 24;
            if (v19 < v17 || v18 >= (unint64_t)v17 || v19 != v17)
            {
              long long v22 = *(_OWORD *)(v17 - 24);
              *(void *)(v18 + 16) = *((void *)v17 - 1);
              *(_OWORD *)unint64_t v18 = v22;
            }
            uint64_t v20 = v6;
            v17 -= 24;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v20 = v6 - 24;
            if (v19 != v6 || v18 >= (unint64_t)v6)
            {
              long long v21 = *(_OWORD *)v20;
              *(void *)(v18 + 16) = *((void *)v6 - 1);
              *(_OWORD *)unint64_t v18 = v21;
            }
            uint64_t v26 = v6 - 24;
            if (v20 <= v7) {
              break;
            }
          }
          v18 -= 24;
          uint64_t v6 = v20;
        }
        while (v17 > v4);
      }
LABEL_40:
      sub_25A004D14((void **)&v26, &v25, &v24);
      return 1;
    }
  }
  else if (v8 >= -23)
  {
    if (__dst != __src || &__src[24 * v9] <= __dst) {
      memmove(__dst, __src, 24 * v9);
    }
    uint64_t v12 = &v4[24 * v9];
    uint64_t v24 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      unint64_t v13 = v4;
      while (1)
      {
        if (*((void *)v6 + 2) >= *((void *)v13 + 2))
        {
          uint64_t v4 = v13 + 24;
          uint64_t v15 = v13;
          uint64_t v14 = v6;
          if (v7 == v13)
          {
            v13 += 24;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v13 += 24;
          }
        }
        else
        {
          uint64_t v14 = v6 + 24;
          uint64_t v15 = v6;
          if (v7 == v6 && v7 < v14) {
            goto LABEL_18;
          }
        }
        long long v16 = *(_OWORD *)v15;
        *((void *)v7 + 2) = *((void *)v15 + 2);
        *(_OWORD *)uint64_t v7 = v16;
LABEL_18:
        v7 += 24;
        if (v13 < v12)
        {
          uint64_t v6 = v14;
          if ((unint64_t)v14 < a3) {
            continue;
          }
        }
        uint64_t v25 = v4;
        uint64_t v26 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FB6440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v23 = MEMORY[0x263F8EE78];
    sub_259FE1584(0, v5, 0);
    uint64_t v8 = a5;
    uint64_t v6 = v23;
    int64_t v9 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v10 = *(v9 - 1);
      uint64_t v21 = *v9;
      uint64_t v22 = *(v9 - 2);
      if (*(void *)(v8 + 16) && (unint64_t v11 = sub_259FE1284(*v9), (v12 & 1) != 0))
      {
        unint64_t v13 = (uint64_t *)(*(void *)(v8 + 56) + 16 * v11);
        uint64_t v14 = *v13;
        unint64_t v15 = v13[1];
        sub_259FAE450(*v13, v15);
      }
      else
      {
        uint64_t v14 = 0;
        unint64_t v15 = 0xF000000000000000;
      }
      unint64_t v17 = *(void *)(v23 + 16);
      unint64_t v16 = *(void *)(v23 + 24);
      swift_bridgeObjectRetain();
      if (v17 >= v16 >> 1)
      {
        sub_259FE1584(v16 > 1, v17 + 1, 1);
        uint64_t v8 = a5;
      }
      v9 += 3;
      *(void *)(v23 + 16) = v17 + 1;
      unint64_t v18 = (void *)(v23 + 40 * v17);
      v18[4] = v22;
      v18[5] = v10;
      v18[6] = v21;
      v18[7] = v14;
      v18[8] = v15;
      --v5;
    }
    while (v5);
  }
  return v6;
}

uint64_t sub_259FB657C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_259FB5498(a1, a2, a3, a4, a5, *(void *)(v6 + 24), a6);
}

uint64_t sub_259FB6598(uint64_t a1, void (*a2)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v23 = MEMORY[0x263F8EE78];
    sub_259FE1564(0, v3, 0);
    uint64_t v4 = v23;
    uint64_t v6 = (unint64_t *)(a1 + 64);
    while (1)
    {
      uint64_t v7 = *(v6 - 4);
      uint64_t v8 = *(v6 - 3);
      uint64_t v9 = *(v6 - 2);
      uint64_t v10 = *(v6 - 1);
      unint64_t v11 = *v6;
      swift_bridgeObjectRetain();
      sub_259FAF3C4(v10, v11);
      a2(&v21, v7, v8, v9, v10, v11);
      if (v2) {
        break;
      }
      swift_bridgeObjectRelease();
      sub_259FAF410(v10, v11);
      long long v12 = v21;
      long long v13 = v22;
      uint64_t v23 = v4;
      unint64_t v15 = *(void *)(v4 + 16);
      unint64_t v14 = *(void *)(v4 + 24);
      if (v15 >= v14 >> 1)
      {
        long long v18 = v22;
        long long v19 = v21;
        sub_259FE1564(v14 > 1, v15 + 1, 1);
        long long v13 = v18;
        long long v12 = v19;
        uint64_t v4 = v23;
      }
      v6 += 5;
      *(void *)(v4 + 16) = v15 + 1;
      uint64_t v16 = v4 + 32 * v15;
      *(_OWORD *)(v16 + 32) = v12;
      *(_OWORD *)(v16 + 48) = v13;
      if (!--v3) {
        return v4;
      }
    }
    swift_bridgeObjectRelease();
    sub_259FAF410(v10, v11);
    swift_release();
  }
  return v4;
}

uint64_t sub_259FB66F8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  if ((unsigned __int16)((unsigned __int16)a5 >> 12) <= 0xEu) {
    return sub_259FB670C(a1, a2, a3, a4, a5);
  }
  return a1;
}

uint64_t sub_259FB670C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  if (a5 < 0) {
    return swift_bridgeObjectRelease();
  }
  else {
    return sub_259FB671C(a1, a2, a3, a4, a5, SHIBYTE(a5));
  }
}

uint64_t sub_259FB671C(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  switch(a6)
  {
    case 7:
      swift_unknownObjectRelease();
      uint64_t result = sub_259FB680C(a3, a4, a5 & 1);
      break;
    case 8:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 9:
      goto LABEL_9;
    case 10:
      swift_unknownObjectRelease();
      uint64_t result = a3;
      a2 = a4;
LABEL_9:
      uint64_t result = sub_259FAE4A8(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_259FB680C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_259FB681C()
{
  return sub_25A00E240() & 1;
}

uint64_t sub_259FB6850()
{
  uint64_t v0 = sub_25A00E940();
  __swift_allocate_value_buffer(v0, qword_26A404120);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A404120);
  return sub_25A00E930();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_259FB696C()
{
  uint64_t v2 = sub_25A00E620();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v10 = *v0;
  uint64_t v9 = v0[1];
  unint64_t v11 = MEMORY[0x263F8EE78];
  unint64_t v22 = MEMORY[0x263F8EE78];
  sub_259FB90C4(v9, &v22);
  if (v1) {
    return swift_bridgeObjectRelease();
  }
  unint64_t v21 = v11;
  sub_259FB923C(v10, &v21);
  sub_25A00E610();
  sub_25A00E5F0();
  sub_25A00E5C0();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  unint64_t v13 = sub_259FC9508(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v14 = v13;
  unint64_t v16 = *(void *)(v13 + 16);
  unint64_t v15 = *(void *)(v13 + 24);
  unint64_t v17 = v16 + 1;
  if (v16 >= v15 >> 1)
  {
    unint64_t v20 = v16 + 1;
    uint64_t v18 = sub_259FC9508(v15 > 1, v16 + 1, 1, v13);
    unint64_t v17 = v20;
    unint64_t v14 = v18;
  }
  *(void *)(v14 + 16) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v14+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v16, v6, v2);
  sub_25A00E510();
  sub_25A00E500();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_259FB6B94(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  BOOL v62 = a4;
  uint64_t v61 = a2;
  uint64_t v60 = a1;
  uint64_t v59 = sub_25A00E400();
  MEMORY[0x270FA5388](v59);
  uint64_t v63 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25A00E8C0();
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v58 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v71 = (char *)&v56 - v9;
  uint64_t v70 = sub_25A00E3F0();
  MEMORY[0x270FA5388](v70);
  unint64_t v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_25A00E4D0();
  uint64_t v66 = *(void *)(v67 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v67);
  char v64 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  char v65 = (char *)&v56 - v14;
  uint64_t v78 = (char *)sub_25A00E7E0();
  uint64_t v15 = *((void *)v78 - 1);
  uint64_t v16 = MEMORY[0x270FA5388](v78);
  uint64_t v77 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v56 - v18;
  uint64_t v20 = *a3;
  uint64_t v22 = a3[2];
  unint64_t v21 = a3[3];
  uint64_t v23 = *(void *)(a3[1] + 16);
  uint64_t v24 = MEMORY[0x263F8EE78];
  unint64_t v69 = v21;
  uint64_t v68 = v22;
  if (v23)
  {
    uint64_t v56 = v20;
    uint64_t v72 = v15 + 32;
    uint64_t v73 = (void (**)(char *, char *, char *))(v15 + 16);
    uint64_t v75 = (void (**)(char *, char *))(v15 + 8);
    uint64_t v57 = swift_bridgeObjectRetain();
    uint64_t v25 = (unint64_t *)(v57 + 56);
    unint64_t v79 = MEMORY[0x263F8EE78];
    uint64_t v74 = v11;
    while (1)
    {
      uint64_t v27 = *(v25 - 1);
      unint64_t v26 = *v25;
      swift_bridgeObjectRetain();
      sub_259FAF3C4(v27, v26);
      sub_25A00E7D0();
      swift_bridgeObjectRetain();
      sub_25A00E7A0();
      if (v26 >> 60 != 15)
      {
        *(void *)&long long v84 = 0;
        long long v82 = 0u;
        long long v83 = 0u;
        sub_259FAE450(v27, v26);
        sub_259FAE450(v27, v26);
        sub_25A00E8B0();
        sub_259FB93A8(&qword_26A402DA0, MEMORY[0x263F50360]);
        uint64_t v28 = v76;
        sub_25A00E8F0();
        uint64_t v76 = v28;
        if (v28)
        {
          swift_bridgeObjectRelease();
          sub_259FAF410(v27, v26);
          sub_259FAF410(v27, v26);
          (*v75)(v19, v78);
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        sub_25A00E7C0();
        sub_259FAF410(v27, v26);
      }
      (*v73)(v77, v19, v78);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v79 = sub_259FC97F0(0, *(void *)(v79 + 16) + 1, 1, v79);
      }
      unint64_t v30 = *(void *)(v79 + 16);
      unint64_t v29 = *(void *)(v79 + 24);
      if (v30 >= v29 >> 1) {
        unint64_t v79 = sub_259FC97F0(v29 > 1, v30 + 1, 1, v79);
      }
      v25 += 4;
      unint64_t v31 = v79;
      *(void *)(v79 + 16) = v30 + 1;
      uint64_t v32 = v78;
      (*(void (**)(unint64_t, char *, char *))(v15 + 32))(v31+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v30, v77, v78);
      swift_bridgeObjectRelease();
      sub_259FAF410(v27, v26);
      (*(void (**)(char *, char *))(v15 + 8))(v19, v32);
      if (!--v23)
      {
        swift_bridgeObjectRelease();
        unint64_t v21 = v69;
        uint64_t v22 = v68;
        uint64_t v20 = v56;
        uint64_t v24 = MEMORY[0x263F8EE78];
        goto LABEL_13;
      }
    }
  }
  unint64_t v79 = MEMORY[0x263F8EE78];
LABEL_13:
  uint64_t v90 = v24;
  uint64_t v33 = v76;
  *(void *)&long long v82 = sub_259FFD340(v20);
  swift_bridgeObjectRetain();
  sub_259FB8598((void **)&v82);
  if (v33)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v34 = v82;
    uint64_t v35 = *(void *)(v82 + 16);
    if (v35)
    {
      uint64_t v78 = (char *)&v83;
      swift_bridgeObjectRetain();
      uint64_t v36 = 0;
      do
      {
        uint64_t v37 = *(void *)(v34 + v36 + 96);
        unint64_t v38 = *(void *)(v34 + v36 + 104);
        char v39 = *(unsigned char *)(v34 + v36 + 88);
        int v40 = *(_DWORD *)(v34 + v36 + 84);
        char v41 = *(unsigned char *)(v34 + v36 + 80);
        uint64_t v42 = *(void *)(v34 + v36 + 56);
        char v43 = *(unsigned char *)(v34 + v36 + 48);
        uint64_t v44 = *(void *)(v34 + v36 + 40);
        *(void *)&long long v82 = *(void *)(v34 + v36 + 32);
        uint64_t v45 = v82;
        *((void *)&v82 + 1) = v44;
        LOBYTE(v83) = v43;
        *((void *)&v83 + 1) = v42;
        long long v84 = *(_OWORD *)(v34 + v36 + 64);
        char v85 = v41;
        int v86 = v40;
        char v87 = v39;
        uint64_t v88 = v37;
        unint64_t v89 = v38;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_259FAF3C4(v37, v38);
        sub_259FB7534(v45, v44, v78, (unint64_t)&v90);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_259FAF410(v37, v38);
        v36 += 80;
        --v35;
      }
      while (v35);
      swift_release();
      unint64_t v21 = v69;
      uint64_t v22 = v68;
    }
    swift_release();
    BOOL v46 = v65;
    sub_25A00E4C0();
    uint64_t v47 = v67;
    uint64_t v48 = v66;
    uint64_t v49 = v64;
    if (v21 >> 60 != 15)
    {
      uint64_t v80 = v22;
      unint64_t v81 = v21;
      *(void *)&long long v84 = 0;
      long long v82 = 0u;
      long long v83 = 0u;
      sub_259FAE450(v22, v21);
      sub_259FAE450(v22, v21);
      sub_25A00E8B0();
      sub_259FB93A8(&qword_26A402D98, MEMORY[0x263F50370]);
      sub_25A00E910();
      sub_25A00E470();
      sub_259FAF410(v22, v21);
    }
    swift_bridgeObjectRetain();
    sub_25A00E430();
    swift_bridgeObjectRetain();
    sub_25A00E450();
    sub_25A00E4B0();
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v49, v46, v47);
    uint64_t v51 = v62;
    unint64_t v52 = *v62;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v51 = v52;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v52 = sub_259FC953C(0, *(void *)(v52 + 16) + 1, 1, v52);
      *BOOL v62 = v52;
    }
    unint64_t v55 = *(void *)(v52 + 16);
    unint64_t v54 = *(void *)(v52 + 24);
    if (v55 >= v54 >> 1)
    {
      unint64_t v52 = sub_259FC953C(v54 > 1, v55 + 1, 1, v52);
      *BOOL v62 = v52;
    }
    *(void *)(v52 + 16) = v55 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v48 + 32))(v52+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(void *)(v48 + 72) * v55, v49, v47);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v46, v47);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_259FB7534(uint64_t a1, uint64_t a2, char *a3, unint64_t a4)
{
  uint64_t v51 = a2;
  unint64_t v46 = a4;
  uint64_t v52 = a1;
  uint64_t v37 = sub_25A00E6B0();
  uint64_t v36 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v35 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25A00E8C0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v42 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_25A00E3E0();
  MEMORY[0x270FA5388](v41);
  int v40 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25A00E730();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (uint64_t (**)(char *, uint64_t))((char *)v34 - v14);
  uint64_t v58 = sub_25A00E780();
  uint64_t v48 = *(uint64_t (***)(char *, uint64_t))(v58 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v58);
  unint64_t v53 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v34 - v18;
  char v20 = *a3;
  uint64_t v38 = *((void *)a3 + 1);
  int64_t v21 = *((void *)a3 + 3);
  uint64_t v44 = *((void *)a3 + 2);
  int v43 = a3[32];
  v34[1] = *((_DWORD *)a3 + 9);
  int v45 = a3[40];
  unint64_t v22 = *((void *)a3 + 7);
  uint64_t v39 = *((void *)a3 + 6);
  sub_25A00E770();
  LOBYTE(v54[0]) = v20;
  uint64_t v23 = v9;
  uint64_t v24 = v10;
  sub_259FB7B54(v54, (uint64_t)v15);
  uint64_t v25 = *(void (**)(char *, uint64_t (**)(char *, uint64_t), uint64_t))(v10 + 16);
  uint64_t v49 = v15;
  uint64_t v47 = v23;
  v25(v13, v15, v23);
  sub_25A00E690();
  swift_bridgeObjectRetain();
  sub_25A00E670();
  if (v21 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v21 > 0x7FFFFFFF)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    int64_t v21 = sub_259FC9824(0, *(void *)(v21 + 16) + 1, 1, v21);
    *(void *)unint64_t v22 = v21;
    goto LABEL_15;
  }
  MEMORY[0x25A2F1E30](v21);
  if (v22 >> 60 == 15)
  {
    uint64_t v15 = v48;
  }
  else
  {
    uint64_t v26 = v39;
    uint64_t v56 = v39;
    unint64_t v57 = v22;
    uint64_t v55 = 0;
    memset(v54, 0, sizeof(v54));
    sub_259FAE450(v39, v22);
    sub_259FAE450(v26, v22);
    sub_25A00E8B0();
    sub_259FB93A8(&qword_26A402DA8, MEMORY[0x263F50350]);
    uint64_t v27 = v50;
    sub_25A00E910();
    uint64_t v15 = v48;
    if (v27)
    {
      sub_259FAF410(v26, v22);
      (*(void (**)(uint64_t (**)(char *, uint64_t), uint64_t))(v10 + 8))(v49, v47);
      return v15[1](v19, v58);
    }
    sub_25A00E710();
    sub_259FAF410(v26, v22);
  }
  unint64_t v22 = v46;
  if (v43)
  {
    (*(void (**)(char *, void, uint64_t))(v36 + 104))(v35, *MEMORY[0x263F503B0], v37);
    sub_25A00E6D0();
  }
  if (v44)
  {
    swift_bridgeObjectRetain();
    sub_25A00E760();
  }
  if ((v45 & 1) == 0) {
    sub_25A00E640();
  }
  ((void (*)(char *, char *, uint64_t))v15[2])(v53, v19, v58);
  int64_t v21 = *(void *)v22;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)unint64_t v22 = v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_20;
  }
LABEL_15:
  unint64_t v31 = *(void *)(v21 + 16);
  unint64_t v30 = *(void *)(v21 + 24);
  if (v31 >= v30 >> 1)
  {
    int64_t v21 = sub_259FC9824(v30 > 1, v31 + 1, 1, v21);
    *(void *)unint64_t v22 = v21;
  }
  *(void *)(v21 + 16) = v31 + 1;
  unint64_t v32 = v21
      + ((*((unsigned __int8 *)v15 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v15 + 80))
      + (void)v15[9] * v31;
  uint64_t v33 = v58;
  ((void (*)(unint64_t, char *, uint64_t))v15[4])(v32, v53, v58);
  (*(void (**)(uint64_t (**)(char *, uint64_t), uint64_t))(v24 + 8))(v49, v47);
  return v15[1](v19, v33);
}

uint64_t sub_259FB7B54@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  switch(*a1)
  {
    case 1:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F503E0];
      break;
    case 2:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F503F8];
      break;
    case 3:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F50428];
      break;
    case 4:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F503F0];
      break;
    case 5:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F50438];
      break;
    case 6:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F50430];
      break;
    case 7:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F503C8];
      break;
    case 8:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F50418];
      break;
    case 9:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F50440];
      break;
    case 0xA:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F503D8];
      break;
    case 0xB:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F50420];
      break;
    case 0xC:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F503D0];
      break;
    case 0xD:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F50448];
      break;
    case 0xE:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F50450];
      break;
    case 0xF:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F50408];
      break;
    case 0x10:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F50410];
      break;
    default:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F50400];
      break;
  }
  uint64_t v4 = *v3;
  uint64_t v5 = sub_25A00E730();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);
  return v6(a2, v4, v5);
}

uint64_t sub_259FB7CF0(char *a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v34 = a4;
  uint64_t v38 = a1;
  uint64_t v6 = sub_25A00E8C0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = sub_25A00E3D0();
  MEMORY[0x270FA5388](v7);
  uint64_t v35 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25A00E5A0();
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v33 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v15 = *a3;
  uint64_t v14 = (void *)a3[1];
  unint64_t v17 = a3[2];
  uint64_t v16 = (void *)a3[3];
  sub_25A00E590();
  swift_bridgeObjectRetain();
  uint64_t v38 = v13;
  sub_25A00E540();
  if (v17 >> 60 != 15)
  {
    v41[0] = v14;
    v41[1] = (void *)v17;
    uint64_t v40 = 0;
    memset(v39, 0, sizeof(v39));
    sub_259FAE450((uint64_t)v14, v17);
    sub_259FAE450((uint64_t)v14, v17);
    sub_25A00E8B0();
    sub_259FB93A8(&qword_26A402DB8, MEMORY[0x263F50318]);
    sub_25A00E910();
    if (v4)
    {
      (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v37);
      return sub_259FAF410((uint64_t)v14, v17);
    }
    sub_25A00E580();
    sub_259FAF410((uint64_t)v14, v17);
  }
  *(void *)&v39[0] = MEMORY[0x263F8EE78];
  v41[0] = (void *)sub_259FB5278(v15);
  swift_bridgeObjectRetain();
  sub_259FB5A00(v41);
  if (v4)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = (char *)v41[0];
    uint64_t v19 = v41[0][2];
    if (v19)
    {
      char v20 = (uint64_t *)(swift_retain() + 48);
      do
      {
        uint64_t v22 = *(v20 - 1);
        uint64_t v21 = *v20;
        uint64_t v23 = *(v20 - 2);
        swift_bridgeObjectRetain();
        sub_259FB81B8(v23, v22, v21, v15, (uint64_t)v14, v17, v16, (void **)v39);
        v20 += 3;
        swift_bridgeObjectRelease();
        --v19;
      }
      while (v19);
      swift_release_n();
    }
    else
    {
      swift_release();
    }
    swift_bridgeObjectRetain();
    uint64_t v24 = v38;
    sub_25A00E560();
    uint64_t v26 = v36;
    uint64_t v25 = v37;
    uint64_t v27 = v33;
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v24, v37);
    uint64_t v28 = v34;
    unint64_t v29 = *v34;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v28 = v29;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v29 = sub_259FC9858(0, *(void *)(v29 + 16) + 1, 1, v29);
      *uint64_t v28 = v29;
    }
    unint64_t v32 = *(void *)(v29 + 16);
    unint64_t v31 = *(void *)(v29 + 24);
    if (v32 >= v31 >> 1)
    {
      unint64_t v29 = sub_259FC9858(v31 > 1, v32 + 1, 1, v29);
      *uint64_t v28 = v29;
    }
    *(void *)(v29 + 16) = v32 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v29+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(void *)(v26 + 72) * v32, v27, v25);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v24, v25);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_259FB81B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void **a8)
{
  unint64_t v32 = a8;
  uint64_t v10 = sub_25A00E8C0();
  MEMORY[0x270FA5388](v10 - 8);
  _OWORD v31[2] = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)sub_25A00E4E0();
  MEMORY[0x270FA5388](v12);
  v31[1] = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25A00E860();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  char v20 = (char *)v31 - v19;
  sub_25A00E850();
  swift_bridgeObjectRetain();
  sub_25A00E800();
  if (a3 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (a3 > 0x7FFFFFFF)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    a7 = (void *)sub_259FC988C(0, a7[2] + 1, 1, (unint64_t)a7);
    *uint64_t v12 = a7;
    goto LABEL_8;
  }
  MEMORY[0x25A2F1F60](a3);
  if (a7[2])
  {
    unint64_t v21 = sub_259FE1284(a3);
    if (v22)
    {
      v31[0] = v18;
      uint64_t v23 = (uint64_t *)(a7[7] + 16 * v21);
      unint64_t v25 = v23[1];
      uint64_t v36 = *v23;
      uint64_t v24 = v36;
      unint64_t v37 = v25;
      uint64_t v35 = 0;
      long long v33 = 0u;
      long long v34 = 0u;
      sub_259FAE450(v36, v25);
      sub_259FAE450(v24, v25);
      sub_25A00E8B0();
      sub_259FB93A8(&qword_26A402DC0, MEMORY[0x263F50388]);
      uint64_t v26 = v38;
      sub_25A00E910();
      if (v26)
      {
        (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
        return sub_259FAE4A8(v24, v25);
      }
      sub_25A00E840();
      sub_259FAE4A8(v24, v25);
      uint64_t v18 = (char *)v31[0];
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
  uint64_t v12 = v32;
  a7 = *v32;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v12 = a7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_14;
  }
LABEL_8:
  unint64_t v30 = a7[2];
  unint64_t v29 = a7[3];
  if (v30 >= v29 >> 1)
  {
    a7 = (void *)sub_259FC988C(v29 > 1, v30 + 1, 1, (unint64_t)a7);
    *uint64_t v12 = a7;
  }
  a7[2] = v30 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))((unint64_t)a7+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v30, v18, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
}

uint64_t sub_259FB8598(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_25A0050E0(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = v2 + 4;
  v5[1] = v3;
  uint64_t result = sub_259FB8604(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_259FB8604(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_25A00EE20();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v91 = 0;
      uint64_t v92 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v94 = *(void *)(v92 + 80 * i + 40);
        uint64_t v95 = v91;
        do
        {
          uint64_t v96 = v92 + v95;
          if (v94 >= *(void *)(v92 + v95 + 40)) {
            break;
          }
          if (!v92) {
            goto LABEL_142;
          }
          uint64_t v97 = *(void *)(v96 + 80);
          uint64_t v98 = v92 + v95;
          uint64_t v99 = *(void *)(v92 + v95 + 88);
          uint64_t result = *(unsigned __int8 *)(v96 + 96);
          char v100 = *(unsigned char *)(v92 + v95 + 128);
          int v101 = *(_DWORD *)(v92 + v95 + 132);
          char v102 = *(unsigned char *)(v92 + v95 + 136);
          long long v103 = *(_OWORD *)(v92 + v95 + 104);
          long long v104 = *(_OWORD *)(v92 + v95 + 144);
          long long v105 = *(_OWORD *)(v96 + 48);
          *(_OWORD *)(v96 + 112) = *(_OWORD *)(v96 + 32);
          *(_OWORD *)(v96 + 128) = v105;
          *(_OWORD *)(v96 + 144) = *(_OWORD *)(v96 + 64);
          long long v106 = *(_OWORD *)(v96 + 16);
          *(_OWORD *)(v96 + 80) = *(_OWORD *)v96;
          *(_OWORD *)(v96 + 96) = v106;
          *(void *)uint64_t v98 = v97;
          *(void *)(v98 + 8) = v99;
          *(unsigned char *)(v96 + 16) = result;
          *(_OWORD *)(v98 + 24) = v103;
          *(void *)(v96 + 40) = v94;
          *(unsigned char *)(v98 + 48) = v100;
          *(_DWORD *)(v98 + 52) = v101;
          *(unsigned char *)(v98 + 56) = v102;
          v95 -= 80;
          *(_OWORD *)(v98 + 64) = v104;
        }
        while (v95 != -80);
        v91 += 80;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_147;
  }
  uint64_t v118 = result;
  uint64_t v129 = v1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    long long v127 = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v107 = (char *)MEMORY[0x263F8EE78];
LABEL_104:
      uint64_t v117 = v8;
      if (v11 >= 2)
      {
        uint64_t v108 = *v2;
        do
        {
          unint64_t v109 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_133;
          }
          if (!v108) {
            goto LABEL_146;
          }
          uint64_t v110 = v107;
          uint64_t v111 = *(void *)&v107[16 * v109 + 32];
          uint64_t v112 = *(void *)&v107[16 * v11 + 24];
          sub_259FB8E0C((char *)(v108 + 80 * v111), (char *)(v108 + 80 * *(void *)&v107[16 * v11 + 16]), v108 + 80 * v112, v127);
          if (v129) {
            break;
          }
          if (v112 < v111) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v110 = sub_25A004EB4((uint64_t)v110);
          }
          if (v109 >= *((void *)v110 + 2)) {
            goto LABEL_135;
          }
          long long v113 = &v110[16 * v109 + 32];
          *(void *)long long v113 = v111;
          *((void *)v113 + 1) = v112;
          unint64_t v114 = *((void *)v110 + 2);
          if (v11 > v114) {
            goto LABEL_136;
          }
          memmove(&v110[16 * v11 + 16], &v110[16 * v11 + 32], 16 * (v114 - v11));
          uint64_t v107 = v110;
          *((void *)v110 + 2) = v114 - 1;
          unint64_t v11 = v114 - 1;
        }
        while (v114 > 2);
      }
LABEL_95:
      swift_bridgeObjectRelease();
      *(void *)(v117 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v117 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402DB0);
    uint64_t v7 = sub_25A00EB90();
    *(void *)(v7 + 16) = v6;
    uint64_t v117 = v7;
    long long v127 = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  long long v116 = v2;
  uint64_t v10 = *v2;
  unsigned __int8 v128 = (char *)MEMORY[0x263F8EE78];
  uint64_t v119 = v3;
  while (1)
  {
    uint64_t v12 = v9++;
    if (v9 < v3)
    {
      uint64_t v13 = *(void *)(v10 + 80 * v9 + 40);
      uint64_t v14 = *(void *)(v10 + 80 * v12 + 40);
      uint64_t v9 = v12 + 2;
      if (v12 + 2 < v3)
      {
        uint64_t v15 = (uint64_t *)(v10 + 200 + 80 * v12);
        uint64_t v16 = v13;
        while (1)
        {
          uint64_t v18 = *v15;
          v15 += 10;
          uint64_t v17 = v18;
          if (v13 < v14 == v18 >= v16) {
            break;
          }
          ++v9;
          uint64_t v16 = v17;
          if (v3 == v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v13 < v14)
      {
        if (v9 < v12) {
          goto LABEL_139;
        }
        if (v12 < v9)
        {
          uint64_t v19 = 80 * v9;
          uint64_t v20 = 80 * v12;
          uint64_t v21 = v9;
          uint64_t v115 = v12;
          do
          {
            if (v12 != --v21)
            {
              if (!v10) {
                goto LABEL_145;
              }
              uint64_t v22 = v10 + v19;
              uint64_t v23 = *(void *)(v10 + v20);
              uint64_t v24 = *(void *)(v10 + v20 + 8);
              char v122 = *(unsigned char *)(v10 + v20 + 16);
              uint64_t v126 = *(void *)(v10 + v20 + 40);
              int v124 = *(_DWORD *)(v10 + v20 + 52);
              char v125 = *(unsigned char *)(v10 + v20 + 48);
              char v123 = *(unsigned char *)(v10 + v20 + 56);
              long long v120 = *(_OWORD *)(v10 + v20 + 24);
              long long v121 = *(_OWORD *)(v10 + v20 + 64);
              memmove((void *)(v10 + v20), (const void *)(v10 + v19 - 80), 0x50uLL);
              *(void *)(v22 - 80) = v23;
              *(void *)(v22 - 72) = v24;
              *(unsigned char *)(v22 - 64) = v122;
              *(_OWORD *)(v22 - 56) = v120;
              *(void *)(v22 - 40) = v126;
              *(unsigned char *)(v22 - 32) = v125;
              *(_DWORD *)(v22 - 28) = v124;
              *(unsigned char *)(v22 - 24) = v123;
              *(_OWORD *)(v22 - 16) = v121;
            }
            ++v12;
            v19 -= 80;
            v20 += 80;
          }
          while (v12 < v21);
          uint64_t v3 = v119;
          uint64_t v12 = v115;
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_39;
    }
    if (__OFSUB__(v9, v12)) {
      goto LABEL_137;
    }
    if (v9 - v12 >= v118) {
      goto LABEL_39;
    }
    uint64_t v25 = v12 + v118;
    if (__OFADD__(v12, v118)) {
      goto LABEL_140;
    }
    if (v25 >= v3) {
      uint64_t v25 = v3;
    }
    if (v25 < v12) {
      break;
    }
    if (v9 != v25)
    {
      uint64_t v76 = v10 + 64 + 80 * v9;
      uint64_t v26 = v128;
      do
      {
        uint64_t v77 = *(void *)(v10 + 80 * v9 + 40);
        uint64_t v78 = v12;
        unint64_t v79 = (_OWORD *)v76;
        do
        {
          if (v77 >= *((void *)v79 - 13)) {
            break;
          }
          if (!v10) {
            goto LABEL_143;
          }
          uint64_t v80 = v79 - 4;
          uint64_t v81 = *((void *)v79 - 8);
          uint64_t v82 = *((void *)v79 - 7);
          char v83 = *((unsigned char *)v79 - 48);
          char v84 = *((unsigned char *)v79 - 16);
          int v85 = *((_DWORD *)v79 - 3);
          char v86 = *((unsigned char *)v79 - 8);
          long long v87 = *(_OWORD *)((char *)v79 - 40);
          long long v88 = *v79;
          long long v89 = *(v79 - 6);
          v80[2] = *(v79 - 7);
          v80[3] = v89;
          *unint64_t v79 = *(v79 - 5);
          long long v90 = *(v79 - 8);
          _OWORD *v80 = *(v79 - 9);
          v80[1] = v90;
          *(v79 - 5) = v88;
          v79 -= 5;
          *((void *)v79 - 8) = v81;
          *((void *)v79 - 7) = v82;
          *((unsigned char *)v79 - 48) = v83;
          *(_OWORD *)((char *)v79 - 40) = v87;
          *((void *)v79 - 3) = v77;
          *((unsigned char *)v79 - 16) = v84;
          *((_DWORD *)v79 - 3) = v85;
          ++v78;
          *((unsigned char *)v79 - 8) = v86;
        }
        while (v9 != v78);
        ++v9;
        v76 += 80;
      }
      while (v9 != v25);
      uint64_t v9 = v25;
      if (v25 < v12) {
        goto LABEL_132;
      }
      goto LABEL_40;
    }
LABEL_39:
    uint64_t v26 = v128;
    if (v9 < v12) {
      goto LABEL_132;
    }
LABEL_40:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v26 = sub_25A004A90(0, *((void *)v26 + 2) + 1, 1, v26);
    }
    unint64_t v28 = *((void *)v26 + 2);
    unint64_t v27 = *((void *)v26 + 3);
    unint64_t v11 = v28 + 1;
    if (v28 >= v27 >> 1) {
      uint64_t v26 = sub_25A004A90((char *)(v27 > 1), v28 + 1, 1, v26);
    }
    *((void *)v26 + 2) = v11;
    unint64_t v29 = v26 + 32;
    unint64_t v30 = &v26[16 * v28 + 32];
    *(void *)unint64_t v30 = v12;
    *((void *)v30 + 1) = v9;
    unsigned __int8 v128 = v26;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v36 = &v29[16 * v11];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_121;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_122;
          }
          unint64_t v43 = v11 - 2;
          uint64_t v44 = &v29[16 * v11 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_124;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_127;
          }
          if (v48 >= v39)
          {
            uint64_t v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_131;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_76;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v60 = *((void *)v26 + 4);
            uint64_t v61 = *((void *)v26 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_70;
          }
          uint64_t v33 = *((void *)v26 + 4);
          uint64_t v32 = *((void *)v26 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_123;
        }
        unint64_t v43 = v11 - 2;
        uint64_t v49 = &v29[16 * v11 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_126;
        }
        uint64_t v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_129;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_130;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_76:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_78;
        }
LABEL_70:
        if (v54) {
          goto LABEL_125;
        }
        BOOL v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_128;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_78:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v11)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        if (!v10) {
          goto LABEL_144;
        }
        uint64_t v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        uint64_t v73 = &v29[16 * v31];
        uint64_t v74 = *((void *)v73 + 1);
        sub_259FB8E0C((char *)(v10 + 80 * *(void *)v71), (char *)(v10 + 80 * *(void *)v73), v10 + 80 * v74, v127);
        if (v129) {
          goto LABEL_95;
        }
        if (v74 < v72) {
          goto LABEL_118;
        }
        if (v31 > *((void *)v128 + 2)) {
          goto LABEL_119;
        }
        *(void *)uint64_t v71 = v72;
        *(void *)&v29[16 * v70 + 8] = v74;
        unint64_t v75 = *((void *)v128 + 2);
        if (v31 >= v75) {
          goto LABEL_120;
        }
        uint64_t v26 = v128;
        unint64_t v11 = v75 - 1;
        memmove(&v29[16 * v31], v73 + 16, 16 * (v75 - 1 - v31));
        *((void *)v128 + 2) = v75 - 1;
        if (v75 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_15:
    uint64_t v3 = v119;
    if (v9 >= v119)
    {
      uint64_t v8 = v117;
      uint64_t v107 = v128;
      uint64_t v2 = v116;
      goto LABEL_104;
    }
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  uint64_t result = sub_25A00EDA0();
  __break(1u);
  return result;
}

uint64_t sub_259FB8E0C(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = (__src - __dst) / 80;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 80;
  uint64_t v23 = __dst;
  uint64_t v22 = a4;
  if (v9 >= v11)
  {
    if (v10 >= -79)
    {
      if (a4 != __src || &__src[80 * v11] <= a4) {
        memmove(a4, __src, 80 * v11);
      }
      uint64_t v16 = &v4[80 * v11];
      uint64_t v21 = v16;
      uint64_t v23 = v6;
      if (v7 < v6 && v10 >= 80)
      {
        uint64_t v17 = (char *)(a3 - 80);
        do
        {
          uint64_t v18 = v17 + 80;
          if (*((void *)v16 - 5) >= *((void *)v6 - 5))
          {
            uint64_t v21 = v16 - 80;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              memmove(v17, v16 - 80, 0x50uLL);
            }
            uint64_t v19 = v6;
            v16 -= 80;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v19 = v6 - 80;
            if (v18 != v6 || v17 >= v6) {
              memmove(v17, v6 - 80, 0x50uLL);
            }
            uint64_t v23 = v6 - 80;
            if (v19 <= v7) {
              break;
            }
          }
          v17 -= 80;
          uint64_t v6 = v19;
        }
        while (v16 > v4);
      }
LABEL_40:
      sub_25A004C48((void **)&v23, &v22, &v21);
      return 1;
    }
  }
  else if (v8 >= -79)
  {
    if (a4 != __dst || &__dst[80 * v9] <= a4) {
      memmove(a4, __dst, 80 * v9);
    }
    uint64_t v12 = &v4[80 * v9];
    uint64_t v21 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 80)
    {
      uint64_t v13 = v4;
      while (1)
      {
        if (*((void *)v6 + 5) >= *((void *)v13 + 5))
        {
          uint64_t v4 = v13 + 80;
          uint64_t v15 = v13;
          uint64_t v14 = v6;
          if (v7 == v13)
          {
            v13 += 80;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v13 += 80;
          }
        }
        else
        {
          uint64_t v14 = v6 + 80;
          uint64_t v15 = v6;
          if (v7 == v6 && v7 < v14) {
            goto LABEL_18;
          }
        }
        memmove(v7, v15, 0x50uLL);
LABEL_18:
        v7 += 80;
        if (v13 < v12)
        {
          uint64_t v6 = v14;
          if ((unint64_t)v14 < a3) {
            continue;
          }
        }
        uint64_t v22 = v4;
        uint64_t v23 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FB90C4(uint64_t a1, unint64_t *a2)
{
  v13[0] = sub_25A00A418(a1);
  swift_bridgeObjectRetain();
  sub_25A00AF2C(v13);
  if (v2)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v13[0] + 16);
    if (v3)
    {
      uint64_t v4 = (uint64_t *)(swift_bridgeObjectRetain() + 72);
      do
      {
        uint64_t v6 = *(v4 - 3);
        uint64_t v5 = *(v4 - 2);
        unint64_t v8 = *(v4 - 1);
        uint64_t v7 = *v4;
        uint64_t v10 = *(v4 - 4);
        v13[0] = *(v4 - 5);
        int64_t v9 = (char *)v13[0];
        v13[1] = v10;
        v14[0] = v6;
        v14[1] = v5;
        v14[2] = v8;
        v14[3] = v7;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_259FAF3C4(v5, v8);
        swift_bridgeObjectRetain();
        sub_259FB7CF0(v9, v10, v14, a2);
        v4 += 6;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_259FAF410(v5, v8);
        swift_bridgeObjectRelease();
        --v3;
      }
      while (v3);
      return swift_release_n();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_259FB923C(uint64_t a1, unint64_t *a2)
{
  v13[0] = sub_25A00A704(a1);
  swift_bridgeObjectRetain();
  sub_25A00AF6C(v13);
  if (v2)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v13[0] + 16);
    if (v3)
    {
      uint64_t v4 = (unint64_t *)(swift_bridgeObjectRetain() + 72);
      do
      {
        uint64_t v5 = *(v4 - 3);
        uint64_t v6 = *(v4 - 2);
        uint64_t v7 = *(v4 - 1);
        unint64_t v8 = *v4;
        uint64_t v10 = *(v4 - 4);
        v13[0] = *(v4 - 5);
        uint64_t v9 = v13[0];
        v13[1] = v10;
        v14[0] = v5;
        v14[1] = v6;
        v14[2] = v7;
        v14[3] = v8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_259FAF3C4(v7, v8);
        sub_259FB6B94(v9, v10, v14, a2);
        v4 += 6;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_259FAF410(v7, v8);
        --v3;
      }
      while (v3);
      return swift_release_n();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_259FB93A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

__n128 EnumValue.init(stringValue:type:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X2>, __n128 *a4@<X8>)
{
  __n128 result = *a3;
  *a4 = *a3;
  a4[1].n128_u64[0] = a1;
  a4[1].n128_u64[1] = a2;
  a4[2].n128_u8[0] = 0;
  return result;
}

__n128 EnumValue.init(intValue:type:)@<Q0>(unint64_t a1@<X0>, __n128 *a2@<X1>, __n128 *a3@<X8>)
{
  __n128 result = *a2;
  *a3 = *a2;
  a3[1].n128_u64[0] = a1;
  a3[1].n128_u64[1] = 0;
  a3[2].n128_u8[0] = 1;
  return result;
}

uint64_t EnumValue.impl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  char v4 = *(unsigned char *)(v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v4;
  swift_unknownObjectRetain();
  return sub_259FB94E4(v2, v3, v4);
}

uint64_t EnumValue.type.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  swift_getObjectType();
  return EnumSchemaDescribing.asPublic()(v3, a1);
}

uint64_t EnumValueImpl.init(intValue:type:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)a4 = a2;
  *(void *)(a4 + 8) = a3;
  *(void *)(a4 + 16) = result;
  *(void *)(a4 + 24) = 0;
  *(unsigned char *)(a4 + 32) = 1;
  return result;
}

uint64_t EnumValueImpl.init(stringValue:type:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = a3;
  *(void *)(a5 + 8) = a4;
  *(void *)(a5 + 16) = result;
  *(void *)(a5 + 24) = a2;
  *(unsigned char *)(a5 + 32) = 0;
  return result;
}

uint64_t sub_259FB94E4(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

Swift::Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> EnumValue.asInteger()()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if ((*(unsigned char *)(v0 + 32) & 1) == 0)
  {
    uint64_t v2 = *(void *)(v0 + 24);
    uint64_t v3 = *(void *)(v0 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 40);
    swift_unknownObjectRetain();
    sub_259FB94E4(v1, v2, 0);
    sub_259FB94E4(v1, v2, 0);
    Swift::Int v6 = v5(v1, v2, ObjectType, v3);
    sub_259FB680C(v1, v2, 0);
    swift_unknownObjectRelease();
    sub_259FB680C(v1, v2, 0);
    return v6;
  }
  return v1;
}

Swift::Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> EnumValueImpl.asInteger()()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if ((*(unsigned char *)(v0 + 32) & 1) == 0)
  {
    uint64_t v2 = *(void *)(v0 + 24);
    uint64_t v3 = *(void *)(v0 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v6 = v5(v1, v2, ObjectType, v3);
    sub_259FB680C(v1, v2, 0);
    return v6;
  }
  return v1;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> EnumValue.asString()()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v0 + 32))
  {
    uint64_t v4 = *(void *)(v0 + 8);
    uint64_t ObjectType = swift_getObjectType();
    Swift::Int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    swift_unknownObjectRetain();
    sub_259FB94E4(v2, v3, 1);
    uint64_t v7 = v6(v2, ObjectType, v4);
    uint64_t v9 = v8;
    swift_unknownObjectRelease();
    sub_259FB680C(v2, v3, 1);
    if (!v1)
    {
      uint64_t v2 = v7;
      uint64_t v3 = v9;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v10 = v2;
  uint64_t v11 = (void *)v3;
  result._object = v11;
  result._uint64_t countAndFlagsBits = v10;
  return result;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> EnumValueImpl.asString()()
{
  uint64_t v2 = *(void *)(v0 + 16);
  if (*(unsigned char *)(v0 + 32))
  {
    uint64_t v3 = *(uint64_t (***)(void, uint64_t, void))(v0 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v5 = v3[6](v2, ObjectType, v3);
    if (!v1)
    {
      uint64_t v2 = v5;
      uint64_t v3 = v6;
    }
  }
  else
  {
    uint64_t v3 = *(uint64_t (***)(void, uint64_t, void))(v0 + 24);
    swift_bridgeObjectRetain();
  }
  uint64_t v7 = v2;
  uint64_t v8 = v3;
  result._object = v8;
  result._uint64_t countAndFlagsBits = v7;
  return result;
}

uint64_t EnumValueImpl.type.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t EnumValueImpl.asPublic()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  char v4 = *(unsigned char *)(v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v4;
  swift_unknownObjectRetain();
  return sub_259FB94E4(v2, v3, v4);
}

uint64_t EnumValueImpl.encode(to:)(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = *(unsigned char *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A00EFA0();
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRetain();
LABEL_5:
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
    sub_25A00EE50();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, ObjectType, v3);
  if (!v2) {
    goto LABEL_5;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

uint64_t sub_259FB99A8(void *a1)
{
  return EnumValueImpl.encode(to:)(a1);
}

uint64_t _s17PoirotSchematizer13EnumValueImplV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 32);
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v21 = *(void *)(a2 + 16);
  uint64_t v22 = *(void *)(a1 + 16);
  uint64_t v19 = *(void *)(a2 + 24);
  uint64_t v20 = *(void *)(a1 + 24);
  char v23 = *(unsigned char *)(a2 + 32);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = (*(uint64_t (**)(void))(*(void *)(v2 + 8) + 8))();
  uint64_t v8 = v7;
  uint64_t v9 = swift_getObjectType();
  if (v6 == (*(uint64_t (**)(void))(*(void *)(v4 + 8) + 8))() && v8 == v10)
  {
    swift_bridgeObjectRelease_n();
    if (v3)
    {
LABEL_7:
      if (v23)
      {
        return v22 == v21;
      }
      else
      {
        uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 40);
        swift_bridgeObjectRetain();
        uint64_t v18 = v17(v21, v19, v9, v4);
        sub_259FB680C(v21, v19, 0);
        return v22 == v18;
      }
    }
  }
  else
  {
    char v12 = sub_25A00EE40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v12 & 1) == 0) {
      return result;
    }
    if (v3) {
      goto LABEL_7;
    }
  }
  if (v23)
  {
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 40);
    swift_bridgeObjectRetain();
    uint64_t v16 = v15(v22, v20, ObjectType, v2);
    sub_259FB680C(v22, v20, 0);
    return v16 == v21;
  }
  if (v22 == v21 && v20 == v19) {
    return 1;
  }
  return sub_25A00EE40();
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s17PoirotSchematizer13EnumValueImplVwxx_0(uint64_t a1)
{
  swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  return sub_259FB680C(v2, v3, v4);
}

uint64_t _s17PoirotSchematizer13EnumValueImplVwcp_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  char v5 = *(unsigned char *)(a2 + 32);
  swift_unknownObjectRetain();
  sub_259FB94E4(v3, v4, v5);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return a1;
}

uint64_t _s17PoirotSchematizer13EnumValueImplVwca_0(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  LOBYTE(v2) = *((unsigned char *)v2 + 32);
  sub_259FB94E4(v5, v6, (char)v2);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  char v9 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = (_BYTE)v2;
  sub_259FB680C(v7, v8, v9);
  return a1;
}

uint64_t _s17PoirotSchematizer13EnumValueImplVwta_0(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  char v7 = *(unsigned char *)(a1 + 32);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 32) = v4;
  sub_259FB680C(v5, v6, v7);
  return a1;
}

uint64_t _s17PoirotSchematizer13EnumValueImplVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_259FB9E44(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EnumValueImpl()
{
  return &type metadata for EnumValueImpl;
}

uint64_t destroy for EnumValueImpl.Container(uint64_t a1)
{
  return sub_259FB680C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s17PoirotSchematizer13EnumValueImplV9ContainerOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_259FB94E4(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for EnumValueImpl.Container(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_259FB94E4(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_259FB680C(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for EnumValueImpl.Container(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_259FB680C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for EnumValueImpl.Container(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EnumValueImpl.Container(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_259FBA038(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_259FBA040(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for EnumValueImpl.Container()
{
  return &type metadata for EnumValueImpl.Container;
}

void *initializeBufferWithCopyOfBuffer for AnyKey(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for AnyKey()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for AnyKey(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for AnyKey(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyKey(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyKey()
{
  return &type metadata for AnyKey;
}

uint64_t sub_259FBA1A4()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_259FBA1D4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_259FBA1DC()
{
  return 0;
}

void sub_259FBA1E8(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_259FBA1F0(uint64_t a1)
{
  unint64_t v2 = sub_259FBA3F8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_259FBA22C(uint64_t a1)
{
  unint64_t v2 = sub_259FBA3F8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_259FBA268()
{
  return MEMORY[0x263F8D390];
}

void *sub_259FBA274@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

unint64_t sub_259FBA284()
{
  unint64_t result = qword_26A402DC8;
  if (!qword_26A402DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A402DC8);
  }
  return result;
}

uint64_t sub_259FBA2D8()
{
  return MEMORY[0x263F8D398];
}

unint64_t sub_259FBA2E8()
{
  unint64_t result = qword_26A402DD0;
  if (!qword_26A402DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A402DD0);
  }
  return result;
}

uint64_t sub_259FBA33C()
{
  return MEMORY[0x263F8D388];
}

unint64_t sub_259FBA34C()
{
  unint64_t result = qword_26A402DD8;
  if (!qword_26A402DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A402DD8);
  }
  return result;
}

unint64_t sub_259FBA3A4()
{
  unint64_t result = qword_26A402DE0;
  if (!qword_26A402DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A402DE0);
  }
  return result;
}

unint64_t sub_259FBA3F8()
{
  unint64_t result = qword_26A402DE8;
  if (!qword_26A402DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A402DE8);
  }
  return result;
}

uint64_t sub_259FBA454(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v58 = *MEMORY[0x263EF8340];
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  uint64_t v51 = *a2;
  unint64_t v52 = v7;
  sub_259FAEE8C(a1, (uint64_t)&v53);
  if (v7 >> 62)
  {
    if (v7 >> 62 != 1)
    {
      switch(v6)
      {
        case 1:
          if (v57 != 1) {
            goto LABEL_49;
          }
          unint64_t v14 = v53;
          return sub_259FB37C8(v14);
        case 2:
          if (v57) {
            goto LABEL_49;
          }
          uint64_t v32 = (int)v53;
          goto LABEL_35;
        case 3:
          if (v57 != 1) {
            goto LABEL_49;
          }
          goto LABEL_32;
        case 4:
          if (v57) {
            goto LABEL_49;
          }
          goto LABEL_32;
        case 5:
          if (v57 != 2) {
            goto LABEL_49;
          }
          goto LABEL_44;
        case 6:
          if (v57 != 3) {
            goto LABEL_49;
          }
LABEL_44:
          unint64_t v14 = v53;
          return sub_259FB37C8(v14);
        case 7:
          if (v57 != 2) {
            goto LABEL_49;
          }
          uint64_t v32 = v53;
LABEL_35:
          unint64_t v14 = (2 * v32) ^ (v32 >> 63);
          return sub_259FB37C8(v14);
        case 8:
          if (v57 != 3) {
            goto LABEL_49;
          }
          goto LABEL_46;
        case 9:
          if (v57 != 2) {
            goto LABEL_49;
          }
          goto LABEL_46;
        case 10:
          if (v57 != 5) {
            goto LABEL_49;
          }
LABEL_46:
          uint64_t v46 = v53;
          uint64_t v33 = &v47;
          goto LABEL_47;
        case 11:
          if (v57 != 4) {
            goto LABEL_49;
          }
LABEL_32:
          LODWORD(v46) = v53;
          uint64_t v33 = (uint64_t *)((char *)&v46 + 4);
LABEL_47:
          sub_259FB3A4C((uint64_t)&v46, (uint64_t)v33, &v47);
          uint64_t v39 = v47;
          unint64_t v40 = v48;
          sub_259FAE450(v47, v48);
          sub_259FBB220(v39, v40);
          sub_259FAE4A8(v39, v40);
          return sub_259FAE4A8(v39, v40);
        case 12:
          if (v57 != 6) {
            goto LABEL_49;
          }
          unint64_t v14 = v53;
          return sub_259FB37C8(v14);
        case 13:
          if (v57 != 8) {
            goto LABEL_49;
          }
          sub_259FAF0F0(&v53, (uint64_t)&v47);
          uint64_t v34 = v49;
          uint64_t v35 = v50;
          __swift_project_boxed_opaque_existential_1(&v47, v49);
          unint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v34, v35);
          if ((v36 & 0x8000000000000000) != 0)
          {
            sub_25A00EDA0();
            __break(1u);
            JUMPOUT(0x259FBA9C0);
          }
          sub_259FB37C8(v36);
          uint64_t v37 = v50;
          uint64_t v38 = __swift_project_boxed_opaque_existential_1(&v47, v49);
          MEMORY[0x270FA5388](v38);
          (*(void (**)(uint64_t (*)(uint64_t, uint64_t)))(v37 + 32))(sub_259FBB444);
          goto LABEL_16;
        case 14:
          if (v57 != 9) {
            goto LABEL_49;
          }
          sub_259FAF0F0(&v53, (uint64_t)&v47);
          uint64_t v30 = v49;
          uint64_t v31 = v50;
          uint64_t v19 = __swift_project_boxed_opaque_existential_1(&v47, v49);
          uint64_t v20 = v4;
          uint64_t v21 = v30;
          uint64_t v22 = v31;
          goto LABEL_15;
        default:
          if (!v57) {
            goto LABEL_12;
          }
          goto LABEL_49;
      }
    }
    if (v57 == 9)
    {
      sub_259FAF0F0(&v53, (uint64_t)&v47);
      uint64_t v16 = v49;
      uint64_t v17 = v50;
      uint64_t v18 = __swift_project_boxed_opaque_existential_1(&v47, v49);
      swift_unknownObjectRetain();
      uint64_t v19 = v18;
      uint64_t v20 = v4;
      uint64_t v21 = v16;
      uint64_t v22 = v17;
LABEL_15:
      sub_259FB3BF0((uint64_t)v19, v20, v21, v22);
LABEL_16:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
      uint64_t v23 = v51;
      uint64_t v24 = v52;
      return sub_259FAD1BC(v23, v24);
    }
    if (v57 == 10)
    {
      uint64_t v8 = v54;
      uint64_t v9 = v55;
      swift_unknownObjectRetain();
      sub_25A0051D0(v8, v9);
      swift_unknownObjectRelease();
LABEL_53:
      uint64_t v23 = v6;
      uint64_t v24 = v7;
      return sub_259FAD1BC(v23, v24);
    }
LABEL_49:
    sub_259FBA9FC();
    swift_allocError();
    uint64_t v42 = v41;
    sub_259FAEE8C(a1, v41);
    *(void *)(v42 + 48) = v6;
    *(void *)(v42 + 56) = v7;
    *(unsigned char *)(v42 + 64) = 0;
    sub_259FBAA50(v6, v7);
    sub_259FBAA50(v6, v7);
    swift_willThrow();
    return sub_259FBAA5C((uint64_t)&v51);
  }
  if (v57)
  {
    if (v57 != 7) {
      goto LABEL_49;
    }
    uint64_t v10 = v54;
    uint64_t v11 = v55;
    char v12 = v56;
    if (v56)
    {
      swift_unknownObjectRetain();
      unint64_t v13 = v10;
    }
    else
    {
      char v43 = v56;
      uint64_t v25 = *((void *)&v53 + 1);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 40);
      uint64_t v45 = ObjectType;
      sub_259FBAA50(v6, v7);
      sub_259FB94E4(v10, v11, 0);
      unint64_t v13 = v44(v10, v11, v45, v25);
      sub_259FB680C(v10, v11, 0);
      if (v3)
      {
        swift_unknownObjectRelease();
        uint64_t v27 = v10;
        uint64_t v28 = v11;
        char v29 = 0;
LABEL_52:
        sub_259FB680C(v27, v28, v29);
        goto LABEL_53;
      }
      char v12 = v43;
    }
    sub_259FB37C8(v13);
    swift_unknownObjectRelease();
    uint64_t v27 = v10;
    uint64_t v28 = v11;
    char v29 = v12;
    goto LABEL_52;
  }
LABEL_12:
  unint64_t v14 = (int)v53;
  return sub_259FB37C8(v14);
}

unint64_t sub_259FBA9FC()
{
  unint64_t result = qword_26A402DF0;
  if (!qword_26A402DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A402DF0);
  }
  return result;
}

uint64_t sub_259FBAA50(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x8000000000000000) == 0) {
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_259FBAA5C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402DF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_259FBAABC(uint64_t a1, uint64_t *a2, int a3)
{
  uint64_t v5 = v3;
  uint64_t v65 = *MEMORY[0x263EF8340];
  uint64_t v8 = *a2;
  unint64_t v9 = a2[1];
  uint64_t v58 = *a2;
  unint64_t v59 = v9;
  sub_259FAEE8C(a1, (uint64_t)&v60);
  if (v9 >> 62)
  {
    if (v9 >> 62 != 1)
    {
      switch(v8)
      {
        case 1:
          if (v64 != 1) {
            goto LABEL_59;
          }
          unint64_t v35 = v60;
          goto LABEL_53;
        case 2:
          if (v64) {
            goto LABEL_59;
          }
          uint64_t v36 = (int)v60;
          goto LABEL_43;
        case 3:
          if (v64 != 1) {
            goto LABEL_59;
          }
          goto LABEL_40;
        case 4:
          if (v64) {
            goto LABEL_59;
          }
          goto LABEL_40;
        case 5:
          if (v64 != 2) {
            goto LABEL_59;
          }
          goto LABEL_52;
        case 6:
          if (v64 != 3) {
            goto LABEL_59;
          }
LABEL_52:
          unint64_t v35 = v60;
          goto LABEL_53;
        case 7:
          if (v64 != 2) {
            goto LABEL_59;
          }
          uint64_t v36 = v60;
LABEL_43:
          sub_259FB37C8((8 * a3));
          unint64_t v24 = (2 * v36) ^ (v36 >> 63);
          return sub_259FB37C8(v24);
        case 8:
          if (v64 != 3) {
            goto LABEL_59;
          }
          goto LABEL_56;
        case 9:
          if (v64 != 2) {
            goto LABEL_59;
          }
          goto LABEL_56;
        case 10:
          if (v64 != 5) {
            goto LABEL_59;
          }
LABEL_56:
          uint64_t v44 = v60;
          sub_259FB37C8((8 * a3) | 1);
          uint64_t v53 = v44;
          uint64_t v38 = &v54;
          goto LABEL_57;
        case 11:
          if (v64 != 4) {
            goto LABEL_59;
          }
LABEL_40:
          int v37 = v60;
          sub_259FB37C8((8 * a3) | 5);
          LODWORD(v53) = v37;
          uint64_t v38 = (uint64_t *)((char *)&v53 + 4);
LABEL_57:
          sub_259FB3A4C((uint64_t)&v53, (uint64_t)v38, &v54);
          uint64_t v45 = v54;
          unint64_t v46 = v55;
          sub_259FAE450(v54, v55);
          sub_259FBB220(v45, v46);
          sub_259FAE4A8(v45, v46);
          return sub_259FAE4A8(v45, v46);
        case 12:
          if (v64 != 6) {
            goto LABEL_59;
          }
          unint64_t v35 = v60;
LABEL_53:
          sub_259FB37C8((8 * a3));
          unint64_t v24 = v35;
          return sub_259FB37C8(v24);
        case 13:
          if (v64 != 8) {
            goto LABEL_59;
          }
          sub_259FAF0F0(&v60, (uint64_t)&v54);
          sub_259FB37C8((8 * a3) | 2);
          uint64_t v39 = v56;
          uint64_t v40 = v57;
          __swift_project_boxed_opaque_existential_1(&v54, v56);
          unint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v39, v40);
          if ((v41 & 0x8000000000000000) != 0)
          {
            sub_25A00EDA0();
            __break(1u);
            JUMPOUT(0x259FBB150);
          }
          sub_259FB37C8(v41);
          uint64_t v42 = v57;
          char v43 = __swift_project_boxed_opaque_existential_1(&v54, v56);
          MEMORY[0x270FA5388](v43);
          (*(void (**)(uint64_t (*)(uint64_t, uint64_t)))(v42 + 32))(sub_259FBB460);
          goto LABEL_18;
        case 14:
          if (v64 != 9) {
            goto LABEL_59;
          }
          sub_259FAF0F0(&v60, (uint64_t)&v54);
          unint64_t v25 = (8 * a3) | 2;
          goto LABEL_17;
        default:
          if (!v64) {
            goto LABEL_15;
          }
          goto LABEL_59;
      }
    }
    if (v64 == 9)
    {
      sub_259FAF0F0(&v60, (uint64_t)&v54);
      swift_unknownObjectRetain();
      unint64_t v25 = (8 * a3) | 2;
LABEL_17:
      sub_259FB37C8(v25);
      uint64_t v26 = v56;
      uint64_t v27 = v57;
      uint64_t v28 = __swift_project_boxed_opaque_existential_1(&v54, v56);
      sub_259FB3BF0((uint64_t)v28, v5, v26, v27);
LABEL_18:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v54);
      return sub_259FAD1BC(v58, v59);
    }
    if (v64 == 10)
    {
      uint64_t v10 = v61;
      unint64_t v11 = v62;
      swift_unknownObjectRetain();
      sub_259FB37C8((8 * a3) | 2);
      uint64_t v56 = MEMORY[0x263F8D3E8];
      uint64_t v57 = MEMORY[0x263F07B80];
      uint64_t v54 = v10;
      unint64_t v55 = v11;
      char v12 = __swift_project_boxed_opaque_existential_1(&v54, MEMORY[0x263F8D3E8]);
      uint64_t v13 = *v12;
      if (*v12 && (unint64_t v14 = (unsigned char *)v12[1], v15 = (uint64_t)&v14[-v13], v14 != (unsigned char *)v13))
      {
        if (v15 <= 14)
        {
          uint64_t v16 = sub_259FC3B50((unsigned char *)*v12, v14);
          unint64_t v17 = v49 & 0xFFFFFFFFFFFFFFLL;
          swift_unknownObjectRetain();
        }
        else
        {
          swift_unknownObjectRetain();
          if ((unint64_t)v15 >= 0x7FFFFFFF)
          {
            uint64_t v16 = sub_259FC3C98(v13, (uint64_t)v14);
            unint64_t v17 = v50 | 0x8000000000000000;
          }
          else
          {
            uint64_t v16 = sub_259FC3C14(v13, (uint64_t)v14);
            unint64_t v17 = v34 | 0x4000000000000000;
          }
        }
      }
      else
      {
        swift_unknownObjectRetain();
        uint64_t v16 = 0;
        unint64_t v17 = 0xC000000000000000;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v54);
      swift_unknownObjectRelease();
      sub_25A005290(v16, v17);
      swift_unknownObjectRelease();
      sub_259FAE4A8(v16, v17);
      return sub_259FAD1BC(v58, v59);
    }
    goto LABEL_59;
  }
  if (v64)
  {
    if (v64 != 7)
    {
LABEL_59:
      sub_259FBA9FC();
      swift_allocError();
      uint64_t v48 = v47;
      sub_259FAEE8C(a1, v47);
      *(void *)(v48 + 48) = v8;
      *(void *)(v48 + 56) = v9;
      *(unsigned char *)(v48 + 64) = 0;
      sub_259FBAA50(v8, v9);
      sub_259FBAA50(v8, v9);
      swift_willThrow();
      return sub_259FBAA5C((uint64_t)&v58);
    }
    uint64_t v18 = *((void *)&v60 + 1);
    uint64_t v19 = v61;
    uint64_t v20 = v62;
    char v21 = v63;
    swift_unknownObjectRetain();
    sub_259FB37C8((8 * a3));
    if (v21)
    {
      unint64_t v22 = v19;
    }
    else
    {
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 40);
      uint64_t v52 = ObjectType;
      swift_bridgeObjectRetain();
      unint64_t v22 = v51(v19, v20, v52, v18);
      sub_259FB680C(v19, v20, 0);
      if (v4)
      {
        swift_unknownObjectRelease();
        uint64_t v31 = v19;
        uint64_t v32 = v20;
        char v33 = 0;
LABEL_23:
        sub_259FB680C(v31, v32, v33);
        return sub_259FAD1BC(v8, v9);
      }
    }
    sub_259FB37C8(v22);
    swift_unknownObjectRelease();
    uint64_t v31 = v19;
    uint64_t v32 = v20;
    char v33 = v21;
    goto LABEL_23;
  }
LABEL_15:
  unint64_t v23 = (int)v60;
  sub_259FB37C8((8 * a3));
  unint64_t v24 = v23;
  return sub_259FB37C8(v24);
}

uint64_t sub_259FBB18C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_25A00E270();
  if (!result || (uint64_t result = sub_25A00E290(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_25A00E280();
      return sub_25A00E330();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_259FBB220(uint64_t a1, unint64_t a2)
{
  v10[5] = *MEMORY[0x263EF8340];
  v10[3] = MEMORY[0x263F06F78];
  v10[4] = MEMORY[0x263F06F68];
  v10[0] = a1;
  v10[1] = a2;
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v10, MEMORY[0x263F06F78]);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5) {
        __break(1u);
      }
      sub_259FAE450(a1, a2);
      sub_259FAE450(v5, v6);
      sub_259FBB18C((int)v5, v5 >> 32);
      sub_259FAE4A8(v5, v6);
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(v5 + 16);
      uint64_t v8 = *(void *)(v5 + 24);
      sub_259FAE450(a1, a2);
      swift_retain();
      swift_retain();
      sub_259FBB18C(v7, v8);
      swift_release();
      swift_release();
      break;
    default:
      sub_259FAE450(a1, a2);
      sub_25A00E330();
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t sub_259FBB444(uint64_t a1, uint64_t a2)
{
  return sub_259FB3B18(a1, a2);
}

uint64_t sub_259FBB460(uint64_t a1, uint64_t a2)
{
  return sub_259FBB444(a1, a2);
}

uint64_t sub_259FBB478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  *(void *)&long long v57 = a2;
  uint64_t v70 = a1;
  uint64_t v55 = a4;
  uint64_t v54 = sub_25A00E6B0();
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25A00E730();
  uint64_t v47 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v46 = *v4;
  uint64_t v49 = *((void *)v4 + 1);
  uint64_t v48 = *((void *)v4 + 2);
  uint64_t v56 = *((void *)v4 + 3);
  int v50 = v4[32];
  uint64_t v52 = *((unsigned int *)v4 + 9);
  int v51 = v4[40];
  uint64_t v13 = *((void *)v4 + 6);
  unint64_t v12 = *((void *)v4 + 7);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(a3 + 24))(0xD000000000000024, 0x800000025A00F520, ObjectType, a3);
  if (v5) {
    return result;
  }
  uint64_t v17 = result;
  uint64_t v18 = v16;
  uint64_t v42 = v13;
  unint64_t v19 = v12;
  char v43 = v11;
  uint64_t v44 = v9;
  uint64_t v45 = v8;
  uint64_t v20 = v53;
  uint64_t v21 = v54;
  uint64_t v22 = v55;
  uint64_t v23 = sub_25A00E950();
  *(void *)&long long v62 = v17;
  *((void *)&v62 + 1) = v18;
  uint64_t v63 = v23;
  uint64_t v24 = v57;
  swift_bridgeObjectRetain();
  uint64_t result = SchematizedDataComposer.subscript.setter(v70, v24, 1701667182, 0xE400000000000000);
  if (v56 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v56 > 0x7FFFFFFF)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  v68[0] = v56;
  memset(&v68[1], 0, 24);
  __int16 v69 = 0;
  uint64_t v25 = v63;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v58 = v25;
  sub_259FFB7FC((uint64_t)v68, 0x7265626D756ELL, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  uint64_t v27 = v58;
  uint64_t v63 = v58;
  swift_bridgeObjectRelease();
  *(void *)&long long v57 = &v63;
  if (v19 >> 60 == 15)
  {
    sub_259FFB0CC(0x736E6F6974706FLL, 0xE700000000000000, (uint64_t)&v58);
    sub_259FB66F8(v58, *((unint64_t *)&v58 + 1), v59, v60, v61);
  }
  else
  {
    v66[0] = v42;
    v66[1] = v19;
    v66[2] = 0;
    v66[3] = 0;
    __int16 v67 = 2304;
    sub_259FAE450(v42, v19);
    char v28 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v58 = v27;
    sub_259FFB7FC((uint64_t)v66, 0x736E6F6974706FLL, 0xE700000000000000, v28);
    uint64_t v63 = v58;
    swift_bridgeObjectRelease();
  }
  uint64_t v29 = v21;
  uint64_t v30 = v20;
  uint64_t v31 = v45;
  char v32 = v51;
  int v33 = v50;
  LOBYTE(v58) = v46;
  uint64_t v34 = (uint64_t)v43;
  sub_259FB7B54(&v58, (uint64_t)v43);
  uint64_t v35 = sub_25A00E720();
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v34, v44);
  SchematizedDataComposer.subscript.setter(v35, 0, 1701869940, 0xE400000000000000);
  uint64_t v36 = v48;
  swift_bridgeObjectRetain();
  SchematizedDataComposer.subscript.setter(v49, v36, 0x6D616E5F65707974, 0xE900000000000065);
  int v37 = (unsigned int *)MEMORY[0x263F503B0];
  if (!v33) {
    int v37 = (unsigned int *)MEMORY[0x263F503A8];
  }
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v31, *v37, v29);
  uint64_t v38 = sub_25A00E6A0();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v29);
  SchematizedDataComposer.subscript.setter(v38, 0, 0x6C6562616CLL, 0xE500000000000000);
  if (v32)
  {
    sub_259FFB0CC(0x6E695F666F656E6FLL, 0xEB00000000786564, (uint64_t)&v58);
    sub_259FB66F8(v58, *((unint64_t *)&v58 + 1), v59, v60, v61);
    uint64_t v39 = v63;
  }
  else
  {
    v64[0] = v52;
    memset(&v64[1], 0, 24);
    __int16 v65 = 0;
    uint64_t v40 = v63;
    char v41 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v58 = v40;
    sub_259FFB7FC((uint64_t)v64, 0x6E695F666F656E6FLL, 0xEB00000000786564, v41);
    uint64_t v39 = v58;
    swift_bridgeObjectRelease();
  }
  long long v57 = v62;
  long long v58 = v62;
  uint64_t v59 = v39;
  SchematizedDataComposer.compose()(v22);
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_259FBBAB4(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, uint64_t a5, unint64_t a6, uint64_t *a7, uint64_t a8)
{
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 56))(&v34, ObjectType, a2);
  if (v8) {
    return swift_unknownObjectRelease();
  }
  unint64_t v17 = v34;
  unint64_t v18 = v35;
  uint64_t result = sub_259FAE500(a3);
  if (result != 2
    || v18 >> 62 == 1
    || v18 >> 62 == 2 && __PAIR128__((v17 >= 0xD) + v18 + 0x7FFFFFFFFFFFFFFFLL, v17 - 13) < 2)
  {
    uint64_t v38 = a8;
    unint64_t v34 = v17;
    unint64_t v35 = v18;
    char v20 = sub_259FAE500(a3);
    sub_259FAE514((uint64_t *)&v34, v20, (uint64_t)v37);
    sub_259FAEE8C((uint64_t)v37, (uint64_t)v36);
    unint64_t v34 = a5;
    unint64_t v35 = a6;
    swift_unknownObjectRetain();
    sub_259FDB3CC((uint64_t)&v34, a7);
    sub_259FC1F84((uint64_t)&v34);
    sub_259FAED74((uint64_t)v37);
    uint64_t v21 = v17;
    uint64_t v22 = v18;
LABEL_27:
    sub_259FAD1BC(v21, v22);
    return swift_unknownObjectRelease();
  }
  uint64_t v23 = *a4;
  if (*a4)
  {
    uint64_t v24 = a4[1] - v23;
    uint64_t v25 = a4[3];
    if (v25 >= v24) {
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v25 = a4[3];
    if ((v25 & 0x8000000000000000) == 0) {
      goto LABEL_26;
    }
    uint64_t v24 = 0;
  }
  LODWORD(v26) = *(unsigned __int8 *)(v23 + v25);
  uint64_t v27 = v25 + 1;
  if (*(char *)(v23 + v25) < 0)
  {
    if (v27 >= v24) {
      goto LABEL_26;
    }
    v26 &= 0x7Fu;
    uint64_t v30 = v23 + 1;
    unint64_t v31 = 7;
    while (1)
    {
      uint64_t v27 = v25 + 2;
      v26 |= (unint64_t)(*(unsigned char *)(v30 + v25) & 0x7F) << v31;
      if ((*(unsigned char *)(v30 + v25) & 0x80) == 0) {
        break;
      }
      if (v27 < v24)
      {
        ++v25;
        BOOL v32 = v31 > 0x38;
        v31 += 7;
        if (!v32) {
          continue;
        }
      }
      goto LABEL_26;
    }
  }
  a4[3] = v27;
  if ((v26 & 0x80000000) != 0)
  {
LABEL_26:
    sub_259FBA9FC();
    swift_allocError();
    *(void *)uint64_t v33 = 1;
    *(_OWORD *)(v33 + 8) = 0u;
    *(_OWORD *)(v33 + 24) = 0u;
    *(_OWORD *)(v33 + 40) = 0u;
    *(void *)(v33 + 56) = 0;
    *(unsigned char *)(v33 + 64) = 2;
    swift_willThrow();
    uint64_t v21 = v17;
    uint64_t v22 = v18;
    goto LABEL_27;
  }
  uint64_t v38 = v18;
  uint64_t v28 = v27 + v26;
  if (!__OFADD__(v27, v26))
  {
    for (; v27 < v28; uint64_t v27 = a4[3])
    {
      unint64_t v34 = v17;
      unint64_t v35 = v38;
      sub_259FF3780(&v34, (uint64_t)v37);
      sub_259FAEE8C((uint64_t)v37, (uint64_t)v36);
      unint64_t v34 = a5;
      unint64_t v35 = a6;
      swift_unknownObjectRetain();
      sub_259FDB3CC((uint64_t)&v34, a7);
      sub_259FC1F84((uint64_t)&v34);
      sub_259FAED74((uint64_t)v37);
    }
    if (v27 != v28)
    {
      sub_259FBA9FC();
      swift_allocError();
      *(void *)uint64_t v29 = 1;
      *(_OWORD *)(v29 + 8) = 0u;
      *(_OWORD *)(v29 + 24) = 0u;
      *(_OWORD *)(v29 + 40) = 0u;
      *(void *)(v29 + 56) = 0;
      *(unsigned char *)(v29 + 64) = 2;
      swift_willThrow();
    }
    uint64_t v21 = v17;
    uint64_t v22 = v38;
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t sub_259FBBE2C(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, uint64_t a5, unint64_t a6, void **a7, uint64_t *a8, void *a9)
{
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 56))(&v48, ObjectType, a2);
  if (v9) {
    return swift_unknownObjectRelease();
  }
  uint64_t v52 = a8;
  unint64_t v19 = v48;
  unint64_t v18 = v49;
  uint64_t result = sub_259FAE500(a3);
  if (result != 2
    || v18 >> 62 == 1
    || v18 >> 62 == 2 && __PAIR128__((v19 >= 0xD) + v18 + 0x7FFFFFFFFFFFFFFFLL, v19 - 13) < 2)
  {
    unint64_t v48 = v19;
    unint64_t v49 = v18;
    char v21 = sub_259FAE500(a3);
    sub_259FAE514((uint64_t *)&v48, v21, (uint64_t)v51);
    sub_259FAEE8C((uint64_t)v51, (uint64_t)v50);
    unint64_t v48 = a5;
    unint64_t v49 = a6;
    swift_unknownObjectRetain();
    sub_259FEDEC0((uint64_t)&v48, a7, v52, a9);
    sub_259FC1F84((uint64_t)&v48);
    sub_259FAED74((uint64_t)v51);
LABEL_52:
    sub_259FAD1BC(v19, v18);
    return swift_unknownObjectRelease();
  }
  uint64_t v22 = *a4;
  if (*a4)
  {
    uint64_t v23 = a4[1] - v22;
    uint64_t v24 = a4[3];
    if (v24 >= v23) {
      goto LABEL_51;
    }
  }
  else
  {
    uint64_t v24 = a4[3];
    if ((v24 & 0x8000000000000000) == 0) {
      goto LABEL_51;
    }
    uint64_t v23 = 0;
  }
  LODWORD(v25) = *(unsigned __int8 *)(v22 + v24);
  uint64_t v26 = v24 + 1;
  if (*(char *)(v22 + v24) < 0)
  {
    if (v26 >= v23) {
      goto LABEL_51;
    }
    v25 &= 0x7Fu;
    uint64_t v41 = v22 + 1;
    unint64_t v42 = 7;
    while (1)
    {
      uint64_t v26 = v24 + 2;
      v25 |= (unint64_t)(*(unsigned char *)(v41 + v24) & 0x7F) << v42;
      if ((*(unsigned char *)(v41 + v24) & 0x80) == 0) {
        break;
      }
      if (v26 < v23)
      {
        ++v24;
        BOOL v43 = v42 > 0x38;
        v42 += 7;
        if (!v43) {
          continue;
        }
      }
      goto LABEL_51;
    }
  }
  a4[3] = v26;
  if ((v25 & 0x80000000) != 0)
  {
LABEL_51:
    sub_259FBA9FC();
    swift_allocError();
    *(void *)uint64_t v44 = 1;
    *(_OWORD *)(v44 + 8) = 0u;
    *(_OWORD *)(v44 + 24) = 0u;
    *(_OWORD *)(v44 + 40) = 0u;
    *(void *)(v44 + 56) = 0;
    *(unsigned char *)(v44 + 64) = 2;
    swift_willThrow();
    goto LABEL_52;
  }
  uint64_t v27 = v26 + v25;
  if (!__OFADD__(v26, v25))
  {
    if (v26 < v27)
    {
      unint64_t v47 = v18;
      uint64_t v45 = v26 + v25;
      unint64_t v46 = v19;
      while (1)
      {
        unint64_t v48 = v19;
        unint64_t v49 = v18;
        sub_259FF3780(&v48, (uint64_t)v51);
        sub_259FAEE8C((uint64_t)v51, (uint64_t)v50);
        unint64_t v48 = a5;
        unint64_t v49 = a6;
        uint64_t v28 = swift_getObjectType();
        uint64_t v29 = *(void *)(a6 + 8);
        uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8);
        swift_unknownObjectRetain();
        uint64_t v31 = v30(v28, v29);
        if (v31 == 0x7079745F6D756E65 && v32 == 0xE900000000000065) {
          break;
        }
        uint64_t v34 = v31;
        uint64_t v35 = v32;
        unint64_t v19 = v46;
        unint64_t v18 = v47;
        if (sub_25A00EE40())
        {
          swift_bridgeObjectRelease();
LABEL_24:
          uint64_t v36 = *a7;
          swift_bridgeObjectRetain();
          sub_259FF0DDC((uint64_t)v50, v36, v52);
          goto LABEL_31;
        }
        BOOL v37 = v34 == 0x5F6567617373656DLL && v35 == 0xEC00000065707974;
        if (!v37 && (sub_25A00EE40() & 1) == 0)
        {
          if (v34 == 0x6F69736E65747865 && v35 == 0xE90000000000006ELL)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v40 = sub_25A00EE40();
            swift_bridgeObjectRelease();
            if ((v40 & 1) == 0) {
              goto LABEL_42;
            }
          }
          sub_259FF15B0((uint64_t)v50, a9);
LABEL_42:
          uint64_t v27 = v45;
          goto LABEL_32;
        }
        swift_bridgeObjectRelease();
        uint64_t v38 = *a7;
        swift_bridgeObjectRetain();
        sub_259FF2194((uint64_t)v50, v38, a9, v52);
LABEL_31:
        uint64_t v27 = v45;
        swift_bridgeObjectRelease();
LABEL_32:
        sub_259FC1F84((uint64_t)&v48);
        sub_259FAED74((uint64_t)v51);
        uint64_t v26 = a4[3];
        if (v26 >= v27) {
          goto LABEL_50;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v19 = v46;
      unint64_t v18 = v47;
      goto LABEL_24;
    }
LABEL_50:
    if (v26 == v27) {
      goto LABEL_52;
    }
    goto LABEL_51;
  }
  __break(1u);
  return result;
}

uint64_t sub_259FBC314(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, uint64_t a5, unint64_t a6, void *a7, uint64_t *a8, void *a9, void **a10)
{
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 56))(&v37, ObjectType, a2);
  if (v10) {
    return swift_unknownObjectRelease();
  }
  uint64_t v41 = a10;
  unint64_t v19 = v37;
  unint64_t v20 = v38;
  uint64_t result = sub_259FAE500(a3);
  if (result != 2
    || v20 >> 62 == 1
    || v20 >> 62 == 2 && __PAIR128__((v19 >= 0xD) + v20 + 0x7FFFFFFFFFFFFFFFLL, v19 - 13) < 2)
  {
    unint64_t v37 = v19;
    unint64_t v38 = v20;
    char v22 = sub_259FAE500(a3);
    sub_259FAE514((uint64_t *)&v37, v22, (uint64_t)v40);
    sub_259FAEE8C((uint64_t)v40, (uint64_t)v39);
    unint64_t v37 = a5;
    unint64_t v38 = a6;
    swift_unknownObjectRetain();
    sub_259FEE0E4((uint64_t)&v37, a7, a8, a9, v41);
    sub_259FC1F84((uint64_t)&v37);
    sub_259FAED74((uint64_t)v40);
    uint64_t v23 = v19;
    uint64_t v24 = v20;
LABEL_27:
    sub_259FAD1BC(v23, v24);
    return swift_unknownObjectRelease();
  }
  uint64_t v25 = *a4;
  if (*a4)
  {
    uint64_t v26 = a4[1] - v25;
    uint64_t v27 = a4[3];
    if (v27 >= v26) {
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v27 = a4[3];
    if ((v27 & 0x8000000000000000) == 0) {
      goto LABEL_26;
    }
    uint64_t v26 = 0;
  }
  LODWORD(v28) = *(unsigned __int8 *)(v25 + v27);
  uint64_t v29 = v27 + 1;
  if (*(char *)(v25 + v27) < 0)
  {
    if (v29 >= v26) {
      goto LABEL_26;
    }
    v28 &= 0x7Fu;
    uint64_t v32 = v25 + 1;
    unint64_t v33 = 7;
    while (1)
    {
      uint64_t v29 = v27 + 2;
      v28 |= (unint64_t)(*(unsigned char *)(v32 + v27) & 0x7F) << v33;
      if ((*(unsigned char *)(v32 + v27) & 0x80) == 0) {
        break;
      }
      if (v29 < v26)
      {
        ++v27;
        BOOL v34 = v33 > 0x38;
        v33 += 7;
        if (!v34) {
          continue;
        }
      }
      goto LABEL_26;
    }
  }
  a4[3] = v29;
  if ((v28 & 0x80000000) != 0)
  {
LABEL_26:
    sub_259FBA9FC();
    swift_allocError();
    *(void *)uint64_t v35 = 1;
    *(_OWORD *)(v35 + 8) = 0u;
    *(_OWORD *)(v35 + 24) = 0u;
    *(_OWORD *)(v35 + 40) = 0u;
    *(void *)(v35 + 56) = 0;
    *(unsigned char *)(v35 + 64) = 2;
    swift_willThrow();
    uint64_t v23 = v19;
    uint64_t v24 = v20;
    goto LABEL_27;
  }
  uint64_t v36 = v20;
  uint64_t v30 = v29 + v28;
  if (!__OFADD__(v29, v28))
  {
    for (; v29 < v30; uint64_t v29 = a4[3])
    {
      unint64_t v37 = v19;
      unint64_t v38 = v36;
      sub_259FF3780(&v37, (uint64_t)v40);
      sub_259FAEE8C((uint64_t)v40, (uint64_t)v39);
      unint64_t v37 = a5;
      unint64_t v38 = a6;
      swift_unknownObjectRetain();
      sub_259FEE0E4((uint64_t)&v37, a7, a8, a9, v41);
      sub_259FC1F84((uint64_t)&v37);
      sub_259FAED74((uint64_t)v40);
    }
    if (v29 != v30)
    {
      sub_259FBA9FC();
      swift_allocError();
      *(void *)uint64_t v31 = 1;
      *(_OWORD *)(v31 + 8) = 0u;
      *(_OWORD *)(v31 + 24) = 0u;
      *(_OWORD *)(v31 + 40) = 0u;
      *(void *)(v31 + 56) = 0;
      *(unsigned char *)(v31 + 64) = 2;
      swift_willThrow();
    }
    uint64_t v23 = v19;
    uint64_t v24 = v36;
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t sub_259FBC6A8(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, uint64_t a5, unint64_t a6, void *a7, uint64_t a8, uint64_t *a9, char *a10, uint64_t *a11, BOOL *a12, _DWORD *a13)
{
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 56))(&v40, ObjectType, a2);
  if (v13) {
    return swift_unknownObjectRelease();
  }
  uint64_t v44 = a13;
  unint64_t v22 = v40;
  unint64_t v23 = v41;
  uint64_t result = sub_259FAE500(a3);
  if (result != 2
    || v23 >> 62 == 1
    || v23 >> 62 == 2 && __PAIR128__((v22 >= 0xD) + v23 + 0x7FFFFFFFFFFFFFFFLL, v22 - 13) < 2)
  {
    unint64_t v40 = v22;
    unint64_t v41 = v23;
    char v25 = sub_259FAE500(a3);
    sub_259FAE514((uint64_t *)&v40, v25, (uint64_t)v43);
    sub_259FAEE8C((uint64_t)v43, (uint64_t)v42);
    unint64_t v40 = a5;
    unint64_t v41 = a6;
    swift_unknownObjectRetain();
    sub_259FEEAB4((uint64_t)&v40, a7, a8, a9, a10, a11, a12, v44);
    sub_259FC1F84((uint64_t)&v40);
    sub_259FAED74((uint64_t)v43);
    uint64_t v26 = v22;
    uint64_t v27 = v23;
LABEL_27:
    sub_259FAD1BC(v26, v27);
    return swift_unknownObjectRelease();
  }
  uint64_t v28 = *a4;
  if (*a4)
  {
    uint64_t v29 = a4[1] - v28;
    uint64_t v30 = a4[3];
    if (v30 >= v29) {
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v30 = a4[3];
    if ((v30 & 0x8000000000000000) == 0) {
      goto LABEL_26;
    }
    uint64_t v29 = 0;
  }
  LODWORD(v31) = *(unsigned __int8 *)(v28 + v30);
  uint64_t v32 = v30 + 1;
  if (*(char *)(v28 + v30) < 0)
  {
    if (v32 >= v29) {
      goto LABEL_26;
    }
    v31 &= 0x7Fu;
    uint64_t v35 = v28 + 1;
    unint64_t v36 = 7;
    while (1)
    {
      uint64_t v32 = v30 + 2;
      v31 |= (unint64_t)(*(unsigned char *)(v35 + v30) & 0x7F) << v36;
      if ((*(unsigned char *)(v35 + v30) & 0x80) == 0) {
        break;
      }
      if (v32 < v29)
      {
        ++v30;
        BOOL v37 = v36 > 0x38;
        v36 += 7;
        if (!v37) {
          continue;
        }
      }
      goto LABEL_26;
    }
  }
  a4[3] = v32;
  if ((v31 & 0x80000000) != 0)
  {
LABEL_26:
    sub_259FBA9FC();
    swift_allocError();
    *(void *)uint64_t v38 = 1;
    *(_OWORD *)(v38 + 8) = 0u;
    *(_OWORD *)(v38 + 24) = 0u;
    *(_OWORD *)(v38 + 40) = 0u;
    *(void *)(v38 + 56) = 0;
    *(unsigned char *)(v38 + 64) = 2;
    swift_willThrow();
    uint64_t v26 = v22;
    uint64_t v27 = v23;
    goto LABEL_27;
  }
  uint64_t v39 = v23;
  uint64_t v33 = v32 + v31;
  if (!__OFADD__(v32, v31))
  {
    for (; v32 < v33; uint64_t v32 = a4[3])
    {
      unint64_t v40 = v22;
      unint64_t v41 = v39;
      sub_259FF3780(&v40, (uint64_t)v43);
      sub_259FAEE8C((uint64_t)v43, (uint64_t)v42);
      unint64_t v40 = a5;
      unint64_t v41 = a6;
      swift_unknownObjectRetain();
      sub_259FEEAB4((uint64_t)&v40, a7, a8, a9, a10, a11, a12, v44);
      sub_259FC1F84((uint64_t)&v40);
      sub_259FAED74((uint64_t)v43);
    }
    if (v32 != v33)
    {
      sub_259FBA9FC();
      swift_allocError();
      *(void *)uint64_t v34 = 1;
      *(_OWORD *)(v34 + 8) = 0u;
      *(_OWORD *)(v34 + 24) = 0u;
      *(_OWORD *)(v34 + 40) = 0u;
      *(void *)(v34 + 56) = 0;
      *(unsigned char *)(v34 + 64) = 2;
      swift_willThrow();
    }
    uint64_t v26 = v22;
    uint64_t v27 = v39;
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t sub_259FBCA60(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, uint64_t a5, unint64_t a6, void *a7, uint64_t *a8, uint64_t a9)
{
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 56))(&v36, ObjectType, a2);
  if (v9) {
    return swift_unknownObjectRelease();
  }
  uint64_t v40 = a9;
  unint64_t v18 = v36;
  unint64_t v19 = v37;
  uint64_t result = sub_259FAE500(a3);
  if (result != 2
    || v19 >> 62 == 1
    || v19 >> 62 == 2 && __PAIR128__((v18 >= 0xD) + v19 + 0x7FFFFFFFFFFFFFFFLL, v18 - 13) < 2)
  {
    unint64_t v36 = v18;
    unint64_t v37 = v19;
    char v21 = sub_259FAE500(a3);
    sub_259FAE514((uint64_t *)&v36, v21, (uint64_t)v39);
    sub_259FAEE8C((uint64_t)v39, (uint64_t)v38);
    unint64_t v36 = a5;
    unint64_t v37 = a6;
    swift_unknownObjectRetain();
    sub_259FEE718((uint64_t)&v36, a7, a8, v40);
    sub_259FC1F84((uint64_t)&v36);
    sub_259FAED74((uint64_t)v39);
    uint64_t v22 = v18;
    uint64_t v23 = v19;
LABEL_27:
    sub_259FAD1BC(v22, v23);
    return swift_unknownObjectRelease();
  }
  uint64_t v24 = *a4;
  if (*a4)
  {
    uint64_t v25 = a4[1] - v24;
    uint64_t v26 = a4[3];
    if (v26 >= v25) {
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v26 = a4[3];
    if ((v26 & 0x8000000000000000) == 0) {
      goto LABEL_26;
    }
    uint64_t v25 = 0;
  }
  LODWORD(v27) = *(unsigned __int8 *)(v24 + v26);
  uint64_t v28 = v26 + 1;
  if (*(char *)(v24 + v26) < 0)
  {
    if (v28 >= v25) {
      goto LABEL_26;
    }
    v27 &= 0x7Fu;
    uint64_t v31 = v24 + 1;
    unint64_t v32 = 7;
    while (1)
    {
      uint64_t v28 = v26 + 2;
      v27 |= (unint64_t)(*(unsigned char *)(v31 + v26) & 0x7F) << v32;
      if ((*(unsigned char *)(v31 + v26) & 0x80) == 0) {
        break;
      }
      if (v28 < v25)
      {
        ++v26;
        BOOL v33 = v32 > 0x38;
        v32 += 7;
        if (!v33) {
          continue;
        }
      }
      goto LABEL_26;
    }
  }
  a4[3] = v28;
  if ((v27 & 0x80000000) != 0)
  {
LABEL_26:
    sub_259FBA9FC();
    swift_allocError();
    *(void *)uint64_t v34 = 1;
    *(_OWORD *)(v34 + 8) = 0u;
    *(_OWORD *)(v34 + 24) = 0u;
    *(_OWORD *)(v34 + 40) = 0u;
    *(void *)(v34 + 56) = 0;
    *(unsigned char *)(v34 + 64) = 2;
    swift_willThrow();
    uint64_t v22 = v18;
    uint64_t v23 = v19;
    goto LABEL_27;
  }
  uint64_t v35 = v19;
  uint64_t v29 = v28 + v27;
  if (!__OFADD__(v28, v27))
  {
    for (; v28 < v29; uint64_t v28 = a4[3])
    {
      unint64_t v36 = v18;
      unint64_t v37 = v35;
      sub_259FF3780(&v36, (uint64_t)v39);
      sub_259FAEE8C((uint64_t)v39, (uint64_t)v38);
      unint64_t v36 = a5;
      unint64_t v37 = a6;
      swift_unknownObjectRetain();
      sub_259FEE718((uint64_t)&v36, a7, a8, v40);
      sub_259FC1F84((uint64_t)&v36);
      sub_259FAED74((uint64_t)v39);
    }
    if (v28 != v29)
    {
      sub_259FBA9FC();
      swift_allocError();
      *(void *)uint64_t v30 = 1;
      *(_OWORD *)(v30 + 8) = 0u;
      *(_OWORD *)(v30 + 24) = 0u;
      *(_OWORD *)(v30 + 40) = 0u;
      *(void *)(v30 + 56) = 0;
      *(unsigned char *)(v30 + 64) = 2;
      swift_willThrow();
    }
    uint64_t v22 = v18;
    uint64_t v23 = v35;
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t sub_259FBCDE8(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, void (*a5)(unint64_t *), uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 56))(&v31, ObjectType, a2);
  if (v8) {
    return swift_unknownObjectRelease();
  }
  unint64_t v16 = v31;
  unint64_t v17 = v32;
  uint64_t result = sub_259FAE500(a3);
  if (result != 2
    || v17 >> 62 == 1
    || v17 >> 62 == 2 && __PAIR128__((v16 >= 0xD) + v17 + 0x7FFFFFFFFFFFFFFFLL, v16 - 13) < 2)
  {
    uint64_t v35 = a5;
    unint64_t v31 = v16;
    unint64_t v32 = v17;
    char v19 = sub_259FAE500(a3);
    sub_259FAE514((uint64_t *)&v31, v19, (uint64_t)v34);
    sub_259FAEE8C((uint64_t)v34, (uint64_t)v33);
    unint64_t v31 = a7;
    unint64_t v32 = a8;
    swift_unknownObjectRetain();
    v35(&v31);
    sub_259FC1F84((uint64_t)&v31);
    sub_259FAED74((uint64_t)v34);
    uint64_t v20 = v16;
LABEL_27:
    sub_259FAD1BC(v20, v17);
    return swift_unknownObjectRelease();
  }
  uint64_t v21 = *a4;
  if (*a4)
  {
    uint64_t v22 = a4[1] - v21;
    uint64_t v23 = a4[3];
    if (v23 >= v22) {
      goto LABEL_25;
    }
  }
  else
  {
    uint64_t v23 = a4[3];
    if ((v23 & 0x8000000000000000) == 0) {
      goto LABEL_25;
    }
    uint64_t v22 = 0;
  }
  LODWORD(v24) = *(unsigned __int8 *)(v21 + v23);
  uint64_t v25 = v23 + 1;
  if (*(char *)(v21 + v23) < 0)
  {
    if (v25 >= v22) {
      goto LABEL_25;
    }
    v24 &= 0x7Fu;
    uint64_t v27 = v21 + 1;
    unint64_t v28 = 7;
    while (1)
    {
      uint64_t v25 = v23 + 2;
      v24 |= (unint64_t)(*(unsigned char *)(v27 + v23) & 0x7F) << v28;
      if ((*(unsigned char *)(v27 + v23) & 0x80) == 0) {
        break;
      }
      if (v25 < v22)
      {
        ++v23;
        BOOL v29 = v28 > 0x38;
        v28 += 7;
        if (!v29) {
          continue;
        }
      }
      goto LABEL_25;
    }
  }
  a4[3] = v25;
  if ((v24 & 0x80000000) != 0)
  {
LABEL_25:
    sub_259FBA9FC();
    swift_allocError();
    *(void *)uint64_t v30 = 1;
    *(_OWORD *)(v30 + 8) = 0u;
    *(_OWORD *)(v30 + 24) = 0u;
    *(_OWORD *)(v30 + 40) = 0u;
    *(void *)(v30 + 56) = 0;
    *(unsigned char *)(v30 + 64) = 2;
    swift_willThrow();
LABEL_26:
    uint64_t v20 = v16;
    goto LABEL_27;
  }
  uint64_t v35 = a5;
  uint64_t v26 = v25 + v24;
  if (!__OFADD__(v25, v24))
  {
    for (; v25 < v26; uint64_t v25 = a4[3])
    {
      unint64_t v31 = v16;
      unint64_t v32 = v17;
      sub_259FF3780(&v31, (uint64_t)v34);
      sub_259FAEE8C((uint64_t)v34, (uint64_t)v33);
      unint64_t v31 = a7;
      unint64_t v32 = a8;
      swift_unknownObjectRetain();
      v35(&v31);
      sub_259FC1F84((uint64_t)&v31);
      sub_259FAED74((uint64_t)v34);
    }
    if (v25 == v26) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

void *sub_259FBD10C(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, void **a5)
{
  v90[6] = *MEMORY[0x263EF8340];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(void *(**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 56))(v90, ObjectType, a2);
  if (!v5)
  {
    unint64_t v13 = v90[0];
    unint64_t v12 = v90[1];
    if (sub_259FAE500(a3) != 2
      || v12 >> 62 == 1
      || v12 >> 62 == 2 && __PAIR128__((v13 >= 0xD) + v12 + 0x7FFFFFFFFFFFFFFFLL, v13 - 13) < 2)
    {
      *(void *)&long long v86 = v13;
      *((void *)&v86 + 1) = v12;
      char v14 = sub_259FAE500(a3);
      sub_259FAE514((uint64_t *)&v86, v14, (uint64_t)v90);
      sub_259FAEE8C((uint64_t)v90, (uint64_t)&v86);
      char v79 = v89;
      switch(v89)
      {
        case 2:
        case 3:
        case 5:
          uint64_t v75 = 0;
          uint64_t v77 = 0;
          uint64_t v73 = 0;
          char v15 = 0;
          uint64_t v16 = v86;
          goto LABEL_64;
        case 6:
          uint64_t v75 = 0;
          uint64_t v77 = 0;
          uint64_t v73 = 0;
          char v15 = 0;
          uint64_t v16 = v86;
          goto LABEL_64;
        case 7:
          uint64_t v16 = v86;
          uint64_t v75 = v87;
          uint64_t v77 = *((void *)&v86 + 1);
          uint64_t v73 = *((void *)&v87 + 1);
          char v15 = v88;
          goto LABEL_64;
        case 8:
          sub_259FAF0F0(&v86, (uint64_t)&v83);
          uint64_t v50 = v84;
          uint64_t v51 = v85;
          __swift_project_boxed_opaque_existential_1(&v83, v84);
          uint64_t v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 24))(v50, v51);
          goto LABEL_57;
        case 9:
          sub_259FAF0F0(&v86, (uint64_t)&v83);
          uint64_t v54 = v84;
          uint64_t v55 = v85;
          __swift_project_boxed_opaque_existential_1(&v83, v84);
          uint64_t v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 16))(v54, v55);
LABEL_57:
          uint64_t v16 = v52;
          uint64_t v77 = v53;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v83);
          uint64_t v73 = 0;
          uint64_t v75 = 0;
          goto LABEL_63;
        case 10:
          uint64_t v77 = *((void *)&v86 + 1);
          uint64_t v56 = v86;
          uint64_t v84 = MEMORY[0x263F8D3E8];
          uint64_t v85 = MEMORY[0x263F07B80];
          long long v83 = v87;
          long long v57 = __swift_project_boxed_opaque_existential_1(&v83, MEMORY[0x263F8D3E8]);
          uint64_t v58 = *v57;
          if (!*v57 || (v59 = (unsigned char *)v57[1], uint64_t v60 = (uint64_t)&v59[-v58], v59 == (unsigned char *)v58))
          {
            swift_unknownObjectRetain();
            uint64_t v75 = 0;
            unint64_t v61 = 0xC000000000000000;
LABEL_61:
            uint64_t v73 = v61;
            goto LABEL_62;
          }
          if (v60 > 14)
          {
            swift_unknownObjectRetain();
            if ((unint64_t)v60 >= 0x7FFFFFFF)
            {
              uint64_t v75 = sub_259FC3C98(v58, (uint64_t)v59);
              unint64_t v61 = v70 | 0x8000000000000000;
            }
            else
            {
              uint64_t v75 = sub_259FC3C14(v58, (uint64_t)v59);
              unint64_t v61 = v67 | 0x4000000000000000;
            }
            goto LABEL_61;
          }
          uint64_t v68 = sub_259FC3B50((unsigned char *)*v57, v59);
          uint64_t v73 = v69 & 0xFFFFFFFFFFFFFFLL;
          uint64_t v75 = v68;
          swift_unknownObjectRetain();
LABEL_62:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v83);
          uint64_t v16 = v56;
          swift_unknownObjectRelease();
LABEL_63:
          char v15 = 0;
LABEL_64:
          long long v62 = *a5;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *a5 = v62;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            long long v62 = sub_259FC9D14(0, v62[2] + 1, 1, v62);
            *a5 = v62;
          }
          unint64_t v65 = v62[2];
          unint64_t v64 = v62[3];
          if (v65 >= v64 >> 1)
          {
            long long v62 = sub_259FC9D14((void *)(v64 > 1), v65 + 1, 1, v62);
            *a5 = v62;
          }
          v62[2] = v65 + 1;
          uint64_t v66 = &v62[5 * v65];
          void v66[4] = v16;
          v66[5] = v77;
          v66[6] = v75;
          v66[7] = v73;
          *((unsigned char *)v66 + 64) = v15;
          *((unsigned char *)v66 + 65) = v79;
          sub_259FAED74((uint64_t)v90);
          break;
        default:
          uint64_t v75 = 0;
          uint64_t v77 = 0;
          uint64_t v73 = 0;
          char v15 = 0;
          uint64_t v16 = v86;
          goto LABEL_64;
      }
      return (void *)sub_259FAD1BC(v13, v12);
    }
    uint64_t v17 = *a4;
    if (*a4)
    {
      uint64_t v18 = a4[1] - v17;
      uint64_t v19 = a4[3];
      if (v19 >= v18) {
        goto LABEL_52;
      }
    }
    else
    {
      uint64_t v19 = a4[3];
      if ((v19 & 0x8000000000000000) == 0) {
        goto LABEL_52;
      }
      uint64_t v18 = 0;
    }
    LODWORD(v20) = *(unsigned __int8 *)(v17 + v19);
    uint64_t v21 = v19 + 1;
    if ((*(char *)(v17 + v19) & 0x80000000) == 0) {
      goto LABEL_14;
    }
    if (v21 < v18)
    {
      v20 &= 0x7Fu;
      uint64_t v46 = v17 + 1;
      unint64_t v47 = 7;
      while (1)
      {
        uint64_t v21 = v19 + 2;
        v20 |= (unint64_t)(*(unsigned char *)(v46 + v19) & 0x7F) << v47;
        if ((*(unsigned char *)(v46 + v19) & 0x80) == 0) {
          break;
        }
        if (v21 < v18)
        {
          ++v19;
          BOOL v48 = v47 > 0x38;
          v47 += 7;
          if (!v48) {
            continue;
          }
        }
        goto LABEL_52;
      }
LABEL_14:
      a4[3] = v21;
      if ((v20 & 0x80000000) == 0)
      {
        uint64_t v22 = v21 + v20;
        if (__OFADD__(v21, v20)) {
          __break(1u);
        }
        if (v21 < v22)
        {
          unint64_t v71 = v12;
          uint64_t v72 = v21 + v20;
          while (1)
          {
            *(void *)&long long v86 = v13;
            *((void *)&v86 + 1) = v12;
            sub_259FF3780((unint64_t *)&v86, (uint64_t)v90);
            sub_259FAEE8C((uint64_t)v90, (uint64_t)&v86);
            char v80 = v89;
            switch(v89)
            {
              case 2:
              case 3:
              case 5:
                uint64_t v76 = 0;
                uint64_t v78 = 0;
                unint64_t v74 = 0;
                char v23 = 0;
                uint64_t v24 = v86;
                goto LABEL_32;
              case 6:
                uint64_t v76 = 0;
                uint64_t v78 = 0;
                unint64_t v74 = 0;
                char v23 = 0;
                uint64_t v24 = v86;
                goto LABEL_32;
              case 7:
                uint64_t v24 = v86;
                uint64_t v76 = v87;
                uint64_t v78 = *((void *)&v86 + 1);
                unint64_t v74 = *((void *)&v87 + 1);
                char v23 = v88;
                goto LABEL_32;
              case 8:
                sub_259FAF0F0(&v86, (uint64_t)&v83);
                uint64_t v25 = v84;
                uint64_t v26 = v85;
                __swift_project_boxed_opaque_existential_1(&v83, v84);
                uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 24))(v25, v26);
                goto LABEL_25;
              case 9:
                sub_259FAF0F0(&v86, (uint64_t)&v83);
                uint64_t v29 = v84;
                uint64_t v30 = v85;
                __swift_project_boxed_opaque_existential_1(&v83, v84);
                uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
LABEL_25:
                uint64_t v24 = v27;
                uint64_t v78 = v28;
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v83);
                unint64_t v74 = 0;
                uint64_t v76 = 0;
                goto LABEL_31;
              case 10:
                uint64_t v78 = *((void *)&v86 + 1);
                uint64_t v24 = v86;
                uint64_t v84 = MEMORY[0x263F8D3E8];
                uint64_t v85 = MEMORY[0x263F07B80];
                long long v83 = v87;
                unint64_t v31 = (const void **)__swift_project_boxed_opaque_existential_1(&v83, MEMORY[0x263F8D3E8]);
                unint64_t v32 = *v31;
                if (!*v31 || (BOOL v33 = v31[1], v34 = v33 - v32, v33 == v32))
                {
                  swift_unknownObjectRetain();
                  uint64_t v76 = 0;
                  unint64_t v35 = 0xC000000000000000;
LABEL_29:
                  unint64_t v74 = v35;
                  goto LABEL_30;
                }
                if (v34 > 14)
                {
                  sub_25A00E2B0();
                  swift_allocObject();
                  swift_unknownObjectRetain();
                  uint64_t v43 = sub_25A00E260();
                  uint64_t v44 = v43;
                  if ((unint64_t)v34 >= 0x7FFFFFFF)
                  {
                    sub_25A00E310();
                    uint64_t v45 = swift_allocObject();
                    *(void *)(v45 + 16) = 0;
                    *(void *)(v45 + 24) = v34;
                    uint64_t v76 = v45;
                    unint64_t v35 = v44 | 0x8000000000000000;
                  }
                  else
                  {
                    uint64_t v76 = v34 << 32;
                    unint64_t v35 = v43 | 0x4000000000000000;
                  }
                  goto LABEL_29;
                }
                memset(__dst, 0, sizeof(__dst));
                unsigned __int8 v82 = (_BYTE)v33 - (_BYTE)v32;
                memcpy(__dst, v32, v33 - v32);
                uint64_t v76 = *(void *)__dst;
                unint64_t v74 = *(unsigned int *)&__dst[8] | ((unint64_t)__dst[12] << 32) | ((unint64_t)__dst[13] << 40) | ((unint64_t)v82 << 48);
                swift_unknownObjectRetain();
LABEL_30:
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v83);
                swift_unknownObjectRelease();
LABEL_31:
                char v23 = 0;
LABEL_32:
                unint64_t v36 = v13;
                unint64_t v37 = *a5;
                char v38 = swift_isUniquelyReferenced_nonNull_native();
                *a5 = v37;
                uint64_t v39 = v24;
                if ((v38 & 1) == 0)
                {
                  unint64_t v37 = sub_259FC9D14(0, v37[2] + 1, 1, v37);
                  *a5 = v37;
                }
                unint64_t v41 = v37[2];
                unint64_t v40 = v37[3];
                if (v41 >= v40 >> 1)
                {
                  unint64_t v37 = sub_259FC9D14((void *)(v40 > 1), v41 + 1, 1, v37);
                  *a5 = v37;
                }
                v37[2] = v41 + 1;
                unint64_t v42 = &v37[5 * v41];
                v42[4] = v39;
                v42[5] = v78;
                v42[6] = v76;
                v42[7] = v74;
                *((unsigned char *)v42 + 64) = v23;
                *((unsigned char *)v42 + 65) = v80;
                sub_259FAED74((uint64_t)v90);
                uint64_t v21 = a4[3];
                uint64_t v22 = v72;
                unint64_t v13 = v36;
                unint64_t v12 = v71;
                if (v21 >= v72) {
                  goto LABEL_51;
                }
                break;
              default:
                uint64_t v76 = 0;
                uint64_t v78 = 0;
                unint64_t v74 = 0;
                char v23 = 0;
                uint64_t v24 = v86;
                goto LABEL_32;
            }
          }
        }
LABEL_51:
        if (v21 == v22) {
          return (void *)sub_259FAD1BC(v13, v12);
        }
      }
    }
LABEL_52:
    sub_259FBA9FC();
    swift_allocError();
    *(void *)uint64_t v49 = 1;
    *(_OWORD *)(v49 + 8) = 0u;
    *(_OWORD *)(v49 + 24) = 0u;
    *(_OWORD *)(v49 + 40) = 0u;
    *(void *)(v49 + 56) = 0;
    *(unsigned char *)(v49 + 64) = 2;
    swift_willThrow();
    return (void *)sub_259FAD1BC(v13, v12);
  }
  return result;
}

void *sub_259FBD96C(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, void (*a5)(long long *))
{
  v88[6] = *MEMORY[0x263EF8340];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(void *(**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 56))(v88, ObjectType, a2);
  if (!v5)
  {
    unint64_t v13 = v88[0];
    unint64_t v12 = v88[1];
    if (sub_259FAE500(a3) != 2
      || v12 >> 62 == 1
      || v12 >> 62 == 2 && __PAIR128__((v13 >= 0xD) + v12 + 0x7FFFFFFFFFFFFFFFLL, v13 - 13) < 2)
    {
      *(void *)&long long v83 = v13;
      *((void *)&v83 + 1) = v12;
      char v14 = sub_259FAE500(a3);
      sub_259FAE514((uint64_t *)&v83, v14, (uint64_t)v88);
      sub_259FAEE8C((uint64_t)v88, (uint64_t)&v83);
      char v15 = v87;
      uint64_t v74 = v12;
      unint64_t v76 = v13;
      switch(v87)
      {
        case 2:
        case 3:
        case 5:
          unint64_t v16 = 0;
          uint64_t v17 = 0;
          uint64_t v18 = 0;
          char v19 = 0;
          uint64_t v20 = v83;
          break;
        case 6:
          unint64_t v16 = 0;
          uint64_t v17 = 0;
          uint64_t v18 = 0;
          char v19 = 0;
          uint64_t v20 = v83;
          break;
        case 7:
          unint64_t v16 = *((void *)&v83 + 1);
          uint64_t v20 = v83;
          uint64_t v18 = *((void *)&v84 + 1);
          uint64_t v17 = v84;
          char v19 = v85;
          break;
        case 8:
          char v54 = v87;
          sub_259FAF0F0(&v83, (uint64_t)&v80);
          uint64_t v55 = v81;
          uint64_t v56 = v82;
          __swift_project_boxed_opaque_existential_1(&v80, v81);
          uint64_t v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 24))(v55, v56);
          goto LABEL_54;
        case 9:
          char v54 = v87;
          sub_259FAF0F0(&v83, (uint64_t)&v80);
          uint64_t v59 = v81;
          uint64_t v60 = v82;
          __swift_project_boxed_opaque_existential_1(&v80, v81);
          uint64_t v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 16))(v59, v60);
LABEL_54:
          uint64_t v20 = v57;
          unint64_t v16 = v58;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
          char v15 = v54;
          uint64_t v17 = 0;
          uint64_t v18 = 0;
          char v19 = 0;
          break;
        case 10:
          char v72 = v87;
          unint64_t v71 = *((void *)&v83 + 1);
          uint64_t v20 = v83;
          uint64_t v81 = MEMORY[0x263F8D3E8];
          uint64_t v82 = MEMORY[0x263F07B80];
          long long v80 = v84;
          unint64_t v61 = __swift_project_boxed_opaque_existential_1(&v80, MEMORY[0x263F8D3E8]);
          uint64_t v62 = *v61;
          if (*v61 && (uint64_t v63 = (unsigned char *)v61[1], v64 = (uint64_t)&v63[-v62], v63 != (unsigned char *)v62))
          {
            if (v64 <= 14)
            {
              uint64_t v17 = sub_259FC3B50((unsigned char *)*v61, v63);
              uint64_t v18 = v67 & 0xFFFFFFFFFFFFFFLL;
              swift_unknownObjectRetain();
            }
            else
            {
              swift_unknownObjectRetain();
              if ((unint64_t)v64 >= 0x7FFFFFFF)
              {
                uint64_t v17 = sub_259FC3C98(v62, (uint64_t)v63);
                uint64_t v18 = v68 | 0x8000000000000000;
              }
              else
              {
                uint64_t v17 = sub_259FC3C14(v62, (uint64_t)v63);
                uint64_t v18 = v66 | 0x4000000000000000;
              }
            }
          }
          else
          {
            swift_unknownObjectRetain();
            uint64_t v17 = 0;
            uint64_t v18 = 0xC000000000000000;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
          swift_unknownObjectRelease();
          char v19 = 0;
          unint64_t v16 = v71;
          char v15 = v72;
          break;
        default:
          unint64_t v16 = 0;
          uint64_t v17 = 0;
          uint64_t v18 = 0;
          char v19 = 0;
          uint64_t v20 = v83;
          break;
      }
      *(void *)&long long v83 = v20;
      *((void *)&v83 + 1) = v16;
      *(void *)&long long v84 = v17;
      *((void *)&v84 + 1) = v18;
      char v85 = v19;
      char v86 = v15;
      char v65 = v15;
      a5(&v83);
      sub_259FB671C(v20, v16, v17, v18, v19, v65);
      sub_259FAED74((uint64_t)v88);
      uint64_t v53 = v74;
      uint64_t v52 = v76;
      return (void *)sub_259FAD1BC(v52, v53);
    }
    uint64_t v21 = *a4;
    if (*a4)
    {
      uint64_t v22 = a4[1] - v21;
      uint64_t v23 = a4[3];
      if (v23 >= v22) {
        goto LABEL_48;
      }
    }
    else
    {
      uint64_t v23 = a4[3];
      if ((v23 & 0x8000000000000000) == 0) {
        goto LABEL_48;
      }
      uint64_t v22 = 0;
    }
    LODWORD(v24) = *(unsigned __int8 *)(v21 + v23);
    uint64_t v25 = v23 + 1;
    if ((*(char *)(v21 + v23) & 0x80000000) == 0) {
      goto LABEL_14;
    }
    if (v25 < v22)
    {
      v24 &= 0x7Fu;
      uint64_t v48 = v21 + 1;
      unint64_t v49 = 7;
      while (1)
      {
        uint64_t v25 = v23 + 2;
        v24 |= (unint64_t)(*(unsigned char *)(v48 + v23) & 0x7F) << v49;
        if ((*(unsigned char *)(v48 + v23) & 0x80) == 0) {
          break;
        }
        if (v25 < v22)
        {
          ++v23;
          BOOL v50 = v49 > 0x38;
          v49 += 7;
          if (!v50) {
            continue;
          }
        }
        goto LABEL_48;
      }
LABEL_14:
      a4[3] = v25;
      if ((v24 & 0x80000000) == 0)
      {
        uint64_t v26 = v25 + v24;
        if (__OFADD__(v25, v24)) {
          __break(1u);
        }
        if (v25 < v26)
        {
          uint64_t v70 = v25 + v24;
          unint64_t v75 = v12;
          unint64_t v77 = v13;
          uint64_t v73 = a5;
          while (1)
          {
            *(void *)&long long v83 = v13;
            *((void *)&v83 + 1) = v12;
            sub_259FF3780((unint64_t *)&v83, (uint64_t)v88);
            sub_259FAEE8C((uint64_t)v88, (uint64_t)&v83);
            char v27 = v87;
            switch(v87)
            {
              case 2:
              case 3:
              case 5:
                unint64_t v28 = 0;
                uint64_t v29 = 0;
                uint64_t v30 = 0;
                char v31 = 0;
                uint64_t v32 = v83;
                goto LABEL_31;
              case 6:
                unint64_t v28 = 0;
                uint64_t v29 = 0;
                uint64_t v30 = 0;
                char v31 = 0;
                uint64_t v32 = v83;
                goto LABEL_31;
              case 7:
                unint64_t v28 = *((void *)&v83 + 1);
                uint64_t v32 = v83;
                uint64_t v30 = *((void *)&v84 + 1);
                uint64_t v29 = v84;
                char v31 = v85;
                goto LABEL_31;
              case 8:
                char v33 = v87;
                sub_259FAF0F0(&v83, (uint64_t)&v80);
                uint64_t v34 = v81;
                uint64_t v35 = v82;
                __swift_project_boxed_opaque_existential_1(&v80, v81);
                uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 24))(v34, v35);
                goto LABEL_25;
              case 9:
                char v33 = v87;
                sub_259FAF0F0(&v83, (uint64_t)&v80);
                uint64_t v38 = v81;
                uint64_t v39 = v82;
                __swift_project_boxed_opaque_existential_1(&v80, v81);
                uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 16))(v38, v39);
LABEL_25:
                uint64_t v32 = v36;
                unint64_t v28 = v37;
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
                char v27 = v33;
                uint64_t v29 = 0;
                uint64_t v30 = 0;
                char v31 = 0;
                goto LABEL_31;
              case 10:
                char v69 = v87;
                long long v40 = v83;
                uint64_t v81 = MEMORY[0x263F8D3E8];
                uint64_t v82 = MEMORY[0x263F07B80];
                long long v80 = v84;
                unint64_t v41 = (const void **)__swift_project_boxed_opaque_existential_1(&v80, MEMORY[0x263F8D3E8]);
                unint64_t v42 = *v41;
                if (!*v41 || (uint64_t v43 = v41[1], v44 = v43 - v42, v43 == v42))
                {
                  uint64_t v32 = v40;
                  swift_unknownObjectRetain();
                  uint64_t v29 = 0;
                  uint64_t v30 = 0xC000000000000000;
LABEL_29:
                  unint64_t v28 = *((void *)&v40 + 1);
                  goto LABEL_30;
                }
                if (v44 <= 14)
                {
                  memset(__dst, 0, sizeof(__dst));
                  unsigned __int8 v79 = (_BYTE)v43 - (_BYTE)v42;
                  memcpy(__dst, v42, v43 - v42);
                  uint64_t v29 = *(void *)__dst;
                  uint64_t v30 = *(unsigned int *)&__dst[8] | ((unint64_t)__dst[12] << 32) | ((unint64_t)__dst[13] << 40) | ((unint64_t)v79 << 48);
                  uint64_t v32 = v40;
                  swift_unknownObjectRetain();
                  goto LABEL_29;
                }
                sub_25A00E2B0();
                swift_allocObject();
                swift_unknownObjectRetain();
                uint64_t v46 = sub_25A00E260();
                uint64_t v47 = v46;
                if ((unint64_t)v44 >= 0x7FFFFFFF)
                {
                  sub_25A00E310();
                  uint64_t v29 = swift_allocObject();
                  *(void *)(v29 + 16) = 0;
                  *(void *)(v29 + 24) = v44;
                  uint64_t v30 = v47 | 0x8000000000000000;
                }
                else
                {
                  uint64_t v29 = v44 << 32;
                  uint64_t v30 = v46 | 0x4000000000000000;
                }
                unint64_t v28 = *((void *)&v40 + 1);
                uint64_t v32 = v40;
LABEL_30:
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
                swift_unknownObjectRelease();
                char v31 = 0;
                char v27 = v69;
LABEL_31:
                *(void *)&long long v83 = v32;
                *((void *)&v83 + 1) = v28;
                *(void *)&long long v84 = v29;
                *((void *)&v84 + 1) = v30;
                char v85 = v31;
                char v86 = v27;
                char v45 = v27;
                v73(&v83);
                sub_259FB671C(v32, v28, v29, v30, v31, v45);
                sub_259FAED74((uint64_t)v88);
                uint64_t v25 = a4[3];
                uint64_t v26 = v70;
                unint64_t v12 = v75;
                unint64_t v13 = v77;
                if (v25 >= v70) {
                  goto LABEL_47;
                }
                break;
              default:
                unint64_t v28 = 0;
                uint64_t v29 = 0;
                uint64_t v30 = 0;
                char v31 = 0;
                uint64_t v32 = v83;
                goto LABEL_31;
            }
          }
        }
LABEL_47:
        if (v25 == v26) {
          goto LABEL_49;
        }
      }
    }
LABEL_48:
    sub_259FBA9FC();
    swift_allocError();
    *(void *)uint64_t v51 = 1;
    *(_OWORD *)(v51 + 8) = 0u;
    *(_OWORD *)(v51 + 24) = 0u;
    *(_OWORD *)(v51 + 40) = 0u;
    *(void *)(v51 + 56) = 0;
    *(unsigned char *)(v51 + 64) = 2;
    swift_willThrow();
LABEL_49:
    uint64_t v52 = v13;
    uint64_t v53 = v12;
    return (void *)sub_259FAD1BC(v52, v53);
  }
  return result;
}

void *sub_259FBE17C(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, uint64_t *a5, void *a6)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(void *(**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 56))(v29, ObjectType, a2);
  if (!v6)
  {
    unint64_t v15 = v29[0];
    unint64_t v14 = v29[1];
    uint64_t result = (void *)sub_259FAE500(a3);
    if (result != 2
      || v14 >> 62 == 1
      || v14 >> 62 == 2 && __PAIR128__((v15 >= 0xD) + v14 + 0x7FFFFFFFFFFFFFFFLL, v15 - 13) < 2)
    {
      unint64_t v27 = v15;
      unint64_t v28 = v14;
      char v16 = sub_259FAE500(a3);
      sub_259FAE514((uint64_t *)&v27, v16, (uint64_t)v29);
      sub_259FEDA70((uint64_t)v29, a5, a6);
      sub_259FAED74((uint64_t)v29);
      return (void *)sub_259FAD1BC(v15, v14);
    }
    uint64_t v17 = *a4;
    if (*a4)
    {
      uint64_t v18 = a4[1] - v17;
      uint64_t v19 = a4[3];
      if (v19 >= v18) {
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v19 = a4[3];
      if ((v19 & 0x8000000000000000) == 0) {
        goto LABEL_25;
      }
      uint64_t v18 = 0;
    }
    LODWORD(v20) = *(unsigned __int8 *)(v17 + v19);
    uint64_t v21 = v19 + 1;
    if ((*(char *)(v17 + v19) & 0x80000000) == 0)
    {
LABEL_13:
      a4[3] = v21;
      if ((v20 & 0x80000000) == 0)
      {
        uint64_t v22 = v21 + v20;
        if (__OFADD__(v21, v20))
        {
          __break(1u);
          return result;
        }
        for (; v21 < v22; uint64_t v21 = a4[3])
        {
          unint64_t v27 = v15;
          unint64_t v28 = v14;
          sub_259FF3780(&v27, (uint64_t)v29);
          sub_259FEDA70((uint64_t)v29, a5, a6);
          sub_259FAED74((uint64_t)v29);
        }
        if (v21 == v22) {
          return (void *)sub_259FAD1BC(v15, v14);
        }
      }
      goto LABEL_25;
    }
    if (v21 < v18)
    {
      v20 &= 0x7Fu;
      uint64_t v23 = v17 + 1;
      unint64_t v24 = 7;
      while (1)
      {
        uint64_t v21 = v19 + 2;
        v20 |= (unint64_t)(*(unsigned char *)(v23 + v19) & 0x7F) << v24;
        if ((*(unsigned char *)(v23 + v19) & 0x80) == 0) {
          goto LABEL_13;
        }
        if (v21 < v18)
        {
          ++v19;
          BOOL v25 = v24 > 0x38;
          v24 += 7;
          if (!v25) {
            continue;
          }
        }
        break;
      }
    }
LABEL_25:
    sub_259FBA9FC();
    swift_allocError();
    *(void *)uint64_t v26 = 1;
    *(_OWORD *)(v26 + 8) = 0u;
    *(_OWORD *)(v26 + 24) = 0u;
    *(_OWORD *)(v26 + 40) = 0u;
    *(void *)(v26 + 56) = 0;
    *(unsigned char *)(v26 + 64) = 2;
    swift_willThrow();
    return (void *)sub_259FAD1BC(v15, v14);
  }
  return result;
}

void *sub_259FBE404(uint64_t a1, uint64_t a2, char a3, void (*a4)(void *))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(void *(**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 56))(v26, ObjectType, a2);
  if (!v5)
  {
    unint64_t v12 = v26[0];
    unint64_t v11 = v26[1];
    uint64_t result = (void *)sub_259FAE500(a3);
    if (result != 2
      || v11 >> 62 == 1
      || v11 >> 62 == 2 && __PAIR128__((v12 >= 0xD) + v11 + 0x7FFFFFFFFFFFFFFFLL, v12 - 13) < 2)
    {
      unint64_t v24 = v12;
      unint64_t v25 = v11;
      char v13 = sub_259FAE500(a3);
      sub_259FAE514((uint64_t *)&v24, v13, (uint64_t)v26);
      a4(v26);
      sub_259FAED74((uint64_t)v26);
      return (void *)sub_259FAD1BC(v12, v11);
    }
    uint64_t v14 = *v4;
    if (*v4)
    {
      uint64_t v15 = v4[1] - v14;
      uint64_t v16 = v4[3];
      if (v16 >= v15) {
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v16 = v4[3];
      if ((v16 & 0x8000000000000000) == 0) {
        goto LABEL_25;
      }
      uint64_t v15 = 0;
    }
    LODWORD(v17) = *(unsigned __int8 *)(v14 + v16);
    uint64_t v18 = v16 + 1;
    if ((*(char *)(v14 + v16) & 0x80000000) == 0)
    {
LABEL_13:
      v4[3] = v18;
      if ((v17 & 0x80000000) == 0)
      {
        uint64_t v19 = v18 + v17;
        if (__OFADD__(v18, v17))
        {
          __break(1u);
          return result;
        }
        for (; v18 < v19; uint64_t v18 = v4[3])
        {
          unint64_t v24 = v12;
          unint64_t v25 = v11;
          sub_259FF3780(&v24, (uint64_t)v26);
          a4(v26);
          sub_259FAED74((uint64_t)v26);
        }
        if (v18 == v19) {
          return (void *)sub_259FAD1BC(v12, v11);
        }
      }
      goto LABEL_25;
    }
    if (v18 < v15)
    {
      v17 &= 0x7Fu;
      uint64_t v20 = v14 + 1;
      unint64_t v21 = 7;
      while (1)
      {
        uint64_t v18 = v16 + 2;
        v17 |= (unint64_t)(*(unsigned char *)(v20 + v16) & 0x7F) << v21;
        if ((*(unsigned char *)(v20 + v16) & 0x80) == 0) {
          goto LABEL_13;
        }
        if (v18 < v15)
        {
          ++v16;
          BOOL v22 = v21 > 0x38;
          v21 += 7;
          if (!v22) {
            continue;
          }
        }
        break;
      }
    }
LABEL_25:
    sub_259FBA9FC();
    swift_allocError();
    *(void *)uint64_t v23 = 1;
    *(_OWORD *)(v23 + 8) = 0u;
    *(_OWORD *)(v23 + 24) = 0u;
    *(_OWORD *)(v23 + 40) = 0u;
    *(void *)(v23 + 56) = 0;
    *(unsigned char *)(v23 + 64) = 2;
    swift_willThrow();
    return (void *)sub_259FAD1BC(v12, v11);
  }
  return result;
}

void *sub_259FBE68C(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(long long *))
{
  return sub_259FBEC5C(a1, a2, a3, a4);
}

void *sub_259FBE6A4(uint64_t a1, uint64_t a2, uint64_t *a3, void **a4)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(void *(**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 56))(v68, ObjectType, a2);
  if (v4) {
    return result;
  }
  char v69 = a4;
  uint64_t v12 = v68[0];
  uint64_t v11 = v68[1];
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48))(ObjectType, a2);
  uint64_t v60 = v12;
  if (((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(ObjectType, a2) & 1) == 0)
  {
    uint64_t v19 = sub_259FAE178(v13);
    if ((v19 & 0x100000000) == 0)
    {
      *(void *)&long long v64 = v12;
      *((void *)&v64 + 1) = v11;
      char v30 = sub_259FAE500(v19);
      sub_259FAE514((uint64_t *)&v64, v30, (uint64_t)v68);
      sub_259FAEE8C((uint64_t)v68, (uint64_t)&v64);
      char v59 = v67;
      switch(v67)
      {
        case 2:
        case 3:
        case 5:
          uint64_t v57 = 0;
          uint64_t v31 = 0;
          unint64_t v32 = 0;
          char v33 = 0;
          uint64_t v34 = v64;
          break;
        case 6:
          uint64_t v57 = 0;
          uint64_t v31 = 0;
          unint64_t v32 = 0;
          char v33 = 0;
          uint64_t v34 = v64;
          break;
        case 7:
          uint64_t v57 = *((void *)&v64 + 1);
          uint64_t v34 = v64;
          unint64_t v32 = *((void *)&v65 + 1);
          uint64_t v31 = v65;
          char v33 = v66;
          break;
        case 8:
          sub_259FAF0F0(&v64, (uint64_t)&v61);
          uint64_t v35 = v62;
          uint64_t v36 = v63;
          __swift_project_boxed_opaque_existential_1(&v61, v62);
          uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 24))(v35, v36);
          goto LABEL_45;
        case 9:
          sub_259FAF0F0(&v64, (uint64_t)&v61);
          uint64_t v39 = v62;
          uint64_t v40 = v63;
          __swift_project_boxed_opaque_existential_1(&v61, v62);
          uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 16))(v39, v40);
LABEL_45:
          uint64_t v34 = v37;
          uint64_t v57 = v38;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v61);
          uint64_t v31 = 0;
          unint64_t v32 = 0;
          goto LABEL_50;
        case 10:
          long long v41 = v64;
          uint64_t v62 = MEMORY[0x263F8D3E8];
          uint64_t v63 = MEMORY[0x263F07B80];
          long long v61 = v65;
          unint64_t v42 = __swift_project_boxed_opaque_existential_1(&v61, MEMORY[0x263F8D3E8]);
          uint64_t v43 = (unsigned char *)*v42;
          uint64_t v57 = *((void *)&v41 + 1);
          if (*v42 && (uint64_t v44 = (unsigned char *)v42[1], v45 = v44 - v43, v44 != v43))
          {
            if (v45 <= 14)
            {
              uint64_t v31 = sub_259FC3B50(v43, v44);
              unint64_t v32 = v54 & 0xFFFFFFFFFFFFFFLL;
              swift_unknownObjectRetain();
            }
            else
            {
              swift_unknownObjectRetain();
              if ((unint64_t)v45 >= 0x7FFFFFFF)
              {
                uint64_t v31 = sub_259FC3C98((uint64_t)v43, (uint64_t)v44);
                unint64_t v32 = v55 | 0x8000000000000000;
              }
              else
              {
                uint64_t v31 = sub_259FC3C14((uint64_t)v43, (uint64_t)v44);
                unint64_t v32 = v53 | 0x4000000000000000;
              }
            }
          }
          else
          {
            swift_unknownObjectRetain();
            uint64_t v31 = 0;
            unint64_t v32 = 0xC000000000000000;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v61);
          uint64_t v34 = v41;
          swift_unknownObjectRelease();
LABEL_50:
          char v33 = 0;
          break;
        default:
          uint64_t v57 = 0;
          uint64_t v31 = 0;
          unint64_t v32 = 0;
          char v33 = 0;
          uint64_t v34 = v64;
          break;
      }
      uint64_t v46 = v69;
      uint64_t v47 = *v69;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v46 = v47;
      uint64_t v49 = v11;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v47 = sub_259FC9D14(0, v47[2] + 1, 1, v47);
        *char v69 = v47;
      }
      unint64_t v51 = v47[2];
      unint64_t v50 = v47[3];
      if (v51 >= v50 >> 1)
      {
        uint64_t v47 = sub_259FC9D14((void *)(v50 > 1), v51 + 1, 1, v47);
        *char v69 = v47;
      }
      v47[2] = v51 + 1;
      uint64_t v52 = &v47[5 * v51];
      v52[4] = v34;
      v52[5] = v57;
      v52[6] = v31;
      v52[7] = v32;
      *((unsigned char *)v52 + 64) = v33;
      *((unsigned char *)v52 + 65) = v59;
      sub_259FAED74((uint64_t)v68);
      uint64_t v20 = v60;
      uint64_t v29 = v49;
      return (void *)sub_259FAD1BC(v20, v29);
    }
    uint64_t v20 = v12;
LABEL_35:
    uint64_t v29 = v11;
    return (void *)sub_259FAD1BC(v20, v29);
  }
  uint64_t v15 = a3[2];
  uint64_t v14 = a3[3];
  if (v14 >= v15)
  {
    uint64_t v20 = v60;
    goto LABEL_35;
  }
  uint64_t v56 = v11;
  uint64_t v16 = *a3;
  uint64_t v17 = a3[1] - *a3;
  uint64_t v18 = *a3 + 1;
  uint64_t v58 = v18;
  while (1)
  {
    if (v16)
    {
      uint64_t v21 = v17;
      if (v14 >= v17) {
        break;
      }
    }
    else
    {
      if ((v14 & 0x8000000000000000) == 0) {
        break;
      }
      uint64_t v21 = 0;
    }
    unint64_t v22 = *(unsigned __int8 *)(v16 + v14);
    uint64_t v23 = v14 + 1;
    if ((*(char *)(v16 + v14) & 0x80000000) == 0)
    {
      a3[3] = v23;
      goto LABEL_24;
    }
    if (v23 >= v21) {
      break;
    }
    v22 &= 0x7Fu;
    unint64_t v24 = 7;
    while (1)
    {
      uint64_t v25 = v14 + 2;
      v22 |= (unint64_t)(*(unsigned char *)(v18 + v14) & 0x7F) << v24;
      if ((*(unsigned char *)(v18 + v14) & 0x80) == 0) {
        break;
      }
      if (v25 < v21)
      {
        ++v14;
        BOOL v26 = v24 > 0x38;
        v24 += 7;
        if (!v26) {
          continue;
        }
      }
      goto LABEL_30;
    }
    a3[3] = v25;
    if (v22 > 0xFFFFFFFE) {
      break;
    }
LABEL_24:
    if (v22 < 8 || (v22 & 6) == 6) {
      break;
    }
    if (v13 == v22 >> 3)
    {
      sub_259FBD10C(a1, a2, v22, a3, v69);
    }
    else
    {
      sub_259FC4550(v22);
      uint64_t v18 = v58;
    }
    uint64_t v14 = a3[3];
    if (v14 >= v15) {
      goto LABEL_31;
    }
  }
LABEL_30:
  sub_259FBA9FC();
  swift_allocError();
  *(void *)uint64_t v28 = 1;
  *(_OWORD *)(v28 + 8) = 0u;
  *(_OWORD *)(v28 + 24) = 0u;
  *(_OWORD *)(v28 + 40) = 0u;
  *(void *)(v28 + 56) = 0;
  *(unsigned char *)(v28 + 64) = 2;
  swift_willThrow();
LABEL_31:
  uint64_t v20 = v60;
  uint64_t v29 = v56;
  return (void *)sub_259FAD1BC(v20, v29);
}

void *sub_259FBEC5C(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(long long *))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(void *(**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 56))(v71, ObjectType, a2);
  if (v4) {
    return result;
  }
  char v72 = a4;
  uint64_t v11 = v71[0];
  uint64_t v12 = v71[1];
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48))(ObjectType, a2);
  uint64_t v62 = v11;
  if (((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(ObjectType, a2) & 1) == 0)
  {
    uint64_t v19 = sub_259FAE178(v13);
    uint64_t v20 = v11;
    uint64_t v21 = v12;
    if ((v19 & 0x100000000) == 0)
    {
      *(void *)&long long v66 = v62;
      *((void *)&v66 + 1) = v12;
      char v22 = sub_259FAE500(v19);
      sub_259FAE514((uint64_t *)&v66, v22, (uint64_t)v71);
      sub_259FAEE8C((uint64_t)v71, (uint64_t)&v66);
      char v23 = v70;
      switch(v70)
      {
        case 2:
        case 3:
        case 5:
          unint64_t v24 = 0;
          uint64_t v25 = 0;
          uint64_t v26 = 0;
          char v27 = 0;
          uint64_t v28 = v66;
          break;
        case 6:
          unint64_t v24 = 0;
          uint64_t v25 = 0;
          uint64_t v26 = 0;
          char v27 = 0;
          uint64_t v28 = v66;
          break;
        case 7:
          unint64_t v24 = *((void *)&v66 + 1);
          uint64_t v28 = v66;
          uint64_t v26 = *((void *)&v67 + 1);
          uint64_t v25 = v67;
          char v27 = v68;
          break;
        case 8:
          char v39 = v70;
          sub_259FAF0F0(&v66, (uint64_t)&v63);
          uint64_t v40 = v64;
          uint64_t v41 = v65;
          __swift_project_boxed_opaque_existential_1(&v63, v64);
          unint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t))(v41 + 24);
          uint64_t v43 = v41;
          uint64_t v20 = v62;
          uint64_t v44 = v42(v40, v43);
          goto LABEL_39;
        case 9:
          char v39 = v70;
          sub_259FAF0F0(&v66, (uint64_t)&v63);
          uint64_t v46 = v64;
          uint64_t v47 = v65;
          __swift_project_boxed_opaque_existential_1(&v63, v64);
          uint64_t v48 = *(uint64_t (**)(uint64_t, uint64_t))(v47 + 16);
          uint64_t v49 = v47;
          uint64_t v20 = v62;
          uint64_t v44 = v48(v46, v49);
LABEL_39:
          uint64_t v28 = v44;
          unint64_t v24 = v45;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
          char v23 = v39;
          uint64_t v25 = 0;
          uint64_t v26 = 0;
          char v27 = 0;
          break;
        case 10:
          unint64_t v59 = *((void *)&v66 + 1);
          uint64_t v28 = v66;
          char v61 = v70;
          uint64_t v64 = MEMORY[0x263F8D3E8];
          uint64_t v65 = MEMORY[0x263F07B80];
          long long v63 = v67;
          unint64_t v50 = __swift_project_boxed_opaque_existential_1(&v63, MEMORY[0x263F8D3E8]);
          uint64_t v51 = *v50;
          if (*v50 && (uint64_t v52 = (unsigned char *)v50[1], v53 = (uint64_t)&v52[-v51], v52 != (unsigned char *)v51))
          {
            if (v53 <= 14)
            {
              uint64_t v25 = sub_259FC3B50((unsigned char *)*v50, v52);
              uint64_t v26 = v56 & 0xFFFFFFFFFFFFFFLL;
              swift_unknownObjectRetain();
            }
            else
            {
              swift_unknownObjectRetain();
              if ((unint64_t)v53 >= 0x7FFFFFFF)
              {
                uint64_t v25 = sub_259FC3C98(v51, (uint64_t)v52);
                uint64_t v26 = v57 | 0x8000000000000000;
              }
              else
              {
                uint64_t v25 = sub_259FC3C14(v51, (uint64_t)v52);
                uint64_t v26 = v55 | 0x4000000000000000;
              }
            }
          }
          else
          {
            swift_unknownObjectRetain();
            uint64_t v25 = 0;
            uint64_t v26 = 0xC000000000000000;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
          swift_unknownObjectRelease();
          char v27 = 0;
          unint64_t v24 = v59;
          char v23 = v61;
          break;
        default:
          unint64_t v24 = 0;
          uint64_t v25 = 0;
          uint64_t v26 = 0;
          char v27 = 0;
          uint64_t v28 = v66;
          break;
      }
      *(void *)&long long v66 = v28;
      *((void *)&v66 + 1) = v24;
      *(void *)&long long v67 = v25;
      *((void *)&v67 + 1) = v26;
      char v68 = v27;
      char v69 = v23;
      char v54 = v23;
      v72(&v66);
      sub_259FB671C(v28, v24, v25, v26, v27, v54);
      sub_259FAED74((uint64_t)v71);
    }
    uint64_t v36 = v20;
    uint64_t v37 = v21;
    return (void *)sub_259FAD1BC(v36, v37);
  }
  uint64_t v15 = a3[2];
  uint64_t v14 = a3[3];
  if (v14 >= v15)
  {
    uint64_t v36 = v11;
    uint64_t v37 = v12;
    return (void *)sub_259FAD1BC(v36, v37);
  }
  uint64_t v58 = v12;
  uint64_t v16 = *a3;
  uint64_t v17 = a3[1] - *a3;
  uint64_t v18 = *a3 + 1;
  uint64_t v60 = v18;
  while (1)
  {
    if (v16)
    {
      uint64_t v29 = v17;
      if (v14 >= v17) {
        break;
      }
    }
    else
    {
      if ((v14 & 0x8000000000000000) == 0) {
        break;
      }
      uint64_t v29 = 0;
    }
    unint64_t v30 = *(unsigned __int8 *)(v16 + v14);
    uint64_t v31 = v14 + 1;
    if ((*(char *)(v16 + v14) & 0x80000000) == 0)
    {
      a3[3] = v31;
      goto LABEL_25;
    }
    if (v31 >= v29) {
      break;
    }
    v30 &= 0x7Fu;
    unint64_t v32 = 7;
    while (1)
    {
      uint64_t v33 = v14 + 2;
      v30 |= (unint64_t)(*(unsigned char *)(v18 + v14) & 0x7F) << v32;
      if ((*(unsigned char *)(v18 + v14) & 0x80) == 0) {
        break;
      }
      if (v33 < v29)
      {
        ++v14;
        BOOL v34 = v32 > 0x38;
        v32 += 7;
        if (!v34) {
          continue;
        }
      }
      goto LABEL_32;
    }
    a3[3] = v33;
    if (v30 > 0xFFFFFFFE) {
      break;
    }
LABEL_25:
    if (v30 < 8 || (v30 & 6) == 6) {
      break;
    }
    if (v13 == v30 >> 3)
    {
      sub_259FBD96C(a1, a2, v30, a3, v72);
    }
    else
    {
      sub_259FC4550(v30);
      uint64_t v18 = v60;
    }
    uint64_t v14 = a3[3];
    if (v14 >= v15) {
      goto LABEL_33;
    }
  }
LABEL_32:
  sub_259FBA9FC();
  swift_allocError();
  *(void *)uint64_t v38 = 1;
  *(_OWORD *)(v38 + 8) = 0u;
  *(_OWORD *)(v38 + 24) = 0u;
  *(_OWORD *)(v38 + 40) = 0u;
  *(void *)(v38 + 56) = 0;
  *(unsigned char *)(v38 + 64) = 2;
  swift_willThrow();
LABEL_33:
  uint64_t v36 = v62;
  uint64_t v37 = v58;
  return (void *)sub_259FAD1BC(v36, v37);
}

void *sub_259FBF1EC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, void *a5)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(void *(**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 56))(v38, ObjectType, a2);
  if (!v5)
  {
    char v39 = a5;
    uint64_t v13 = v38[0];
    uint64_t v35 = v38[1];
    uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48))(ObjectType, a2);
    uint64_t v34 = v13;
    if ((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(ObjectType, a2))
    {
      uint64_t v16 = a3[2];
      uint64_t v15 = a3[3];
      if (v15 >= v16) {
        goto LABEL_31;
      }
      uint64_t v17 = *a3;
      uint64_t v33 = a3[1] - *a3;
      uint64_t v18 = *a3 + 1;
      uint64_t v19 = v36;
      uint64_t v20 = *a3;
      while (1)
      {
        if (v17)
        {
          uint64_t v24 = v33;
          if (v15 >= v33) {
            goto LABEL_30;
          }
        }
        else
        {
          if ((v15 & 0x8000000000000000) == 0) {
            goto LABEL_30;
          }
          uint64_t v24 = 0;
        }
        int v25 = *(char *)(v17 + v15);
        unint64_t v26 = *(unsigned __int8 *)(v17 + v15);
        uint64_t v27 = v15 + 1;
        if (v25 < 0)
        {
          if (v27 >= v24) {
            goto LABEL_30;
          }
          v26 &= 0x7Fu;
          unint64_t v28 = 7;
          while (1)
          {
            uint64_t v29 = v15 + 2;
            v26 |= (unint64_t)(*(unsigned char *)(v18 + v15) & 0x7F) << v28;
            if ((*(unsigned char *)(v18 + v15) & 0x80) == 0) {
              break;
            }
            if (v29 < v24)
            {
              ++v15;
              BOOL v30 = v28 > 0x38;
              v28 += 7;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_30;
          }
          a3[3] = v29;
          if (v26 > 0xFFFFFFFE)
          {
LABEL_30:
            sub_259FBA9FC();
            swift_allocError();
            *(void *)uint64_t v32 = 1;
            *(_OWORD *)(v32 + 8) = 0u;
            *(_OWORD *)(v32 + 24) = 0u;
            *(_OWORD *)(v32 + 40) = 0u;
            *(void *)(v32 + 56) = 0;
            *(unsigned char *)(v32 + 64) = 2;
            swift_willThrow();
LABEL_31:
            uint64_t v23 = v34;
            uint64_t v14 = v35;
            return (void *)sub_259FAD1BC(v23, v14);
          }
        }
        else
        {
          a3[3] = v27;
        }
        if (v26 < 8 || (v26 & 6) == 6) {
          goto LABEL_30;
        }
        if (v19 == v26 >> 3)
        {
          sub_259FBE17C(a1, a2, v26, a3, a4, v39);
        }
        else
        {
          sub_259FC4550(v26);
          uint64_t v19 = v36;
        }
        uint64_t v17 = v20;
        uint64_t v15 = a3[3];
        if (v15 >= v16) {
          goto LABEL_31;
        }
      }
    }
    uint64_t v21 = sub_259FAE178(v36);
    if ((v21 & 0x100000000) != 0) {
      goto LABEL_31;
    }
    v37[0] = v13;
    v37[1] = v35;
    char v22 = sub_259FAE500(v21);
    sub_259FAE514(v37, v22, (uint64_t)v38);
    sub_259FEDA70((uint64_t)v38, a4, v39);
    sub_259FAED74((uint64_t)v38);
    uint64_t v23 = v13;
    uint64_t v14 = v35;
    return (void *)sub_259FAD1BC(v23, v14);
  }
  return result;
}

void *sub_259FBF4D4(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(void *(**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 56))(v34, ObjectType, a2);
  if (!v4)
  {
    uint64_t v35 = a3;
    uint64_t v10 = v34[0];
    uint64_t v31 = v34[1];
    uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48))(ObjectType, a2);
    uint64_t v30 = v10;
    if ((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(ObjectType, a2))
    {
      uint64_t v13 = v3[2];
      uint64_t v12 = v3[3];
      if (v12 >= v13) {
        goto LABEL_32;
      }
      uint64_t v14 = *v3;
      uint64_t v29 = v3[1] - *v3;
      uint64_t v15 = *v3 + 1;
      uint64_t v16 = *v3;
      while (1)
      {
        if (v14)
        {
          uint64_t v17 = v29;
          if (v12 >= v29) {
            goto LABEL_31;
          }
        }
        else
        {
          if ((v12 & 0x8000000000000000) == 0) {
            goto LABEL_31;
          }
          uint64_t v17 = 0;
        }
        int v18 = *(char *)(v14 + v12);
        unint64_t v19 = *(unsigned __int8 *)(v14 + v12);
        uint64_t v20 = v12 + 1;
        if (v18 < 0)
        {
          if (v20 >= v17) {
            goto LABEL_31;
          }
          v19 &= 0x7Fu;
          unint64_t v21 = 7;
          while (1)
          {
            uint64_t v22 = v12 + 2;
            v19 |= (unint64_t)(*(unsigned char *)(v15 + v12) & 0x7F) << v21;
            if ((*(unsigned char *)(v15 + v12) & 0x80) == 0) {
              break;
            }
            if (v22 < v17)
            {
              ++v12;
              BOOL v23 = v21 > 0x38;
              v21 += 7;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_31;
          }
          void v3[3] = v22;
          if (v19 > 0xFFFFFFFE)
          {
LABEL_31:
            sub_259FBA9FC();
            swift_allocError();
            *(void *)uint64_t v28 = 1;
            *(_OWORD *)(v28 + 8) = 0u;
            *(_OWORD *)(v28 + 24) = 0u;
            *(_OWORD *)(v28 + 40) = 0u;
            *(void *)(v28 + 56) = 0;
            *(unsigned char *)(v28 + 64) = 2;
            swift_willThrow();
LABEL_32:
            uint64_t v27 = v30;
            uint64_t v11 = v31;
            return (void *)sub_259FAD1BC(v27, v11);
          }
        }
        else
        {
          void v3[3] = v20;
        }
        if (v19 < 8 || (v19 & 6) == 6) {
          goto LABEL_31;
        }
        if (v32 == v19 >> 3) {
          sub_259FBE404(a1, a2, v19, v35);
        }
        else {
          sub_259FC4550(v19);
        }
        uint64_t v14 = v16;
        uint64_t v12 = v3[3];
        if (v12 >= v13) {
          goto LABEL_32;
        }
      }
    }
    uint64_t v25 = sub_259FAE178(v32);
    if ((v25 & 0x100000000) != 0) {
      goto LABEL_32;
    }
    v33[0] = v10;
    v33[1] = v31;
    char v26 = sub_259FAE500(v25);
    sub_259FAE514(v33, v26, (uint64_t)v34);
    v35(v34);
    sub_259FAED74((uint64_t)v34);
    uint64_t v27 = v10;
    uint64_t v11 = v31;
    return (void *)sub_259FAD1BC(v27, v11);
  }
  return result;
}

uint64_t sub_259FBF7B4(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, uint64_t a5, unint64_t a6, void (*a7)(__n128 *), uint64_t a8)
{
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 56))(&v65, ObjectType, a2);
  if (v8) {
    return swift_unknownObjectRelease();
  }
  unint64_t v50 = a6;
  uint64_t v69 = a8;
  unint64_t v18 = v65;
  unint64_t v17 = v66;
  uint64_t result = sub_259FAE500(a3);
  if (result != 2
    || v17 >> 62 == 1
    || v17 >> 62 == 2 && __PAIR128__((v18 >= 0xD) + v17 + 0x7FFFFFFFFFFFFFFFLL, v18 - 13) < 2)
  {
    unint64_t v65 = v18;
    unint64_t v66 = v17;
    char v20 = sub_259FAE500(a3);
    sub_259FAE514((uint64_t *)&v65, v20, (uint64_t)v68);
    uint64_t v46 = v18;
    uint64_t v48 = v17;
    sub_259FAEE8C((uint64_t)v68, (uint64_t)v67);
    unint64_t v65 = a5;
    unint64_t v66 = v50;
    swift_unknownObjectRetain();
    FieldValueImpl.asPublic()(&v58);
    unint64_t v21 = a7;
    uint64_t v22 = v59;
    unint64_t v23 = v60;
    uint64_t v25 = v61;
    uint64_t v24 = v62;
    char v26 = v63;
    char v27 = v64;
    __n128 v51 = v58;
    uint64_t v52 = v59;
    unint64_t v53 = v60;
    uint64_t v54 = v61;
    uint64_t v55 = v62;
    char v56 = v63;
    char v57 = v64;
    v21(&v51);
    swift_unknownObjectRelease();
    sub_259FB671C(v22, v23, v25, v24, v26, v27);
    sub_259FC1F84((uint64_t)&v65);
    sub_259FAED74((uint64_t)v68);
    sub_259FAD1BC(v46, v48);
    return swift_unknownObjectRelease();
  }
  uint64_t v28 = *a4;
  if (*a4)
  {
    uint64_t v29 = a4[1] - v28;
    uint64_t v30 = a4[3];
    if (v30 >= v29) {
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v30 = a4[3];
    if ((v30 & 0x8000000000000000) == 0) {
      goto LABEL_26;
    }
    uint64_t v29 = 0;
  }
  LODWORD(v31) = *(unsigned __int8 *)(v28 + v30);
  uint64_t v32 = v30 + 1;
  if (*(char *)(v28 + v30) < 0)
  {
    if (v32 >= v29) {
      goto LABEL_26;
    }
    v31 &= 0x7Fu;
    uint64_t v39 = v28 + 1;
    unint64_t v40 = 7;
    while (1)
    {
      uint64_t v32 = v30 + 2;
      v31 |= (unint64_t)(*(unsigned char *)(v39 + v30) & 0x7F) << v40;
      if ((*(unsigned char *)(v39 + v30) & 0x80) == 0) {
        break;
      }
      if (v32 < v29)
      {
        ++v30;
        BOOL v41 = v40 > 0x38;
        v40 += 7;
        if (!v41) {
          continue;
        }
      }
      goto LABEL_26;
    }
  }
  a4[3] = v32;
  if ((v31 & 0x80000000) != 0)
  {
LABEL_26:
    sub_259FBA9FC();
    swift_allocError();
    *(void *)uint64_t v42 = 1;
    *(_OWORD *)(v42 + 8) = 0u;
    *(_OWORD *)(v42 + 24) = 0u;
    *(_OWORD *)(v42 + 40) = 0u;
    *(void *)(v42 + 56) = 0;
    *(unsigned char *)(v42 + 64) = 2;
    swift_willThrow();
LABEL_27:
    sub_259FAD1BC(v18, v17);
    return swift_unknownObjectRelease();
  }
  uint64_t v33 = v32 + v31;
  if (!__OFADD__(v32, v31))
  {
    if (v32 < v33)
    {
      uint64_t v44 = a5;
      unint64_t v47 = v18;
      unint64_t v49 = v17;
      uint64_t v43 = v32 + v31;
      do
      {
        unint64_t v65 = v18;
        unint64_t v66 = v17;
        sub_259FF3780(&v65, (uint64_t)v68);
        sub_259FAEE8C((uint64_t)v68, (uint64_t)v67);
        unint64_t v65 = a5;
        unint64_t v66 = v50;
        swift_unknownObjectRetain();
        FieldValueImpl.asPublic()(&v58);
        uint64_t v34 = v59;
        unint64_t v35 = v60;
        uint64_t v36 = v61;
        uint64_t v37 = v62;
        char v45 = v64;
        char v38 = v63;
        __n128 v51 = v58;
        uint64_t v52 = v59;
        unint64_t v53 = v60;
        uint64_t v54 = v61;
        uint64_t v55 = v62;
        char v56 = v63;
        char v57 = v64;
        a7(&v51);
        swift_unknownObjectRelease();
        sub_259FB671C(v34, v35, v36, v37, v38, v45);
        sub_259FC1F84((uint64_t)&v65);
        sub_259FAED74((uint64_t)v68);
        uint64_t v32 = a4[3];
        uint64_t v33 = v43;
        a5 = v44;
        unint64_t v18 = v47;
        unint64_t v17 = v49;
      }
      while (v32 < v43);
    }
    if (v32 == v33) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t sub_259FBFB9C(uint64_t result, uint64_t *a2, void *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v8 = a2[2];
  uint64_t v7 = a2[3];
  if (v7 < v8)
  {
    uint64_t v10 = result;
    uint64_t v11 = *a2;
    uint64_t v38 = a2[1] - *a2;
    uint64_t v12 = *a2 + 1;
    do
    {
      if (v11)
      {
        uint64_t v13 = v38;
        if (v7 >= v38) {
          goto LABEL_65;
        }
      }
      else
      {
        if ((v7 & 0x8000000000000000) == 0) {
          goto LABEL_65;
        }
        uint64_t v13 = 0;
      }
      unint64_t v14 = *(unsigned __int8 *)(v11 + v7);
      uint64_t v15 = v7 + 1;
      if (*(char *)(v11 + v7) < 0)
      {
        if (v15 >= v13) {
          goto LABEL_65;
        }
        v14 &= 0x7Fu;
        unint64_t v16 = 7;
        while (1)
        {
          uint64_t v15 = v7 + 2;
          v14 |= (unint64_t)(*(unsigned char *)(v12 + v7) & 0x7F) << v16;
          if ((*(unsigned char *)(v12 + v7) & 0x80) == 0) {
            break;
          }
          if (v15 < v13)
          {
            ++v7;
            BOOL v17 = v16 >= 0x39;
            v16 += 7;
            if (!v17) {
              continue;
            }
          }
          goto LABEL_65;
        }
        a2[3] = v15;
        if (v14 >= 0xFFFFFFFF)
        {
LABEL_65:
          sub_259FBA9FC();
          swift_allocError();
          *(void *)uint64_t v34 = 1;
          *(_OWORD *)(v34 + 8) = 0u;
          *(_OWORD *)(v34 + 24) = 0u;
          *(_OWORD *)(v34 + 40) = 0u;
          *(void *)(v34 + 56) = 0;
          *(unsigned char *)(v34 + 64) = 2;
          return swift_willThrow();
        }
      }
      else
      {
        a2[3] = v15;
      }
      BOOL v17 = v14 < 8 || (v14 & 7) >= 6;
      if (v17) {
        goto LABEL_65;
      }
      if (*(void *)(v10 + 16) && (v18 = v10, uint64_t result = sub_259FE1284(v14 >> 3), v10 = v18, (v19 & 1) != 0))
      {
        char v20 = (uint64_t *)(*(void *)(v18 + 56) + 16 * result);
        uint64_t v22 = *v20;
        unint64_t v21 = v20[1];
        uint64_t v23 = swift_unknownObjectRetain_n();
        sub_259FBCA60(v23, v21, v14, a2, v22, v21, a3, a4, a5);
        uint64_t result = swift_unknownObjectRelease();
        if (v6) {
          return result;
        }
        uint64_t v10 = v18;
      }
      else
      {
        switch(v14 & 7)
        {
          case 0uLL:
            if (v11)
            {
              uint64_t v24 = v38;
              if (v15 >= v38) {
                goto LABEL_65;
              }
            }
            else
            {
              if ((v15 & 0x8000000000000000) == 0) {
                goto LABEL_65;
              }
              uint64_t v24 = 0;
            }
            uint64_t v25 = v15 + 1;
            if ((*(char *)(v11 + v15) & 0x80000000) == 0) {
              goto LABEL_56;
            }
            if (v25 >= v24) {
              goto LABEL_65;
            }
            unint64_t v28 = 7;
            while (1)
            {
              uint64_t v25 = v15 + 2;
              if ((*(char *)(v12 + v15) & 0x80000000) == 0) {
                goto LABEL_56;
              }
              if (v25 < v24)
              {
                ++v15;
                BOOL v17 = v28 >= 0x39;
                v28 += 7;
                if (!v17) {
                  continue;
                }
              }
              goto LABEL_65;
            }
          case 1uLL:
            uint64_t v25 = v15 + 8;
            if (!__OFADD__(v15, 8)) {
              goto LABEL_56;
            }
            goto LABEL_68;
          case 2uLL:
            if (v11)
            {
              uint64_t v26 = v38;
              if (v15 >= v38) {
                goto LABEL_65;
              }
            }
            else
            {
              if ((v15 & 0x8000000000000000) == 0) {
                goto LABEL_65;
              }
              uint64_t v26 = 0;
            }
            LODWORD(v29) = *(unsigned __int8 *)(v11 + v15);
            uint64_t v30 = v15 + 1;
            if ((*(char *)(v11 + v15) & 0x80000000) == 0) {
              goto LABEL_54;
            }
            if (v30 >= v26) {
              goto LABEL_65;
            }
            v29 &= 0x7Fu;
            unint64_t v32 = 7;
            while (1)
            {
              uint64_t v30 = v15 + 2;
              v29 |= (unint64_t)(*(unsigned char *)(v12 + v15) & 0x7F) << v32;
              if ((*(unsigned char *)(v12 + v15) & 0x80) == 0) {
                break;
              }
              if (v30 < v26)
              {
                ++v15;
                BOOL v33 = v32 > 0x38;
                v32 += 7;
                if (!v33) {
                  continue;
                }
              }
              goto LABEL_65;
            }
LABEL_54:
            a2[3] = v30;
            if ((v29 & 0x80000000) != 0) {
              goto LABEL_65;
            }
            BOOL v31 = __OFADD__(v30, v29);
            uint64_t v25 = v30 + v29;
            if (v31)
            {
LABEL_70:
              __break(1u);
              JUMPOUT(0x259FBFEF0);
            }
LABEL_56:
            a2[3] = v25;
            break;
          case 3uLL:
            uint64_t v27 = v10;
            uint64_t result = sub_259FC481C(v14 >> 3);
            if (v6) {
              return result;
            }
            uint64_t v10 = v27;
            break;
          case 4uLL:
            goto LABEL_65;
          case 5uLL:
            uint64_t v25 = v15 + 4;
            if (!__OFADD__(v15, 4)) {
              goto LABEL_56;
            }
            goto LABEL_69;
          default:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
            goto LABEL_70;
        }
      }
      uint64_t v7 = a2[3];
    }
    while (v7 < v8);
  }
  return result;
}

uint64_t sub_259FBFF08(uint64_t result, uint64_t *a2, void *a3, uint64_t *a4, void *a5, void **a6)
{
  uint64_t v7 = v6;
  uint64_t v8 = a2[3];
  if (v8 < a2[2])
  {
    uint64_t v10 = result;
    uint64_t v11 = *a2;
    uint64_t v41 = a2[1] - *a2;
    uint64_t v12 = *a2 + 1;
    uint64_t v40 = a2[2];
    do
    {
      if (v11)
      {
        uint64_t v13 = v41;
        if (v8 >= v41) {
          goto LABEL_64;
        }
      }
      else
      {
        if ((v8 & 0x8000000000000000) == 0) {
          goto LABEL_64;
        }
        uint64_t v13 = 0;
      }
      unint64_t v14 = *(unsigned __int8 *)(v11 + v8);
      uint64_t v15 = v8 + 1;
      if (*(char *)(v11 + v8) < 0)
      {
        if (v15 >= v13) {
          goto LABEL_64;
        }
        v14 &= 0x7Fu;
        unint64_t v16 = 7;
        while (1)
        {
          uint64_t v15 = v8 + 2;
          v14 |= (unint64_t)(*(unsigned char *)(v12 + v8) & 0x7F) << v16;
          if ((*(unsigned char *)(v12 + v8) & 0x80) == 0) {
            break;
          }
          if (v15 < v13)
          {
            ++v8;
            BOOL v17 = v16 >= 0x39;
            v16 += 7;
            if (!v17) {
              continue;
            }
          }
          goto LABEL_64;
        }
        a2[3] = v15;
        if (v14 >= 0xFFFFFFFF)
        {
LABEL_64:
          sub_259FBA9FC();
          swift_allocError();
          *(void *)uint64_t v35 = 1;
          *(_OWORD *)(v35 + 8) = 0u;
          *(_OWORD *)(v35 + 24) = 0u;
          *(_OWORD *)(v35 + 40) = 0u;
          *(void *)(v35 + 56) = 0;
          *(unsigned char *)(v35 + 64) = 2;
          return swift_willThrow();
        }
      }
      else
      {
        a2[3] = v15;
      }
      BOOL v17 = v14 < 8 || (v14 & 7) >= 6;
      if (v17) {
        goto LABEL_64;
      }
      if (*(void *)(v10 + 16) && (v18 = v10, uint64_t result = sub_259FE1284(v14 >> 3), v10 = v18, (v19 & 1) != 0))
      {
        char v20 = (uint64_t *)(*(void *)(v18 + 56) + 16 * result);
        uint64_t v22 = *v20;
        unint64_t v21 = v20[1];
        uint64_t v23 = swift_unknownObjectRetain_n();
        sub_259FBC314(v23, v21, v14, a2, v22, v21, a3, a4, a5, a6);
        uint64_t result = swift_unknownObjectRelease();
        if (v7) {
          return result;
        }
        uint64_t v10 = v18;
        uint64_t v24 = v40;
      }
      else
      {
        switch(v14 & 7)
        {
          case 0uLL:
            if (v11)
            {
              uint64_t v25 = v41;
              uint64_t v24 = v40;
              if (v15 >= v41) {
                goto LABEL_64;
              }
            }
            else
            {
              uint64_t v24 = v40;
              if ((v15 & 0x8000000000000000) == 0) {
                goto LABEL_64;
              }
              uint64_t v25 = 0;
            }
            uint64_t v26 = v15 + 1;
            if ((*(char *)(v11 + v15) & 0x80000000) == 0) {
              goto LABEL_55;
            }
            if (v26 >= v25) {
              goto LABEL_64;
            }
            unint64_t v29 = 7;
            while (1)
            {
              uint64_t v26 = v15 + 2;
              if ((*(char *)(v12 + v15) & 0x80000000) == 0) {
                goto LABEL_55;
              }
              if (v26 < v25)
              {
                ++v15;
                BOOL v17 = v29 >= 0x39;
                v29 += 7;
                if (!v17) {
                  continue;
                }
              }
              goto LABEL_64;
            }
          case 1uLL:
            uint64_t v26 = v15 + 8;
            if (!__OFADD__(v15, 8)) {
              goto LABEL_39;
            }
            goto LABEL_67;
          case 2uLL:
            if (v11)
            {
              uint64_t v27 = v41;
              uint64_t v24 = v40;
              if (v15 >= v41) {
                goto LABEL_64;
              }
            }
            else
            {
              uint64_t v24 = v40;
              if ((v15 & 0x8000000000000000) == 0) {
                goto LABEL_64;
              }
              uint64_t v27 = 0;
            }
            LODWORD(v30) = *(unsigned __int8 *)(v11 + v15);
            uint64_t v31 = v15 + 1;
            if ((*(char *)(v11 + v15) & 0x80000000) == 0) {
              goto LABEL_53;
            }
            if (v31 >= v27) {
              goto LABEL_64;
            }
            v30 &= 0x7Fu;
            unint64_t v33 = 7;
            while (1)
            {
              uint64_t v31 = v15 + 2;
              v30 |= (unint64_t)(*(unsigned char *)(v12 + v15) & 0x7F) << v33;
              if ((*(unsigned char *)(v12 + v15) & 0x80) == 0) {
                break;
              }
              if (v31 < v27)
              {
                ++v15;
                BOOL v34 = v33 > 0x38;
                v33 += 7;
                if (!v34) {
                  continue;
                }
              }
              goto LABEL_64;
            }
LABEL_53:
            a2[3] = v31;
            if ((v30 & 0x80000000) != 0) {
              goto LABEL_64;
            }
            BOOL v32 = __OFADD__(v31, v30);
            uint64_t v26 = v31 + v30;
            if (v32)
            {
LABEL_69:
              __break(1u);
              JUMPOUT(0x259FC027CLL);
            }
LABEL_55:
            a2[3] = v26;
            break;
          case 3uLL:
            uint64_t v28 = v10;
            uint64_t result = sub_259FC481C(v14 >> 3);
            if (v7) {
              return result;
            }
            uint64_t v10 = v28;
            uint64_t v24 = v40;
            break;
          case 4uLL:
            goto LABEL_64;
          case 5uLL:
            uint64_t v26 = v15 + 4;
            if (__OFADD__(v15, 4)) {
              goto LABEL_68;
            }
LABEL_39:
            uint64_t v24 = v40;
            goto LABEL_55;
          default:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
            goto LABEL_69;
        }
      }
      uint64_t v8 = a2[3];
    }
    while (v8 < v24);
  }
  return result;
}

uint64_t sub_259FC0294(uint64_t result, uint64_t *a2, void *a3, uint64_t a4, uint64_t *a5, char *a6, uint64_t *a7, BOOL *a8, _DWORD *a9)
{
  uint64_t v10 = v9;
  uint64_t v11 = a2[3];
  if (v11 < a2[2])
  {
    uint64_t v13 = result;
    uint64_t v14 = *a2;
    uint64_t v46 = a2[1] - *a2;
    uint64_t v15 = *a2 + 1;
    uint64_t v45 = a2[2];
    do
    {
      if (v14)
      {
        uint64_t v16 = v46;
        if (v11 >= v46) {
          goto LABEL_64;
        }
      }
      else
      {
        if ((v11 & 0x8000000000000000) == 0) {
          goto LABEL_64;
        }
        uint64_t v16 = 0;
      }
      unint64_t v17 = *(unsigned __int8 *)(v14 + v11);
      uint64_t v18 = v11 + 1;
      if (*(char *)(v14 + v11) < 0)
      {
        if (v18 >= v16) {
          goto LABEL_64;
        }
        v17 &= 0x7Fu;
        unint64_t v19 = 7;
        while (1)
        {
          uint64_t v18 = v11 + 2;
          v17 |= (unint64_t)(*(unsigned char *)(v15 + v11) & 0x7F) << v19;
          if ((*(unsigned char *)(v15 + v11) & 0x80) == 0) {
            break;
          }
          if (v18 < v16)
          {
            ++v11;
            BOOL v20 = v19 >= 0x39;
            v19 += 7;
            if (!v20) {
              continue;
            }
          }
          goto LABEL_64;
        }
        a2[3] = v18;
        if (v17 >= 0xFFFFFFFF)
        {
LABEL_64:
          sub_259FBA9FC();
          swift_allocError();
          *(void *)uint64_t v38 = 1;
          *(_OWORD *)(v38 + 8) = 0u;
          *(_OWORD *)(v38 + 24) = 0u;
          *(_OWORD *)(v38 + 40) = 0u;
          *(void *)(v38 + 56) = 0;
          *(unsigned char *)(v38 + 64) = 2;
          return swift_willThrow();
        }
      }
      else
      {
        a2[3] = v18;
      }
      BOOL v20 = v17 < 8 || (v17 & 7) >= 6;
      if (v20) {
        goto LABEL_64;
      }
      if (*(void *)(v13 + 16) && (v21 = v13, uint64_t result = sub_259FE1284(v17 >> 3), v13 = v21, (v22 & 1) != 0))
      {
        uint64_t v23 = (uint64_t *)(*(void *)(v21 + 56) + 16 * result);
        uint64_t v25 = *v23;
        unint64_t v24 = v23[1];
        uint64_t v26 = swift_unknownObjectRetain_n();
        sub_259FBC6A8(v26, v24, v17, a2, v25, v24, a3, a4, a5, a6, a7, a8, a9);
        uint64_t result = swift_unknownObjectRelease();
        if (v10) {
          return result;
        }
        uint64_t v13 = v21;
        uint64_t v27 = v45;
      }
      else
      {
        switch(v17 & 7)
        {
          case 0uLL:
            if (v14)
            {
              uint64_t v28 = v46;
              uint64_t v27 = v45;
              if (v18 >= v46) {
                goto LABEL_64;
              }
            }
            else
            {
              uint64_t v27 = v45;
              if ((v18 & 0x8000000000000000) == 0) {
                goto LABEL_64;
              }
              uint64_t v28 = 0;
            }
            uint64_t v29 = v18 + 1;
            if ((*(char *)(v14 + v18) & 0x80000000) == 0) {
              goto LABEL_55;
            }
            if (v29 >= v28) {
              goto LABEL_64;
            }
            unint64_t v32 = 7;
            while (1)
            {
              uint64_t v29 = v18 + 2;
              if ((*(char *)(v15 + v18) & 0x80000000) == 0) {
                goto LABEL_55;
              }
              if (v29 < v28)
              {
                ++v18;
                BOOL v20 = v32 >= 0x39;
                v32 += 7;
                if (!v20) {
                  continue;
                }
              }
              goto LABEL_64;
            }
          case 1uLL:
            uint64_t v29 = v18 + 8;
            if (!__OFADD__(v18, 8)) {
              goto LABEL_39;
            }
            goto LABEL_67;
          case 2uLL:
            if (v14)
            {
              uint64_t v30 = v46;
              uint64_t v27 = v45;
              if (v18 >= v46) {
                goto LABEL_64;
              }
            }
            else
            {
              uint64_t v27 = v45;
              if ((v18 & 0x8000000000000000) == 0) {
                goto LABEL_64;
              }
              uint64_t v30 = 0;
            }
            LODWORD(v33) = *(unsigned __int8 *)(v14 + v18);
            uint64_t v34 = v18 + 1;
            if ((*(char *)(v14 + v18) & 0x80000000) == 0) {
              goto LABEL_53;
            }
            if (v34 >= v30) {
              goto LABEL_64;
            }
            v33 &= 0x7Fu;
            unint64_t v36 = 7;
            while (1)
            {
              uint64_t v34 = v18 + 2;
              v33 |= (unint64_t)(*(unsigned char *)(v15 + v18) & 0x7F) << v36;
              if ((*(unsigned char *)(v15 + v18) & 0x80) == 0) {
                break;
              }
              if (v34 < v30)
              {
                ++v18;
                BOOL v37 = v36 > 0x38;
                v36 += 7;
                if (!v37) {
                  continue;
                }
              }
              goto LABEL_64;
            }
LABEL_53:
            a2[3] = v34;
            if ((v33 & 0x80000000) != 0) {
              goto LABEL_64;
            }
            BOOL v35 = __OFADD__(v34, v33);
            uint64_t v29 = v34 + v33;
            if (v35)
            {
LABEL_69:
              __break(1u);
              JUMPOUT(0x259FC0624);
            }
LABEL_55:
            a2[3] = v29;
            break;
          case 3uLL:
            uint64_t v31 = v13;
            uint64_t result = sub_259FC481C(v17 >> 3);
            if (v10) {
              return result;
            }
            uint64_t v13 = v31;
            uint64_t v27 = v45;
            break;
          case 4uLL:
            goto LABEL_64;
          case 5uLL:
            uint64_t v29 = v18 + 4;
            if (__OFADD__(v18, 4)) {
              goto LABEL_68;
            }
LABEL_39:
            uint64_t v27 = v45;
            goto LABEL_55;
          default:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
            goto LABEL_69;
        }
      }
      uint64_t v11 = a2[3];
    }
    while (v11 < v27);
  }
  return result;
}

uint64_t sub_259FC063C(uint64_t a1, uint64_t a2, int a3, uint64_t *a4, uint64_t a5, unint64_t a6, uint64_t *a7, void *a8, uint64_t *a9, uint64_t *a10, void *a11, uint64_t *a12, void **a13)
{
  void (*v19)(unint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t result;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  unint64_t v39;
  unint64_t v40;
  unsigned char v41[48];
  unsigned char v42[56];
  unint64_t v43;

  LODWORD(v43) = a3;
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v19 = *(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 56);
  swift_bridgeObjectRetain_n();
  v19(&v39, ObjectType, a2);
  if (v13) {
    goto LABEL_27;
  }
  BOOL v20 = a5;
  uint64_t v21 = v39;
  char v22 = v40;
  uint64_t v23 = v43;
  uint64_t result = sub_259FAE500(v43);
  if (result != 2
    || v22 >> 62 == 1
    || v22 >> 62 == 2 && __PAIR128__((v21 >= 0xD) + v22 + 0x7FFFFFFFFFFFFFFFLL, v21 - 13) < 2)
  {
    uint64_t v39 = v21;
    uint64_t v40 = v22;
    uint64_t v25 = sub_259FAE500(v23);
    sub_259FAE514((uint64_t *)&v39, v25, (uint64_t)v42);
    sub_259FAEE8C((uint64_t)v42, (uint64_t)v41);
    uint64_t v39 = v20;
    uint64_t v40 = a6;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_259FEFF2C((uint64_t)&v39, a7, a8, a9, a10, a11, a12, a13);
    sub_259FC1F84((uint64_t)&v39);
    swift_bridgeObjectRelease();
    sub_259FAED74((uint64_t)v42);
    sub_259FAD1BC(v21, v22);
    swift_bridgeObjectRelease_n();
    return swift_unknownObjectRelease();
  }
  uint64_t v43 = v21;
  uint64_t v26 = *a4;
  uint64_t v27 = v20;
  if (*a4)
  {
    uint64_t v28 = a4[1] - v26;
    uint64_t v29 = a4[3];
    if (v29 >= v28) {
      goto LABEL_25;
    }
  }
  else
  {
    uint64_t v29 = a4[3];
    if ((v29 & 0x8000000000000000) == 0) {
      goto LABEL_25;
    }
    uint64_t v28 = 0;
  }
  LODWORD(v30) = *(unsigned __int8 *)(v26 + v29);
  uint64_t v31 = v29 + 1;
  if (*(char *)(v26 + v29) < 0)
  {
    if (v31 >= v28) {
      goto LABEL_25;
    }
    v30 &= 0x7Fu;
    uint64_t v33 = v26 + 1;
    uint64_t v34 = 7;
    while (1)
    {
      uint64_t v31 = v29 + 2;
      v30 |= (unint64_t)(*(unsigned char *)(v33 + v29) & 0x7F) << v34;
      if ((*(unsigned char *)(v33 + v29) & 0x80) == 0) {
        break;
      }
      if (v31 < v28)
      {
        ++v29;
        BOOL v35 = v34 > 0x38;
        v34 += 7;
        if (!v35) {
          continue;
        }
      }
      goto LABEL_25;
    }
  }
  a4[3] = v31;
  if ((v30 & 0x80000000) != 0)
  {
LABEL_25:
    sub_259FBA9FC();
    swift_allocError();
    *(void *)unint64_t v36 = 1;
    *(_OWORD *)(v36 + 8) = 0u;
    *(_OWORD *)(v36 + 24) = 0u;
    *(_OWORD *)(v36 + 40) = 0u;
    *(void *)(v36 + 56) = 0;
    *(unsigned char *)(v36 + 64) = 2;
    swift_willThrow();
LABEL_26:
    sub_259FAD1BC(v43, v22);
LABEL_27:
    swift_bridgeObjectRelease_n();
    return swift_unknownObjectRelease();
  }
  unint64_t v32 = v31 + v30;
  if (!__OFADD__(v31, v30))
  {
    for (; v31 < v32; uint64_t v31 = a4[3])
    {
      uint64_t v39 = v43;
      uint64_t v40 = v22;
      sub_259FF3780(&v39, (uint64_t)v42);
      sub_259FAEE8C((uint64_t)v42, (uint64_t)v41);
      uint64_t v39 = v27;
      uint64_t v40 = a6;
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      sub_259FEFF2C((uint64_t)&v39, a7, a8, a9, a10, a11, a12, a13);
      sub_259FC1F84((uint64_t)&v39);
      swift_bridgeObjectRelease();
      sub_259FAED74((uint64_t)v42);
    }
    if (v31 == v32) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

uint64_t sub_259FC0A14(uint64_t result, uint64_t *a2, uint64_t *a3, void *a4, uint64_t *a5, uint64_t *a6, void *a7, uint64_t *a8, void **a9)
{
  uint64_t v10 = v9;
  uint64_t v11 = a2[2];
  uint64_t v12 = a2[3];
  if (v12 >= v11) {
    return result;
  }
  uint64_t v14 = result;
  uint64_t v46 = v10;
  uint64_t v15 = *a2;
  uint64_t v47 = a2[1] - *a2;
  swift_bridgeObjectRetain();
  uint64_t v16 = v15 + 1;
  uint64_t v45 = v11;
  while (1)
  {
    if (v15)
    {
      uint64_t v17 = v47;
      if (v12 >= v47) {
        break;
      }
    }
    else
    {
      if ((v12 & 0x8000000000000000) == 0) {
        break;
      }
      uint64_t v17 = 0;
    }
    unint64_t v18 = *(unsigned __int8 *)(v15 + v12);
    uint64_t v19 = v12 + 1;
    if ((*(char *)(v15 + v12) & 0x80000000) == 0)
    {
      a2[3] = v19;
      goto LABEL_18;
    }
    if (v19 >= v17) {
      break;
    }
    v18 &= 0x7Fu;
    unint64_t v20 = 7;
    while (1)
    {
      uint64_t v19 = v12 + 2;
      v18 |= (unint64_t)(*(unsigned char *)(v16 + v12) & 0x7F) << v20;
      if ((*(unsigned char *)(v16 + v12) & 0x80) == 0) {
        break;
      }
      if (v19 < v17)
      {
        ++v12;
        BOOL v21 = v20 >= 0x39;
        v20 += 7;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_64;
    }
    a2[3] = v19;
    if (v18 >= 0xFFFFFFFF) {
      break;
    }
LABEL_18:
    BOOL v21 = v18 < 8 || (v18 & 7) >= 6;
    if (v21) {
      break;
    }
    if (*(void *)(v14 + 16) && (v22 = v14, unint64_t v23 = sub_259FE1284(v18 >> 3), (v24 & 1) != 0))
    {
      uint64_t v25 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v23);
      uint64_t v27 = *v25;
      unint64_t v26 = v25[1];
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_259FC063C(v27, v26, v18, a2, v27, v26, a3, a4, a5, a6, a7, a8, a9);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      if (v46) {
        return swift_bridgeObjectRelease();
      }
      uint64_t v14 = v22;
      uint64_t v28 = v45;
    }
    else
    {
      switch(v18 & 7)
      {
        case 0uLL:
          if (v15)
          {
            uint64_t v29 = v47;
            uint64_t v28 = v45;
            if (v19 >= v47) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v28 = v45;
            if ((v19 & 0x8000000000000000) == 0) {
              goto LABEL_64;
            }
            uint64_t v29 = 0;
          }
          uint64_t v30 = v19 + 1;
          if ((*(char *)(v15 + v19) & 0x80000000) == 0) {
            goto LABEL_55;
          }
          if (v30 >= v29) {
            goto LABEL_64;
          }
          unint64_t v32 = 7;
          while (1)
          {
            uint64_t v30 = v19 + 2;
            if ((*(char *)(v16 + v19) & 0x80000000) == 0) {
              goto LABEL_55;
            }
            if (v30 < v29)
            {
              ++v19;
              BOOL v21 = v32 >= 0x39;
              v32 += 7;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_64;
          }
        case 1uLL:
          uint64_t v30 = v19 + 8;
          if (!__OFADD__(v19, 8)) {
            goto LABEL_39;
          }
          goto LABEL_69;
        case 2uLL:
          if (v15)
          {
            uint64_t v31 = v47;
            uint64_t v28 = v45;
            if (v19 >= v47) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v28 = v45;
            if ((v19 & 0x8000000000000000) == 0) {
              goto LABEL_64;
            }
            uint64_t v31 = 0;
          }
          LODWORD(v33) = *(unsigned __int8 *)(v15 + v19);
          uint64_t v34 = v19 + 1;
          if ((*(char *)(v15 + v19) & 0x80000000) == 0) {
            goto LABEL_53;
          }
          if (v34 >= v31) {
            goto LABEL_64;
          }
          v33 &= 0x7Fu;
          unint64_t v36 = 7;
          while (1)
          {
            uint64_t v34 = v19 + 2;
            v33 |= (unint64_t)(*(unsigned char *)(v16 + v19) & 0x7F) << v36;
            if ((*(unsigned char *)(v16 + v19) & 0x80) == 0) {
              break;
            }
            if (v34 < v31)
            {
              ++v19;
              BOOL v37 = v36 > 0x38;
              v36 += 7;
              if (!v37) {
                continue;
              }
            }
            goto LABEL_64;
          }
LABEL_53:
          a2[3] = v34;
          if ((v33 & 0x80000000) != 0) {
            goto LABEL_64;
          }
          BOOL v35 = __OFADD__(v34, v33);
          uint64_t v30 = v34 + v33;
          if (v35)
          {
LABEL_71:
            __break(1u);
            JUMPOUT(0x259FC0DECLL);
          }
LABEL_55:
          a2[3] = v30;
          break;
        case 3uLL:
          sub_259FC481C(v18 >> 3);
          if (v46) {
            return swift_bridgeObjectRelease();
          }
          uint64_t v28 = v45;
          break;
        case 4uLL:
          goto LABEL_64;
        case 5uLL:
          uint64_t v30 = v19 + 4;
          if (__OFADD__(v19, 4)) {
            goto LABEL_70;
          }
LABEL_39:
          uint64_t v28 = v45;
          goto LABEL_55;
        default:
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
          goto LABEL_71;
      }
    }
    uint64_t v12 = a2[3];
    if (v12 >= v28) {
      return swift_bridgeObjectRelease();
    }
  }
LABEL_64:
  sub_259FBA9FC();
  swift_allocError();
  *(void *)uint64_t v38 = 1;
  *(_OWORD *)(v38 + 8) = 0u;
  *(_OWORD *)(v38 + 24) = 0u;
  *(_OWORD *)(v38 + 40) = 0u;
  *(void *)(v38 + 56) = 0;
  *(unsigned char *)(v38 + 64) = 2;
  swift_willThrow();
  return swift_bridgeObjectRelease();
}

uint64_t sub_259FC0E04(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, unsigned __int8 a9, uint64_t a10, void (*a11)(long long *), uint64_t a12)
{
  void (*v18)(void *__return_ptr, uint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v48[2];
  void v49[7];
  int v50;
  int v51;

  __n128 v51 = a8;
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v18 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18(v49, ObjectType, a2);
  if (v12)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = v51;
    unint64_t v20 = a6;
    uint64_t v42 = v49[1];
    uint64_t v43 = v49[0];
    uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48))(ObjectType, a2);
    unint64_t v50 = a9;
    __n128 v51 = v19 & 1;
    if ((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(ObjectType, a2))
    {
      uint64_t v41 = a1;
      BOOL v21 = a3[3];
      if (v21 >= a3[2]) {
        goto LABEL_36;
      }
      uint64_t v22 = a3[2];
      uint64_t v40 = a2;
      unint64_t v23 = *a3;
      char v24 = a3[1] - *a3;
      uint64_t v25 = *a3 + 1;
      unint64_t v26 = a7;
      while (1)
      {
        if (v23)
        {
          uint64_t v31 = v24;
          if (v21 >= v24) {
            goto LABEL_35;
          }
        }
        else
        {
          if ((v21 & 0x8000000000000000) == 0) {
            goto LABEL_35;
          }
          uint64_t v31 = 0;
        }
        unint64_t v32 = *(unsigned __int8 *)(v23 + v21);
        uint64_t v33 = v21 + 1;
        if (*(char *)(v23 + v21) < 0)
        {
          if (v33 >= v31) {
            goto LABEL_35;
          }
          v32 &= 0x7Fu;
          uint64_t v34 = 7;
          while (1)
          {
            BOOL v35 = v21 + 2;
            v32 |= (unint64_t)(*(unsigned char *)(v25 + v21) & 0x7F) << v34;
            if ((*(unsigned char *)(v25 + v21) & 0x80) == 0) {
              break;
            }
            if (v35 < v31)
            {
              ++v21;
              unint64_t v36 = v34 > 0x38;
              v34 += 7;
              if (!v36) {
                continue;
              }
            }
            goto LABEL_35;
          }
          a3[3] = v35;
          if (v32 > 0xFFFFFFFE)
          {
LABEL_35:
            sub_259FBA9FC();
            swift_allocError();
            *(void *)uint64_t v38 = 1;
            *(_OWORD *)(v38 + 8) = 0u;
            *(_OWORD *)(v38 + 24) = 0u;
            *(_OWORD *)(v38 + 40) = 0u;
            *(void *)(v38 + 56) = 0;
            *(unsigned char *)(v38 + 64) = 2;
            swift_willThrow();
            goto LABEL_36;
          }
        }
        else
        {
          a3[3] = v33;
        }
        if (v32 < 8 || (v32 & 6) == 6) {
          goto LABEL_35;
        }
        if (v44 == v32 >> 3)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_259FC11AC(v41, v40, v32, a3, a4, a5, v20, v26, v51, v50 & 1, a10, a11, a12);
        }
        else
        {
          sub_259FC4550(v32);
          unint64_t v26 = a7;
        }
        BOOL v21 = a3[3];
        if (v21 >= v22) {
          goto LABEL_36;
        }
      }
    }
    uint64_t v27 = sub_259FAE178(v44);
    if ((v27 & 0x100000000) != 0)
    {
LABEL_36:
      uint64_t v30 = v42;
      uint64_t v29 = v43;
    }
    else
    {
      v48[0] = v43;
      v48[1] = v42;
      uint64_t v28 = sub_259FAE500(v27);
      sub_259FAE514(v48, v28, (uint64_t)v49);
      sub_259FC3530((uint64_t)v49, a4, a5, a6, a7, v51, v50 & 1, a10, a11, a12);
      sub_259FAED74((uint64_t)v49);
      uint64_t v29 = v43;
      uint64_t v30 = v42;
    }
    sub_259FAD1BC(v29, v30);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_259FC11AC(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10, uint64_t a11, void (*a12)(long long *), uint64_t a13)
{
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 56))(v41, ObjectType, a2);
  if (v13) {
    goto LABEL_29;
  }
  uint64_t v42 = a13;
  char v38 = a9 & 1;
  unint64_t v20 = v41[0];
  unint64_t v21 = v41[1];
  uint64_t result = sub_259FAE500(a3);
  if (result != 2
    || v21 >> 62 == 1
    || v21 >> 62 == 2 && __PAIR128__((v20 >= 0xD) + v21 + 0x7FFFFFFFFFFFFFFFLL, v20 - 13) < 2)
  {
    unint64_t v39 = v20;
    unint64_t v40 = v21;
    char v23 = sub_259FAE500(a3);
    sub_259FAE514((uint64_t *)&v39, v23, (uint64_t)v41);
    sub_259FC3D14((uint64_t)v41, a5, a8, v38, a10 & 1, a11, a12, v42);
    sub_259FAED74((uint64_t)v41);
    uint64_t v24 = v20;
LABEL_27:
    uint64_t v32 = v21;
LABEL_28:
    sub_259FAD1BC(v24, v32);
LABEL_29:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v25 = *a4;
  if (*a4)
  {
    uint64_t v26 = a4[1] - v25;
    uint64_t v27 = a4[3];
    if (v27 >= v26) {
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v27 = a4[3];
    if ((v27 & 0x8000000000000000) == 0) {
      goto LABEL_26;
    }
    uint64_t v26 = 0;
  }
  LODWORD(v28) = *(unsigned __int8 *)(v25 + v27);
  uint64_t v29 = v27 + 1;
  if (*(char *)(v25 + v27) < 0)
  {
    if (v29 >= v26) {
      goto LABEL_26;
    }
    v28 &= 0x7Fu;
    uint64_t v33 = v25 + 1;
    unint64_t v34 = 7;
    while (1)
    {
      uint64_t v29 = v27 + 2;
      v28 |= (unint64_t)(*(unsigned char *)(v33 + v27) & 0x7F) << v34;
      if ((*(unsigned char *)(v33 + v27) & 0x80) == 0) {
        break;
      }
      if (v29 < v26)
      {
        ++v27;
        BOOL v35 = v34 > 0x38;
        v34 += 7;
        if (!v35) {
          continue;
        }
      }
      goto LABEL_26;
    }
  }
  a4[3] = v29;
  if ((v28 & 0x80000000) != 0)
  {
LABEL_26:
    sub_259FBA9FC();
    swift_allocError();
    *(void *)uint64_t v36 = 1;
    *(_OWORD *)(v36 + 8) = 0u;
    *(_OWORD *)(v36 + 24) = 0u;
    *(_OWORD *)(v36 + 40) = 0u;
    *(void *)(v36 + 56) = 0;
    *(unsigned char *)(v36 + 64) = 2;
    swift_willThrow();
    uint64_t v24 = v20;
    goto LABEL_27;
  }
  uint64_t v37 = v21;
  uint64_t v30 = v29 + v28;
  if (!__OFADD__(v29, v28))
  {
    for (; v29 < v30; uint64_t v29 = a4[3])
    {
      unint64_t v39 = v20;
      unint64_t v40 = v37;
      sub_259FF3780(&v39, (uint64_t)v41);
      sub_259FC3D14((uint64_t)v41, a5, a8, v38, a10 & 1, a11, a12, v42);
      sub_259FAED74((uint64_t)v41);
    }
    if (v29 != v30)
    {
      sub_259FBA9FC();
      swift_allocError();
      *(void *)uint64_t v31 = 1;
      *(_OWORD *)(v31 + 8) = 0u;
      *(_OWORD *)(v31 + 24) = 0u;
      *(_OWORD *)(v31 + 40) = 0u;
      *(void *)(v31 + 56) = 0;
      *(unsigned char *)(v31 + 64) = 2;
      swift_willThrow();
    }
    uint64_t v24 = v20;
    uint64_t v32 = v37;
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

uint64_t sub_259FC1518(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, char a9, uint64_t a10, void **a11)
{
  void (*v17)(void *__return_ptr, uint64_t, uint64_t);
  char v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v46[2];
  void v47[7];
  uint64_t v48;

  LODWORD(v48) = a8;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v17 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17(v47, ObjectType, a2);
  if (v11)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v19 = v48;
  uint64_t v42 = a3;
  unint64_t v39 = v47[1];
  unint64_t v40 = v47[0];
  uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48))(ObjectType, a2);
  unint64_t v20 = v19 & 1;
  if (((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(ObjectType, a2) & 1) == 0)
  {
    uint64_t v26 = sub_259FAE178(v41);
    if ((v26 & 0x100000000) != 0) {
      goto LABEL_34;
    }
    v46[0] = v40;
    v46[1] = v39;
    uint64_t v27 = sub_259FAE500(v26);
    sub_259FAE514(v46, v27, (uint64_t)v47);
    sub_259FC3564((uint64_t)v47, a4, a5, a6, a7, v20, a9 & 1, a10, a11);
    sub_259FAED74((uint64_t)v47);
    uint64_t v36 = v40;
    uint64_t v37 = v39;
LABEL_35:
    sub_259FAD1BC(v36, v37);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v48 = a1;
  unint64_t v21 = a3;
  uint64_t v22 = a3[3];
  if (v22 < a3[2])
  {
    char v23 = a3[2];
    uint64_t v24 = *a3;
    char v38 = a3[1] - *a3;
    uint64_t v25 = a5;
    while (1)
    {
      if (v24)
      {
        uint64_t v28 = v38;
        if (v22 >= v38) {
          goto LABEL_33;
        }
      }
      else
      {
        if ((v22 & 0x8000000000000000) == 0) {
          goto LABEL_33;
        }
        uint64_t v28 = 0;
      }
      uint64_t v29 = *(unsigned __int8 *)(v24 + v22);
      uint64_t v30 = v22 + 1;
      if (*(char *)(v24 + v22) < 0)
      {
        if (v30 >= v28) {
          goto LABEL_33;
        }
        v29 &= 0x7Fu;
        uint64_t v31 = 7;
        while (1)
        {
          uint64_t v32 = v22 + 2;
          v29 |= (unint64_t)(*(unsigned char *)(v24 + 1 + v22) & 0x7F) << v31;
          if ((*(unsigned char *)(v24 + 1 + v22) & 0x80) == 0) {
            break;
          }
          if (v32 < v28)
          {
            ++v22;
            uint64_t v33 = v31 > 0x38;
            v31 += 7;
            if (!v33) {
              continue;
            }
          }
          goto LABEL_33;
        }
        v21[3] = v32;
        if (v29 > 0xFFFFFFFE)
        {
LABEL_33:
          sub_259FBA9FC();
          swift_allocError();
          *(void *)BOOL v35 = 1;
          *(_OWORD *)(v35 + 8) = 0u;
          *(_OWORD *)(v35 + 24) = 0u;
          *(_OWORD *)(v35 + 40) = 0u;
          *(void *)(v35 + 56) = 0;
          *(unsigned char *)(v35 + 64) = 2;
          swift_willThrow();
LABEL_34:
          uint64_t v37 = v39;
          uint64_t v36 = v40;
          goto LABEL_35;
        }
      }
      else
      {
        v21[3] = v30;
      }
      if (v29 < 8 || (v29 & 6) == 6) {
        goto LABEL_33;
      }
      if (v41 == v29 >> 3)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_259FC1904(v48, a2, v29, v21, a4, v25, a6, a7, v20, a9 & 1, a10, a11);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_259FC4550(v29);
        uint64_t v25 = a5;
      }
      unint64_t v21 = v42;
      uint64_t v22 = v42[3];
      if (v22 >= v23) {
        goto LABEL_34;
      }
    }
  }
  sub_259FAD1BC(v40, v39);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_259FC1904(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10, uint64_t a11, void **a12)
{
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 56))(v37, ObjectType, a2);
  if (v12) {
    return swift_bridgeObjectRelease();
  }
  char v34 = a9 & 1;
  unint64_t v21 = v37[0];
  unint64_t v20 = v37[1];
  uint64_t result = sub_259FAE500(a3);
  if (result != 2
    || v20 >> 62 == 1
    || v20 >> 62 == 2 && __PAIR128__((v21 >= 0xD) + v20 + 0x7FFFFFFFFFFFFFFFLL, v21 - 13) < 2)
  {
    uint64_t v38 = a7;
    unint64_t v35 = v21;
    unint64_t v36 = v20;
    char v23 = sub_259FAE500(a3);
    sub_259FAE514((uint64_t *)&v35, v23, (uint64_t)v37);
    sub_259FC4178((uint64_t)v37, a5, a8, v34, a10 & 1, a11, a12);
    sub_259FAED74((uint64_t)v37);
    sub_259FAD1BC(v21, v20);
    return swift_bridgeObjectRelease();
  }
  uint64_t v24 = *a4;
  if (*a4)
  {
    uint64_t v25 = a4[1] - v24;
    uint64_t v26 = a4[3];
    if (v26 >= v25) {
      goto LABEL_28;
    }
  }
  else
  {
    uint64_t v26 = a4[3];
    if ((v26 & 0x8000000000000000) == 0) {
      goto LABEL_28;
    }
    uint64_t v25 = 0;
  }
  LODWORD(v27) = *(unsigned __int8 *)(v24 + v26);
  uint64_t v28 = v26 + 1;
  if (*(char *)(v24 + v26) < 0)
  {
    if (v28 >= v25) {
      goto LABEL_28;
    }
    v27 &= 0x7Fu;
    uint64_t v30 = v24 + 1;
    unint64_t v31 = 7;
    while (1)
    {
      uint64_t v28 = v26 + 2;
      v27 |= (unint64_t)(*(unsigned char *)(v30 + v26) & 0x7F) << v31;
      if ((*(unsigned char *)(v30 + v26) & 0x80) == 0) {
        break;
      }
      if (v28 < v25)
      {
        ++v26;
        BOOL v32 = v31 > 0x38;
        v31 += 7;
        if (!v32) {
          continue;
        }
      }
      goto LABEL_28;
    }
  }
  a4[3] = v28;
  if ((v27 & 0x80000000) != 0)
  {
LABEL_28:
    sub_259FBA9FC();
    swift_allocError();
    *(void *)uint64_t v33 = 1;
    *(_OWORD *)(v33 + 8) = 0u;
    *(_OWORD *)(v33 + 24) = 0u;
    *(_OWORD *)(v33 + 40) = 0u;
    *(void *)(v33 + 56) = 0;
    *(unsigned char *)(v33 + 64) = 2;
    swift_willThrow();
LABEL_29:
    sub_259FAD1BC(v21, v20);
    return swift_bridgeObjectRelease();
  }
  uint64_t v29 = v28 + v27;
  if (!__OFADD__(v28, v27))
  {
    if (v28 < v29)
    {
      uint64_t v38 = v21;
      do
      {
        unint64_t v35 = v38;
        unint64_t v36 = v20;
        sub_259FF3780(&v35, (uint64_t)v37);
        sub_259FC4178((uint64_t)v37, a5, a8, v34, a10 & 1, a11, a12);
        sub_259FAED74((uint64_t)v37);
        uint64_t v28 = a4[3];
      }
      while (v28 < v29);
      unint64_t v21 = v38;
    }
    if (v28 == v29) {
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

uint64_t sub_259FC1C18(uint64_t result, uint64_t *a2, void **a3, uint64_t *a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v8 = a2[2];
  uint64_t v7 = a2[3];
  if (v7 < v8)
  {
    uint64_t v10 = result;
    uint64_t v11 = *a2;
    uint64_t v38 = a2[1] - *a2;
    uint64_t v12 = *a2 + 1;
    do
    {
      if (v11)
      {
        uint64_t v13 = v38;
        if (v7 >= v38) {
          goto LABEL_65;
        }
      }
      else
      {
        if ((v7 & 0x8000000000000000) == 0) {
          goto LABEL_65;
        }
        uint64_t v13 = 0;
      }
      unint64_t v14 = *(unsigned __int8 *)(v11 + v7);
      uint64_t v15 = v7 + 1;
      if (*(char *)(v11 + v7) < 0)
      {
        if (v15 >= v13) {
          goto LABEL_65;
        }
        v14 &= 0x7Fu;
        unint64_t v16 = 7;
        while (1)
        {
          uint64_t v15 = v7 + 2;
          v14 |= (unint64_t)(*(unsigned char *)(v12 + v7) & 0x7F) << v16;
          if ((*(unsigned char *)(v12 + v7) & 0x80) == 0) {
            break;
          }
          if (v15 < v13)
          {
            ++v7;
            BOOL v17 = v16 >= 0x39;
            v16 += 7;
            if (!v17) {
              continue;
            }
          }
          goto LABEL_65;
        }
        a2[3] = v15;
        if (v14 >= 0xFFFFFFFF)
        {
LABEL_65:
          sub_259FBA9FC();
          swift_allocError();
          *(void *)uint64_t v34 = 1;
          *(_OWORD *)(v34 + 8) = 0u;
          *(_OWORD *)(v34 + 24) = 0u;
          *(_OWORD *)(v34 + 40) = 0u;
          *(void *)(v34 + 56) = 0;
          *(unsigned char *)(v34 + 64) = 2;
          return swift_willThrow();
        }
      }
      else
      {
        a2[3] = v15;
      }
      BOOL v17 = v14 < 8 || (v14 & 7) >= 6;
      if (v17) {
        goto LABEL_65;
      }
      if (*(void *)(v10 + 16) && (v18 = v10, uint64_t result = sub_259FE1284(v14 >> 3), v10 = v18, (v19 & 1) != 0))
      {
        unint64_t v20 = (uint64_t *)(*(void *)(v18 + 56) + 16 * result);
        uint64_t v22 = *v20;
        unint64_t v21 = v20[1];
        uint64_t v23 = swift_unknownObjectRetain_n();
        sub_259FBBE2C(v23, v21, v14, a2, v22, v21, a3, a4, a5);
        uint64_t result = swift_unknownObjectRelease();
        if (v6) {
          return result;
        }
        uint64_t v10 = v18;
      }
      else
      {
        switch(v14 & 7)
        {
          case 0uLL:
            if (v11)
            {
              uint64_t v24 = v38;
              if (v15 >= v38) {
                goto LABEL_65;
              }
            }
            else
            {
              if ((v15 & 0x8000000000000000) == 0) {
                goto LABEL_65;
              }
              uint64_t v24 = 0;
            }
            uint64_t v25 = v15 + 1;
            if ((*(char *)(v11 + v15) & 0x80000000) == 0) {
              goto LABEL_56;
            }
            if (v25 >= v24) {
              goto LABEL_65;
            }
            unint64_t v28 = 7;
            while (1)
            {
              uint64_t v25 = v15 + 2;
              if ((*(char *)(v12 + v15) & 0x80000000) == 0) {
                goto LABEL_56;
              }
              if (v25 < v24)
              {
                ++v15;
                BOOL v17 = v28 >= 0x39;
                v28 += 7;
                if (!v17) {
                  continue;
                }
              }
              goto LABEL_65;
            }
          case 1uLL:
            uint64_t v25 = v15 + 8;
            if (!__OFADD__(v15, 8)) {
              goto LABEL_56;
            }
            goto LABEL_68;
          case 2uLL:
            if (v11)
            {
              uint64_t v26 = v38;
              if (v15 >= v38) {
                goto LABEL_65;
              }
            }
            else
            {
              if ((v15 & 0x8000000000000000) == 0) {
                goto LABEL_65;
              }
              uint64_t v26 = 0;
            }
            LODWORD(v29) = *(unsigned __int8 *)(v11 + v15);
            uint64_t v30 = v15 + 1;
            if ((*(char *)(v11 + v15) & 0x80000000) == 0) {
              goto LABEL_54;
            }
            if (v30 >= v26) {
              goto LABEL_65;
            }
            v29 &= 0x7Fu;
            unint64_t v32 = 7;
            while (1)
            {
              uint64_t v30 = v15 + 2;
              v29 |= (unint64_t)(*(unsigned char *)(v12 + v15) & 0x7F) << v32;
              if ((*(unsigned char *)(v12 + v15) & 0x80) == 0) {
                break;
              }
              if (v30 < v26)
              {
                ++v15;
                BOOL v33 = v32 > 0x38;
                v32 += 7;
                if (!v33) {
                  continue;
                }
              }
              goto LABEL_65;
            }
LABEL_54:
            a2[3] = v30;
            if ((v29 & 0x80000000) != 0) {
              goto LABEL_65;
            }
            BOOL v31 = __OFADD__(v30, v29);
            uint64_t v25 = v30 + v29;
            if (v31)
            {
LABEL_70:
              __break(1u);
              JUMPOUT(0x259FC1F6CLL);
            }
LABEL_56:
            a2[3] = v25;
            break;
          case 3uLL:
            uint64_t v27 = v10;
            uint64_t result = sub_259FC481C(v14 >> 3);
            if (v6) {
              return result;
            }
            uint64_t v10 = v27;
            break;
          case 4uLL:
            goto LABEL_65;
          case 5uLL:
            uint64_t v25 = v15 + 4;
            if (!__OFADD__(v15, 4)) {
              goto LABEL_56;
            }
            goto LABEL_69;
          default:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
            goto LABEL_70;
        }
      }
      uint64_t v7 = a2[3];
    }
    while (v7 < v8);
  }
  return result;
}

uint64_t sub_259FC1F84(uint64_t a1)
{
  return a1;
}

uint64_t sub_259FC1FD8(uint64_t result, uint64_t *a2, void (*a3)(__n128 *), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v7 = a2[2];
  uint64_t v6 = a2[3];
  if (v6 < v7)
  {
    uint64_t v9 = result;
    uint64_t v10 = *a2;
    uint64_t v36 = a2[1] - *a2;
    uint64_t v11 = *a2 + 1;
    do
    {
      if (v10)
      {
        uint64_t v12 = v36;
        if (v6 >= v36) {
          goto LABEL_65;
        }
      }
      else
      {
        if ((v6 & 0x8000000000000000) == 0) {
          goto LABEL_65;
        }
        uint64_t v12 = 0;
      }
      unint64_t v13 = *(unsigned __int8 *)(v10 + v6);
      uint64_t v14 = v6 + 1;
      if (*(char *)(v10 + v6) < 0)
      {
        if (v14 >= v12) {
          goto LABEL_65;
        }
        v13 &= 0x7Fu;
        unint64_t v15 = 7;
        while (1)
        {
          uint64_t v14 = v6 + 2;
          v13 |= (unint64_t)(*(unsigned char *)(v11 + v6) & 0x7F) << v15;
          if ((*(unsigned char *)(v11 + v6) & 0x80) == 0) {
            break;
          }
          if (v14 < v12)
          {
            ++v6;
            BOOL v16 = v15 >= 0x39;
            v15 += 7;
            if (!v16) {
              continue;
            }
          }
          goto LABEL_65;
        }
        a2[3] = v14;
        if (v13 >= 0xFFFFFFFF)
        {
LABEL_65:
          sub_259FBA9FC();
          swift_allocError();
          *(void *)uint64_t v33 = 1;
          *(_OWORD *)(v33 + 8) = 0u;
          *(_OWORD *)(v33 + 24) = 0u;
          *(_OWORD *)(v33 + 40) = 0u;
          *(void *)(v33 + 56) = 0;
          *(unsigned char *)(v33 + 64) = 2;
          return swift_willThrow();
        }
      }
      else
      {
        a2[3] = v14;
      }
      BOOL v16 = v13 < 8 || (v13 & 7) >= 6;
      if (v16) {
        goto LABEL_65;
      }
      if (*(void *)(v9 + 16) && (v17 = v9, uint64_t result = sub_259FE1284(v13 >> 3), v9 = v17, (v18 & 1) != 0))
      {
        char v19 = (uint64_t *)(*(void *)(v17 + 56) + 16 * result);
        uint64_t v21 = *v19;
        unint64_t v20 = v19[1];
        uint64_t v22 = swift_unknownObjectRetain_n();
        sub_259FBF7B4(v22, v20, v13, a2, v21, v20, a3, a4);
        uint64_t result = swift_unknownObjectRelease();
        if (v5) {
          return result;
        }
        uint64_t v9 = v17;
      }
      else
      {
        switch(v13 & 7)
        {
          case 0uLL:
            if (v10)
            {
              uint64_t v23 = v36;
              if (v14 >= v36) {
                goto LABEL_65;
              }
            }
            else
            {
              if ((v14 & 0x8000000000000000) == 0) {
                goto LABEL_65;
              }
              uint64_t v23 = 0;
            }
            uint64_t v24 = v14 + 1;
            if ((*(char *)(v10 + v14) & 0x80000000) == 0) {
              goto LABEL_56;
            }
            if (v24 >= v23) {
              goto LABEL_65;
            }
            unint64_t v27 = 7;
            while (1)
            {
              uint64_t v24 = v14 + 2;
              if ((*(char *)(v11 + v14) & 0x80000000) == 0) {
                goto LABEL_56;
              }
              if (v24 < v23)
              {
                ++v14;
                BOOL v16 = v27 >= 0x39;
                v27 += 7;
                if (!v16) {
                  continue;
                }
              }
              goto LABEL_65;
            }
          case 1uLL:
            uint64_t v24 = v14 + 8;
            if (!__OFADD__(v14, 8)) {
              goto LABEL_56;
            }
            goto LABEL_68;
          case 2uLL:
            if (v10)
            {
              uint64_t v25 = v36;
              if (v14 >= v36) {
                goto LABEL_65;
              }
            }
            else
            {
              if ((v14 & 0x8000000000000000) == 0) {
                goto LABEL_65;
              }
              uint64_t v25 = 0;
            }
            LODWORD(v28) = *(unsigned __int8 *)(v10 + v14);
            uint64_t v29 = v14 + 1;
            if ((*(char *)(v10 + v14) & 0x80000000) == 0) {
              goto LABEL_54;
            }
            if (v29 >= v25) {
              goto LABEL_65;
            }
            v28 &= 0x7Fu;
            unint64_t v31 = 7;
            while (1)
            {
              uint64_t v29 = v14 + 2;
              v28 |= (unint64_t)(*(unsigned char *)(v11 + v14) & 0x7F) << v31;
              if ((*(unsigned char *)(v11 + v14) & 0x80) == 0) {
                break;
              }
              if (v29 < v25)
              {
                ++v14;
                BOOL v32 = v31 > 0x38;
                v31 += 7;
                if (!v32) {
                  continue;
                }
              }
              goto LABEL_65;
            }
LABEL_54:
            a2[3] = v29;
            if ((v28 & 0x80000000) != 0) {
              goto LABEL_65;
            }
            BOOL v30 = __OFADD__(v29, v28);
            uint64_t v24 = v29 + v28;
            if (v30)
            {
LABEL_70:
              __break(1u);
              JUMPOUT(0x259FC2324);
            }
LABEL_56:
            a2[3] = v24;
            break;
          case 3uLL:
            uint64_t v26 = v9;
            uint64_t result = sub_259FC481C(v13 >> 3);
            if (v5) {
              return result;
            }
            uint64_t v9 = v26;
            break;
          case 4uLL:
            goto LABEL_65;
          case 5uLL:
            uint64_t v24 = v14 + 4;
            if (!__OFADD__(v14, 4)) {
              goto LABEL_56;
            }
            goto LABEL_69;
          default:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
            goto LABEL_70;
        }
      }
      uint64_t v6 = a2[3];
    }
    while (v6 < v7);
  }
  return result;
}

uint64_t sub_259FC233C(uint64_t result, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v7 = a2[2];
  uint64_t v6 = a2[3];
  if (v6 < v7)
  {
    uint64_t v9 = result;
    uint64_t v10 = *a2;
    uint64_t v36 = a2[1] - *a2;
    uint64_t v11 = *a2 + 1;
    do
    {
      if (v10)
      {
        uint64_t v12 = v36;
        if (v6 >= v36) {
          goto LABEL_65;
        }
      }
      else
      {
        if ((v6 & 0x8000000000000000) == 0) {
          goto LABEL_65;
        }
        uint64_t v12 = 0;
      }
      unint64_t v13 = *(unsigned __int8 *)(v10 + v6);
      uint64_t v14 = v6 + 1;
      if (*(char *)(v10 + v6) < 0)
      {
        if (v14 >= v12) {
          goto LABEL_65;
        }
        v13 &= 0x7Fu;
        unint64_t v15 = 7;
        while (1)
        {
          uint64_t v14 = v6 + 2;
          v13 |= (unint64_t)(*(unsigned char *)(v11 + v6) & 0x7F) << v15;
          if ((*(unsigned char *)(v11 + v6) & 0x80) == 0) {
            break;
          }
          if (v14 < v12)
          {
            ++v6;
            BOOL v16 = v15 >= 0x39;
            v15 += 7;
            if (!v16) {
              continue;
            }
          }
          goto LABEL_65;
        }
        a2[3] = v14;
        if (v13 >= 0xFFFFFFFF)
        {
LABEL_65:
          sub_259FBA9FC();
          swift_allocError();
          *(void *)uint64_t v33 = 1;
          *(_OWORD *)(v33 + 8) = 0u;
          *(_OWORD *)(v33 + 24) = 0u;
          *(_OWORD *)(v33 + 40) = 0u;
          *(void *)(v33 + 56) = 0;
          *(unsigned char *)(v33 + 64) = 2;
          return swift_willThrow();
        }
      }
      else
      {
        a2[3] = v14;
      }
      BOOL v16 = v13 < 8 || (v13 & 7) >= 6;
      if (v16) {
        goto LABEL_65;
      }
      if (*(void *)(v9 + 16) && (v17 = v9, uint64_t result = sub_259FE1284(v13 >> 3), v9 = v17, (v18 & 1) != 0))
      {
        char v19 = (uint64_t *)(*(void *)(v17 + 56) + 16 * result);
        uint64_t v21 = *v19;
        unint64_t v20 = v19[1];
        uint64_t v22 = swift_unknownObjectRetain_n();
        sub_259FBBAB4(v22, v20, v13, a2, v21, v20, a3, a4);
        uint64_t result = swift_unknownObjectRelease();
        if (v5) {
          return result;
        }
        uint64_t v9 = v17;
      }
      else
      {
        switch(v13 & 7)
        {
          case 0uLL:
            if (v10)
            {
              uint64_t v23 = v36;
              if (v14 >= v36) {
                goto LABEL_65;
              }
            }
            else
            {
              if ((v14 & 0x8000000000000000) == 0) {
                goto LABEL_65;
              }
              uint64_t v23 = 0;
            }
            uint64_t v24 = v14 + 1;
            if ((*(char *)(v10 + v14) & 0x80000000) == 0) {
              goto LABEL_56;
            }
            if (v24 >= v23) {
              goto LABEL_65;
            }
            unint64_t v27 = 7;
            while (1)
            {
              uint64_t v24 = v14 + 2;
              if ((*(char *)(v11 + v14) & 0x80000000) == 0) {
                goto LABEL_56;
              }
              if (v24 < v23)
              {
                ++v14;
                BOOL v16 = v27 >= 0x39;
                v27 += 7;
                if (!v16) {
                  continue;
                }
              }
              goto LABEL_65;
            }
          case 1uLL:
            uint64_t v24 = v14 + 8;
            if (!__OFADD__(v14, 8)) {
              goto LABEL_56;
            }
            goto LABEL_68;
          case 2uLL:
            if (v10)
            {
              uint64_t v25 = v36;
              if (v14 >= v36) {
                goto LABEL_65;
              }
            }
            else
            {
              if ((v14 & 0x8000000000000000) == 0) {
                goto LABEL_65;
              }
              uint64_t v25 = 0;
            }
            LODWORD(v28) = *(unsigned __int8 *)(v10 + v14);
            uint64_t v29 = v14 + 1;
            if ((*(char *)(v10 + v14) & 0x80000000) == 0) {
              goto LABEL_54;
            }
            if (v29 >= v25) {
              goto LABEL_65;
            }
            v28 &= 0x7Fu;
            unint64_t v31 = 7;
            while (1)
            {
              uint64_t v29 = v14 + 2;
              v28 |= (unint64_t)(*(unsigned char *)(v11 + v14) & 0x7F) << v31;
              if ((*(unsigned char *)(v11 + v14) & 0x80) == 0) {
                break;
              }
              if (v29 < v25)
              {
                ++v14;
                BOOL v32 = v31 > 0x38;
                v31 += 7;
                if (!v32) {
                  continue;
                }
              }
              goto LABEL_65;
            }
LABEL_54:
            a2[3] = v29;
            if ((v28 & 0x80000000) != 0) {
              goto LABEL_65;
            }
            BOOL v30 = __OFADD__(v29, v28);
            uint64_t v24 = v29 + v28;
            if (v30)
            {
LABEL_70:
              __break(1u);
              JUMPOUT(0x259FC2688);
            }
LABEL_56:
            a2[3] = v24;
            break;
          case 3uLL:
            uint64_t v26 = v9;
            uint64_t result = sub_259FC481C(v13 >> 3);
            if (v5) {
              return result;
            }
            uint64_t v9 = v26;
            break;
          case 4uLL:
            goto LABEL_65;
          case 5uLL:
            uint64_t v24 = v14 + 4;
            if (!__OFADD__(v14, 4)) {
              goto LABEL_56;
            }
            goto LABEL_69;
          default:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
            goto LABEL_70;
        }
      }
      uint64_t v6 = a2[3];
    }
    while (v6 < v7);
  }
  return result;
}

uint64_t sub_259FC26A0(uint64_t result, void (*a2)(unint64_t *), uint64_t a3)
{
  uint64_t v5 = v4;
  uint64_t v7 = v3[2];
  uint64_t v6 = v3[3];
  if (v6 < v7)
  {
    uint64_t v8 = v3;
    uint64_t v9 = result;
    uint64_t v10 = *v3;
    uint64_t v36 = v3[1] - *v3;
    uint64_t v11 = *v3 + 1;
    do
    {
      if (v10)
      {
        uint64_t v12 = v36;
        if (v6 >= v36) {
          goto LABEL_65;
        }
      }
      else
      {
        if ((v6 & 0x8000000000000000) == 0) {
          goto LABEL_65;
        }
        uint64_t v12 = 0;
      }
      unint64_t v13 = *(unsigned __int8 *)(v10 + v6);
      uint64_t v14 = v6 + 1;
      if (*(char *)(v10 + v6) < 0)
      {
        if (v14 >= v12) {
          goto LABEL_65;
        }
        v13 &= 0x7Fu;
        unint64_t v15 = 7;
        while (1)
        {
          uint64_t v14 = v6 + 2;
          v13 |= (unint64_t)(*(unsigned char *)(v11 + v6) & 0x7F) << v15;
          if ((*(unsigned char *)(v11 + v6) & 0x80) == 0) {
            break;
          }
          if (v14 < v12)
          {
            ++v6;
            BOOL v16 = v15 >= 0x39;
            v15 += 7;
            if (!v16) {
              continue;
            }
          }
          goto LABEL_65;
        }
        v8[3] = v14;
        if (v13 >= 0xFFFFFFFF)
        {
LABEL_65:
          sub_259FBA9FC();
          swift_allocError();
          *(void *)uint64_t v33 = 1;
          *(_OWORD *)(v33 + 8) = 0u;
          *(_OWORD *)(v33 + 24) = 0u;
          *(_OWORD *)(v33 + 40) = 0u;
          *(void *)(v33 + 56) = 0;
          *(unsigned char *)(v33 + 64) = 2;
          return swift_willThrow();
        }
      }
      else
      {
        v8[3] = v14;
      }
      BOOL v16 = v13 < 8 || (v13 & 7) >= 6;
      if (v16) {
        goto LABEL_65;
      }
      if (*(void *)(v9 + 16) && (v17 = v9, uint64_t result = sub_259FE1284(v13 >> 3), v9 = v17, (v18 & 1) != 0))
      {
        char v19 = (uint64_t *)(*(void *)(v17 + 56) + 16 * result);
        uint64_t v21 = *v19;
        unint64_t v20 = v19[1];
        uint64_t v22 = swift_unknownObjectRetain_n();
        sub_259FBCDE8(v22, v20, v13, v8, a2, a3, v21, v20);
        uint64_t result = swift_unknownObjectRelease();
        if (v5) {
          return result;
        }
        uint64_t v9 = v17;
      }
      else
      {
        switch(v13 & 7)
        {
          case 0uLL:
            if (v10)
            {
              uint64_t v23 = v36;
              if (v14 >= v36) {
                goto LABEL_65;
              }
            }
            else
            {
              if ((v14 & 0x8000000000000000) == 0) {
                goto LABEL_65;
              }
              uint64_t v23 = 0;
            }
            uint64_t v24 = v14 + 1;
            if ((*(char *)(v10 + v14) & 0x80000000) == 0) {
              goto LABEL_56;
            }
            if (v24 >= v23) {
              goto LABEL_65;
            }
            unint64_t v27 = 7;
            while (1)
            {
              uint64_t v24 = v14 + 2;
              if ((*(char *)(v11 + v14) & 0x80000000) == 0) {
                goto LABEL_56;
              }
              if (v24 < v23)
              {
                ++v14;
                BOOL v16 = v27 >= 0x39;
                v27 += 7;
                if (!v16) {
                  continue;
                }
              }
              goto LABEL_65;
            }
          case 1uLL:
            uint64_t v24 = v14 + 8;
            if (!__OFADD__(v14, 8)) {
              goto LABEL_56;
            }
            goto LABEL_68;
          case 2uLL:
            if (v10)
            {
              uint64_t v25 = v36;
              if (v14 >= v36) {
                goto LABEL_65;
              }
            }
            else
            {
              if ((v14 & 0x8000000000000000) == 0) {
                goto LABEL_65;
              }
              uint64_t v25 = 0;
            }
            LODWORD(v28) = *(unsigned __int8 *)(v10 + v14);
            uint64_t v29 = v14 + 1;
            if ((*(char *)(v10 + v14) & 0x80000000) == 0) {
              goto LABEL_54;
            }
            if (v29 >= v25) {
              goto LABEL_65;
            }
            v28 &= 0x7Fu;
            unint64_t v31 = 7;
            while (1)
            {
              uint64_t v29 = v14 + 2;
              v28 |= (unint64_t)(*(unsigned char *)(v11 + v14) & 0x7F) << v31;
              if ((*(unsigned char *)(v11 + v14) & 0x80) == 0) {
                break;
              }
              if (v29 < v25)
              {
                ++v14;
                BOOL v32 = v31 > 0x38;
                v31 += 7;
                if (!v32) {
                  continue;
                }
              }
              goto LABEL_65;
            }
LABEL_54:
            v8[3] = v29;
            if ((v28 & 0x80000000) != 0) {
              goto LABEL_65;
            }
            BOOL v30 = __OFADD__(v29, v28);
            uint64_t v24 = v29 + v28;
            if (v30)
            {
LABEL_70:
              __break(1u);
              JUMPOUT(0x259FC29ECLL);
            }
LABEL_56:
            v8[3] = v24;
            break;
          case 3uLL:
            uint64_t v26 = v9;
            uint64_t result = sub_259FC481C(v13 >> 3);
            if (v5) {
              return result;
            }
            uint64_t v9 = v26;
            break;
          case 4uLL:
            goto LABEL_65;
          case 5uLL:
            uint64_t v24 = v14 + 4;
            if (!__OFADD__(v14, 4)) {
              goto LABEL_56;
            }
            goto LABEL_69;
          default:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
            goto LABEL_70;
        }
      }
      uint64_t v6 = v8[3];
    }
    while (v6 < v7);
  }
  return result;
}

uint64_t sub_259FC2A04(uint64_t result, void (*a2)(void))
{
  void (*v22)(long long *__return_ptr, uint64_t, void);
  long long v23;
  uint64_t v24;
  void (*v25)(void);
  long long v26;
  long long v27;
  unsigned char v28[48];
  long long v29;
  uint64_t v30;
  uint64_t v31;

  uint64_t v4 = *(void *)(result + 16);
  uint64_t v5 = v2[3];
  if (v5 < v2[2] && v4 != 0)
  {
    uint64_t v8 = result;
    unint64_t v31 = 0;
    do
    {
      uint64_t v9 = *v2;
      if (*v2)
      {
        uint64_t v10 = v2[1] - v9;
        if (v5 >= v10) {
          goto LABEL_45;
        }
      }
      else
      {
        if ((v5 & 0x8000000000000000) == 0) {
          goto LABEL_45;
        }
        uint64_t v10 = 0;
      }
      unint64_t v11 = *(unsigned __int8 *)(v9 + v5);
      uint64_t v12 = v5 + 1;
      if (*(char *)(v9 + v5) < 0)
      {
        if (v12 >= v10) {
          goto LABEL_45;
        }
        v11 &= 0x7Fu;
        uint64_t v13 = v9 + 1;
        unint64_t v14 = 7;
        while (1)
        {
          uint64_t v15 = v5 + 2;
          v11 |= (unint64_t)(*(unsigned char *)(v13 + v5) & 0x7F) << v14;
          if ((*(unsigned char *)(v13 + v5) & 0x80) == 0) {
            break;
          }
          if (v15 < v10)
          {
            ++v5;
            BOOL v17 = v14 >= 0x39;
            v14 += 7;
            if (!v17) {
              continue;
            }
          }
          goto LABEL_45;
        }
        v2[3] = v15;
        if (v11 >= 0xFFFFFFFF)
        {
LABEL_45:
          sub_259FBA9FC();
          swift_allocError();
          *(void *)uint64_t v24 = 1;
          *(_OWORD *)(v24 + 8) = 0u;
          *(_OWORD *)(v24 + 24) = 0u;
          *(_OWORD *)(v24 + 40) = 0u;
          *(void *)(v24 + 56) = 0;
          *(unsigned char *)(v24 + 64) = 2;
          return swift_willThrow();
        }
      }
      else
      {
        v2[3] = v12;
      }
      unsigned int v16 = v11 & 7;
      BOOL v17 = v11 < 8 || v16 >= 6;
      if (v17) {
        goto LABEL_45;
      }
      if (*(void *)(v8 + 16) && (unint64_t v18 = sub_259FE1284(v11 >> 3), (v19 & 1) != 0))
      {
        if (__OFADD__(v31++, 1))
        {
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
          JUMPOUT(0x259FC2D9CLL);
        }
        uint64_t v25 = a2;
        uint64_t v26 = *(_OWORD *)(*(void *)(v8 + 56) + 16 * v18);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v22 = *(void (**)(long long *__return_ptr, uint64_t, void))(*((void *)&v26 + 1) + 56);
        swift_unknownObjectRetain();
        v22(&v29, ObjectType, *((void *)&v26 + 1));
        if (v3) {
          return swift_unknownObjectRelease();
        }
        uint64_t v23 = v29;
        switch(v16)
        {
          case 0u:
            LOBYTE(v16) = 0;
            *(void *)&unint64_t v27 = v29;
            a2 = v25;
            goto LABEL_39;
          case 1u:
          case 3u:
          case 4u:
          case 5u:
            unint64_t v27 = v29;
            a2 = v25;
            if (v16 - 1 >= 5) {
              goto LABEL_50;
            }
            goto LABEL_40;
          case 2u:
            a2 = v25;
            if (*((void *)&v29 + 1) >> 62 == 1
              || *((void *)&v29 + 1) >> 62 == 2
              && __PAIR128__((unint64_t)((unint64_t)v29 >= 0xD) + *((void *)&v29 + 1) + 0x7FFFFFFFFFFFFFFFLL, (uint64_t)v29 - 13) < 2)
            {
              *(void *)&unint64_t v27 = v29;
              LOBYTE(v16) = 2;
LABEL_39:
              *((void *)&v27 + 1) = *((void *)&v29 + 1);
LABEL_40:
              sub_259FAE514((uint64_t *)&v27, v16, (uint64_t)v28);
              uint64_t v29 = v26;
              sub_259FC2DB4((uint64_t)v28, (uint64_t)&v30);
              swift_unknownObjectRetain();
              a2(&v29);
              sub_259FC1F84((uint64_t)&v29);
              sub_259FAD1BC(v23, *((uint64_t *)&v23 + 1));
              uint64_t result = swift_unknownObjectRelease();
            }
            else
            {
              sub_259FAD1BC(v29, *((uint64_t *)&v29 + 1));
              uint64_t result = swift_unknownObjectRelease();
            }
            break;
          default:
            goto LABEL_49;
        }
      }
      else
      {
        uint64_t result = sub_259FC4550(v11);
        if (v3) {
          return result;
        }
      }
      uint64_t v5 = v2[3];
    }
    while (v5 < v2[2] && v31 < v4);
  }
  return result;
}

uint64_t sub_259FC2DB4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_259FC2E10@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v6 = *v2;
  uint64_t v7 = v2[1];
  uint64_t v9 = v2[2];
  unint64_t v8 = v2[3];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(a1 + 24))(0xD000000000000024, 0x800000025A00F570, ObjectType, a1);
  if (!v3)
  {
    *(void *)&long long v19 = result;
    *((void *)&v19 + 1) = v12;
    uint64_t v20 = sub_25A00E950();
    swift_bridgeObjectRetain();
    SchematizedDataComposer.subscript.setter(v6, v7, 1701667182, 0xE400000000000000);
    if (v8 >> 60 == 15)
    {
      sub_259FFB0CC(0x736E6F6974706FLL, 0xE700000000000000, (uint64_t)&v15);
      sub_259FB66F8(v15, *((unint64_t *)&v15 + 1), v16, v17, v18);
      uint64_t v13 = v20;
    }
    else
    {
      v21[0] = v9;
      v21[1] = v8;
      v21[2] = 0;
      v21[3] = 0;
      __int16 v22 = 2304;
      sub_259FAE450(v9, v8);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_259FFB7FC((uint64_t)v21, 0x736E6F6974706FLL, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
      uint64_t v13 = v20;
      swift_bridgeObjectRelease();
    }
    long long v15 = v19;
    uint64_t v16 = v13;
    SchematizedDataComposer.compose()(a2);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t UnsafeSchematizedData.data.getter()
{
  uint64_t v8 = MEMORY[0x263F8D3E8];
  uint64_t v9 = MEMORY[0x263F07B80];
  long long v7 = *(_OWORD *)(v0 + 16);
  uint64_t v1 = __swift_project_boxed_opaque_existential_1(&v7, MEMORY[0x263F8D3E8]);
  uint64_t v2 = (unsigned char *)*v1;
  if (*v1 && (uint64_t v3 = (unsigned char *)v1[1], v4 = v3 - v2, v3 != v2))
  {
    if (v4 <= 14)
    {
      uint64_t v5 = sub_259FC3B50(v2, v3);
    }
    else if ((unint64_t)v4 >= 0x7FFFFFFF)
    {
      uint64_t v5 = sub_259FC3C98((uint64_t)v2, (uint64_t)v3);
    }
    else
    {
      uint64_t v5 = sub_259FC3C14((uint64_t)v2, (uint64_t)v3);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
  return v5;
}

uint64_t UnsafeSchematizedData.messageSchema.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t UnsafeSchematizedData.unsafeData.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t UnsafeSchematizedData.value(forFieldPath:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = v3[1];
  uint64_t v9 = v3[2];
  uint64_t v10 = v3[3];
  uint64_t v11 = v10 - v9;
  if (!v9) {
    uint64_t v11 = 0;
  }
  uint64_t v23 = v3[2];
  uint64_t v24 = v10;
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  uint64_t v25 = v11;
  char v28 = 1;
  swift_getObjectType();
  MessageSchemaDescribing.asPublic()(v8, &v16);
  v19[0] = v16;
  v19[1] = v17 | 0x4000000000000000;
  swift_bridgeObjectRetain();
  uint64_t result = sub_259FD5F4C(a1, a2, v19, &v20);
  if (!v4)
  {
    uint64_t v13 = v21;
    uint64_t v14 = v22;
    if (*(void *)(v20 + 16))
    {
      uint64_t v16 = v20;
      uint64_t v17 = v21;
      uint64_t v18 = v22;
      sub_259FDE504(&v16, 0, a3);
    }
    else
    {
      sub_259FB3304();
      swift_allocError();
      *(void *)uint64_t v15 = 0xD000000000000011;
      *(void *)(v15 + 8) = 0x800000025A00F9A0;
      *(unsigned char *)(v15 + 16) = 5;
      swift_willThrow();
    }
    swift_bridgeObjectRelease();
    return sub_259FAD1BC(v13, v14);
  }
  return result;
}

void *sub_259FC322C(void *result, uint64_t a2, void (*a3)(long long *), uint64_t a4)
{
  if (*(void *)(a2 + 16))
  {
    uint64_t v16 = *(void *)(a2 + 16);
    uint64_t v6 = result[1];
    uint64_t v17 = result[3];
    uint64_t v18 = result[2];
    uint64_t v8 = *(void *)(a2 + 32);
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v20 = *(void *)(a2 + 48);
    int v19 = *(unsigned __int8 *)(a2 + 56);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    uint64_t v11 = v10(v8, v7, ObjectType, v6);
    if (v4)
    {
      return (void *)swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = v11;
      uint64_t v14 = v12;
      uint64_t v25 = 0;
      uint64_t v15 = v17 - v18;
      if (!v18) {
        uint64_t v15 = 0;
      }
      v23[0] = v18;
      v23[1] = v17;
      v23[3] = 0;
      v23[4] = 0;
      _OWORD v23[2] = v15;
      char v24 = 1;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_259FC0E04(v13, v14, v23, &v25, v8, v7, v20, v19, v16 == 1, a2, a3, a4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return (void *)swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_259FC33B4(void *result, uint64_t a2, void **a3)
{
  if (*(void *)(a2 + 16))
  {
    uint64_t v15 = *(void *)(a2 + 16);
    uint64_t v5 = result[1];
    uint64_t v16 = result[3];
    uint64_t v17 = result[2];
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v6 = *(void *)(a2 + 40);
    uint64_t v19 = *(void *)(a2 + 48);
    int v18 = *(unsigned __int8 *)(a2 + 56);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain();
    uint64_t v10 = v9(v7, v6, ObjectType, v5);
    if (v3)
    {
      return (void *)swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v12 = v10;
      uint64_t v13 = v11;
      uint64_t v23 = 0;
      uint64_t v14 = v16 - v17;
      if (!v17) {
        uint64_t v14 = 0;
      }
      v21[0] = v17;
      v21[1] = v16;
      v21[3] = 0;
      void v21[4] = 0;
      v21[2] = v14;
      char v22 = 1;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_259FC1518(v12, v13, v21, &v23, v7, v6, v19, v18, v15 == 1, a2, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return (void *)swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_259FC3530(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, uint64_t a8, void (*a9)(long long *), uint64_t a10)
{
  return sub_259FC3D14(a1, a2, a5, a6 & 1, a7, a8, a9, a10);
}

uint64_t sub_259FC3564(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, uint64_t a8, void **a9)
{
  return sub_259FC4178(a1, a2, a5, a6 & 1, a7, a8, a9);
}

uint64_t UnsafeSchematizedData.forEachValue(_:)(void (*a1)(unint64_t *), uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 40))(ObjectType, v6);
  if (!v3)
  {
    sub_259FC26A0(result, a1, a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t UnsafeSchematizedData.forEachScalarValue(_:_:)(uint64_t a1, void (*a2)(void))
{
  return sub_259FC2A04(a1, a2);
}

uint64_t sub_259FC36A4()
{
  uint64_t v0 = sub_25A00E1A0();
  MEMORY[0x270FA5388](v0);
  sub_25A00E1E0();
  swift_allocObject();
  sub_25A00E1D0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E00);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_25A010B50;
  sub_25A00E190();
  sub_25A00E180();
  sub_259FC4370();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E10);
  sub_259FC43C8();
  sub_25A00ECC0();
  sub_25A00E1B0();
  sub_259FC4424();
  uint64_t v1 = sub_25A00E1C0();
  swift_release();
  return v1;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UnsafeSchematizedData.asJSON()()
{
  uint64_t v1 = (long long *)v0;
  sub_25A00E9E0();
  MEMORY[0x270FA5388]();
  v16[1] = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_25A00E1A0();
  MEMORY[0x270FA5388]();
  uint64_t v4 = *(void **)(v0 + 16);
  uint64_t v18 = *(void *)(v0 + 24);
  sub_25A00E1E0();
  swift_allocObject();
  sub_25A00E1D0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E00);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_25A010B50;
  sub_25A00E190();
  sub_25A00E180();
  *(void *)&long long v19 = v5;
  sub_259FC4370();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E10);
  sub_259FC43C8();
  long long v17 = *v1;
  sub_25A00ECC0();
  sub_25A00E1B0();
  long long v19 = v17;
  uint64_t v20 = v4;
  uint64_t v21 = v18;
  sub_259FC4424();
  uint64_t v6 = v22;
  uint64_t v7 = sub_25A00E1C0();
  if (!v6)
  {
    uint64_t v9 = v7;
    unint64_t v10 = v8;
    sub_25A00E9D0();
    uint64_t v3 = sub_25A00E9C0();
    uint64_t v4 = v11;
    sub_259FAE4A8(v9, v10);
    if (!v4)
    {
      sub_259FB3304();
      swift_allocError();
      *(void *)uint64_t v14 = 0xD000000000000017;
      *(void *)(v14 + 8) = 0x800000025A00F9C0;
      *(unsigned char *)(v14 + 16) = 2;
      swift_willThrow();
    }
  }
  swift_release();
  uint64_t v12 = v3;
  uint64_t v13 = v4;
  result._object = v13;
  result._uint64_t countAndFlagsBits = v12;
  return result;
}

uint64_t sub_259FC3B50(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_259FC3C14(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_25A00E2B0();
  swift_allocObject();
  uint64_t result = sub_25A00E260();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_259FC3C98(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_25A00E2B0();
  swift_allocObject();
  uint64_t result = sub_25A00E260();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_25A00E310();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_259FC3D14(uint64_t result, uint64_t *a2, uint64_t a3, char a4, char a5, uint64_t a6, void (*a7)(long long *), uint64_t a8)
{
  uint64_t v10 = v8;
  if ((a4 & 1) == 0)
  {
    uint64_t v15 = *a2;
    if (*a2 != a3) {
      goto LABEL_18;
    }
  }
  if ((a5 & 1) == 0)
  {
    sub_259FAEE8C(result, (uint64_t)&v48);
    if (v52 != 10)
    {
LABEL_21:
      uint64_t result = sub_259FAED74((uint64_t)&v48);
      uint64_t v15 = *a2 + 1;
      if (!__OFADD__(*a2, 1)) {
        goto LABEL_44;
      }
      __break(1u);
LABEL_24:
      unint64_t v16 = 0;
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      char v19 = 0;
      uint64_t v20 = v48;
      goto LABEL_37;
    }
    uint64_t v53 = a8;
    long long v43 = v48;
    long long v21 = v49;
    uint64_t v22 = *(void *)(a6 + 16);
    sub_25A00EEE0();
    swift_bridgeObjectRetain_n();
    uint64_t v23 = swift_dynamicCastClass();
    if (!v23)
    {
      swift_bridgeObjectRelease();
      uint64_t v23 = MEMORY[0x263F8EE78];
    }
    uint64_t v24 = *(void *)(v23 + 16);
    swift_release();
    if (v24 == v22 - (v22 != 0))
    {
      uint64_t v25 = swift_dynamicCastClass();
      uint64_t v9 = v53;
      uint64_t v26 = *((void *)&v21 + 1);
      if (!v25)
      {
        swift_bridgeObjectRelease();
        uint64_t v25 = MEMORY[0x263F8EE78];
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v25 = sub_259FE3CDC(a6, a6 + 32, v22 != 0, (2 * v22) | 1);
      uint64_t v9 = v53;
      uint64_t v26 = *((void *)&v21 + 1);
    }
    swift_bridgeObjectRelease();
    long long v48 = v43;
    *(void *)&long long v49 = v21;
    *((void *)&v49 + 1) = v26;
    sub_259FC322C(&v48, v25, a7, v9);
    swift_unknownObjectRelease();
    uint64_t result = swift_release();
    uint64_t v15 = *a2 + 1;
    BOOL v27 = __OFADD__(*a2, 1);
    if (!v8)
    {
      if (!v27) {
        goto LABEL_44;
      }
      __break(1u);
LABEL_27:
      unint64_t v16 = 0;
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      char v19 = 0;
      uint64_t v20 = v48;
      goto LABEL_37;
    }
    if (!v27) {
      goto LABEL_44;
    }
    __break(1u);
LABEL_18:
    if (!__OFADD__(v15++, 1)) {
      goto LABEL_44;
    }
    __break(1u);
    goto LABEL_21;
  }
  sub_259FAEE8C(result, (uint64_t)&v48);
  LOBYTE(v9) = v52;
  uint64_t v44 = a7;
  uint64_t v53 = a8;
  switch(v52)
  {
    case 2:
    case 3:
    case 5:
      goto LABEL_24;
    case 6:
      goto LABEL_27;
    case 7:
      unint64_t v16 = *((void *)&v48 + 1);
      uint64_t v20 = v48;
      uint64_t v18 = *((void *)&v49 + 1);
      uint64_t v17 = v49;
      char v19 = v50;
      break;
    case 8:
      sub_259FAF0F0(&v48, (uint64_t)&v45);
      uint64_t v29 = v46;
      uint64_t v30 = v47;
      __swift_project_boxed_opaque_existential_1(&v45, v46);
      uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 24))(v29, v30);
      goto LABEL_31;
    case 9:
      sub_259FAF0F0(&v48, (uint64_t)&v45);
      uint64_t v33 = v46;
      uint64_t v34 = v47;
      __swift_project_boxed_opaque_existential_1(&v45, v46);
      uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v33, v34);
LABEL_31:
      uint64_t v20 = v31;
      unint64_t v16 = v32;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      goto LABEL_36;
    case 10:
      unint64_t v16 = *((void *)&v48 + 1);
      uint64_t v20 = v48;
      uint64_t v46 = MEMORY[0x263F8D3E8];
      uint64_t v47 = MEMORY[0x263F07B80];
      long long v45 = v49;
      unint64_t v35 = __swift_project_boxed_opaque_existential_1(&v45, MEMORY[0x263F8D3E8]);
      uint64_t v36 = *v35;
      if (*v35 && (uint64_t v37 = (unsigned char *)v35[1], v38 = (uint64_t)&v37[-v36], v37 != (unsigned char *)v36))
      {
        if (v38 <= 14)
        {
          uint64_t v17 = sub_259FC3B50((unsigned char *)*v35, v37);
          uint64_t v18 = v41 & 0xFFFFFFFFFFFFFFLL;
          swift_unknownObjectRetain();
        }
        else
        {
          swift_unknownObjectRetain();
          if ((unint64_t)v38 >= 0x7FFFFFFF)
          {
            uint64_t v17 = sub_259FC3C98(v36, (uint64_t)v37);
            uint64_t v18 = v42 | 0x8000000000000000;
          }
          else
          {
            uint64_t v17 = sub_259FC3C14(v36, (uint64_t)v37);
            uint64_t v18 = v40 | 0x4000000000000000;
          }
        }
      }
      else
      {
        swift_unknownObjectRetain();
        uint64_t v17 = 0;
        uint64_t v18 = 0xC000000000000000;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
      swift_unknownObjectRelease();
LABEL_36:
      char v19 = 0;
      break;
    default:
      unint64_t v16 = 0;
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      char v19 = 0;
      uint64_t v20 = v48;
      break;
  }
LABEL_37:
  *(void *)&long long v48 = v20;
  *((void *)&v48 + 1) = v16;
  *(void *)&long long v49 = v17;
  *((void *)&v49 + 1) = v18;
  char v50 = v19;
  char v51 = v9;
  v44(&v48);
  uint64_t result = sub_259FB671C(v20, v16, v17, v18, v19, v9);
  uint64_t v15 = *a2 + 1;
  BOOL v39 = __OFADD__(*a2, 1);
  if (v10)
  {
    if (!v39) {
      goto LABEL_44;
    }
    __break(1u);
  }
  if (v39)
  {
    __break(1u);
    JUMPOUT(0x259FC414CLL);
  }
LABEL_44:
  *a2 = v15;
  return result;
}

uint64_t sub_259FC4178(uint64_t result, uint64_t *a2, uint64_t a3, char a4, char a5, uint64_t a6, void **a7)
{
  if ((a4 & 1) == 0)
  {
    uint64_t v11 = *a2;
    if (*a2 != a3)
    {
LABEL_22:
      if (!__OFADD__(v11++, 1)) {
        goto LABEL_31;
      }
      __break(1u);
      goto LABEL_25;
    }
  }
  if (a5)
  {
    uint64_t result = sub_259FDAA1C(result, a7);
    uint64_t v11 = *a2 + 1;
    BOOL v12 = __OFADD__(*a2, 1);
    if (!v7) {
      goto LABEL_28;
    }
    if (!v12) {
      goto LABEL_31;
    }
    __break(1u);
  }
  sub_259FAEE8C(result, (uint64_t)&v21);
  if (v24 != 10)
  {
LABEL_25:
    uint64_t result = sub_259FAED74((uint64_t)&v21);
    uint64_t v11 = *a2 + 1;
    if (!__OFADD__(*a2, 1)) {
      goto LABEL_31;
    }
    __break(1u);
LABEL_28:
    if (v12)
    {
      __break(1u);
      goto LABEL_30;
    }
LABEL_31:
    *a2 = v11;
    return result;
  }
  long long v20 = v21;
  uint64_t v13 = v22;
  uint64_t v25 = v23;
  uint64_t v14 = *(void *)(a6 + 16);
  sub_25A00EEE0();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v15 = swift_dynamicCastClass();
  if (!v15)
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x263F8EE78];
  }
  uint64_t v16 = *(void *)(v15 + 16);
  swift_release();
  if (v16 == v14 - (v14 != 0))
  {
    uint64_t v17 = swift_dynamicCastClass();
    uint64_t v18 = v25;
    if (!v17)
    {
      swift_bridgeObjectRelease();
      uint64_t v17 = MEMORY[0x263F8EE78];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_259FE3CDC(a6, a6 + 32, v14 != 0, (2 * v14) | 1);
    uint64_t v18 = v25;
  }
  swift_bridgeObjectRelease();
  long long v21 = v20;
  uint64_t v22 = v13;
  uint64_t v23 = v18;
  sub_259FC33B4(&v21, v17, a7);
  swift_unknownObjectRelease();
  uint64_t result = swift_release();
  uint64_t v11 = *a2 + 1;
  BOOL v12 = __OFADD__(*a2, 1);
  if (v7)
  {
    if (!v12) {
      goto LABEL_31;
    }
    __break(1u);
    goto LABEL_22;
  }
LABEL_30:
  if (!v12) {
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

unint64_t sub_259FC4370()
{
  unint64_t result = qword_26A402E08;
  if (!qword_26A402E08)
  {
    sub_25A00E1A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A402E08);
  }
  return result;
}

unint64_t sub_259FC43C8()
{
  unint64_t result = qword_26A402E18;
  if (!qword_26A402E18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A402E10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A402E18);
  }
  return result;
}

unint64_t sub_259FC4424()
{
  unint64_t result = qword_26A402E20;
  if (!qword_26A402E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A402E20);
  }
  return result;
}

_OWORD *initializeWithCopy for UnsafeSchematizedData(_OWORD *a1, _OWORD *a2)
{
  long long v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for UnsafeSchematizedData(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

_OWORD *assignWithTake for UnsafeSchematizedData(_OWORD *a1, _OWORD *a2)
{
  swift_unknownObjectRelease();
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  return a1;
}

ValueMetadata *type metadata accessor for UnsafeSchematizedData()
{
  return &type metadata for UnsafeSchematizedData;
}

uint64_t sub_259FC4550(uint64_t result)
{
  switch(result & 7)
  {
    case 0:
      uint64_t v2 = *v1;
      if (*v1)
      {
        uint64_t v3 = v1[1] - v2;
        uint64_t v4 = v1[3];
        if (v4 >= v3) {
          goto LABEL_38;
        }
      }
      else
      {
        uint64_t v4 = v1[3];
        if ((v4 & 0x8000000000000000) == 0) {
          goto LABEL_38;
        }
        uint64_t v3 = 0;
      }
      uint64_t v7 = v4 + 1;
      if (*(char *)(v2 + v4) < 0) {
        goto LABEL_25;
      }
      v1[3] = v7;
      return result;
    case 1:
      uint64_t v5 = v1[3];
      BOOL v6 = __OFADD__(v5, 8);
      uint64_t v4 = v5 + 8;
      if (!v6) {
        goto LABEL_13;
      }
      __break(1u);
LABEL_8:
      uint64_t v7 = *v1;
      if (*v1)
      {
        uint64_t v2 = v1[1] - v7;
        uint64_t v8 = v1[3];
        if (v8 >= v2) {
          goto LABEL_38;
        }
      }
      else
      {
        uint64_t v8 = v1[3];
        if ((v8 & 0x8000000000000000) == 0) {
          goto LABEL_38;
        }
        uint64_t v2 = 0;
      }
      uint64_t v3 = *(unsigned __int8 *)(v7 + v8);
      uint64_t v10 = v8 + 1;
      if ((*(char *)(v7 + v8) & 0x80000000) == 0) {
        goto LABEL_21;
      }
      if (v10 >= v2)
      {
LABEL_38:
        sub_259FBA9FC();
        swift_allocError();
        *(void *)uint64_t v17 = 1;
        *(_OWORD *)(v17 + 8) = 0u;
        *(_OWORD *)(v17 + 24) = 0u;
        *(_OWORD *)(v17 + 40) = 0u;
        *(void *)(v17 + 56) = 0;
        *(unsigned char *)(v17 + 64) = 2;
        return swift_willThrow();
      }
      v3 &= 0x7Fu;
      ++v7;
      unint64_t v15 = 7;
      while (1)
      {
        uint64_t v10 = v8 + 2;
        v3 |= (unint64_t)(*(unsigned char *)(v7 + v8) & 0x7F) << v15;
        if ((*(unsigned char *)(v7 + v8) & 0x80) == 0) {
          break;
        }
        if (v10 < v2)
        {
          ++v8;
          BOOL v16 = v15 > 0x38;
          v15 += 7;
          if (!v16) {
            continue;
          }
        }
        goto LABEL_38;
      }
LABEL_21:
      v1[3] = v10;
      if ((v3 & 0x80000000) != 0) {
        goto LABEL_38;
      }
      uint64_t v4 = v10 + v3;
      if (!__OFADD__(v10, v3))
      {
LABEL_13:
        v1[3] = v4;
        return result;
      }
      __break(1u);
LABEL_25:
      if (v7 >= v3) {
        goto LABEL_38;
      }
      uint64_t v11 = v2 + 1;
      unint64_t v12 = 7;
      while (1)
      {
        uint64_t v13 = v4 + 2;
        if ((*(char *)(v11 + v4) & 0x80000000) == 0) {
          break;
        }
        if (v13 < v3)
        {
          ++v4;
          BOOL v14 = v12 >= 0x39;
          v12 += 7;
          if (!v14) {
            continue;
          }
        }
        goto LABEL_38;
      }
      v1[3] = v13;
      return result;
    case 2:
      goto LABEL_8;
    case 3:
      return sub_259FC481C(result >> 3);
    case 4:
      goto LABEL_38;
    case 5:
      uint64_t v9 = v1[3];
      BOOL v6 = __OFADD__(v9, 4);
      uint64_t v4 = v9 + 4;
      if (!v6) {
        goto LABEL_13;
      }
      goto LABEL_42;
    default:
      __break(1u);
LABEL_42:
      __break(1u);
      JUMPOUT(0x259FC474CLL);
  }
}

uint64_t Reader.init(unsafeData:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = a2 - result;
  *(void *)a3 = result;
  *(void *)(a3 + 8) = a2;
  if (!result) {
    uint64_t v3 = 0;
  }
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  *(void *)(a3 + 16) = v3;
  *(unsigned char *)(a3 + 40) = 1;
  return result;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_259FC47A4(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_259FC47C4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 41) = v3;
  return result;
}

void *type metadata accessor for Reader()
{
  return &type metadata for Reader;
}

uint64_t sub_259FC481C(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E28);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25A010B90;
  *(void *)(inited + 32) = a1;
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1] - *v1;
  uint64_t v6 = *v1 + 1;
  while (1)
  {
    uint64_t v7 = v1[3];
    if (v4)
    {
      uint64_t v8 = v5;
      if (v7 >= v5) {
        break;
      }
    }
    else
    {
      if ((v7 & 0x8000000000000000) == 0) {
        break;
      }
      uint64_t v8 = 0;
    }
    unint64_t v9 = *(unsigned __int8 *)(v4 + v7);
    uint64_t v10 = v7 + 1;
    if ((*(char *)(v4 + v7) & 0x80000000) == 0)
    {
      v1[3] = v10;
      goto LABEL_17;
    }
    if (v10 >= v8) {
      break;
    }
    v9 &= 0x7Fu;
    unint64_t v11 = 7;
    while (1)
    {
      uint64_t v10 = v7 + 2;
      v9 |= (unint64_t)(*(unsigned char *)(v6 + v7) & 0x7F) << v11;
      if ((*(unsigned char *)(v6 + v7) & 0x80) == 0) {
        break;
      }
      if (v10 < v8)
      {
        ++v7;
        BOOL v12 = v11 > 0x38;
        v11 += 7;
        if (!v12) {
          continue;
        }
      }
      goto LABEL_70;
    }
    v1[3] = v10;
    if (v9 > 0xFFFFFFFE) {
      break;
    }
LABEL_17:
    BOOL v13 = v9 < 8 || (v9 & 7) >= 6;
    if (v13) {
      break;
    }
    switch(v9 & 7)
    {
      case 0uLL:
        if (v4)
        {
          uint64_t v14 = v5;
          if (v10 >= v5) {
            goto LABEL_70;
          }
        }
        else
        {
          if ((v10 & 0x8000000000000000) == 0) {
            goto LABEL_70;
          }
          uint64_t v14 = 0;
        }
        uint64_t v23 = v10 + 1;
        if (*(char *)(v4 + v10) < 0)
        {
          if (v23 >= v14) {
            goto LABEL_70;
          }
          unint64_t v26 = 7;
          while (1)
          {
            uint64_t v27 = v10 + 2;
            if ((*(char *)(v6 + v10) & 0x80000000) == 0) {
              break;
            }
            if (v27 < v14)
            {
              ++v10;
              BOOL v13 = v26 >= 0x39;
              v26 += 7;
              if (!v13) {
                continue;
              }
            }
            goto LABEL_70;
          }
          v1[3] = v27;
          if (!*(void *)(inited + 16)) {
            return swift_bridgeObjectRelease();
          }
        }
        else
        {
          v1[3] = v23;
          if (!*(void *)(inited + 16)) {
            return swift_bridgeObjectRelease();
          }
        }
        break;
      case 1uLL:
        BOOL v15 = __OFADD__(v10, 8);
        uint64_t v16 = v10 + 8;
        if (!v15) {
          goto LABEL_51;
        }
        goto LABEL_74;
      case 2uLL:
        if (v4)
        {
          uint64_t v17 = v5;
          if (v10 >= v5) {
            goto LABEL_70;
          }
        }
        else
        {
          if ((v10 & 0x8000000000000000) == 0) {
            goto LABEL_70;
          }
          uint64_t v17 = 0;
        }
        LODWORD(v24) = *(unsigned __int8 *)(v4 + v10);
        uint64_t v25 = v10 + 1;
        if ((*(char *)(v4 + v10) & 0x80000000) == 0) {
          goto LABEL_49;
        }
        if (v25 >= v17) {
          goto LABEL_70;
        }
        v24 &= 0x7Fu;
        unint64_t v28 = 7;
        while (1)
        {
          uint64_t v25 = v10 + 2;
          v24 |= (unint64_t)(*(unsigned char *)(v6 + v10) & 0x7F) << v28;
          if ((*(unsigned char *)(v6 + v10) & 0x80) == 0) {
            break;
          }
          if (v25 < v17)
          {
            ++v10;
            BOOL v12 = v28 > 0x38;
            v28 += 7;
            if (!v12) {
              continue;
            }
          }
          goto LABEL_70;
        }
LABEL_49:
        v1[3] = v25;
        if ((v24 & 0x80000000) != 0) {
          goto LABEL_70;
        }
        uint64_t v16 = v25 + v24;
        if (__OFADD__(v25, v24)) {
LABEL_76:
        }
          __break(1u);
LABEL_51:
        v1[3] = v16;
LABEL_52:
        if (!*(void *)(inited + 16)) {
          return swift_bridgeObjectRelease();
        }
        continue;
      case 3uLL:
        unint64_t v19 = *(void *)(inited + 16);
        unint64_t v18 = *(void *)(inited + 24);
        if (v19 >= v18 >> 1) {
          uint64_t inited = (uint64_t)sub_259FC98C0((void *)(v18 > 1), v19 + 1, 1, (void *)inited);
        }
        *(void *)(inited + 16) = v19 + 1;
        *(void *)(inited + 8 * v19 + 32) = v9 >> 3;
        if (!*(void *)(inited + 16)) {
          return swift_bridgeObjectRelease();
        }
        continue;
      case 4uLL:
        uint64_t v20 = *(void *)(inited + 16);
        if (v20)
        {
          uint64_t v21 = v20 - 1;
          uint64_t v22 = *(void *)(inited + 8 * v21 + 32);
          *(void *)(inited + 16) = v21;
          if (v22 == v9 >> 3) {
            goto LABEL_52;
          }
        }
        swift_bridgeObjectRelease();
        sub_259FBA9FC();
        swift_allocError();
        *(void *)uint64_t v31 = 1;
        *(_OWORD *)(v31 + 8) = 0u;
        *(_OWORD *)(v31 + 24) = 0u;
        *(_OWORD *)(v31 + 40) = 0u;
        *(void *)(v31 + 56) = 0;
        *(unsigned char *)(v31 + 64) = 2;
        return swift_willThrow();
      case 5uLL:
        BOOL v15 = __OFADD__(v10, 4);
        uint64_t v16 = v10 + 4;
        if (!v15) {
          goto LABEL_51;
        }
        goto LABEL_75;
      default:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
        goto LABEL_76;
    }
  }
LABEL_70:
  sub_259FBA9FC();
  swift_allocError();
  *(void *)uint64_t v29 = 1;
  *(_OWORD *)(v29 + 8) = 0u;
  *(_OWORD *)(v29 + 24) = 0u;
  *(_OWORD *)(v29 + 40) = 0u;
  *(void *)(v29 + 56) = 0;
  *(unsigned char *)(v29 + 64) = 2;
  swift_willThrow();
  return swift_bridgeObjectRelease();
}

uint64_t destroy for SerializationError(uint64_t result)
{
  uint64_t v1 = result;
  unsigned int v2 = *(unsigned __int8 *)(result + 64);
  if (v2 >= 2) {
    unsigned int v2 = *(_DWORD *)result + 2;
  }
  if (v2 == 1)
  {
    char v3 = (uint64_t *)(result + 8);
  }
  else
  {
    if (v2) {
      return result;
    }
    switch(*(unsigned char *)(result + 40))
    {
      case 7:
        swift_unknownObjectRelease();
        sub_259FB680C(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
        break;
      case 8:
      case 9:
        __swift_destroy_boxed_opaque_existential_1(result);
        break;
      case 0xA:
        swift_unknownObjectRelease();
        break;
      default:
        break;
    }
    char v3 = (uint64_t *)(v1 + 56);
    v1 += 48;
  }
  uint64_t v4 = *(void *)v1;
  uint64_t v5 = *v3;
  return sub_259FAD1BC(v4, v5);
}

uint64_t initializeWithCopy for SerializationError(uint64_t a1, uint64_t *a2)
{
  unsigned int v4 = *((unsigned __int8 *)a2 + 64);
  if (v4 >= 2) {
    unsigned int v4 = *(_DWORD *)a2 + 2;
  }
  if (v4 == 1)
  {
    uint64_t v8 = *a2;
    uint64_t v9 = a2[1];
    sub_259FBAA50(*a2, v9);
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v9;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(unsigned char *)(a1 + 64) = 1;
  }
  else if (v4)
  {
    long long v10 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v10;
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    long long v11 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
  }
  else
  {
    switch(*((unsigned char *)a2 + 40))
    {
      case 7:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v5 = a2[2];
        uint64_t v6 = a2[3];
        char v7 = *((unsigned char *)a2 + 32);
        swift_unknownObjectRetain();
        sub_259FB94E4(v5, v6, v7);
        *(void *)(a1 + 16) = v5;
        *(void *)(a1 + 24) = v6;
        *(unsigned char *)(a1 + 32) = v7;
        *(unsigned char *)(a1 + 40) = 7;
        break;
      case 8:
        long long v13 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 24) = v13;
        (**(void (***)(uint64_t, uint64_t *))(v13 - 8))(a1, a2);
        *(unsigned char *)(a1 + 40) = 8;
        break;
      case 9:
        long long v14 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 24) = v14;
        (**(void (***)(uint64_t, uint64_t *))(v14 - 8))(a1, a2);
        *(unsigned char *)(a1 + 40) = 9;
        break;
      case 0xA:
        long long v15 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v15;
        *(unsigned char *)(a1 + 40) = 10;
        swift_unknownObjectRetain();
        break;
      default:
        long long v12 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v12;
        *(_OWORD *)(a1 + 25) = *(_OWORD *)((char *)a2 + 25);
        break;
    }
    uint64_t v17 = a2[6];
    uint64_t v16 = a2[7];
    sub_259FBAA50(v17, v16);
    *(void *)(a1 + 48) = v17;
    *(void *)(a1 + 56) = v16;
    *(unsigned char *)(a1 + 64) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for SerializationError(uint64_t a1, uint64_t *a2)
{
  if ((uint64_t *)a1 == a2) {
    return a1;
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + 64);
  if (v4 >= 2) {
    unsigned int v4 = *(_DWORD *)a1 + 2;
  }
  if (v4 == 1)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t *)a1;
LABEL_12:
    sub_259FAD1BC(*v6, *v5);
    goto LABEL_13;
  }
  if (!v4)
  {
    switch(*(unsigned char *)(a1 + 40))
    {
      case 7:
        swift_unknownObjectRelease();
        sub_259FB680C(*(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
        break;
      case 8:
      case 9:
        __swift_destroy_boxed_opaque_existential_1(a1);
        break;
      case 0xA:
        swift_unknownObjectRelease();
        break;
      default:
        break;
    }
    uint64_t v6 = (uint64_t *)(a1 + 48);
    uint64_t v5 = (uint64_t *)(a1 + 56);
    goto LABEL_12;
  }
LABEL_13:
  unsigned int v7 = *((unsigned __int8 *)a2 + 64);
  if (v7 >= 2) {
    unsigned int v7 = *(_DWORD *)a2 + 2;
  }
  if (v7 == 1)
  {
    uint64_t v11 = *a2;
    uint64_t v12 = a2[1];
    sub_259FBAA50(*a2, v12);
    *(void *)a1 = v11;
    *(void *)(a1 + 8) = v12;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(unsigned char *)(a1 + 64) = 1;
  }
  else if (v7)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    long long v13 = *((_OWORD *)a2 + 1);
    long long v14 = *((_OWORD *)a2 + 2);
    long long v15 = *((_OWORD *)a2 + 3);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_OWORD *)(a1 + 32) = v14;
    *(_OWORD *)(a1 + 48) = v15;
    *(_OWORD *)(a1 + 16) = v13;
  }
  else
  {
    switch(*((unsigned char *)a2 + 40))
    {
      case 7:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v8 = a2[2];
        uint64_t v9 = a2[3];
        char v10 = *((unsigned char *)a2 + 32);
        swift_unknownObjectRetain();
        sub_259FB94E4(v8, v9, v10);
        *(void *)(a1 + 16) = v8;
        *(void *)(a1 + 24) = v9;
        *(unsigned char *)(a1 + 32) = v10;
        *(unsigned char *)(a1 + 40) = 7;
        break;
      case 8:
        uint64_t v18 = a2[3];
        *(void *)(a1 + 24) = v18;
        *(void *)(a1 + 32) = a2[4];
        (**(void (***)(uint64_t, uint64_t *))(v18 - 8))(a1, a2);
        *(unsigned char *)(a1 + 40) = 8;
        break;
      case 9:
        uint64_t v19 = a2[3];
        *(void *)(a1 + 24) = v19;
        *(void *)(a1 + 32) = a2[4];
        (**(void (***)(uint64_t, uint64_t *))(v19 - 8))(a1, a2);
        *(unsigned char *)(a1 + 40) = 9;
        break;
      case 0xA:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
        *(unsigned char *)(a1 + 40) = 10;
        swift_unknownObjectRetain();
        break;
      default:
        long long v16 = *(_OWORD *)a2;
        long long v17 = *((_OWORD *)a2 + 1);
        *(_OWORD *)(a1 + 25) = *(_OWORD *)((char *)a2 + 25);
        *(_OWORD *)a1 = v16;
        *(_OWORD *)(a1 + 16) = v17;
        break;
    }
    uint64_t v21 = a2[6];
    uint64_t v20 = a2[7];
    sub_259FBAA50(v21, v20);
    *(void *)(a1 + 48) = v21;
    *(void *)(a1 + 56) = v20;
    *(unsigned char *)(a1 + 64) = 0;
  }
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SerializationError(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return a1;
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + 64);
  if (v4 >= 2) {
    unsigned int v4 = *(_DWORD *)a1 + 2;
  }
  if (v4 == 1)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t *)a1;
LABEL_12:
    sub_259FAD1BC(*v6, *v5);
    goto LABEL_13;
  }
  if (!v4)
  {
    switch(*(unsigned char *)(a1 + 40))
    {
      case 7:
        swift_unknownObjectRelease();
        sub_259FB680C(*(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
        break;
      case 8:
      case 9:
        __swift_destroy_boxed_opaque_existential_1(a1);
        break;
      case 0xA:
        swift_unknownObjectRelease();
        break;
      default:
        break;
    }
    uint64_t v6 = (uint64_t *)(a1 + 48);
    uint64_t v5 = (uint64_t *)(a1 + 56);
    goto LABEL_12;
  }
LABEL_13:
  unsigned int v7 = *(unsigned __int8 *)(a2 + 64);
  if (v7 >= 2) {
    unsigned int v7 = *(_DWORD *)a2 + 2;
  }
  if (v7 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    *(unsigned char *)(a1 + 64) = 1;
  }
  else if (v7)
  {
    long long v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    long long v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    long long v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    *(unsigned char *)(a1 + 64) = 0;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SerializationError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SerializationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 64) = 0;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 64) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_259FC537C(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 64);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_259FC5398(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 64) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SerializationError()
{
  return &type metadata for SerializationError;
}

uint64_t FieldSchemaDescribing.asPublic()@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  *a2 = v2;
  a2[1] = a1;
  return swift_unknownObjectRetain();
}

uint64_t FieldSchema.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t))(*(void *)(v1 + 8) + 8))(ObjectType);
}

uint64_t FieldSchema.isRepeated.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(ObjectType, v1) & 1;
}

uint64_t FieldSchema.isOptional.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(ObjectType, v1) & 1;
}

Swift::Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> FieldSchema.getFieldNumber()()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 48))(ObjectType, v1);
}

uint64_t FieldSchema.getType()()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 56))(ObjectType, v1);
}

ValueMetadata *type metadata accessor for FieldSchema()
{
  return &type metadata for FieldSchema;
}

uint64_t dispatch thunk of FieldSchemaDescribing.isRepeated.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FieldSchemaDescribing.isOptional.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FieldSchemaDescribing.options.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FieldSchemaDescribing.oneofIndex.getter(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = (*(uint64_t (**)(void))(a2 + 40))();
  return v2 | ((HIDWORD(v2) & 1) << 32);
}

uint64_t dispatch thunk of FieldSchemaDescribing.getFieldNumber()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FieldSchemaDescribing.getType()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_259FC5650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t v11 = v5[3];
  uint64_t v25 = v5[1];
  uint64_t v26 = v5[2];
  *(void *)&long long v27 = sub_259FFD340(*v5);
  swift_bridgeObjectRetain();
  sub_259FB8598((void **)&v27);
  if (v6)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = v27;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v14 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(a4 + 24))(0xD00000000000001FLL, 0x800000025A00F4D0, ObjectType, a4);
    uint64_t v16 = v15;
    uint64_t v17 = sub_25A00E950();
    *(void *)&long long v31 = v14;
    *((void *)&v31 + 1) = v16;
    uint64_t v32 = v17;
    swift_bridgeObjectRetain();
    SchematizedDataComposer.subscript.setter(a1, a2, 1701667182, 0xE400000000000000);
    if (v11 >> 60 == 15)
    {
      sub_259FFB0CC(0x736E6F6974706FLL, 0xE700000000000000, (uint64_t)&v27);
      uint64_t v18 = sub_259FB66F8(v27, *((unint64_t *)&v27 + 1), v28, v29, v30);
    }
    else
    {
      v33[0] = v26;
      v33[1] = v11;
      uint64_t v33[2] = 0;
      v33[3] = 0;
      __int16 v34 = 2304;
      sub_259FAE450(v26, v11);
      uint64_t v19 = v32;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v27 = v19;
      sub_259FFB7FC((uint64_t)v33, 0x736E6F6974706FLL, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
      uint64_t v32 = v27;
      uint64_t v18 = swift_bridgeObjectRelease();
    }
    MEMORY[0x270FA5388](v18);
    uint64_t v21 = sub_259FC5A18(v12, (void (*)(long long *__return_ptr, uint64_t, uint64_t, unsigned char *))sub_259FC59FC);
    swift_release();
    SchematizedDataComposer.subscript.setter(v21, 0x646C656966, 0xE500000000000000);
    swift_unknownObjectRetain();
    uint64_t v22 = sub_259FC5BCC(v25, a3, a4);
    swift_unknownObjectRelease();
    SchematizedDataComposer.subscript.setter(v22, 0x65645F666F656E6FLL, 0xEA00000000006C63);
    long long v27 = v31;
    uint64_t v28 = v32;
    SchematizedDataComposer.compose()(a5);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_259FC5990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  return sub_259FBB478(a1, a2, a3, a4);
}

uint64_t sub_259FC59FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_259FC5990(a1, a2, *(void *)(v3 + 24), a3);
}

uint64_t sub_259FC5A18(uint64_t a1, void (*a2)(long long *__return_ptr, uint64_t, uint64_t, unsigned char *))
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v34 = MEMORY[0x263F8EE78];
    sub_259FE1564(0, v3, 0);
    uint64_t v4 = v34;
    for (uint64_t i = (unint64_t *)(a1 + 104); ; i += 10)
    {
      uint64_t v7 = *(i - 9);
      uint64_t v8 = *(i - 8);
      uint64_t v9 = *(i - 6);
      char v10 = *((unsigned char *)i - 24);
      int v11 = *((_DWORD *)i - 5);
      char v12 = *((unsigned char *)i - 16);
      uint64_t v13 = *(i - 1);
      unint64_t v14 = *i;
      v24[0] = *((unsigned char *)i - 56);
      uint64_t v25 = v9;
      long long v26 = *(_OWORD *)(i - 5);
      char v27 = v10;
      int v28 = v11;
      char v29 = v12;
      uint64_t v30 = v13;
      unint64_t v31 = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_259FAF3C4(v13, v14);
      a2(&v32, v7, v8, v24);
      if (v2) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_259FAF410(v13, v14);
      long long v15 = v32;
      long long v16 = v33;
      uint64_t v34 = v4;
      unint64_t v18 = *(void *)(v4 + 16);
      unint64_t v17 = *(void *)(v4 + 24);
      if (v18 >= v17 >> 1)
      {
        long long v21 = v33;
        long long v22 = v32;
        sub_259FE1564(v17 > 1, v18 + 1, 1);
        long long v16 = v21;
        long long v15 = v22;
        uint64_t v4 = v34;
      }
      *(void *)(v4 + 16) = v18 + 1;
      uint64_t v19 = v4 + 32 * v18;
      *(_OWORD *)(v19 + 32) = v15;
      *(_OWORD *)(v19 + 48) = v16;
      if (!--v3) {
        return v4;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259FAF410(v13, v14);
    swift_release();
  }
  return v4;
}

uint64_t sub_259FC5BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v21 = MEMORY[0x263F8EE78];
    sub_259FE1564(0, v4, 0);
    uint64_t v5 = v21;
    uint64_t v7 = (unint64_t *)(a1 + 56);
    while (1)
    {
      uint64_t v8 = *(v7 - 1);
      unint64_t v9 = *v7;
      swift_bridgeObjectRetain();
      sub_259FAF3C4(v8, v9);
      sub_259FC2E10(a3, (uint64_t)&v19);
      if (v3) {
        break;
      }
      swift_bridgeObjectRelease();
      sub_259FAF410(v8, v9);
      long long v10 = v19;
      long long v11 = v20;
      uint64_t v21 = v5;
      unint64_t v13 = *(void *)(v5 + 16);
      unint64_t v12 = *(void *)(v5 + 24);
      if (v13 >= v12 >> 1)
      {
        long long v16 = v20;
        long long v17 = v19;
        sub_259FE1564(v12 > 1, v13 + 1, 1);
        long long v11 = v16;
        long long v10 = v17;
        uint64_t v5 = v21;
      }
      v7 += 4;
      *(void *)(v5 + 16) = v13 + 1;
      uint64_t v14 = v5 + 32 * v13;
      *(_OWORD *)(v14 + 32) = v10;
      *(_OWORD *)(v14 + 48) = v11;
      if (!--v4) {
        return v5;
      }
    }
    swift_bridgeObjectRelease();
    sub_259FAF410(v8, v9);
    swift_release();
  }
  return v5;
}

uint64_t sub_259FC5D24(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = (void *)v5;
  uint64_t v8 = *a3;
  uint64_t v9 = a3[1];
  unint64_t v43 = a3[2];
  uint64_t v42 = a3[3];
  long long v11 = (uint64_t *)(*a3 + 64);
  uint64_t v10 = *v11;
  *(void *)&v45[0] = MEMORY[0x263F8EE88];
  uint64_t v12 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v10;
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v19 = v18 | (v17 << 6);
      goto LABEL_5;
    }
    int64_t v20 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v20 >= v15) {
      goto LABEL_25;
    }
    unint64_t v21 = v11[v20];
    ++v17;
    if (!v21)
    {
      int64_t v17 = v20 + 1;
      if (v20 + 1 >= v15) {
        goto LABEL_25;
      }
      unint64_t v21 = v11[v17];
      if (!v21)
      {
        int64_t v17 = v20 + 2;
        if (v20 + 2 >= v15) {
          goto LABEL_25;
        }
        unint64_t v21 = v11[v17];
        if (!v21)
        {
          int64_t v17 = v20 + 3;
          if (v20 + 3 >= v15) {
            goto LABEL_25;
          }
          unint64_t v21 = v11[v17];
          if (!v21)
          {
            int64_t v17 = v20 + 4;
            if (v20 + 4 >= v15) {
              goto LABEL_25;
            }
            unint64_t v21 = v11[v17];
            if (!v21)
            {
              int64_t v22 = v20 + 5;
              if (v22 >= v15)
              {
LABEL_25:
                swift_release();
                swift_bridgeObjectRelease();
                uint64_t v23 = *(void *)&v45[0];
                *(void *)(v5 + 32) = v8;
                *(void *)(v5 + 40) = v23;
                uint64_t ObjectType = swift_getObjectType();
                swift_bridgeObjectRetain();
                char v25 = sub_259FD06CC(ObjectType, a5);
                long long v26 = 0uLL;
                if (v25)
                {
                  uint64_t v27 = v6;
                  unint64_t v28 = v43;
                  if (v43 >> 60 == 15)
                  {
                    long long v30 = 0uLL;
                    uint64_t v31 = v42;
                  }
                  else
                  {
                    sub_259FAE450(v9, v43);
                    sub_259FD06E8(ObjectType, a5);
                    if (v6)
                    {
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      sub_259FAF410(v9, v43);
                      swift_bridgeObjectRelease();
                      swift_release();
                      sub_259FAF410(v9, v43);
                      swift_unknownObjectRelease();
                      int v34 = 0;
                      goto LABEL_39;
                    }
                    uint64_t v32 = v29;
                    uint64_t v33 = swift_getObjectType();
                    (*(void (**)(_OWORD *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t))(v32 + 80))(v45, v9, v43, v33, v32);
                    swift_unknownObjectRelease();
                    sub_259FAF410(v9, v43);
                    long long v26 = v45[0];
                    long long v30 = v45[1];
                    uint64_t v31 = v42;
                    unint64_t v28 = v43;
                  }
                }
                else
                {
                  long long v30 = 0uLL;
                  uint64_t v31 = v42;
                  uint64_t v27 = v6;
                  unint64_t v28 = v43;
                }
                *(_OWORD *)(v5 + 48) = v26;
                *(_OWORD *)(v5 + 64) = v30;
                if (*(void *)(v31 + 16) && (sub_259FD0730(ObjectType, a5) & 1) != 0)
                {
                  uint64_t v35 = sub_259FD074C(ObjectType, a5);
                  if (v27)
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_unknownObjectRelease();
                    swift_release();
                    sub_259FAF410(v9, v28);
                    swift_bridgeObjectRelease();
                    int v34 = 1;
LABEL_39:
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (v34) {
                      sub_259FAFD34(v7[6], v7[7], v7[8], v7[9]);
                    }
                    swift_deallocPartialClassInstance();
                    return (uint64_t)v7;
                  }
                  uint64_t v38 = v35;
                  uint64_t v39 = v36;
                  swift_unknownObjectRetain();
                  unint64_t v37 = sub_259FC7A08(v31, v38, v39);
                  swift_bridgeObjectRelease();
                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease_n();
                  sub_259FAF410(v9, v28);
                  swift_bridgeObjectRelease();
                }
                else
                {
                  swift_bridgeObjectRelease();
                  sub_259FAF410(v9, v28);
                  swift_bridgeObjectRelease();
                  unint64_t v37 = sub_259FB239C(MEMORY[0x263F8EE78]);
                  swift_unknownObjectRelease();
                }
                v7[10] = v37;
                swift_release();
                v7[2] = a1;
                v7[3] = a2;
                return (uint64_t)v7;
              }
              unint64_t v21 = v11[v22];
              if (!v21)
              {
                while (1)
                {
                  int64_t v17 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_44;
                  }
                  if (v17 >= v15) {
                    goto LABEL_25;
                  }
                  unint64_t v21 = v11[v17];
                  ++v22;
                  if (v21) {
                    goto LABEL_24;
                  }
                }
              }
              int64_t v17 = v22;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v17 << 6);
LABEL_5:
    uint64_t result = sub_259FC6888(&v46, *(void *)(*(void *)(v8 + 56) + 8 * v19));
  }
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

unint64_t sub_259FC6210(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 32);
  if (!*(void *)(v5 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_259FE120C(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    sub_25A00ED10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_25A00EA80();
    swift_bridgeObjectRelease();
    sub_25A00EA80();
    sub_25A00EA80();
    sub_25A00EA80();
    unint64_t v8 = 0xE600000000000000;
    sub_259FB3304();
    swift_allocError();
    *(void *)uint64_t v9 = 0x203A6D756E45;
    *(void *)(v9 + 8) = 0xE600000000000000;
    *(unsigned char *)(v9 + 16) = 4;
    swift_willThrow();
    return v8;
  }
  unint64_t v8 = *(void *)(*(void *)(v5 + 56) + 8 * v6);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_259FC6360(uint64_t result)
{
  int64_t v2 = 0;
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v3 + 64;
  unint64_t v7 = v5 & *(void *)(v3 + 64);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v2 + 1;
    if (__OFADD__(v2, 1)) {
      break;
    }
    if (v11 >= v8) {
      goto LABEL_26;
    }
    unint64_t v12 = *(void *)(v6 + 8 * v11);
    ++v2;
    if (!v12)
    {
      int64_t v2 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_26;
      }
      unint64_t v12 = *(void *)(v6 + 8 * v2);
      if (!v12)
      {
        int64_t v2 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_26;
        }
        unint64_t v12 = *(void *)(v6 + 8 * v2);
        if (!v12)
        {
          int64_t v2 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_26;
          }
          unint64_t v12 = *(void *)(v6 + 8 * v2);
          if (!v12)
          {
            int64_t v2 = v11 + 4;
            if (v11 + 4 >= v8) {
              goto LABEL_26;
            }
            unint64_t v12 = *(void *)(v6 + 8 * v2);
            if (!v12)
            {
              int64_t v13 = v11 + 5;
              if (v13 >= v8)
              {
LABEL_26:
                sub_25A00ED10();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRetain();
                sub_25A00EA80();
                swift_bridgeObjectRelease();
                sub_25A00EA80();
                sub_25A00EE30();
                sub_25A00EA80();
                swift_bridgeObjectRelease();
                sub_25A00EA80();
                uint64_t v14 = 0x203A6D756E45;
                sub_259FB3304();
                swift_allocError();
                *(void *)uint64_t v15 = 0x203A6D756E45;
                *(void *)(v15 + 8) = 0xE600000000000000;
                *(unsigned char *)(v15 + 16) = 4;
                swift_willThrow();
                return v14;
              }
              unint64_t v12 = *(void *)(v6 + 8 * v13);
              if (!v12)
              {
                while (1)
                {
                  int64_t v2 = v13 + 1;
                  if (__OFADD__(v13, 1)) {
                    goto LABEL_29;
                  }
                  if (v2 >= v8) {
                    goto LABEL_26;
                  }
                  unint64_t v12 = *(void *)(v6 + 8 * v2);
                  ++v13;
                  if (v12) {
                    goto LABEL_24;
                  }
                }
              }
              int64_t v2 = v13;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v2 << 6);
LABEL_5:
    if (*(void *)(*(void *)(v3 + 56) + 8 * v10) == result)
    {
      uint64_t v14 = *(void *)(*(void *)(v3 + 48) + 16 * v10);
      swift_bridgeObjectRetain();
      return v14;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_259FC65C8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FAFD34(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
  return swift_bridgeObjectRelease();
}

uint64_t sub_259FC660C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FAFD34(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 88, 7);
}

uint64_t type metadata accessor for ProtoEnumSchema()
{
  return self;
}

uint64_t sub_259FC668C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[6];
  uint64_t v3 = v1[7];
  uint64_t v4 = v1[8];
  unint64_t v5 = v1[9];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_259FB45E0(v2, v3, v4, v5);
}

uint64_t sub_259FC66A0()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_259FC66A8(uint64_t a1, uint64_t a2)
{
  return sub_259FC6210(a1, a2);
}

uint64_t sub_259FC66C0(uint64_t a1)
{
  return sub_259FC6360(a1);
}

uint64_t sub_259FC66D8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_25A00EF60();
  swift_bridgeObjectRetain();
  sub_25A00EA40();
  uint64_t v8 = sub_25A00EF90();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    unint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_25A00EE40() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      unint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_25A00EE40() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_259FC6EE8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_259FC6888(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_25A00EF50();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_259FC7084(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_259FC6984()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E38);
  uint64_t v3 = sub_25A00ECF0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    long long v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *long long v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_25A00EF60();
      sub_25A00EA40();
      uint64_t result = sub_25A00EF90();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      BOOL v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *BOOL v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_259FC6C64()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E30);
  uint64_t result = sub_25A00ECF0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    BOOL v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_25A00EF50();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_259FC6EE8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  int64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_259FC6984();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_259FC71A8();
      goto LABEL_22;
    }
    sub_259FC74F4();
  }
  uint64_t v11 = *v4;
  sub_25A00EF60();
  sub_25A00EA40();
  uint64_t result = sub_25A00EF90();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    int64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_25A00EE40(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_25A00EEF0();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_25A00EE40();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  unint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *unint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_259FC7084(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_259FC6C64();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_259FC735C();
      goto LABEL_14;
    }
    sub_259FC77A4();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_25A00EF50();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_25A00EEF0();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void *sub_259FC71A8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E38);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25A00ECE0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_259FC735C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E30);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25A00ECE0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_259FC74F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E38);
  uint64_t v3 = sub_25A00ECF0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_25A00EF60();
    swift_bridgeObjectRetain();
    sub_25A00EA40();
    uint64_t result = sub_25A00EF90();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_259FC77A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E30);
  uint64_t result = sub_25A00ECF0();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_25A00EF50();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_259FC7A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v28)(_OWORD *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v29;
  _OWORD *v30;
  long long v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  int64_t v39;
  _OWORD v40[2];
  uint64_t v41;

  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402CD8);
  uint64_t result = sub_25A00EDC0();
  uint64_t v8 = (void *)result;
  int64_t v9 = 0;
  unint64_t v37 = a1;
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v11 = a1 + 64;
  uint64_t v10 = v12;
  uint64_t v13 = 1 << *(unsigned char *)(v11 - 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v10;
  int v34 = v11;
  uint64_t v35 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v38 = (void *)result;
  uint64_t v36 = result + 64;
  uint64_t v16 = a3;
  if ((v14 & v10) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v41 = v4;
  unint64_t v17 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  uint64_t v39 = v9;
  for (unint64_t i = v17 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v20 << 6))
  {
    uint64_t v23 = *(void *)(*(void *)(v37 + 48) + 8 * i);
    BOOL v24 = (uint64_t *)(*(void *)(v37 + 56) + 16 * i);
    uint64_t v25 = *v24;
    unint64_t v26 = v24[1];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v28 = *(void (**)(_OWORD *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t))(v16 + 80);
    sub_259FAE450(v25, v26);
    int64_t v29 = v41;
    v28(v40, v25, v26, ObjectType, v16);
    uint64_t v4 = v29;
    if (v29)
    {
      uint64_t v8 = v38;
      swift_release();
      sub_259FAE4A8(v25, v26);
      return (uint64_t)v8;
    }
    uint64_t result = sub_259FAE4A8(v25, v26);
    *(void *)(v36 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v8 = v38;
    *(void *)(v38[6] + 8 * i) = v23;
    long long v30 = (_OWORD *)(v38[7] + 32 * i);
    uint64_t v31 = v40[1];
    *long long v30 = v40[0];
    v30[1] = v31;
    uint64_t v32 = v38[2];
    BOOL v19 = __OFADD__(v32, 1);
    uint64_t v33 = v32 + 1;
    if (v19)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v38[2] = v33;
    int64_t v9 = v39;
    if (v15) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v19 = __OFADD__(v9, 1);
    int64_t v20 = v9 + 1;
    if (v19) {
      goto LABEL_27;
    }
    if (v20 >= v35) {
      return (uint64_t)v8;
    }
    unint64_t v21 = *(void *)(v34 + 8 * v20);
    if (!v21) {
      break;
    }
LABEL_15:
    uint64_t v41 = v4;
    unint64_t v15 = (v21 - 1) & v21;
    uint64_t v39 = v20;
  }
  int64_t v22 = v20 + 1;
  if (v20 + 1 >= v35) {
    return (uint64_t)v8;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v22);
  if (v21) {
    goto LABEL_14;
  }
  int64_t v22 = v20 + 2;
  if (v20 + 2 >= v35) {
    return (uint64_t)v8;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v22);
  if (v21) {
    goto LABEL_14;
  }
  int64_t v22 = v20 + 3;
  if (v20 + 3 >= v35) {
    return (uint64_t)v8;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v22);
  if (v21)
  {
LABEL_14:
    int64_t v20 = v22;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v20 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v20 >= v35) {
      return (uint64_t)v8;
    }
    unint64_t v21 = *(void *)(v34 + 8 * v20);
    ++v22;
    if (v21) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t _s17PoirotSchematizer0B5ErrorO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 16);
  uint64_t v6 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  switch(v4)
  {
    case 1u:
      if (v7 != 1) {
        goto LABEL_126;
      }
      if (v3 == v6 && v2 == v5) {
        char v9 = 1;
      }
      else {
        char v9 = sub_25A00EE40();
      }
      sub_259FC826C(v6, v5, 1u);
      sub_259FC826C(v3, v2, 1u);
      sub_259FC8294(v3, v2, 1u);
      sub_259FC8294(v6, v5, 1u);
      break;
    case 2u:
      if (v7 != 2) {
        goto LABEL_126;
      }
      if (v3 == v6 && v2 == v5) {
        char v9 = 1;
      }
      else {
        char v9 = sub_25A00EE40();
      }
      sub_259FC826C(v6, v5, 2u);
      sub_259FC826C(v3, v2, 2u);
      sub_259FC8294(v3, v2, 2u);
      sub_259FC8294(v6, v5, 2u);
      break;
    case 3u:
      if (v7 != 3) {
        goto LABEL_126;
      }
      if (v3 == v6 && v2 == v5) {
        char v9 = 1;
      }
      else {
        char v9 = sub_25A00EE40();
      }
      sub_259FC826C(v6, v5, 3u);
      sub_259FC826C(v3, v2, 3u);
      sub_259FC8294(v3, v2, 3u);
      sub_259FC8294(v6, v5, 3u);
      break;
    case 4u:
      if (v7 != 4) {
        goto LABEL_126;
      }
      if (v3 == v6 && v2 == v5) {
        char v9 = 1;
      }
      else {
        char v9 = sub_25A00EE40();
      }
      sub_259FC826C(v6, v5, 4u);
      sub_259FC826C(v3, v2, 4u);
      sub_259FC8294(v3, v2, 4u);
      sub_259FC8294(v6, v5, 4u);
      break;
    case 5u:
      if (v7 != 5) {
        goto LABEL_126;
      }
      if (v3 == v6 && v2 == v5) {
        char v9 = 1;
      }
      else {
        char v9 = sub_25A00EE40();
      }
      sub_259FC826C(v6, v5, 5u);
      sub_259FC826C(v3, v2, 5u);
      sub_259FC8294(v3, v2, 5u);
      sub_259FC8294(v6, v5, 5u);
      break;
    case 6u:
      if (v7 != 6) {
        goto LABEL_126;
      }
      if (v3 == v6 && v2 == v5) {
        char v9 = 1;
      }
      else {
        char v9 = sub_25A00EE40();
      }
      sub_259FC826C(v6, v5, 6u);
      sub_259FC826C(v3, v2, 6u);
      sub_259FC8294(v3, v2, 6u);
      sub_259FC8294(v6, v5, 6u);
      break;
    case 7u:
      switch(v3)
      {
        case 1:
          if (v7 != 7 || v6 != 1 || v5 != 0) {
            goto LABEL_126;
          }
          sub_259FC8294(*(void *)a1, v2, 7u);
          char v9 = 1;
          sub_259FC8294(1, 0, 7u);
          return v9 & 1;
        case 2:
          if (v7 != 7 || v6 != 2 || v5 != 0) {
            goto LABEL_126;
          }
          sub_259FC8294(*(void *)a1, v2, 7u);
          uint64_t v16 = 2;
          goto LABEL_129;
        case 3:
          if (v7 != 7 || v6 != 3 || v5 != 0) {
            goto LABEL_126;
          }
          sub_259FC8294(*(void *)a1, v2, 7u);
          uint64_t v16 = 3;
          goto LABEL_129;
        case 4:
          if (v7 != 7 || v6 != 4 || v5 != 0) {
            goto LABEL_126;
          }
          sub_259FC8294(*(void *)a1, v2, 7u);
          uint64_t v16 = 4;
          goto LABEL_129;
        case 5:
          if (v7 != 7 || v6 != 5 || v5 != 0) {
            goto LABEL_126;
          }
          sub_259FC8294(*(void *)a1, v2, 7u);
          uint64_t v16 = 5;
          goto LABEL_129;
        case 6:
          if (v7 != 7 || v6 != 6 || v5 != 0) {
            goto LABEL_126;
          }
          sub_259FC8294(*(void *)a1, v2, 7u);
          uint64_t v16 = 6;
          goto LABEL_129;
        case 7:
          if (v7 != 7 || v6 != 7 || v5 != 0) {
            goto LABEL_126;
          }
          sub_259FC8294(*(void *)a1, v2, 7u);
          uint64_t v16 = 7;
          goto LABEL_129;
        default:
          if (v7 != 7 || (v5 | v6) != 0) {
            goto LABEL_126;
          }
          sub_259FC8294(*(void *)a1, v2, 7u);
          uint64_t v16 = 0;
LABEL_129:
          sub_259FC8294(v16, 0, 7u);
          char v9 = 1;
          break;
      }
      break;
    default:
      if (*(unsigned char *)(a2 + 16))
      {
LABEL_126:
        sub_259FC826C(*(void *)a2, *(void *)(a2 + 8), v7);
        sub_259FC826C(v3, v2, v4);
        sub_259FC8294(v3, v2, v4);
        sub_259FC8294(v6, v5, v7);
        char v9 = 0;
      }
      else
      {
        if (v3 == v6 && v2 == v5) {
          char v9 = 1;
        }
        else {
          char v9 = sub_25A00EE40();
        }
        sub_259FC826C(v6, v5, 0);
        sub_259FC826C(v3, v2, 0);
        sub_259FC8294(v3, v2, 0);
        sub_259FC8294(v6, v5, 0);
      }
      break;
  }
  return v9 & 1;
}

uint64_t sub_259FC826C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 6u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for SchematizerError(uint64_t a1)
{
  return sub_259FC8294(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_259FC8294(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 6u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s17PoirotSchematizer16SchematizerErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_259FC826C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SchematizerError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_259FC826C(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_259FC8294(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SchematizerError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_259FC8294(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SchematizerError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 249);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 7) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SchematizerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 249;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_259FC8424(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 6u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 7);
  }
}

uint64_t sub_259FC843C(uint64_t result, unsigned int a2)
{
  if (a2 >= 7)
  {
    *(void *)uint64_t result = a2 - 7;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 7;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SchematizerError()
{
  return &type metadata for SchematizerError;
}

uint64_t SchemaManifest.init(withJSON:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v81 = a3;
  uint64_t v92 = sub_25A00E780();
  uint64_t v84 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  uint64_t v91 = (uint64_t)v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_25A00E4D0();
  uint64_t v83 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  unint64_t v76 = (char *)v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25A00E5A0();
  uint64_t v85 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v78 = (char *)v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25A00E620();
  uint64_t v86 = *(void *)(v10 - 8);
  uint64_t v87 = v10;
  MEMORY[0x270FA5388](v10);
  char v88 = (char *)v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25A00E880();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v13 = sub_25A00E520();
  uint64_t v82 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v15 = (char *)v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_25A00E9E0();
  MEMORY[0x270FA5388](v16 - 8);
  sub_25A00E9D0();
  sub_25A00E9C0();
  if (!v17)
  {
    sub_259FC8ED8();
    swift_allocError();
    *unint64_t v60 = 0xD000000000000022;
    v60[1] = 0x800000025A00FA40;
    swift_willThrow();
    return sub_259FAE4A8(a1, a2);
  }
  sub_25A00E870();
  sub_259FC8F2C();
  sub_25A00E8E0();
  if (v3) {
    return sub_259FAE4A8(a1, a2);
  }
  uint64_t v18 = MEMORY[0x263F8EE78];
  uint64_t v96 = (void (*)(char *, uint64_t))sub_259FB0380(MEMORY[0x263F8EE78]);
  unint64_t v95 = sub_259FB04CC(v18);
  uint64_t result = MEMORY[0x25A2F1C30]();
  uint64_t v20 = result;
  uint64_t v21 = *(void *)(result + 16);
  int64_t v22 = v15;
  if (v21)
  {
    unint64_t v23 = 0;
    unint64_t v24 = result + ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80));
    uint64_t v93 = v85 + 16;
    uint64_t v94 = (void (**)(unint64_t, uint64_t))(v85 + 8);
    char v89 = (void (**)(uint64_t, uint64_t))(v83 + 8);
    uint64_t v90 = v83 + 16;
    uint64_t v79 = v84 + 16;
    long long v80 = (void (**)(uint64_t, uint64_t))(v84 + 8);
    char v68 = (void (**)(char *, uint64_t))(v86 + 8);
    long long v66 = xmmword_25A010B90;
    uint64_t v25 = v88;
    uint64_t v73 = result;
    unint64_t v72 = a2;
    uint64_t v71 = a1;
    uint64_t v70 = v13;
    uint64_t v69 = v15;
    uint64_t v64 = v21;
    unint64_t v63 = v24;
    v62[2] = v86 + 16;
    while (v23 < *(void *)(v20 + 16))
    {
      uint64_t v26 = *(void *)(v86 + 72);
      unint64_t v67 = v23;
      (*(void (**)(char *, unint64_t, uint64_t))(v86 + 16))(v25, v24 + v26 * v23, v87);
      sub_25A00E5D0();
      uint64_t v27 = sub_25A00EA50();
      swift_bridgeObjectRelease();
      if (v27 <= 0)
      {
        uint64_t v28 = MEMORY[0x263F8EE78];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E50);
        uint64_t v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = v66;
        *(void *)(v28 + 32) = sub_25A00E5D0();
        *(void *)(v28 + 40) = v29;
      }
      uint64_t v30 = sub_25A00E5E0();
      uint64_t v31 = *(void *)(v30 + 16);
      if (v31)
      {
        unint64_t v32 = v30 + ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80));
        uint64_t v33 = *(void *)(v85 + 72);
        int v34 = *(void (**)(unint64_t, unint64_t, uint64_t))(v85 + 16);
        swift_bridgeObjectRetain();
        unint64_t v35 = (unint64_t)v78;
        do
        {
          v34(v35, v32, v8);
          sub_25A008F4C(v35, (void (*)(void *, unint64_t, uint64_t))v28, &v96);
          (*v94)(v35, v8);
          v32 += v33;
          --v31;
        }
        while (v31);
        swift_bridgeObjectRelease_n();
        uint64_t v25 = v88;
        uint64_t v20 = v73;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v36 = sub_25A00E5B0();
      uint64_t v37 = *(void *)(v36 + 16);
      uint64_t v65 = v8;
      if (v37)
      {
        unint64_t v38 = v36 + ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80));
        uint64_t v39 = *(void *)(v83 + 72);
        uint64_t v40 = *(void (**)(uint64_t, unint64_t, uint64_t))(v83 + 16);
        swift_bridgeObjectRetain();
        uint64_t v42 = (uint64_t)v76;
        uint64_t v41 = v77;
        do
        {
          v40(v42, v38, v41);
          sub_25A006FE4(v42, (void *)v28, (uint64_t *)&v95, &v96);
          (*v89)(v42, v41);
          v38 += v39;
          --v37;
        }
        while (v37);
        swift_bridgeObjectRelease_n();
        uint64_t v25 = v88;
        uint64_t v8 = v65;
        uint64_t v20 = v73;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v43 = sub_25A00E600();
      uint64_t v44 = *(void *)(v43 + 16);
      unint64_t v45 = v72;
      if (v44)
      {
        unint64_t v46 = v43 + ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80));
        uint64_t v74 = *(void *)(v84 + 72);
        unint64_t v75 = *(void (**)(uint64_t, unint64_t, uint64_t))(v84 + 16);
        v62[1] = v43;
        swift_bridgeObjectRetain();
        uint64_t v48 = v91;
        uint64_t v47 = v92;
        do
        {
          v75(v48, v46, v47);
          uint64_t v49 = sub_25A00E660();
          uint64_t v51 = v50;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v52 = (void *)v28;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v52 = sub_259FC9C04(0, *(void *)(v28 + 16) + 1, 1, (void *)v28);
          }
          unint64_t v54 = v52[2];
          unint64_t v53 = v52[3];
          if (v54 >= v53 >> 1) {
            char v52 = sub_259FC9C04((void *)(v53 > 1), v54 + 1, 1, v52);
          }
          v52[2] = v54 + 1;
          uint64_t v55 = &v52[2 * v54];
          v55[4] = v49;
          v55[5] = v51;
          swift_bridgeObjectRelease();
          uint64_t v48 = v91;
          sub_25A0099D4(v91, (uint64_t *)&v95);
          swift_bridgeObjectRelease();
          uint64_t v47 = v92;
          (*v80)(v48, v92);
          v46 += v74;
          --v44;
        }
        while (v44);
        swift_bridgeObjectRelease_n();
        unint64_t v45 = v72;
        uint64_t v56 = v71;
        int64_t v22 = v69;
        uint64_t v25 = v88;
        uint64_t v8 = v65;
        uint64_t v20 = v73;
      }
      else
      {
        swift_bridgeObjectRelease();
        int64_t v22 = v69;
        uint64_t v56 = v71;
      }
      unint64_t v57 = v67 + 1;
      (*v68)(v25, v87);
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v23 = v57;
      BOOL v58 = v57 == v64;
      uint64_t v59 = v81;
      uint64_t v13 = v70;
      unint64_t v24 = v63;
      if (v58)
      {
        sub_259FAE4A8(v56, v45);
        swift_bridgeObjectRelease();
        goto LABEL_34;
      }
    }
    __break(1u);
  }
  else
  {
    sub_259FAE4A8(a1, a2);
    swift_bridgeObjectRelease();
    uint64_t v59 = v81;
LABEL_34:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v22, v13);
    uint64_t v61 = v96;
    unint64_t *v59 = v95;
    v59[1] = (unint64_t)v61;
  }
  return result;
}

unint64_t sub_259FC8ED8()
{
  unint64_t result = qword_26A402E40;
  if (!qword_26A402E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A402E40);
  }
  return result;
}

unint64_t sub_259FC8F2C()
{
  unint64_t result = qword_26A402E48;
  if (!qword_26A402E48)
  {
    sub_25A00E520();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A402E48);
  }
  return result;
}

long long *SchemaManifest.toJSONData()()
{
  return SchemaManifest.toJSONDataWithSwiftProtobuf()();
}

long long *SchemaManifest.toJSONDataWithSwiftProtobuf()()
{
  uint64_t v2 = sub_25A00E9E0();
  uint64_t v21 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  int v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25A00E8A0();
  uint64_t v23 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25A00E520();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v22 = *v0;
  uint64_t v12 = &v22;
  sub_259FB696C();
  if (!v1)
  {
    uint64_t v19 = v2;
    uint64_t v20 = v9;
    sub_25A00E890();
    sub_259FC8F2C();
    sub_25A00E8D0();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v5);
    sub_25A00E9D0();
    uint64_t v12 = (long long *)sub_25A00E9B0();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v19);
    uint64_t v15 = v20;
    if (v14 >> 60 == 15)
    {
      sub_259FC8ED8();
      swift_allocError();
      *uint64_t v16 = 0xD00000000000001DLL;
      v16[1] = 0x800000025A00FA70;
      swift_willThrow();
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v8);
  }
  return v12;
}

uint64_t SchemaManifest.toJSONDataWithPoirot()()
{
  uint64_t v3 = *v0;
  uint64_t v2 = v0[1];
  v8[0] = v3;
  v8[1] = v2;
  uint64_t v4 = sub_259FD41E4(v8);
  if (!v1)
  {
    sub_25A00A9FC(v4, (uint64_t)&off_2707EABC0, (uint64_t)v8);
    uint64_t v5 = v8[2];
    unint64_t v6 = v8[3];
    swift_getObjectType();
    MessageSchemaDescribing.schematizing<A>(data:block:)();
    swift_unknownObjectRelease();
    sub_259FAE4A8(v5, v6);
    uint64_t v2 = v3;
    swift_release();
  }
  return v2;
}

void *sub_259FC93E0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E58);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_259FCA1B8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_259FC9508(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_259FC9570(a1, a2, a3, a4, &qword_26A402E80, MEMORY[0x263F503A0], MEMORY[0x263F503A0]);
}

uint64_t sub_259FC953C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_259FC9570(a1, a2, a3, a4, &qword_26A402E88, MEMORY[0x263F50378], MEMORY[0x263F50378]);
}

uint64_t sub_259FC9570(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_25A00EDA0();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_259FCA2C8(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_259FC97F0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_259FC9570(a1, a2, a3, a4, &qword_26A402E98, MEMORY[0x263F50460], MEMORY[0x263F50460]);
}

uint64_t sub_259FC9824(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_259FC9570(a1, a2, a3, a4, &qword_26A402E90, MEMORY[0x263F50458], MEMORY[0x263F50458]);
}

uint64_t sub_259FC9858(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_259FC9570(a1, a2, a3, a4, &qword_26A402EA0, MEMORY[0x263F50398], MEMORY[0x263F50398]);
}

uint64_t sub_259FC988C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_259FC9570(a1, a2, a3, a4, &qword_26A402EA8, MEMORY[0x263F50468], MEMORY[0x263F50468]);
}

void *sub_259FC98C0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E28);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_259FCA51C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_259FC99D0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B3251A8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_259FCA8E8(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_259FC9AF4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E70);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_259FCA9D8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_259FC9C04(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E50);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_259FCA608(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_259FC9D14(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E78);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_259FCA7F0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_259FC9E34(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E68);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_259FCA424(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_259FC9F58(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A402EB0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_259FCAAE8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_259FCA068(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E60);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_259FCA6FC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_259FCA178@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_259FC36A4();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_259FCA1B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D90);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FCA2C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FCA424(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

char *sub_259FCA51C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FCA608(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FCA6FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FCA7F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

char *sub_259FCA8E8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 24 * a1 + 32);
    size_t v6 = 24 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FCA9D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FCAACC()
{
  return 0;
}

ValueMetadata *type metadata accessor for SchemaManifestJSONError()
{
  return &type metadata for SchemaManifestJSONError;
}

uint64_t sub_259FCAAE8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A402EB8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FCABF4(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v43 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v44 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v45 = result;
  while (v6)
  {
    uint64_t v47 = (v6 - 1) & v6;
    int64_t v48 = v3;
    unint64_t v7 = __clz(__rbit64(v6)) | (v3 << 6);
LABEL_22:
    unint64_t v12 = (uint64_t *)(*(void *)(result + 48) + 16 * v7);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    uint64_t v15 = (unsigned __int8 *)(*(void *)(result + 56) + (v7 << 6));
    int v16 = *v15;
    uint64_t v17 = *((void *)v15 + 1);
    uint64_t v18 = *((void *)v15 + 3);
    int v19 = v15[32];
    int v46 = *((_DWORD *)v15 + 9);
    unsigned __int8 v49 = v15[40];
    uint64_t v20 = *((void *)v15 + 6);
    unint64_t v21 = *((void *)v15 + 7);
    uint64_t v22 = *((void *)v15 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v50 = v21;
    sub_259FAF3C4(v20, v21);
    unint64_t v23 = sub_259FE120C(v13, v14);
    LOBYTE(v21) = v24;
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0) {
      goto LABEL_47;
    }
    uint64_t v25 = (unsigned __int8 *)(*(void *)(v2 + 56) + (v23 << 6));
    if (*v25 != v16) {
      goto LABEL_47;
    }
    uint64_t v26 = v2;
    uint64_t v27 = *((void *)v25 + 2);
    uint64_t v28 = *((void *)v25 + 3);
    int v29 = v25[32];
    int v30 = *((_DWORD *)v25 + 9);
    unsigned __int8 v31 = v25[40];
    uint64_t v32 = *((void *)v25 + 6);
    unint64_t v33 = *((void *)v25 + 7);
    if (v27)
    {
      if (!v22
        || (*((void *)v25 + 1) == v17 ? (BOOL v34 = v27 == v22) : (BOOL v34 = 0),
            !v34
         && (uint64_t v35 = *((void *)v25 + 6),
             int v36 = *((_DWORD *)v25 + 9),
             char v37 = sub_25A00EE40(),
             int v30 = v36,
             uint64_t v32 = v35,
             (v37 & 1) == 0)))
      {
LABEL_47:
        swift_bridgeObjectRelease();
        uint64_t v41 = v20;
        unint64_t v38 = v50;
LABEL_48:
        sub_259FAF410(v41, v38);
        return 0;
      }
    }
    else if (v22)
    {
      goto LABEL_47;
    }
    if (v28 != v18 || v19 != v29) {
      goto LABEL_47;
    }
    if (v31)
    {
      unint64_t v38 = v50;
      if ((v49 & 1) == 0) {
        goto LABEL_50;
      }
    }
    else
    {
      if (v49) {
        goto LABEL_47;
      }
      unint64_t v38 = v50;
      if (v30 != v46)
      {
LABEL_50:
        swift_bridgeObjectRelease();
        uint64_t v41 = v20;
        goto LABEL_48;
      }
    }
    if (v33 >> 60 == 15)
    {
      if (v38 >> 60 != 15) {
        goto LABEL_51;
      }
      uint64_t v2 = v26;
      swift_bridgeObjectRelease();
      sub_259FAF410(v20, v38);
      uint64_t result = v45;
      unint64_t v6 = v47;
      int64_t v3 = v48;
    }
    else
    {
      if (v38 >> 60 == 15)
      {
LABEL_51:
        uint64_t v42 = v32;
        sub_259FAF3C4(v32, v33);
        uint64_t v41 = v20;
        sub_259FAF3C4(v20, v38);
        sub_259FAF410(v42, v33);
        sub_259FAF410(v20, v38);
        swift_bridgeObjectRelease();
        goto LABEL_48;
      }
      uint64_t v2 = v26;
      uint64_t v39 = v32;
      sub_259FAF3C4(v32, v33);
      sub_259FAF3C4(v20, v38);
      char v40 = sub_259FFCCD4(v39, v33, v20, v38);
      sub_259FAF410(v20, v38);
      sub_259FAF410(v39, v33);
      swift_bridgeObjectRelease();
      sub_259FAF410(v20, v38);
      uint64_t result = v45;
      unint64_t v6 = v47;
      int64_t v3 = v48;
      if ((v40 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v8 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_53;
  }
  if (v8 >= v44) {
    return 1;
  }
  unint64_t v9 = *(void *)(v43 + 8 * v8);
  int64_t v10 = v3 + 1;
  if (v9) {
    goto LABEL_21;
  }
  int64_t v10 = v3 + 2;
  if (v3 + 2 >= v44) {
    return 1;
  }
  unint64_t v9 = *(void *)(v43 + 8 * v10);
  if (v9) {
    goto LABEL_21;
  }
  int64_t v10 = v3 + 3;
  if (v3 + 3 >= v44) {
    return 1;
  }
  unint64_t v9 = *(void *)(v43 + 8 * v10);
  if (v9)
  {
LABEL_21:
    uint64_t v47 = (v9 - 1) & v9;
    int64_t v48 = v10;
    unint64_t v7 = __clz(__rbit64(v9)) + (v10 << 6);
    goto LABEL_22;
  }
  uint64_t v11 = v3 + 4;
  if (v3 + 4 >= v44) {
    return 1;
  }
  unint64_t v9 = *(void *)(v43 + 8 * v11);
  if (v9)
  {
    int64_t v10 = v3 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v10 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v10 >= v44) {
      return 1;
    }
    unint64_t v9 = *(void *)(v43 + 8 * v10);
    ++v11;
    if (v9) {
      goto LABEL_21;
    }
  }
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_259FCAFD4(uint64_t a1, uint64_t a2)
{
  __s1[2] = *MEMORY[0x263EF8340];
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16))
  {
    int64_t v4 = 0;
    uint64_t v96 = a1 + 64;
    uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
    uint64_t v6 = -1;
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    unint64_t v7 = v6 & *(void *)(a1 + 64);
    int64_t v97 = (unint64_t)(v5 + 63) >> 6;
    while (1)
    {
      while (1)
      {
LABEL_8:
        if (v7)
        {
          uint64_t v10 = v2;
          unint64_t v11 = __clz(__rbit64(v7));
          uint64_t v12 = (v7 - 1) & v7;
          unint64_t v13 = v11 | (v4 << 6);
        }
        else
        {
          int64_t v14 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
            goto LABEL_154;
          }
          if (v14 >= v97) {
            return 1;
          }
          unint64_t v15 = *(void *)(v96 + 8 * v14);
          ++v4;
          if (!v15)
          {
            int64_t v4 = v14 + 1;
            if (v14 + 1 >= v97) {
              return 1;
            }
            unint64_t v15 = *(void *)(v96 + 8 * v4);
            if (!v15)
            {
              int64_t v4 = v14 + 2;
              if (v14 + 2 >= v97) {
                return 1;
              }
              unint64_t v15 = *(void *)(v96 + 8 * v4);
              if (!v15)
              {
                int64_t v16 = v14 + 3;
                if (v16 >= v97) {
                  return 1;
                }
                unint64_t v15 = *(void *)(v96 + 8 * v16);
                if (!v15)
                {
                  while (1)
                  {
                    int64_t v4 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      break;
                    }
                    if (v4 >= v97) {
                      return 1;
                    }
                    unint64_t v15 = *(void *)(v96 + 8 * v4);
                    ++v16;
                    if (v15) {
                      goto LABEL_23;
                    }
                  }
LABEL_154:
                  __break(1u);
LABEL_155:
                  __break(1u);
LABEL_156:
                  __break(1u);
LABEL_157:
                  __break(1u);
LABEL_158:
                  __break(1u);
LABEL_159:
                  __break(1u);
LABEL_160:
                  __break(1u);
LABEL_161:
                  __break(1u);
LABEL_162:
                  __break(1u);
LABEL_163:
                  __break(1u);
LABEL_164:
                  __break(1u);
LABEL_165:
                  __break(1u);
LABEL_166:
                  __break(1u);
LABEL_167:
                  __break(1u);
LABEL_168:
                  __break(1u);
LABEL_169:
                  __break(1u);
LABEL_170:
                  __break(1u);
LABEL_171:
                  __break(1u);
LABEL_172:
                  __break(1u);
LABEL_173:
                  __break(1u);
                }
                int64_t v4 = v16;
              }
            }
          }
LABEL_23:
          uint64_t v10 = v2;
          uint64_t v12 = (v15 - 1) & v15;
          unint64_t v13 = __clz(__rbit64(v15)) + (v4 << 6);
        }
        uint64_t v17 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v13);
        uint64_t v18 = *v17;
        uint64_t v19 = v17[1];
        uint64_t v20 = (uint64_t *)(*(void *)(v3 + 56) + 32 * v13);
        uint64_t v21 = *v20;
        uint64_t v102 = v20[1];
        uint64_t v22 = v20[2];
        unint64_t v23 = v20[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v101 = v22;
        unint64_t v103 = v23;
        sub_259FAF3C4(v22, v23);
        uint64_t v2 = v10;
        unint64_t v24 = sub_259FE120C(v18, v19);
        LOBYTE(v22) = v25;
        swift_bridgeObjectRelease();
        if ((v22 & 1) == 0) {
          goto LABEL_147;
        }
        unint64_t v99 = v12;
        int64_t v100 = v4;
        uint64_t v26 = (uint64_t *)(*(void *)(v10 + 56) + 32 * v24);
        uint64_t v28 = *v26;
        uint64_t v27 = v26[1];
        uint64_t v30 = v26[2];
        unint64_t v29 = v26[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_259FAF3C4(v30, v29);
        if ((sub_259FCABF4(v28, v21) & 1) == 0 || (sub_259FCD684(v27, v102) & 1) == 0) {
          goto LABEL_146;
        }
        if (v29 >> 60 != 15) {
          break;
        }
        unint64_t v8 = v103;
        uint64_t v9 = v101;
        if (v103 >> 60 != 15) {
          goto LABEL_144;
        }
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_259FAF410(v30, v29);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_259FAF410(v9, v8);
        uint64_t v3 = a1;
        unint64_t v7 = v99;
        int64_t v4 = v100;
      }
      unint64_t v8 = v103;
      uint64_t v9 = v101;
      if (v103 >> 60 == 15) {
        break;
      }
      uint64_t v31 = 0;
      switch(v29 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v30), v30)) {
            goto LABEL_150;
          }
          uint64_t v31 = HIDWORD(v30) - (int)v30;
LABEL_34:
          sub_259FAE450(v30, v29);
          sub_259FAE450(v30, v29);
          break;
        case 2uLL:
          uint64_t v33 = *(void *)(v30 + 16);
          uint64_t v32 = *(void *)(v30 + 24);
          uint64_t v31 = v32 - v33;
          if (!__OFSUB__(v32, v33)) {
            goto LABEL_34;
          }
          goto LABEL_151;
        case 3uLL:
          break;
        default:
          uint64_t v31 = BYTE6(v29);
          break;
      }
      unint64_t v34 = v103 >> 62;
      switch(v103 >> 62)
      {
        case 1uLL:
          LODWORD(v35) = HIDWORD(v101) - v101;
          if (__OFSUB__(HIDWORD(v101), v101)) {
            goto LABEL_152;
          }
          uint64_t v35 = (int)v35;
LABEL_40:
          if (v31 != v35)
          {
LABEL_145:
            sub_259FAF410(v30, v29);
            sub_259FAF410(v30, v29);
            goto LABEL_146;
          }
          if (v31 < 1)
          {
LABEL_51:
            sub_259FAF410(v30, v29);
            sub_259FAF410(v30, v29);
            uint64_t v2 = a2;
            unint64_t v8 = v103;
            goto LABEL_7;
          }
          switch(v29 >> 62)
          {
            case 1uLL:
              if ((int)v30 > v30 >> 32) {
                goto LABEL_155;
              }
              sub_259FAE450(v101, v103);
              int64_t v44 = (char *)sub_25A00E270();
              if (!v44) {
                goto LABEL_56;
              }
              uint64_t v45 = sub_25A00E290();
              if (__OFSUB__((int)v30, v45)) {
                goto LABEL_157;
              }
              v44 += (int)v30 - v45;
LABEL_56:
              uint64_t v2 = a2;
              sub_25A00E280();
              if (!v34)
              {
                __s1[0] = v101;
                unint64_t v59 = v103;
                LODWORD(__s1[1]) = v103;
                WORD2(__s1[1]) = WORD2(v103);
                if (!v44) {
                  goto LABEL_181;
                }
                int v58 = memcmp(v44, __s1, BYTE6(v103));
LABEL_139:
                sub_259FAF410(v101, v59);
LABEL_140:
                sub_259FAF410(v30, v29);
                sub_259FAF410(v30, v29);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_259FAF410(v30, v29);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_259FAF410(v101, v59);
LABEL_141:
                uint64_t v3 = a1;
                unint64_t v7 = v99;
                int64_t v4 = v100;
                if (v58) {
                  return 0;
                }
                goto LABEL_8;
              }
              if (v34 == 1)
              {
                if (v101 >> 32 < (int)v101) {
                  goto LABEL_166;
                }
                swift_retain();
                uint64_t v46 = sub_25A00E270();
                if (v46)
                {
                  uint64_t v47 = v46;
                  uint64_t v48 = sub_25A00E290();
                  if (__OFSUB__((int)v101, v48)) {
                    goto LABEL_173;
                  }
                  unsigned __int8 v49 = (const void *)(v47 + (int)v101 - v48);
                }
                else
                {
                  unsigned __int8 v49 = 0;
                }
                uint64_t v89 = sub_25A00E280();
                if (v89 >= (v101 >> 32) - (int)v101) {
                  size_t v90 = (v101 >> 32) - (int)v101;
                }
                else {
                  size_t v90 = v89;
                }
                if (!v44) {
                  goto LABEL_186;
                }
                uint64_t v2 = a2;
                if (!v49) {
                  goto LABEL_187;
                }
                int v58 = memcmp(v44, v49, v90);
                unint64_t v59 = v103;
                sub_259FAF410(v101, v103);
                goto LABEL_139;
              }
              uint64_t v81 = *(void *)(v101 + 16);
              uint64_t v94 = *(char **)(v101 + 24);
              swift_retain();
              swift_retain();
              uint64_t v82 = (char *)sub_25A00E270();
              if (v82)
              {
                uint64_t v83 = sub_25A00E290();
                if (__OFSUB__(v81, v83)) {
                  goto LABEL_172;
                }
                v82 += v81 - v83;
              }
              BOOL v38 = __OFSUB__(v94, v81);
              uint64_t v84 = &v94[-v81];
              if (v38) {
                goto LABEL_167;
              }
              uint64_t v85 = sub_25A00E280();
              if (v85 >= (uint64_t)v84) {
                size_t v86 = (size_t)v84;
              }
              else {
                size_t v86 = v85;
              }
              if (!v44) {
                goto LABEL_182;
              }
              uint64_t v2 = a2;
              if (!v82) {
                goto LABEL_183;
              }
              int v74 = memcmp(v44, v82, v86);
LABEL_121:
              swift_release();
              swift_release();
              sub_259FAF410(v101, v103);
              sub_259FAF410(v30, v29);
              sub_259FAF410(v30, v29);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_259FAF410(v30, v29);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_259FAF410(v101, v103);
LABEL_122:
              uint64_t v3 = a1;
              unint64_t v7 = v99;
              int64_t v4 = v100;
              if (v74) {
                return 0;
              }
              break;
            case 2uLL:
              uint64_t v50 = *(void *)(v30 + 16);
              sub_259FAF3C4(v101, v103);
              swift_retain();
              swift_retain();
              uint64_t v51 = sub_25A00E270();
              if (v51)
              {
                uint64_t v52 = v51;
                uint64_t v53 = sub_25A00E290();
                if (__OFSUB__(v50, v53)) {
                  goto LABEL_156;
                }
                uint64_t v93 = (void *)(v52 + v50 - v53);
                uint64_t v2 = a2;
              }
              else
              {
                uint64_t v93 = 0;
                uint64_t v2 = a2;
              }
              sub_25A00E280();
              if (!v34)
              {
                __s1[0] = v101;
                unint64_t v59 = v103;
                LODWORD(__s1[1]) = v103;
                WORD2(__s1[1]) = WORD2(v103);
                if (!v93) {
                  goto LABEL_178;
                }
                int v58 = memcmp(v93, __s1, BYTE6(v103));
LABEL_131:
                swift_release();
                swift_release();
                goto LABEL_139;
              }
              if (v34 == 1)
              {
                if (v101 >> 32 < (int)v101) {
                  goto LABEL_163;
                }
                swift_retain();
                uint64_t v60 = sub_25A00E270();
                if (v60)
                {
                  uint64_t v61 = v60;
                  uint64_t v62 = sub_25A00E290();
                  if (__OFSUB__((int)v101, v62)) {
                    goto LABEL_171;
                  }
                  unint64_t v63 = (const void *)(v61 + (int)v101 - v62);
                }
                else
                {
                  unint64_t v63 = 0;
                }
                uint64_t v87 = sub_25A00E280();
                if (v87 >= (v101 >> 32) - (int)v101) {
                  size_t v88 = (v101 >> 32) - (int)v101;
                }
                else {
                  size_t v88 = v87;
                }
                if (!v93) {
                  goto LABEL_184;
                }
                uint64_t v2 = a2;
                if (!v63) {
                  goto LABEL_185;
                }
                int v58 = memcmp(v93, v63, v88);
                unint64_t v59 = v103;
                sub_259FAF410(v101, v103);
                goto LABEL_131;
              }
              uint64_t v75 = *(void *)(v101 + 16);
              uint64_t v92 = *(void *)(v101 + 24);
              swift_retain();
              swift_retain();
              unint64_t v76 = (char *)sub_25A00E270();
              if (v76)
              {
                uint64_t v77 = sub_25A00E290();
                if (__OFSUB__(v75, v77)) {
                  goto LABEL_170;
                }
                v76 += v75 - v77;
              }
              BOOL v38 = __OFSUB__(v92, v75);
              int64_t v78 = v92 - v75;
              if (v38) {
                goto LABEL_165;
              }
              uint64_t v79 = sub_25A00E280();
              if (v79 >= v78) {
                size_t v80 = v78;
              }
              else {
                size_t v80 = v79;
              }
              if (!v93) {
                goto LABEL_179;
              }
              uint64_t v2 = a2;
              if (!v76) {
                goto LABEL_180;
              }
              int v74 = memcmp(v93, v76, v80);
              swift_release();
              swift_release();
              goto LABEL_121;
            case 3uLL:
              memset(__s1, 0, 14);
              uint64_t v2 = a2;
              if (!v34) {
                goto LABEL_74;
              }
              if (v34 == 1)
              {
                uint64_t v39 = (v101 >> 32) - (int)v101;
                if (v101 >> 32 < (int)v101) {
                  goto LABEL_159;
                }
                sub_259FAE450(v101, v103);
                uint64_t v54 = sub_25A00E270();
                if (!v54) {
                  goto LABEL_175;
                }
                uint64_t v41 = v54;
                uint64_t v55 = sub_25A00E290();
                uint64_t v43 = (int)v101 - v55;
                if (__OFSUB__((int)v101, v55)) {
                  goto LABEL_162;
                }
LABEL_70:
                uint64_t v56 = sub_25A00E280();
                if (v56 >= v39) {
                  size_t v57 = v39;
                }
                else {
                  size_t v57 = v56;
                }
                int v58 = memcmp(__s1, (const void *)(v41 + v43), v57);
                sub_259FAF410(v101, v103);
                sub_259FAF410(v30, v29);
                sub_259FAF410(v30, v29);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_259FAF410(v30, v29);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_259FAF410(v101, v103);
                uint64_t v2 = a2;
                goto LABEL_141;
              }
              uint64_t v71 = *(void *)(v101 + 16);
              uint64_t v70 = *(void *)(v101 + 24);
              sub_259FAF3C4(v101, v103);
              swift_retain();
              swift_retain();
              long long v66 = (char *)sub_25A00E270();
              if (v66)
              {
                uint64_t v72 = sub_25A00E290();
                if (__OFSUB__(v71, v72)) {
                  goto LABEL_169;
                }
                v66 += v71 - v72;
              }
              BOOL v38 = __OFSUB__(v70, v71);
              int64_t v68 = v70 - v71;
              if (v38) {
                goto LABEL_164;
              }
              uint64_t v69 = sub_25A00E280();
              if (!v66) {
                goto LABEL_177;
              }
LABEL_93:
              if (v69 >= v68) {
                size_t v73 = v68;
              }
              else {
                size_t v73 = v69;
              }
              int v74 = memcmp(__s1, v66, v73);
              swift_release();
              swift_release();
              sub_259FAF410(v101, v103);
              sub_259FAF410(v30, v29);
              sub_259FAF410(v30, v29);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_259FAF410(v30, v29);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_259FAF410(v101, v103);
              uint64_t v2 = a2;
              goto LABEL_122;
            default:
              __s1[0] = v30;
              LOWORD(__s1[1]) = v29;
              BYTE2(__s1[1]) = BYTE2(v29);
              BYTE3(__s1[1]) = BYTE3(v29);
              BYTE4(__s1[1]) = BYTE4(v29);
              BYTE5(__s1[1]) = BYTE5(v29);
              uint64_t v2 = a2;
              if (!v34)
              {
LABEL_74:
                uint64_t __s2 = v101;
                int v105 = v103;
                __int16 v106 = WORD2(v103);
                unint64_t v59 = v103;
                int v58 = memcmp(__s1, &__s2, BYTE6(v103));
                goto LABEL_140;
              }
              if (v34 == 1)
              {
                uint64_t v39 = (v101 >> 32) - (int)v101;
                if (v101 >> 32 < (int)v101) {
                  goto LABEL_158;
                }
                sub_259FAE450(v101, v103);
                uint64_t v40 = sub_25A00E270();
                if (!v40)
                {
                  sub_25A00E280();
                  __break(1u);
LABEL_175:
                  sub_25A00E280();
                  __break(1u);
LABEL_176:
                  __break(1u);
LABEL_177:
                  __break(1u);
LABEL_178:
                  __break(1u);
LABEL_179:
                  __break(1u);
LABEL_180:
                  __break(1u);
LABEL_181:
                  __break(1u);
LABEL_182:
                  __break(1u);
LABEL_183:
                  __break(1u);
LABEL_184:
                  __break(1u);
LABEL_185:
                  __break(1u);
LABEL_186:
                  __break(1u);
LABEL_187:
                  __break(1u);
                  JUMPOUT(0x259FCBD38);
                }
                uint64_t v41 = v40;
                uint64_t v42 = sub_25A00E290();
                uint64_t v43 = (int)v101 - v42;
                if (__OFSUB__((int)v101, v42)) {
                  goto LABEL_161;
                }
                goto LABEL_70;
              }
              uint64_t v65 = *(void *)(v101 + 16);
              uint64_t v64 = *(void *)(v101 + 24);
              sub_259FAF3C4(v101, v103);
              swift_retain();
              swift_retain();
              long long v66 = (char *)sub_25A00E270();
              if (v66)
              {
                uint64_t v67 = sub_25A00E290();
                if (__OFSUB__(v65, v67)) {
                  goto LABEL_168;
                }
                v66 += v65 - v67;
              }
              BOOL v38 = __OFSUB__(v64, v65);
              int64_t v68 = v64 - v65;
              if (v38) {
                goto LABEL_160;
              }
              uint64_t v69 = sub_25A00E280();
              if (!v66) {
                goto LABEL_176;
              }
              goto LABEL_93;
          }
          break;
        case 2uLL:
          uint64_t v37 = *(void *)(v101 + 16);
          uint64_t v36 = *(void *)(v101 + 24);
          BOOL v38 = __OFSUB__(v36, v37);
          uint64_t v35 = v36 - v37;
          if (!v38) {
            goto LABEL_40;
          }
          goto LABEL_153;
        case 3uLL:
          if (!v31) {
            goto LABEL_51;
          }
          goto LABEL_145;
        default:
          uint64_t v35 = BYTE6(v103);
          goto LABEL_40;
      }
    }
LABEL_144:
    sub_259FAF3C4(v30, v29);
    sub_259FAF3C4(v9, v8);
    sub_259FAF410(v30, v29);
    sub_259FAF410(v9, v8);
LABEL_146:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259FAF410(v30, v29);
LABEL_147:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259FAF410(v101, v103);
  }
  return 0;
}

uint64_t sub_259FCBD68(uint64_t a1, uint64_t a2)
{
  __s1[2] = *MEMORY[0x263EF8340];
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v114 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v115 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      uint64_t v119 = (v7 - 1) & v7;
      unint64_t v9 = __clz(__rbit64(v7)) | (v4 << 6);
    }
    else
    {
      int64_t v10 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        __break(1u);
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
LABEL_155:
        __break(1u);
LABEL_156:
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        __break(1u);
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
LABEL_164:
        __break(1u);
LABEL_165:
        __break(1u);
LABEL_166:
        __break(1u);
LABEL_167:
        __break(1u);
LABEL_168:
        __break(1u);
LABEL_169:
        __break(1u);
LABEL_170:
        __break(1u);
LABEL_171:
        __break(1u);
LABEL_172:
        __break(1u);
LABEL_173:
        __break(1u);
      }
      if (v10 >= v115) {
        return 1;
      }
      unint64_t v11 = *(void *)(v114 + 8 * v10);
      ++v4;
      if (!v11)
      {
        int64_t v4 = v10 + 1;
        if (v10 + 1 >= v115) {
          return 1;
        }
        unint64_t v11 = *(void *)(v114 + 8 * v4);
        if (!v11)
        {
          int64_t v4 = v10 + 2;
          if (v10 + 2 >= v115) {
            return 1;
          }
          unint64_t v11 = *(void *)(v114 + 8 * v4);
          if (!v11)
          {
            int64_t v12 = v10 + 3;
            if (v12 >= v115) {
              return 1;
            }
            unint64_t v11 = *(void *)(v114 + 8 * v12);
            if (!v11)
            {
              while (1)
              {
                int64_t v4 = v12 + 1;
                if (__OFADD__(v12, 1)) {
                  goto LABEL_154;
                }
                if (v4 >= v115) {
                  return 1;
                }
                unint64_t v11 = *(void *)(v114 + 8 * v4);
                ++v12;
                if (v11) {
                  goto LABEL_23;
                }
              }
            }
            int64_t v4 = v12;
          }
        }
      }
LABEL_23:
      uint64_t v119 = (v11 - 1) & v11;
      unint64_t v9 = __clz(__rbit64(v11)) + (v4 << 6);
    }
    unint64_t v13 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v9);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    int64_t v16 = (uint64_t *)(*(void *)(v3 + 56) + 32 * v9);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    unint64_t v20 = v16[2];
    uint64_t v19 = v16[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v17, v20);
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_259FE120C(v14, v15);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0) {
      goto LABEL_147;
    }
    int64_t v118 = v4;
    unint64_t v24 = (uint64_t *)(*(void *)(v2 + 56) + 32 * v21);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    unint64_t v28 = v24[2];
    uint64_t v27 = v24[3];
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v26, v28);
    swift_bridgeObjectRetain();
    if ((sub_259FCCA0C(v25, v18) & 1) == 0) {
      goto LABEL_146;
    }
    if (v28 >> 60 == 15)
    {
      if (v20 >> 60 != 15) {
        break;
      }
      goto LABEL_7;
    }
    if (v20 >> 60 == 15) {
      break;
    }
    uint64_t v29 = 0;
    switch(v28 >> 62)
    {
      case 1uLL:
        LODWORD(v29) = HIDWORD(v26) - v26;
        if (__OFSUB__(HIDWORD(v26), v26)) {
          goto LABEL_150;
        }
        uint64_t v29 = (int)v29;
LABEL_33:
        unint64_t v33 = v20 >> 62;
        switch(v20 >> 62)
        {
          case 1uLL:
            LODWORD(v34) = HIDWORD(v17) - v17;
            if (__OFSUB__(HIDWORD(v17), v17)) {
              goto LABEL_152;
            }
            uint64_t v34 = (int)v34;
LABEL_38:
            if (v29 != v34) {
              goto LABEL_146;
            }
            if (v29 < 1) {
              goto LABEL_7;
            }
            break;
          case 2uLL:
            uint64_t v36 = *(void *)(v17 + 16);
            uint64_t v35 = *(void *)(v17 + 24);
            BOOL v32 = __OFSUB__(v35, v36);
            uint64_t v34 = v35 - v36;
            if (!v32) {
              goto LABEL_38;
            }
            goto LABEL_153;
          case 3uLL:
            if (v29) {
              goto LABEL_146;
            }
            goto LABEL_7;
          default:
            uint64_t v34 = BYTE6(v20);
            goto LABEL_38;
        }
        break;
      case 2uLL:
        uint64_t v31 = *(void *)(v26 + 16);
        uint64_t v30 = *(void *)(v26 + 24);
        BOOL v32 = __OFSUB__(v30, v31);
        uint64_t v29 = v30 - v31;
        if (!v32) {
          goto LABEL_33;
        }
        goto LABEL_151;
      case 3uLL:
        goto LABEL_33;
      default:
        uint64_t v29 = BYTE6(v28);
        goto LABEL_33;
    }
    switch(v28 >> 62)
    {
      case 1uLL:
        if ((int)v26 > v26 >> 32) {
          goto LABEL_155;
        }
        sub_259FAE450(v26, v28);
        sub_259FAF3C4(v26, v28);
        sub_259FAF3C4(v17, v20);
        uint64_t v39 = sub_25A00E270();
        if (v39)
        {
          uint64_t v101 = (char *)v39;
          uint64_t v40 = sub_25A00E290();
          if (__OFSUB__((int)v26, v40)) {
            goto LABEL_157;
          }
          unint64_t v109 = &v101[(int)v26 - v40];
          sub_25A00E280();
          if (!v33)
          {
LABEL_81:
            __s1[0] = v17;
            LOWORD(__s1[1]) = v20;
            BYTE2(__s1[1]) = BYTE2(v20);
            BYTE3(__s1[1]) = BYTE3(v20);
            BYTE4(__s1[1]) = BYTE4(v20);
            BYTE5(__s1[1]) = BYTE5(v20);
            if (!v109) {
              goto LABEL_176;
            }
            int v49 = memcmp(v109, __s1, BYTE6(v20));
            goto LABEL_140;
          }
        }
        else
        {
          unint64_t v109 = 0;
          sub_25A00E280();
          if (!v33) {
            goto LABEL_81;
          }
        }
        if (v33 == 1)
        {
          if (v17 >> 32 < (int)v17) {
            goto LABEL_166;
          }
          swift_retain();
          uint64_t v41 = sub_25A00E270();
          if (v41)
          {
            unint64_t v95 = (char *)v41;
            uint64_t v42 = sub_25A00E290();
            if (__OFSUB__((int)v17, v42)) {
              goto LABEL_173;
            }
            uint64_t v43 = &v95[(int)v17 - v42];
          }
          else
          {
            uint64_t v43 = 0;
          }
          uint64_t v90 = sub_25A00E280();
          int64_t v91 = (v17 >> 32) - (int)v17;
          if (v90 < v91) {
            int64_t v91 = v90;
          }
          if (!v109) {
            goto LABEL_186;
          }
          if (!v43) {
            goto LABEL_187;
          }
          int v49 = memcmp(v109, v43, v91);
          sub_259FAF410(v17, v20);
LABEL_140:
          sub_259FAF410(v17, v20);
          uint64_t v50 = v26;
          unint64_t v51 = v28;
LABEL_141:
          sub_259FAF410(v50, v51);
          sub_259FAF410(v26, v28);
          if (v49) {
            goto LABEL_146;
          }
          break;
        }
        uint64_t v98 = *(char **)(v17 + 24);
        __int16 v106 = *(char **)(v17 + 16);
        swift_retain();
        swift_retain();
        uint64_t v70 = sub_25A00E270();
        if (v70)
        {
          uint64_t v71 = v70;
          uint64_t v72 = sub_25A00E290();
          size_t v73 = v106;
          if (__OFSUB__(v106, v72)) {
            goto LABEL_172;
          }
          int v74 = &v106[v71 - v72];
        }
        else
        {
          int v74 = 0;
          size_t v73 = v106;
        }
        uint64_t v107 = v74;
        uint64_t v87 = (char *)(v98 - v73);
        if (__OFSUB__(v98, v73)) {
          goto LABEL_167;
        }
        uint64_t v88 = sub_25A00E280();
        if (v88 >= (uint64_t)v87) {
          size_t v89 = (size_t)v87;
        }
        else {
          size_t v89 = v88;
        }
        if (!v109) {
          goto LABEL_184;
        }
        if (!v107) {
          goto LABEL_185;
        }
        int v79 = memcmp(v109, v107, v89);
LABEL_131:
        swift_release();
        swift_release();
        sub_259FAF410(v17, v20);
        uint64_t v80 = v26;
        unint64_t v81 = v28;
LABEL_132:
        sub_259FAF410(v80, v81);
        sub_259FAF410(v26, v28);
        if (v79) {
          goto LABEL_146;
        }
        break;
      case 2uLL:
        uint64_t v102 = *(char **)(v26 + 16);
        sub_259FAE450(v26, v28);
        sub_259FAF3C4(v26, v28);
        sub_259FAF3C4(v17, v20);
        swift_retain();
        swift_retain();
        uint64_t v44 = sub_25A00E270();
        if (v44)
        {
          uint64_t v96 = (void *)v44;
          uint64_t v45 = sub_25A00E290();
          if (__OFSUB__(v102, v45)) {
            goto LABEL_156;
          }
          unint64_t v103 = &v102[(void)v96 - v45];
        }
        else
        {
          unint64_t v103 = 0;
        }
        sub_25A00E280();
        if (!v33)
        {
          __s1[0] = v17;
          LOWORD(__s1[1]) = v20;
          BYTE2(__s1[1]) = BYTE2(v20);
          BYTE3(__s1[1]) = BYTE3(v20);
          BYTE4(__s1[1]) = BYTE4(v20);
          BYTE5(__s1[1]) = BYTE5(v20);
          if (!v103) {
            goto LABEL_177;
          }
          int v49 = memcmp(v103, __s1, BYTE6(v20));
LABEL_122:
          swift_release();
          swift_release();
          goto LABEL_140;
        }
        if (v33 == 1)
        {
          if (v17 >> 32 < (int)v17) {
            goto LABEL_160;
          }
          swift_retain();
          uint64_t v52 = sub_25A00E270();
          if (v52)
          {
            uint64_t v93 = v52;
            uint64_t v53 = sub_25A00E290();
            if (__OFSUB__((int)v17, v53)) {
              goto LABEL_171;
            }
            uint64_t v54 = (const void *)(v93 + (int)v17 - v53);
          }
          else
          {
            uint64_t v54 = 0;
          }
          uint64_t v85 = sub_25A00E280();
          int64_t v86 = (v17 >> 32) - (int)v17;
          if (v85 < v86) {
            int64_t v86 = v85;
          }
          if (!v103) {
            goto LABEL_182;
          }
          if (!v54) {
            goto LABEL_183;
          }
          int v49 = memcmp(v103, v54, v86);
          sub_259FAF410(v17, v20);
          goto LABEL_122;
        }
        uint64_t v94 = *(void *)(v17 + 24);
        int64_t v97 = *(char **)(v17 + 16);
        swift_retain();
        swift_retain();
        uint64_t v65 = sub_25A00E270();
        if (v65)
        {
          uint64_t v66 = v65;
          uint64_t v67 = sub_25A00E290();
          int64_t v68 = v97;
          if (__OFSUB__(v97, v67)) {
            goto LABEL_170;
          }
          uint64_t v69 = &v97[v66 - v67];
        }
        else
        {
          uint64_t v69 = 0;
          int64_t v68 = v97;
        }
        unint64_t v99 = v69;
        int64_t v82 = v94 - (void)v68;
        if (__OFSUB__(v94, v68)) {
          goto LABEL_165;
        }
        uint64_t v83 = sub_25A00E280();
        if (v83 >= v82) {
          size_t v84 = v82;
        }
        else {
          size_t v84 = v83;
        }
        if (!v103) {
          goto LABEL_180;
        }
        if (!v99) {
          goto LABEL_181;
        }
        int v79 = memcmp(v103, v99, v84);
        swift_release();
        swift_release();
        goto LABEL_131;
      case 3uLL:
        memset(__s1, 0, 14);
        if (!v33) {
          goto LABEL_71;
        }
        if (v33 == 1)
        {
          if (v17 >> 32 < (int)v17) {
            goto LABEL_159;
          }
          uint64_t v108 = (void *)((v17 >> 32) - (int)v17);
          sub_259FAF3C4(v26, v28);
          sub_259FAF3C4(v17, v20);
          int64_t v100 = (char *)sub_25A00E270();
          if (!v100) {
            goto LABEL_175;
          }
          uint64_t v46 = sub_25A00E290();
          uint64_t v38 = (int)v17 - v46;
          if (__OFSUB__((int)v17, v46)) {
            goto LABEL_164;
          }
LABEL_67:
          uint64_t v47 = sub_25A00E280();
          if (v47 >= (uint64_t)v108) {
            size_t v48 = (size_t)v108;
          }
          else {
            size_t v48 = v47;
          }
          int v49 = memcmp(__s1, &v100[v38], v48);
          uint64_t v50 = v17;
          unint64_t v51 = v20;
          goto LABEL_141;
        }
        int v105 = *(char **)(v17 + 24);
        uint64_t v111 = *(char **)(v17 + 16);
        sub_259FAF3C4(v26, v28);
        sub_259FAF3C4(v17, v20);
        swift_retain();
        swift_retain();
        uint64_t v60 = sub_25A00E270();
        if (v60)
        {
          uint64_t v61 = v60;
          uint64_t v62 = sub_25A00E290();
          unint64_t v63 = v111;
          if (__OFSUB__(v111, v62)) {
            goto LABEL_169;
          }
          uint64_t v64 = &v111[v61 - v62];
        }
        else
        {
          uint64_t v64 = 0;
          unint64_t v63 = v111;
        }
        long long v113 = v64;
        uint64_t v75 = (char *)(v105 - v63);
        if (__OFSUB__(v105, v63)) {
          goto LABEL_162;
        }
        uint64_t v76 = sub_25A00E280();
        uint64_t v77 = v113;
        if (!v113) {
          goto LABEL_179;
        }
LABEL_104:
        if (v76 >= (uint64_t)v75) {
          size_t v78 = (size_t)v75;
        }
        else {
          size_t v78 = v76;
        }
        int v79 = memcmp(__s1, v77, v78);
        swift_release();
        swift_release();
        uint64_t v80 = v17;
        unint64_t v81 = v20;
        goto LABEL_132;
      default:
        __s1[0] = v26;
        LOWORD(__s1[1]) = v28;
        BYTE2(__s1[1]) = BYTE2(v28);
        BYTE3(__s1[1]) = BYTE3(v28);
        BYTE4(__s1[1]) = BYTE4(v28);
        BYTE5(__s1[1]) = BYTE5(v28);
        if (!v33)
        {
LABEL_71:
          uint64_t __s2 = v17;
          __int16 v121 = v20;
          char v122 = BYTE2(v20);
          char v123 = BYTE3(v20);
          char v124 = BYTE4(v20);
          char v125 = BYTE5(v20);
          if (memcmp(__s1, &__s2, BYTE6(v20))) {
            goto LABEL_146;
          }
          break;
        }
        if (v33 == 1)
        {
          if (v17 >> 32 < (int)v17) {
            goto LABEL_158;
          }
          uint64_t v108 = (void *)((v17 >> 32) - (int)v17);
          sub_259FAF3C4(v26, v28);
          sub_259FAF3C4(v17, v20);
          int64_t v100 = (char *)sub_25A00E270();
          if (!v100)
          {
            sub_25A00E280();
            __break(1u);
LABEL_175:
            sub_25A00E280();
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
LABEL_182:
            __break(1u);
LABEL_183:
            __break(1u);
LABEL_184:
            __break(1u);
LABEL_185:
            __break(1u);
LABEL_186:
            __break(1u);
LABEL_187:
            __break(1u);
            JUMPOUT(0x259FCC9DCLL);
          }
          uint64_t v37 = sub_25A00E290();
          uint64_t v38 = (int)v17 - v37;
          if (__OFSUB__((int)v17, v37)) {
            goto LABEL_163;
          }
          goto LABEL_67;
        }
        long long v104 = *(char **)(v17 + 24);
        uint64_t v110 = *(char **)(v17 + 16);
        sub_259FAF3C4(v26, v28);
        sub_259FAF3C4(v17, v20);
        swift_retain();
        swift_retain();
        uint64_t v55 = sub_25A00E270();
        if (v55)
        {
          uint64_t v56 = v55;
          uint64_t v57 = sub_25A00E290();
          int v58 = v110;
          if (__OFSUB__(v110, v57)) {
            goto LABEL_168;
          }
          unint64_t v59 = &v110[v56 - v57];
        }
        else
        {
          unint64_t v59 = 0;
          int v58 = v110;
        }
        uint64_t v112 = v59;
        uint64_t v75 = (char *)(v104 - v58);
        if (__OFSUB__(v104, v58)) {
          goto LABEL_161;
        }
        uint64_t v76 = sub_25A00E280();
        uint64_t v77 = v112;
        if (!v112) {
          goto LABEL_178;
        }
        goto LABEL_104;
    }
LABEL_7:
    char v8 = sub_259FCCBA4(v27, v19);
    swift_bridgeObjectRelease();
    sub_259FAF410(v26, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259FAF410(v17, v20);
    swift_bridgeObjectRelease();
    uint64_t v3 = a1;
    uint64_t v2 = a2;
    int64_t v4 = v118;
    unint64_t v7 = v119;
    if ((v8 & 1) == 0) {
      return 0;
    }
  }
  sub_259FAF3C4(v26, v28);
  sub_259FAF3C4(v17, v20);
  sub_259FAF410(v26, v28);
  sub_259FAF410(v17, v20);
LABEL_146:
  swift_bridgeObjectRelease();
  sub_259FAF410(v26, v28);
  swift_bridgeObjectRelease();
LABEL_147:
  swift_bridgeObjectRelease();
  sub_259FAF410(v17, v20);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_259FCCA0C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_259FE120C(v16, v17);
    char v21 = v20;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || *(void *)(*(void *)(a2 + 56) + 8 * v19) != v18) {
      return 0;
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_259FCCBA4(uint64_t a1, uint64_t a2)
{
  __s1[2] = *MEMORY[0x263EF8340];
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v87 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v88 = (unint64_t)(v5 + 63) >> 6;
  while (2)
  {
    if (v7)
    {
      unint64_t v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v9 = v8 | (v4 << 6);
    }
    else
    {
      int64_t v10 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        __break(1u);
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
LABEL_155:
        __break(1u);
LABEL_156:
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        __break(1u);
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
LABEL_164:
        __break(1u);
      }
      if (v10 >= v88) {
        return 1;
      }
      unint64_t v11 = *(void *)(v87 + 8 * v10);
      ++v4;
      if (!v11)
      {
        int64_t v4 = v10 + 1;
        if (v10 + 1 >= v88) {
          return 1;
        }
        unint64_t v11 = *(void *)(v87 + 8 * v4);
        if (!v11)
        {
          int64_t v4 = v10 + 2;
          if (v10 + 2 >= v88) {
            return 1;
          }
          unint64_t v11 = *(void *)(v87 + 8 * v4);
          if (!v11)
          {
            int64_t v12 = v10 + 3;
            if (v12 >= v88) {
              return 1;
            }
            unint64_t v11 = *(void *)(v87 + 8 * v12);
            if (!v11)
            {
              while (1)
              {
                int64_t v4 = v12 + 1;
                if (__OFADD__(v12, 1)) {
                  goto LABEL_146;
                }
                if (v4 >= v88) {
                  return 1;
                }
                unint64_t v11 = *(void *)(v87 + 8 * v4);
                ++v12;
                if (v11) {
                  goto LABEL_23;
                }
              }
            }
            int64_t v4 = v12;
          }
        }
      }
LABEL_23:
      unint64_t v7 = (v11 - 1) & v11;
      unint64_t v9 = __clz(__rbit64(v11)) + (v4 << 6);
    }
    uint64_t v13 = *(void *)(*(void *)(v3 + 48) + 8 * v9);
    int64_t v14 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v9);
    uint64_t v16 = *v14;
    unint64_t v15 = v14[1];
    unint64_t v17 = sub_259FE1284(v13);
    if ((v18 & 1) == 0)
    {
      sub_259FAE450(v16, v15);
      goto LABEL_138;
    }
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 56) + 16 * v17);
    uint64_t v21 = *v19;
    unint64_t v20 = v19[1];
    uint64_t v22 = 0;
    switch(v20 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v21), v21)) {
          goto LABEL_141;
        }
        uint64_t v22 = HIDWORD(v21) - (int)v21;
LABEL_30:
        sub_259FAE450(v21, v20);
        break;
      case 2uLL:
        uint64_t v24 = *(void *)(v21 + 16);
        uint64_t v23 = *(void *)(v21 + 24);
        uint64_t v22 = v23 - v24;
        if (!__OFSUB__(v23, v24)) {
          goto LABEL_30;
        }
        goto LABEL_142;
      case 3uLL:
        break;
      default:
        uint64_t v22 = BYTE6(v20);
        break;
    }
    unint64_t v25 = v15 >> 62;
    switch(v15 >> 62)
    {
      case 1uLL:
        LODWORD(v26) = HIDWORD(v16) - v16;
        if (__OFSUB__(HIDWORD(v16), v16)) {
          goto LABEL_143;
        }
        uint64_t v26 = (int)v26;
LABEL_36:
        if (v22 == v26)
        {
          if (v22 < 1)
          {
LABEL_7:
            sub_259FAE450(v16, v15);
            sub_259FAE4A8(v21, v20);
            sub_259FAE4A8(v16, v15);
            uint64_t v3 = a1;
          }
          else
          {
            switch(v20 >> 62)
            {
              case 1uLL:
                if ((int)v21 > v21 >> 32) {
                  goto LABEL_145;
                }
                sub_259FAE450(v16, v15);
                uint64_t v35 = (char *)sub_25A00E270();
                if (!v35) {
                  goto LABEL_50;
                }
                uint64_t v36 = sub_25A00E290();
                if (__OFSUB__((int)v21, v36)) {
                  goto LABEL_148;
                }
                v35 += (int)v21 - v36;
LABEL_50:
                uint64_t v2 = a2;
                sub_25A00E280();
                if (!v25)
                {
                  __s1[0] = v16;
                  LOWORD(__s1[1]) = v15;
                  BYTE2(__s1[1]) = BYTE2(v15);
                  BYTE3(__s1[1]) = BYTE3(v15);
                  BYTE4(__s1[1]) = BYTE4(v15);
                  BYTE5(__s1[1]) = BYTE5(v15);
                  if (!v35) {
                    goto LABEL_176;
                  }
                  size_t v52 = BYTE6(v15);
                  unint64_t v51 = __s1;
                  uint64_t v50 = v35;
LABEL_118:
                  int v41 = memcmp(v50, v51, v52);
                  goto LABEL_119;
                }
                if (v25 == 1)
                {
                  if (v16 >> 32 < (int)v16) {
                    goto LABEL_156;
                  }
                  swift_retain();
                  uint64_t v37 = (char *)sub_25A00E270();
                  if (v37)
                  {
                    uint64_t v38 = sub_25A00E290();
                    if (__OFSUB__((int)v16, v38)) {
                      goto LABEL_164;
                    }
                    v37 += (int)v16 - v38;
                  }
                  uint64_t v39 = sub_25A00E280();
                  if (v39 >= (v16 >> 32) - (int)v16) {
                    size_t v40 = (v16 >> 32) - (int)v16;
                  }
                  else {
                    size_t v40 = v39;
                  }
                  if (!v35) {
                    goto LABEL_166;
                  }
                  uint64_t v2 = a2;
                  if (!v37) {
                    goto LABEL_167;
                  }
                  int v41 = memcmp(v35, v37, v40);
                  sub_259FAE4A8(v16, v15);
                  goto LABEL_119;
                }
                uint64_t v78 = *(void *)(v16 + 16);
                uint64_t v85 = *(char **)(v16 + 24);
                swift_retain();
                swift_retain();
                uint64_t v79 = sub_25A00E270();
                if (v79)
                {
                  uint64_t v80 = sub_25A00E290();
                  if (__OFSUB__(v78, v80)) {
                    goto LABEL_163;
                  }
                  v79 += v78 - v80;
                }
                if (__OFSUB__(v85, v78)) {
                  goto LABEL_158;
                }
                uint64_t v81 = sub_25A00E280();
                if (v81 >= (uint64_t)&v85[-v78]) {
                  int64_t v82 = &v85[-v78];
                }
                else {
                  int64_t v82 = (char *)v81;
                }
                uint64_t v67 = v35;
                uint64_t v2 = a2;
                if (!v35) {
                  goto LABEL_177;
                }
                if (!v79) {
                  goto LABEL_178;
                }
                size_t v66 = (size_t)v82;
                int64_t v68 = (const void *)v79;
LABEL_132:
                int v69 = memcmp(v67, v68, v66);
                swift_release();
                goto LABEL_133;
              case 2uLL:
                uint64_t v42 = *(void *)(v21 + 16);
                sub_259FAE450(v16, v15);
                swift_retain();
                swift_retain();
                uint64_t v43 = sub_25A00E270();
                if (v43)
                {
                  uint64_t v44 = v43;
                  uint64_t v45 = sub_25A00E290();
                  if (__OFSUB__(v42, v45)) {
                    goto LABEL_147;
                  }
                  size_t v84 = (void *)(v44 + v42 - v45);
                }
                else
                {
                  size_t v84 = 0;
                }
                sub_25A00E280();
                uint64_t v2 = a2;
                if (v25)
                {
                  if (v25 == 1)
                  {
                    if (v16 >> 32 < (int)v16) {
                      goto LABEL_151;
                    }
                    swift_retain();
                    uint64_t v53 = (char *)sub_25A00E270();
                    if (v53)
                    {
                      uint64_t v54 = sub_25A00E290();
                      if (__OFSUB__((int)v16, v54)) {
                        goto LABEL_162;
                      }
                      v53 += (int)v16 - v54;
                    }
                    uint64_t v55 = sub_25A00E280();
                    if (v55 >= (v16 >> 32) - (int)v16) {
                      size_t v56 = (v16 >> 32) - (int)v16;
                    }
                    else {
                      size_t v56 = v55;
                    }
                    if (!v84) {
                      goto LABEL_169;
                    }
                    uint64_t v2 = a2;
                    if (!v53) {
                      goto LABEL_170;
                    }
                    int v41 = memcmp(v84, v53, v56);
                    sub_259FAE4A8(v16, v15);
                    swift_release();
                    swift_release();
LABEL_119:
                    sub_259FAE4A8(v21, v20);
                    sub_259FAE4A8(v16, v15);
LABEL_120:
                    uint64_t v3 = a1;
                    if (v41) {
                      return 0;
                    }
                  }
                  else
                  {
                    uint64_t v71 = *(void *)(v16 + 16);
                    uint64_t v70 = *(void *)(v16 + 24);
                    swift_retain();
                    swift_retain();
                    uint64_t v72 = (char *)sub_25A00E270();
                    if (v72)
                    {
                      uint64_t v73 = sub_25A00E290();
                      if (__OFSUB__(v71, v73)) {
                        goto LABEL_161;
                      }
                      v72 += v71 - v73;
                    }
                    BOOL v29 = __OFSUB__(v70, v71);
                    int64_t v74 = v70 - v71;
                    if (v29) {
                      goto LABEL_157;
                    }
                    uint64_t v75 = sub_25A00E280();
                    if (v75 >= v74) {
                      size_t v76 = v74;
                    }
                    else {
                      size_t v76 = v75;
                    }
                    uint64_t v2 = a2;
                    if (!v84) {
                      goto LABEL_174;
                    }
                    if (!v72) {
                      goto LABEL_175;
                    }
                    int v77 = memcmp(v84, v72, v76);
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    sub_259FAE4A8(v21, v20);
                    sub_259FAE4A8(v16, v15);
                    uint64_t v3 = a1;
                    if (v77) {
                      return 0;
                    }
                  }
                }
                else
                {
                  __s1[0] = v16;
                  LOWORD(__s1[1]) = v15;
                  BYTE2(__s1[1]) = BYTE2(v15);
                  BYTE3(__s1[1]) = BYTE3(v15);
                  BYTE4(__s1[1]) = BYTE4(v15);
                  BYTE5(__s1[1]) = BYTE5(v15);
                  if (!v84) {
                    goto LABEL_173;
                  }
                  int v69 = memcmp(v84, __s1, BYTE6(v15));
                  swift_release();
LABEL_133:
                  swift_release();
                  sub_259FAE4A8(v21, v20);
                  sub_259FAE4A8(v16, v15);
                  uint64_t v3 = a1;
                  if (v69) {
                    return 0;
                  }
                }
                break;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v25) {
                  goto LABEL_74;
                }
                if (v25 == 1)
                {
                  uint64_t v30 = (v16 >> 32) - (int)v16;
                  if (v16 >> 32 < (int)v16) {
                    goto LABEL_150;
                  }
                  sub_259FAE450(v16, v15);
                  sub_259FAE450(v16, v15);
                  uint64_t v46 = sub_25A00E270();
                  if (!v46) {
                    goto LABEL_168;
                  }
                  uint64_t v32 = v46;
                  uint64_t v47 = sub_25A00E290();
                  uint64_t v34 = (int)v16 - v47;
                  if (__OFSUB__((int)v16, v47)) {
                    goto LABEL_155;
                  }
LABEL_70:
                  uint64_t v48 = sub_25A00E280();
                  if (v48 >= v30) {
                    size_t v49 = v30;
                  }
                  else {
                    size_t v49 = v48;
                  }
                  int v41 = memcmp(__s1, (const void *)(v32 + v34), v49);
                  sub_259FAE4A8(v16, v15);
                  sub_259FAE4A8(v21, v20);
                  sub_259FAE4A8(v16, v15);
                  uint64_t v2 = a2;
                  goto LABEL_120;
                }
                uint64_t v63 = *(void *)(v16 + 16);
                uint64_t v64 = *(void *)(v16 + 24);
                sub_259FAE450(v16, v15);
                swift_retain();
                swift_retain();
                uint64_t v59 = sub_25A00E270();
                if (v59)
                {
                  uint64_t v65 = sub_25A00E290();
                  if (__OFSUB__(v63, v65)) {
                    goto LABEL_160;
                  }
                  v59 += v63 - v65;
                }
                BOOL v29 = __OFSUB__(v64, v63);
                int64_t v61 = v64 - v63;
                if (v29) {
                  goto LABEL_153;
                }
                uint64_t v62 = sub_25A00E280();
                uint64_t v2 = a2;
                if (!v59) {
                  goto LABEL_172;
                }
LABEL_99:
                if (v62 >= v61) {
                  size_t v66 = v61;
                }
                else {
                  size_t v66 = v62;
                }
                uint64_t v67 = __s1;
                int64_t v68 = (const void *)v59;
                goto LABEL_132;
              default:
                __s1[0] = v21;
                LOWORD(__s1[1]) = v20;
                BYTE2(__s1[1]) = BYTE2(v20);
                BYTE3(__s1[1]) = BYTE3(v20);
                BYTE4(__s1[1]) = BYTE4(v20);
                BYTE5(__s1[1]) = BYTE5(v20);
                if (!v25)
                {
LABEL_74:
                  uint64_t v90 = v16;
                  __int16 v91 = v15;
                  char v92 = BYTE2(v15);
                  char v93 = BYTE3(v15);
                  char v94 = BYTE4(v15);
                  char v95 = BYTE5(v15);
                  sub_259FAE450(v16, v15);
                  uint64_t v50 = __s1;
                  unint64_t v51 = &v90;
                  size_t v52 = BYTE6(v15);
                  goto LABEL_118;
                }
                if (v25 == 1)
                {
                  uint64_t v30 = (v16 >> 32) - (int)v16;
                  if (v16 >> 32 < (int)v16) {
                    goto LABEL_149;
                  }
                  sub_259FAE450(v16, v15);
                  sub_259FAE450(v16, v15);
                  uint64_t v31 = sub_25A00E270();
                  if (!v31)
                  {
                    sub_25A00E280();
                    __break(1u);
LABEL_166:
                    __break(1u);
LABEL_167:
                    __break(1u);
LABEL_168:
                    sub_25A00E280();
                    __break(1u);
LABEL_169:
                    __break(1u);
LABEL_170:
                    __break(1u);
LABEL_171:
                    __break(1u);
LABEL_172:
                    __break(1u);
LABEL_173:
                    __break(1u);
LABEL_174:
                    __break(1u);
LABEL_175:
                    __break(1u);
LABEL_176:
                    __break(1u);
LABEL_177:
                    __break(1u);
LABEL_178:
                    __break(1u);
                    JUMPOUT(0x259FCD654);
                  }
                  uint64_t v32 = v31;
                  uint64_t v33 = sub_25A00E290();
                  uint64_t v34 = (int)v16 - v33;
                  if (__OFSUB__((int)v16, v33)) {
                    goto LABEL_154;
                  }
                  goto LABEL_70;
                }
                uint64_t v57 = *(void *)(v16 + 16);
                uint64_t v58 = *(void *)(v16 + 24);
                sub_259FAE450(v16, v15);
                swift_retain();
                swift_retain();
                uint64_t v59 = sub_25A00E270();
                if (v59)
                {
                  uint64_t v60 = sub_25A00E290();
                  if (__OFSUB__(v57, v60)) {
                    goto LABEL_159;
                  }
                  v59 += v57 - v60;
                }
                BOOL v29 = __OFSUB__(v58, v57);
                int64_t v61 = v58 - v57;
                if (v29) {
                  goto LABEL_152;
                }
                uint64_t v62 = sub_25A00E280();
                uint64_t v2 = a2;
                if (!v59) {
                  goto LABEL_171;
                }
                goto LABEL_99;
            }
          }
          continue;
        }
LABEL_137:
        sub_259FAE450(v16, v15);
        sub_259FAE4A8(v21, v20);
LABEL_138:
        sub_259FAE4A8(v16, v15);
        return 0;
      case 2uLL:
        uint64_t v28 = *(void *)(v16 + 16);
        uint64_t v27 = *(void *)(v16 + 24);
        BOOL v29 = __OFSUB__(v27, v28);
        uint64_t v26 = v27 - v28;
        if (!v29) {
          goto LABEL_36;
        }
        goto LABEL_144;
      case 3uLL:
        if (!v22) {
          goto LABEL_7;
        }
        goto LABEL_137;
      default:
        uint64_t v26 = BYTE6(v15);
        goto LABEL_36;
    }
  }
}

uint64_t sub_259FCD684(uint64_t a1, uint64_t a2)
{
  __s1[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (unint64_t *)(a2 + 56);
  int64_t v4 = (unint64_t *)(a1 + 56);
  while (2)
  {
    uint64_t v6 = *(v4 - 1);
    unint64_t v5 = *v4;
    uint64_t v7 = *(v3 - 1);
    unint64_t v8 = *v3;
    BOOL v9 = *(v4 - 3) == *(v3 - 3) && *(v4 - 2) == *(v3 - 2);
    if (!v9 && (sub_25A00EE40() & 1) == 0) {
      return 0;
    }
    if (v5 >> 60 == 15)
    {
      if (v8 >> 60 != 15) {
        goto LABEL_128;
      }
      goto LABEL_6;
    }
    if (v8 >> 60 == 15)
    {
LABEL_128:
      sub_259FAF3C4(v6, v5);
      sub_259FAF3C4(v7, v8);
      sub_259FAF410(v6, v5);
      uint64_t v74 = v7;
      unint64_t v75 = v8;
      goto LABEL_130;
    }
    uint64_t v79 = v7;
    uint64_t v10 = 0;
    switch(v5 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v6), v6))
        {
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
        }
        uint64_t v10 = HIDWORD(v6) - (int)v6;
LABEL_19:
        sub_259FAE450(v6, v5);
        sub_259FAE450(v6, v5);
        break;
      case 2uLL:
        uint64_t v12 = *(void *)(v6 + 16);
        uint64_t v11 = *(void *)(v6 + 24);
        uint64_t v10 = v11 - v12;
        if (!__OFSUB__(v11, v12)) {
          goto LABEL_19;
        }
        goto LABEL_133;
      case 3uLL:
        break;
      default:
        uint64_t v10 = BYTE6(v5);
        break;
    }
    unint64_t v13 = v8 >> 62;
    switch(v8 >> 62)
    {
      case 1uLL:
        LODWORD(v14) = HIDWORD(v7) - v7;
        if (__OFSUB__(HIDWORD(v7), v7)) {
          goto LABEL_134;
        }
        uint64_t v14 = (int)v14;
LABEL_25:
        if (v10 == v14)
        {
          if (v10 < 1)
          {
LABEL_36:
            swift_bridgeObjectRetain();
            sub_259FAF3C4(v6, v5);
            swift_bridgeObjectRetain();
            sub_259FAF3C4(v7, v8);
            sub_259FAF410(v6, v5);
            sub_259FAF410(v6, v5);
            swift_bridgeObjectRelease();
            sub_259FAF410(v7, v8);
            swift_bridgeObjectRelease();
            sub_259FAF410(v6, v5);
          }
          else
          {
            switch(v5 >> 62)
            {
              case 1uLL:
                if ((int)v6 > v6 >> 32) {
                  goto LABEL_136;
                }
                swift_bridgeObjectRetain();
                sub_259FAF3C4(v6, v5);
                swift_bridgeObjectRetain();
                sub_259FAF3C4(v7, v8);
                sub_259FAF3C4(v7, v8);
                uint64_t v23 = sub_25A00E270();
                if (v23)
                {
                  uint64_t v24 = v23;
                  uint64_t v25 = sub_25A00E290();
                  if (__OFSUB__((int)v6, v25)) {
                    goto LABEL_138;
                  }
                  uint64_t v26 = (const void *)(v24 + (int)v6 - v25);
                }
                else
                {
                  uint64_t v26 = 0;
                }
                sub_25A00E280();
                if (!v13)
                {
                  uint64_t v44 = v7;
                  __s1[0] = v7;
                  LOWORD(__s1[1]) = v8;
                  BYTE2(__s1[1]) = BYTE2(v8);
                  BYTE3(__s1[1]) = BYTE3(v8);
                  BYTE4(__s1[1]) = BYTE4(v8);
                  BYTE5(__s1[1]) = BYTE5(v8);
                  if (!v26) {
                    goto LABEL_166;
                  }
                  int v34 = memcmp(v26, __s1, BYTE6(v8));
LABEL_112:
                  sub_259FAF410(v44, v8);
                  sub_259FAF410(v6, v5);
                  sub_259FAF410(v6, v5);
                  swift_bridgeObjectRelease();
                  sub_259FAF410(v44, v8);
                  goto LABEL_113;
                }
                uint64_t v78 = v26;
                if (v13 == 1)
                {
                  if (v7 >> 32 < (int)v7) {
                    goto LABEL_147;
                  }
                  swift_retain();
                  size_t v40 = (char *)sub_25A00E270();
                  if (v40)
                  {
                    uint64_t v41 = sub_25A00E290();
                    if (__OFSUB__((int)v7, v41)) {
                      goto LABEL_154;
                    }
                    v40 += (int)v7 - v41;
                  }
                  uint64_t v42 = sub_25A00E280();
                  if (v42 >= (v7 >> 32) - (int)v7) {
                    size_t v43 = (v7 >> 32) - (int)v7;
                  }
                  else {
                    size_t v43 = v42;
                  }
                  if (!v26) {
                    goto LABEL_159;
                  }
                  if (!v40) {
                    goto LABEL_160;
                  }
                  int v34 = memcmp(v26, v40, v43);
                  uint64_t v44 = v79;
                  sub_259FAF410(v79, v8);
                  goto LABEL_112;
                }
                uint64_t v66 = *(void *)(v7 + 16);
                uint64_t v65 = *(void *)(v7 + 24);
                swift_retain();
                swift_retain();
                uint64_t v67 = sub_25A00E270();
                if (v67)
                {
                  uint64_t v68 = sub_25A00E290();
                  if (__OFSUB__(v66, v68)) {
                    goto LABEL_153;
                  }
                  v67 += v66 - v68;
                }
                BOOL v17 = __OFSUB__(v65, v66);
                uint64_t v69 = v65 - v66;
                if (v17) {
                  goto LABEL_148;
                }
                uint64_t v70 = sub_25A00E280();
                if (v70 >= v69) {
                  size_t v71 = v69;
                }
                else {
                  size_t v71 = v70;
                }
                if (!v78) {
                  goto LABEL_167;
                }
                if (!v67) {
                  goto LABEL_168;
                }
                size_t v54 = v71;
                uint64_t v55 = v78;
                size_t v56 = (const void *)v67;
LABEL_125:
                int v72 = memcmp(v55, v56, v54);
                swift_release();
                swift_release();
                sub_259FAF410(v7, v8);
                sub_259FAF410(v6, v5);
                sub_259FAF410(v6, v5);
                swift_bridgeObjectRelease();
                sub_259FAF410(v7, v8);
                swift_bridgeObjectRelease();
                sub_259FAF410(v6, v5);
                if (v72) {
                  return 0;
                }
                break;
              case 2uLL:
                size_t v76 = *(char **)(v6 + 16);
                swift_bridgeObjectRetain();
                sub_259FAF3C4(v6, v5);
                swift_bridgeObjectRetain();
                sub_259FAF3C4(v7, v8);
                sub_259FAF3C4(v7, v8);
                swift_retain();
                swift_retain();
                uint64_t v27 = sub_25A00E270();
                if (v27)
                {
                  uint64_t v28 = v27;
                  uint64_t v29 = sub_25A00E290();
                  if (__OFSUB__(v76, v29)) {
                    goto LABEL_137;
                  }
                  int v77 = &v76[v28 - v29];
                }
                else
                {
                  int v77 = 0;
                }
                uint64_t v35 = v7;
                sub_25A00E280();
                if (!v13)
                {
                  __s1[0] = v7;
                  LOWORD(__s1[1]) = v8;
                  BYTE2(__s1[1]) = BYTE2(v8);
                  BYTE3(__s1[1]) = BYTE3(v8);
                  BYTE4(__s1[1]) = BYTE4(v8);
                  BYTE5(__s1[1]) = BYTE5(v8);
                  if (!v77) {
                    goto LABEL_163;
                  }
                  int v34 = memcmp(v77, __s1, BYTE6(v8));
LABEL_97:
                  swift_release();
                  swift_release();
                  sub_259FAF410(v35, v8);
                  sub_259FAF410(v6, v5);
                  sub_259FAF410(v6, v5);
LABEL_98:
                  swift_bridgeObjectRelease();
                  sub_259FAF410(v35, v8);
LABEL_113:
                  swift_bridgeObjectRelease();
                  sub_259FAF410(v6, v5);
                  if (v34) {
                    return 0;
                  }
                  break;
                }
                if (v13 == 1)
                {
                  if (v7 >> 32 < (int)v7) {
                    goto LABEL_141;
                  }
                  swift_retain();
                  uint64_t v36 = (char *)sub_25A00E270();
                  if (v36)
                  {
                    uint64_t v37 = sub_25A00E290();
                    if (__OFSUB__((int)v7, v37)) {
                      goto LABEL_152;
                    }
                    v36 += (int)v7 - v37;
                  }
                  uint64_t v38 = sub_25A00E280();
                  if (v38 >= (v7 >> 32) - (int)v7) {
                    size_t v39 = (v7 >> 32) - (int)v7;
                  }
                  else {
                    size_t v39 = v38;
                  }
                  if (!v77) {
                    goto LABEL_157;
                  }
                  uint64_t v35 = v7;
                  if (!v36) {
                    goto LABEL_158;
                  }
                  int v34 = memcmp(v77, v36, v39);
                  sub_259FAF410(v79, v8);
                  goto LABEL_97;
                }
                uint64_t v57 = *(void *)(v7 + 16);
                uint64_t v58 = *(void *)(v7 + 24);
                swift_retain();
                swift_retain();
                uint64_t v59 = (char *)sub_25A00E270();
                if (v59)
                {
                  uint64_t v60 = sub_25A00E290();
                  if (__OFSUB__(v57, v60)) {
                    goto LABEL_151;
                  }
                  v59 += v57 - v60;
                }
                BOOL v17 = __OFSUB__(v58, v57);
                int64_t v61 = v58 - v57;
                if (v17) {
                  goto LABEL_146;
                }
                uint64_t v62 = sub_25A00E280();
                if (v62 >= v61) {
                  size_t v63 = v61;
                }
                else {
                  size_t v63 = v62;
                }
                if (!v77) {
                  goto LABEL_164;
                }
                if (!v59) {
                  goto LABEL_165;
                }
                int v64 = memcmp(v77, v59, v63);
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                sub_259FAF410(v7, v8);
                sub_259FAF410(v6, v5);
                sub_259FAF410(v6, v5);
                swift_bridgeObjectRelease();
                sub_259FAF410(v7, v8);
                swift_bridgeObjectRelease();
                sub_259FAF410(v6, v5);
                if (v64) {
                  return 0;
                }
                break;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v13) {
                  goto LABEL_53;
                }
                if (v13 == 1)
                {
                  uint64_t v18 = (v7 >> 32) - (int)v7;
                  if (v7 >> 32 < (int)v7) {
                    goto LABEL_140;
                  }
                  swift_bridgeObjectRetain();
                  sub_259FAF3C4(v6, v5);
                  swift_bridgeObjectRetain();
                  sub_259FAF3C4(v7, v8);
                  sub_259FAF3C4(v7, v8);
                  uint64_t v30 = sub_25A00E270();
                  if (!v30) {
                    goto LABEL_156;
                  }
                  uint64_t v20 = v30;
                  uint64_t v31 = sub_25A00E290();
                  uint64_t v22 = (int)v7 - v31;
                  if (__OFSUB__((int)v7, v31)) {
                    goto LABEL_145;
                  }
LABEL_49:
                  uint64_t v32 = sub_25A00E280();
                  if (v32 >= v18) {
                    size_t v33 = v18;
                  }
                  else {
                    size_t v33 = v32;
                  }
                  int v34 = memcmp(__s1, (const void *)(v20 + v22), v33);
                  sub_259FAF410(v79, v8);
                  sub_259FAF410(v6, v5);
                  sub_259FAF410(v6, v5);
                  swift_bridgeObjectRelease();
                  sub_259FAF410(v79, v8);
                  goto LABEL_113;
                }
                uint64_t v51 = *(void *)(v7 + 16);
                uint64_t v52 = *(void *)(v7 + 24);
                swift_bridgeObjectRetain();
                sub_259FAF3C4(v6, v5);
                swift_bridgeObjectRetain();
                sub_259FAF3C4(v7, v8);
                sub_259FAF3C4(v7, v8);
                swift_retain();
                swift_retain();
                uint64_t v47 = sub_25A00E270();
                if (v47)
                {
                  uint64_t v53 = sub_25A00E290();
                  if (__OFSUB__(v51, v53)) {
                    goto LABEL_150;
                  }
                  v47 += v51 - v53;
                }
                BOOL v17 = __OFSUB__(v52, v51);
                int64_t v49 = v52 - v51;
                if (v17) {
                  goto LABEL_143;
                }
                uint64_t v50 = sub_25A00E280();
                if (!v47) {
                  goto LABEL_162;
                }
LABEL_91:
                if (v50 >= v49) {
                  size_t v54 = v49;
                }
                else {
                  size_t v54 = v50;
                }
                uint64_t v55 = __s1;
                size_t v56 = (const void *)v47;
                goto LABEL_125;
              default:
                __s1[0] = v6;
                LOWORD(__s1[1]) = v5;
                BYTE2(__s1[1]) = BYTE2(v5);
                BYTE3(__s1[1]) = BYTE3(v5);
                BYTE4(__s1[1]) = BYTE4(v5);
                BYTE5(__s1[1]) = BYTE5(v5);
                if (!v13)
                {
LABEL_53:
                  uint64_t v35 = v7;
                  uint64_t __s2 = v7;
                  __int16 v81 = v8;
                  char v82 = BYTE2(v8);
                  char v83 = BYTE3(v8);
                  char v84 = BYTE4(v8);
                  char v85 = BYTE5(v8);
                  swift_bridgeObjectRetain();
                  sub_259FAF3C4(v6, v5);
                  swift_bridgeObjectRetain();
                  sub_259FAF3C4(v7, v8);
                  int v34 = memcmp(__s1, &__s2, BYTE6(v8));
                  sub_259FAF410(v6, v5);
                  sub_259FAF410(v6, v5);
                  goto LABEL_98;
                }
                if (v13 == 1)
                {
                  uint64_t v18 = (v7 >> 32) - (int)v7;
                  if (v7 >> 32 < (int)v7) {
                    goto LABEL_139;
                  }
                  swift_bridgeObjectRetain();
                  sub_259FAF3C4(v6, v5);
                  swift_bridgeObjectRetain();
                  sub_259FAF3C4(v7, v8);
                  sub_259FAF3C4(v7, v8);
                  uint64_t v19 = sub_25A00E270();
                  if (!v19)
                  {
                    sub_25A00E280();
                    __break(1u);
LABEL_156:
                    sub_25A00E280();
                    __break(1u);
LABEL_157:
                    __break(1u);
LABEL_158:
                    __break(1u);
LABEL_159:
                    __break(1u);
LABEL_160:
                    __break(1u);
LABEL_161:
                    __break(1u);
LABEL_162:
                    __break(1u);
LABEL_163:
                    __break(1u);
LABEL_164:
                    __break(1u);
LABEL_165:
                    __break(1u);
LABEL_166:
                    __break(1u);
LABEL_167:
                    __break(1u);
LABEL_168:
                    __break(1u);
                    JUMPOUT(0x259FCE370);
                  }
                  uint64_t v20 = v19;
                  uint64_t v21 = sub_25A00E290();
                  uint64_t v22 = (int)v7 - v21;
                  if (__OFSUB__((int)v7, v21)) {
                    goto LABEL_144;
                  }
                  goto LABEL_49;
                }
                uint64_t v45 = *(void *)(v7 + 16);
                uint64_t v46 = *(void *)(v7 + 24);
                swift_bridgeObjectRetain();
                sub_259FAF3C4(v6, v5);
                swift_bridgeObjectRetain();
                sub_259FAF3C4(v7, v8);
                sub_259FAF3C4(v7, v8);
                swift_retain();
                swift_retain();
                uint64_t v47 = sub_25A00E270();
                if (v47)
                {
                  uint64_t v48 = sub_25A00E290();
                  if (__OFSUB__(v45, v48)) {
                    goto LABEL_149;
                  }
                  v47 += v45 - v48;
                }
                BOOL v17 = __OFSUB__(v46, v45);
                int64_t v49 = v46 - v45;
                if (v17) {
                  goto LABEL_142;
                }
                uint64_t v50 = sub_25A00E280();
                if (!v47) {
                  goto LABEL_161;
                }
                goto LABEL_91;
            }
          }
LABEL_6:
          v3 += 4;
          v4 += 4;
          if (!--v2) {
            return 1;
          }
          continue;
        }
LABEL_129:
        swift_bridgeObjectRetain();
        sub_259FAF3C4(v6, v5);
        swift_bridgeObjectRetain();
        sub_259FAF3C4(v7, v8);
        sub_259FAF410(v6, v5);
        sub_259FAF410(v6, v5);
        swift_bridgeObjectRelease();
        sub_259FAF410(v7, v8);
        swift_bridgeObjectRelease();
        uint64_t v74 = v6;
        unint64_t v75 = v5;
LABEL_130:
        sub_259FAF410(v74, v75);
        return 0;
      case 2uLL:
        uint64_t v16 = *(void *)(v7 + 16);
        uint64_t v15 = *(void *)(v7 + 24);
        BOOL v17 = __OFSUB__(v15, v16);
        uint64_t v14 = v15 - v16;
        if (!v17) {
          goto LABEL_25;
        }
        goto LABEL_135;
      case 3uLL:
        if (!v10) {
          goto LABEL_36;
        }
        goto LABEL_129;
      default:
        uint64_t v14 = BYTE6(v8);
        goto LABEL_25;
    }
  }
}

PoirotSchematizer::SchemaManifest __swiftcall SchemaManifest.init(messages:enums:)(Swift::OpaquePointer messages, Swift::OpaquePointer enums)
{
  v2->_rawValue = messages._rawValue;
  v2[1]._rawValue = enums._rawValue;
  result.enums = enums;
  result.messages = messages;
  return result;
}

unint64_t sub_259FCE3A8()
{
  uint64_t v0 = MEMORY[0x263F8EE78];
  unint64_t v1 = sub_259FB04CC(MEMORY[0x263F8EE78]);
  unint64_t result = sub_259FB0380(v0);
  qword_26A402EC0 = v1;
  *(void *)algn_26A402EC8 = result;
  return result;
}

uint64_t static SchemaManifest.empty.getter@<X0>(void *a1@<X8>)
{
  if (qword_26A402CB8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_26A402EC8;
  *a1 = qword_26A402EC0;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t SchemaManifest.messages.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SchemaManifest.messages.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v1 = a1;
  return result;
}

uint64_t (*SchemaManifest.messages.modify())()
{
  return nullsub_1;
}

uint64_t SchemaManifest.enums.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SchemaManifest.enums.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*SchemaManifest.enums.modify())()
{
  return nullsub_1;
}

PoirotSchematizer::SchemaManifest __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SchemaManifest.combining(with:)(PoirotSchematizer::SchemaManifest with)
{
  int64_t v4 = v1;
  uint64_t v5 = *(void *)with.messages._rawValue;
  uint64_t v6 = *((void *)with.messages._rawValue + 1);
  uint64_t v8 = *v2;
  uint64_t v7 = v2[1];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_259FCEB4C(v5, v8, 0, (uint64_t)sub_259FCFC24, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *, uint64_t))sub_259FCF38C);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = (void *)swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_259FCEB4C(v6, v7, 0, (uint64_t)sub_259FCFBB8, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *, uint64_t))sub_259FCED14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = (void *)swift_bridgeObjectRelease();
    *int64_t v4 = v10;
    v4[1] = v11;
  }
  result.enums._rawValue = v13;
  result.messages._rawValue = v12;
  return result;
}

uint64_t static SchemaManifest.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_259FCAFD4(*a1, *a2) & 1) == 0) {
    return 0;
  }
  return sub_259FCBD68(v2, v3);
}

uint64_t sub_259FCE6C8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_259FCAFD4(*a1, *a2) & 1) == 0) {
    return 0;
  }
  return sub_259FCBD68(v2, v3);
}

uint64_t sub_259FCE724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(ObjectType, a2);
  uint64_t v10 = (void *)sub_259FB04CC(MEMORY[0x263F8EE78]);
  swift_unknownObjectRetain();
  uint64_t v11 = sub_259FCFC90(v10, v9, a1, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (v4) {
    return swift_unknownObjectRelease();
  }
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v13 = v12(ObjectType, a2);
  unint64_t v14 = sub_259FB0380(MEMORY[0x263F8EE78]);
  swift_unknownObjectRetain();
  uint64_t v15 = sub_259FD0058(v14, v13, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_unknownObjectRelease_n();
  *a3 = v11;
  a3[1] = v15;
  return result;
}

uint64_t Sequence<>.combining()()
{
  if (qword_26A402CB8 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25A00EB40();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_259FCE96C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_259FCEB4C(v7, v6, 0, (uint64_t)sub_259FCFC24, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *, uint64_t))sub_259FCF38C);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_259FCEB4C(v8, v5, 0, (uint64_t)sub_259FCFBB8, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *, uint64_t))sub_259FCED14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *a3 = v10;
    a3[1] = v11;
  }
  return result;
}

uint64_t sub_259FCEACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_259FCEB4C(a1, a2, a3, (uint64_t)sub_259FCFBB8, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *, uint64_t))sub_259FCED14);
}

uint64_t sub_259FCEB0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_259FCEB4C(a1, a2, a3, (uint64_t)sub_259FCFC24, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *, uint64_t))sub_259FCF38C);
}

uint64_t sub_259FCEB4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, void, uint64_t, uint64_t *, uint64_t))
{
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = a2;
  a5(a1, a4, 0, isUniquelyReferenced_nonNull_native, &v14, a3);
  uint64_t v12 = v14;
  swift_bridgeObjectRelease();
  if (v5) {
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t destroy for SchemaManifest()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s17PoirotSchematizer14SchemaManifestVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SchemaManifest(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for SchemaManifest(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SchemaManifest()
{
  return &type metadata for SchemaManifest;
}

uint64_t sub_259FCED14(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5, char a6)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v64 = a1;
  uint64_t v65 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v66 = v8;
  uint64_t v67 = 0;
  uint64_t v68 = v11 & v9;
  uint64_t v69 = a2;
  uint64_t v70 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_259FB1E94(&v59);
  uint64_t v12 = *((void *)&v59 + 1);
  if (!*((void *)&v59 + 1))
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_259FB2B40();
    return swift_release();
  }
  while (1)
  {
    uint64_t v20 = v59;
    uint64_t v21 = v60;
    uint64_t v22 = v61;
    uint64_t v23 = v63;
    unint64_t v57 = v62;
    uint64_t v24 = (void *)*a5;
    unint64_t v26 = sub_259FE120C(v59, v12);
    uint64_t v27 = v24[2];
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28))
    {
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      sub_25A00EF00();
      __break(1u);
      goto LABEL_36;
    }
    char v30 = v25;
    if (v24[3] >= v29)
    {
      if ((a4 & 1) == 0) {
        sub_259FFA978();
      }
    }
    else
    {
      sub_259FF8F6C(v29, a4 & 1);
      unint64_t v31 = sub_259FE120C(v20, v12);
      if ((v30 & 1) != (v32 & 1)) {
        goto LABEL_35;
      }
      unint64_t v26 = v31;
    }
    size_t v33 = (void *)*a5;
    if (v30) {
      break;
    }
    v33[(v26 >> 6) + 8] |= 1 << v26;
    uint64_t v44 = (uint64_t *)(v33[6] + 16 * v26);
    *uint64_t v44 = v20;
    v44[1] = v12;
    uint64_t v45 = (uint64_t *)(v33[7] + 32 * v26);
    *uint64_t v45 = v21;
    v45[1] = v22;
    _OWORD v45[2] = v57;
    v45[3] = v23;
    uint64_t v46 = v33[2];
    BOOL v47 = __OFADD__(v46, 1);
    uint64_t v48 = v46 + 1;
    if (v47) {
      goto LABEL_34;
    }
    uint64_t v33[2] = v48;
LABEL_8:
    sub_259FB1E94(&v59);
    uint64_t v12 = *((void *)&v59 + 1);
    a4 = 1;
    if (!*((void *)&v59 + 1)) {
      goto LABEL_5;
    }
  }
  int v34 = (uint64_t *)(v33[7] + 32 * v26);
  uint64_t v35 = v34[1];
  unint64_t v16 = v34[2];
  uint64_t v36 = v34[3];
  if (!a6)
  {
    uint64_t v53 = *v34;
    swift_bridgeObjectRetain();
    uint64_t v54 = v35;
    sub_259FAF3C4(v35, v16);
    uint64_t v56 = v36;
    swift_bridgeObjectRetain();
    uint64_t v39 = v22;
    unint64_t v41 = v57;
LABEL_29:
    swift_bridgeObjectRelease();
    sub_259FAF410(v39, v41);
    swift_bridgeObjectRelease();
    uint64_t v15 = v56;
    uint64_t v14 = v53;
    uint64_t v22 = v54;
    goto LABEL_7;
  }
  unint64_t v55 = v34[2];
  uint64_t v37 = v23;
  if (a6 == 1)
  {
    uint64_t v14 = v21;
    uint64_t v15 = v37;
    unint64_t v16 = v57;
LABEL_7:
    swift_bridgeObjectRelease();
    BOOL v17 = (uint64_t *)(v33[7] + 32 * v26);
    uint64_t v18 = v17[1];
    unint64_t v19 = v17[2];
    swift_bridgeObjectRelease();
    sub_259FAF410(v18, v19);
    swift_bridgeObjectRelease();
    *BOOL v17 = v14;
    v17[1] = v22;
    v17[2] = v16;
    v17[3] = v15;
    goto LABEL_8;
  }
  uint64_t v38 = *v34;
  swift_bridgeObjectRetain();
  sub_259FAF3C4(v35, v55);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v54 = v35;
  sub_259FAF3C4(v35, v55);
  uint64_t v56 = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v39 = v22;
  uint64_t v40 = v22;
  unint64_t v41 = v57;
  sub_259FAF3C4(v40, v57);
  swift_bridgeObjectRetain();
  uint64_t v53 = v38;
  char v42 = sub_259FCCA0C(v38, v21);
  uint64_t v43 = v37;
  unint64_t v16 = v55;
  if ((v42 & 1) == 0) {
    goto LABEL_31;
  }
  if (v55 >> 60 == 15)
  {
    if (v57 >> 60 != 15) {
      goto LABEL_30;
    }
LABEL_27:
    if ((sub_259FCCBA4(v56, v43) & 1) == 0) {
      goto LABEL_31;
    }
    swift_bridgeObjectRelease();
    sub_259FAF410(v39, v57);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259FAF410(v35, v16);
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  if (v57 >> 60 != 15)
  {
    sub_259FAF3C4(v35, v55);
    sub_259FAF3C4(v39, v57);
    char v49 = sub_259FFCCD4(v35, v55, v39, v57);
    sub_259FAF410(v39, v57);
    unint64_t v16 = v55;
    sub_259FAF410(v35, v55);
    if ((v49 & 1) == 0) {
      goto LABEL_31;
    }
    goto LABEL_27;
  }
LABEL_30:
  sub_259FAF3C4(v35, v55);
  sub_259FAF3C4(v39, v57);
  sub_259FAF410(v35, v55);
  sub_259FAF410(v39, v57);
LABEL_31:
  sub_25A00ED10();
  swift_bridgeObjectRelease();
  sub_259FB2AD8();
  uint64_t v50 = swift_allocError();
  *uint64_t v51 = 0xD00000000000001DLL;
  v51[1] = 0x800000025A00FB70;
  swift_willThrow();
  swift_bridgeObjectRelease();
  sub_259FAF410(v39, v57);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FAF410(v35, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FAF410(v35, v16);
  swift_bridgeObjectRelease();
  uint64_t v71 = v50;
  MEMORY[0x25A2F2990](v50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402CE8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_259FAF410(v39, v57);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259FB2B40();
    swift_release();
    return MEMORY[0x25A2F2980](v71);
  }
LABEL_36:
  sub_25A00ED10();
  sub_25A00EA80();
  sub_25A00ED90();
  sub_25A00EA80();
  uint64_t result = sub_25A00EDB0();
  __break(1u);
  return result;
}

uint64_t sub_259FCF38C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5, char a6)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v71 = a1;
  uint64_t v72 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v73 = v8;
  uint64_t v74 = 0;
  uint64_t v75 = v11 & v9;
  uint64_t v76 = a2;
  uint64_t v77 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_259FB2090(&v66);
  uint64_t v12 = *((void *)&v66 + 1);
  if (!*((void *)&v66 + 1))
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_259FB2B40();
    return swift_release();
  }
  while (1)
  {
    uint64_t v19 = v66;
    uint64_t v64 = v66;
    uint64_t v65 = v12;
    uint64_t v59 = v68;
    unint64_t v20 = v70;
    uint64_t v57 = v67;
    uint64_t v58 = v69;
    uint64_t v21 = (void *)*a5;
    unint64_t v23 = sub_259FE120C(v66, v12);
    uint64_t v24 = v21[2];
    BOOL v25 = (v22 & 1) == 0;
    uint64_t v26 = v24 + v25;
    if (__OFADD__(v24, v25))
    {
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      sub_25A00EF00();
      __break(1u);
      goto LABEL_38;
    }
    char v27 = v22;
    if (v21[3] >= v26)
    {
      if ((a4 & 1) == 0) {
        sub_259FFAD1C();
      }
    }
    else
    {
      sub_259FF9588(v26, a4 & 1);
      unint64_t v28 = sub_259FE120C(v19, v12);
      if ((v27 & 1) != (v29 & 1)) {
        goto LABEL_37;
      }
      unint64_t v23 = v28;
    }
    char v30 = (void *)*a5;
    if (v27) {
      break;
    }
    v30[(v23 >> 6) + 8] |= 1 << v23;
    uint64_t v40 = (uint64_t *)(v30[6] + 16 * v23);
    *uint64_t v40 = v19;
    v40[1] = v12;
    unint64_t v41 = (uint64_t *)(v30[7] + 32 * v23);
    *unint64_t v41 = v57;
    v41[1] = v59;
    v41[2] = v58;
    v41[3] = v20;
    uint64_t v42 = v30[2];
    BOOL v43 = __OFADD__(v42, 1);
    uint64_t v44 = v42 + 1;
    if (v43) {
      goto LABEL_36;
    }
    v30[2] = v44;
LABEL_9:
    sub_259FB2090(&v66);
    uint64_t v12 = *((void *)&v66 + 1);
    a4 = 1;
    if (!*((void *)&v66 + 1)) {
      goto LABEL_5;
    }
  }
  uint64_t v53 = (void *)*a5;
  unint64_t v31 = (uint64_t *)(v30[7] + 32 * v23);
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  uint64_t v35 = v31[2];
  unint64_t v34 = v31[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_259FAF3C4(v35, v34);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_259FAF3C4(v58, v20);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_259FAF3C4(v58, v20);
  swift_bridgeObjectRetain();
  uint64_t v55 = v32;
  uint64_t v36 = v35;
  swift_bridgeObjectRetain();
  sub_259FAF3C4(v35, v34);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v62 = v33;
  sub_259FB15C4(v57, (uint64_t)sub_259FB1BE8, 0, isUniquelyReferenced_nonNull_native, &v62, a6);
  uint64_t v38 = v56;
  if (v56)
  {
    unint64_t v61 = v34;
    unint64_t v47 = v20;
    uint64_t v54 = v35;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v48 = v58;
    goto LABEL_32;
  }
  uint64_t v39 = v62;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v56 = 0;
  uint64_t v52 = v39;
  if (v20 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v58;
    sub_259FAF410(v58, v20);
    uint64_t v51 = v35;
LABEL_7:
    unint64_t v15 = v34;
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259FAF410(v14, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259FAF410(v36, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259FAF410(v14, v20);
    swift_bridgeObjectRelease();
    unint64_t v16 = (void *)(v53[7] + 32 * v23);
    uint64_t v17 = v16[2];
    unint64_t v18 = v16[3];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259FAF410(v17, v18);
    *unint64_t v16 = v52;
    v16[1] = v55;
    void v16[2] = v51;
    v16[3] = v15;
    goto LABEL_9;
  }
  if (v34 >> 60 == 15)
  {
    uint64_t v14 = v58;
    sub_259FAF3C4(v58, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_26:
    sub_259FAF410(v14, v20);
    uint64_t v51 = v14;
    unint64_t v15 = v20;
    goto LABEL_8;
  }
  if (!a6)
  {
    uint64_t v45 = v58;
    sub_259FAF3C4(v58, v20);
LABEL_30:
    sub_259FAF3C4(v36, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259FAF410(v45, v20);
    sub_259FAF410(v45, v20);
    sub_259FAF410(v36, v34);
    uint64_t v51 = v36;
    uint64_t v14 = v45;
    goto LABEL_7;
  }
  if (a6 == 1)
  {
    uint64_t v14 = v58;
    sub_259FAF3C4(v58, v20);
    sub_259FAF3C4(v58, v20);
    sub_259FAF410(v35, v34);
    sub_259FAF3C4(v58, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259FAF410(v58, v20);
    sub_259FAF410(v58, v20);
    goto LABEL_26;
  }
  uint64_t v45 = v58;
  sub_259FAF3C4(v58, v20);
  sub_259FAF3C4(v58, v20);
  sub_259FAF3C4(v36, v34);
  char v46 = sub_259FFCCD4(v36, v34, v58, v20);
  sub_259FAF410(v36, v34);
  if (v46)
  {
    sub_259FAF410(v58, v20);
    goto LABEL_30;
  }
  unint64_t v61 = v34;
  uint64_t v62 = 0;
  uint64_t v54 = v36;
  unint64_t v63 = 0xE000000000000000;
  sub_25A00ED10();
  swift_bridgeObjectRelease();
  sub_259FB2AD8();
  uint64_t v38 = swift_allocError();
  *char v49 = 0xD00000000000001FLL;
  v49[1] = 0x800000025A00F6C0;
  swift_willThrow();
  sub_259FAF410(v58, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v47 = v20;
  sub_259FAF410(v58, v20);
  uint64_t v48 = v58;
LABEL_32:
  sub_259FAF410(v48, v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FAF410(v48, v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FAF410(v54, v61);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FAF410(v54, v61);
  uint64_t v78 = v38;
  MEMORY[0x25A2F2990](v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402CE8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_259FAF410(v48, v47);
    swift_bridgeObjectRelease();
    sub_259FB2B40();
    swift_release();
    return MEMORY[0x25A2F2980](v78);
  }
LABEL_38:
  uint64_t v62 = 0;
  unint64_t v63 = 0xE000000000000000;
  sub_25A00ED10();
  sub_25A00EA80();
  sub_25A00ED90();
  sub_25A00EA80();
  uint64_t result = sub_25A00EDB0();
  __break(1u);
  return result;
}

uint64_t sub_259FCFBB8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[3];
  unint64_t v5 = a1[4];
  uint64_t v6 = a1[5];
  a2[2] = a1[2];
  a2[3] = v4;
  a2[4] = v5;
  a2[5] = v6;
  *a2 = v3;
  a2[1] = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_259FAF3C4(v4, v5);
  return swift_bridgeObjectRetain();
}

uint64_t sub_259FCFC24@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  unint64_t v6 = a1[5];
  a2[2] = a1[2];
  a2[3] = v4;
  a2[4] = v5;
  a2[5] = v6;
  *a2 = v3;
  a2[1] = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_259FAF3C4(v5, v6);
}

uint64_t sub_259FCFC90(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v45 = a2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 56);
  int64_t v46 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v9)
    {
      uint64_t v51 = (v9 - 1) & v9;
      unint64_t v16 = __clz(__rbit64(v9)) | (v10 << 6);
    }
    else
    {
      BOOL v17 = __OFADD__(v10++, 1);
      if (v17) {
        goto LABEL_42;
      }
      if (v10 >= v46)
      {
LABEL_38:
        swift_release();
        return (uint64_t)a1;
      }
      unint64_t v18 = *(void *)(v45 + 8 * v10);
      if (!v18)
      {
        int64_t v19 = v10 + 1;
        if (v10 + 1 >= v46) {
          goto LABEL_38;
        }
        unint64_t v18 = *(void *)(v45 + 8 * v19);
        if (v18) {
          goto LABEL_17;
        }
        int64_t v19 = v10 + 2;
        if (v10 + 2 >= v46) {
          goto LABEL_38;
        }
        unint64_t v18 = *(void *)(v45 + 8 * v19);
        if (v18) {
          goto LABEL_17;
        }
        int64_t v19 = v10 + 3;
        if (v10 + 3 >= v46) {
          goto LABEL_38;
        }
        unint64_t v18 = *(void *)(v45 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v10 = v19;
        }
        else
        {
          int64_t v43 = v10 + 4;
          if (v10 + 4 >= v46) {
            goto LABEL_38;
          }
          unint64_t v18 = *(void *)(v45 + 8 * v43);
          for (v10 += 4; !v18; ++v43)
          {
            int64_t v10 = v43 + 1;
            if (__OFADD__(v43, 1)) {
              goto LABEL_43;
            }
            if (v10 >= v46) {
              goto LABEL_38;
            }
            unint64_t v18 = *(void *)(v45 + 8 * v10);
          }
        }
      }
      uint64_t v51 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
    }
    unint64_t v20 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v16);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 24);
    swift_bridgeObjectRetain_n();
    v24(v22, v21, ObjectType, a4);
    if (v5)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)a1;
    }
    sub_259FB0D14(v25, 0, v52);
    int64_t v49 = v10;
    uint64_t v27 = v52[0];
    uint64_t v26 = v52[1];
    uint64_t v28 = v52[2];
    uint64_t v50 = v52[3];
    char v29 = a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v53 = v29;
    unint64_t v32 = sub_259FE120C(v22, v21);
    uint64_t v33 = v29[2];
    BOOL v34 = (v31 & 1) == 0;
    uint64_t v35 = v33 + v34;
    if (__OFADD__(v33, v34)) {
      break;
    }
    char v36 = v31;
    if (v29[3] >= v35)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        a1 = v53;
        if (v31) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_259FFAD1C();
        a1 = v53;
        if (v36) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_259FF9588(v35, isUniquelyReferenced_nonNull_native);
      unint64_t v37 = sub_259FE120C(v22, v21);
      if ((v36 & 1) != (v38 & 1)) {
        goto LABEL_44;
      }
      unint64_t v32 = v37;
      a1 = v53;
      if (v36)
      {
LABEL_4:
        uint64_t v11 = (void *)(a1[7] + 32 * v32);
        uint64_t v12 = a1;
        uint64_t v13 = v11[2];
        unint64_t v14 = v11[3];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v15 = v14;
        a1 = v12;
        sub_259FAF410(v13, v15);
        *uint64_t v11 = v27;
        v11[1] = v26;
        _OWORD v11[2] = v28;
        v11[3] = v50;
        goto LABEL_5;
      }
    }
    a1[(v32 >> 6) + 8] |= 1 << v32;
    uint64_t v39 = (uint64_t *)(a1[6] + 16 * v32);
    *uint64_t v39 = v22;
    v39[1] = v21;
    uint64_t v40 = (void *)(a1[7] + 32 * v32);
    *uint64_t v40 = v27;
    v40[1] = v26;
    v40[2] = v28;
    v40[3] = v50;
    uint64_t v41 = a1[2];
    BOOL v17 = __OFADD__(v41, 1);
    uint64_t v42 = v41 + 1;
    if (v17) {
      goto LABEL_41;
    }
    a1[2] = v42;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    int64_t v10 = v49;
    uint64_t v5 = 0;
    unint64_t v9 = v51;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  uint64_t result = sub_25A00EF00();
  __break(1u);
  return result;
}

uint64_t sub_259FD0058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v32 = a2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 56);
  int64_t v33 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  int64_t v36 = v11;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v15 << 6))
  {
    unint64_t v18 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 32);
    swift_bridgeObjectRetain_n();
    uint64_t v23 = v22(v20, v19, ObjectType, a4);
    if (v5)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_259FE6408(v23, v24, v37);
    uint64_t v5 = 0;
    uint64_t v26 = v37[0];
    uint64_t v25 = v37[1];
    uint64_t v27 = a1;
    uint64_t v29 = v37[2];
    uint64_t v28 = v37[3];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v38 = v27;
    sub_259FFBCFC(v26, v25, v29, v28, v20, v19, isUniquelyReferenced_nonNull_native);
    a1 = v38;
    swift_bridgeObjectRelease_n();
    uint64_t result = swift_bridgeObjectRelease();
    int64_t v11 = v36;
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v14 = __OFADD__(v11, 1);
    int64_t v15 = v11 + 1;
    if (v14) {
      break;
    }
    if (v15 >= v33) {
      goto LABEL_26;
    }
    unint64_t v16 = *(void *)(v32 + 8 * v15);
    if (!v16)
    {
      int64_t v17 = v15 + 1;
      if (v15 + 1 >= v33) {
        goto LABEL_26;
      }
      unint64_t v16 = *(void *)(v32 + 8 * v17);
      if (v16) {
        goto LABEL_14;
      }
      int64_t v17 = v15 + 2;
      if (v15 + 2 >= v33) {
        goto LABEL_26;
      }
      unint64_t v16 = *(void *)(v32 + 8 * v17);
      if (v16) {
        goto LABEL_14;
      }
      int64_t v17 = v15 + 3;
      if (v15 + 3 >= v33) {
        goto LABEL_26;
      }
      unint64_t v16 = *(void *)(v32 + 8 * v17);
      if (v16)
      {
LABEL_14:
        int64_t v15 = v17;
        goto LABEL_15;
      }
      int64_t v31 = v15 + 4;
      if (v15 + 4 >= v33)
      {
LABEL_26:
        swift_release();
        return a1;
      }
      unint64_t v16 = *(void *)(v32 + 8 * v31);
      for (v15 += 4; !v16; ++v31)
      {
        int64_t v15 = v31 + 1;
        if (__OFADD__(v31, 1)) {
          goto LABEL_29;
        }
        if (v15 >= v33) {
          goto LABEL_26;
        }
        unint64_t v16 = *(void *)(v32 + 8 * v15);
      }
    }
LABEL_15:
    unint64_t v9 = (v16 - 1) & v16;
    int64_t v36 = v15;
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

BOOL static TypeManifest.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TypeManifest.hash(into:)()
{
  return sub_25A00EF70();
}

uint64_t TypeManifest.hashValue.getter()
{
  return sub_25A00EF90();
}

uint64_t sub_259FD0384()
{
  return sub_25A00EF90();
}

uint64_t sub_259FD03CC()
{
  return sub_25A00EF70();
}

uint64_t sub_259FD03F8()
{
  return sub_25A00EF90();
}

unint64_t sub_259FD0440()
{
  unint64_t result = qword_26A402ED0;
  if (!qword_26A402ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A402ED0);
  }
  return result;
}

BOOL sub_259FD0494(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TypeManifest(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TypeManifest(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *unint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259FD0610);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

uint64_t sub_259FD0638(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_259FD0640(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for TypeManifest()
{
  return &type metadata for TypeManifest;
}

ValueMetadata *type metadata accessor for FieldPathComponent()
{
  return &type metadata for FieldPathComponent;
}

uint64_t sub_259FD0668(uint64_t a1, uint64_t a2)
{
  return sub_259FD094C(a1, a2, 0xD00000000000001CLL, 0x800000025A00F6A0);
}

uint64_t sub_259FD0684(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(a2 + 24))(0xD00000000000001CLL, 0x800000025A00F6A0, a1, a2);
}

uint64_t sub_259FD06CC(uint64_t a1, uint64_t a2)
{
  return sub_259FD094C(a1, a2, 0xD00000000000001BLL, 0x800000025A00F5D0);
}

uint64_t sub_259FD06E8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(a2 + 24))(0xD00000000000001BLL, 0x800000025A00F5D0, a1, a2);
}

uint64_t sub_259FD0730(uint64_t a1, uint64_t a2)
{
  return sub_259FD094C(a1, a2, 0xD000000000000020, 0x800000025A00F5F0);
}

uint64_t sub_259FD074C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(a2 + 24))(0xD000000000000020, 0x800000025A00F5F0, a1, a2);
}

uint64_t sub_259FD0794(uint64_t a1, uint64_t a2)
{
  return sub_259FD094C(a1, a2, 0xD00000000000001ELL, 0x800000025A00F550);
}

uint64_t sub_259FD07B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_25A00EF60();
    sub_25A00EA40();
    uint64_t v6 = sub_25A00EF90();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      int64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_25A00EE40() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          unint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_25A00EE40() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_259FD08E8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(a2 + 24))(0xD00000000000001ELL, 0x800000025A00F550, a1, a2);
}

uint64_t sub_259FD0930(uint64_t a1, uint64_t a2)
{
  return sub_259FD094C(a1, a2, 0xD00000000000001CLL, 0x800000025A00F680);
}

uint64_t sub_259FD094C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (*(uint64_t (**)(void))(a2 + 8))();
  LOBYTE(a4) = sub_259FD07B0(a3, a4, v6);
  swift_bridgeObjectRelease();
  return a4 & 1;
}

uint64_t sub_259FD09B0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(a2 + 24))(0xD00000000000001CLL, 0x800000025A00F680, a1, a2);
}

uint64_t static Schematizer.makeSchemaStore(withManifest:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  type metadata accessor for ProtoSchemaStore();
  uint64_t v5 = swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = MEMORY[0x263F8EE78];
  *(void *)(v5 + 16) = sub_259FB0734(MEMORY[0x263F8EE78]);
  *(void *)(v5 + 24) = sub_259FB0754(v6);
  uint64_t v7 = sub_259FD2530(v4);
  swift_beginAccess();
  *(void *)(v5 + 16) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_259FD232C(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v5 + 24) = v8;
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5;
  a2[1] = (uint64_t)&off_2707EABC0;
  return result;
}

uint64_t static Schematizer.makeSchemaStoreImpl(withManifest:)(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  type metadata accessor for ProtoSchemaStore();
  uint64_t v3 = swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = MEMORY[0x263F8EE78];
  *(void *)(v3 + 16) = sub_259FB0734(MEMORY[0x263F8EE78]);
  *(void *)(v3 + 24) = sub_259FB0754(v4);
  uint64_t v5 = sub_259FD2530(v2);
  swift_beginAccess();
  *(void *)(v3 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_259FD232C(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v3 + 24) = v6;
  swift_bridgeObjectRelease();
  return v3;
}

void static Schematizer.searchValue(in:withFieldNumber:type:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = *a4;
  uint64_t v8 = a4[1];
  uint64_t v9 = a2 - a1;
  _OWORD v12[2] = a1;
  v12[3] = a2;
  if (!a1) {
    uint64_t v9 = 0;
  }
  v12[5] = 0;
  v12[6] = 0;
  v12[4] = v9;
  char v13 = 1;
  uint64_t v10 = sub_259FAE178(a3);
  if (!v5)
  {
    if ((v10 & 0x100000000) != 0)
    {
      *(void *)(a5 + 32) = 0;
      *(_OWORD *)a5 = 0u;
      *(_OWORD *)(a5 + 16) = 0u;
      *(unsigned char *)(a5 + 40) = -1;
    }
    else
    {
      v12[0] = v7;
      v12[1] = v8;
      char v11 = sub_259FAE500(v10);
      sub_259FAE514(v12, v11, a5);
    }
  }
}

uint64_t static Schematizer.searchValue(in:withFieldPath:type:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *a4;
  uint64_t v7 = a4[1];
  uint64_t v9 = a2 - a1;
  if (!a1) {
    uint64_t v9 = 0;
  }
  v24[3] = a1;
  v24[4] = a2;
  void v24[6] = 0;
  v24[7] = 0;
  v24[5] = v9;
  char v25 = 1;
  int64_t v10 = *(void *)(a3 + 16);
  if (v10)
  {
    uint64_t v23 = a5;
    uint64_t v26 = v5;
    v24[0] = MEMORY[0x263F8EE78];
    sub_259FE1604(0, v10, 0);
    uint64_t v12 = v24[0];
    char v13 = (uint64_t *)(a3 + 32);
    unint64_t v14 = *(void *)(v24[0] + 16);
    uint64_t v15 = 24 * v14;
    do
    {
      uint64_t v17 = *v13++;
      uint64_t v16 = v17;
      v24[0] = v12;
      unint64_t v18 = *(void *)(v12 + 24);
      unint64_t v19 = v14 + 1;
      if (v14 >= v18 >> 1)
      {
        sub_259FE1604(v18 > 1, v14 + 1, 1);
        uint64_t v12 = v24[0];
      }
      *(void *)(v12 + 16) = v19;
      uint64_t v20 = v12 + v15;
      *(void *)(v20 + 32) = v16;
      *(void *)(v20 + 40) = 0;
      *(unsigned char *)(v20 + 48) = 0;
      v15 += 24;
      unint64_t v14 = v19;
      --v10;
    }
    while (v10);
    a5 = v23;
  }
  else
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
    if (!*(void *)(MEMORY[0x263F8EE78] + 16))
    {
      sub_259FB3304();
      swift_allocError();
      *(void *)uint64_t v22 = 0xD000000000000011;
      *(void *)(v22 + 8) = 0x800000025A00F9A0;
      *(unsigned char *)(v22 + 16) = 5;
      sub_259FBAA50(v8, v7);
      swift_willThrow();
      goto LABEL_11;
    }
  }
  v24[0] = v12;
  v24[1] = v8;
  v24[2] = v7;
  sub_259FBAA50(v8, v7);
  sub_259FDE504(v24, 0, a5);
LABEL_11:
  swift_bridgeObjectRelease();
  return sub_259FAD1BC(v8, v7);
}

uint64_t static Schematizer.searchValue(in:withFieldPath:type:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  v32[2] = *MEMORY[0x263EF8340];
  uint64_t v7 = *a4;
  uint64_t v6 = a4[1];
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v12 = (a1 >> 32) - (int)a1;
      if (a1 >> 32 < (int)a1)
      {
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      uint64_t v30 = a4[1];
      sub_259FAE450(a1, a2);
      uint64_t v13 = sub_25A00E270();
      if (v13)
      {
        uint64_t v14 = sub_25A00E290();
        if (!__OFSUB__((int)a1, v14))
        {
          v13 += (int)a1 - v14;
          goto LABEL_7;
        }
LABEL_30:
        __break(1u);
      }
LABEL_7:
      uint64_t v15 = sub_25A00E280();
      if (v15 >= v12) {
        uint64_t v16 = (a1 >> 32) - (int)a1;
      }
      else {
        uint64_t v16 = v15;
      }
      uint64_t v17 = v13 + v16;
      if (v13) {
        uint64_t v18 = v17;
      }
      else {
        uint64_t v18 = 0;
      }
      sub_259FD11E8(v13, v18, a3, v7, v30, a5);
      return sub_259FAE4A8(a1, a2);
    case 2uLL:
      uint64_t v31 = a4[1];
      uint64_t v20 = *(void *)(a1 + 16);
      uint64_t v21 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      uint64_t v22 = sub_25A00E270();
      if (!v22) {
        goto LABEL_17;
      }
      uint64_t v23 = sub_25A00E290();
      if (__OFSUB__(v20, v23)) {
        goto LABEL_29;
      }
      v22 += v20 - v23;
LABEL_17:
      BOOL v24 = __OFSUB__(v21, v20);
      uint64_t v25 = v21 - v20;
      if (v24) {
        goto LABEL_28;
      }
      uint64_t v26 = sub_25A00E280();
      if (v26 >= v25) {
        uint64_t v27 = v25;
      }
      else {
        uint64_t v27 = v26;
      }
      uint64_t v28 = v22 + v27;
      if (v22) {
        uint64_t v29 = v28;
      }
      else {
        uint64_t v29 = 0;
      }
      sub_259FD11E8(v22, v29, a3, v7, v31, a5);
      swift_release();
      return swift_release();
    case 3uLL:
      memset(v32, 0, 14);
      char v11 = (char *)v32;
      return sub_259FD11E8((uint64_t)v32, (uint64_t)v11, a3, v7, v6, a5);
    default:
      v32[0] = a1;
      LOWORD(v32[1]) = a2;
      BYTE2(v32[1]) = BYTE2(a2);
      BYTE3(v32[1]) = BYTE3(a2);
      BYTE4(v32[1]) = BYTE4(a2);
      BYTE5(v32[1]) = BYTE5(a2);
      char v11 = (char *)v32 + BYTE6(a2);
      return sub_259FD11E8((uint64_t)v32, (uint64_t)v11, a3, v7, v6, a5);
  }
}

uint64_t sub_259FD11E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  unint64_t v11 = a2 - a1;
  if (!a1) {
    unint64_t v11 = 0;
  }
  *(void *)&long long v61 = a1;
  *((void *)&v61 + 1) = a2;
  uint64_t v63 = 0;
  long long v62 = v11;
  char v64 = 1;
  int64_t v12 = *(void *)(a3 + 16);
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (v12)
  {
    uint64_t v66 = v6;
    uint64_t v55 = a6;
    *(void *)&long long v57 = MEMORY[0x263F8EE78];
    sub_259FE1604(0, v12, 0);
    uint64_t v13 = v57;
    uint64_t v15 = (uint64_t *)(a3 + 32);
    unint64_t v16 = *(void *)(v57 + 16);
    uint64_t v17 = 24 * v16;
    do
    {
      uint64_t v19 = *v15++;
      uint64_t v18 = v19;
      *(void *)&long long v57 = v13;
      unint64_t v20 = *(void *)(v13 + 24);
      unint64_t v21 = v16 + 1;
      if (v16 >= v20 >> 1)
      {
        sub_259FE1604(v20 > 1, v16 + 1, 1);
        uint64_t v13 = v57;
      }
      *(void *)(v13 + 16) = v21;
      uint64_t v22 = v13 + v17;
      *(void *)(v22 + 32) = v18;
      *(void *)(v22 + 40) = 0;
      *(unsigned char *)(v22 + 48) = 0;
      v17 += 24;
      unint64_t v16 = v21;
      --v12;
    }
    while (v12);
    a6 = v55;
    uint64_t v7 = v66;
  }
  else if (!*(void *)(MEMORY[0x263F8EE78] + 16))
  {
    sub_259FB3304();
    swift_allocError();
    *(void *)uint64_t v25 = 0xD000000000000011;
    *(void *)(v25 + 8) = 0x800000025A00F9A0;
    *(unsigned char *)(v25 + 16) = 5;
    sub_259FBAA50(a4, a5);
    swift_willThrow();
    goto LABEL_15;
  }
  *(void *)&long long v57 = v13;
  *((void *)&v57 + 1) = a4;
  uint64_t v58 = a5;
  sub_259FBAA50(a4, a5);
  sub_259FDE504((uint64_t *)&v57, 0, (uint64_t)v65);
  if (v7)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return sub_259FAD1BC(a4, a5);
  }
  swift_bridgeObjectRelease();
  sub_259FAD1BC(a4, a5);
  if (v65[40] == 255)
  {
    uint64_t result = sub_259FAF090((uint64_t)v65);
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
    __int16 v26 = -256;
LABEL_17:
    *(_WORD *)(a6 + 32) = v26;
  }
  else
  {
    sub_259FAEE8C((uint64_t)v65, (uint64_t)&v61);
    switch(v64)
    {
      case 1:
        uint64_t v27 = v61;
        uint64_t result = sub_259FAED74((uint64_t)v65);
        *(void *)a6 = v27;
        *(void *)(a6 + 8) = 0;
        *(void *)(a6 + 16) = 0;
        *(void *)(a6 + 24) = 0;
        __int16 v26 = 256;
        goto LABEL_17;
      case 2:
        uint64_t v28 = v61;
        uint64_t result = sub_259FAED74((uint64_t)v65);
        *(void *)a6 = v28;
        *(void *)(a6 + 8) = 0;
        *(void *)(a6 + 16) = 0;
        *(void *)(a6 + 24) = 0;
        __int16 v26 = 512;
        goto LABEL_17;
      case 3:
        uint64_t v29 = v61;
        uint64_t result = sub_259FAED74((uint64_t)v65);
        *(void *)a6 = v29;
        *(void *)(a6 + 8) = 0;
        *(void *)(a6 + 16) = 0;
        *(void *)(a6 + 24) = 0;
        __int16 v26 = 768;
        goto LABEL_17;
      case 4:
        uint64_t v30 = v61;
        uint64_t result = sub_259FAED74((uint64_t)v65);
        *(void *)a6 = v30;
        *(void *)(a6 + 8) = 0;
        *(void *)(a6 + 16) = 0;
        *(void *)(a6 + 24) = 0;
        __int16 v26 = 1024;
        goto LABEL_17;
      case 5:
        uint64_t v31 = v61;
        uint64_t result = sub_259FAED74((uint64_t)v65);
        *(void *)a6 = v31;
        *(void *)(a6 + 8) = 0;
        *(void *)(a6 + 16) = 0;
        *(void *)(a6 + 24) = 0;
        __int16 v26 = 1280;
        goto LABEL_17;
      case 6:
        uint64_t v32 = v61;
        uint64_t result = sub_259FAED74((uint64_t)v65);
        *(void *)a6 = v32;
        *(void *)(a6 + 8) = 0;
        *(void *)(a6 + 16) = 0;
        *(void *)(a6 + 24) = 0;
        __int16 v26 = 1536;
        goto LABEL_17;
      case 7:
        long long v56 = v61;
        long long v33 = v62;
        __int16 v34 = v63;
        uint64_t result = sub_259FAED74((uint64_t)v65);
        __int16 v26 = v34 | 0x700;
        *(_OWORD *)a6 = v56;
        *(_OWORD *)(a6 + 16) = v33;
        goto LABEL_17;
      case 8:
        sub_259FAF0F0(&v61, (uint64_t)&v57);
        uint64_t v35 = v59;
        uint64_t v36 = v60;
        __swift_project_boxed_opaque_existential_1(&v57, v59);
        uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 24))(v35, v36);
        uint64_t v39 = v38;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v57);
        uint64_t result = sub_259FAED74((uint64_t)v65);
        *(void *)a6 = v37;
        *(void *)(a6 + 8) = v39;
        *(void *)(a6 + 16) = 0;
        *(void *)(a6 + 24) = 0;
        __int16 v26 = 2048;
        goto LABEL_17;
      case 9:
        sub_259FAF0F0(&v61, (uint64_t)&v57);
        uint64_t v40 = v59;
        uint64_t v41 = v60;
        __swift_project_boxed_opaque_existential_1(&v57, v59);
        uint64_t v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 16))(v40, v41);
        uint64_t v44 = v43;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v57);
        uint64_t result = sub_259FAED74((uint64_t)v65);
        *(void *)a6 = v42;
        *(void *)(a6 + 8) = v44;
        *(void *)(a6 + 16) = 0;
        *(void *)(a6 + 24) = 0;
        __int16 v26 = 2304;
        goto LABEL_17;
      case 10:
        long long v45 = v61;
        uint64_t v59 = MEMORY[0x263F8D3E8];
        uint64_t v60 = MEMORY[0x263F07B80];
        long long v57 = v62;
        int64_t v46 = __swift_project_boxed_opaque_existential_1(&v57, MEMORY[0x263F8D3E8]);
        uint64_t v47 = *v46;
        if (*v46 && (uint64_t v48 = (unsigned char *)v46[1], v49 = (uint64_t)&v48[-v47], v48 != (unsigned char *)v47))
        {
          if (v49 <= 14)
          {
            uint64_t v50 = sub_259FC3B50((unsigned char *)*v46, v48);
            unint64_t v51 = v53 & 0xFFFFFFFFFFFFFFLL;
            swift_unknownObjectRetain();
          }
          else
          {
            swift_unknownObjectRetain();
            if ((unint64_t)v49 >= 0x7FFFFFFF)
            {
              uint64_t v50 = sub_259FC3C98(v47, (uint64_t)v48);
              unint64_t v51 = v54 | 0x8000000000000000;
            }
            else
            {
              uint64_t v50 = sub_259FC3C14(v47, (uint64_t)v48);
              unint64_t v51 = v52 | 0x4000000000000000;
            }
          }
        }
        else
        {
          swift_unknownObjectRetain();
          uint64_t v50 = 0;
          unint64_t v51 = 0xC000000000000000;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v57);
        swift_unknownObjectRelease();
        uint64_t result = sub_259FAED74((uint64_t)v65);
        *(_OWORD *)a6 = v45;
        *(void *)(a6 + 16) = v50;
        *(void *)(a6 + 24) = v51;
        __int16 v26 = 2560;
        goto LABEL_17;
      default:
        uint64_t v23 = v61;
        uint64_t result = sub_259FAED74((uint64_t)v65);
        *(void *)a6 = v23;
        *(void *)(a6 + 8) = 0;
        *(void *)(a6 + 16) = 0;
        *(void *)(a6 + 24) = 0;
        *(_WORD *)(a6 + 32) = 0;
        break;
    }
  }
  return result;
}

void Schematizer.RepeatableFieldIterator.next()(uint64_t a1@<X8>)
{
  uint64_t v76 = *MEMORY[0x263EF8340];
  uint64_t v4 = v1[8];
  if ((~v4 & 0xF000000000000007) != 0)
  {
    uint64_t v5 = v1[1];
    uint64_t v6 = v1[2];
    uint64_t v7 = v1[3];
    uint64_t v8 = v1[4];
    unint64_t v9 = v1[5];
    uint64_t v10 = v1[6];
    uint64_t v11 = v1[7];
    *(void *)&long long v68 = *v1;
    *((void *)&v68 + 1) = v5;
    uint64_t v69 = v6;
    unsigned __int8 v70 = v7 & 1;
    uint64_t v71 = v8;
    unint64_t v72 = v9;
    uint64_t v73 = v10;
    uint64_t v74 = v11;
    uint64_t v75 = v4;
    uint64_t v55 = v68;
    uint64_t v57 = v7;
    uint64_t v53 = v6;
    uint64_t v54 = v5;
    uint64_t v52 = v10;
    switch(v9 >> 62)
    {
      case 1uLL:
        if (v8 >> 32 < (int)v8) {
          __break(1u);
        }
        sub_259FD279C(v68, v5, v6, v7, v8, v9, v10, v11, v4, (void (*)(uint64_t, uint64_t))sub_259FAE450, (void (*)(uint64_t, uint64_t))sub_259FBAA50);
        sub_259FAE450(v8, v9);
        sub_259FD2288((int)v8, v8 >> 32, (uint64_t *)&v68, (uint64_t)v67);
        goto LABEL_10;
      case 2uLL:
        uint64_t v51 = *(void *)(v8 + 16);
        uint64_t v13 = *(void *)(v8 + 24);
        sub_259FD279C(v68, v5, v6, v7, v8, v9, v10, v11, v4, (void (*)(uint64_t, uint64_t))sub_259FAE450, (void (*)(uint64_t, uint64_t))sub_259FBAA50);
        sub_259FAE450(v8, v9);
        swift_retain();
        swift_retain();
        sub_259FD2288(v51, v13, (uint64_t *)&v68, (uint64_t)v67);
        uint64_t v14 = v2;
        swift_release();
        swift_release();
        goto LABEL_11;
      case 3uLL:
        *(void *)&v66[6] = 0;
        *(void *)uint64_t v66 = 0;
        sub_259FAE450(v8, v9);
        sub_259FBAA50(v11, v4);
        int64_t v12 = v66;
        goto LABEL_9;
      default:
        *(void *)uint64_t v66 = v8;
        *(_WORD *)&v66[8] = v9;
        v66[10] = BYTE2(v9);
        v66[11] = BYTE3(v9);
        v66[12] = BYTE4(v9);
        v66[13] = BYTE5(v9);
        sub_259FAE450(v8, v9);
        sub_259FBAA50(v11, v4);
        int64_t v12 = &v66[BYTE6(v9)];
LABEL_9:
        sub_259FD1DC0((uint64_t)v66, (uint64_t)v12, (uint64_t *)&v68, (uint64_t)v67);
LABEL_10:
        uint64_t v14 = v2;
LABEL_11:
        sub_259FAE4A8(v8, v9);
        if (v14) {
          goto LABEL_12;
        }
        sub_259FD2734((uint64_t)v67, (uint64_t)&v62);
        if (v65 == 255)
        {
          sub_259FAF090((uint64_t)v67);
          sub_259FAF090((uint64_t)&v62);
          sub_259FD279C(*v1, v1[1], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], (void (*)(uint64_t, uint64_t))sub_259FAE4A8, (void (*)(uint64_t, uint64_t))sub_259FAD1BC);
          *((_OWORD *)v1 + 2) = 0u;
          *((_OWORD *)v1 + 3) = 0u;
          *(_OWORD *)uint64_t v1 = 0u;
          *((_OWORD *)v1 + 1) = 0u;
          v1[8] = 0xF000000000000007;
          *(_OWORD *)a1 = 0u;
          *(_OWORD *)(a1 + 16) = 0u;
          *(_WORD *)(a1 + 32) = -256;
LABEL_12:
          uint64_t v15 = v74;
          uint64_t v16 = v75;
          sub_259FAE4A8(v71, v72);
          sub_259FAD1BC(v15, v16);
        }
        else
        {
          uint64_t v46 = a1;
          sub_259FC2DB4((uint64_t)&v62, (uint64_t)v66);
          long long v50 = v68;
          uint64_t v48 = v70;
          uint64_t v49 = v69;
          uint64_t v17 = v71;
          unint64_t v18 = v72;
          uint64_t v19 = v74;
          uint64_t v47 = v73;
          uint64_t v20 = v75;
          sub_259FAE450(v71, v72);
          sub_259FBAA50(v19, v20);
          uint64_t v21 = v8;
          uint64_t v22 = v17;
          uint64_t v23 = v9;
          uint64_t v24 = v19;
          sub_259FD279C(v55, v54, v53, v57, v21, v23, v52, v11, v4, (void (*)(uint64_t, uint64_t))sub_259FAE4A8, (void (*)(uint64_t, uint64_t))sub_259FAD1BC);
          *(_OWORD *)uint64_t v1 = v50;
          v1[2] = v49;
          v1[3] = v48;
          v1[4] = v17;
          v1[5] = v18;
          uint64_t v56 = v20;
          unint64_t v58 = v18;
          v1[6] = v47;
          v1[7] = v19;
          v1[8] = v20;
          sub_259FAEE8C((uint64_t)v66, (uint64_t)&v62);
          __int16 v25 = v65;
          switch(v26)
          {
            case 2:
            case 3:
            case 5:
              uint64_t v27 = 0;
              uint64_t v28 = 0;
              unint64_t v29 = 0;
              __int16 v30 = 0;
              uint64_t v31 = v62;
              goto LABEL_23;
            case 6:
              uint64_t v27 = 0;
              uint64_t v28 = 0;
              unint64_t v29 = 0;
              __int16 v30 = 0;
              uint64_t v31 = v62;
              goto LABEL_23;
            case 7:
              uint64_t v27 = *((void *)&v62 + 1);
              uint64_t v31 = v62;
              unint64_t v29 = *((void *)&v63 + 1);
              uint64_t v28 = v63;
              __int16 v30 = v64;
              goto LABEL_23;
            case 8:
              sub_259FAF0F0(&v62, (uint64_t)&v59);
              uint64_t v32 = v60;
              uint64_t v33 = v61;
              __swift_project_boxed_opaque_existential_1(&v59, v60);
              uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 24))(v32, v33);
              goto LABEL_22;
            case 9:
              sub_259FAF0F0(&v62, (uint64_t)&v59);
              uint64_t v36 = v60;
              uint64_t v37 = v61;
              __swift_project_boxed_opaque_existential_1(&v59, v60);
              uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 16))(v36, v37);
LABEL_22:
              uint64_t v31 = v34;
              uint64_t v27 = v35;
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v59);
              uint64_t v28 = 0;
              unint64_t v29 = 0;
              __int16 v30 = 0;
              goto LABEL_23;
            case 10:
              uint64_t v27 = *((void *)&v62 + 1);
              uint64_t v31 = v62;
              uint64_t v60 = MEMORY[0x263F8D3E8];
              uint64_t v61 = MEMORY[0x263F07B80];
              long long v59 = v63;
              uint64_t v39 = __swift_project_boxed_opaque_existential_1(&v59, MEMORY[0x263F8D3E8]);
              uint64_t v40 = *v39;
              if (*v39 && (uint64_t v41 = (unsigned char *)v39[1], v42 = (uint64_t)&v41[-v40], v41 != (unsigned char *)v40))
              {
                uint64_t v38 = v46;
                if (v42 <= 14)
                {
                  uint64_t v28 = sub_259FC3B50((unsigned char *)*v39, v41);
                  unint64_t v29 = v44 & 0xFFFFFFFFFFFFFFLL;
                  swift_unknownObjectRetain();
                }
                else
                {
                  swift_unknownObjectRetain();
                  if ((unint64_t)v42 >= 0x7FFFFFFF)
                  {
                    uint64_t v28 = sub_259FC3C98(v40, (uint64_t)v41);
                    unint64_t v29 = v45 | 0x8000000000000000;
                  }
                  else
                  {
                    uint64_t v28 = sub_259FC3C14(v40, (uint64_t)v41);
                    unint64_t v29 = v43 | 0x4000000000000000;
                  }
                }
              }
              else
              {
                swift_unknownObjectRetain();
                uint64_t v28 = 0;
                unint64_t v29 = 0xC000000000000000;
                uint64_t v38 = v46;
              }
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v59);
              swift_unknownObjectRelease();
              __int16 v30 = 0;
              goto LABEL_24;
            default:
              uint64_t v27 = 0;
              uint64_t v28 = 0;
              unint64_t v29 = 0;
              __int16 v30 = 0;
              uint64_t v31 = v62;
LABEL_23:
              uint64_t v38 = v46;
LABEL_24:
              sub_259FAED74((uint64_t)v66);
              sub_259FAF090((uint64_t)v67);
              *(void *)uint64_t v38 = v31;
              *(void *)(v38 + 8) = v27;
              *(void *)(v38 + 16) = v28;
              *(void *)(v38 + 24) = v29;
              *(_WORD *)(v38 + 32) = v30 | (v25 << 8);
              sub_259FAE4A8(v22, v58);
              sub_259FAD1BC(v24, v56);
              break;
          }
        }
        break;
    }
  }
  else
  {
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_WORD *)(a1 + 32) = -256;
  }
}

uint64_t sub_259FD1DC0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = result;
  uint64_t v10 = a3[7];
  uint64_t v9 = a3[8];
  if (a3[3])
  {
    uint64_t v11 = a2 - result;
    if (!result) {
      uint64_t v11 = 0;
    }
    uint64_t v35 = result;
    uint64_t v36 = a2;
    uint64_t v38 = 0;
    uint64_t v39 = 0;
    uint64_t v37 = v11;
    unsigned __int8 v40 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B3251A8);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_25A010B90;
    *(void *)(v12 + 32) = a3[6];
    *(void *)(v12 + 40) = 0;
    *(unsigned char *)(v12 + 48) = 1;
    v32[0] = v12;
    v32[1] = v10;
    v32[2] = v9;
    sub_259FBAA50(v10, v9);
    sub_259FBAA50(v10, v9);
    sub_259FDE504(v32, 0, (uint64_t)&v33);
    swift_bridgeObjectRelease();
    sub_259FAD1BC(v10, v9);
    uint64_t result = sub_259FAD1BC(v10, v9);
    if (!v4)
    {
      uint64_t v13 = v40;
      uint64_t v15 = v38;
      uint64_t v14 = v39;
      if (v40) {
        uint64_t v14 = 0;
      }
      *a3 = v14;
      a3[1] = v13;
      a3[2] = v15;
      *((unsigned char *)a3 + 24) = 0;
      return sub_259FD3340((uint64_t)&v33, a4);
    }
    return result;
  }
  uint64_t v16 = a3[2];
  if ((a3[1] & 1) == 0)
  {
    uint64_t v17 = *a3;
    if (v16 < *a3)
    {
      uint64_t v35 = result;
      uint64_t v36 = a2;
      uint64_t v37 = v17;
      uint64_t v38 = v16;
      uint64_t v39 = 0;
      unsigned __int8 v40 = 1;
      uint64_t v33 = v10;
      uint64_t v34 = v9;
      uint64_t result = (uint64_t)sub_259FF3780((unint64_t *)&v33, a4);
      goto LABEL_56;
    }
LABEL_15:
    *(void *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    *(unsigned char *)(a4 + 40) = -1;
    return result;
  }
  if (result)
  {
    uint64_t v18 = a2 - result;
    if (v16 >= a2 - result) {
      goto LABEL_15;
    }
    uint64_t v19 = result;
  }
  else
  {
    if ((v16 & 0x8000000000000000) == 0) {
      goto LABEL_15;
    }
    uint64_t v19 = 0;
    uint64_t v18 = 0;
  }
  uint64_t v35 = v19;
  uint64_t v36 = a2;
  uint64_t v37 = v18;
  uint64_t v38 = v16;
  uint64_t v39 = 0;
  unsigned __int8 v40 = 1;
  unint64_t v20 = *(unsigned __int8 *)(result + v16);
  if (*(char *)(result + v16) < 0)
  {
    if (v16 + 1 >= v18) {
      goto LABEL_53;
    }
    v20 &= 0x7Fu;
    unint64_t v23 = 7;
    while (1)
    {
      v20 |= (unint64_t)(*(unsigned char *)(result + 1 + v16) & 0x7F) << v23;
      if ((*(unsigned char *)(result + 1 + v16) & 0x80) == 0) {
        break;
      }
      if (v16 + 2 < v18)
      {
        ++v16;
        BOOL v24 = v23 >= 0x39;
        v23 += 7;
        if (!v24) {
          continue;
        }
      }
      goto LABEL_53;
    }
    uint64_t v38 = v16 + 2;
    if (v20 >= 0xFFFFFFFF)
    {
LABEL_53:
      sub_259FBA9FC();
      swift_allocError();
      *(void *)uint64_t v30 = 1;
      *(_OWORD *)(v30 + 8) = 0u;
      *(_OWORD *)(v30 + 24) = 0u;
      *(_OWORD *)(v30 + 40) = 0u;
      *(void *)(v30 + 56) = 0;
      *(unsigned char *)(v30 + 64) = 2;
      uint64_t result = swift_willThrow();
      goto LABEL_56;
    }
  }
  else
  {
    uint64_t v38 = v16 + 1;
  }
  sub_259FBAA50(v10, v9);
  unint64_t v21 = sub_259FD4400(v20);
  if (v4)
  {
LABEL_55:
    uint64_t result = sub_259FAD1BC(v10, v9);
LABEL_56:
    if ((a3[3] & 1) == 0) {
      a3[2] = v38;
    }
    return result;
  }
  if (a3[6] == v21 >> 3)
  {
LABEL_21:
    uint64_t v33 = v10;
    uint64_t v34 = v9;
    char v22 = sub_259FAE500(v21);
    sub_259FAE514(&v33, v22, a4);
    goto LABEL_55;
  }
  uint64_t v41 = a2 - v7;
  while (1)
  {
    sub_259FC4550(v21);
    uint64_t v25 = v38;
    if (v38 >= v18) {
      break;
    }
    if (v7)
    {
      uint64_t v26 = v41;
      if (v38 >= v41) {
        goto LABEL_54;
      }
    }
    else
    {
      if ((v38 & 0x8000000000000000) == 0) {
        goto LABEL_54;
      }
      uint64_t v26 = 0;
    }
    unint64_t v21 = *(unsigned __int8 *)(v7 + v38);
    if (*(char *)(v7 + v38) < 0)
    {
      if (v38 + 1 >= v26) {
        goto LABEL_54;
      }
      v21 &= 0x7Fu;
      unint64_t v27 = 7;
      while (1)
      {
        v21 |= (unint64_t)(*(unsigned char *)(v7 + 1 + v25) & 0x7F) << v27;
        if ((*(unsigned char *)(v7 + 1 + v25) & 0x80) == 0) {
          break;
        }
        if (v25 + 2 < v26)
        {
          ++v25;
          BOOL v28 = v27 > 0x38;
          v27 += 7;
          if (!v28) {
            continue;
          }
        }
        goto LABEL_54;
      }
      uint64_t v38 = v25 + 2;
      if (v21 > 0xFFFFFFFE)
      {
LABEL_54:
        sub_259FBA9FC();
        swift_allocError();
        *(void *)uint64_t v31 = 1;
        *(_OWORD *)(v31 + 8) = 0u;
        *(_OWORD *)(v31 + 24) = 0u;
        *(_OWORD *)(v31 + 40) = 0u;
        *(void *)(v31 + 56) = 0;
        *(unsigned char *)(v31 + 64) = 2;
        swift_willThrow();
        goto LABEL_55;
      }
    }
    else
    {
      ++v38;
    }
    if (v21 < 8 || (v21 & 6) == 6) {
      goto LABEL_54;
    }
    if (a3[6] == v21 >> 3) {
      goto LABEL_21;
    }
  }
  uint64_t result = sub_259FAD1BC(v10, v9);
  *(void *)(a4 + 32) = 0;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  *(unsigned char *)(a4 + 40) = -1;
  if ((a3[3] & 1) == 0) {
    a3[2] = v25;
  }
  return result;
}

uint64_t static Schematizer.makeRepeatableFieldIterator(in:withFieldNumber:type:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, void *a5@<X8>)
{
  uint64_t v5 = *a4;
  uint64_t v6 = a4[1];
  *a5 = 0;
  a5[1] = 0;
  a5[2] = 0;
  a5[3] = 1;
  a5[4] = a1;
  a5[5] = a2;
  a5[6] = a3;
  a5[7] = v5;
  a5[8] = v6;
  sub_259FAE450(a1, a2);
  return sub_259FBAA50(v5, v6);
}

uint64_t sub_259FD2288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t result = sub_25A00E270();
  uint64_t v9 = result;
  if (result)
  {
    uint64_t result = sub_25A00E290();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v12 = sub_25A00E280();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t v14 = v9 + v13;
  if (v9) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  return sub_259FD1DC0(v9, v15, a3, a4);
}

uint64_t sub_259FD232C(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D20);
  uint64_t result = sub_25A00EDC0();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = result + 64;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v4 << 6))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v16 = *v15;
    uint64_t result = v15[1];
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 56) + 32 * i);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = v17[2];
    unint64_t v21 = v17[3];
    *(void *)(v9 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    char v22 = (void *)(v3[6] + 16 * i);
    void *v22 = v16;
    v22[1] = result;
    uint64_t v23 = v3[7] + 40 * i;
    *(void *)uint64_t v23 = v19;
    *(void *)(v23 + 8) = v18;
    *(void *)(v23 + 16) = v20;
    *(void *)(v23 + 24) = v21;
    *(unsigned char *)(v23 + 32) = 0;
    uint64_t v24 = v3[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_259FAF3C4(v20, v21);
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v12 >= v27) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v27) {
        return (uint64_t)v3;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v27) {
          return (uint64_t)v3;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v27) {
    return (uint64_t)v3;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v27) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_259FD2530(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D28);
  uint64_t result = sub_25A00EDC0();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = result + 64;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v4 << 6))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v16 = *v15;
    uint64_t result = v15[1];
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 56) + 32 * i);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    unint64_t v21 = v17[2];
    uint64_t v20 = v17[3];
    *(void *)(v9 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    char v22 = (void *)(v3[6] + 16 * i);
    void *v22 = v16;
    v22[1] = result;
    uint64_t v23 = v3[7] + 40 * i;
    *(void *)uint64_t v23 = v19;
    *(void *)(v23 + 8) = v18;
    *(void *)(v23 + 16) = v21;
    *(void *)(v23 + 24) = v20;
    *(unsigned char *)(v23 + 32) = 0;
    uint64_t v24 = v3[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v18, v21);
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v12 >= v27) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v27) {
        return (uint64_t)v3;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v27) {
          return (uint64_t)v3;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v27) {
    return (uint64_t)v3;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v27) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_259FD2734(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B324DC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_259FD279C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(uint64_t, uint64_t), void (*a11)(uint64_t, uint64_t))
{
  if ((~a9 & 0xF000000000000007) != 0)
  {
    a10(a5, a6);
    a11(a8, a9);
  }
}

ValueMetadata *type metadata accessor for Schematizer()
{
  return &type metadata for Schematizer;
}

void *destroy for Schematizer.RepeatableFieldIterator(void *result)
{
  uint64_t v1 = result[8];
  if ((~v1 & 0xF000000000000007) != 0)
  {
    uint64_t v2 = result;
    sub_259FAE4A8(result[4], result[5]);
    uint64_t v3 = v2[7];
    return (void *)sub_259FAD1BC(v3, v1);
  }
  return result;
}

uint64_t initializeWithCopy for Schematizer.RepeatableFieldIterator(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 64);
  if ((~v4 & 0xF000000000000007) != 0)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    uint64_t v7 = *(void *)(a2 + 32);
    unint64_t v8 = *(void *)(a2 + 40);
    sub_259FAE450(v7, v8);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    uint64_t v9 = *(void *)(a2 + 48);
    uint64_t v10 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v9;
    sub_259FBAA50(v10, v4);
    *(void *)(a1 + 56) = v10;
    *(void *)(a1 + 64) = v4;
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v5;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
  }
  return a1;
}

uint64_t assignWithCopy for Schematizer.RepeatableFieldIterator(uint64_t a1, long long *a2)
{
  unint64_t v4 = a2[4] & 0xF000000000000007;
  if ((~*(void *)(a1 + 64) & 0xF000000000000007) != 0)
  {
    if (v4 == 0xF000000000000007)
    {
      sub_259FD2A6C(a1);
      *(_OWORD *)a1 = *a2;
      long long v9 = a2[2];
      long long v8 = a2[3];
      long long v10 = a2[1];
      *(void *)(a1 + 64) = *((void *)a2 + 8);
      *(_OWORD *)(a1 + 32) = v9;
      *(_OWORD *)(a1 + 48) = v8;
      *(_OWORD *)(a1 + 16) = v10;
    }
    else
    {
      long long v16 = *a2;
      *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
      *(_OWORD *)a1 = v16;
      uint64_t v17 = *((void *)a2 + 4);
      unint64_t v18 = *((void *)a2 + 5);
      sub_259FAE450(v17, v18);
      uint64_t v19 = *(void *)(a1 + 32);
      unint64_t v20 = *(void *)(a1 + 40);
      *(void *)(a1 + 32) = v17;
      *(void *)(a1 + 40) = v18;
      sub_259FAE4A8(v19, v20);
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      uint64_t v22 = *((void *)a2 + 7);
      uint64_t v21 = *((void *)a2 + 8);
      sub_259FBAA50(v22, v21);
      uint64_t v23 = *(void *)(a1 + 56);
      uint64_t v24 = *(void *)(a1 + 64);
      *(void *)(a1 + 56) = v22;
      *(void *)(a1 + 64) = v21;
      sub_259FAD1BC(v23, v24);
    }
  }
  else if (v4 == 0xF000000000000007)
  {
    *(_OWORD *)a1 = *a2;
    long long v5 = a2[1];
    long long v6 = a2[2];
    long long v7 = a2[3];
    *(void *)(a1 + 64) = *((void *)a2 + 8);
    *(_OWORD *)(a1 + 32) = v6;
    *(_OWORD *)(a1 + 48) = v7;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    long long v11 = *a2;
    *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
    *(_OWORD *)a1 = v11;
    uint64_t v12 = *((void *)a2 + 4);
    unint64_t v13 = *((void *)a2 + 5);
    sub_259FAE450(v12, v13);
    *(void *)(a1 + 32) = v12;
    *(void *)(a1 + 40) = v13;
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    uint64_t v15 = *((void *)a2 + 7);
    uint64_t v14 = *((void *)a2 + 8);
    sub_259FBAA50(v15, v14);
    *(void *)(a1 + 56) = v15;
    *(void *)(a1 + 64) = v14;
  }
  return a1;
}

uint64_t sub_259FD2A6C(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for Schematizer.RepeatableFieldIterator(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 64);
  if ((~v4 & 0xF000000000000007) != 0)
  {
    uint64_t v5 = *(void *)(a2 + 64);
    if ((~v5 & 0xF000000000000007) != 0)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
      uint64_t v8 = *(void *)(a1 + 32);
      unint64_t v9 = *(void *)(a1 + 40);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      sub_259FAE4A8(v8, v9);
      uint64_t v10 = *(void *)(a1 + 56);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(void *)(a1 + 64) = v5;
      sub_259FAD1BC(v10, v4);
      return a1;
    }
    sub_259FD2A6C(a1);
  }
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for Schematizer.RepeatableFieldIterator(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7D && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 125);
  }
  int v3 = ((*(void *)(a1 + 64) >> 57) >> 5) | (4
                                                          * ((*(void *)(a1 + 64) >> 57) & 0x18 | *(void *)(a1 + 64) & 7));
  unsigned int v4 = v3 ^ 0x7F;
  int v5 = 126 - v3;
  if (v4 >= 0x7D) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Schematizer.RepeatableFieldIterator(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 - 125;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 72) = 0;
    }
    if (a2)
    {
      *(void *)(result + 56) = 0;
      *(void *)(result + 64) = ((32 * (a2 ^ 0x7F)) | ((a2 ^ 0x7F) >> 2) | ((unint64_t)((32 * (a2 ^ 0x7F)) | ((a2 ^ 0x7F) >> 2)) << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Schematizer.RepeatableFieldIterator()
{
  return &type metadata for Schematizer.RepeatableFieldIterator;
}

void *destroy for Schematizer.RepeatableFieldIterator.State(void *result)
{
  unint64_t v1 = result[8];
  if (((((v1 >> 57) >> 5) | (4 * ((v1 >> 57) & 0x18 | v1 & 7))) ^ 0x7F) >= 0x7D)
  {
    uint64_t v2 = result;
    sub_259FAE4A8(result[4], result[5]);
    uint64_t v3 = v2[7];
    return (void *)sub_259FAD1BC(v3, v1);
  }
  return result;
}

uint64_t initializeWithCopy for Schematizer.RepeatableFieldIterator.State(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 64);
  if (((((v4 >> 57) >> 5) | (4 * ((v4 >> 57) & 0x18 | v4 & 7))) ^ 0x7F) < 0x7D)
  {
    long long v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    long long v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    uint64_t v5 = *(void *)(a2 + 32);
    unint64_t v6 = *(void *)(a2 + 40);
    sub_259FAE450(v5, v6);
    *(void *)(a1 + 32) = v5;
    *(void *)(a1 + 40) = v6;
    uint64_t v7 = *(void *)(a2 + 48);
    uint64_t v8 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v7;
    sub_259FBAA50(v8, v4);
    *(void *)(a1 + 56) = v8;
    *(void *)(a1 + 64) = v4;
  }
  return a1;
}

uint64_t assignWithCopy for Schematizer.RepeatableFieldIterator.State(uint64_t a1, long long *a2)
{
  unsigned int v4 = (((*((void *)a2 + 8) >> 57) >> 5) | (4 * ((*((void *)a2 + 8) >> 57) & 0x18 | a2[4] & 7))) ^ 0x7F;
  if (((((*(void *)(a1 + 64) >> 57) >> 5) | (4
                                                            * ((*(void *)(a1 + 64) >> 57) & 0x18 | *(void *)(a1 + 64) & 7))) ^ 0x7F) < 0x7D)
  {
    if (v4 >= 0x7D)
    {
      long long v14 = *a2;
      *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
      *(_OWORD *)a1 = v14;
      uint64_t v15 = *((void *)a2 + 4);
      unint64_t v16 = *((void *)a2 + 5);
      sub_259FAE450(v15, v16);
      *(void *)(a1 + 32) = v15;
      *(void *)(a1 + 40) = v16;
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      uint64_t v18 = *((void *)a2 + 7);
      uint64_t v17 = *((void *)a2 + 8);
      sub_259FBAA50(v18, v17);
      *(void *)(a1 + 56) = v18;
      *(void *)(a1 + 64) = v17;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *a2;
    long long v19 = a2[1];
    long long v20 = a2[2];
    long long v21 = a2[3];
    *(void *)(a1 + 64) = *((void *)a2 + 8);
    *(_OWORD *)(a1 + 32) = v20;
    *(_OWORD *)(a1 + 48) = v21;
    *(_OWORD *)(a1 + 16) = v19;
    return a1;
  }
  if (v4 < 0x7D)
  {
    sub_259FAE4A8(*(void *)(a1 + 32), *(void *)(a1 + 40));
    sub_259FAD1BC(*(void *)(a1 + 56), *(void *)(a1 + 64));
    goto LABEL_7;
  }
  long long v5 = *a2;
  *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
  *(_OWORD *)a1 = v5;
  uint64_t v6 = *((void *)a2 + 4);
  unint64_t v7 = *((void *)a2 + 5);
  sub_259FAE450(v6, v7);
  uint64_t v8 = *(void *)(a1 + 32);
  unint64_t v9 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  sub_259FAE4A8(v8, v9);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  uint64_t v11 = *((void *)a2 + 7);
  uint64_t v10 = *((void *)a2 + 8);
  sub_259FBAA50(v11, v10);
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v13 = *(void *)(a1 + 64);
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v10;
  sub_259FAD1BC(v12, v13);
  return a1;
}

uint64_t assignWithTake for Schematizer.RepeatableFieldIterator.State(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 64);
  if (((((v4 >> 57) >> 5) | (4 * ((v4 >> 57) & 0x18 | v4 & 7))) ^ 0x7F) < 0x7D) {
    goto LABEL_5;
  }
  unint64_t v5 = *(void *)(a2 + 64);
  if (((((v5 >> 57) >> 5) | (4 * ((v5 >> 57) & 0x18 | v5 & 7))) ^ 0x7F) < 0x7D)
  {
    sub_259FAE4A8(*(void *)(a1 + 32), *(void *)(a1 + 40));
    sub_259FAD1BC(*(void *)(a1 + 56), v4);
LABEL_5:
    long long v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    long long v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  uint64_t v6 = *(void *)(a1 + 32);
  unint64_t v7 = *(void *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  sub_259FAE4A8(v6, v7);
  uint64_t v8 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = v5;
  sub_259FAD1BC(v8, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Schematizer.RepeatableFieldIterator.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7D && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 125);
  }
  unsigned int v3 = (((*(void *)(a1 + 64) >> 57) >> 5) | (4
                                                           * ((*(void *)(a1 + 64) >> 57) & 0x18 | *(void *)(a1 + 64) & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  if (v3 + 1 >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Schematizer.RepeatableFieldIterator.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(void *)(result + 64) = 0;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 125;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 72) = 0;
    }
    if (a2)
    {
      *(void *)(result + 56) = 0;
      *(void *)(result + 64) = ((32 * (a2 ^ 0x7F)) | ((a2 ^ 0x7F) >> 2) | ((unint64_t)((32 * (a2 ^ 0x7F)) | ((a2 ^ 0x7F) >> 2)) << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_259FD3054(uint64_t a1)
{
  int v1 = ((*(void *)(a1 + 64) >> 57) >> 5) | (4
                                                          * ((*(void *)(a1 + 64) >> 57) & 0x18 | *(void *)(a1 + 64) & 7));
  unsigned int v2 = v1 ^ 0x7F;
  unsigned int v3 = 128 - v1;
  if (v2 >= 0x7D) {
    return 0;
  }
  else {
    return v3;
  }
}

double sub_259FD3084(uint64_t a1, unsigned int a2)
{
  if (a2 > 0x7D)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(void *)a1 = a2 - 126;
  }
  else if (a2)
  {
    uint64_t v2 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
    *(void *)(a1 + 56) = 0;
    *(void *)(a1 + 64) = (v2 | (v2 << 57)) & 0xF000000000000007;
  }
  return result;
}

ValueMetadata *type metadata accessor for Schematizer.RepeatableFieldIterator.State()
{
  return &type metadata for Schematizer.RepeatableFieldIterator.State;
}

uint64_t destroy for Schematizer.RepeatableFieldIterator.IterationState(void *a1)
{
  sub_259FAE4A8(a1[4], a1[5]);
  uint64_t v2 = a1[7];
  uint64_t v3 = a1[8];
  return sub_259FAD1BC(v2, v3);
}

uint64_t initializeWithCopy for Schematizer.RepeatableFieldIterator.IterationState(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  uint64_t v4 = *(void *)(a2 + 32);
  unint64_t v5 = *(void *)(a2 + 40);
  sub_259FAE450(v4, v5);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 64);
  sub_259FBAA50(v6, v7);
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  return a1;
}

uint64_t assignWithCopy for Schematizer.RepeatableFieldIterator.IterationState(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
  *(_OWORD *)a1 = v4;
  uint64_t v5 = *((void *)a2 + 4);
  unint64_t v6 = *((void *)a2 + 5);
  sub_259FAE450(v5, v6);
  uint64_t v7 = *(void *)(a1 + 32);
  unint64_t v8 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  sub_259FAE4A8(v7, v8);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  uint64_t v10 = *((void *)a2 + 7);
  uint64_t v9 = *((void *)a2 + 8);
  sub_259FBAA50(v10, v9);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v9;
  sub_259FAD1BC(v11, v12);
  return a1;
}

uint64_t assignWithTake for Schematizer.RepeatableFieldIterator.IterationState(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  uint64_t v4 = *(void *)(a1 + 32);
  unint64_t v5 = *(void *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  sub_259FAE4A8(v4, v5);
  uint64_t v6 = *(void *)(a2 + 64);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = v6;
  sub_259FAD1BC(v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for Schematizer.RepeatableFieldIterator.IterationState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (((*(void *)(a1 + 64) >> 57) >> 5) | (4
                                                           * ((*(void *)(a1 + 64) >> 57) & 0x18 | *(void *)(a1 + 64) & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for Schematizer.RepeatableFieldIterator.IterationState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)double result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 72) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)(result + 56) = 0;
      *(void *)(result + 64) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Schematizer.RepeatableFieldIterator.IterationState()
{
  return &type metadata for Schematizer.RepeatableFieldIterator.IterationState;
}

uint64_t sub_259FD3340(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B324DC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Schematizer.RepeatableFieldIterator.Bookmark(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Schematizer.RepeatableFieldIterator.Bookmark(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Schematizer.RepeatableFieldIterator.Bookmark()
{
  return &type metadata for Schematizer.RepeatableFieldIterator.Bookmark;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Schematizer.RepeatableFieldIterator.ArrayType(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Schematizer.RepeatableFieldIterator.ArrayType(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_259FD347C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_259FD3498(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Schematizer.RepeatableFieldIterator.ArrayType()
{
  return &type metadata for Schematizer.RepeatableFieldIterator.ArrayType;
}

uint64_t sub_259FD34CC(uint64_t a1)
{
  uint64_t result = sub_25A00EBB0();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_259FC66D8(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_259FD3664(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  unint64_t v7 = (uint64_t *)(v2 + 24);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v2 + 24);
  if (!*(void *)(v8 + 16)) {
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_259FE120C(a1, a2);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    swift_endAccess();
    sub_259FB3304();
    swift_allocError();
    *(void *)uint64_t v18 = a1;
    *(void *)(v18 + 8) = a2;
    *(unsigned char *)(v18 + 16) = 0;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  uint64_t v22 = a1;
  uint64_t v11 = *(void *)(v8 + 56) + 40 * v9;
  uint64_t v13 = *(void *)v11;
  uint64_t v12 = *(void *)(v11 + 8);
  uint64_t v15 = *(void *)(v11 + 16);
  unint64_t v14 = *(void *)(v11 + 24);
  char v16 = *(unsigned char *)(v11 + 32);
  swift_endAccess();
  sub_259FB2BFC(v13, v12, v15, v14, v16);
  swift_bridgeObjectRelease();
  if (v16) {
    return v13;
  }
  v23[0] = v13;
  v23[1] = v12;
  _OWORD v23[2] = v15;
  v23[3] = v14;
  type metadata accessor for ProtoMessageSchema();
  swift_allocObject();
  sub_259FB2BFC(v13, v12, v15, v14, 0);
  swift_bridgeObjectRetain();
  sub_259FB2BFC(v13, v12, v15, v14, 0);
  swift_retain();
  uint64_t v19 = sub_259FFE29C(v22, a2, v23, v4, (uint64_t)&off_2707EABC0);
  if (v3)
  {
    sub_259FD3D44(v13, v12, v15, v14, 0);
    return sub_259FD3D44(v13, v12, v15, v14, 0);
  }
  else
  {
    uint64_t v20 = v19;
    v24[0] = v19;
    memset(&v24[1], 0, 24);
    char v25 = 1;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = *v7;
    *unint64_t v7 = 0x8000000000000000;
    sub_259FFB1C4((uint64_t)v24, v22, a2, isUniquelyReferenced_nonNull_native);
    *unint64_t v7 = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_259FD3D44(v13, v12, v15, v14, 0);
    sub_259FD3D44(v13, v12, v15, v14, 0);
    return v20;
  }
}

uint64_t sub_259FD393C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  unint64_t v7 = (uint64_t *)(v2 + 16);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v2 + 16);
  if (!*(void *)(v8 + 16)) {
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_259FE120C(a1, a2);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    swift_endAccess();
    sub_259FB3304();
    swift_allocError();
    *(void *)uint64_t v18 = a1;
    *(void *)(v18 + 8) = a2;
    *(unsigned char *)(v18 + 16) = 1;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  uint64_t v22 = a1;
  uint64_t v11 = *(void *)(v8 + 56) + 40 * v9;
  uint64_t v13 = *(void *)v11;
  uint64_t v12 = *(void *)(v11 + 8);
  unint64_t v15 = *(void *)(v11 + 16);
  uint64_t v14 = *(void *)(v11 + 24);
  char v16 = *(unsigned char *)(v11 + 32);
  swift_endAccess();
  sub_259FB2C64(v13, v12, v15, v14, v16);
  swift_bridgeObjectRelease();
  if (v16) {
    return v13;
  }
  v23[0] = v13;
  v23[1] = v12;
  _OWORD v23[2] = v15;
  v23[3] = v14;
  type metadata accessor for ProtoEnumSchema();
  swift_allocObject();
  sub_259FB2C64(v13, v12, v15, v14, 0);
  swift_bridgeObjectRetain();
  sub_259FB2C64(v13, v12, v15, v14, 0);
  swift_retain();
  uint64_t v19 = sub_259FC5D24(v22, a2, v23, v4, (uint64_t)&off_2707EABC0);
  if (v3)
  {
    sub_259FD3E54(v13, v12, v15, v14, 0);
    return sub_259FD3E54(v13, v12, v15, v14, 0);
  }
  else
  {
    uint64_t v20 = v19;
    v24[0] = v19;
    memset(&v24[1], 0, 24);
    char v25 = 1;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = *v7;
    *unint64_t v7 = 0x8000000000000000;
    sub_259FFB20C((uint64_t)v24, v22, a2, isUniquelyReferenced_nonNull_native);
    *unint64_t v7 = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_259FD3E54(v13, v12, v15, v14, 0);
    sub_259FD3E54(v13, v12, v15, v14, 0);
    return v20;
  }
}

unint64_t sub_259FD3C18()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_259FD3CC8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 32, 7);
}

uint64_t type metadata accessor for ProtoSchemaStore()
{
  return self;
}

uint64_t destroy for ProtoSchemaStore.MessageContainer(uint64_t a1, uint64_t a2)
{
  return sub_259FD3E38(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_259FD3D44);
}

uint64_t sub_259FD3D44(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  if (a5)
  {
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_259FAF410(a3, a4);
  }
}

uint64_t initializeWithCopy for ProtoSchemaStore.MessageContainer(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_259FD3ED4(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_259FB2BFC);
}

uint64_t *assignWithCopy for ProtoSchemaStore.MessageContainer(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_259FD3F6C(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_259FB2BFC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_259FD3D44);
}

uint64_t *assignWithTake for ProtoSchemaStore.MessageContainer(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_259FD4010(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_259FD3D44);
}

ValueMetadata *type metadata accessor for ProtoSchemaStore.MessageContainer()
{
  return &type metadata for ProtoSchemaStore.MessageContainer;
}

uint64_t destroy for ProtoSchemaStore.EnumContainer(uint64_t a1, uint64_t a2)
{
  return sub_259FD3E38(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_259FD3E54);
}

uint64_t sub_259FD3E38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void))
{
  return a3(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
}

uint64_t sub_259FD3E54(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_259FAF410(a2, a3);
    return swift_bridgeObjectRelease();
  }
}

uint64_t initializeWithCopy for ProtoSchemaStore.EnumContainer(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_259FD3ED4(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_259FB2C64);
}

uint64_t sub_259FD3ED4(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = *((unsigned __int8 *)a2 + 32);
  a4(*a2, v6, v7, v8, v9);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  return a1;
}

uint64_t *assignWithCopy for ProtoSchemaStore.EnumContainer(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_259FD3F6C(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_259FB2C64, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_259FD3E54);
}

uint64_t *sub_259FD3F6C(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v10 = a2[3];
  uint64_t v11 = *((unsigned __int8 *)a2 + 32);
  a4(*a2, v8, v9, v10, v11);
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  uint64_t v15 = a1[3];
  uint64_t v16 = *((unsigned __int8 *)a1 + 32);
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  a1[3] = v10;
  *((unsigned char *)a1 + 32) = v11;
  a5(v12, v13, v14, v15, v16);
  return a1;
}

uint64_t *assignWithTake for ProtoSchemaStore.EnumContainer(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_259FD4010(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_259FD3E54);
}

uint64_t *sub_259FD4010(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v6 = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v10 = a1[3];
  uint64_t v11 = *((unsigned __int8 *)a1 + 32);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v12;
  *((unsigned char *)a1 + 32) = v6;
  a4(v7, v9, v8, v10, v11);
  return a1;
}

uint64_t _s17PoirotSchematizer16ProtoSchemaStoreC13EnumContainerOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s17PoirotSchematizer16ProtoSchemaStoreC13EnumContainerOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_259FD40F4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_259FD40FC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ProtoSchemaStore.EnumContainer()
{
  return &type metadata for ProtoSchemaStore.EnumContainer;
}

uint64_t sub_259FD4118()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_259FD34CC(v0);
}

uint64_t sub_259FD4154()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_259FD34CC(v0);
}

uint64_t sub_259FD4190(uint64_t a1, uint64_t a2)
{
  return sub_259FD3664(a1, a2);
}

uint64_t sub_259FD41A8(uint64_t a1, uint64_t a2)
{
  return sub_259FD393C(a1, a2);
}

unint64_t sub_259FD41C0()
{
  return sub_259FD3C18();
}

uint64_t sub_259FD41E4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if (qword_26A402CC0 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_26A402F48;
  uint64_t v4 = unk_26A402F50;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_259FCEB0C(v2, v5, 0);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_259FCEACC(v3, v4, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for ProtoSchemaStore();
    uint64_t v2 = swift_allocObject();
    uint64_t v10 = MEMORY[0x263F8EE78];
    *(void *)(v2 + 16) = sub_259FB0734(MEMORY[0x263F8EE78]);
    *(void *)(v2 + 24) = sub_259FB0754(v10);
    uint64_t v11 = sub_259FD2530(v8);
    swift_beginAccess();
    *(void *)(v2 + 16) = v11;
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_259FD232C(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *(void *)(v2 + 24) = v12;
  }
  swift_bridgeObjectRelease();
  return v2;
}

BOOL sub_259FD43EC(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_259FD4400(uint64_t a1)
{
  if (a1 < 8 || (a1 & 6) == 6)
  {
    sub_259FBA9FC();
    swift_allocError();
    *(void *)uint64_t v2 = 1;
    *(_OWORD *)(v2 + 8) = 0u;
    *(_OWORD *)(v2 + 24) = 0u;
    *(_OWORD *)(v2 + 40) = 0u;
    *(void *)(v2 + 56) = 0;
    *(unsigned char *)(v2 + 64) = 2;
    swift_willThrow();
  }
  return a1;
}

ValueMetadata *type metadata accessor for FieldTag()
{
  return &type metadata for FieldTag;
}

uint64_t sub_259FD449C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = a1;
  uint64_t v40 = MEMORY[0x263F8EE78];
  sub_259FE1480(0, v1, 0);
  uint64_t v2 = v40;
  uint64_t result = sub_25A005144(v3);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = v3 + 64;
  uint64_t v27 = v3 + 80;
  int64_t v28 = v1;
  int v29 = v5;
  uint64_t v30 = v3 + 64;
  uint64_t v31 = v3;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v32 = v7;
    uint64_t v12 = *(void *)(v3 + 56);
    uint64_t v13 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v6);
    uint64_t v14 = v13[1];
    uint64_t v33 = *v13;
    uint64_t v15 = (char *)(v12 + (v6 << 6));
    char v34 = *v15;
    uint64_t v16 = *((void *)v15 + 2);
    uint64_t v39 = *((void *)v15 + 1);
    uint64_t v38 = *((void *)v15 + 3);
    int v36 = *((_DWORD *)v15 + 9);
    char v37 = v15[32];
    char v35 = v15[40];
    uint64_t v17 = *((void *)v15 + 6);
    unint64_t v18 = *((void *)v15 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v17, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259FAF410(v17, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_259FAF410(v17, v18);
    unint64_t v20 = *(void *)(v40 + 16);
    unint64_t v19 = *(void *)(v40 + 24);
    if (v20 >= v19 >> 1) {
      uint64_t result = sub_259FE1480(v19 > 1, v20 + 1, 1);
    }
    *(void *)(v40 + 16) = v20 + 1;
    uint64_t v21 = v40 + 80 * v20;
    *(void *)(v21 + 32) = v33;
    *(void *)(v21 + 40) = v14;
    *(unsigned char *)(v21 + 48) = v34;
    *(void *)(v21 + 56) = v39;
    *(void *)(v21 + 64) = v16;
    *(void *)(v21 + 72) = v38;
    *(unsigned char *)(v21 + 80) = v37;
    *(_DWORD *)(v21 + 84) = v36;
    *(unsigned char *)(v21 + 88) = v35;
    *(void *)(v21 + 96) = v17;
    *(void *)(v21 + 104) = v18;
    uint64_t v3 = v31;
    int64_t v9 = 1 << *(unsigned char *)(v31 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = v30;
    uint64_t v22 = *(void *)(v30 + 8 * v11);
    if ((v22 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v29;
    if (*(_DWORD *)(v31 + 36) != v29) {
      goto LABEL_27;
    }
    unint64_t v23 = v22 & (-2 << (v6 & 0x3F));
    if (v23)
    {
      int64_t v9 = __clz(__rbit64(v23)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v28;
    }
    else
    {
      unint64_t v24 = v11 + 1;
      unint64_t v25 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v28;
      if (v11 + 1 < v25)
      {
        unint64_t v26 = *(void *)(v30 + 8 * v24);
        if (v26)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v26)) + (v24 << 6);
        }
        else
        {
          while (v25 - 2 != v11)
          {
            unint64_t v26 = *(void *)(v27 + 8 * v11++);
            if (v26)
            {
              unint64_t v24 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v32 + 1;
    uint64_t v6 = v9;
    if (v32 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_259FD47AC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v8 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v8 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v7 << 6))
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v14 = v13[1];
    uint64_t v15 = (unsigned __int8 *)(*(void *)(a1 + 56) + (i << 6));
    uint64_t v16 = *v15;
    uint64_t v17 = *((void *)v15 + 2);
    uint64_t v18 = v15[32];
    uint64_t v20 = *((void *)v15 + 6);
    unint64_t v19 = *((void *)v15 + 7);
    if ((v18 & 1) != 0 || v16 == 9)
    {
      uint64_t v28 = v15[40];
      uint64_t v26 = *((void *)v15 + 3);
      uint64_t v23 = *((void *)v15 + 1);
      uint64_t v21 = *v13;
      uint64_t v22 = *((unsigned int *)v15 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_259FAF3C4(v20, v19);
      uint64_t result = swift_release();
      *a2 = v21;
      a2[1] = v14;
      a2[2] = v16;
      a2[3] = v23;
      a2[4] = v17;
      a2[5] = v26;
      a2[6] = v18 | (v22 << 32);
      a2[7] = v28;
      a2[8] = v20;
      a2[9] = v19;
      return result;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v20, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_259FAF410(v20, v19);
    if (v5) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v10 >= v27) {
      goto LABEL_26;
    }
    unint64_t v11 = *(void *)(v25 + 8 * v10);
    ++v7;
    if (!v11)
    {
      int64_t v7 = v10 + 1;
      if (v10 + 1 >= v27) {
        goto LABEL_26;
      }
      unint64_t v11 = *(void *)(v25 + 8 * v7);
      if (!v11)
      {
        int64_t v7 = v10 + 2;
        if (v10 + 2 >= v27) {
          goto LABEL_26;
        }
        unint64_t v11 = *(void *)(v25 + 8 * v7);
        if (!v11)
        {
          int64_t v7 = v10 + 3;
          if (v10 + 3 >= v27) {
            goto LABEL_26;
          }
          unint64_t v11 = *(void *)(v25 + 8 * v7);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v5 = (v11 - 1) & v11;
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v27)
  {
LABEL_26:
    uint64_t result = swift_release();
    *((_OWORD *)a2 + 3) = 0u;
    *((_OWORD *)a2 + 4) = 0u;
    *((_OWORD *)a2 + 1) = 0u;
    *((_OWORD *)a2 + 2) = 0u;
    *(_OWORD *)a2 = 0u;
    return result;
  }
  unint64_t v11 = *(void *)(v25 + 8 * v12);
  if (v11)
  {
    int64_t v7 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v7 >= v27) {
      goto LABEL_26;
    }
    unint64_t v11 = *(void *)(v25 + 8 * v7);
    ++v12;
    if (v11) {
      goto LABEL_20;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

BOOL MessageManifest.isFlat.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_259FD47AC(v0, &v3);
  swift_bridgeObjectRelease();
  uint64_t v1 = v4;
  if (v4) {
    sub_259FD4AA4(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
  }
  return v1 == 0;
}

void sub_259FD4AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259FAF410(a9, a10);
  }
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> MessageManifest.makeFieldsSelectStatementString(forTable:column:extraColumns:)(Swift::String forTable, Swift::String column, Swift::OpaquePointer extraColumns)
{
  uint64_t v6 = *v3;
  uint64_t v7 = (void *)sub_25A00EA00();
  if (!v4)
  {
    int64_t v9 = *((void *)extraColumns._rawValue + 2);
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
    if (v9)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = (char *)extraColumns._rawValue + 40;
      int64_t v12 = v9;
      do
      {
        swift_bridgeObjectRetain();
        sub_25A00EA00();
        v11 += 16;
        swift_bridgeObjectRelease();
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
      uint64_t v23 = v10;
      sub_259FE1460(0, v9, 0);
      uint64_t v13 = (char *)extraColumns._rawValue + 40;
      do
      {
        uint64_t v21 = 8224;
        unint64_t v22 = 0xE200000000000000;
        swift_bridgeObjectRetain();
        sub_25A00EA80();
        swift_bridgeObjectRelease();
        uint64_t v23 = v10;
        unint64_t v15 = v10[2];
        unint64_t v14 = v10[3];
        if (v15 >= v14 >> 1)
        {
          sub_259FE1460(v14 > 1, v15 + 1, 1);
          uint64_t v10 = v23;
        }
        v13 += 16;
        v10[2] = v15 + 1;
        uint64_t v16 = &v10[2 * v15];
        v16[4] = 8224;
        v16[5] = 0xE200000000000000;
        --v9;
      }
      while (v9);
    }
    uint64_t v21 = sub_259FD449C(v6);
    swift_bridgeObjectRetain();
    sub_259FD4F10((void **)&v21);
    uint64_t v17 = swift_bridgeObjectRelease();
    uint64_t v18 = (void *)v21;
    MEMORY[0x270FA5388](v17);
    unint64_t v19 = sub_259FD5CF8((uint64_t)v18, (uint64_t (*)(uint64_t, uint64_t, unsigned char *))sub_259FD4F7C);
    swift_release();
    uint64_t v21 = (uint64_t)v10;
    sub_259FD5BA4((uint64_t)v19);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402ED8);
    sub_259FD5EF0();
    sub_25A00E970();
    swift_bridgeObjectRelease();
    uint64_t v21 = 0;
    unint64_t v22 = 0xE000000000000000;
    sub_25A00ED10();
    swift_bridgeObjectRelease();
    uint64_t v21 = 0xA5443454C4553;
    unint64_t v22 = 0xE700000000000000;
    sub_25A00EA80();
    swift_bridgeObjectRelease();
    sub_25A00EA80();
    sub_25A00EA80();
    uint64_t v7 = (void *)v21;
    uint64_t v8 = (void *)v22;
  }
  result._object = v8;
  result._uint64_t countAndFlagsBits = (uint64_t)v7;
  return result;
}

uint64_t sub_259FD4E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4 = *(unsigned char *)(a3 + 32);
  uint64_t result = sub_25A00EA00();
  if (!v3)
  {
    if (v4)
    {
      return 0;
    }
    else
    {
      sub_25A00ED10();
      swift_bridgeObjectRelease();
      sub_25A00EA80();
      sub_25A00EA80();
      sub_25A00EA80();
      sub_25A00EA80();
      sub_25A00EA80();
      return 0x285445475F502020;
    }
  }
  return result;
}

uint64_t sub_259FD4F10(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_25A0050E0(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_259FD4F98(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_259FD4F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_259FD4E10(a1, a2, a3);
}

uint64_t sub_259FD4F98(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_25A00EE20();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_156;
    }
    if (v3) {
      return sub_259FD57B0(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_164;
  }
  uint64_t v112 = result;
  unint64_t v109 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    char v122 = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_122:
      int64_t v100 = v11;
      uint64_t v111 = v8;
      if (v12 >= 2)
      {
        uint64_t v101 = *v109;
        do
        {
          unint64_t v102 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_151;
          }
          if (!v101) {
            goto LABEL_163;
          }
          unint64_t v103 = v100;
          uint64_t v104 = *(void *)&v100[16 * v102 + 32];
          uint64_t v105 = *(void *)&v100[16 * v12 + 24];
          sub_259FD58D0((char *)(v101 + 80 * v104), (char *)(v101 + 80 * *(void *)&v100[16 * v12 + 16]), v101 + 80 * v105, v122);
          if (v1) {
            break;
          }
          if (v105 < v104) {
            goto LABEL_152;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v103 = sub_25A004EB4((uint64_t)v103);
          }
          if (v102 >= *((void *)v103 + 2)) {
            goto LABEL_153;
          }
          __int16 v106 = &v103[16 * v102 + 32];
          *(void *)__int16 v106 = v104;
          *((void *)v106 + 1) = v105;
          unint64_t v107 = *((void *)v103 + 2);
          if (v12 > v107) {
            goto LABEL_154;
          }
          memmove(&v103[16 * v12 + 16], &v103[16 * v12 + 32], 16 * (v107 - v12));
          int64_t v100 = v103;
          *((void *)v103 + 2) = v107 - 1;
          unint64_t v12 = v107 - 1;
        }
        while (v107 > 2);
      }
LABEL_119:
      swift_bridgeObjectRelease();
      *(void *)(v111 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v111 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402DB0);
    uint64_t v7 = sub_25A00EB90();
    *(void *)(v7 + 16) = v6;
    uint64_t v111 = v7;
    char v122 = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v110 = *a1 + 8;
  uint64_t v108 = *a1 + 64;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v121 = v3;
  uint64_t v123 = v10;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3)
    {
LABEL_23:
      if (v9 < v3) {
        goto LABEL_24;
      }
      goto LABEL_71;
    }
    unint64_t v14 = (uint64_t *)(v10 + 80 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 80 * v13);
    if (v15 == *v17 && v16 == v17[1]) {
      break;
    }
    int v19 = sub_25A00EE40();
    int v20 = v19;
    uint64_t v21 = v13 + 2;
    if (v13 + 2 < v3) {
      goto LABEL_45;
    }
    uint64_t v9 = v13 + 2;
    if ((v19 & 1) == 0) {
      goto LABEL_23;
    }
LABEL_60:
    if (v21 < v13) {
      goto LABEL_159;
    }
LABEL_61:
    if (v13 >= v21)
    {
      uint64_t v9 = v21;
      if (v21 < v3) {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v43 = 80 * v21;
      uint64_t v44 = 80 * v13;
      uint64_t v45 = v21;
      uint64_t v46 = v13;
      do
      {
        if (v46 != --v45)
        {
          if (!v10) {
            goto LABEL_162;
          }
          uint64_t v47 = (char *)(v10 + v44);
          uint64_t v48 = v123 + v43;
          uint64_t v49 = *((void *)v47 + 1);
          uint64_t v116 = *(void *)v47;
          char v115 = v47[16];
          uint64_t v120 = *((void *)v47 + 5);
          char v119 = v47[48];
          char v117 = v47[56];
          int v118 = *((_DWORD *)v47 + 13);
          long long v113 = *(_OWORD *)(v47 + 24);
          long long v114 = *((_OWORD *)v47 + 4);
          memmove(v47, (const void *)(v123 + v43 - 80), 0x50uLL);
          *(void *)(v48 - 80) = v116;
          *(void *)(v48 - 72) = v49;
          *(unsigned char *)(v48 - 64) = v115;
          *(_OWORD *)(v48 - 56) = v113;
          *(void *)(v48 - 40) = v120;
          *(unsigned char *)(v48 - 32) = v119;
          *(_DWORD *)(v48 - 28) = v118;
          *(unsigned char *)(v48 - 24) = v117;
          *(_OWORD *)(v48 - 16) = v114;
          uint64_t v10 = v123;
        }
        ++v46;
        v43 -= 80;
        v44 += 80;
      }
      while (v46 < v45);
      uint64_t v9 = v21;
      uint64_t v3 = v121;
      if (v21 < v121)
      {
LABEL_24:
        if (__OFSUB__(v9, v13)) {
          goto LABEL_155;
        }
        if (v9 - v13 < v112)
        {
          if (__OFADD__(v13, v112)) {
            goto LABEL_157;
          }
          if (v13 + v112 >= v3) {
            uint64_t v22 = v3;
          }
          else {
            uint64_t v22 = v13 + v112;
          }
          if (v22 < v13)
          {
LABEL_158:
            __break(1u);
            goto LABEL_159;
          }
          if (v9 != v22)
          {
            uint64_t v23 = (_OWORD *)(v108 + 80 * v9);
            do
            {
              unint64_t v24 = (uint64_t *)(v10 + 80 * v9);
              uint64_t v25 = *v24;
              uint64_t v26 = v24[1];
              uint64_t v27 = v13;
              uint64_t v28 = v23;
              do
              {
                BOOL v29 = v25 == *((void *)v28 - 18) && v26 == *((void *)v28 - 17);
                if (v29 || (sub_25A00EE40() & 1) == 0) {
                  break;
                }
                if (!v10) {
                  goto LABEL_160;
                }
                uint64_t v25 = *((void *)v28 - 8);
                uint64_t v26 = *((void *)v28 - 7);
                char v30 = *((unsigned char *)v28 - 48);
                uint64_t v31 = *((void *)v28 - 3);
                char v32 = *((unsigned char *)v28 - 16);
                int v33 = *((_DWORD *)v28 - 3);
                char v34 = *((unsigned char *)v28 - 8);
                long long v35 = *(_OWORD *)((char *)v28 - 40);
                long long v36 = *v28;
                long long v37 = *(v28 - 6);
                *(v28 - 2) = *(v28 - 7);
                *(v28 - 1) = v37;
                *uint64_t v28 = *(v28 - 5);
                long long v38 = *(v28 - 8);
                *(v28 - 4) = *(v28 - 9);
                *(v28 - 3) = v38;
                *(v28 - 5) = v36;
                v28 -= 5;
                *((void *)v28 - 8) = v25;
                *((void *)v28 - 7) = v26;
                *((unsigned char *)v28 - 48) = v30;
                *(_OWORD *)((char *)v28 - 40) = v35;
                *((void *)v28 - 3) = v31;
                *((unsigned char *)v28 - 16) = v32;
                *((_DWORD *)v28 - 3) = v33;
                ++v27;
                *((unsigned char *)v28 - 8) = v34;
              }
              while (v9 != v27);
              ++v9;
              v23 += 5;
            }
            while (v9 != v22);
            uint64_t v9 = v22;
          }
        }
      }
    }
LABEL_71:
    if (v9 < v13) {
      goto LABEL_150;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_25A004A90(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v51 = *((void *)v11 + 2);
    unint64_t v50 = *((void *)v11 + 3);
    unint64_t v12 = v51 + 1;
    if (v51 >= v50 >> 1) {
      uint64_t v11 = sub_25A004A90((char *)(v50 > 1), v51 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v52 = v11 + 32;
    uint64_t v53 = &v11[16 * v51 + 32];
    *(void *)uint64_t v53 = v13;
    *((void *)v53 + 1) = v9;
    if (v51)
    {
      uint64_t v10 = v123;
      while (1)
      {
        unint64_t v54 = v12 - 1;
        if (v12 >= 4)
        {
          long long v59 = &v52[16 * v12];
          uint64_t v60 = *((void *)v59 - 8);
          uint64_t v61 = *((void *)v59 - 7);
          BOOL v65 = __OFSUB__(v61, v60);
          uint64_t v62 = v61 - v60;
          if (v65) {
            goto LABEL_139;
          }
          uint64_t v64 = *((void *)v59 - 6);
          uint64_t v63 = *((void *)v59 - 5);
          BOOL v65 = __OFSUB__(v63, v64);
          uint64_t v57 = v63 - v64;
          char v58 = v65;
          if (v65) {
            goto LABEL_140;
          }
          unint64_t v66 = v12 - 2;
          uint64_t v67 = &v52[16 * v12 - 32];
          uint64_t v69 = *(void *)v67;
          uint64_t v68 = *((void *)v67 + 1);
          BOOL v65 = __OFSUB__(v68, v69);
          uint64_t v70 = v68 - v69;
          if (v65) {
            goto LABEL_142;
          }
          BOOL v65 = __OFADD__(v57, v70);
          uint64_t v71 = v57 + v70;
          if (v65) {
            goto LABEL_145;
          }
          if (v71 >= v62)
          {
            size_t v89 = &v52[16 * v54];
            uint64_t v91 = *(void *)v89;
            uint64_t v90 = *((void *)v89 + 1);
            BOOL v65 = __OFSUB__(v90, v91);
            uint64_t v92 = v90 - v91;
            if (v65) {
              goto LABEL_149;
            }
            BOOL v82 = v57 < v92;
            goto LABEL_109;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v83 = *((void *)v11 + 4);
            uint64_t v84 = *((void *)v11 + 5);
            BOOL v65 = __OFSUB__(v84, v83);
            uint64_t v76 = v84 - v83;
            char v77 = v65;
            goto LABEL_103;
          }
          uint64_t v56 = *((void *)v11 + 4);
          uint64_t v55 = *((void *)v11 + 5);
          BOOL v65 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          char v58 = v65;
        }
        if (v58) {
          goto LABEL_141;
        }
        unint64_t v66 = v12 - 2;
        unint64_t v72 = &v52[16 * v12 - 32];
        uint64_t v74 = *(void *)v72;
        uint64_t v73 = *((void *)v72 + 1);
        BOOL v75 = __OFSUB__(v73, v74);
        uint64_t v76 = v73 - v74;
        char v77 = v75;
        if (v75) {
          goto LABEL_144;
        }
        uint64_t v78 = &v52[16 * v54];
        uint64_t v80 = *(void *)v78;
        uint64_t v79 = *((void *)v78 + 1);
        BOOL v65 = __OFSUB__(v79, v80);
        uint64_t v81 = v79 - v80;
        if (v65) {
          goto LABEL_147;
        }
        if (__OFADD__(v76, v81)) {
          goto LABEL_148;
        }
        if (v76 + v81 >= v57)
        {
          BOOL v82 = v57 < v81;
LABEL_109:
          if (v82) {
            unint64_t v54 = v66;
          }
          goto LABEL_111;
        }
LABEL_103:
        if (v77) {
          goto LABEL_143;
        }
        char v85 = &v52[16 * v54];
        uint64_t v87 = *(void *)v85;
        uint64_t v86 = *((void *)v85 + 1);
        BOOL v65 = __OFSUB__(v86, v87);
        uint64_t v88 = v86 - v87;
        if (v65) {
          goto LABEL_146;
        }
        if (v88 < v76) {
          goto LABEL_15;
        }
LABEL_111:
        unint64_t v93 = v54 - 1;
        if (v54 - 1 >= v12)
        {
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
          goto LABEL_158;
        }
        if (!v10) {
          goto LABEL_161;
        }
        uint64_t v94 = v10;
        char v95 = &v52[16 * v93];
        uint64_t v96 = *(void *)v95;
        int64_t v97 = &v52[16 * v54];
        uint64_t v98 = *((void *)v97 + 1);
        sub_259FD58D0((char *)(v94 + 80 * *(void *)v95), (char *)(v94 + 80 * *(void *)v97), v94 + 80 * v98, v122);
        if (v1) {
          goto LABEL_119;
        }
        if (v98 < v96) {
          goto LABEL_136;
        }
        if (v54 > *((void *)v11 + 2)) {
          goto LABEL_137;
        }
        *(void *)char v95 = v96;
        *(void *)&v52[16 * v93 + 8] = v98;
        unint64_t v99 = *((void *)v11 + 2);
        if (v54 >= v99) {
          goto LABEL_138;
        }
        unint64_t v12 = v99 - 1;
        memmove(&v52[16 * v54], v97 + 16, 16 * (v99 - 1 - v54));
        *((void *)v11 + 2) = v99 - 1;
        BOOL v82 = v99 > 2;
        uint64_t v10 = v123;
        if (!v82) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
    uint64_t v10 = v123;
LABEL_15:
    uint64_t v3 = v121;
    if (v9 >= v121)
    {
      uint64_t v8 = v111;
      goto LABEL_122;
    }
  }
  uint64_t v21 = v13 + 2;
  if (v13 + 2 >= v3)
  {
    uint64_t v9 = v13 + 2;
    goto LABEL_71;
  }
  int v20 = 0;
LABEL_45:
  uint64_t v39 = (void *)(v110 + 80 * v21);
  while (1)
  {
    uint64_t v41 = (void *)(v10 + 80 * v9);
    if (*(v39 - 1) != *v41 || *v39 != v41[1])
    {
      if ((v20 ^ sub_25A00EE40())) {
        goto LABEL_59;
      }
      goto LABEL_47;
    }
    if (v20) {
      break;
    }
LABEL_47:
    v39 += 10;
    uint64_t v40 = v21 + 1;
    uint64_t v9 = v21;
    uint64_t v21 = v40;
    if (v40 >= v121)
    {
      uint64_t v21 = v40;
LABEL_59:
      uint64_t v3 = v121;
      uint64_t v9 = v21;
      if ((v20 & 1) == 0) {
        goto LABEL_23;
      }
      goto LABEL_60;
    }
  }
  uint64_t v3 = v121;
  if (v21 >= v13) {
    goto LABEL_61;
  }
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  uint64_t result = sub_25A00EDA0();
  __break(1u);
  return result;
}

uint64_t sub_259FD57B0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 80 * a3 + 64;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 80 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (_OWORD *)v8;
    while (1)
    {
      BOOL v13 = result == *((void *)v12 - 18) && v10 == *((void *)v12 - 17);
      if (v13 || (uint64_t result = sub_25A00EE40(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 80;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *((void *)v12 - 8);
      uint64_t v10 = *((void *)v12 - 7);
      char v14 = *((unsigned char *)v12 - 48);
      uint64_t v15 = *((void *)v12 - 3);
      char v16 = *((unsigned char *)v12 - 16);
      int v17 = *((_DWORD *)v12 - 3);
      char v18 = *((unsigned char *)v12 - 8);
      long long v19 = *(_OWORD *)((char *)v12 - 40);
      long long v20 = *v12;
      long long v21 = *(v12 - 6);
      *(v12 - 2) = *(v12 - 7);
      *(v12 - 1) = v21;
      *unint64_t v12 = *(v12 - 5);
      long long v22 = *(v12 - 8);
      *(v12 - 4) = *(v12 - 9);
      *(v12 - 3) = v22;
      *(v12 - 5) = v20;
      v12 -= 5;
      *((void *)v12 - 8) = result;
      *((void *)v12 - 7) = v10;
      *((unsigned char *)v12 - 48) = v14;
      *(_OWORD *)((char *)v12 - 40) = v19;
      *((void *)v12 - 3) = v15;
      *((unsigned char *)v12 - 16) = v16;
      *((_DWORD *)v12 - 3) = v17;
      ++v11;
      *((unsigned char *)v12 - 8) = v18;
      if (v4 == v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_259FD58D0(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = (__src - __dst) / 80;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 80;
  uint64_t v25 = __dst;
  unint64_t v24 = a4;
  if (v9 >= v11)
  {
    if (v10 >= -79)
    {
      if (a4 != __src || &__src[80 * v11] <= a4) {
        memmove(a4, __src, 80 * v11);
      }
      uint64_t v15 = &v4[80 * v11];
      uint64_t v23 = v15;
      uint64_t v25 = v6;
      if (v7 < v6 && v10 >= 80)
      {
        char v16 = (char *)(a3 - 80);
        int v17 = v6;
        while (1)
        {
          char v18 = v16 + 80;
          uint64_t v19 = *((void *)v17 - 10);
          uint64_t v20 = *((void *)v17 - 9);
          v17 -= 80;
          BOOL v21 = *((void *)v15 - 10) == v19 && *((void *)v15 - 9) == v20;
          if (v21 || (sub_25A00EE40() & 1) == 0)
          {
            uint64_t v23 = v15 - 80;
            if (v18 < v15 || v16 >= v15 || v18 != v15) {
              memmove(v16, v15 - 80, 0x50uLL);
            }
            int v17 = v6;
            v15 -= 80;
            if (v6 <= v7) {
              goto LABEL_46;
            }
          }
          else
          {
            if (v18 != v6 || v16 >= v6) {
              memmove(v16, v17, 0x50uLL);
            }
            uint64_t v25 = v17;
            if (v17 <= v7) {
              goto LABEL_46;
            }
          }
          v16 -= 80;
          uint64_t v6 = v17;
          if (v15 <= v4) {
            goto LABEL_46;
          }
        }
      }
      goto LABEL_46;
    }
  }
  else if (v8 >= -79)
  {
    if (a4 != __dst || &__dst[80 * v9] <= a4) {
      memmove(a4, __dst, 80 * v9);
    }
    unint64_t v12 = &v4[80 * v9];
    uint64_t v23 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 80)
    {
      do
      {
        BOOL v13 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v13 || (sub_25A00EE40() & 1) == 0)
        {
          if (v7 != v4) {
            memmove(v7, v4, 0x50uLL);
          }
          v4 += 80;
          unint64_t v24 = v4;
          char v14 = v6;
        }
        else
        {
          char v14 = v6 + 80;
          if (v7 < v6 || v7 >= v14 || v7 != v6) {
            memmove(v7, v6, 0x50uLL);
          }
        }
        v7 += 80;
        if (v4 >= v12) {
          break;
        }
        uint64_t v6 = v14;
      }
      while ((unint64_t)v14 < a3);
      uint64_t v25 = v7;
    }
LABEL_46:
    sub_25A004C48((void **)&v25, (const void **)&v24, &v23);
    return 1;
  }
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FD5BA4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_259FC9C04(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

void *sub_259FD5CF8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, unsigned char *))
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  uint64_t v7 = (void *)MEMORY[0x263F8EE78];
  uint64_t v24 = v5;
  do
  {
    uint64_t v34 = v4;
    uint64_t v10 = *(void *)(v5 + v6 + 96);
    unint64_t v9 = *(void *)(v5 + v6 + 104);
    char v11 = *(unsigned char *)(v5 + v6 + 88);
    int v12 = *(_DWORD *)(v5 + v6 + 84);
    char v13 = *(unsigned char *)(v5 + v6 + 80);
    uint64_t v14 = *(void *)(v5 + v6 + 56);
    uint64_t v16 = *(void *)(v5 + v6 + 32);
    uint64_t v15 = *(void *)(v5 + v6 + 40);
    v26[0] = *(unsigned char *)(v5 + v6 + 48);
    uint64_t v27 = v14;
    long long v28 = *(_OWORD *)(v5 + v6 + 64);
    char v29 = v13;
    int v30 = v12;
    char v31 = v11;
    uint64_t v32 = v10;
    unint64_t v33 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v10, v9);
    uint64_t v17 = a2(v16, v15, v26);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_259FAF410(v10, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7;
    }
    uint64_t v19 = v17;
    uint64_t v20 = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259FAF410(v10, v9);
    if (v20)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_259FC9C04(0, v7[2] + 1, 1, v7);
      }
      unint64_t v22 = v7[2];
      unint64_t v21 = v7[3];
      if (v22 >= v21 >> 1) {
        uint64_t v7 = sub_259FC9C04((void *)(v21 > 1), v22 + 1, 1, v7);
      }
      v7[2] = v22 + 1;
      uint64_t v8 = &v7[2 * v22];
      uint64_t v8[4] = v19;
      v8[5] = v20;
    }
    v6 += 80;
    uint64_t v4 = v34 - 1;
    uint64_t v3 = 0;
    uint64_t v5 = v24;
  }
  while (v34 != 1);
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t sub_259FD5EF0()
{
  unint64_t result = qword_26A402EE0;
  if (!qword_26A402EE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A402ED8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A402EE0);
  }
  return result;
}

uint64_t sub_259FD5F4C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  void (*v54)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v55;
  void *v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  void (*v63)(uint64_t *__return_ptr, uint64_t, uint64_t);
  unint64_t v64;
  uint64_t result;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v77;
  char v78;
  unint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t ObjectType;
  void *v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;

  char v85 = a2;
  uint64_t v5 = v4;
  uint64_t v7 = *a3;
  unint64_t v6 = a3[1];
  uint64_t v84 = a1;
  sub_259FD6B80();
  uint64_t v8 = sub_25A00EC80();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9)
  {
    uint64_t v83 = (void *)MEMORY[0x263F8EE78];
LABEL_28:
    unint64_t result = swift_bridgeObjectRelease();
    *a4 = v83;
    a4[1] = v7;
    a4[2] = v6;
    return result;
  }
  uint64_t v10 = (unint64_t *)(v8 + 40);
  uint64_t v83 = (void *)MEMORY[0x263F8EE78];
  uint64_t v11 = v7;
  unint64_t v12 = v6;
  while (1)
  {
    if (v12 >> 62 != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_259FB3304();
      swift_allocError();
      *(_OWORD *)unint64_t v66 = xmmword_25A011020;
      *(unsigned char *)(v66 + 16) = 7;
      swift_willThrow();
      uint64_t v67 = v11;
      return sub_259FAD1BC(v67, v12);
    }
    uint64_t v16 = *(v10 - 1);
    unint64_t v15 = *v10;
    uint64_t v79 = v10;
    uint64_t v17 = v12 & 0x3FFFFFFFFFFFFFFFLL;
    swift_bridgeObjectRetain();
    sub_259FBAA50(v11, v12);
    unint64_t v18 = sub_259FD6BD4(93, 0xE100000000000000, v16, v15);
    uint64_t v86 = v11;
    uint64_t v80 = v9;
    uint64_t v78 = v19;
    if (v19) {
      break;
    }
    unint64_t v20 = v18;
    sub_259FD6BD4(91, 0xE100000000000000, v16, v15);
    if (v21)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_259FB3304();
      swift_allocError();
      *(_OWORD *)uint64_t v68 = xmmword_25A011040;
      *(unsigned char *)(v68 + 16) = 7;
      swift_willThrow();
      uint64_t v69 = v86;
      sub_259FAD1BC(v86, v12);
      uint64_t v67 = v69;
      return sub_259FAD1BC(v67, v12);
    }
    char v77 = v20;
    uint64_t v81 = v12;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_25A00EB30();
    uint64_t v24 = v23;
    uint64_t v26 = v25;
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    uint64_t v29 = v86;
    uint64_t ObjectType = swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v30 = MEMORY[0x25A2F2150](v22, v24, v26, v28);
    uint64_t v32 = v31;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v30, v32, ObjectType, v17);
    if (v5)
    {
      sub_259FAD1BC(v29, v81);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_259FAD1BC(v29, v81);
      uint64_t v70 = v29;
      uint64_t v71 = v81;
      goto LABEL_33;
    }
    uint64_t v34 = v33;
    sub_259FAD1BC(v29, v81);
    swift_bridgeObjectRelease();
    uint64_t v35 = swift_getObjectType();
    long long v36 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 16);
    swift_unknownObjectRetain_n();
    LOBYTE(v36) = v36(v35, v34);
    swift_unknownObjectRelease();
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      sub_259FB3304();
      swift_allocError();
      *(_OWORD *)uint64_t v73 = xmmword_25A011050;
      *(unsigned char *)(v73 + 16) = 7;
      swift_willThrow();
      uint64_t v74 = v86;
LABEL_39:
      sub_259FAD1BC(v74, v81);
      swift_unknownObjectRelease();
      return sub_259FAD1BC(v74, v81);
    }
    if (v77 >> 14 < (unint64_t)sub_25A00EA60() >> 14)
    {
      __break(1u);
LABEL_41:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
LABEL_38:
      uint64_t v74 = v86;
      swift_bridgeObjectRelease();
      sub_259FB3304();
      swift_allocError();
      *(_OWORD *)BOOL v75 = xmmword_25A011040;
      *(unsigned char *)(v75 + 16) = 7;
      swift_willThrow();
      goto LABEL_39;
    }
    uint64_t v37 = sub_25A00EB30();
    unint64_t v39 = v38;
    unint64_t v41 = v40;
    unint64_t v43 = v42;
    swift_bridgeObjectRelease();
    if (!((v37 ^ v39) >> 14)) {
      goto LABEL_41;
    }
    uint64_t v44 = sub_259FD7034(v37, v39, v41, v43, 10);
    if ((v45 & 0x100) != 0)
    {
      uint64_t v47 = sub_259FD6CC4(v37, v39, v41, v43, 10);
      uint64_t v61 = v60;
      swift_bridgeObjectRelease();
      if (v61)
      {
LABEL_37:
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        goto LABEL_38;
      }
    }
    else
    {
      char v46 = v45;
      uint64_t v47 = (unsigned __int8 *)v44;
      swift_bridgeObjectRelease();
      if (v46) {
        goto LABEL_37;
      }
    }
    uint64_t v62 = v86;
    uint64_t v63 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v34 + 56);
    swift_unknownObjectRetain();
    v63(&v84, v35, v34);
    sub_259FAD1BC(v62, v81);
    swift_unknownObjectRelease();
    uint64_t v7 = v84;
    unint64_t v6 = v85;
    uint64_t v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 48))(v35, v34);
    swift_unknownObjectRelease();
    uint64_t v56 = v83;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v56 = sub_259FC99D0(0, v83[2] + 1, 1, v83);
    }
    unint64_t v12 = v81;
    char v58 = v56[2];
    uint64_t v64 = v56[3];
    long long v59 = v58 + 1;
    if (v58 >= v64 >> 1) {
      uint64_t v56 = sub_259FC99D0((void *)(v64 > 1), v58 + 1, 1, v56);
    }
    char v13 = v47;
LABEL_4:
    v56[2] = v59;
    uint64_t v83 = v56;
    uint64_t v14 = &v56[3 * v58];
    uint64_t v14[4] = v55;
    void v14[5] = v13;
    uint64_t v10 = v79 + 2;
    *((unsigned char *)v14 + 48) = (v78 & 1) == 0;
    swift_unknownObjectRelease();
    sub_259FAD1BC(v86, v12);
    uint64_t v11 = v7;
    unint64_t v12 = v6;
    uint64_t v9 = v80 - 1;
    uint64_t v5 = 0;
    if (v80 == 1) {
      goto LABEL_28;
    }
  }
  uint64_t v48 = swift_getObjectType();
  uint64_t v49 = *(void (**)(uint64_t, unint64_t, uint64_t, unint64_t))((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x38);
  swift_unknownObjectRetain();
  v49(v16, v15, v48, v12 & 0x3FFFFFFFFFFFFFFFLL);
  if (v5)
  {
    sub_259FAD1BC(v11, v12);
    swift_bridgeObjectRelease();
    sub_259FAD1BC(v11, v12);
    uint64_t v70 = v11;
    uint64_t v71 = v12;
LABEL_33:
    sub_259FAD1BC(v70, v71);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v51 = v50;
  sub_259FAD1BC(v11, v12);
  swift_bridgeObjectRelease();
  uint64_t v52 = swift_getObjectType();
  uint64_t v53 = *(uint64_t (**)(uint64_t, uint64_t))(v51 + 16);
  swift_unknownObjectRetain_n();
  LOBYTE(v53) = v53(v52, v51);
  swift_unknownObjectRelease();
  if ((v53 & 1) == 0)
  {
    unint64_t v54 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v51 + 56);
    swift_unknownObjectRetain();
    v54(&v84, v52, v51);
    sub_259FAD1BC(v11, v12);
    swift_unknownObjectRelease();
    uint64_t v7 = v84;
    unint64_t v6 = v85;
    uint64_t v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 48))(v52, v51);
    swift_unknownObjectRelease();
    uint64_t v56 = v83;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v56 = sub_259FC99D0(0, v83[2] + 1, 1, v83);
    }
    char v58 = v56[2];
    uint64_t v57 = v56[3];
    long long v59 = v58 + 1;
    if (v58 >= v57 >> 1) {
      uint64_t v56 = sub_259FC99D0((void *)(v57 > 1), v58 + 1, 1, v56);
    }
    char v13 = 0;
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_259FB3304();
  swift_allocError();
  *(_OWORD *)unint64_t v72 = xmmword_25A011030;
  *(unsigned char *)(v72 + 16) = 7;
  swift_willThrow();
  sub_259FAD1BC(v11, v12);
  swift_unknownObjectRelease();
  uint64_t v67 = v11;
  return sub_259FAD1BC(v67, v12);
}

__n128 FieldPathAndType.init(fieldPath:type:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  __n128 result = *a2;
  *(__n128 *)(a3 + 8) = *a2;
  return result;
}

uint64_t FieldPathAndType.fieldPath.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FieldPathAndType.fieldPath.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*FieldPathAndType.fieldPath.modify())()
{
  return nullsub_1;
}

uint64_t FieldPathAndType.type.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_259FBAA50(v2, v3);
}

uint64_t FieldPathAndType.type.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_259FAD1BC(*(void *)(v1 + 8), *(void *)(v1 + 16));
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v3;
  return result;
}

uint64_t (*FieldPathAndType.type.modify())()
{
  return nullsub_1;
}

uint64_t destroy for FieldPathAndType(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  return sub_259FAD1BC(v2, v3);
}

void *_s17PoirotSchematizer16FieldPathAndTypeVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  uint64_t v4 = a2[2];
  swift_bridgeObjectRetain();
  sub_259FBAA50(v3, v4);
  a1[1] = v3;
  a1[2] = v4;
  return a1;
}

void *assignWithCopy for FieldPathAndType(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[1];
  uint64_t v4 = a2[2];
  sub_259FBAA50(v5, v4);
  uint64_t v6 = a1[1];
  uint64_t v7 = a1[2];
  a1[1] = v5;
  a1[2] = v4;
  sub_259FAD1BC(v6, v7);
  return a1;
}

void *assignWithTake for FieldPathAndType(void *a1, uint64_t a2)
{
  *a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  sub_259FAD1BC(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for FieldPathAndType(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FieldPathAndType(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FieldPathAndType()
{
  return &type metadata for FieldPathAndType;
}

unint64_t sub_259FD6B80()
{
  unint64_t result = qword_26A402EE8;
  if (!qword_26A402EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A402EE8);
  }
  return result;
}

unint64_t sub_259FD6BD4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v4 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 0;
  }
  uint64_t v7 = 4 * v4;
  unint64_t v8 = 15;
  while (sub_25A00EB10() != a1 || v9 != a2)
  {
    char v10 = sub_25A00EE40();
    swift_bridgeObjectRelease();
    if (v10) {
      return v8;
    }
    unint64_t v8 = sub_25A00EA60();
    if (v7 == v8 >> 14) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v8;
}

unsigned __int8 *sub_259FD6CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_259FD7108();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_25A00EB20();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_25A0032C4();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (unsigned __int8 *)sub_25A00ED30();
  }
LABEL_7:
  char v13 = sub_259FD6DB8(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_259FD6DB8(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v23 = a3 + 48;
      unsigned __int8 v24 = a3 + 55;
      unsigned __int8 v25 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v23 = 58;
      }
      else
      {
        unsigned __int8 v25 = 97;
        unsigned __int8 v24 = 65;
      }
      if (result)
      {
        uint64_t v26 = 0;
        do
        {
          unsigned int v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              uint64_t v13 = 0;
              if (v27 < 0x61 || v27 >= v25) {
                return (unsigned __int8 *)v13;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
            return 0;
          }
          uint64_t v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v15 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v16 = a3 + 48;
  unsigned __int8 v17 = a3 + 55;
  unsigned __int8 v18 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v16 = 58;
  }
  else
  {
    unsigned __int8 v18 = 97;
    unsigned __int8 v17 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  char v19 = result + 1;
  do
  {
    unsigned int v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        uint64_t v13 = 0;
        if (v20 < 0x61 || v20 >= v18) {
          return (unsigned __int8 *)v13;
        }
        char v21 = -87;
      }
      else
      {
        char v21 = -55;
      }
    }
    else
    {
      char v21 = -48;
    }
    uint64_t v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21))) {
      return 0;
    }
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_259FD7034(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    unsigned int v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    unsigned int v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    unsigned int v11 = (void *)sub_25A00ED30();
  }
  uint64_t result = sub_259FD715C((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    char v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

unint64_t sub_259FD7108()
{
  unint64_t result = qword_26A402EF0;
  if (!qword_26A402EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A402EF0);
  }
  return result;
}

uint64_t sub_259FD715C(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    unint64_t result = sub_25A003818(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_95;
  }
  unint64_t result = sub_25A00EAC0();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    unint64_t result = sub_25A003818(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    unint64_t result = sub_25A003818(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    unint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_91;
  }
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  unint64_t result = sub_25A00EAC0();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  char v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    char v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v31 = a6 + 48;
        unsigned __int8 v32 = a6 + 55;
        unsigned __int8 v33 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v31 = 58;
        }
        else
        {
          unsigned __int8 v33 = 97;
          unsigned __int8 v32 = 65;
        }
        if (v19)
        {
          uint64_t v24 = 0;
          uint64_t v34 = v19 + 1;
          uint64_t v35 = result - 1;
          do
          {
            unsigned int v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                uint64_t v29 = 0;
                if (v36 < 0x61 || v36 >= v33) {
                  return v29;
                }
                char v37 = -87;
              }
              else
              {
                char v37 = -55;
              }
            }
            else
            {
              char v37 = -48;
            }
            uint64_t v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
              return 0;
            }
            uint64_t v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37))) {
              return 0;
            }
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v39 = a6 + 48;
      unsigned __int8 v40 = a6 + 55;
      unsigned __int8 v41 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v39 = 58;
      }
      else
      {
        unsigned __int8 v41 = 97;
        unsigned __int8 v40 = 65;
      }
      if (v19)
      {
        uint64_t v42 = 0;
        do
        {
          unsigned int v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              uint64_t v29 = 0;
              if (v43 < 0x61 || v43 >= v41) {
                return v29;
              }
              char v44 = -87;
            }
            else
            {
              char v44 = -55;
            }
          }
          else
          {
            char v44 = -48;
          }
          uint64_t v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63) {
            return 0;
          }
          uint64_t v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44))) {
            return 0;
          }
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 48;
      unsigned __int8 v22 = a6 + 55;
      unsigned __int8 v23 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v21 = 58;
      }
      else
      {
        unsigned __int8 v23 = 97;
        unsigned __int8 v22 = 65;
      }
      if (v19)
      {
        uint64_t v24 = 0;
        unsigned __int8 v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              uint64_t v29 = 0;
              if (v27 < 0x61 || v27 >= v23) {
                return v29;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
            return 0;
          }
          uint64_t v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28))) {
            return 0;
          }
          ++v25;
          if (!--v26) {
            return v24;
          }
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

uint64_t sub_259FD7584()
{
  return sub_25A00EF90();
}

uint64_t sub_259FD75CC()
{
  return sub_25A00EF80();
}

uint64_t sub_259FD75F8()
{
  return sub_25A00EF90();
}

uint64_t sub_259FD763C@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_259FD7860(*a1);
  *a2 = result;
  return result;
}

void sub_259FD7668(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t getEnumTagSinglePayload for ProtoWireType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ProtoWireType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259FD77D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProtoWireType()
{
  return &type metadata for ProtoWireType;
}

unint64_t sub_259FD780C()
{
  unint64_t result = qword_26A402EF8;
  if (!qword_26A402EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A402EF8);
  }
  return result;
}

uint64_t sub_259FD7860(uint64_t result)
{
  if (result >= 6u) {
    return 6;
  }
  else {
    return result;
  }
}

uint64_t EnumSchema.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t))(*(void *)(v1 + 8) + 8))(ObjectType);
}

uint64_t EnumSchemaDescribing.asPublic()@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  *a2 = v2;
  a2[1] = a1;
  return swift_unknownObjectRetain();
}

uint64_t EnumSchema.valueSet.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(ObjectType, v1);
}

Swift::Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> EnumSchema.value(withName:)(Swift::String withName)
{
  object = withName._object;
  uint64_t countAndFlagsBits = withName._countAndFlagsBits;
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v4 + 40))(countAndFlagsBits, object, ObjectType, v4);
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> EnumSchema.name(forValue:)(Swift::Int forValue)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (*(uint64_t (**)(Swift::Int, uint64_t, uint64_t))(v3 + 48))(forValue, ObjectType, v3);
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

ValueMetadata *type metadata accessor for EnumSchema()
{
  return &type metadata for EnumSchema;
}

uint64_t dispatch thunk of EnumSchemaDescribing.valueSet.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EnumSchemaDescribing.options.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EnumSchemaDescribing.valueOptions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EnumSchemaDescribing.value(withName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of EnumSchemaDescribing.name(forValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

ValueMetadata *type metadata accessor for MergeConflict()
{
  return &type metadata for MergeConflict;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SchematizedData.asJSON()()
{
  swift_getObjectType();
  uint64_t v1 = MessageSchemaDescribing.schematizing<A>(data:block:)();
  if (!v0)
  {
    uint64_t v1 = v4;
    uint64_t v2 = v5;
  }
  result._object = v2;
  result._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t sub_259FD7B28(uint64_t a1)
{
  uint64_t v3 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v10 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    int64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v16 = v15[1];
    uint64_t v17 = *(void *)(*(void *)(a1 + 56) + 8 * i);
    v19[0] = *v15;
    v19[1] = v16;
    uint64_t v19[2] = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259FDB8C0(v19);
    if (v1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v9 >= v7) {
      return swift_release();
    }
    unint64_t v13 = *(void *)(v3 + 8 * v9);
    if (!v13)
    {
      int64_t v14 = v9 + 1;
      if (v9 + 1 >= v7) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v3 + 8 * v14);
      if (v13) {
        goto LABEL_14;
      }
      int64_t v14 = v9 + 2;
      if (v9 + 2 >= v7) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v3 + 8 * v14);
      if (v13) {
        goto LABEL_14;
      }
      int64_t v14 = v9 + 3;
      if (v9 + 3 >= v7) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v3 + 8 * v14);
      if (v13)
      {
LABEL_14:
        int64_t v9 = v14;
        goto LABEL_15;
      }
      int64_t v18 = v9 + 4;
      if (v9 + 4 >= v7) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v3 + 8 * v18);
      v9 += 4;
      if (!v13) {
        break;
      }
    }
LABEL_15:
    unint64_t v6 = (v13 - 1) & v13;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v7) {
      return swift_release();
    }
    unint64_t v13 = *(void *)(v3 + 8 * v9);
    ++v18;
    if (v13) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t UnsafeSchematizedData.field(forOneof:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[1];
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(ObjectType, a2);
  uint64_t v10 = sub_259FE7208(v9, v6, v7, MEMORY[0x263F8EE78]);
  char v12 = v11;
  swift_bridgeObjectRelease();
  if (!v3)
  {
    if (v12)
    {
      return 0;
    }
    else
    {
      uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 40))(v10, ObjectType, a2);
      uint64_t v16 = v15;
      uint64_t v17 = swift_getObjectType();
      uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v14, v16, v17, v5);
      swift_bridgeObjectRelease();
    }
  }
  return v9;
}

uint64_t SchematizedData.asJSONData()()
{
  swift_getObjectType();
  uint64_t result = MessageSchemaDescribing.schematizing<A>(data:block:)();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t SchematizedData.messageSchemaImpl.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SchematizedData.data.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_259FAE450(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t SchematizedData.messageSchema.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  swift_getObjectType();
  return MessageSchemaDescribing.asPublic()(v3, a1);
}

uint64_t SchematizedData.value(forFieldName:)()
{
  return MessageSchemaDescribing.schematizing<A>(data:block:)();
}

uint64_t sub_259FD8040@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v8 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v9 = a1[3];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, a3, ObjectType, v8);
  if (!v4)
  {
    uint64_t v14 = v13;
    uint64_t v61 = a4;
    uint64_t v15 = swift_getObjectType();
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v14 + 56))(&v56, v15, v14);
    long long v16 = v56;
    uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 48))(v15, v14);
    unint64_t v18 = v9 - v10;
    if (!v10) {
      unint64_t v18 = 0;
    }
    *(void *)&long long v56 = v10;
    *((void *)&v56 + 1) = v9;
    uint64_t v58 = 0;
    long long v57 = v18;
    char v59 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B3251A8);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_25A010B90;
    *(void *)(v19 + 32) = v17;
    *(void *)(v19 + 40) = 0;
    *(unsigned char *)(v19 + 48) = 0;
    *(void *)uint64_t v53 = v19;
    *(_OWORD *)&v53[8] = v16;
    sub_259FBAA50(v16, *((uint64_t *)&v16 + 1));
    sub_259FDE504((uint64_t *)v53, 0, (uint64_t)v60);
    swift_bridgeObjectRelease();
    sub_259FAD1BC(v16, *((uint64_t *)&v16 + 1));
    sub_259FAD1BC(v16, *((uint64_t *)&v16 + 1));
    swift_unknownObjectRelease();
    if (v60[40] == 255)
    {
      uint64_t result = sub_259FDC754((uint64_t)v60, qword_26B324DC0);
      unsigned __int8 v22 = v61;
      _OWORD *v61 = 0u;
      v22[1] = 0u;
      *((_WORD *)v22 + 16) = -256;
    }
    else
    {
      sub_259FAEE8C((uint64_t)v60, (uint64_t)&v56);
      int v20 = v61;
      switch(v59)
      {
        case 1:
          uint64_t v23 = v56;
          uint64_t result = sub_259FAED74((uint64_t)v60);
          *(void *)int v20 = v23;
          *((void *)v20 + 1) = 0;
          *((void *)v20 + 2) = 0;
          *((void *)v20 + 3) = 0;
          __int16 v24 = 256;
          goto LABEL_23;
        case 2:
          uint64_t v25 = v56;
          uint64_t result = sub_259FAED74((uint64_t)v60);
          *(void *)int v20 = v25;
          *((void *)v20 + 1) = 0;
          *((void *)v20 + 2) = 0;
          *((void *)v20 + 3) = 0;
          __int16 v24 = 512;
          goto LABEL_23;
        case 3:
          uint64_t v26 = v56;
          uint64_t result = sub_259FAED74((uint64_t)v60);
          *(void *)int v20 = v26;
          *((void *)v20 + 1) = 0;
          *((void *)v20 + 2) = 0;
          *((void *)v20 + 3) = 0;
          __int16 v24 = 768;
          goto LABEL_23;
        case 4:
          uint64_t v27 = v56;
          uint64_t result = sub_259FAED74((uint64_t)v60);
          *(void *)int v20 = v27;
          *((void *)v20 + 1) = 0;
          *((void *)v20 + 2) = 0;
          *((void *)v20 + 3) = 0;
          __int16 v24 = 1024;
          goto LABEL_23;
        case 5:
          uint64_t v28 = v56;
          uint64_t result = sub_259FAED74((uint64_t)v60);
          *(void *)int v20 = v28;
          *((void *)v20 + 1) = 0;
          *((void *)v20 + 2) = 0;
          *((void *)v20 + 3) = 0;
          __int16 v24 = 1280;
          goto LABEL_23;
        case 6:
          uint64_t v29 = v56;
          uint64_t result = sub_259FAED74((uint64_t)v60);
          *(void *)int v20 = v29;
          *((void *)v20 + 1) = 0;
          *((void *)v20 + 2) = 0;
          *((void *)v20 + 3) = 0;
          __int16 v24 = 1536;
          goto LABEL_23;
        case 7:
          long long v52 = v56;
          long long v30 = v57;
          __int16 v31 = v58;
          uint64_t result = sub_259FAED74((uint64_t)v60);
          __int16 v24 = v31 | 0x700;
          *int v20 = v52;
          v20[1] = v30;
          goto LABEL_23;
        case 8:
          sub_259FAF0F0(&v56, (uint64_t)v53);
          uint64_t v32 = v54;
          uint64_t v33 = v55;
          __swift_project_boxed_opaque_existential_1(v53, v54);
          uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 24))(v32, v33);
          uint64_t v36 = v35;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
          uint64_t result = sub_259FAED74((uint64_t)v60);
          *(void *)int v20 = v34;
          *((void *)v20 + 1) = v36;
          *((void *)v20 + 2) = 0;
          *((void *)v20 + 3) = 0;
          __int16 v24 = 2048;
          goto LABEL_23;
        case 9:
          sub_259FAF0F0(&v56, (uint64_t)v53);
          uint64_t v37 = v54;
          uint64_t v38 = v55;
          __swift_project_boxed_opaque_existential_1(v53, v54);
          uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 16))(v37, v38);
          uint64_t v41 = v40;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
          uint64_t result = sub_259FAED74((uint64_t)v60);
          *(void *)int v20 = v39;
          *((void *)v20 + 1) = v41;
          *((void *)v20 + 2) = 0;
          *((void *)v20 + 3) = 0;
          __int16 v24 = 2304;
          goto LABEL_23;
        case 10:
          long long v42 = v56;
          uint64_t v54 = MEMORY[0x263F8D3E8];
          uint64_t v55 = MEMORY[0x263F07B80];
          *(_OWORD *)uint64_t v53 = v57;
          unsigned int v43 = __swift_project_boxed_opaque_existential_1(v53, MEMORY[0x263F8D3E8]);
          uint64_t v44 = *v43;
          if (*v43 && (uint64_t v45 = (unsigned char *)v43[1], v46 = (uint64_t)&v45[-v44], v45 != (unsigned char *)v44))
          {
            if (v46 <= 14)
            {
              uint64_t v47 = sub_259FC3B50((unsigned char *)*v43, v45);
              unint64_t v48 = v50 & 0xFFFFFFFFFFFFFFLL;
              swift_unknownObjectRetain();
            }
            else
            {
              swift_unknownObjectRetain();
              if ((unint64_t)v46 >= 0x7FFFFFFF)
              {
                uint64_t v47 = sub_259FC3C98(v44, (uint64_t)v45);
                unint64_t v48 = v51 | 0x8000000000000000;
              }
              else
              {
                uint64_t v47 = sub_259FC3C14(v44, (uint64_t)v45);
                unint64_t v48 = v49 | 0x4000000000000000;
              }
            }
          }
          else
          {
            swift_unknownObjectRetain();
            uint64_t v47 = 0;
            unint64_t v48 = 0xC000000000000000;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
          swift_unknownObjectRelease();
          uint64_t result = sub_259FAED74((uint64_t)v60);
          *int v20 = v42;
          *((void *)v20 + 2) = v47;
          *((void *)v20 + 3) = v48;
          __int16 v24 = 2560;
LABEL_23:
          *((_WORD *)v20 + 16) = v24;
          break;
        default:
          uint64_t v21 = v56;
          uint64_t result = sub_259FAED74((uint64_t)v60);
          *(void *)int v20 = v21;
          *((void *)v20 + 1) = 0;
          *((void *)v20 + 2) = 0;
          *((void *)v20 + 3) = 0;
          *((_WORD *)v20 + 16) = 0;
          break;
      }
    }
  }
  return result;
}

uint64_t UnsafeSchematizedData.value(forFieldName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = v3[1];
  uint64_t v10 = v3[2];
  uint64_t v9 = v3[3];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, a2, ObjectType, v8);
  if (!v4)
  {
    uint64_t v14 = v13;
    uint64_t v15 = a3;
    uint64_t v16 = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v14 + 56))(&v23, v16, v14);
    uint64_t v17 = v23;
    uint64_t v29 = v24;
    uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 48))(v16, v14);
    uint64_t v19 = v9 - v10;
    if (!v10) {
      uint64_t v19 = 0;
    }
    uint64_t v23 = v10;
    uint64_t v24 = v9;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v25 = v19;
    char v28 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B3251A8);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_25A010B90;
    *(void *)(v20 + 32) = v18;
    *(void *)(v20 + 40) = 0;
    *(unsigned char *)(v20 + 48) = 0;
    v22[0] = v20;
    v22[1] = v17;
    uint64_t v21 = v29;
    id v22[2] = v29;
    sub_259FBAA50(v17, v29);
    sub_259FDE504(v22, 0, v15);
    swift_bridgeObjectRelease();
    sub_259FAD1BC(v17, v21);
    sub_259FAD1BC(v17, v21);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t SchematizedData.asUnsafe<A>(_:)()
{
  return MessageSchemaDescribing.schematizing<A>(data:block:)();
}

uint64_t SchematizedData.value(forField:)()
{
  return MessageSchemaDescribing.schematizing<A>(data:block:)();
}

void *sub_259FD8880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(void *(**)(long long *__return_ptr, uint64_t, uint64_t))(a2 + 56))(&v48, ObjectType, a2);
  if (!v3)
  {
    long long v10 = v48;
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48))(ObjectType, a2);
    unint64_t v12 = v7 - v6;
    if (!v6) {
      unint64_t v12 = 0;
    }
    *(void *)&long long v48 = v6;
    *((void *)&v48 + 1) = v7;
    uint64_t v50 = 0;
    long long v49 = v12;
    char v51 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B3251A8);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_25A010B90;
    *(void *)(v13 + 32) = v11;
    *(void *)(v13 + 40) = 0;
    *(unsigned char *)(v13 + 48) = 0;
    *(void *)uint64_t v45 = v13;
    *(_OWORD *)&v45[8] = v10;
    sub_259FBAA50(v10, *((uint64_t *)&v10 + 1));
    sub_259FDE504((uint64_t *)v45, 0, (uint64_t)v52);
    swift_bridgeObjectRelease();
    sub_259FAD1BC(v10, *((uint64_t *)&v10 + 1));
    sub_259FAD1BC(v10, *((uint64_t *)&v10 + 1));
    if (v52[40] == 255)
    {
      uint64_t result = (void *)sub_259FDC754((uint64_t)v52, qword_26B324DC0);
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      __int16 v15 = -256;
LABEL_8:
      *(_WORD *)(a3 + 32) = v15;
    }
    else
    {
      sub_259FAEE8C((uint64_t)v52, (uint64_t)&v48);
      switch(v51)
      {
        case 1:
          uint64_t v16 = v48;
          uint64_t result = (void *)sub_259FAED74((uint64_t)v52);
          *(void *)a3 = v16;
          *(void *)(a3 + 8) = 0;
          *(void *)(a3 + 16) = 0;
          *(void *)(a3 + 24) = 0;
          __int16 v15 = 256;
          goto LABEL_8;
        case 2:
          uint64_t v17 = v48;
          uint64_t result = (void *)sub_259FAED74((uint64_t)v52);
          *(void *)a3 = v17;
          *(void *)(a3 + 8) = 0;
          *(void *)(a3 + 16) = 0;
          *(void *)(a3 + 24) = 0;
          __int16 v15 = 512;
          goto LABEL_8;
        case 3:
          uint64_t v18 = v48;
          uint64_t result = (void *)sub_259FAED74((uint64_t)v52);
          *(void *)a3 = v18;
          *(void *)(a3 + 8) = 0;
          *(void *)(a3 + 16) = 0;
          *(void *)(a3 + 24) = 0;
          __int16 v15 = 768;
          goto LABEL_8;
        case 4:
          uint64_t v19 = v48;
          uint64_t result = (void *)sub_259FAED74((uint64_t)v52);
          *(void *)a3 = v19;
          *(void *)(a3 + 8) = 0;
          *(void *)(a3 + 16) = 0;
          *(void *)(a3 + 24) = 0;
          __int16 v15 = 1024;
          goto LABEL_8;
        case 5:
          uint64_t v20 = v48;
          uint64_t result = (void *)sub_259FAED74((uint64_t)v52);
          *(void *)a3 = v20;
          *(void *)(a3 + 8) = 0;
          *(void *)(a3 + 16) = 0;
          *(void *)(a3 + 24) = 0;
          __int16 v15 = 1280;
          goto LABEL_8;
        case 6:
          uint64_t v21 = v48;
          uint64_t result = (void *)sub_259FAED74((uint64_t)v52);
          *(void *)a3 = v21;
          *(void *)(a3 + 8) = 0;
          *(void *)(a3 + 16) = 0;
          *(void *)(a3 + 24) = 0;
          __int16 v15 = 1536;
          goto LABEL_8;
        case 7:
          long long v44 = v48;
          long long v22 = v49;
          __int16 v23 = v50;
          uint64_t result = (void *)sub_259FAED74((uint64_t)v52);
          __int16 v15 = v23 | 0x700;
          *(_OWORD *)a3 = v44;
          *(_OWORD *)(a3 + 16) = v22;
          goto LABEL_8;
        case 8:
          sub_259FAF0F0(&v48, (uint64_t)v45);
          uint64_t v24 = v46;
          uint64_t v25 = v47;
          __swift_project_boxed_opaque_existential_1(v45, v46);
          uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 24))(v24, v25);
          uint64_t v28 = v27;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
          uint64_t result = (void *)sub_259FAED74((uint64_t)v52);
          *(void *)a3 = v26;
          *(void *)(a3 + 8) = v28;
          *(void *)(a3 + 16) = 0;
          *(void *)(a3 + 24) = 0;
          __int16 v15 = 2048;
          goto LABEL_8;
        case 9:
          sub_259FAF0F0(&v48, (uint64_t)v45);
          uint64_t v29 = v46;
          uint64_t v30 = v47;
          __swift_project_boxed_opaque_existential_1(v45, v46);
          uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
          uint64_t v33 = v32;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
          uint64_t result = (void *)sub_259FAED74((uint64_t)v52);
          *(void *)a3 = v31;
          *(void *)(a3 + 8) = v33;
          *(void *)(a3 + 16) = 0;
          *(void *)(a3 + 24) = 0;
          __int16 v15 = 2304;
          goto LABEL_8;
        case 10:
          long long v34 = v48;
          uint64_t v46 = MEMORY[0x263F8D3E8];
          uint64_t v47 = MEMORY[0x263F07B80];
          *(_OWORD *)uint64_t v45 = v49;
          uint64_t v35 = __swift_project_boxed_opaque_existential_1(v45, MEMORY[0x263F8D3E8]);
          uint64_t v36 = *v35;
          if (*v35 && (uint64_t v37 = (unsigned char *)v35[1], v38 = (uint64_t)&v37[-v36], v37 != (unsigned char *)v36))
          {
            if (v38 <= 14)
            {
              uint64_t v39 = sub_259FC3B50((unsigned char *)*v35, v37);
              unint64_t v40 = v42 & 0xFFFFFFFFFFFFFFLL;
              swift_unknownObjectRetain();
            }
            else
            {
              swift_unknownObjectRetain();
              if ((unint64_t)v38 >= 0x7FFFFFFF)
              {
                uint64_t v39 = sub_259FC3C98(v36, (uint64_t)v37);
                unint64_t v40 = v43 | 0x8000000000000000;
              }
              else
              {
                uint64_t v39 = sub_259FC3C14(v36, (uint64_t)v37);
                unint64_t v40 = v41 | 0x4000000000000000;
              }
            }
          }
          else
          {
            swift_unknownObjectRetain();
            uint64_t v39 = 0;
            unint64_t v40 = 0xC000000000000000;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
          swift_unknownObjectRelease();
          uint64_t result = (void *)sub_259FAED74((uint64_t)v52);
          *(_OWORD *)a3 = v34;
          *(void *)(a3 + 16) = v39;
          *(void *)(a3 + 24) = v40;
          __int16 v15 = 2560;
          goto LABEL_8;
        default:
          uint64_t v14 = v48;
          uint64_t result = (void *)sub_259FAED74((uint64_t)v52);
          *(void *)a3 = v14;
          *(void *)(a3 + 8) = 0;
          *(void *)(a3 + 16) = 0;
          *(void *)(a3 + 24) = 0;
          *(_WORD *)(a3 + 32) = 0;
          break;
      }
    }
  }
  return result;
}

uint64_t SchematizedData.value(forFieldPath:)()
{
  return MessageSchemaDescribing.schematizing<A>(data:block:)();
}

uint64_t sub_259FD8DC8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v10 = a1[3];
  unint64_t v11 = v10 - v9;
  if (!v9) {
    unint64_t v11 = 0;
  }
  *(void *)&long long v54 = a1[2];
  *((void *)&v54 + 1) = v10;
  uint64_t v56 = 0;
  long long v55 = v11;
  char v57 = 1;
  swift_getObjectType();
  MessageSchemaDescribing.asPublic()(v8, &v51);
  v53[0] = v51;
  v53[1] = *((void *)&v51 + 1) | 0x4000000000000000;
  swift_bridgeObjectRetain();
  uint64_t result = sub_259FD5F4C(a2, a3, v53, &v47);
  if (!v4)
  {
    uint64_t v13 = *((void *)&v47 + 1);
    uint64_t v14 = v48;
    if (*(void *)(v47 + 16))
    {
      long long v51 = v47;
      uint64_t v52 = v48;
      sub_259FDE504((uint64_t *)&v51, 0, (uint64_t)v58);
      swift_bridgeObjectRelease();
      sub_259FAD1BC(v13, v14);
      if (v58[40] == 255)
      {
        uint64_t result = sub_259FDC754((uint64_t)v58, qword_26B324DC0);
        *(_OWORD *)a4 = 0u;
        *(_OWORD *)(a4 + 16) = 0u;
        __int16 v17 = -256;
LABEL_11:
        *(_WORD *)(a4 + 32) = v17;
      }
      else
      {
        sub_259FAEE8C((uint64_t)v58, (uint64_t)&v54);
        switch(v57)
        {
          case 1:
            uint64_t v18 = v54;
            uint64_t result = sub_259FAED74((uint64_t)v58);
            *(void *)a4 = v18;
            *(void *)(a4 + 8) = 0;
            *(void *)(a4 + 16) = 0;
            *(void *)(a4 + 24) = 0;
            __int16 v17 = 256;
            goto LABEL_11;
          case 2:
            uint64_t v19 = v54;
            uint64_t result = sub_259FAED74((uint64_t)v58);
            *(void *)a4 = v19;
            *(void *)(a4 + 8) = 0;
            *(void *)(a4 + 16) = 0;
            *(void *)(a4 + 24) = 0;
            __int16 v17 = 512;
            goto LABEL_11;
          case 3:
            uint64_t v20 = v54;
            uint64_t result = sub_259FAED74((uint64_t)v58);
            *(void *)a4 = v20;
            *(void *)(a4 + 8) = 0;
            *(void *)(a4 + 16) = 0;
            *(void *)(a4 + 24) = 0;
            __int16 v17 = 768;
            goto LABEL_11;
          case 4:
            uint64_t v21 = v54;
            uint64_t result = sub_259FAED74((uint64_t)v58);
            *(void *)a4 = v21;
            *(void *)(a4 + 8) = 0;
            *(void *)(a4 + 16) = 0;
            *(void *)(a4 + 24) = 0;
            __int16 v17 = 1024;
            goto LABEL_11;
          case 5:
            uint64_t v22 = v54;
            uint64_t result = sub_259FAED74((uint64_t)v58);
            *(void *)a4 = v22;
            *(void *)(a4 + 8) = 0;
            *(void *)(a4 + 16) = 0;
            *(void *)(a4 + 24) = 0;
            __int16 v17 = 1280;
            goto LABEL_11;
          case 6:
            uint64_t v23 = v54;
            uint64_t result = sub_259FAED74((uint64_t)v58);
            *(void *)a4 = v23;
            *(void *)(a4 + 8) = 0;
            *(void *)(a4 + 16) = 0;
            *(void *)(a4 + 24) = 0;
            __int16 v17 = 1536;
            goto LABEL_11;
          case 7:
            long long v46 = v54;
            long long v24 = v55;
            __int16 v25 = v56;
            uint64_t result = sub_259FAED74((uint64_t)v58);
            __int16 v17 = v25 | 0x700;
            *(_OWORD *)a4 = v46;
            *(_OWORD *)(a4 + 16) = v24;
            goto LABEL_11;
          case 8:
            sub_259FAF0F0(&v54, (uint64_t)&v47);
            uint64_t v26 = v49;
            uint64_t v27 = v50;
            __swift_project_boxed_opaque_existential_1(&v47, v49);
            uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 24))(v26, v27);
            uint64_t v30 = v29;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
            uint64_t result = sub_259FAED74((uint64_t)v58);
            *(void *)a4 = v28;
            *(void *)(a4 + 8) = v30;
            *(void *)(a4 + 16) = 0;
            *(void *)(a4 + 24) = 0;
            __int16 v17 = 2048;
            goto LABEL_11;
          case 9:
            sub_259FAF0F0(&v54, (uint64_t)&v47);
            uint64_t v31 = v49;
            uint64_t v32 = v50;
            __swift_project_boxed_opaque_existential_1(&v47, v49);
            uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
            uint64_t v35 = v34;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
            uint64_t result = sub_259FAED74((uint64_t)v58);
            *(void *)a4 = v33;
            *(void *)(a4 + 8) = v35;
            *(void *)(a4 + 16) = 0;
            *(void *)(a4 + 24) = 0;
            __int16 v17 = 2304;
            goto LABEL_11;
          case 10:
            long long v36 = v54;
            uint64_t v49 = MEMORY[0x263F8D3E8];
            uint64_t v50 = MEMORY[0x263F07B80];
            long long v47 = v55;
            uint64_t v37 = __swift_project_boxed_opaque_existential_1(&v47, MEMORY[0x263F8D3E8]);
            uint64_t v38 = *v37;
            if (*v37 && (uint64_t v39 = (unsigned char *)v37[1], v40 = (uint64_t)&v39[-v38], v39 != (unsigned char *)v38))
            {
              if (v40 <= 14)
              {
                uint64_t v41 = sub_259FC3B50((unsigned char *)*v37, v39);
                unint64_t v42 = v44 & 0xFFFFFFFFFFFFFFLL;
                swift_unknownObjectRetain();
              }
              else
              {
                swift_unknownObjectRetain();
                if ((unint64_t)v40 >= 0x7FFFFFFF)
                {
                  uint64_t v41 = sub_259FC3C98(v38, (uint64_t)v39);
                  unint64_t v42 = v45 | 0x8000000000000000;
                }
                else
                {
                  uint64_t v41 = sub_259FC3C14(v38, (uint64_t)v39);
                  unint64_t v42 = v43 | 0x4000000000000000;
                }
              }
            }
            else
            {
              swift_unknownObjectRetain();
              uint64_t v41 = 0;
              unint64_t v42 = 0xC000000000000000;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
            swift_unknownObjectRelease();
            uint64_t result = sub_259FAED74((uint64_t)v58);
            *(_OWORD *)a4 = v36;
            *(void *)(a4 + 16) = v41;
            *(void *)(a4 + 24) = v42;
            __int16 v17 = 2560;
            goto LABEL_11;
          default:
            uint64_t v15 = v54;
            uint64_t result = sub_259FAED74((uint64_t)v58);
            *(void *)a4 = v15;
            *(void *)(a4 + 8) = 0;
            *(void *)(a4 + 16) = 0;
            *(void *)(a4 + 24) = 0;
            *(_WORD *)(a4 + 32) = 0;
            break;
        }
      }
    }
    else
    {
      sub_259FB3304();
      swift_allocError();
      *(void *)uint64_t v16 = 0xD000000000000011;
      *(void *)(v16 + 8) = 0x800000025A00F9A0;
      *(unsigned char *)(v16 + 16) = 5;
      swift_willThrow();
      swift_bridgeObjectRelease();
      return sub_259FAD1BC(v13, v14);
    }
  }
  return result;
}

uint64_t SchematizedData.forEachValue(ofFieldName:block:)()
{
  return MessageSchemaDescribing.schematizing<A>(data:block:)();
}

uint64_t sub_259FD92FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(long long *))
{
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 56))(a6, a7, ObjectType, a3);
  if (!v8)
  {
    uint64_t v18 = v14 - v13;
    if (!v13) {
      uint64_t v18 = 0;
    }
    v19[0] = v13;
    v19[1] = v14;
    uint64_t v19[3] = 0;
    v19[4] = 0;
    uint64_t v19[2] = v18;
    char v20 = 1;
    sub_259FBE68C(result, v17, v19, a8);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t SchematizedData.values(forFieldName:)()
{
  swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402F08);
  uint64_t result = MessageSchemaDescribing.schematizing<A>(data:block:)();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t sub_259FD949C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X5>, uint64_t a4@<X6>, void *a5@<X8>)
{
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v18 = (void *)MEMORY[0x263F8EE78];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 56))(a3, a4, ObjectType, a2);
  if (!v5)
  {
    uint64_t v15 = v11 - v10;
    if (!v10) {
      uint64_t v15 = 0;
    }
    v16[0] = v10;
    v16[1] = v11;
    v16[3] = 0;
    v16[4] = 0;
    void v16[2] = v15;
    char v17 = 1;
    sub_259FBE6A4(result, v14, v16, &v18);
    uint64_t result = swift_unknownObjectRelease();
    *a5 = v18;
  }
  return result;
}

uint64_t SchematizedData.forEachValue(ofField:block:)()
{
  return MessageSchemaDescribing.schematizing<A>(data:block:)();
}

uint64_t SchematizedData.forEachValue(_:)()
{
  return MessageSchemaDescribing.schematizing<A>(data:block:)();
}

uint64_t sub_259FD96EC(void *a1, void (*a2)(__n128 *), uint64_t a3)
{
  uint64_t v6 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v8 = a1[3];
  uint64_t v9 = v8 - v7;
  if (!v7) {
    uint64_t v9 = 0;
  }
  v12[0] = a1[2];
  v12[1] = v8;
  v12[3] = 0;
  v12[4] = 0;
  _OWORD v12[2] = v9;
  char v13 = 1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 40))(ObjectType, v6);
  if (!v3)
  {
    sub_259FC1FD8(result, v12, a2, a3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t SchematizedData.forEachValue(matchingFieldPath:block:)()
{
  return MessageSchemaDescribing.schematizing<A>(data:block:)();
}

uint64_t sub_259FD9850(long long *a1, uint64_t a2, unint64_t a3, void (*a4)(long long *), uint64_t a5)
{
  long long v12 = *a1;
  uint64_t v8 = *((void *)a1 + 2);
  uint64_t v9 = *((void *)a1 + 3);
  unint64_t v10 = sub_259FE5498(a2, a3);
  if (v5) {
    return MEMORY[0x25A2F2980](v5);
  }
  long long v13 = v12;
  uint64_t v14 = v8;
  uint64_t v15 = v9;
  sub_259FC322C(&v13, v10, a4, a5);
  return swift_bridgeObjectRelease();
}

uint64_t SchematizedData.value(forOneofName:)()
{
  return MessageSchemaDescribing.schematizing<A>(data:block:)();
}

uint64_t sub_259FD99B0@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X5>, uint64_t a4@<X6>, __n128 *a5@<X8>)
{
  uint64_t v10 = a1[1];
  uint64_t v56 = a1[2];
  uint64_t v42 = a1[3];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 72))(a3, a4, ObjectType, a2);
  if (!v5)
  {
    uint64_t v14 = v13;
    uint64_t v39 = v10;
    uint64_t v41 = a5;
    uint64_t v15 = swift_getObjectType();
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 24))(v15, v14);
    uint64_t v17 = v56;
    uint64_t v18 = sub_259FE7208(v16, v56, v42, MEMORY[0x263F8EE78]);
    char v20 = v19;
    swift_bridgeObjectRelease();
    if (v20)
    {
      memset(v53, 0, 41);
      long long v52 = 0u;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 40))(v18, v15, v14);
      uint64_t v23 = v22;
      uint64_t v24 = swift_getObjectType();
      uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 56))(v21, v23, v24);
      uint64_t v27 = v26;
      swift_bridgeObjectRelease();
      uint64_t v28 = swift_getObjectType();
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v27 + 56))(&v44, v28, v27);
      uint64_t v29 = v45;
      uint64_t v40 = v44;
      uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 48))(v28, v27);
      uint64_t v31 = v42 - v17;
      if (!v17) {
        uint64_t v31 = 0;
      }
      uint64_t v44 = v17;
      uint64_t v45 = v42;
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      uint64_t v46 = v31;
      char v49 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B3251A8);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_25A010B90;
      *(void *)(v32 + 32) = v30;
      *(void *)(v32 + 40) = 0;
      *(unsigned char *)(v32 + 48) = 0;
      v43[0] = v32;
      v43[1] = v40;
      v43[2] = v29;
      sub_259FBAA50(v40, v29);
      sub_259FDE504(v43, 0, (uint64_t)v50);
      swift_bridgeObjectRelease();
      sub_259FAD1BC(v40, v29);
      sub_259FAD1BC(v40, v29);
      if (v50[40] == 255)
      {
        sub_259FDC754((uint64_t)v50, qword_26B324DC0);
        uint64_t v35 = (*(uint64_t (**)(uint64_t))(*(void *)(v27 + 8) + 8))(v28);
        uint64_t v37 = v36;
        sub_259FB3304();
        swift_allocError();
        *(void *)uint64_t v38 = v35;
        *(void *)(v38 + 8) = v37;
        *(unsigned char *)(v38 + 16) = 3;
        swift_willThrow();
        swift_unknownObjectRelease();
        return swift_unknownObjectRelease();
      }
      sub_259FC2DB4((uint64_t)v50, (uint64_t)v51);
      sub_259FC2DB4((uint64_t)v51, (uint64_t)v53);
      *(void *)&long long v52 = v25;
      *((void *)&v52 + 1) = v27;
      swift_unknownObjectRelease();
      if ((void)v52)
      {
        FieldValueImpl.asPublic()(v54);
        uint64_t result = sub_259FC1F84((uint64_t)&v52);
        unsigned __int16 v33 = v55;
        __n128 v34 = v54[1];
        *uint64_t v41 = v54[0];
        v41[1] = v34;
        v41[2] = v54[2];
        v41[3].n128_u16[0] = v33;
        return result;
      }
    }
    uint64_t result = sub_259FDC754((uint64_t)&v52, &qword_26A402F40);
    v41[3].n128_u16[0] = 0;
    v41[1] = 0u;
    v41[2] = 0u;
    *uint64_t v41 = 0u;
  }
  return result;
}

uint64_t SchematizedData.value(forOneof:)()
{
  return MessageSchemaDescribing.schematizing<A>(data:block:)();
}

uint64_t sub_259FD9EDC@<X0>(void *a1@<X0>, uint64_t a2@<X2>, __n128 *a3@<X8>)
{
  uint64_t v48 = a3;
  uint64_t v5 = a1[2];
  uint64_t v34 = a1[1];
  uint64_t v6 = a1[3];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(ObjectType, a2);
  uint64_t v9 = sub_259FE7208(v8, v5, v6, MEMORY[0x263F8EE78]);
  char v11 = v10;
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3)
  {
    if (v11)
    {
      uint64_t v17 = v48;
      v48[3].n128_u16[0] = 0;
      v17[1] = 0u;
      v17[2] = 0u;
      *uint64_t v17 = 0u;
    }
    else
    {
      uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 40))(v9, ObjectType, a2);
      uint64_t v15 = v14;
      uint64_t v16 = swift_getObjectType();
      uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 56))(v13, v15, v16);
      uint64_t v20 = v19;
      swift_bridgeObjectRelease();
      uint64_t v21 = swift_getObjectType();
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v20 + 56))(&v36, v21, v20);
      uint64_t v23 = v36;
      uint64_t v22 = v37;
      uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 48))(v21, v20);
      uint64_t v25 = v6 - v5;
      if (!v5) {
        uint64_t v25 = 0;
      }
      uint64_t v36 = v5;
      uint64_t v37 = v6;
      uint64_t v39 = 0;
      uint64_t v40 = 0;
      uint64_t v38 = v25;
      char v41 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B3251A8);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_25A010B90;
      *(void *)(v26 + 32) = v24;
      *(void *)(v26 + 40) = 0;
      *(unsigned char *)(v26 + 48) = 0;
      v35[0] = v26;
      v35[1] = v23;
      v35[2] = v22;
      sub_259FBAA50(v23, v22);
      sub_259FDE504(v35, 0, (uint64_t)v42);
      swift_bridgeObjectRelease();
      sub_259FAD1BC(v23, v22);
      sub_259FAD1BC(v23, v22);
      if (v42[40] == 255)
      {
        sub_259FDC754((uint64_t)v42, qword_26B324DC0);
        uint64_t v30 = (*(uint64_t (**)(uint64_t))(*(void *)(v20 + 8) + 8))(v21);
        uint64_t v32 = v31;
        sub_259FB3304();
        swift_allocError();
        *(void *)uint64_t v33 = v30;
        *(void *)(v33 + 8) = v32;
        *(unsigned char *)(v33 + 16) = 3;
        swift_willThrow();
        return swift_unknownObjectRelease();
      }
      else
      {
        sub_259FC2DB4((uint64_t)v42, (uint64_t)v43);
        sub_259FC2DB4((uint64_t)v43, (uint64_t)&v45);
        v44[0] = v18;
        v44[1] = v20;
        FieldValueImpl.asPublic()(v46);
        uint64_t result = sub_259FC1F84((uint64_t)v44);
        unsigned __int16 v27 = v47;
        __n128 v28 = v46[1];
        uint64_t v29 = v48;
        *uint64_t v48 = v46[0];
        v29[1] = v28;
        v29[2] = v46[2];
        v29[3].n128_u16[0] = v27;
      }
    }
  }
  return result;
}

uint64_t sub_259FDA250(_OWORD *a1, uint64_t (*a2)(_OWORD *))
{
  long long v2 = a1[1];
  v4[0] = *a1;
  v4[1] = v2;
  return a2(v4);
}

uint64_t SchematizedData.getArray(matchingFieldPath:)()
{
  swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402F08);
  uint64_t result = MessageSchemaDescribing.schematizing<A>(data:block:)();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t sub_259FDA348@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v51 = *MEMORY[0x263EF8340];
  long long v36 = *a1;
  uint64_t v6 = *((void *)a1 + 2);
  uint64_t v7 = *((void *)a1 + 3);
  uint64_t v8 = MEMORY[0x263F8EE78];
  *(void *)&long long v44 = MEMORY[0x263F8EE78];
  unint64_t v9 = sub_259FE5498(a2, a3);
  if (v4)
  {
    MEMORY[0x25A2F2980](v4);
    uint64_t v10 = MEMORY[0x263F8EE78];
    int64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (v11) {
      goto LABEL_3;
    }
LABEL_29:
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  long long v48 = v36;
  uint64_t v49 = v6;
  uint64_t v50 = v7;
  sub_259FC33B4(&v48, v9, (void **)&v44);
  swift_bridgeObjectRelease();
  uint64_t v10 = v44;
  int64_t v11 = *(void *)(v44 + 16);
  if (!v11) {
    goto LABEL_29;
  }
LABEL_3:
  uint64_t v34 = a4;
  uint64_t v40 = v8;
  sub_259FE1544(0, v11, 0);
  uint64_t v12 = v10 + 32;
  do
  {
    sub_259FAEE8C(v12, (uint64_t)&v48);
    sub_259FAEE8C((uint64_t)&v48, (uint64_t)&v44);
    char v35 = v47;
    switch(v47)
    {
      case 2:
      case 3:
      case 5:
        uint64_t v37 = 0;
        uint64_t v13 = 0;
        unint64_t v14 = 0;
        char v15 = 0;
        uint64_t v16 = v44;
        break;
      case 6:
        uint64_t v37 = 0;
        uint64_t v13 = 0;
        unint64_t v14 = 0;
        char v15 = 0;
        uint64_t v16 = v44;
        break;
      case 7:
        uint64_t v37 = *((void *)&v44 + 1);
        uint64_t v16 = v44;
        unint64_t v14 = *((void *)&v45 + 1);
        uint64_t v13 = v45;
        char v15 = v46;
        break;
      case 8:
        sub_259FAF0F0(&v44, (uint64_t)&v41);
        uint64_t v17 = v42;
        uint64_t v18 = v43;
        __swift_project_boxed_opaque_existential_1(&v41, v42);
        uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18);
        goto LABEL_11;
      case 9:
        sub_259FAF0F0(&v44, (uint64_t)&v41);
        uint64_t v21 = v42;
        uint64_t v22 = v43;
        __swift_project_boxed_opaque_existential_1(&v41, v42);
        uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 16))(v21, v22);
LABEL_11:
        uint64_t v16 = v19;
        uint64_t v37 = v20;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
        uint64_t v13 = 0;
        unint64_t v14 = 0;
        goto LABEL_16;
      case 10:
        long long v23 = v44;
        uint64_t v42 = MEMORY[0x263F8D3E8];
        uint64_t v43 = MEMORY[0x263F07B80];
        long long v41 = v45;
        uint64_t v24 = (const void **)__swift_project_boxed_opaque_existential_1(&v41, MEMORY[0x263F8D3E8]);
        uint64_t v25 = *v24;
        uint64_t v37 = *((void *)&v23 + 1);
        if (*v24 && (v26 = v24[1], uint64_t v27 = v26 - v25, v26 != v25))
        {
          if (v27 <= 14)
          {
            memset(__dst, 0, sizeof(__dst));
            unsigned __int8 v39 = (_BYTE)v26 - (_BYTE)v25;
            memcpy(__dst, v25, v26 - v25);
            uint64_t v13 = *(void *)__dst;
            unint64_t v14 = *(unsigned int *)&__dst[8] | ((unint64_t)__dst[12] << 32) | ((unint64_t)__dst[13] << 40) | ((unint64_t)v39 << 48);
            swift_unknownObjectRetain();
          }
          else
          {
            sub_25A00E2B0();
            swift_allocObject();
            swift_unknownObjectRetain();
            uint64_t v31 = sub_25A00E260();
            uint64_t v32 = v31;
            if ((unint64_t)v27 >= 0x7FFFFFFF)
            {
              sub_25A00E310();
              uint64_t v13 = swift_allocObject();
              *(void *)(v13 + 16) = 0;
              *(void *)(v13 + 24) = v27;
              unint64_t v14 = v32 | 0x8000000000000000;
            }
            else
            {
              uint64_t v13 = v27 << 32;
              unint64_t v14 = v31 | 0x4000000000000000;
            }
          }
        }
        else
        {
          swift_unknownObjectRetain();
          uint64_t v13 = 0;
          unint64_t v14 = 0xC000000000000000;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
        uint64_t v16 = v23;
        swift_unknownObjectRelease();
LABEL_16:
        char v15 = 0;
        break;
      default:
        uint64_t v37 = 0;
        uint64_t v13 = 0;
        unint64_t v14 = 0;
        char v15 = 0;
        uint64_t v16 = v44;
        break;
    }
    sub_259FAED74((uint64_t)&v48);
    uint64_t v8 = v40;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_259FE1544(0, *(void *)(v8 + 16) + 1, 1);
      uint64_t v8 = v40;
    }
    unint64_t v29 = *(void *)(v8 + 16);
    unint64_t v28 = *(void *)(v8 + 24);
    if (v29 >= v28 >> 1)
    {
      sub_259FE1544(v28 > 1, v29 + 1, 1);
      uint64_t v8 = v40;
    }
    *(void *)(v8 + 16) = v29 + 1;
    uint64_t v30 = v8 + 40 * v29;
    *(void *)(v30 + 32) = v16;
    *(void *)(v30 + 40) = v37;
    *(void *)(v30 + 48) = v13;
    *(void *)(v30 + 56) = v14;
    *(unsigned char *)(v30 + 64) = v15;
    *(unsigned char *)(v30 + 65) = v35;
    v12 += 48;
    --v11;
  }
  while (v11);
  uint64_t result = swift_bridgeObjectRelease();
  a4 = v34;
LABEL_30:
  *a4 = v8;
  return result;
}

void *UnsafeSchematizedData.getArray(matchingFieldPath:)(uint64_t a1, unint64_t a2)
{
  long long v8 = *v2;
  uint64_t v5 = *((void *)v2 + 2);
  uint64_t v4 = *((void *)v2 + 3);
  uint64_t v12 = (void *)MEMORY[0x263F8EE78];
  unint64_t v6 = sub_259FE5498(a1, a2);
  if (v3)
  {
    MEMORY[0x25A2F2980](v3);
    return (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    long long v9 = v8;
    uint64_t v10 = v5;
    uint64_t v11 = v4;
    sub_259FC33B4(&v9, v6, &v12);
    swift_bridgeObjectRelease();
    return v12;
  }
}

__n128 UnsafeSchematizedData.asPublic()@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v15 = MEMORY[0x263F8D3E8];
  uint64_t v16 = MEMORY[0x263F07B80];
  __n128 v13 = *v1;
  __n128 v14 = v1[1];
  uint64_t v3 = __swift_project_boxed_opaque_existential_1(&v14, MEMORY[0x263F8D3E8]);
  uint64_t v4 = *v3;
  if (*v3 && (uint64_t v5 = (unsigned char *)v3[1], v6 = (uint64_t)&v5[-v4], v5 != (unsigned char *)v4))
  {
    if (v6 <= 14)
    {
      uint64_t v7 = sub_259FC3B50((unsigned char *)*v3, v5);
      unint64_t v8 = v11 & 0xFFFFFFFFFFFFFFLL;
      swift_unknownObjectRetain();
    }
    else
    {
      swift_unknownObjectRetain();
      if ((unint64_t)v6 >= 0x7FFFFFFF)
      {
        uint64_t v7 = sub_259FC3C98(v4, (uint64_t)v5);
        unint64_t v8 = v12 | 0x8000000000000000;
      }
      else
      {
        uint64_t v7 = sub_259FC3C14(v4, (uint64_t)v5);
        unint64_t v8 = v10 | 0x4000000000000000;
      }
    }
  }
  else
  {
    swift_unknownObjectRetain();
    uint64_t v7 = 0;
    unint64_t v8 = 0xC000000000000000;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v14);
  __n128 result = v13;
  *a1 = v13;
  a1[1].n128_u64[0] = v7;
  a1[1].n128_u64[1] = v8;
  return result;
}

uint64_t UnsafeSchematizedData.forEachFieldValue(withName:block:)(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  uint64_t v8 = *(void *)(v3 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, a2, ObjectType, v8);
  if (!v4)
  {
    sub_259FBF4D4(result, v11, a3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_259FDAA1C(uint64_t a1, void **a2)
{
  sub_259FAEE8C(a1, (uint64_t)v8);
  uint64_t v3 = *a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v3 = sub_259FC9E34(0, v3[2] + 1, 1, v3);
    *a2 = v3;
  }
  unint64_t v6 = v3[2];
  unint64_t v5 = v3[3];
  if (v6 >= v5 >> 1)
  {
    uint64_t v3 = sub_259FC9E34((void *)(v5 > 1), v6 + 1, 1, v3);
    *a2 = v3;
  }
  v3[2] = v6 + 1;
  return sub_259FC2DB4((uint64_t)v8, (uint64_t)&v3[6 * v6 + 4]);
}

uint64_t UnsafeSchematizedData.value(forOneofName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = v3[1];
  uint64_t v9 = v3[3];
  uint64_t v44 = v3[2];
  swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 72))(a1, a2);
  if (!v4)
  {
    uint64_t v12 = v11;
    uint64_t v34 = a3;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(ObjectType, v12);
    uint64_t v15 = sub_259FE7208(v14, v44, v9, MEMORY[0x263F8EE78]);
    char v17 = v16;
    uint64_t v33 = v9;
    uint64_t v18 = v44;
    swift_bridgeObjectRelease();
    if (v17)
    {
      *(_OWORD *)(v34 + 41) = 0u;
      *(_OWORD *)(v34 + 16) = 0u;
      *(_OWORD *)(v34 + 32) = 0u;
      *(_OWORD *)uint64_t v34 = 0u;
    }
    else
    {
      uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 40))(v15, ObjectType, v12);
      uint64_t v20 = (*(uint64_t (**)(uint64_t))(v8 + 56))(v19);
      uint64_t v22 = v21;
      swift_bridgeObjectRelease();
      uint64_t v23 = swift_getObjectType();
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v22 + 56))(&v36, v23, v22);
      uint64_t v24 = v36;
      uint64_t v25 = v37;
      uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 48))(v23, v22);
      uint64_t v27 = v33 - v18;
      if (!v18) {
        uint64_t v27 = 0;
      }
      uint64_t v36 = v18;
      uint64_t v37 = v33;
      uint64_t v39 = 0;
      uint64_t v40 = 0;
      uint64_t v38 = v27;
      char v41 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B3251A8);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_25A010B90;
      *(void *)(v28 + 32) = v26;
      *(void *)(v28 + 40) = 0;
      *(unsigned char *)(v28 + 48) = 0;
      v35[0] = v28;
      v35[1] = v24;
      v35[2] = v25;
      sub_259FBAA50(v24, v25);
      sub_259FDE504(v35, 0, (uint64_t)v42);
      swift_bridgeObjectRelease();
      sub_259FAD1BC(v24, v25);
      sub_259FAD1BC(v24, v25);
      if (v42[40] == 255)
      {
        sub_259FDC754((uint64_t)v42, qword_26B324DC0);
        uint64_t v29 = (*(uint64_t (**)(uint64_t))(*(void *)(v22 + 8) + 8))(v23);
        uint64_t v31 = v30;
        sub_259FB3304();
        swift_allocError();
        *(void *)uint64_t v32 = v29;
        *(void *)(v32 + 8) = v31;
        *(unsigned char *)(v32 + 16) = 3;
        swift_willThrow();
        swift_unknownObjectRelease();
      }
      else
      {
        sub_259FC2DB4((uint64_t)v42, (uint64_t)v43);
        sub_259FC2DB4((uint64_t)v43, v34 + 16);
        *(void *)uint64_t v34 = v20;
        *(void *)(v34 + 8) = v22;
      }
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::String_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UnsafeSchematizedData.fieldName(forOneofName:)(Swift::String forOneofName)
{
  object = forOneofName._object;
  uint64_t countAndFlagsBits = forOneofName._countAndFlagsBits;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v5 + 72))(countAndFlagsBits, object, ObjectType, v5);
  if (!v2)
  {
    uint64_t v10 = v9;
    uint64_t v11 = swift_getObjectType();
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v11, v10);
    uint64_t v15 = sub_259FE7208(v12, v6, v7, MEMORY[0x263F8EE78]);
    char v17 = v16;
    swift_bridgeObjectRelease();
    if (v17)
    {
      swift_unknownObjectRelease();
      object = 0;
      uint64_t v6 = 0;
    }
    else
    {
      object = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(v15, v11, v10);
      uint64_t v6 = v18;
      swift_unknownObjectRelease();
    }
  }
  uint64_t v13 = (uint64_t)object;
  uint64_t v14 = (void *)v6;
  result.value._object = v14;
  result.value._uint64_t countAndFlagsBits = v13;
  return result;
}

uint64_t UnsafeSchematizedData.filed(forOneofName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v8 = v2[2];
  uint64_t v9 = v2[3];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 72))(a1, a2, ObjectType, v6);
  if (!v3)
  {
    uint64_t v13 = v12;
    uint64_t v14 = swift_getObjectType();
    uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(v14, v13);
    uint64_t v17 = sub_259FE7208(v15, v8, v9, MEMORY[0x263F8EE78]);
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19)
    {
      swift_unknownObjectRelease();
      return 0;
    }
    else
    {
      uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 40))(v17, v14, v13);
      uint64_t v11 = (*(uint64_t (**)(uint64_t))(v6 + 56))(v20);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v11;
}

uint64_t UnsafeSchematizedData.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402F18);
  uint64_t v18 = *(void *)(v3 - 8);
  uint64_t v19 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1[1];
  uint64_t v8 = v1[2];
  uint64_t v7 = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259FBA3F8();
  sub_25A00EFB0();
  unint64_t v23 = sub_259FB08D8(MEMORY[0x263F8EE78]);
  uint64_t v9 = v7 - v8;
  if (!v8) {
    uint64_t v9 = 0;
  }
  v21[0] = v8;
  v21[1] = v7;
  v21[3] = 0;
  void v21[4] = 0;
  v21[2] = v9;
  char v22 = 1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = v20;
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 40))(ObjectType, v6);
  if (v11)
  {
    uint64_t v14 = v18;
    uint64_t v13 = v19;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_259FC233C(v12, v21, (uint64_t *)&v23, (uint64_t)v5);
    swift_bridgeObjectRelease();
    uint64_t v16 = swift_bridgeObjectRetain();
    sub_259FD7B28(v16);
    swift_bridgeObjectRelease_n();
    uint64_t v14 = v18;
    uint64_t v13 = v19;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v5, v13);
}

uint64_t sub_259FDB3CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  sub_259FAEE8C(a1 + 16, (uint64_t)v26);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = (*(uint64_t (**)(void))(*(void *)(v4 + 8) + 8))();
  unint64_t v8 = v7;
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(ObjectType, v4))
  {
    uint64_t v9 = *a2;
    if (*(void *)(*a2 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v10 = sub_259FE120C(v6, v8);
      if (v11)
      {
        uint64_t v12 = *(void **)(*(void *)(v9 + 56) + 8 * v10);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v12 = (void *)MEMORY[0x263F8EE78];
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v12 = (void *)MEMORY[0x263F8EE78];
    }
    sub_259FAEE8C((uint64_t)v26, (uint64_t)&v24);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_259FC9E34(0, v12[2] + 1, 1, v12);
    }
    unint64_t v21 = v12[2];
    unint64_t v20 = v12[3];
    if (v21 >= v20 >> 1) {
      uint64_t v12 = sub_259FC9E34((void *)(v20 > 1), v21 + 1, 1, v12);
    }
    _OWORD v12[2] = v21 + 1;
    sub_259FC2DB4((uint64_t)&v24, (uint64_t)&v12[6 * v21 + 4]);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *a2;
    *a2 = 0x8000000000000000;
    sub_259FFBFCC((uint64_t)v12, v6, v8, isUniquelyReferenced_nonNull_native);
    *a2 = v24;
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v24 = v6;
  unint64_t v25 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402F18);
  sub_259FDC6A4();
  sub_25A00EE10();
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_259FAED74((uint64_t)v26);
  }
  if (qword_26A402CB0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_25A00E940();
  __swift_project_value_buffer(v13, (uint64_t)qword_26A404120);
  swift_bridgeObjectRetain();
  MEMORY[0x25A2F2990](v2);
  swift_bridgeObjectRetain();
  MEMORY[0x25A2F2990](v2);
  uint64_t v14 = sub_25A00E920();
  os_log_type_t v15 = sub_25A00EC00();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v17 = v24;
    *(_DWORD *)uint64_t v16 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_259FDBC7C(v6, v8, &v24);
    sub_25A00EC60();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2080;
    uint64_t v27 = v2;
    MEMORY[0x25A2F2990](v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402CE8);
    uint64_t v18 = sub_25A00E9F0();
    uint64_t v27 = sub_259FDBC7C(v18, v19, &v24);
    sub_25A00EC60();
    swift_bridgeObjectRelease();
    MEMORY[0x25A2F2980](v2);
    MEMORY[0x25A2F2980](v2);
    _os_log_impl(&dword_259FAB000, v14, v15, "Sch: Error encoding %s: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2F2AA0](v17, -1, -1);
    MEMORY[0x25A2F2AA0](v16, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    MEMORY[0x25A2F2980](v2);
    MEMORY[0x25A2F2980](v2);
  }

  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  sub_25A00ED10();
  swift_bridgeObjectRelease();
  uint64_t v24 = 0xD000000000000014;
  unint64_t v25 = 0x800000025A00FC00;
  sub_25A00EA80();
  sub_25A00EA80();
  uint64_t v27 = v2;
  MEMORY[0x25A2F2990](v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402CE8);
  sub_25A00E9F0();
  sub_25A00EA80();
  swift_bridgeObjectRelease();
  uint64_t v24 = v6;
  unint64_t v25 = v8;
  sub_25A00EE00();
  swift_bridgeObjectRelease();
  MEMORY[0x25A2F2980](v2);
  swift_bridgeObjectRelease();
  return sub_259FAED74((uint64_t)v26);
}

uint64_t sub_259FDB8C0(uint64_t *a1)
{
  uint64_t v3 = *a1;
  unint64_t v2 = a1[1];
  uint64_t v12 = *a1;
  unint64_t v13 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402F18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402F20);
  sub_259FDC630();
  uint64_t result = sub_25A00EE10();
  if (v1)
  {
    if (qword_26A402CB0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_25A00E940();
    __swift_project_value_buffer(v5, (uint64_t)qword_26A404120);
    swift_bridgeObjectRetain();
    MEMORY[0x25A2F2990](v1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    MEMORY[0x25A2F2990](v1);
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_25A00E920();
    os_log_type_t v7 = sub_25A00EC00();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315394;
      uint64_t v12 = v9;
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_259FDBC7C(v3, v2, &v12);
      sub_25A00EC60();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v8 + 12) = 2080;
      uint64_t v14 = v1;
      MEMORY[0x25A2F2990](v1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A402CE8);
      uint64_t v10 = sub_25A00E9F0();
      uint64_t v14 = sub_259FDBC7C(v10, v11, &v12);
      sub_25A00EC60();
      swift_bridgeObjectRelease();
      MEMORY[0x25A2F2980](v1);
      MEMORY[0x25A2F2980](v1);
      _os_log_impl(&dword_259FAB000, v6, v7, "Sch: Error encoding %s: %s", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A2F2AA0](v9, -1, -1);
      MEMORY[0x25A2F2AA0](v8, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      MEMORY[0x25A2F2980](v1);
      MEMORY[0x25A2F2980](v1);
    }

    uint64_t v12 = 0;
    unint64_t v13 = 0xE000000000000000;
    sub_25A00ED10();
    swift_bridgeObjectRelease();
    uint64_t v12 = 0xD000000000000014;
    unint64_t v13 = 0x800000025A00FC00;
    sub_25A00EA80();
    sub_25A00EA80();
    uint64_t v14 = v1;
    MEMORY[0x25A2F2990](v1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402CE8);
    sub_25A00E9F0();
    sub_25A00EA80();
    swift_bridgeObjectRelease();
    uint64_t v12 = v3;
    unint64_t v13 = v2;
    swift_bridgeObjectRetain();
    sub_25A00EE00();
    swift_bridgeObjectRelease();
    MEMORY[0x25A2F2980](v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_259FDBC64(void *a1)
{
  return UnsafeSchematizedData.encode(to:)(a1);
}

uint64_t sub_259FDBC7C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_259FDBD50(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_259FDC6F8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_259FDC6F8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_259FDBD50(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_25A00EC70();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_259FDBF0C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_25A00ED30();
  if (!v8)
  {
    sub_25A00EDA0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_25A00EDF0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_259FDBF0C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_259FDBFA4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_259FDC11C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_259FDC11C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_259FDBFA4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_25A00359C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_25A00ED20();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_25A00EDA0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_25A00EA90();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_25A00EDF0();
    __break(1u);
LABEL_14:
    uint64_t result = sub_25A00EDA0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_259FDC11C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402F38);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FDC26C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_259FD8040(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_259FDC288(_OWORD *a1)
{
  return sub_259FDC314(a1);
}

uint64_t sub_259FDC2A0(_OWORD *a1)
{
  uint64_t v2 = *(uint64_t (**)(_OWORD *))(v1 + 24);
  long long v3 = a1[1];
  v5[0] = *a1;
  v5[1] = v3;
  return v2(v5);
}

void *sub_259FDC2DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_259FD8880(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_259FDC2F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_259FD8DC8(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_259FDC314(_OWORD *a1)
{
  uint64_t v2 = *(uint64_t (**)(_OWORD *))(v1 + 16);
  long long v3 = a1[1];
  v5[0] = *a1;
  v5[1] = v3;
  return v2(v5);
}

uint64_t sub_259FDC350(uint64_t a1)
{
  return sub_259FD92FC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void (**)(long long *))(v1 + 64));
}

uint64_t sub_259FDC384@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_259FD949C(a1, v2[3], v2[6], v2[7], a2);
}

void *sub_259FDC3A8@<X0>(_OWORD *a1@<X0>, void *a2@<X8>)
{
  return sub_259FDC4AC(a1, a2);
}

void *sub_259FDC3C0(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v2 = v1[3];
  unint64_t v4 = (void (*)(long long *))v1[4];
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = v6 - v5;
  if (!v5) {
    uint64_t v7 = 0;
  }
  v9[0] = *(void *)(a1 + 16);
  v9[1] = v6;
  v9[3] = 0;
  v9[4] = 0;
  v9[2] = v7;
  char v10 = 1;
  return sub_259FBE68C(v3, v2, v9, v4);
}

uint64_t sub_259FDC414(void *a1)
{
  return sub_259FD96EC(a1, *(void (**)(__n128 *))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_259FDC430(long long *a1)
{
  return sub_259FD9850(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(long long *))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_259FDC450@<X0>(void *a1@<X0>, __n128 *a2@<X8>)
{
  return sub_259FD99B0(a1, v2[3], v2[6], v2[7], a2);
}

uint64_t sub_259FDC474@<X0>(void *a1@<X0>, __n128 *a2@<X8>)
{
  return sub_259FD9EDC(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_259FDC490@<X0>(long long *a1@<X0>, void *a2@<X8>)
{
  return sub_259FDA348(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

void *sub_259FDC4AC@<X0>(_OWORD *a1@<X0>, void *a2@<X8>)
{
  void *(*v5)(uint64_t *__return_ptr, _OWORD *);
  long long v6;
  void *result;
  _OWORD v8[2];
  uint64_t v9;

  uint64_t v5 = *(void *(**)(uint64_t *__return_ptr, _OWORD *))(v2 + 16);
  uint64_t v6 = a1[1];
  v8[0] = *a1;
  v8[1] = v6;
  uint64_t result = v5(&v9, v8);
  if (!v3) {
    *a2 = v9;
  }
  return result;
}

uint64_t destroy for SchematizedData(uint64_t a1)
{
  swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  return sub_259FAE4A8(v2, v3);
}

uint64_t initializeWithCopy for SchematizedData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  unint64_t v4 = *(void *)(a2 + 24);
  swift_unknownObjectRetain();
  sub_259FAE450(v3, v4);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  return a1;
}

void *assignWithCopy for SchematizedData(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  uint64_t v6 = a2[2];
  unint64_t v5 = a2[3];
  sub_259FAE450(v6, v5);
  uint64_t v7 = a1[2];
  unint64_t v8 = a1[3];
  a1[2] = v6;
  a1[3] = v5;
  sub_259FAE4A8(v7, v8);
  return a1;
}

uint64_t assignWithTake for SchematizedData(uint64_t a1, _OWORD *a2)
{
  swift_unknownObjectRelease();
  uint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  long long v6 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v6;
  sub_259FAE4A8(v4, v5);
  return a1;
}

unint64_t sub_259FDC630()
{
  unint64_t result = qword_26A402F28;
  if (!qword_26A402F28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A402F20);
    sub_259FDC6A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A402F28);
  }
  return result;
}

unint64_t sub_259FDC6A4()
{
  unint64_t result = qword_26A402F30;
  if (!qword_26A402F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A402F30);
  }
  return result;
}

uint64_t sub_259FDC6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_259FDC754(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t SchemaStoreDescribing.asPublic()@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  *a2 = v2;
  a2[1] = a1;
  return swift_unknownObjectRetain();
}

uint64_t sub_259FDC7BC(uint64_t a1)
{
  uint64_t v35 = MEMORY[0x263F8EE80];
  uint64_t v41 = MEMORY[0x263F8EE80];
  uint64_t v39 = a1 + 64;
  uint64_t v2 = -1 << *(unsigned char *)(a1 + 32);
  if (-v2 < 64) {
    uint64_t v3 = ~(-1 << -(char)v2);
  }
  else {
    uint64_t v3 = -1;
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v38 = (unint64_t)(63 - v2) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  while (1)
  {
    while (1)
    {
      int64_t v14 = v6;
      if (v4)
      {
        unint64_t v7 = __clz(__rbit64(v4));
        v4 &= v4 - 1;
        unint64_t v8 = v7 | (v6 << 6);
      }
      else
      {
        ++v6;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
          goto LABEL_44;
        }
        if (v6 >= v38) {
          goto LABEL_40;
        }
        unint64_t v15 = *(void *)(v39 + 8 * v6);
        if (!v15)
        {
          int64_t v16 = v14 + 2;
          if (v14 + 2 >= v38) {
            goto LABEL_40;
          }
          unint64_t v15 = *(void *)(v39 + 8 * v16);
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v14 + 3 >= v38) {
              goto LABEL_40;
            }
            unint64_t v15 = *(void *)(v39 + 8 * v16);
            if (!v15)
            {
              int64_t v16 = v14 + 4;
              if (v14 + 4 >= v38) {
                goto LABEL_40;
              }
              unint64_t v15 = *(void *)(v39 + 8 * v16);
              if (!v15)
              {
                int64_t v16 = v14 + 5;
                if (v14 + 5 >= v38)
                {
LABEL_40:
                  uint64_t v31 = v35;
                  sub_259FB2B40();
                  return v31;
                }
                unint64_t v15 = *(void *)(v39 + 8 * v16);
                if (!v15)
                {
                  while (1)
                  {
                    int64_t v6 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      goto LABEL_45;
                    }
                    if (v6 >= v38) {
                      goto LABEL_40;
                    }
                    unint64_t v15 = *(void *)(v39 + 8 * v6);
                    ++v16;
                    if (v15) {
                      goto LABEL_21;
                    }
                  }
                }
              }
            }
          }
          int64_t v6 = v16;
        }
LABEL_21:
        unint64_t v4 = (v15 - 1) & v15;
        unint64_t v8 = __clz(__rbit64(v15)) + (v6 << 6);
      }
      uint64_t v9 = *(void *)(a1 + 56) + 40 * v8;
      char v10 = *(void **)v9;
      uint64_t v11 = *(void *)(v9 + 8);
      uint64_t v13 = *(void *)(v9 + 16);
      unint64_t v12 = *(void *)(v9 + 24);
      if (*(unsigned char *)(v9 + 32) == 1) {
        break;
      }
      sub_259FB2BFC((uint64_t)v10, v11, v13, v12, 0);
      uint64_t result = sub_259FD3D44((uint64_t)v10, v11, v13, v12, 0);
    }
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v8);
    uint64_t v34 = *v17;
    uint64_t v37 = v17[1];
    sub_259FB2BFC((uint64_t)v10, v11, v13, v12, 1);
    sub_259FB2BFC((uint64_t)v10, v11, v13, v12, 1);
    swift_bridgeObjectRetain();
    sub_259FFDA0C(v10, (uint64_t *)v40);
    if (v36)
    {
      swift_bridgeObjectRelease();
      sub_259FD3D44((uint64_t)v10, v11, v13, v12, 1);
      uint64_t v31 = v35;
      swift_release();
      sub_259FB2B40();
      return v31;
    }
    long long v32 = v40[1];
    long long v33 = v40[0];
    uint64_t v18 = v35;
    unint64_t v19 = *(void *)(v35 + 16);
    if (*(void *)(v35 + 24) <= v19)
    {
      sub_259FF9588(v19 + 1, 1);
      uint64_t v18 = v41;
    }
    sub_25A00EF60();
    sub_25A00EA40();
    uint64_t result = sub_25A00EF90();
    uint64_t v20 = v18 + 64;
    uint64_t v21 = -1 << *(unsigned char *)(v18 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v18 + 64 + 8 * (v22 >> 6))) == 0) {
      break;
    }
    unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v18 + 64 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_39:
    *(void *)(v20 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t v29 = (void *)(*(void *)(v18 + 48) + 16 * v24);
    *uint64_t v29 = v34;
    v29[1] = v37;
    uint64_t v30 = (_OWORD *)(*(void *)(v18 + 56) + 32 * v24);
    *uint64_t v30 = v33;
    v30[1] = v32;
    uint64_t v35 = v18;
    ++*(void *)(v18 + 16);
    uint64_t result = sub_259FD3D44((uint64_t)v10, v11, v13, v12, 1);
  }
  char v25 = 0;
  unint64_t v26 = (unint64_t)(63 - v21) >> 6;
  while (++v23 != v26 || (v25 & 1) == 0)
  {
    BOOL v27 = v23 == v26;
    if (v23 == v26) {
      unint64_t v23 = 0;
    }
    v25 |= v27;
    uint64_t v28 = *(void *)(v20 + 8 * v23);
    if (v28 != -1)
    {
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
      goto LABEL_39;
    }
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_259FDCBE4(uint64_t a1)
{
  uint64_t v37 = MEMORY[0x263F8EE80];
  uint64_t v43 = MEMORY[0x263F8EE80];
  uint64_t v39 = a1 + 64;
  uint64_t v2 = -1 << *(unsigned char *)(a1 + 32);
  if (-v2 < 64) {
    uint64_t v3 = ~(-1 << -(char)v2);
  }
  else {
    uint64_t v3 = -1;
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v38 = (unint64_t)(63 - v2) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  while (1)
  {
    while (1)
    {
      int64_t v14 = v6;
      if (v4)
      {
        unint64_t v7 = __clz(__rbit64(v4));
        v4 &= v4 - 1;
        unint64_t v8 = v7 | (v6 << 6);
      }
      else
      {
        ++v6;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
          goto LABEL_44;
        }
        if (v6 >= v38) {
          goto LABEL_40;
        }
        unint64_t v15 = *(void *)(v39 + 8 * v6);
        if (!v15)
        {
          int64_t v16 = v14 + 2;
          if (v14 + 2 >= v38) {
            goto LABEL_40;
          }
          unint64_t v15 = *(void *)(v39 + 8 * v16);
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v14 + 3 >= v38) {
              goto LABEL_40;
            }
            unint64_t v15 = *(void *)(v39 + 8 * v16);
            if (!v15)
            {
              int64_t v16 = v14 + 4;
              if (v14 + 4 >= v38) {
                goto LABEL_40;
              }
              unint64_t v15 = *(void *)(v39 + 8 * v16);
              if (!v15)
              {
                int64_t v16 = v14 + 5;
                if (v14 + 5 >= v38)
                {
LABEL_40:
                  sub_259FB2B40();
                  return v37;
                }
                unint64_t v15 = *(void *)(v39 + 8 * v16);
                if (!v15)
                {
                  while (1)
                  {
                    int64_t v6 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      goto LABEL_45;
                    }
                    if (v6 >= v38) {
                      goto LABEL_40;
                    }
                    unint64_t v15 = *(void *)(v39 + 8 * v6);
                    ++v16;
                    if (v15) {
                      goto LABEL_21;
                    }
                  }
                }
              }
            }
          }
          int64_t v6 = v16;
        }
LABEL_21:
        unint64_t v4 = (v15 - 1) & v15;
        unint64_t v8 = __clz(__rbit64(v15)) + (v6 << 6);
      }
      uint64_t v9 = *(void *)(a1 + 56) + 40 * v8;
      uint64_t v10 = *(void *)v9;
      uint64_t v11 = *(void *)(v9 + 8);
      unint64_t v12 = *(void *)(v9 + 16);
      uint64_t v13 = *(void *)(v9 + 24);
      if (*(unsigned char *)(v9 + 32) == 1) {
        break;
      }
      sub_259FB2C64(v10, v11, v12, v13, 0);
      uint64_t result = sub_259FD3E54(v10, v11, v12, v13, 0);
    }
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v8);
    uint64_t v34 = *v17;
    uint64_t v36 = v17[1];
    sub_259FB2C64(v10, v11, v12, v13, 1);
    sub_259FB2C64(v10, v11, v12, v13, 1);
    swift_bridgeObjectRetain();
    sub_259FE6408(v10, (uint64_t)&off_2707EA728, &v40);
    if (v35)
    {
      swift_bridgeObjectRelease();
      sub_259FD3E54(v10, v11, v12, v13, 1);
      swift_release();
      sub_259FB2B40();
      return v37;
    }
    unint64_t v18 = v40;
    long long v33 = v41;
    uint64_t v32 = v42;
    uint64_t v19 = v37;
    unint64_t v20 = *(void *)(v37 + 16);
    if (*(void *)(v37 + 24) <= v20)
    {
      sub_259FF8F6C(v20 + 1, 1);
      uint64_t v19 = v43;
    }
    uint64_t v37 = v19;
    sub_25A00EF60();
    sub_25A00EA40();
    uint64_t result = sub_25A00EF90();
    uint64_t v21 = v37 + 64;
    uint64_t v22 = -1 << *(unsigned char *)(v37 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v37 + 64 + 8 * (v23 >> 6))) == 0) {
      break;
    }
    unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v37 + 64 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
LABEL_39:
    *(void *)(v21 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    uint64_t v30 = (void *)(*(void *)(v37 + 48) + 16 * v25);
    *uint64_t v30 = v34;
    v30[1] = v36;
    uint64_t v31 = *(void *)(v37 + 56) + 32 * v25;
    *(void *)uint64_t v31 = v18;
    *(_OWORD *)(v31 + 8) = v33;
    *(void *)(v31 + 24) = v32;
    ++*(void *)(v37 + 16);
    uint64_t result = sub_259FD3E54(v10, v11, v12, v13, 1);
  }
  char v26 = 0;
  unint64_t v27 = (unint64_t)(63 - v22) >> 6;
  while (++v24 != v27 || (v26 & 1) == 0)
  {
    BOOL v28 = v24 == v27;
    if (v24 == v27) {
      unint64_t v24 = 0;
    }
    v26 |= v28;
    uint64_t v29 = *(void *)(v21 + 8 * v24);
    if (v29 != -1)
    {
      unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
      goto LABEL_39;
    }
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

PoirotSchematizer::SchemaManifest __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SchemaStoreDescribing.manifestSelf()()
{
  uint64_t v2 = v0;
  uint64_t v3 = v1;
  uint64_t v4 = swift_unknownObjectRetain();
  unint64_t v5 = (void *)sub_259FCE724(v4, v2, v3);
  result.enums._rawValue = v6;
  result.messages._rawValue = v5;
  return result;
}

PoirotSchematizer::SchemaManifest __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SchemaStoreDescribing.manifestEngagementsOnly()()
{
  uint64_t v3 = v0;
  if (object_getClass(v1) != (Class)_TtC17PoirotSchematizer16ProtoSchemaStore || v1 == 0)
  {
    sub_259FB3304();
    swift_allocError();
    *(void *)uint64_t v5 = 0xD000000000000023;
    *(void *)(v5 + 8) = 0x800000025A00FE00;
    *(unsigned char *)(v5 + 16) = 2;
    int64_t v6 = (void *)swift_willThrow();
  }
  else
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v9 = sub_259FDC7BC(v8);
    swift_bridgeObjectRelease();
    if (v2)
    {
      int64_t v6 = (void *)swift_unknownObjectRelease();
    }
    else
    {
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v10 = swift_bridgeObjectRetain();
      uint64_t v11 = sub_259FDCBE4(v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v6 = (void *)swift_unknownObjectRelease();
      *uint64_t v3 = v9;
      v3[1] = v11;
    }
  }
  result.enums._rawValue = v7;
  result.messages._rawValue = v6;
  return result;
}

uint64_t dispatch thunk of SchemaStoreDescribing.allMessageNames.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SchemaStoreDescribing.allEnumNames.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SchemaStoreDescribing.messageSchema(withName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of SchemaStoreDescribing.enumSchema(withName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

unint64_t sub_259FDD23C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402F58);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25A011280;
  *(void *)(inited + 32) = 0xD000000000000021;
  *(void *)(inited + 40) = 0x800000025A00FE30;
  unint64_t v1 = sub_259FB01F0((uint64_t)&unk_2707E97D0);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = (void *)MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_259FAF3C4(0, 0xF000000000000000);
  swift_bridgeObjectRelease();
  *(void *)(inited + 48) = v1;
  *(void *)(inited + 56) = v2;
  *(_OWORD *)(inited + 64) = xmmword_25A011290;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FAF410(0, 0xF000000000000000);
  *(void *)(inited + 80) = 0xD000000000000023;
  *(void *)(inited + 88) = 0x800000025A00F4A0;
  unint64_t v3 = sub_259FB01F0((uint64_t)&unk_2707E8C18);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_259FAF3C4(0, 0xF000000000000000);
  swift_bridgeObjectRelease();
  *(void *)(inited + 96) = v3;
  *(void *)(inited + 104) = v2;
  *(_OWORD *)(inited + 112) = xmmword_25A011290;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FAF410(0, 0xF000000000000000);
  *(void *)(inited + 128) = 0xD00000000000001FLL;
  *(void *)(inited + 136) = 0x800000025A00F4D0;
  unint64_t v4 = sub_259FB01F0((uint64_t)&unk_2707E8DC8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_259FAF3C4(0, 0xF000000000000000);
  swift_bridgeObjectRelease();
  *(void *)(inited + 144) = v4;
  *(void *)(inited + 152) = v2;
  *(_OWORD *)(inited + 160) = xmmword_25A011290;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FAF410(0, 0xF000000000000000);
  *(void *)(inited + 176) = 0xD000000000000023;
  *(void *)(inited + 184) = 0x800000025A00F4F0;
  unint64_t v5 = sub_259FB01F0((uint64_t)&unk_2707E9018);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_259FAF3C4(0, 0xF000000000000000);
  swift_bridgeObjectRelease();
  *(void *)(inited + 192) = v5;
  *(void *)(inited + 200) = v2;
  *(_OWORD *)(inited + 208) = xmmword_25A011290;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FAF410(0, 0xF000000000000000);
  *(void *)(inited + 224) = 0xD000000000000028;
  *(void *)(inited + 232) = 0x800000025A00F5A0;
  unint64_t v6 = sub_259FB01F0((uint64_t)&unk_2707E9128);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_259FAF3C4(0, 0xF000000000000000);
  swift_bridgeObjectRelease();
  *(void *)(inited + 240) = v6;
  *(void *)(inited + 248) = v2;
  *(_OWORD *)(inited + 256) = xmmword_25A011290;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FAF410(0, 0xF000000000000000);
  *(void *)(inited + 272) = 0xD000000000000024;
  *(void *)(inited + 280) = 0x800000025A00F520;
  unint64_t v7 = sub_259FB01F0((uint64_t)&unk_2707E9238);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_259FAF3C4(0, 0xF000000000000000);
  swift_bridgeObjectRelease();
  *(void *)(inited + 288) = v7;
  *(void *)(inited + 296) = v2;
  *(_OWORD *)(inited + 304) = xmmword_25A011290;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FAF410(0, 0xF000000000000000);
  *(void *)(inited + 320) = 0xD000000000000024;
  *(void *)(inited + 328) = 0x800000025A00F570;
  unint64_t v8 = sub_259FB01F0((uint64_t)&unk_2707E94D8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_259FAF3C4(0, 0xF000000000000000);
  swift_bridgeObjectRelease();
  *(void *)(inited + 336) = v8;
  *(void *)(inited + 344) = v2;
  *(_OWORD *)(inited + 352) = xmmword_25A011290;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FAF410(0, 0xF000000000000000);
  *(void *)(inited + 368) = 0xD00000000000001ELL;
  *(void *)(inited + 376) = 0x800000025A00F550;
  unint64_t v9 = sub_259FB01F0((uint64_t)v2);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_259FAF3C4(0, 0xF000000000000000);
  swift_bridgeObjectRelease();
  *(void *)(inited + 384) = v9;
  *(void *)(inited + 392) = v2;
  *(_OWORD *)(inited + 400) = xmmword_25A011290;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FAF410(0, 0xF000000000000000);
  *(void *)(inited + 416) = 0xD00000000000001CLL;
  *(void *)(inited + 424) = 0x800000025A00F680;
  unint64_t v10 = sub_259FB01F0((uint64_t)v2);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_259FAF3C4(0, 0xF000000000000000);
  swift_bridgeObjectRelease();
  *(void *)(inited + 432) = v10;
  *(void *)(inited + 440) = v2;
  *(_OWORD *)(inited + 448) = xmmword_25A011290;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FAF410(0, 0xF000000000000000);
  *(void *)(inited + 464) = 0xD00000000000001CLL;
  *(void *)(inited + 472) = 0x800000025A00F6A0;
  unint64_t v11 = sub_259FB01F0((uint64_t)v2);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_259FAF3C4(0, 0xF000000000000000);
  swift_bridgeObjectRelease();
  *(void *)(inited + 480) = v11;
  *(void *)(inited + 488) = v2;
  *(_OWORD *)(inited + 496) = xmmword_25A011290;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FAF410(0, 0xF000000000000000);
  *(void *)(inited + 512) = 0xD00000000000001BLL;
  *(void *)(inited + 520) = 0x800000025A00F5D0;
  unint64_t v12 = sub_259FB01F0((uint64_t)v2);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_259FAF3C4(0, 0xF000000000000000);
  swift_bridgeObjectRelease();
  *(void *)(inited + 528) = v12;
  *(void *)(inited + 536) = v2;
  *(_OWORD *)(inited + 544) = xmmword_25A011290;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FAF410(0, 0xF000000000000000);
  *(void *)(inited + 560) = 0xD000000000000020;
  *(void *)(inited + 568) = 0x800000025A00F5F0;
  unint64_t v13 = sub_259FB01F0((uint64_t)v2);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_259FAF3C4(0, 0xF000000000000000);
  swift_bridgeObjectRelease();
  *(void *)(inited + 576) = v13;
  *(void *)(inited + 584) = v2;
  *(_OWORD *)(inited + 592) = xmmword_25A011290;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FAF410(0, 0xF000000000000000);
  unint64_t v14 = sub_259FB04CC(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402F60);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_25A010B50;
  *(void *)(v15 + 32) = 0xD00000000000002ALL;
  *(void *)(v15 + 40) = 0x800000025A00F620;
  unint64_t v16 = sub_259FB0620((uint64_t)&unk_2707E9598);
  unint64_t v17 = sub_259FB24E0(v2);
  sub_259FB24C8(v2);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_259FAF3C4(0, 0xF000000000000000);
  swift_bridgeObjectRelease_n();
  sub_259FAF410(0, 0xF000000000000000);
  swift_bridgeObjectRelease();
  *(void *)(v15 + 48) = v16;
  *(_OWORD *)(v15 + 56) = xmmword_25A011290;
  *(void *)(v15 + 72) = v17;
  *(void *)(v15 + 80) = 0xD000000000000029;
  *(void *)(v15 + 88) = 0x800000025A00F650;
  unint64_t v18 = sub_259FB0620((uint64_t)&unk_2707E9600);
  unint64_t v19 = sub_259FB24E0(v2);
  sub_259FB24C8(v2);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_259FAF3C4(0, 0xF000000000000000);
  swift_bridgeObjectRelease_n();
  sub_259FAF410(0, 0xF000000000000000);
  swift_bridgeObjectRelease();
  *(void *)(v15 + 96) = v18;
  *(_OWORD *)(v15 + 104) = xmmword_25A011290;
  *(void *)(v15 + 120) = v19;
  unint64_t result = sub_259FB0380(v15);
  qword_26A402F48 = v14;
  unk_26A402F50 = result;
  return result;
}

uint64_t static Descriptor.manifest.getter@<X0>(void *a1@<X8>)
{
  if (qword_26A402CC0 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_26A402F50;
  *a1 = qword_26A402F48;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double SchemaManifest.init(withDSCData:)@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  SchemaManifest.init(withPoirotDSCData:)(a1, a2, (unint64_t *)&v6);
  if (!v3)
  {
    double result = *(double *)&v6;
    *a3 = v6;
  }
  return result;
}

uint64_t SchemaManifest.init(withPoirotDSCData:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  if (qword_26A402CC0 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_26A402F48;
  uint64_t v7 = unk_26A402F50;
  type metadata accessor for ProtoSchemaStore();
  uint64_t v8 = swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = MEMORY[0x263F8EE78];
  *(void *)(v8 + 16) = sub_259FB0734(MEMORY[0x263F8EE78]);
  *(void *)(v8 + 24) = sub_259FB0754(v9);
  uint64_t v10 = sub_259FD2530(v7);
  swift_beginAccess();
  *(void *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_259FD232C(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  sub_259FD3664(0xD000000000000021, 0x800000025A00FE30);
  if (v3)
  {
    sub_259FAE4A8(a1, a2);
    return swift_release();
  }
  else
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    unint64_t v17 = sub_259FB0380(MEMORY[0x263F8EE78]);
    unint64_t v16 = sub_259FB04CC(v13);
    uint64_t ObjectType = swift_getObjectType();
    MEMORY[0x270FA5388](ObjectType);
    MessageSchemaDescribing.schematizing<A>(data:block:)();
    sub_259FAE4A8(a1, a2);
    swift_release();
    uint64_t result = swift_unknownObjectRelease();
    *a3 = v16;
    a3[1] = v17;
  }
  return result;
}

uint64_t SchemaManifest.init(withSwiftProtobufDSCData:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v7 = sub_25A00E8C0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_25A00E520();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  unint64_t v14 = (char *)v16 - v13;
  uint64_t v17 = 0;
  memset(v16, 0, sizeof(v16));
  sub_259FAE450(a1, a2);
  sub_25A00E8B0();
  sub_259FC8F2C();
  sub_25A00E8F0();
  if (v3) {
    return sub_259FAE4A8(a1, a2);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  sub_25A007D28((uint64_t)v12, (unint64_t *)v16);
  sub_259FAE4A8(a1, a2);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  *a3 = v16[0];
  return result;
}

uint64_t SchemaManifest.toDSCData()()
{
  uint64_t v3 = *v0;
  uint64_t v2 = v0[1];
  v7[0] = v3;
  v7[1] = v2;
  uint64_t v4 = sub_259FD41E4(v7);
  if (!v1)
  {
    sub_25A00A9FC(v4, (uint64_t)&off_2707EABC0, (uint64_t)v7);
    uint64_t v2 = v8;
    unint64_t v6 = v9;
    sub_259FAE450(v8, v9);
    swift_unknownObjectRelease();
    sub_259FAE4A8(v2, v6);
    swift_release();
  }
  return v2;
}

uint64_t SchemaManifest.toDSCDataWithPoirot()()
{
  uint64_t v3 = *v0;
  uint64_t v2 = v0[1];
  v7[0] = v3;
  v7[1] = v2;
  uint64_t v4 = sub_259FD41E4(v7);
  if (!v1)
  {
    sub_25A00A9FC(v4, (uint64_t)&off_2707EABC0, (uint64_t)v7);
    uint64_t v2 = v8;
    unint64_t v6 = v9;
    sub_259FAE450(v8, v9);
    swift_unknownObjectRelease();
    sub_259FAE4A8(v2, v6);
    swift_release();
  }
  return v2;
}

long long *SchemaManifest.toDSCDataWithSwiftProtobuf()()
{
  uint64_t v2 = sub_25A00E520();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = *v0;
  unint64_t v6 = &v8;
  sub_259FB696C();
  if (!v1)
  {
    sub_259FC8F2C();
    unint64_t v6 = (long long *)sub_25A00E900();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v6;
}

uint64_t sub_259FDE1A4(void *a1)
{
  return sub_259FED99C(a1, *(uint64_t **)(v1 + 16), *(void **)(v1 + 24));
}

ValueMetadata *type metadata accessor for Descriptor()
{
  return &type metadata for Descriptor;
}

uint64_t sub_259FDE1D4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for SchemaManifestDSCError(uint64_t a1)
{
  return sub_259FDE1FC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_259FDE1FC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s17PoirotSchematizer22SchemaManifestDSCErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_259FDE1D4(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SchemaManifestDSCError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_259FDE1D4(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_259FDE1FC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SchemaManifestDSCError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_259FDE1FC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SchemaManifestDSCError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SchemaManifestDSCError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_259FDE38C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_259FDE3A4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SchemaManifestDSCError()
{
  return &type metadata for SchemaManifestDSCError;
}

void Reader.read(fieldPathAndType:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(*(void *)a1 + 16))
  {
    uint64_t v3 = *(void *)a1;
    long long v4 = *(_OWORD *)(a1 + 8);
    sub_259FDE504(&v3, 0, a2);
  }
  else
  {
    sub_259FB3304();
    swift_allocError();
    *(void *)uint64_t v2 = 0xD000000000000011;
    *(void *)(v2 + 8) = 0x800000025A00F9A0;
    *(unsigned char *)(v2 + 16) = 5;
    swift_willThrow();
  }
}

void Reader.readScalar(fieldNumber:type:)(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = sub_259FAE178(a1);
  if (!v3)
  {
    if ((v7 & 0x100000000) != 0)
    {
      *(void *)(a3 + 32) = 0;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      *(unsigned char *)(a3 + 40) = -1;
    }
    else
    {
      v9[0] = v5;
      v9[1] = v6;
      char v8 = sub_259FAE500(v7);
      sub_259FAE514(v9, v8, a3);
    }
  }
}

void sub_259FDE504(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  if (*(void *)(*a1 + 16) <= a2) {
    goto LABEL_16;
  }
  if (a2 < 0)
  {
    __break(1u);
LABEL_16:
    sub_25A00EDB0();
    __break(1u);
    return;
  }
  uint64_t v8 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v9 = v5 + 24 * a2;
  unint64_t v12 = *(void *)(v9 + 32);
  uint64_t v11 = v9 + 32;
  unint64_t v10 = v12;
  if (*(unsigned char *)(v11 + 16))
  {
    uint64_t v13 = *(void *)(v11 + 8);
    uint64_t v17 = v5;
    uint64_t v18 = v8;
    uint64_t v19 = v7;
    sub_259FDE664(v10, a2, &v17, v13, (uint64_t)v20);
    if (!v3)
    {
      if (v21)
      {
        if (v21 == 1)
        {
          LODWORD(v14) = v20[0];
          uint64_t v17 = v5;
          uint64_t v18 = v8;
          uint64_t v19 = v7;
          uint64_t v15 = &v17;
          uint64_t v16 = a3;
LABEL_11:
          sub_259FDEA50(v14, v15, a2, v16);
          return;
        }
LABEL_12:
        *(void *)(a3 + 32) = 0;
        *(_OWORD *)a3 = 0u;
        *(_OWORD *)(a3 + 16) = 0u;
        *(unsigned char *)(a3 + 40) = -1;
        return;
      }
      sub_259FC2DB4((uint64_t)v20, a3);
    }
  }
  else
  {
    uint64_t v14 = sub_259FAE178(v10);
    if (!v3)
    {
      if ((v14 & 0x100000000) == 0)
      {
        v20[0] = v5;
        v20[1] = v8;
        long long v20[2] = v7;
        uint64_t v15 = v20;
        uint64_t v16 = a3;
        goto LABEL_11;
      }
      goto LABEL_12;
    }
  }
}

unint64_t sub_259FDE664@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v8 = v5[2];
  uint64_t v7 = v5[3];
  if (v7 >= v8)
  {
LABEL_38:
    *(_OWORD *)(a5 + 25) = 0u;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
    *(unsigned char *)(a5 + 41) = 2;
    return result;
  }
  unint64_t v10 = result;
  unint64_t v11 = a3[2];
  uint64_t v31 = *a3;
  uint64_t v12 = *v5;
  uint64_t v26 = v5[1];
  unint64_t v27 = a3[1];
  uint64_t v13 = v26 - *v5;
  unint64_t v30 = v11 >> 62;
  uint64_t v28 = v11;
  uint64_t v29 = (v27 >= 0xD) + v11 + 0x7FFFFFFFFFFFFFFFLL;
  while (1)
  {
    if (v12)
    {
      uint64_t v14 = v13;
      if (v7 >= v13) {
        goto LABEL_56;
      }
    }
    else
    {
      if ((v7 & 0x8000000000000000) == 0) {
        goto LABEL_56;
      }
      uint64_t v14 = 0;
    }
    uint64_t result = *(unsigned __int8 *)(v12 + v7);
    uint64_t v15 = v7 + 1;
    if (*(char *)(v12 + v7) < 0)
    {
      if (v15 >= v14) {
        goto LABEL_56;
      }
      result &= 0x7Fu;
      unint64_t v16 = 7;
      while (1)
      {
        uint64_t v15 = v7 + 2;
        result |= (unint64_t)(*(unsigned char *)(v12 + 1 + v7) & 0x7F) << v16;
        if ((*(unsigned char *)(v12 + 1 + v7) & 0x80) == 0) {
          break;
        }
        if (v15 < v14)
        {
          ++v7;
          BOOL v18 = v16 >= 0x39;
          v16 += 7;
          if (!v18) {
            continue;
          }
        }
        goto LABEL_56;
      }
      void v5[3] = v15;
      if (result >= 0xFFFFFFFF) {
        goto LABEL_56;
      }
    }
    else
    {
      void v5[3] = v15;
    }
    unsigned int v17 = result & 7;
    BOOL v18 = result < 8 || v17 >= 6;
    if (v18) {
      goto LABEL_56;
    }
    if (v10 != result >> 3) {
      goto LABEL_28;
    }
    if (v17 > 5)
    {
      __break(1u);
      goto LABEL_64;
    }
    if (v17 != 2)
    {
      uint64_t v15 = *(void *)(v31 + 16) - 1;
      LOBYTE(v19) = v41;
      if (v15 == v41) {
        goto LABEL_26;
      }
      sub_259FB3304();
      swift_allocError();
      *(void *)uint64_t v21 = 0xD00000000000004BLL;
      *(void *)(v21 + 8) = 0x800000025A00FEE0;
      *(unsigned char *)(v21 + 16) = 5;
      return swift_willThrow();
    }
    uint64_t v19 = *(void *)(v31 + 16) - 1;
    uint64_t v14 = v41;
    if (v19 == v41)
    {
      LOBYTE(v19) = v30;
      if (v30 != 1)
      {
        if (v30 != 2) {
          break;
        }
        LOBYTE(v19) = v29;
        if (__PAIR128__(v29, v27 - 13) >= 2) {
          break;
        }
      }
    }
LABEL_26:
    if (!a4)
    {
      *(_DWORD *)a5 = result;
      *(unsigned char *)(a5 + 41) = 1;
      return result;
    }
    if (__OFSUB__(a4--, 1))
    {
      __break(1u);
LABEL_50:
      if (v14 < v13)
      {
        v19 &= 0x7Fu;
        unint64_t v23 = 7;
        while (1)
        {
          uint64_t v14 = v15 + 2;
          v19 |= (unint64_t)(*(unsigned char *)(v12 + 1 + v15) & 0x7F) << v23;
          if ((*(unsigned char *)(v12 + 1 + v15) & 0x80) == 0) {
            goto LABEL_44;
          }
          if (v14 < v13)
          {
            ++v15;
            BOOL v24 = v23 > 0x38;
            v23 += 7;
            if (!v24) {
              continue;
            }
          }
          goto LABEL_56;
        }
      }
      goto LABEL_56;
    }
LABEL_28:
    uint64_t result = sub_259FC4550(result);
    if (v6) {
      return result;
    }
    uint64_t v7 = v5[3];
    if (v7 >= v8) {
      goto LABEL_38;
    }
  }
  if (v12)
  {
    if (v15 >= v13) {
      goto LABEL_56;
    }
  }
  else
  {
    if ((v15 & 0x8000000000000000) == 0) {
      goto LABEL_56;
    }
    uint64_t v13 = 0;
  }
  LODWORD(v19) = *(unsigned __int8 *)(v12 + v15);
  uint64_t v14 = v15 + 1;
  if (*(char *)(v12 + v15) < 0) {
    goto LABEL_50;
  }
LABEL_44:
  void v5[3] = v14;
  if ((v19 & 0x80000000) != 0)
  {
LABEL_56:
    sub_259FBA9FC();
    swift_allocError();
    *(void *)uint64_t v25 = 1;
    *(_OWORD *)(v25 + 8) = 0u;
    *(_OWORD *)(v25 + 24) = 0u;
    *(_OWORD *)(v25 + 40) = 0u;
    *(void *)(v25 + 56) = 0;
    *(unsigned char *)(v25 + 64) = 2;
    return swift_willThrow();
  }
  if (__OFADD__(v14, v19))
  {
LABEL_64:
    __break(1u);
    return result;
  }
  uint64_t v35 = v12;
  uint64_t v36 = v26;
  uint64_t v37 = v14 + v19;
  uint64_t v38 = v14;
  uint64_t v39 = 0;
  char v40 = 1;
  v5[4] = v37;
  *((unsigned char *)v5 + 40) = 0;
  if (a4 <= 0)
  {
    uint64_t v22 = v27;
    sub_259FBAA50(v27, v28);
  }
  else
  {
    uint64_t v22 = v27;
    unint64_t v33 = v27;
    uint64_t v34 = v28;
    sub_259FBAA50(v27, v28);
    sub_259FF404C((uint64_t *)&v33, a4);
    if (v6)
    {
      uint64_t result = sub_259FAD1BC(v27, v28);
      goto LABEL_62;
    }
  }
  unint64_t v33 = v22;
  uint64_t v34 = v28;
  sub_259FF3780(&v33, a5);
  uint64_t result = sub_259FAD1BC(v22, v28);
  if (!v6) {
    *(unsigned char *)(a5 + 41) = 0;
  }
LABEL_62:
  void v5[3] = v38;
  return result;
}

void sub_259FDEA50(int a1@<W0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v9 = a2[2];
  if (*(void *)(*a2 + 16) - 1 == a3)
  {
    v16[0] = a2[1];
    v16[1] = v9;
    char v10 = sub_259FAE500(a1);
    sub_259FAE514(v16, v10, a4);
  }
  else if (sub_259FAE500(a1) == 2)
  {
    v13[0] = v8;
    v13[1] = v7;
    uint64_t v13[2] = v9;
    sub_259FDEBF8((unint64_t)v13, a3, (uint64_t)v14);
    if (!v4)
    {
      if (v15 == 255)
      {
        sub_259FAF090((uint64_t)v14);
        *(void *)(a4 + 32) = 0;
        *(_OWORD *)a4 = 0u;
        *(_OWORD *)(a4 + 16) = 0u;
        *(unsigned char *)(a4 + 40) = -1;
      }
      else
      {
        sub_259FC2DB4((uint64_t)v14, (uint64_t)v16);
        sub_259FC2DB4((uint64_t)v16, a4);
      }
    }
  }
  else
  {
    sub_25A00ED10();
    sub_25A00EA80();
    v14[0] = a1;
    sub_25A00ED90();
    sub_259FB3304();
    swift_allocError();
    *(void *)uint64_t v12 = 0;
    *(void *)(v12 + 8) = 0xE000000000000000;
    *(unsigned char *)(v12 + 16) = 5;
    swift_willThrow();
  }
}

unint64_t sub_259FDEBF8@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)result;
  long long v7 = *(_OWORD *)(result + 8);
  uint64_t v8 = *v3;
  uint64_t v9 = v3[1];
  if (*v3)
  {
    uint64_t v10 = v9 - v8;
    uint64_t v11 = v3[3];
    if (v11 >= v9 - v8) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v11 = v3[3];
    if ((v11 & 0x8000000000000000) == 0) {
      goto LABEL_19;
    }
    uint64_t v10 = 0;
  }
  unsigned int v12 = *(unsigned __int8 *)(v8 + v11);
  uint64_t v13 = v11 + 1;
  if (*(char *)(v8 + v11) < 0)
  {
    if (v13 >= v10) {
      goto LABEL_19;
    }
    v12 &= 0x7Fu;
    unint64_t v17 = 7;
    while (1)
    {
      uint64_t v13 = v11 + 2;
      uint64_t result = (unint64_t)(*(unsigned char *)(v8 + 1 + v11) & 0x7F) << v17;
      v12 |= result;
      if ((*(unsigned char *)(v8 + 1 + v11) & 0x80) == 0) {
        break;
      }
      if (v13 < v10)
      {
        ++v11;
        BOOL v18 = v17 > 0x38;
        v17 += 7;
        if (!v18) {
          continue;
        }
      }
      goto LABEL_19;
    }
  }
  void v3[3] = v13;
  if ((v12 & 0x80000000) == 0)
  {
    uint64_t v14 = v13 + v12;
    if (__OFADD__(v13, v12))
    {
      __break(1u);
    }
    else
    {
      uint64_t v24 = v8;
      uint64_t v25 = v9;
      uint64_t v26 = v13 + v12;
      uint64_t v27 = v13;
      uint64_t v28 = 0;
      char v29 = 1;
      uint64_t v20 = v6;
      long long v21 = v7;
      BOOL v15 = __OFADD__(a2, 1);
      uint64_t v16 = a2 + 1;
      if (!v15)
      {
        uint64_t result = (unint64_t)sub_259FDE504(v22, &v20, v16);
        if (v4) {
          return result;
        }
        if (v23 != 255) {
          return sub_259FC2DB4((uint64_t)v22, a3);
        }
        uint64_t result = sub_259FAF090((uint64_t)v22);
        if (*v3)
        {
          if (v14 >= v3[1] - *v3)
          {
LABEL_24:
            *(void *)(a3 + 32) = 0;
            *(_OWORD *)a3 = 0u;
            *(_OWORD *)(a3 + 16) = 0u;
            *(unsigned char *)(a3 + 40) = -1;
            return result;
          }
        }
        else if ((v14 & 0x8000000000000000) == 0)
        {
          goto LABEL_24;
        }
        void v3[3] = v14;
        goto LABEL_24;
      }
    }
    __break(1u);
    return result;
  }
LABEL_19:
  sub_259FBA9FC();
  swift_allocError();
  *(void *)uint64_t v19 = 1;
  *(_OWORD *)(v19 + 8) = 0u;
  *(_OWORD *)(v19 + 24) = 0u;
  *(_OWORD *)(v19 + 40) = 0u;
  *(void *)(v19 + 56) = 0;
  *(unsigned char *)(v19 + 64) = 2;
  return swift_willThrow();
}

__n128 FieldValueImpl.asPublic()@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  swift_getObjectType();
  FieldSchemaDescribing.asPublic()(v3, &v32);
  __n128 v24 = v32;
  sub_259FAEE8C(v1 + 16, (uint64_t)&v28);
  unsigned __int8 v4 = v31;
  switch(v31)
  {
    case 2u:
    case 3u:
    case 5u:
      unint64_t v5 = 0;
      uint64_t v6 = 0;
      unint64_t v7 = 0;
      unsigned __int8 v8 = 0;
      uint64_t v9 = v28;
      break;
    case 6u:
      unint64_t v5 = 0;
      uint64_t v6 = 0;
      unint64_t v7 = 0;
      unsigned __int8 v8 = 0;
      uint64_t v9 = v28;
      break;
    case 7u:
      unint64_t v5 = *((void *)&v28 + 1);
      uint64_t v9 = v28;
      unint64_t v7 = *((void *)&v29 + 1);
      uint64_t v6 = v29;
      unsigned __int8 v8 = v30;
      break;
    case 8u:
      sub_259FAF0F0(&v28, (uint64_t)&v25);
      uint64_t v10 = v26;
      uint64_t v11 = v27;
      __swift_project_boxed_opaque_existential_1(&v25, v26);
      uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
      goto LABEL_8;
    case 9u:
      sub_259FAF0F0(&v28, (uint64_t)&v25);
      uint64_t v14 = v26;
      uint64_t v15 = v27;
      __swift_project_boxed_opaque_existential_1(&v25, v26);
      uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
LABEL_8:
      uint64_t v9 = v12;
      unint64_t v5 = v13;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
      uint64_t v6 = 0;
      unint64_t v7 = 0;
      goto LABEL_13;
    case 0xAu:
      unint64_t v5 = *((void *)&v28 + 1);
      uint64_t v9 = v28;
      uint64_t v26 = MEMORY[0x263F8D3E8];
      uint64_t v27 = MEMORY[0x263F07B80];
      long long v25 = v29;
      uint64_t v16 = __swift_project_boxed_opaque_existential_1(&v25, MEMORY[0x263F8D3E8]);
      uint64_t v17 = *v16;
      if (*v16 && (BOOL v18 = (unsigned char *)v16[1], v19 = (uint64_t)&v18[-v17], v18 != (unsigned char *)v17))
      {
        if (v19 <= 14)
        {
          uint64_t v6 = sub_259FC3B50((unsigned char *)*v16, v18);
          unint64_t v7 = v22 & 0xFFFFFFFFFFFFFFLL;
          swift_unknownObjectRetain();
        }
        else
        {
          swift_unknownObjectRetain();
          if ((unint64_t)v19 >= 0x7FFFFFFF)
          {
            uint64_t v6 = sub_259FC3C98(v17, (uint64_t)v18);
            unint64_t v7 = v23 | 0x8000000000000000;
          }
          else
          {
            uint64_t v6 = sub_259FC3C14(v17, (uint64_t)v18);
            unint64_t v7 = v21 | 0x4000000000000000;
          }
        }
      }
      else
      {
        swift_unknownObjectRetain();
        uint64_t v6 = 0;
        unint64_t v7 = 0xC000000000000000;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
      swift_unknownObjectRelease();
LABEL_13:
      unsigned __int8 v8 = 0;
      break;
    default:
      unint64_t v5 = 0;
      uint64_t v6 = 0;
      unint64_t v7 = 0;
      unsigned __int8 v8 = 0;
      uint64_t v9 = v28;
      break;
  }
  __n128 result = v24;
  *a1 = v24;
  a1[1].n128_u64[0] = v9;
  a1[1].n128_u64[1] = v5;
  a1[2].n128_u64[0] = v6;
  a1[2].n128_u64[1] = v7;
  a1[3].n128_u8[0] = v8;
  a1[3].n128_u8[1] = v4;
  return result;
}

uint64_t FieldValue.fieldSchema.getter@<X0>(_OWORD *a1@<X8>)
{
  *a1 = *v1;
  return swift_unknownObjectRetain();
}

uint64_t FieldValue.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  char v6 = *(unsigned char *)(v1 + 48);
  *(unsigned char *)(a1 + 32) = v6;
  char v7 = *(unsigned char *)(v1 + 49);
  *(unsigned char *)(a1 + 33) = v7;
  return sub_259FDF0B0(v2, v3, v4, v5, v6, v7);
}

uint64_t FieldValueImpl.fieldSchema.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t FieldValueImpl.value.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_259FAEE8C(v1 + 16, a1);
}

uint64_t sub_259FDF0B0(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  switch(a6)
  {
    case 7:
      swift_unknownObjectRetain();
      __n128 result = sub_259FB94E4(a3, a4, a5 & 1);
      break;
    case 8:
      __n128 result = swift_bridgeObjectRetain();
      break;
    case 9:
      goto LABEL_9;
    case 10:
      swift_unknownObjectRetain();
      __n128 result = a3;
      a2 = a4;
LABEL_9:
      __n128 result = sub_259FAE450(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for FieldValue(uint64_t a1)
{
  swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  char v6 = *(unsigned char *)(a1 + 49);
  char v7 = *(unsigned char *)(a1 + 48);
  return sub_259FB671C(v2, v3, v4, v5, v7, v6);
}

uint64_t initializeWithCopy for FieldValue(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  unint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  char v7 = *(unsigned char *)(a2 + 49);
  char v8 = *(unsigned char *)(a2 + 48);
  swift_unknownObjectRetain();
  sub_259FDF0B0(v3, v4, v5, v6, v8, v7);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 49) = v7;
  return a1;
}

uint64_t assignWithCopy for FieldValue(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = v2[2];
  unint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  char v9 = *((unsigned char *)v2 + 49);
  LOBYTE(v2) = *((unsigned char *)v2 + 48);
  sub_259FDF0B0(v5, v6, v7, v8, (char)v2, v9);
  uint64_t v10 = *(void *)(a1 + 16);
  unint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  char v14 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = (_BYTE)v2;
  char v15 = *(unsigned char *)(a1 + 49);
  *(unsigned char *)(a1 + 49) = v9;
  sub_259FB671C(v10, v11, v12, v13, v14, v15);
  return a1;
}

__n128 __swift_memcpy50_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FieldValue(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  __int16 v4 = *(_WORD *)(a2 + 48);
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  char v10 = *(unsigned char *)(a1 + 49);
  char v11 = *(unsigned char *)(a1 + 48);
  *(_WORD *)(a1 + 48) = v4;
  sub_259FB671C(v5, v6, v7, v8, v11, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for FieldValue(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 50)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FieldValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 50) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 50) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FieldValue()
{
  return &type metadata for FieldValue;
}

uint64_t destroy for FieldValueImpl(uint64_t a1)
{
  swift_unknownObjectRelease();
  uint64_t result = a1 + 16;
  switch(*(unsigned char *)(a1 + 56))
  {
    case 7:
      swift_unknownObjectRelease();
      uint64_t v3 = *(void *)(a1 + 32);
      uint64_t v4 = *(void *)(a1 + 40);
      char v5 = *(unsigned char *)(a1 + 48);
      uint64_t result = sub_259FB680C(v3, v4, v5);
      break;
    case 8:
    case 9:
      uint64_t result = __swift_destroy_boxed_opaque_existential_1(result);
      break;
    case 0xA:
      uint64_t result = swift_unknownObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for FieldValueImpl(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = (_OWORD *)(a1 + 16);
  char v5 = (_OWORD *)(a2 + 16);
  int v6 = *(unsigned __int8 *)(a2 + 56);
  swift_unknownObjectRetain();
  switch(v6)
  {
    case 7:
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      uint64_t v7 = *(void *)(a2 + 32);
      uint64_t v8 = *(void *)(a2 + 40);
      char v9 = *(unsigned char *)(a2 + 48);
      swift_unknownObjectRetain();
      sub_259FB94E4(v7, v8, v9);
      *(void *)(a1 + 32) = v7;
      *(void *)(a1 + 40) = v8;
      *(unsigned char *)(a1 + 48) = v9;
      *(unsigned char *)(a1 + 56) = 7;
      break;
    case 8:
      long long v11 = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 40) = v11;
      (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v4, v5);
      *(unsigned char *)(a1 + 56) = 8;
      break;
    case 9:
      long long v12 = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 40) = v12;
      (**(void (***)(_OWORD *, _OWORD *))(v12 - 8))(v4, v5);
      *(unsigned char *)(a1 + 56) = 9;
      break;
    case 10:
      long long v13 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(a1 + 32) = v13;
      *(unsigned char *)(a1 + 56) = 10;
      swift_unknownObjectRetain();
      break;
    default:
      long long v10 = v5[1];
      *uint64_t v4 = *v5;
      v4[1] = v10;
      *(_OWORD *)((char *)v4 + 25) = *(_OWORD *)((char *)v5 + 25);
      break;
  }
  return a1;
}

uint64_t assignWithCopy for FieldValueImpl(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = v4;
  if (a1 != a2)
  {
    sub_259FAED74(a1 + 16);
    switch(*(unsigned char *)(a2 + 56))
    {
      case 7:
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        uint64_t v5 = *(void *)(a2 + 32);
        uint64_t v6 = *(void *)(a2 + 40);
        char v7 = *(unsigned char *)(a2 + 48);
        swift_unknownObjectRetain();
        sub_259FB94E4(v5, v6, v7);
        *(void *)(a1 + 32) = v5;
        *(void *)(a1 + 40) = v6;
        *(unsigned char *)(a1 + 48) = v7;
        *(unsigned char *)(a1 + 56) = 7;
        break;
      case 8:
        uint64_t v10 = *(void *)(a2 + 40);
        *(void *)(a1 + 40) = v10;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 16, a2 + 16);
        *(unsigned char *)(a1 + 56) = 8;
        break;
      case 9:
        uint64_t v11 = *(void *)(a2 + 40);
        *(void *)(a1 + 40) = v11;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 16, a2 + 16);
        *(unsigned char *)(a1 + 56) = 9;
        break;
      case 0xA:
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(unsigned char *)(a1 + 56) = 10;
        swift_unknownObjectRetain();
        break;
      default:
        long long v8 = *(_OWORD *)(a2 + 16);
        long long v9 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
        *(_OWORD *)(a1 + 16) = v8;
        *(_OWORD *)(a1 + 32) = v9;
        break;
    }
  }
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FieldValueImpl(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = v4;
  if (a1 != a2)
  {
    sub_259FAED74(a1 + 16);
    long long v5 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v5;
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FieldValueImpl(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FieldValueImpl(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FieldValueImpl()
{
  return &type metadata for FieldValueImpl;
}

uint64_t SchematizedDataComposer.compose()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v32 = *(void *)(v1 + 16);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 48);
  swift_bridgeObjectRetain();
  uint64_t v7 = v6(ObjectType, v4);
  if (!v2)
  {
    uint64_t v8 = v7;
    uint64_t v25 = a1;
    int64_t v9 = *(void *)(v7 + 16);
    if (v9)
    {
      *(void *)&long long v28 = MEMORY[0x263F8EE78];
      sub_259FE1500(0, v9, 0);
      uint64_t v10 = 0;
      uint64_t v11 = v28;
      do
      {
        long long v12 = *(_OWORD *)(v8 + 16 * v10 + 32);
        *(void *)&long long v28 = v11;
        unint64_t v13 = *(void *)(v11 + 16);
        unint64_t v14 = *(void *)(v11 + 24);
        long long v26 = v12;
        swift_unknownObjectRetain();
        if (v13 >= v14 >> 1)
        {
          sub_259FE1500(v14 > 1, v13 + 1, 1);
          uint64_t v11 = v28;
        }
        ++v10;
        *(void *)(v11 + 16) = v13 + 1;
        *(_OWORD *)(v11 + 16 * v13 + 32) = v26;
      }
      while (v9 != v10);
      uint64_t v15 = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = swift_bridgeObjectRelease();
      uint64_t v11 = MEMORY[0x263F8EE78];
    }
    uint64_t v31 = v11;
    MEMORY[0x270FA5388](v15);
    (*(void (**)(long long *__return_ptr, uint64_t (*)@<X0>(uint64_t@<X1>, uint64_t@<X8>)))(v4 + 96))(&v28, sub_259FE1520);
    uint64_t v17 = v29;
    unint64_t v16 = v30;
    uint64_t v18 = v32;
    if (*(void *)(v32 + 16))
    {
      *(void *)&long long v28 = 0;
      *((void *)&v28 + 1) = 0xE000000000000000;
      sub_25A00ED10();
      swift_bridgeObjectRelease();
      *(void *)&long long v28 = 0x3A6567617373654DLL;
      *((void *)&v28 + 1) = 0xE900000000000020;
      MessageSchemaDescribing.asPublic()(v4, v27);
      uint64_t v19 = v27[1];
      uint64_t v20 = swift_getObjectType();
      (*(void (**)(uint64_t))(*(void *)(v19 + 8) + 8))(v20);
      swift_unknownObjectRelease();
      sub_25A00EA80();
      swift_bridgeObjectRelease();
      sub_25A00EA80();
      swift_bridgeObjectRetain_n();
      uint64_t v21 = sub_259FE35E8(v18);
      swift_bridgeObjectRelease();
      v27[0] = (uint64_t)v21;
      sub_259FE3578(v27);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A402ED8);
      sub_259FD5EF0();
      sub_25A00E970();
      swift_release();
      sub_25A00EA80();
      swift_bridgeObjectRelease();
      long long v22 = v28;
      sub_259FE36D0();
      swift_allocError();
      *(_OWORD *)uint64_t v23 = v22;
      *(unsigned char *)(v23 + 16) = 0;
      swift_willThrow();
      swift_unknownObjectRelease();
      sub_259FAE4A8(v17, v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      *(_OWORD *)uint64_t v25 = v28;
      *(void *)(v25 + 16) = v17;
      *(void *)(v25 + 24) = v16;
      swift_bridgeObjectRelease();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t SchematizedDataComposer.messageSchema.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  swift_getObjectType();
  return MessageSchemaDescribing.asPublic()(v3, a1);
}

__n128 SchematizedDataComposer.init(messageSchema:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v4 = sub_25A00E950();
  __n128 result = *a1;
  *a2 = *a1;
  a2[1].n128_u64[0] = v4;
  return result;
}

uint64_t SchematizedDataComposer.subscript.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v3 + 16);
  if (!*(void *)(v6 + 16)) {
    goto LABEL_6;
  }
  uint64_t v8 = result;
  uint64_t v9 = *(void *)(v4 + 8);
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_259FE120C(v8, a2);
  if ((v11 & 1) == 0)
  {
    __n128 result = swift_bridgeObjectRelease();
LABEL_6:
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_WORD *)(a3 + 32) = -256;
    return result;
  }
  uint64_t v12 = *(void *)(v6 + 56) + 40 * v10;
  uint64_t v13 = *(void *)v12;
  unint64_t v14 = *(void *)(v12 + 8);
  uint64_t v15 = *(void *)(v12 + 16);
  uint64_t v16 = *(void *)(v12 + 24);
  int v17 = *(__int16 *)(v12 + 32);
  sub_259FE3724(*(void *)v12, v14, v15, v16, *(_WORD *)(v12 + 32));
  __n128 result = swift_bridgeObjectRelease();
  if (v17 < 0)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_25A00ED10();
    swift_bridgeObjectRelease();
    long long v20[2] = 0x3A6567617373654DLL;
    v20[3] = 0xE900000000000020;
    swift_getObjectType();
    MessageSchemaDescribing.asPublic()(v9, v20);
    uint64_t v18 = v20[1];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t))(*(void *)(v18 + 8) + 8))(ObjectType);
    swift_unknownObjectRelease();
    sub_25A00EA80();
    swift_bridgeObjectRelease();
    sub_25A00EA80();
    sub_25A00EA80();
    sub_25A00EA80();
    __n128 result = sub_25A00EDB0();
    __break(1u);
  }
  else
  {
    *(void *)a3 = v13;
    *(void *)(a3 + 8) = v14;
    *(void *)(a3 + 16) = v15;
    *(void *)(a3 + 24) = v16;
    *(_WORD *)(a3 + 32) = v17;
  }
  return result;
}

double sub_259FDFFEC@<D0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  SchematizedDataComposer.subscript.getter(v3, v4, (uint64_t)v8);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  __int16 v5 = v9;
  double result = *(double *)v8;
  long long v7 = v8[1];
  *(_OWORD *)a2 = v8[0];
  *(_OWORD *)(a2 + 16) = v7;
  *(_WORD *)(a2 + 32) = v5;
  return result;
}

uint64_t sub_259FE0080(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = a3[1];
  uint64_t v5 = *(void *)a1;
  unint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  unsigned int v9 = *(unsigned __int16 *)(a1 + 32);
  if (v9 >> 8 <= 0xFE) {
    uint64_t v10 = *(void *)a1;
  }
  else {
    uint64_t v10 = 0;
  }
  if (v9 >> 8 <= 0xFE) {
    uint64_t v11 = *(void *)(a1 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v9 >> 8 <= 0xFE) {
    uint64_t v12 = *(void *)(a1 + 16);
  }
  else {
    uint64_t v12 = 0;
  }
  if (v9 >> 8 <= 0xFE) {
    uint64_t v13 = *(void *)(a1 + 24);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v9 >> 8 <= 0xFE) {
    __int16 v14 = *(_WORD *)(a1 + 32);
  }
  else {
    __int16 v14 = -4096;
  }
  v16[0] = v10;
  v16[1] = v11;
  _OWORD v16[2] = v12;
  v16[3] = v13;
  __int16 v17 = v14;
  swift_bridgeObjectRetain();
  sub_259FE3734(v5, v6, v7, v8, v9);
  return sub_259FF4230((uint64_t)v16, v3, v4);
}

uint64_t SchematizedDataComposer.subscript.setter(long long *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3 = *((unsigned __int16 *)a1 + 16);
  if (v3 >> 8 <= 0xFE)
  {
    long long v4 = *a1;
    long long v5 = a1[1];
  }
  else
  {
    long long v4 = 0uLL;
    LOWORD(v3) = -4096;
    long long v5 = 0uLL;
  }
  v7[0] = v4;
  v7[1] = v5;
  __int16 v8 = v3;
  return sub_259FF4230((uint64_t)v7, a2, a3);
}

void (*SchematizedDataComposer.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(void **a1, char a2)
{
  uint64_t v7 = malloc(0x90uLL);
  *a1 = v7;
  v7[16] = a3;
  v7[17] = v3;
  v7[15] = a2;
  SchematizedDataComposer.subscript.getter(a2, a3, (uint64_t)(v7 + 10));
  return sub_259FE0220;
}

void sub_259FE0220(void **a1, char a2)
{
  uint64_t v2 = (unsigned __int16 *)*a1;
  if (a2)
  {
    uint64_t v4 = *((void *)v2 + 10);
    unint64_t v3 = *((void *)v2 + 11);
    uint64_t v5 = *((void *)v2 + 12);
    uint64_t v6 = *((void *)v2 + 13);
    unsigned int v7 = v2[56];
    if (v7 >> 8 <= 0xFE)
    {
      uint64_t v8 = *((void *)v2 + 10);
      uint64_t v9 = *((void *)v2 + 11);
      uint64_t v10 = *((void *)v2 + 12);
      uint64_t v11 = *((void *)v2 + 13);
      __int16 v12 = v2[56];
    }
    else
    {
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      __int16 v12 = -4096;
    }
    uint64_t v16 = *((void *)v2 + 16);
    uint64_t v17 = *((void *)v2 + 15);
    *(void *)uint64_t v2 = v8;
    *((void *)v2 + 1) = v9;
    *((void *)v2 + 2) = v10;
    *((void *)v2 + 3) = v11;
    v2[16] = v12;
    swift_bridgeObjectRetain();
    sub_259FE3734(v4, v3, v5, v6, v7);
    sub_259FF4230((uint64_t)v2, v17, v16);
    sub_259FE3748(*((void *)v2 + 10), *((void *)v2 + 11), *((void *)v2 + 12), *((void *)v2 + 13), v2[56]);
  }
  else
  {
    unsigned int v13 = v2[56];
    if (v13 >> 8 <= 0xFE)
    {
      long long v14 = *((_OWORD *)v2 + 5);
      long long v15 = *((_OWORD *)v2 + 6);
    }
    else
    {
      long long v14 = 0uLL;
      LOWORD(v13) = -4096;
      long long v15 = 0uLL;
    }
    uint64_t v18 = *((void *)v2 + 16);
    uint64_t v19 = *((void *)v2 + 15);
    *(_OWORD *)(v2 + 20) = v14;
    *(_OWORD *)(v2 + 28) = v15;
    v2[36] = v13;
    swift_bridgeObjectRetain();
    sub_259FF4230((uint64_t)(v2 + 20), v19, v18);
  }
  free(v2);
}

uint64_t SchematizedDataComposer.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 + 16);
  if (!*(void *)(v4 + 16)) {
    return 0;
  }
  uint64_t v7 = *(void *)(v3 + 8);
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_259FE120C(a1, a2);
  if ((v9 & 1) == 0)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v10 = *(void *)(v4 + 56) + 40 * v8;
  uint64_t v11 = *(void *)v10;
  int v12 = *(__int16 *)(v10 + 32);
  sub_259FE3724(*(void *)v10, *(void *)(v10 + 8), *(void *)(v10 + 16), *(void *)(v10 + 24), *(_WORD *)(v10 + 32));
  swift_bridgeObjectRelease();
  if ((v12 & 0x80000000) == 0)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_25A00ED10();
    swift_bridgeObjectRelease();
    _OWORD v16[2] = 0x3A6567617373654DLL;
    v16[3] = 0xE900000000000020;
    swift_getObjectType();
    MessageSchemaDescribing.asPublic()(v7, v16);
    uint64_t v13 = v16[1];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t))(*(void *)(v13 + 8) + 8))(ObjectType);
    swift_unknownObjectRelease();
    sub_25A00EA80();
    swift_bridgeObjectRelease();
    sub_25A00EA80();
    sub_25A00EA80();
    sub_25A00EA80();
    sub_25A00EDB0();
    __break(1u);
    goto LABEL_5;
  }
  return v11;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  unsigned __int8 *i;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  uint64_t result;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;

  uint64_t v5 = *(void *)(v2 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = SchematizedDataComposer.subscript.getter(a1, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (!v6) {
    return 0;
  }
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  uint64_t v20 = v5;
  uint64_t v21 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_259FE1564(0, v7, 0);
  unint64_t v8 = v21;
  for (unint64_t i = (unsigned __int8 *)(v6 + 65); ; i += 40)
  {
    uint64_t v10 = *(void *)(i - 33);
    uint64_t v11 = *(void *)(i - 25);
    int v12 = *(void *)(i - 17);
    uint64_t v13 = *(void *)(i - 9);
    long long v14 = *i;
    if (v14 != 10) {
      break;
    }
    swift_unknownObjectRetain();
    sub_259FAE450(v12, v13);
    uint64_t v16 = *(void *)(v21 + 16);
    long long v15 = *(void *)(v21 + 24);
    if (v16 >= v15 >> 1) {
      sub_259FE1564(v15 > 1, v16 + 1, 1);
    }
    *(void *)(v21 + 16) = v16 + 1;
    uint64_t v17 = (void *)(v21 + 32 * v16);
    v17[4] = v10;
    v17[5] = v11;
    v17[6] = v12;
    v17[7] = v13;
    if (!--v7)
    {
      swift_bridgeObjectRelease_n();
      return v8;
    }
  }
  sub_259FDF0B0(v10, v11, v12, v13, *(i - 1), v14);
  sub_25A00ED10();
  swift_bridgeObjectRelease();
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(v20 + 8) + 8))(ObjectType);
  sub_25A00EA80();
  swift_bridgeObjectRelease();
  sub_25A00EA80();
  sub_25A00EA80();
  double result = sub_25A00EDB0();
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  uint64_t ObjectType;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, unint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  uint64_t v5 = *(void *)(v2 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = SchematizedDataComposer.subscript.getter(a1, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (!v6) {
    return 0;
  }
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  long long v26 = v5;
  unint64_t v30 = MEMORY[0x263F8EE78];
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_259FE1460(0, v7, 0);
  unint64_t v8 = v30;
  char v9 = (unsigned __int8 *)(v6 + 65);
  uint64_t v10 = 17;
  while (1)
  {
    uint64_t v11 = *(void *)(v9 - 33);
    int v12 = *(void *)(v9 - 25);
    uint64_t v13 = *(void *)(v9 - 17);
    long long v14 = *(void *)(v9 - 9);
    long long v15 = *(v9 - 1);
    uint64_t v16 = *v9;
    if (v16 != 7) {
      break;
    }
    if (v10 != 17 && v10 != 12) {
      goto LABEL_22;
    }
    if (*(v9 - 1))
    {
      uint64_t v29 = v8;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t))(v12 + 48);
      long long v28 = ObjectType;
      sub_259FDF0B0(v11, v12, v13, v14, v15, 7);
      swift_unknownObjectRetain();
      sub_259FB94E4(v13, v14, 1);
      uint64_t v18 = v27(v13, v28, v12);
      uint64_t v20 = v19;
      sub_259FB671C(v11, v12, v13, v14, v15, 7);
      sub_259FB671C(v11, v12, v13, v14, v15, 7);
      uint64_t v10 = 12;
      uint64_t v11 = v18;
      int v12 = v20;
      unint64_t v8 = v29;
    }
    else
    {
      sub_259FB94E4(*(void *)(v9 - 17), *(void *)(v9 - 9), 0);
      uint64_t v10 = 12;
      uint64_t v11 = v13;
      int v12 = v14;
    }
LABEL_14:
    long long v22 = *(void *)(v8 + 16);
    uint64_t v21 = *(void *)(v8 + 24);
    if (v22 >= v21 >> 1) {
      sub_259FE1460(v21 > 1, v22 + 1, 1);
    }
    v9 += 40;
    *(void *)(v8 + 16) = v22 + 1;
    uint64_t v23 = v8 + 16 * v22;
    *(void *)(v23 + 32) = v11;
    *(void *)(v23 + 40) = v12;
    if (!--v7)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease_n();
      return v8;
    }
  }
  if (v16 != 8) {
    goto LABEL_23;
  }
  if (v10 == 17 || v10 == 8)
  {
    uint64_t v10 = 8;
    sub_259FDF0B0(*(void *)(v9 - 33), *(void *)(v9 - 25), *(void *)(v9 - 17), *(void *)(v9 - 9), *(v9 - 1), 8);
    goto LABEL_14;
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  sub_259FDF0B0(v11, v12, v13, v14, v15, v16);
  sub_25A00ED10();
  swift_bridgeObjectRelease();
  uint64_t v25 = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(v26 + 8) + 8))(v25);
  sub_25A00EA80();
  swift_bridgeObjectRelease();
  sub_25A00EA80();
  sub_25A00EA80();
  double result = sub_25A00EDB0();
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t ObjectType;
  uint64_t v18;

  uint64_t v5 = *(void *)(v2 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = SchematizedDataComposer.subscript.getter(a1, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (!v6) {
    return 0;
  }
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  uint64_t v18 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_259FE1624(0, v7, 0);
  unint64_t v8 = v18;
  char v9 = (unsigned __int8 *)(v6 + 65);
  while (1)
  {
    uint64_t v10 = *(void *)(v9 - 33);
    uint64_t v11 = *(void *)(v9 - 25);
    int v12 = *v9;
    if (v12 != 9) {
      break;
    }
    sub_259FAE450(*(void *)(v9 - 33), *(void *)(v9 - 25));
    long long v14 = *(void *)(v18 + 16);
    uint64_t v13 = *(void *)(v18 + 24);
    if (v14 >= v13 >> 1) {
      sub_259FE1624(v13 > 1, v14 + 1, 1);
    }
    v9 += 40;
    *(void *)(v18 + 16) = v14 + 1;
    long long v15 = v18 + 16 * v14;
    *(void *)(v15 + 32) = v10;
    *(void *)(v15 + 40) = v11;
    if (!--v7)
    {
      swift_bridgeObjectRelease_n();
      return v8;
    }
  }
  sub_259FDF0B0(v10, v11, *(void *)(v9 - 17), *(void *)(v9 - 9), *(v9 - 1), v12);
  sub_25A00ED10();
  swift_bridgeObjectRelease();
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(v5 + 8) + 8))(ObjectType);
  sub_25A00EA80();
  swift_bridgeObjectRelease();
  sub_25A00EA80();
  sub_25A00EA80();
  double result = sub_25A00EDB0();
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t ObjectType;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t, unint64_t);
  uint64_t v39;
  uint64_t v40;

  uint64_t v5 = *(void *)(v2 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = SchematizedDataComposer.subscript.getter(a1, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (!v6) {
    return 0;
  }
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v37 = v5;
    char v40 = MEMORY[0x263F8EE78];
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259FE1644(0, v7, 0);
    unint64_t v8 = v40;
    char v9 = (char *)(v6 + 65);
    while (2)
    {
      uint64_t v10 = *(void *)(v9 - 33);
      uint64_t v11 = *(void *)(v9 - 25);
      int v12 = *(void *)(v9 - 17);
      uint64_t v13 = *(void *)(v9 - 9);
      long long v14 = *(v9 - 1);
      switch(*v9)
      {
        case 0:
          long long v15 = (int)v10;
          uint64_t v16 = *(void *)(v9 - 33);
          uint64_t v17 = *(void *)(v9 - 25);
          uint64_t v18 = *(void *)(v9 - 17);
          uint64_t v19 = *(void *)(v9 - 9);
          uint64_t v20 = *(v9 - 1);
          uint64_t v21 = 0;
          goto LABEL_13;
        case 1:
          long long v15 = *(void *)(v9 - 33);
          uint64_t v16 = *(void *)(v9 - 33);
          uint64_t v17 = *(void *)(v9 - 25);
          uint64_t v18 = *(void *)(v9 - 17);
          uint64_t v19 = *(void *)(v9 - 9);
          uint64_t v20 = *(v9 - 1);
          uint64_t v21 = 1;
          goto LABEL_13;
        case 2:
          long long v22 = *(void *)(v9 - 33);
          uint64_t v23 = *(void *)(v9 - 25);
          __n128 v24 = *(void *)(v9 - 17);
          uint64_t v25 = *(void *)(v9 - 9);
          long long v26 = *(v9 - 1);
          uint64_t v27 = 2;
          goto LABEL_9;
        case 3:
          long long v22 = *(void *)(v9 - 33);
          uint64_t v23 = *(void *)(v9 - 25);
          __n128 v24 = *(void *)(v9 - 17);
          uint64_t v25 = *(void *)(v9 - 9);
          long long v26 = *(v9 - 1);
          uint64_t v27 = 3;
LABEL_9:
          sub_259FDF0B0(v22, v23, v24, v25, v26, v27);
          goto LABEL_15;
        case 6:
          long long v15 = *(void *)(v9 - 33) & 1;
          uint64_t v16 = *(void *)(v9 - 33);
          uint64_t v17 = *(void *)(v9 - 25);
          uint64_t v18 = *(void *)(v9 - 17);
          uint64_t v19 = *(void *)(v9 - 9);
          uint64_t v20 = *(v9 - 1);
          uint64_t v21 = 6;
LABEL_13:
          sub_259FDF0B0(v16, v17, v18, v19, v20, v21);
          goto LABEL_14;
        case 7:
          if (*(v9 - 1))
          {
            uint64_t v10 = *(void *)(v9 - 17);
          }
          else
          {
            uint64_t ObjectType = swift_getObjectType();
            uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v11 + 40);
            uint64_t v39 = ObjectType;
            sub_259FDF0B0(v10, v11, v12, v13, v14, 7);
            sub_259FDF0B0(v10, v11, v12, v13, v14, 7);
            sub_259FB94E4(v12, v13, 0);
            long long v15 = v38(v12, v13, v39, v11);
            sub_259FB680C(v12, v13, 0);
            sub_259FB671C(v10, v11, v12, v13, v14, 7);
            sub_259FB671C(v10, v11, v12, v13, v14, 7);
LABEL_14:
            uint64_t v10 = v15;
          }
LABEL_15:
          unint64_t v30 = *(void *)(v40 + 16);
          uint64_t v29 = *(void *)(v40 + 24);
          if (v30 >= v29 >> 1) {
            sub_259FE1644(v29 > 1, v30 + 1, 1);
          }
          v9 += 40;
          *(void *)(v40 + 16) = v30 + 1;
          *(void *)(v40 + 8 * v30 + 32) = v10;
          if (--v7) {
            continue;
          }
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease_n();
          break;
        default:
          sub_259FDF0B0(v10, v11, v12, v13, v14, *v9);
          sub_25A00ED10();
          swift_bridgeObjectRelease();
          uint64_t v32 = swift_getObjectType();
          (*(void (**)(uint64_t))(*(void *)(v37 + 8) + 8))(v32);
          uint64_t v34 = v33;
          sub_25A00EA80();
          swift_bridgeObjectRelease();
          sub_25A00EA80();
          sub_25A00EA80();
          while (1)
          {
            sub_25A00EDB0();
            __break(1u);
            sub_259FB680C(v12, v13, 0);
            sub_259FB671C(v10, v11, v12, v13, v34, 7);
            sub_259FB671C(v10, v11, v12, v13, v34, 7);
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_release();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            sub_25A00ED10();
            sub_25A00EA80();
            __swift_instantiateConcreteTypeFromMangledName(&qword_26A402CE8);
            sub_25A00ED90();
            sub_25A00EA80();
            uint64_t v35 = swift_getObjectType();
            (*(void (**)(uint64_t))(*(void *)(v37 + 8) + 8))(v35);
            uint64_t v34 = v36;
            sub_25A00EA80();
            swift_bridgeObjectRelease();
            sub_25A00EA80();
            sub_25A00EA80();
          }
      }
      break;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v8;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t ObjectType;
  uint64_t v16;

  uint64_t v5 = *(void *)(v2 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = SchematizedDataComposer.subscript.getter(a1, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (!v6) {
    return 0;
  }
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  uint64_t v16 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_259FE166C(0, v7, 0);
  unint64_t v8 = v16;
  char v9 = (unsigned __int8 *)(v6 + 65);
  while (1)
  {
    uint64_t v10 = *(void *)(v9 - 33);
    uint64_t v11 = *v9;
    if (v11 != 6) {
      break;
    }
    uint64_t v13 = *(void *)(v16 + 16);
    int v12 = *(void *)(v16 + 24);
    if (v13 >= v12 >> 1) {
      sub_259FE166C(v12 > 1, v13 + 1, 1);
    }
    v9 += 40;
    *(void *)(v16 + 16) = v13 + 1;
    *(unsigned char *)(v16 + v13 + 32) = v10 & 1;
    if (!--v7)
    {
      swift_bridgeObjectRelease_n();
      return v8;
    }
  }
  sub_259FDF0B0(v10, *(void *)(v9 - 25), *(void *)(v9 - 17), *(void *)(v9 - 9), *(v9 - 1), v11);
  sub_25A00ED10();
  swift_bridgeObjectRelease();
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(v5 + 8) + 8))(ObjectType);
  sub_25A00EA80();
  swift_bridgeObjectRelease();
  sub_25A00EA80();
  sub_25A00EA80();
  double result = sub_25A00EDB0();
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t ObjectType;
  uint64_t v15;

  uint64_t v5 = *(void *)(v2 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = SchematizedDataComposer.subscript.getter(a1, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (!v6) {
    return 0;
  }
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  long long v15 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_259FE168C(0, v7, 0);
  unint64_t v8 = v15;
  char v9 = (char *)(v6 + 65);
  while (1)
  {
    uint64_t v10 = *(void *)(v9 - 33);
    if (*v9) {
      break;
    }
    int v12 = *(void *)(v15 + 16);
    uint64_t v11 = *(void *)(v15 + 24);
    if (v12 >= v11 >> 1) {
      sub_259FE168C(v11 > 1, v12 + 1, 1);
    }
    v9 += 40;
    *(void *)(v15 + 16) = v12 + 1;
    *(_DWORD *)(v15 + 4 * v12 + 32) = v10;
    if (!--v7)
    {
      swift_bridgeObjectRelease_n();
      return v8;
    }
  }
  sub_259FDF0B0(v10, *(void *)(v9 - 25), *(void *)(v9 - 17), *(void *)(v9 - 9), *(v9 - 1), *v9);
  sub_25A00ED10();
  swift_bridgeObjectRelease();
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(v5 + 8) + 8))(ObjectType);
  sub_25A00EA80();
  swift_bridgeObjectRelease();
  sub_25A00EA80();
  sub_25A00EA80();
  double result = sub_25A00EDB0();
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t ObjectType;
  uint64_t v16;

  uint64_t v5 = *(void *)(v2 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = SchematizedDataComposer.subscript.getter(a1, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (!v6) {
    return 0;
  }
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  uint64_t v16 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_259FE16B4(0, v7, 0);
  unint64_t v8 = v16;
  char v9 = (unsigned __int8 *)(v6 + 65);
  while (1)
  {
    uint64_t v10 = *(void *)(v9 - 33);
    uint64_t v11 = *v9;
    if (v11 != 2) {
      break;
    }
    uint64_t v13 = *(void *)(v16 + 16);
    int v12 = *(void *)(v16 + 24);
    if (v13 >= v12 >> 1) {
      sub_259FE16B4(v12 > 1, v13 + 1, 1);
    }
    v9 += 40;
    *(void *)(v16 + 16) = v13 + 1;
    *(void *)(v16 + 8 * v13 + 32) = v10;
    if (!--v7)
    {
      swift_bridgeObjectRelease_n();
      return v8;
    }
  }
  sub_259FDF0B0(v10, *(void *)(v9 - 25), *(void *)(v9 - 17), *(void *)(v9 - 9), *(v9 - 1), v11);
  sub_25A00ED10();
  swift_bridgeObjectRelease();
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(v5 + 8) + 8))(ObjectType);
  sub_25A00EA80();
  swift_bridgeObjectRelease();
  sub_25A00EA80();
  sub_25A00EA80();
  double result = sub_25A00EDB0();
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t ObjectType;
  uint64_t v16;

  uint64_t v5 = *(void *)(v2 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = SchematizedDataComposer.subscript.getter(a1, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (!v6) {
    return 0;
  }
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  uint64_t v16 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_259FE16DC(0, v7, 0);
  unint64_t v8 = v16;
  char v9 = (unsigned __int8 *)(v6 + 65);
  while (1)
  {
    uint64_t v10 = *(void *)(v9 - 33);
    uint64_t v11 = *v9;
    if (v11 != 1) {
      break;
    }
    uint64_t v13 = *(void *)(v16 + 16);
    int v12 = *(void *)(v16 + 24);
    if (v13 >= v12 >> 1) {
      sub_259FE16DC(v12 > 1, v13 + 1, 1);
    }
    v9 += 40;
    *(void *)(v16 + 16) = v13 + 1;
    *(_DWORD *)(v16 + 4 * v13 + 32) = v10;
    if (!--v7)
    {
      swift_bridgeObjectRelease_n();
      return v8;
    }
  }
  sub_259FDF0B0(v10, *(void *)(v9 - 25), *(void *)(v9 - 17), *(void *)(v9 - 9), *(v9 - 1), v11);
  sub_25A00ED10();
  swift_bridgeObjectRelease();
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(v5 + 8) + 8))(ObjectType);
  sub_25A00EA80();
  swift_bridgeObjectRelease();
  sub_25A00EA80();
  sub_25A00EA80();
  double result = sub_25A00EDB0();
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t ObjectType;
  uint64_t v16;

  uint64_t v5 = *(void *)(v2 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = SchematizedDataComposer.subscript.getter(a1, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (!v6) {
    return 0;
  }
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  uint64_t v16 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_259FE1704(0, v7, 0);
  unint64_t v8 = v16;
  char v9 = (unsigned __int8 *)(v6 + 65);
  while (1)
  {
    uint64_t v10 = *(void *)(v9 - 33);
    uint64_t v11 = *v9;
    if (v11 != 3) {
      break;
    }
    uint64_t v13 = *(void *)(v16 + 16);
    int v12 = *(void *)(v16 + 24);
    if (v13 >= v12 >> 1) {
      sub_259FE1704(v12 > 1, v13 + 1, 1);
    }
    v9 += 40;
    *(void *)(v16 + 16) = v13 + 1;
    *(void *)(v16 + 8 * v13 + 32) = v10;
    if (!--v7)
    {
      swift_bridgeObjectRelease_n();
      return v8;
    }
  }
  sub_259FDF0B0(v10, *(void *)(v9 - 25), *(void *)(v9 - 17), *(void *)(v9 - 9), *(v9 - 1), v11);
  sub_25A00ED10();
  swift_bridgeObjectRelease();
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(v5 + 8) + 8))(ObjectType);
  sub_25A00EA80();
  swift_bridgeObjectRelease();
  sub_25A00EA80();
  sub_25A00EA80();
  double result = sub_25A00EDB0();
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t ObjectType;
  uint64_t v16;

  uint64_t v5 = *(void *)(v2 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = SchematizedDataComposer.subscript.getter(a1, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (!v6) {
    return 0;
  }
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  uint64_t v16 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_259FE172C(0, v7, 0);
  unint64_t v8 = v16;
  char v9 = (unsigned __int8 *)(v6 + 65);
  while (1)
  {
    uint64_t v10 = *(void *)(v9 - 33);
    uint64_t v11 = *v9;
    if (v11 != 4) {
      break;
    }
    uint64_t v13 = *(void *)(v16 + 16);
    int v12 = *(void *)(v16 + 24);
    if (v13 >= v12 >> 1) {
      sub_259FE172C(v12 > 1, v13 + 1, 1);
    }
    v9 += 40;
    *(void *)(v16 + 16) = v13 + 1;
    *(_DWORD *)(v16 + 4 * v13 + 32) = v10;
    if (!--v7)
    {
      swift_bridgeObjectRelease_n();
      return v8;
    }
  }
  sub_259FDF0B0(v10, *(void *)(v9 - 25), *(void *)(v9 - 17), *(void *)(v9 - 9), *(v9 - 1), v11);
  sub_25A00ED10();
  swift_bridgeObjectRelease();
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(v5 + 8) + 8))(ObjectType);
  sub_25A00EA80();
  swift_bridgeObjectRelease();
  sub_25A00EA80();
  sub_25A00EA80();
  double result = sub_25A00EDB0();
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t ObjectType;
  uint64_t v16;

  uint64_t v5 = *(void *)(v2 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = SchematizedDataComposer.subscript.getter(a1, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (!v6) {
    return 0;
  }
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  uint64_t v16 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_259FE174C(0, v7, 0);
  unint64_t v8 = v16;
  char v9 = (unsigned __int8 *)(v6 + 65);
  while (1)
  {
    uint64_t v10 = *(void *)(v9 - 33);
    uint64_t v11 = *v9;
    if (v11 != 5) {
      break;
    }
    uint64_t v13 = *(void *)(v16 + 16);
    int v12 = *(void *)(v16 + 24);
    if (v13 >= v12 >> 1) {
      sub_259FE174C(v12 > 1, v13 + 1, 1);
    }
    v9 += 40;
    *(void *)(v16 + 16) = v13 + 1;
    *(void *)(v16 + 8 * v13 + 32) = v10;
    if (!--v7)
    {
      swift_bridgeObjectRelease_n();
      return v8;
    }
  }
  sub_259FDF0B0(v10, *(void *)(v9 - 25), *(void *)(v9 - 17), *(void *)(v9 - 9), *(v9 - 1), v11);
  sub_25A00ED10();
  swift_bridgeObjectRelease();
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(v5 + 8) + 8))(ObjectType);
  sub_25A00EA80();
  swift_bridgeObjectRelease();
  sub_25A00EA80();
  sub_25A00EA80();
  double result = sub_25A00EDB0();
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, unint64_t);
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int16 v22;

  uint64_t v5 = *(void *)(v2 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  SchematizedDataComposer.subscript.getter(a1, a2, (uint64_t)&v18);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v6 = 0;
  uint64_t v7 = v22;
  unint64_t v8 = HIBYTE(v22);
  if (v8 > 0xFE) {
    return v6;
  }
  char v9 = v18;
  uint64_t v10 = v19;
  if (v8 == 8) {
    return v18;
  }
  if (v8 == 7)
  {
    uint64_t v6 = v20;
    uint64_t v11 = v21;
    if (v22)
    {
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t))(v10 + 48);
      uint64_t v17 = ObjectType;
      sub_259FDF0B0(v9, v10, v6, v11, v7, 7);
      swift_unknownObjectRetain();
      sub_259FB94E4(v6, v11, 1);
      uint64_t v13 = v16(v6, v17, v10);
      sub_259FE3748(v9, v10, v6, v11, v7);
      sub_259FE3748(v9, v10, v6, v11, v7);
      sub_259FB671C(v9, v10, v6, v11, v7, 7);
      return v13;
    }
    else
    {
      sub_259FB94E4(v20, v21, 0);
      sub_259FE3748(v9, v10, v6, v11, v7);
    }
    return v6;
  }
  uint64_t v18 = 0;
  uint64_t v19 = 0xE000000000000000;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_25A00ED10();
  swift_bridgeObjectRelease();
  uint64_t v18 = 0x73696D2065707954;
  uint64_t v19 = 0xEF203A686374616DLL;
  long long v15 = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(v5 + 8) + 8))(v15);
  sub_25A00EA80();
  swift_bridgeObjectRelease();
  sub_25A00EA80();
  sub_25A00EA80();
  double result = sub_25A00EDB0();
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t ObjectType;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int16 v12;

  uint64_t v5 = *(void *)(v2 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  SchematizedDataComposer.subscript.getter(a1, a2, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (HIBYTE(v12) <= 0xFEu)
  {
    double result = v8;
    if ((v12 & 0xFF00) == 0x900) {
      return result;
    }
    sub_259FE3748(v8, v9, v10, v11, v12);
  }
  unint64_t v8 = 0;
  char v9 = 0xE000000000000000;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_25A00ED10();
  swift_bridgeObjectRelease();
  unint64_t v8 = 0x73696D2065707954;
  char v9 = 0xEF203A686374616DLL;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(v5 + 8) + 8))(ObjectType);
  sub_25A00EA80();
  swift_bridgeObjectRelease();
  sub_25A00EA80();
  sub_25A00EA80();
  double result = sub_25A00EDB0();
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t, unint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int16 v29;

  uint64_t v5 = *(void *)(v2 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  SchematizedDataComposer.subscript.getter(a1, a2, (uint64_t)&v25);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v6 = 0;
  uint64_t v7 = v29;
  unint64_t v8 = HIBYTE(v29);
  if (v8 <= 0xFE)
  {
    uint64_t v6 = v25;
    char v9 = v26;
    uint64_t v11 = v27;
    uint64_t v10 = v28;
    switch(v8)
    {
      case 0u:
        sub_259FE3748(v25, v26, v27, v28, v29);
        uint64_t v6 = (int)v6;
        break;
      case 1u:
        sub_259FE3748(v25, v26, v27, v28, v29);
        uint64_t v6 = v6;
        break;
      case 2u:
      case 3u:
        sub_259FE3748(v25, v26, v27, v28, v29);
        break;
      case 6u:
        sub_259FE3748(v25, v26, v27, v28, v29);
        v6 &= 1u;
        break;
      case 7u:
        if (v29)
        {
          sub_259FE3748(v25, v26, v27, v28, v29);
          uint64_t v6 = v11;
        }
        else
        {
          uint64_t ObjectType = swift_getObjectType();
          long long v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v9 + 40);
          uint64_t v23 = ObjectType;
          sub_259FE3734(v6, v9, v11, v10, v7);
          sub_259FB94E4(v11, v10, 0);
          __n128 v24 = v22(v11, v10, v23, v9);
          sub_259FB680C(v11, v10, 0);
          sub_259FE3748(v6, v9, v11, v10, v7);
          sub_259FE3748(v6, v9, v11, v10, v7);
          uint64_t v6 = v24;
        }
        break;
      default:
        uint64_t v25 = 0;
        long long v26 = 0xE000000000000000;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        sub_25A00ED10();
        swift_bridgeObjectRelease();
        uint64_t v25 = 0x73696D2065707954;
        long long v26 = 0xEF203A686374616DLL;
        long long v14 = swift_getObjectType();
        (*(void (**)(uint64_t))(*(void *)(v5 + 8) + 8))(v14);
        uint64_t v16 = v15;
        sub_25A00EA80();
        swift_bridgeObjectRelease();
        sub_25A00EA80();
        sub_25A00EA80();
        while (1)
        {
          uint64_t v17 = sub_25A00EDB0();
          __break(1u);
          sub_259FB680C(v17, v18, v19);
          sub_259FE3748((uint64_t)&v25, v16, v11, v10, v7);
          uint64_t v25 = 0;
          long long v26 = 0xE000000000000000;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          sub_25A00ED10();
          sub_25A00EA80();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A402CE8);
          sub_25A00ED90();
          sub_25A00EA80();
          uint64_t v20 = swift_getObjectType();
          (*(void (**)(uint64_t))(*(void *)(v5 + 8) + 8))(v20);
          uint64_t v16 = v21;
          sub_25A00EA80();
          swift_bridgeObjectRelease();
          sub_25A00EA80();
          sub_25A00EA80();
        }
    }
  }
  return v6;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t ObjectType;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int16 v12;

  uint64_t v5 = *(void *)(v2 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  SchematizedDataComposer.subscript.getter(a1, a2, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (HIBYTE(v12) <= 0xFEu)
  {
    if ((v12 & 0xFF00) == 0x600) {
      return v8 & 1;
    }
    sub_259FE3748(v8, v9, v10, v11, v12);
  }
  unint64_t v8 = 0;
  char v9 = 0xE000000000000000;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_25A00ED10();
  swift_bridgeObjectRelease();
  unint64_t v8 = 0x73696D2065707954;
  char v9 = 0xEF203A686374616DLL;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(v5 + 8) + 8))(ObjectType);
  sub_25A00EA80();
  swift_bridgeObjectRelease();
  sub_25A00EA80();
  sub_25A00EA80();
  double result = sub_25A00EDB0();
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t ObjectType;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int16 v12;

  uint64_t v5 = *(void *)(v2 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  SchematizedDataComposer.subscript.getter(a1, a2, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (HIBYTE(v12) <= 0xFEu)
  {
    LODWORD(result) = v8;
    if (v12 <= 0xFFu)
    {
      LOBYTE(v8) = 0;
      return result;
    }
    sub_259FE3748(v8, v9, v10, v11, v12);
  }
  unint64_t v8 = 0;
  char v9 = 0xE000000000000000;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_25A00ED10();
  swift_bridgeObjectRelease();
  unint64_t v8 = 0x73696D2065707954;
  char v9 = 0xEF203A686374616DLL;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(v5 + 8) + 8))(ObjectType);
  sub_25A00EA80();
  swift_bridgeObjectRelease();
  sub_25A00EA80();
  sub_25A00EA80();
  double result = sub_25A00EDB0();
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t ObjectType;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int16 v12;

  uint64_t v5 = *(void *)(v2 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  SchematizedDataComposer.subscript.getter(a1, a2, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (HIBYTE(v12) <= 0xFEu)
  {
    double result = v8;
    if ((v12 & 0xFF00) == 0x200) {
      return result;
    }
    sub_259FE3748(v8, v9, v10, v11, v12);
  }
  unint64_t v8 = 0;
  char v9 = 0xE000000000000000;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_25A00ED10();
  swift_bridgeObjectRelease();
  unint64_t v8 = 0x73696D2065707954;
  char v9 = 0xEF203A686374616DLL;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(v5 + 8) + 8))(ObjectType);
  sub_25A00EA80();
  swift_bridgeObjectRelease();
  sub_25A00EA80();
  sub_25A00EA80();
  double result = sub_25A00EDB0();
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t ObjectType;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int16 v12;

  uint64_t v5 = *(void *)(v2 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  SchematizedDataComposer.subscript.getter(a1, a2, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (HIBYTE(v12) <= 0xFEu)
  {
    LODWORD(result) = v8;
    if ((v12 & 0xFF00) == 0x100)
    {
      LOBYTE(v8) = 0;
      return result;
    }
    sub_259FE3748(v8, v9, v10, v11, v12);
  }
  unint64_t v8 = 0;
  char v9 = 0xE000000000000000;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_25A00ED10();
  swift_bridgeObjectRelease();
  unint64_t v8 = 0x73696D2065707954;
  char v9 = 0xEF203A686374616DLL;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(v5 + 8) + 8))(ObjectType);
  sub_25A00EA80();
  swift_bridgeObjectRelease();
  sub_25A00EA80();
  sub_25A00EA80();
  double result = sub_25A00EDB0();
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t ObjectType;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int16 v12;

  uint64_t v5 = *(void *)(v2 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  SchematizedDataComposer.subscript.getter(a1, a2, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (HIBYTE(v12) <= 0xFEu)
  {
    double result = v8;
    if ((v12 & 0xFF00) == 0x300) {
      return result;
    }
    sub_259FE3748(v8, v9, v10, v11, v12);
  }
  unint64_t v8 = 0;
  char v9 = 0xE000000000000000;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_25A00ED10();
  swift_bridgeObjectRelease();
  unint64_t v8 = 0x73696D2065707954;
  char v9 = 0xEF203A686374616DLL;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(v5 + 8) + 8))(ObjectType);
  sub_25A00EA80();
  swift_bridgeObjectRelease();
  sub_25A00EA80();
  sub_25A00EA80();
  double result = sub_25A00EDB0();
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t ObjectType;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int16 v12;

  uint64_t v5 = *(void *)(v2 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  SchematizedDataComposer.subscript.getter(a1, a2, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (HIBYTE(v12) <= 0xFEu)
  {
    LODWORD(result) = v8;
    if ((v12 & 0xFF00) == 0x400)
    {
      LOBYTE(v8) = 0;
      return result;
    }
    sub_259FE3748(v8, v9, v10, v11, v12);
  }
  unint64_t v8 = 0;
  char v9 = 0xE000000000000000;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_25A00ED10();
  swift_bridgeObjectRelease();
  unint64_t v8 = 0x73696D2065707954;
  char v9 = 0xEF203A686374616DLL;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(v5 + 8) + 8))(ObjectType);
  sub_25A00EA80();
  swift_bridgeObjectRelease();
  sub_25A00EA80();
  sub_25A00EA80();
  double result = sub_25A00EDB0();
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t ObjectType;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int16 v12;

  uint64_t v5 = *(void *)(v2 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  SchematizedDataComposer.subscript.getter(a1, a2, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (HIBYTE(v12) <= 0xFEu)
  {
    double result = v8;
    if ((v12 & 0xFF00) == 0x500) {
      return result;
    }
    sub_259FE3748(v8, v9, v10, v11, v12);
  }
  unint64_t v8 = 0;
  char v9 = 0xE000000000000000;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_25A00ED10();
  swift_bridgeObjectRelease();
  unint64_t v8 = 0x73696D2065707954;
  char v9 = 0xEF203A686374616DLL;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(v5 + 8) + 8))(ObjectType);
  sub_25A00EA80();
  swift_bridgeObjectRelease();
  sub_25A00EA80();
  sub_25A00EA80();
  double result = sub_25A00EDB0();
  __break(1u);
  return result;
}

uint64_t sub_259FE0550@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = SchematizedDataComposer.subscript.getter(v3, v4);
  swift_bridgeObjectRelease();
  uint64_t result = swift_unknownObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t sub_259FE05D8(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = a3[1];
  if (*a1) {
    __int16 v5 = 0x8000;
  }
  else {
    __int16 v5 = -4096;
  }
  v7[0] = *a1;
  memset(&v7[1], 0, 24);
  __int16 v8 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_259FF4230((uint64_t)v7, v3, v4);
}

uint64_t SchematizedDataComposer.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    uint64_t v9 = a1;
    unint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    __int16 v13 = 0x8000;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *(void *)(v3 + 16);
    *(void *)(v3 + 16) = 0x8000000000000000;
    sub_259FFB7FC((uint64_t)&v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *(void *)(v3 + 16) = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_259FFB0CC(a2, a3, (uint64_t)&v9);
    swift_bridgeObjectRelease();
    return sub_259FB66F8(v9, v10, v11, v12, v13);
  }
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v8;
  uint64_t v9;
  unint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  long long v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  uint64_t v4 = v3;
  __int16 v5 = a3;
  uint64_t v6 = a2;
  if (a1)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    if (v8)
    {
      uint64_t v19 = v3;
      uint64_t v23 = MEMORY[0x263F8EE78];
      sub_259FE1544(0, v8, 0);
      uint64_t v9 = v23;
      unint64_t v10 = (unint64_t *)(a1 + 56);
      do
      {
        uint64_t v11 = *(v10 - 1);
        uint64_t v12 = *v10;
        uint64_t v21 = *(_OWORD *)(v10 - 3);
        swift_unknownObjectRetain();
        sub_259FAE450(v11, v12);
        uint64_t v23 = v9;
        long long v14 = *(void *)(v9 + 16);
        __int16 v13 = *(void *)(v9 + 24);
        if (v14 >= v13 >> 1)
        {
          sub_259FE1544(v13 > 1, v14 + 1, 1);
          uint64_t v9 = v23;
        }
        *(void *)(v9 + 16) = v14 + 1;
        long long v15 = v9 + 40 * v14;
        *(_OWORD *)(v15 + 32) = v21;
        v10 += 4;
        *(void *)(v15 + 48) = v11;
        *(void *)(v15 + 56) = v12;
        *(_WORD *)(v15 + 64) = 2560;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
      uint64_t v4 = v19;
      __int16 v5 = a3;
      uint64_t v6 = a2;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v9 = MEMORY[0x263F8EE78];
    }
    uint64_t v23 = v9;
    __n128 v24 = 0;
    uint64_t v25 = 0;
    long long v26 = 0;
    uint64_t v27 = 0x8000;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long v22 = *(void *)(v4 + 16);
    *(void *)(v4 + 16) = 0x8000000000000000;
    sub_259FFB7FC((uint64_t)&v23, v6, v5, isUniquelyReferenced_nonNull_native);
    *(void *)(v4 + 16) = v22;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_259FFB0CC(a2, a3, (uint64_t)&v23);
    swift_bridgeObjectRelease();
    return sub_259FB66F8(v23, v24, v25, v26, v27);
  }
}

{
  uint64_t v3;
  uint64_t v6;
  uint64_t ObjectType;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  __int16 v32;
  __int16 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int16 v47;
  uint64_t vars8;

  uint64_t v6 = *(void *)(v3 + 8);
  uint64_t ObjectType = swift_getObjectType();
  MessageSchemaDescribing.asPublic()(v6, &v41);
  uint64_t v8 = v42;
  uint64_t v9 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v8 + 56))(a2, a3, v9, v8);
  uint64_t v11 = v10;
  swift_getObjectType();
  FieldSchemaDescribing.asPublic()(v11, &v43);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v12 = v44;
  __int16 v13 = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t))(v12 + 56))(&v41, v13, v12);
  long long v14 = v41;
  long long v15 = v42;
  if (v42 >> 62)
  {
    if (v42 >> 62 != 2 || v41 != 13 || v42 != 0x8000000000000000)
    {
      uint64_t v43 = 0;
      uint64_t v44 = 0xE000000000000000;
      sub_25A00ED10();
      swift_bridgeObjectRelease();
      uint64_t v43 = 0x73696D2065707954;
      uint64_t v44 = 0xEF203A686374616DLL;
      (*(void (**)(uint64_t))(*(void *)(v6 + 8) + 8))(ObjectType);
      sub_25A00EA80();
      swift_bridgeObjectRelease();
      sub_25A00EA80();
      sub_25A00EA80();
      uint64_t result = sub_25A00EDB0();
      __break(1u);
      return result;
    }
    if (a1)
    {
      __n128 v24 = *(void *)(a1 + 16);
      if (v24)
      {
        uint64_t v39 = a3;
        uint64_t v43 = MEMORY[0x263F8EE78];
        sub_259FE1544(0, v24, 0);
        uint64_t v25 = v43;
        long long v26 = (uint64_t *)(a1 + 40);
        do
        {
          long long v28 = *(v26 - 1);
          uint64_t v27 = *v26;
          uint64_t v43 = v25;
          uint64_t v29 = *(void *)(v25 + 16);
          unint64_t v30 = *(void *)(v25 + 24);
          swift_bridgeObjectRetain();
          if (v29 >= v30 >> 1)
          {
            sub_259FE1544(v30 > 1, v29 + 1, 1);
            uint64_t v25 = v43;
          }
          v26 += 2;
          *(void *)(v25 + 16) = v29 + 1;
          uint64_t v31 = v25 + 40 * v29;
          *(void *)(v31 + 32) = v28;
          *(void *)(v31 + 40) = v27;
          *(void *)(v31 + 48) = 0;
          *(void *)(v31 + 56) = 0;
          *(_WORD *)(v31 + 64) = 2048;
          --v24;
        }
        while (v24);
        swift_bridgeObjectRelease();
        a3 = v39;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v25 = MEMORY[0x263F8EE78];
      }
      unint64_t v33 = 0x8000;
    }
    else
    {
      uint64_t v25 = 0;
      unint64_t v33 = -4096;
    }
    uint64_t v43 = v25;
    uint64_t v44 = 0;
    long long v45 = 0;
    char v46 = 0;
    char v47 = v33;
    sub_259FF4230((uint64_t)&v43, a2, a3);
    swift_unknownObjectRelease();
    uint64_t v34 = 13;
    uint64_t v35 = 0x8000000000000000;
  }
  else
  {
    if (a1)
    {
      uint64_t v16 = *(void *)(a1 + 16);
      if (v16)
      {
        uint64_t v37 = a2;
        uint64_t v38 = a3;
        sub_259FBAA50(v41, v42);
        uint64_t v43 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        sub_259FE1544(0, v16, 0);
        uint64_t v17 = v43;
        uint64_t v18 = (uint64_t *)(a1 + 40);
        do
        {
          uint64_t v19 = *(v18 - 1);
          uint64_t v20 = *v18;
          sub_259FBAA50(v14, v15);
          uint64_t v43 = v17;
          uint64_t v21 = *(void *)(v17 + 16);
          long long v22 = *(void *)(v17 + 24);
          swift_bridgeObjectRetain();
          if (v21 >= v22 >> 1)
          {
            sub_259FE1544(v22 > 1, v21 + 1, 1);
            uint64_t v17 = v43;
          }
          v18 += 2;
          *(void *)(v17 + 16) = v21 + 1;
          uint64_t v23 = v17 + 40 * v21;
          *(void *)(v23 + 32) = v14;
          *(void *)(v23 + 40) = v15;
          *(void *)(v23 + 48) = v19;
          *(void *)(v23 + 56) = v20;
          *(_WORD *)(v23 + 64) = 1792;
          --v16;
        }
        while (v16);
        swift_bridgeObjectRelease_n();
        a2 = v37;
        a3 = v38;
      }
      else
      {
        sub_259FBAA50(v41, v42);
        swift_bridgeObjectRelease();
        uint64_t v17 = MEMORY[0x263F8EE78];
      }
      uint64_t v32 = 0x8000;
    }
    else
    {
      swift_unknownObjectRetain();
      uint64_t v17 = 0;
      uint64_t v32 = -4096;
    }
    uint64_t v43 = v17;
    uint64_t v44 = 0;
    long long v45 = 0;
    char v46 = 0;
    char v47 = v32;
    sub_259FF4230((uint64_t)&v43, a2, a3);
    sub_259FAD1BC(v14, v15);
    swift_unknownObjectRelease();
    uint64_t v34 = v14;
    uint64_t v35 = v15;
  }
  return sub_259FAD1BC(v34, v35);
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v8;
  uint64_t v9;
  unint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;

  uint64_t v4 = v3;
  __int16 v5 = a3;
  uint64_t v6 = a2;
  if (a1)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    if (v8)
    {
      uint64_t v19 = v3;
      long long v22 = MEMORY[0x263F8EE78];
      sub_259FE1544(0, v8, 0);
      uint64_t v9 = v22;
      unint64_t v10 = (unint64_t *)(a1 + 40);
      do
      {
        uint64_t v11 = *(v10 - 1);
        uint64_t v12 = *v10;
        sub_259FAE450(v11, *v10);
        long long v22 = v9;
        long long v14 = *(void *)(v9 + 16);
        __int16 v13 = *(void *)(v9 + 24);
        if (v14 >= v13 >> 1)
        {
          sub_259FE1544(v13 > 1, v14 + 1, 1);
          uint64_t v9 = v22;
        }
        v10 += 2;
        *(void *)(v9 + 16) = v14 + 1;
        long long v15 = v9 + 40 * v14;
        *(void *)(v15 + 32) = v11;
        *(void *)(v15 + 40) = v12;
        *(void *)(v15 + 48) = 0;
        *(void *)(v15 + 56) = 0;
        *(_WORD *)(v15 + 64) = 2304;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
      uint64_t v4 = v19;
      __int16 v5 = a3;
      uint64_t v6 = a2;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v9 = MEMORY[0x263F8EE78];
    }
    long long v22 = v9;
    uint64_t v23 = 0;
    __n128 v24 = 0;
    uint64_t v25 = 0;
    long long v26 = 0x8000;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *(void *)(v4 + 16);
    *(void *)(v4 + 16) = 0x8000000000000000;
    sub_259FFB7FC((uint64_t)&v22, v6, v5, isUniquelyReferenced_nonNull_native);
    *(void *)(v4 + 16) = v21;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_259FFB0CC(a2, a3, (uint64_t)&v22);
    swift_bridgeObjectRelease();
    return sub_259FB66F8(v22, v23, v24, v25, v26);
  }
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  int64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char isUniquelyReferenced_nonNull_native;
  int64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int16 v81;

  uint64_t v4 = v3;
  __int16 v5 = a3;
  uint64_t v6 = a2;
  if (a1)
  {
    uint64_t v7 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    MessageSchemaDescribing.asPublic()(v7, &v75);
    uint64_t v9 = v76;
    unint64_t v10 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v9 + 56))(v6, v5, v10, v9);
    uint64_t v12 = v11;
    swift_getObjectType();
    FieldSchemaDescribing.asPublic()(v12, &v77);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    __int16 v13 = v78;
    long long v14 = swift_getObjectType();
    (*(void (**)(unint64_t *__return_ptr, uint64_t, unint64_t))(v13 + 56))(&v75, v14, v13);
    long long v15 = v75;
    uint64_t v16 = v76;
    if (v76 >> 62)
    {
      if (v76 >> 62 != 2 || v75 > 0xC)
      {
LABEL_43:
        char v77 = 0;
        uint64_t v78 = 0xE000000000000000;
        sub_25A00ED10();
        swift_bridgeObjectRelease();
        char v77 = 0x73696D2065707954;
        uint64_t v78 = 0xEF203A686374616DLL;
        (*(void (**)(uint64_t))(*(void *)(v7 + 8) + 8))(ObjectType);
        sub_25A00EA80();
        swift_bridgeObjectRelease();
        sub_25A00EA80();
        sub_25A00EA80();
        sub_25A00EDB0();
        __break(1u);
        JUMPOUT(0x259FE9BF0);
      }
      switch(v75)
      {
        case 1uLL:
        case 3uLL:
          char v46 = *(void *)(a1 + 16);
          if (!v46) {
            goto LABEL_33;
          }
          uint64_t v67 = v5;
          uint64_t v70 = v6;
          char v77 = MEMORY[0x263F8EE78];
          sub_259FE1544(0, v46, 0);
          char v47 = 0;
          uint64_t v23 = v77;
          long long v48 = *(void *)(v77 + 16);
          uint64_t v49 = 40 * v48;
          do
          {
            uint64_t v50 = *(unsigned int *)(a1 + 32 + 8 * v47);
            char v77 = v23;
            uint64_t v51 = *(void *)(v23 + 24);
            long long v52 = v48 + v47 + 1;
            if (v48 + v47 >= v51 >> 1)
            {
              sub_259FE1544(v51 > 1, v48 + v47 + 1, 1);
              uint64_t v23 = v77;
            }
            ++v47;
            *(void *)(v23 + 16) = v52;
            uint64_t v53 = v23 + v49;
            *(void *)(v53 + 32) = v50;
            *(void *)(v53 + 40) = 0;
            *(void *)(v53 + 48) = 0;
            *(void *)(v53 + 56) = 0;
            v49 += 40;
            *(_WORD *)(v53 + 64) = 256;
          }
          while (v46 != v47);
          goto LABEL_32;
        case 5uLL:
        case 7uLL:
        case 9uLL:
          unint64_t v30 = *(void *)(a1 + 16);
          if (!v30) {
            goto LABEL_33;
          }
          uint64_t v67 = v5;
          uint64_t v70 = v6;
          char v77 = MEMORY[0x263F8EE78];
          sub_259FE1544(0, v30, 0);
          uint64_t v31 = 0;
          uint64_t v23 = v77;
          uint64_t v32 = *(void *)(v77 + 16);
          unint64_t v33 = 40 * v32;
          do
          {
            uint64_t v34 = *(void *)(a1 + 32 + 8 * v31);
            char v77 = v23;
            uint64_t v35 = *(void *)(v23 + 24);
            uint64_t v36 = v32 + v31 + 1;
            if (v32 + v31 >= v35 >> 1)
            {
              sub_259FE1544(v35 > 1, v32 + v31 + 1, 1);
              uint64_t v23 = v77;
            }
            ++v31;
            *(void *)(v23 + 16) = v36;
            uint64_t v37 = v23 + v33;
            *(void *)(v37 + 32) = v34;
            *(void *)(v37 + 40) = 0;
            *(void *)(v37 + 48) = 0;
            *(void *)(v37 + 56) = 0;
            v33 += 40;
            *(_WORD *)(v37 + 64) = 512;
          }
          while (v30 != v31);
          goto LABEL_32;
        case 6uLL:
        case 8uLL:
          uint64_t v38 = *(void *)(a1 + 16);
          if (!v38) {
            goto LABEL_33;
          }
          uint64_t v67 = v5;
          uint64_t v70 = v6;
          char v77 = MEMORY[0x263F8EE78];
          sub_259FE1544(0, v38, 0);
          uint64_t v39 = 0;
          uint64_t v23 = v77;
          char v40 = *(void *)(v77 + 16);
          uint64_t v41 = 40 * v40;
          do
          {
            uint64_t v42 = *(void *)(a1 + 32 + 8 * v39);
            char v77 = v23;
            uint64_t v43 = *(void *)(v23 + 24);
            uint64_t v44 = v40 + v39 + 1;
            if (v40 + v39 >= v43 >> 1)
            {
              sub_259FE1544(v43 > 1, v40 + v39 + 1, 1);
              uint64_t v23 = v77;
            }
            ++v39;
            *(void *)(v23 + 16) = v44;
            long long v45 = v23 + v41;
            *(void *)(v45 + 32) = v42;
            *(void *)(v45 + 40) = 0;
            *(void *)(v45 + 48) = 0;
            *(void *)(v45 + 56) = 0;
            v41 += 40;
            *(_WORD *)(v45 + 64) = 768;
          }
          while (v38 != v39);
LABEL_32:
          swift_bridgeObjectRelease();
          __int16 v5 = v67;
          uint64_t v6 = v70;
          break;
        case 0xAuLL:
        case 0xBuLL:
          goto LABEL_43;
        case 0xCuLL:
          unsigned __int16 v55 = *(void *)(a1 + 16);
          if (v55)
          {
            uint64_t v68 = v5;
            uint64_t v71 = v6;
            char v77 = MEMORY[0x263F8EE78];
            unint64_t v66 = v55;
            sub_259FE1544(0, v55, 0);
            uint64_t v56 = v66;
            char v57 = 0;
            uint64_t v58 = v77;
            char v59 = *(void *)(v77 + 16);
            uint64_t v60 = 40 * v59;
            do
            {
              uint64_t v61 = *(void *)(a1 + 32 + 8 * v57);
              char v77 = v58;
              uint64_t v62 = *(void *)(v58 + 24);
              uint64_t v63 = v59 + v57 + 1;
              if (v59 + v57 >= v62 >> 1)
              {
                sub_259FE1544(v62 > 1, v59 + v57 + 1, 1);
                uint64_t v56 = v66;
                uint64_t v58 = v77;
              }
              ++v57;
              *(void *)(v58 + 16) = v63;
              uint64_t v64 = v58 + v60;
              *(void *)(v64 + 32) = v61 != 0;
              *(void *)(v64 + 40) = 0;
              *(void *)(v64 + 48) = 0;
              *(void *)(v64 + 56) = 0;
              *(_WORD *)(v64 + 64) = 1536;
              v60 += 40;
            }
            while (v56 != v57);
            swift_bridgeObjectRelease();
            __int16 v5 = v68;
            uint64_t v6 = v71;
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v58 = MEMORY[0x263F8EE78];
          }
          char v77 = v58;
          uint64_t v78 = 0;
          uint64_t v79 = 0;
          uint64_t v80 = 0;
          uint64_t v81 = 0x8000;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v74 = *(void *)(v4 + 16);
          *(void *)(v4 + 16) = 0x8000000000000000;
          sub_259FFB7FC((uint64_t)&v77, v6, v5, isUniquelyReferenced_nonNull_native);
          *(void *)(v4 + 16) = v74;
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return sub_259FAD1BC(v15, v16);
        default:
          uint64_t v20 = *(void *)(a1 + 16);
          if (v20)
          {
            uint64_t v69 = v6;
            uint64_t v21 = v5;
            char v77 = MEMORY[0x263F8EE78];
            sub_259FE1544(0, v20, 0);
            long long v22 = 0;
            uint64_t v23 = v77;
            __n128 v24 = *(void *)(v77 + 16);
            uint64_t v25 = 40 * v24;
            do
            {
              long long v26 = *(unsigned int *)(a1 + 32 + 8 * v22);
              char v77 = v23;
              uint64_t v27 = *(void *)(v23 + 24);
              long long v28 = v24 + v22 + 1;
              if (v24 + v22 >= v27 >> 1)
              {
                sub_259FE1544(v27 > 1, v24 + v22 + 1, 1);
                uint64_t v23 = v77;
              }
              ++v22;
              *(void *)(v23 + 16) = v28;
              uint64_t v29 = v23 + v25;
              *(void *)(v29 + 32) = v26;
              *(void *)(v29 + 40) = 0;
              *(void *)(v29 + 48) = 0;
              *(void *)(v29 + 56) = 0;
              v25 += 40;
              *(_WORD *)(v29 + 64) = 0;
            }
            while (v20 != v22);
            swift_bridgeObjectRelease();
            __int16 v5 = v21;
            uint64_t v6 = v69;
          }
          else
          {
LABEL_33:
            swift_bridgeObjectRelease();
            uint64_t v23 = MEMORY[0x263F8EE78];
          }
          break;
      }
      char v77 = v23;
      uint64_t v78 = 0;
      uint64_t v79 = 0;
      uint64_t v80 = 0;
      uint64_t v81 = 0x8000;
      long long v54 = swift_isUniquelyReferenced_nonNull_native();
      BOOL v75 = *(void *)(v4 + 16);
      *(void *)(v4 + 16) = 0x8000000000000000;
      sub_259FFB7FC((uint64_t)&v77, v6, v5, v54);
      *(void *)(v4 + 16) = v75;
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      sub_259FBAA50(v75, v76);
      uint64_t v17 = sub_259FEBBA0(a1, v15, v16);
      swift_bridgeObjectRelease();
      char v77 = v17;
      uint64_t v78 = 0;
      uint64_t v79 = 0;
      uint64_t v80 = 0;
      uint64_t v81 = 0x8000;
      uint64_t v18 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v73 = *(void *)(v4 + 16);
      *(void *)(v4 + 16) = 0x8000000000000000;
      sub_259FFB7FC((uint64_t)&v77, v6, v5, v18);
      *(void *)(v4 + 16) = v73;
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_259FAD1BC(v15, v16);
      return sub_259FAD1BC(v15, v16);
    }
  }
  else
  {
    sub_259FFB0CC(a2, a3, (uint64_t)&v77);
    swift_bridgeObjectRelease();
    return sub_259FB66F8(v77, v78, v79, v80, v81);
  }
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  uint64_t v4 = v3;
  __int16 v5 = a3;
  uint64_t v6 = a2;
  if (a1)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    if (v8)
    {
      uint64_t v20 = v3;
      uint64_t v23 = MEMORY[0x263F8EE78];
      sub_259FE1544(0, v8, 0);
      uint64_t v9 = 0;
      unint64_t v10 = v23;
      uint64_t v11 = *(void *)(v23 + 16);
      uint64_t v12 = 40 * v11;
      do
      {
        __int16 v13 = *(unsigned __int8 *)(a1 + 32 + v9);
        uint64_t v23 = v10;
        long long v14 = *(void *)(v10 + 24);
        long long v15 = v11 + v9 + 1;
        if (v11 + v9 >= v14 >> 1)
        {
          sub_259FE1544(v14 > 1, v11 + v9 + 1, 1);
          unint64_t v10 = v23;
        }
        ++v9;
        *(void *)(v10 + 16) = v15;
        uint64_t v16 = v10 + v12;
        *(void *)(v16 + 32) = v13;
        *(void *)(v16 + 40) = 0;
        *(void *)(v16 + 48) = 0;
        *(void *)(v16 + 56) = 0;
        v12 += 40;
        *(_WORD *)(v16 + 64) = 1536;
      }
      while (v8 != v9);
      swift_bridgeObjectRelease();
      uint64_t v4 = v20;
      __int16 v5 = a3;
      uint64_t v6 = a2;
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v10 = MEMORY[0x263F8EE78];
    }
    uint64_t v23 = v10;
    __n128 v24 = 0;
    uint64_t v25 = 0;
    long long v26 = 0;
    uint64_t v27 = 0x8000;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long v22 = *(void *)(v4 + 16);
    *(void *)(v4 + 16) = 0x8000000000000000;
    sub_259FFB7FC((uint64_t)&v23, v6, v5, isUniquelyReferenced_nonNull_native);
    *(void *)(v4 + 16) = v22;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_259FFB0CC(a2, a3, (uint64_t)&v23);
    swift_bridgeObjectRelease();
    return sub_259FB66F8(v23, v24, v25, v26, v27);
  }
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int16 v25;

  uint64_t v4 = v3;
  uint64_t v6 = a2;
  if (a1)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    if (v8)
    {
      uint64_t v21 = MEMORY[0x263F8EE78];
      sub_259FE1544(0, v8, 0);
      uint64_t v9 = 0;
      unint64_t v10 = v21;
      uint64_t v11 = *(void *)(v21 + 16);
      uint64_t v12 = 40 * v11;
      do
      {
        __int16 v13 = *(unsigned int *)(a1 + 4 * v9 + 32);
        uint64_t v21 = v10;
        long long v14 = *(void *)(v10 + 24);
        long long v15 = v11 + v9 + 1;
        if (v11 + v9 >= v14 >> 1)
        {
          sub_259FE1544(v14 > 1, v11 + v9 + 1, 1);
          unint64_t v10 = v21;
        }
        ++v9;
        *(void *)(v10 + 16) = v15;
        uint64_t v16 = v10 + v12;
        *(void *)(v16 + 32) = v13;
        *(void *)(v16 + 40) = 0;
        *(void *)(v16 + 48) = 0;
        *(void *)(v16 + 56) = 0;
        v12 += 40;
        *(_WORD *)(v16 + 64) = 0;
      }
      while (v8 != v9);
      swift_bridgeObjectRelease();
      uint64_t v6 = a2;
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v10 = MEMORY[0x263F8EE78];
    }
    uint64_t v21 = v10;
    long long v22 = 0;
    uint64_t v23 = 0;
    __n128 v24 = 0;
    uint64_t v25 = 0x8000;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *(void *)(v4 + 16);
    *(void *)(v4 + 16) = 0x8000000000000000;
    sub_259FFB7FC((uint64_t)&v21, v6, a3, isUniquelyReferenced_nonNull_native);
    *(void *)(v4 + 16) = v20;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_259FFB0CC(a2, a3, (uint64_t)&v21);
    swift_bridgeObjectRelease();
    return sub_259FB66F8(v21, v22, v23, v24, v25);
  }
}

{
  return sub_259FEAF9C(a1, a2, a3, 2);
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  uint64_t v4 = v3;
  __int16 v5 = a3;
  uint64_t v6 = a2;
  if (a1)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    if (v8)
    {
      uint64_t v20 = v3;
      uint64_t v23 = MEMORY[0x263F8EE78];
      sub_259FE1544(0, v8, 0);
      uint64_t v9 = 0;
      unint64_t v10 = v23;
      uint64_t v11 = *(void *)(v23 + 16);
      uint64_t v12 = 40 * v11;
      do
      {
        __int16 v13 = *(unsigned int *)(a1 + 32 + 4 * v9);
        uint64_t v23 = v10;
        long long v14 = *(void *)(v10 + 24);
        long long v15 = v11 + v9 + 1;
        if (v11 + v9 >= v14 >> 1)
        {
          sub_259FE1544(v14 > 1, v11 + v9 + 1, 1);
          unint64_t v10 = v23;
        }
        ++v9;
        *(void *)(v10 + 16) = v15;
        uint64_t v16 = v10 + v12;
        *(void *)(v16 + 32) = v13;
        *(void *)(v16 + 40) = 0;
        *(void *)(v16 + 48) = 0;
        *(void *)(v16 + 56) = 0;
        v12 += 40;
        *(_WORD *)(v16 + 64) = 256;
      }
      while (v8 != v9);
      swift_bridgeObjectRelease();
      uint64_t v4 = v20;
      __int16 v5 = a3;
      uint64_t v6 = a2;
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v10 = MEMORY[0x263F8EE78];
    }
    uint64_t v23 = v10;
    __n128 v24 = 0;
    uint64_t v25 = 0;
    long long v26 = 0;
    uint64_t v27 = 0x8000;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long v22 = *(void *)(v4 + 16);
    *(void *)(v4 + 16) = 0x8000000000000000;
    sub_259FFB7FC((uint64_t)&v23, v6, v5, isUniquelyReferenced_nonNull_native);
    *(void *)(v4 + 16) = v22;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_259FFB0CC(a2, a3, (uint64_t)&v23);
    swift_bridgeObjectRelease();
    return sub_259FB66F8(v23, v24, v25, v26, v27);
  }
}

{
  return sub_259FEAF9C(a1, a2, a3, 3);
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  uint64_t v4 = v3;
  __int16 v5 = a3;
  uint64_t v6 = a2;
  if (a1)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    if (v8)
    {
      uint64_t v20 = v3;
      uint64_t v23 = MEMORY[0x263F8EE78];
      sub_259FE1544(0, v8, 0);
      uint64_t v9 = 0;
      unint64_t v10 = v23;
      uint64_t v11 = *(void *)(v23 + 16);
      uint64_t v12 = 40 * v11;
      do
      {
        __int16 v13 = *(unsigned int *)(a1 + 32 + 4 * v9);
        uint64_t v23 = v10;
        long long v14 = *(void *)(v10 + 24);
        long long v15 = v11 + v9 + 1;
        if (v11 + v9 >= v14 >> 1)
        {
          sub_259FE1544(v14 > 1, v11 + v9 + 1, 1);
          unint64_t v10 = v23;
        }
        ++v9;
        *(void *)(v10 + 16) = v15;
        uint64_t v16 = v10 + v12;
        *(void *)(v16 + 32) = v13;
        *(void *)(v16 + 40) = 0;
        *(void *)(v16 + 48) = 0;
        *(void *)(v16 + 56) = 0;
        v12 += 40;
        *(_WORD *)(v16 + 64) = 1024;
      }
      while (v8 != v9);
      swift_bridgeObjectRelease();
      uint64_t v4 = v20;
      __int16 v5 = a3;
      uint64_t v6 = a2;
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v10 = MEMORY[0x263F8EE78];
    }
    uint64_t v23 = v10;
    __n128 v24 = 0;
    uint64_t v25 = 0;
    long long v26 = 0;
    uint64_t v27 = 0x8000;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long v22 = *(void *)(v4 + 16);
    *(void *)(v4 + 16) = 0x8000000000000000;
    sub_259FFB7FC((uint64_t)&v23, v6, v5, isUniquelyReferenced_nonNull_native);
    *(void *)(v4 + 16) = v22;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_259FFB0CC(a2, a3, (uint64_t)&v23);
    swift_bridgeObjectRelease();
    return sub_259FB66F8(v23, v24, v25, v26, v27);
  }
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  uint64_t v4 = v3;
  __int16 v5 = a3;
  uint64_t v6 = a2;
  if (a1)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    if (v8)
    {
      uint64_t v20 = v3;
      uint64_t v23 = MEMORY[0x263F8EE78];
      sub_259FE1544(0, v8, 0);
      uint64_t v9 = 0;
      unint64_t v10 = v23;
      uint64_t v11 = *(void *)(v23 + 16);
      uint64_t v12 = 40 * v11;
      do
      {
        __int16 v13 = *(void *)(a1 + 32 + 8 * v9);
        uint64_t v23 = v10;
        long long v14 = *(void *)(v10 + 24);
        long long v15 = v11 + v9 + 1;
        if (v11 + v9 >= v14 >> 1)
        {
          sub_259FE1544(v14 > 1, v11 + v9 + 1, 1);
          unint64_t v10 = v23;
        }
        ++v9;
        *(void *)(v10 + 16) = v15;
        uint64_t v16 = v10 + v12;
        *(void *)(v16 + 32) = v13;
        *(void *)(v16 + 40) = 0;
        *(void *)(v16 + 48) = 0;
        *(void *)(v16 + 56) = 0;
        v12 += 40;
        *(_WORD *)(v16 + 64) = 1280;
      }
      while (v8 != v9);
      swift_bridgeObjectRelease();
      uint64_t v4 = v20;
      __int16 v5 = a3;
      uint64_t v6 = a2;
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v10 = MEMORY[0x263F8EE78];
    }
    uint64_t v23 = v10;
    __n128 v24 = 0;
    uint64_t v25 = 0;
    long long v26 = 0;
    uint64_t v27 = 0x8000;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long v22 = *(void *)(v4 + 16);
    *(void *)(v4 + 16) = 0x8000000000000000;
    sub_259FFB7FC((uint64_t)&v23, v6, v5, isUniquelyReferenced_nonNull_native);
    *(void *)(v4 + 16) = v22;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_259FFB0CC(a2, a3, (uint64_t)&v23);
    swift_bridgeObjectRelease();
    return sub_259FB66F8(v23, v24, v25, v26, v27);
  }
}

{
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;

  if ((a1 & 0x100000000) != 0)
  {
    sub_259FFB0CC(a2, a3, (uint64_t)&v9);
    swift_bridgeObjectRelease();
    return sub_259FB66F8(v9, v10, v11, v12, v13);
  }
  else
  {
    uint64_t v9 = a1;
    unint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    __int16 v13 = 0;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *(void *)(v3 + 16);
    *(void *)(v3 + 16) = 0x8000000000000000;
    sub_259FFB7FC((uint64_t)&v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *(void *)(v3 + 16) = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

{
  return sub_259FF731C(a1, a2, a3, 256);
}

{
  return sub_259FF731C(a1, a2, a3, 1024);
}

void (*SchematizedDataComposer.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1, char a2)
{
  uint64_t v7 = malloc(0x70uLL);
  *a1 = v7;
  v7[12] = a3;
  v7[13] = v3;
  v7[11] = a2;
  v7[10] = SchematizedDataComposer.subscript.getter(a2, a3);
  return sub_259FE07AC;
}

{
  uint64_t v3;
  void *v7;
  uint64_t v8;

  uint64_t v7 = malloc(0x78uLL);
  *a1 = v7;
  v7[13] = a3;
  v7[14] = v3;
  v7[12] = a2;
  v7[10] = SchematizedDataComposer.subscript.getter(a2, a3);
  v7[11] = v8;
  return sub_259FF5BD8;
}

void sub_259FE07AC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 80);
  uint64_t v4 = *(void *)(*(void *)a1 + 96);
  uint64_t v5 = *(void *)(*(void *)a1 + 88);
  if (a2)
  {
    *uint64_t v2 = v3;
    v2[1] = 0;
    if (v3) {
      __int16 v6 = 0x8000;
    }
    else {
      __int16 v6 = -4096;
    }
    v2[2] = 0;
    v2[3] = 0;
    *((_WORD *)v2 + 16) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259FF4230((uint64_t)v2, v5, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    v2[5] = v3;
    v2[6] = 0;
    if (v3) {
      __int16 v7 = 0x8000;
    }
    else {
      __int16 v7 = -4096;
    }
    v2[7] = 0;
    v2[8] = 0;
    *((_WORD *)v2 + 36) = v7;
    swift_bridgeObjectRetain();
    sub_259FF4230((uint64_t)(v2 + 5), v5, v4);
  }
  free(v2);
}

uint64_t sub_259FE0888@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v10 = *(uint64_t (**)(void))(*(void *)(a1 + 8) + 8);
  uint64_t v60 = *(void *)(a1 + 8);
  uint64_t v61 = ObjectType;
  uint64_t v11 = v10();
  uint64_t v13 = *a2;
  if (!*(void *)(*a2 + 16) || (unint64_t v14 = sub_259FE120C(v11, v12), (v15 & 1) == 0))
  {
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  long long v54 = v10;
  uint64_t v16 = *(void *)(v13 + 56) + 40 * v14;
  int v17 = *(__int16 *)(v16 + 32);
  uint64_t v57 = *(void *)(v16 + 24);
  uint64_t v58 = *(void *)v16;
  unint64_t v55 = *(void *)(v16 + 8);
  uint64_t v56 = *(void *)(v16 + 16);
  sub_259FE3724(*(void *)v16, v55, v56, v57, *(_WORD *)(v16 + 32));
  swift_bridgeObjectRelease();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(a1 + 16))(v61, a1))
  {
    if ((v17 & 0x80000000) == 0)
    {
LABEL_23:
      uint64_t v62 = 0;
      unint64_t v63 = 0xE000000000000000;
      sub_25A00ED10();
      sub_25A00EA80();
      swift_getObjectType();
      MessageSchemaDescribing.asPublic()(a4, &v67);
      uint64_t v42 = v68;
      uint64_t v43 = swift_getObjectType();
      (*(void (**)(uint64_t))(*(void *)(v42 + 8) + 8))(v43);
      swift_unknownObjectRelease();
      sub_25A00EA80();
      swift_bridgeObjectRelease();
      sub_25A00EA80();
      ((void (*)(uint64_t, uint64_t))v54)(v61, v60);
      sub_25A00EA80();
      swift_bridgeObjectRelease();
      sub_25A00EA80();
      unint64_t v39 = 0xE000000000000000;
      sub_259FE36D0();
      swift_allocError();
      *(void *)uint64_t v40 = 0;
      char v41 = 3;
      goto LABEL_24;
    }
    uint64_t v67 = v58;
    if (*(void *)(v58 + 16))
    {
      uint64_t v26 = *(void *)(v58 + 32);
      unint64_t v27 = *(void *)(v58 + 40);
      uint64_t v28 = *(void *)(v58 + 48);
      uint64_t v51 = *(void *)(v58 + 56);
      __int16 v29 = *(unsigned __int8 *)(v58 + 64);
      __int16 v30 = v17;
      __int16 v31 = *(unsigned __int8 *)(v58 + 65);
      __int16 v53 = v30;
      sub_259FE3724(v58, v55, v56, v57, v30);
      __int16 v52 = v29;
      sub_259FDF0B0(v26, v27, v28, v51, v29, v31);
      sub_259FE4ABC(0, 1);
      if (*(void *)(v67 + 16))
      {
        uint64_t v32 = ((uint64_t (*)(uint64_t, uint64_t))v54)(v61, v60);
        uint64_t v34 = v33;
        v69[0] = v67;
        memset(&v69[1], 0, 24);
        __int16 v70 = 0x8000;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v62 = *a2;
        *a2 = 0x8000000000000000;
        sub_259FFB7FC((uint64_t)v69, v32, v34, isUniquelyReferenced_nonNull_native);
        *a2 = v62;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v49 = ((uint64_t (*)(uint64_t, uint64_t))v54)(v61, v60);
        sub_259FFB0CC(v49, v50, (uint64_t)&v62);
        swift_bridgeObjectRelease();
        sub_259FB66F8(v62, v63, v64, v65, v66);
      }
      uint64_t result = sub_259FB670C(v58, v55, v56, v57, v53);
      *(void *)a5 = v26;
      *(void *)(a5 + 8) = v27;
      __int16 v19 = v52 | (v31 << 8);
      *(void *)(a5 + 16) = v28;
      *(void *)(a5 + 24) = v51;
      goto LABEL_8;
    }
    uint64_t v44 = ((uint64_t (*)(uint64_t, uint64_t))v54)(v61, v60);
    sub_259FFB0CC(v44, v45, (uint64_t)&v62);
    swift_bridgeObjectRelease();
    sub_259FB66F8(v62, v63, v64, v65, v66);
    uint64_t result = sub_259FB670C(v58, v55, v56, v57, v17);
LABEL_7:
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
    __int16 v19 = -256;
LABEL_8:
    *(_WORD *)(a5 + 32) = v19;
    return result;
  }
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 40))(v61, a1);
  if ((v20 & 0x100000000) != 0)
  {
LABEL_17:
    if ((v17 & 0x80000000) == 0)
    {
      sub_259FDF0B0(v58, v55, v56, v57, v17, SBYTE1(v17));
      uint64_t v24 = ((uint64_t (*)(uint64_t, uint64_t))v54)(v61, v60);
      sub_259FFB0CC(v24, v25, (uint64_t)&v62);
      swift_bridgeObjectRelease();
      sub_259FB66F8(v62, v63, v64, v65, v66);
      uint64_t result = sub_259FB670C(v58, v55, v56, v57, v17);
      *(void *)a5 = v58;
      *(void *)(a5 + 8) = v55;
      *(void *)(a5 + 16) = v56;
      *(void *)(a5 + 24) = v57;
      *(_WORD *)(a5 + 32) = v17;
      return result;
    }
    goto LABEL_23;
  }
  if (v20 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (uint64_t v21 = *(void **)a3, v22 = (int)v20, (int)v20 >= *(void *)(*(void *)a3 + 16)))
  {
    int v36 = v20;
    sub_25A00ED10();
    swift_bridgeObjectRelease();
    uint64_t v62 = 0x3A6567617373654DLL;
    unint64_t v63 = 0xE900000000000020;
    swift_getObjectType();
    MessageSchemaDescribing.asPublic()(a4, &v67);
    uint64_t v37 = v68;
    uint64_t v38 = swift_getObjectType();
    (*(void (**)(uint64_t))(*(void *)(v37 + 8) + 8))(v38);
    swift_unknownObjectRelease();
    sub_25A00EA80();
    swift_bridgeObjectRelease();
    sub_25A00EA80();
    ((void (*)(uint64_t, uint64_t))v54)(v61, v60);
    sub_25A00EA80();
    swift_bridgeObjectRelease();
    sub_25A00EA80();
    LODWORD(v67) = v36;
    sub_25A00EE30();
    sub_25A00EA80();
    swift_bridgeObjectRelease();
    unint64_t v39 = 0xE900000000000020;
    sub_259FE36D0();
    swift_allocError();
    *(void *)uint64_t v40 = 0x3A6567617373654DLL;
    char v41 = 1;
LABEL_24:
    *(void *)(v40 + 8) = v39;
    *(unsigned char *)(v40 + 16) = v41;
    swift_willThrow();
    return sub_259FB670C(v58, v55, v56, v57, v17);
  }
  if (!v21[2 * (int)v20 + 4])
  {
    int v46 = v20;
    sub_25A00ED10();
    swift_bridgeObjectRelease();
    uint64_t v62 = 0x3A6567617373654DLL;
    unint64_t v63 = 0xE900000000000020;
    swift_getObjectType();
    MessageSchemaDescribing.asPublic()(a4, &v67);
    uint64_t v47 = v68;
    uint64_t v48 = swift_getObjectType();
    (*(void (**)(uint64_t))(*(void *)(v47 + 8) + 8))(v48);
    swift_unknownObjectRelease();
    sub_25A00EA80();
    swift_bridgeObjectRelease();
    sub_25A00EA80();
    ((void (*)(uint64_t, uint64_t))v54)(v61, v60);
    sub_25A00EA80();
    swift_bridgeObjectRelease();
    sub_25A00EA80();
    LODWORD(v67) = v46;
    sub_25A00EE30();
    sub_25A00EA80();
    swift_bridgeObjectRelease();
    unint64_t v39 = 0xE900000000000020;
    sub_259FE36D0();
    swift_allocError();
    *(void *)uint64_t v40 = 0x3A6567617373654DLL;
    char v41 = 2;
    goto LABEL_24;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)a3 = v21;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_259FE48A8(v21);
    uint64_t v21 = (void *)result;
    *(void *)a3 = result;
  }
  if (v22 < v21[2])
  {
    uint64_t v23 = &v21[2 * v22];
    void v23[4] = 0;
    uint64_t v23[5] = 0;
    swift_unknownObjectRelease();
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

unint64_t sub_259FE120C(uint64_t a1, uint64_t a2)
{
  sub_25A00EF60();
  sub_25A00EA40();
  uint64_t v4 = sub_25A00EF90();
  return sub_259FE12C0(a1, a2, v4);
}

unint64_t sub_259FE1284(uint64_t a1)
{
  uint64_t v2 = sub_25A00EF50();
  return sub_259FE13A4(a1, v2);
}

unint64_t sub_259FE12C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_25A00EE40() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_25A00EE40() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_259FE13A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_259FE1440(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259FE18D8(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_259FE1460(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259FE176C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_259FE1480(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259FE1A84(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_259FE14A0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259FE1C28(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_259FE14C0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259FE1DB4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_259FE14E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259FE1F5C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_259FE1500(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259FE20C8(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_259FE1520@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_259FE0888(a1, *(uint64_t **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 40), a2);
}

uint64_t sub_259FE1544(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259FE2254(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_259FE1564(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259FE23CC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_259FE1584(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259FE2538(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_259FE15A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259FE26DC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_259FE15C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259FE2884(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_259FE15E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259FE2A2C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_259FE1604(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259FE2BD4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_259FE1624(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259FE2D44(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_259FE1644(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259FE315C(a1, a2, a3, *v3, &qword_26A402E28);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_259FE166C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259FE2EB0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_259FE168C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259FE3000(a1, a2, a3, *v3, &qword_26A402FB8);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_259FE16B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259FE315C(a1, a2, a3, *v3, &qword_26A402FB0);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_259FE16DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259FE3000(a1, a2, a3, *v3, &qword_26A402FA8);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_259FE1704(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259FE315C(a1, a2, a3, *v3, &qword_26A402FA0);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_259FE172C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259FE32B8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_259FE174C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259FE3418(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_259FE176C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E50);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  BOOL v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FE18D8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402FD8);
    unint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 56 * v8) {
      memmove(v10 + 4, a4 + 4, 56 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 56 * v8 || v12 >= v13 + 56 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402FE0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FE1A84(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402FE8);
    unint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 80 * v8) {
      memmove(v10 + 4, a4 + 4, 80 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 80 * v8 || v12 >= v13 + 80 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402DB0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FE1C28(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402F70);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402F78);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FE1DB4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402F80);
    unint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402F88);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FE1F5C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E60);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FE20C8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402EB0);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402EB8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FE2254(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E78);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 40 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FE23CC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402FD0);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FE2538(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402FF0);
    unint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402FF8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FE26DC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E58);
    unint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D90);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FE2884(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402F60);
    unint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 48 * v8) {
      memmove(v10 + 4, a4 + 4, 48 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 48 * v8 || v12 >= v13 + 48 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A403008);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FE2A2C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402F58);
    unint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 48 * v8) {
      memmove(v10 + 4, a4 + 4, 48 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 48 * v8 || v12 >= v13 + 48 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A403000);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FE2BD4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B3251A8);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    memcpy(v12, v13, v14);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FE2D44(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402FC8);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FE2EB0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402FC0);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FE3000(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    size_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 29;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 2);
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v14 = v11 + 32;
  char v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[4 * v9]) {
      memmove(v14, v15, 4 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[4 * v9] || v14 >= &v15[4 * v9])
  {
    memcpy(v14, v15, 4 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FE315C(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    size_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v14 = v11 + 32;
  char v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FE32B8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402F98);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FE3418(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402F90);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FE3578(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_25A0050CC(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_259FE3E50(v5);
  *a1 = v2;
  return result;
}

void *sub_259FE35E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E50);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  void v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_259FE48BC((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_259FB2B40();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

unint64_t sub_259FE36D0()
{
  unint64_t result = qword_26A402F68;
  if (!qword_26A402F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A402F68);
  }
  return result;
}

uint64_t sub_259FE3724(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  if (a5 < 0) {
    return swift_bridgeObjectRetain();
  }
  else {
    return sub_259FDF0B0(a1, a2, a3, a4, a5, SHIBYTE(a5));
  }
}

uint64_t sub_259FE3734(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  if (HIBYTE(a5) != 255) {
    return sub_259FDF0B0(result, a2, a3, a4, a5, SHIBYTE(a5));
  }
  return result;
}

uint64_t sub_259FE3748(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  if (HIBYTE(a5) != 255) {
    return sub_259FB671C(result, a2, a3, a4, a5, SHIBYTE(a5));
  }
  return result;
}

uint64_t sub_259FE3764()
{
  return 0;
}

uint64_t sub_259FE377C()
{
  return 0;
}

uint64_t destroy for SchematizedDataComposer()
{
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s17PoirotSchematizer23SchematizedDataComposerVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SchematizedDataComposer(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SchematizedDataComposer(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SchematizedDataComposer()
{
  return &type metadata for SchematizedDataComposer;
}

uint64_t destroy for SchematizedDataComposer.Container(uint64_t a1)
{
  return sub_259FB670C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(_WORD *)(a1 + 32));
}

uint64_t initializeWithCopy for SchematizedDataComposer.Container(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  __int16 v7 = *(_WORD *)(a2 + 32);
  sub_259FE3724(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(_WORD *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for SchematizedDataComposer.Container(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  __int16 v7 = *(_WORD *)(a2 + 32);
  sub_259FE3724(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  unint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  __int16 v12 = *(_WORD *)(a1 + 32);
  *(_WORD *)(a1 + 32) = v7;
  sub_259FB670C(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SchematizedDataComposer.Container(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(_WORD *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  unint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  __int16 v9 = *(_WORD *)(a1 + 32);
  *(_WORD *)(a1 + 32) = v3;
  sub_259FB670C(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for SchematizedDataComposer.Container(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF && *(unsigned char *)(a1 + 34)) {
    return (*(_DWORD *)a1 + 15);
  }
  unsigned int v3 = ((*(unsigned __int16 *)(a1 + 32) >> 11) & 0xE | (*(unsigned __int16 *)(a1 + 32) >> 15)) ^ 0xF;
  if (v3 >= 0xE) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SchematizedDataComposer.Container(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 15;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF) {
      *(unsigned char *)(result + 34) = 0;
    }
    if (a2)
    {
      *(_OWORD *)__n128 result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_WORD *)(result + 32) = (((-a2 >> 1) & 7) - 8 * (_WORD)a2) << 12;
    }
  }
  return result;
}

uint64_t sub_259FE3AC8(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 32) >> 15;
}

uint64_t sub_259FE3AD4(uint64_t result)
{
  *(_WORD *)(result + 32) &= ~0x8000u;
  return result;
}

uint64_t sub_259FE3AE4(uint64_t result, __int16 a2)
{
  *(_WORD *)(result + 32) = *(_WORD *)(result + 32) & 0xFFF | (a2 << 15);
  return result;
}

ValueMetadata *type metadata accessor for SchematizedDataComposer.Container()
{
  return &type metadata for SchematizedDataComposer.Container;
}

uint64_t sub_259FE3B0C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 3u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for SchematizedDataComposerError(uint64_t a1)
{
  return sub_259FE3B34(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_259FE3B34(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 3u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s17PoirotSchematizer28SchematizedDataComposerErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_259FE3B0C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SchematizedDataComposerError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_259FE3B0C(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_259FE3B34(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SchematizedDataComposerError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_259FE3B34(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SchematizedDataComposerError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SchematizedDataComposerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_259FE3CC4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SchematizedDataComposerError()
{
  return &type metadata for SchematizedDataComposerError;
}

uint64_t sub_259FE3CDC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v8 = 4 * v5;
    if (v5 <= 0)
    {
      __int16 v9 = (void *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 32 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E70);
      __int16 v9 = (void *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 1;
      }
      uint64_t v9[2] = v5;
      v9[3] = 2 * (v11 >> 5);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FE3E50(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_25A00EE20();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_259FE453C(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  unint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      uint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          int64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_259FE460C((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int64_t v97 = sub_25A004EB4((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          int64_t v100 = &v97[16 * v96 + 32];
          *(void *)int64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_25A00EB90();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    size_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    int v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_25A00EE40();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_25A00EE40()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_25A004A90(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_25A004A90((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        BOOL v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        char v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_259FE460C((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_25A00EE40() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_25A00EDA0();
  __break(1u);
  return result;
}

uint64_t sub_259FE453C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_25A00EE40(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_259FE460C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      int v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_25A00EE40() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    size_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_25A00EE40() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_25A004B8C((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

void *sub_259FE48A8(void *a1)
{
  return sub_259FC9F58(0, a1[2], 0, a1);
}

uint64_t sub_259FE48BC(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    void v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_259FE4ABC(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_259FC9D14(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_23;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_29;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    unint64_t v16 = (char *)&v4[5 * a2 + 4];
    size_t v17 = 40 * v15;
    if (40 * a1 < 40 * a2 || (&v4[5 * a1 + 4] < (void *)&v16[v17] ? (BOOL v18 = a1 == a2) : (BOOL v18 = 0), !v18)) {
      uint64_t result = (uint64_t)memmove(&v4[5 * a1 + 4], v16, v17);
    }
    uint64_t v19 = v4[2];
    BOOL v14 = __OFADD__(v19, v8);
    uint64_t v20 = v19 - v7;
    if (!v14)
    {
      _OWORD v4[2] = v20;
LABEL_23:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_30;
  }
LABEL_31:
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_259FE4C4C(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  v17[3] = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) != 0) {
    uint64_t v5 = HIBYTE(a4) & 0xF;
  }
  else {
    uint64_t v5 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    uint64_t v16 = a4 & 0xFFFFFFFFFFFFFFLL;
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    while (1)
    {
      if ((a4 & 0x1000000000000000) != 0)
      {
        int v10 = sub_25A00ED00();
      }
      else
      {
        if ((a4 & 0x2000000000000000) != 0)
        {
          v17[0] = a3;
          v17[1] = v16;
        }
        else if ((a3 & 0x1000000000000000) == 0)
        {
          sub_25A00ED30();
        }
        int v10 = sub_25A00ED40();
      }
      uint64_t v12 = v11;
      LODWORD(v17[0]) = v10;
      char v13 = a1(v17);
      if (v4)
      {
        swift_bridgeObjectRelease();
        return v14 & 1;
      }
      if ((v13 & 1) == 0) {
        break;
      }
      v9 += v12;
      if (v9 >= v5)
      {
        swift_bridgeObjectRelease();
        char v14 = 1;
        return v14 & 1;
      }
    }
    swift_bridgeObjectRelease();
    char v14 = 0;
  }
  else
  {
    char v14 = 1;
  }
  return v14 & 1;
}

uint64_t sub_259FE4D90()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A403048);
  *(void *)&long long v17 = sub_25A00E9F0();
  *((void *)&v17 + 1) = v1;
  sub_25A00EA80();
  uint64_t v2 = v17;
  sub_259FE63E0(v0, &v17);
  switch(v21)
  {
    case 1:
      uint64_t v8 = v18;
      uint64_t v9 = v19;
      uint64_t v10 = v20;
      sub_25A00ED10();
      sub_25A00EA80();
      sub_25A00EA80();
      sub_25A00EA80();
      uint64_t v11 = sub_259FE50C8(0, 0xE000000000000000, v8, v9, v10, v2);
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 2:
      uint64_t v4 = *((void *)&v17 + 1);
      uint64_t v3 = v17;
      uint64_t v5 = v18;
      uint64_t v6 = 0x20676E697373694DLL;
      unint64_t v12 = 0xED00007865646E69;
      goto LABEL_9;
    case 3:
      uint64_t v13 = *((void *)&v17 + 1);
      uint64_t v14 = v18;
      uint64_t v15 = v19;
      sub_25A00ED10();
      swift_bridgeObjectRelease();
      sub_25A00EE30();
      sub_25A00EA80();
      swift_bridgeObjectRelease();
      sub_25A00EA80();
      uint64_t v11 = sub_259FE50C8(0xD000000000000020, 0x800000025A010070, v13, v14, v15, v2);
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 4:
      uint64_t v4 = *((void *)&v17 + 1);
      uint64_t v3 = v17;
      uint64_t v5 = v18;
      uint64_t v6 = 0xD000000000000017;
      uint64_t v7 = "Missing closing bracket";
      goto LABEL_7;
    case 5:
      uint64_t v4 = *((void *)&v17 + 1);
      uint64_t v3 = v17;
      uint64_t v5 = v18;
      unint64_t v12 = 0x800000025A010030;
      uint64_t v6 = 0xD000000000000011;
      goto LABEL_9;
    case 6:
      sub_25A00ED10();
      swift_bridgeObjectRelease();
      sub_25A00EA80();
      return v2;
    default:
      uint64_t v4 = *((void *)&v17 + 1);
      uint64_t v3 = v17;
      uint64_t v5 = v18;
      uint64_t v6 = 0xD000000000000012;
      uint64_t v7 = "Missing field name";
LABEL_7:
      unint64_t v12 = (unint64_t)(v7 - 32) | 0x8000000000000000;
LABEL_9:
      uint64_t v11 = sub_259FE50C8(v6, v12, v3, v4, v5, v2);
LABEL_10:
      swift_bridgeObjectRelease();
      return v11;
  }
}

uint64_t sub_259FE50C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = sub_25A00EAE0();
  MEMORY[0x25A2F2240](32, 0xE100000000000000, v7);
  swift_bridgeObjectRetain();
  sub_25A00EA80();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25A00EA80();
  sub_25A00EA80();
  sub_25A00EA80();
  swift_bridgeObjectRelease();
  sub_25A00EA80();
  sub_25A00EA80();
  return a6;
}

uint64_t sub_259FE51E0()
{
  sub_259FE63E0(v0, v2);
  return sub_259FE4D90();
}

uint64_t sub_259FE5224()
{
  uint64_t v0 = sub_25A00E250();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  uint64_t v7 = (char *)&v10 - v6;
  __swift_allocate_value_buffer(v5, qword_26A403010);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A403010);
  sub_25A00E230();
  sub_25A00E200();
  sub_25A00E220();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  return ((uint64_t (*)(char *, uint64_t))v8)(v7, v0);
}

uint64_t sub_259FE535C()
{
  uint64_t v0 = sub_25A00E250();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v2, qword_26A403028);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A403028);
  if (qword_26A402CC8 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v0, (uint64_t)qword_26A403010);
  sub_25A00E210();
  sub_25A00E220();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

unint64_t sub_259FE5498(uint64_t a1, unint64_t a2)
{
  uint64_t v80 = sub_25A00EC40();
  uint64_t v5 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v79 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25A00E250();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v11 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v11)
  {
    sub_259FE5E8C();
    swift_allocError();
    *(_OWORD *)uint64_t v56 = 0u;
    *(_OWORD *)(v56 + 16) = 0u;
    *(void *)(v56 + 32) = 0;
    *(unsigned char *)(v56 + 40) = 6;
    swift_willThrow();
    return a2;
  }
  uint64_t v85 = v2;
  id v12 = objc_allocWithZone(MEMORY[0x263F08B08]);
  swift_bridgeObjectRetain();
  uint64_t v73 = a1;
  uint64_t v13 = (void *)sub_25A00E990();
  unint64_t v74 = a2;
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v12, sel_initWithString_, v13);

  objc_msgSend(v14, sel_setCharactersToBeSkipped_, 0);
  uint64_t v82 = (uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16);
  unint64_t v83 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v77 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v78 = (void (**)(char *, void, uint64_t))(v5 + 104);
  a2 = MEMORY[0x263F8EE78];
  unsigned int v76 = *MEMORY[0x263F07D68];
  while (1)
  {
    uint64_t v17 = sub_25A00EC10();
    if (qword_26A402CD0 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v7, (uint64_t)qword_26A403028);
    uint64_t v18 = sub_25A00EC30();
    if (!v19)
    {
      swift_bridgeObjectRelease();
      sub_259FE5E8C();
      swift_allocError();
      unint64_t v61 = v74;
      *(void *)uint64_t v62 = v73;
      *(void *)(v62 + 8) = v61;
      *(void *)(v62 + 24) = 0;
      *(void *)(v62 + 32) = 0;
      *(void *)(v62 + 16) = v17;
      *(unsigned char *)(v62 + 40) = 0;
      goto LABEL_46;
    }
    uint64_t v20 = v19;
    uint64_t v84 = v18;
    uint64_t v21 = sub_25A00EB10();
    unint64_t v23 = v22;
    if (qword_26A402CC8 != -1) {
      swift_once();
    }
    uint64_t v24 = __swift_project_value_buffer(v7, (uint64_t)qword_26A403010);
    uint64_t v25 = (*v82)(v10, v24, v7);
    MEMORY[0x270FA5388](v25);
    *(&v73 - 2) = (uint64_t)v10;
    swift_bridgeObjectRetain();
    uint64_t v26 = v85;
    char v27 = sub_259FE4C4C((uint64_t (*)(void *))sub_259FE5EE0, (uint64_t)(&v73 - 4), v21, v23);
    uint64_t v85 = v26;
    swift_bridgeObjectRelease_n();
    uint64_t v28 = *v83;
    (*v83)(v10, v7);
    if ((v27 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_259FE5E8C();
      swift_allocError();
      *(void *)uint64_t v63 = v84;
      *(void *)(v63 + 8) = v20;
      unint64_t v64 = v74;
      *(void *)(v63 + 16) = v73;
      *(void *)(v63 + 24) = v64;
      *(void *)(v63 + 32) = v17;
      char v65 = 1;
      goto LABEL_45;
    }
    if (objc_msgSend(v14, sel_isAtEnd))
    {
LABEL_24:
      uint64_t v38 = 0;
      char v46 = 1;
      goto LABEL_27;
    }
    id v29 = objc_msgSend(v14, sel_string);
    sub_25A00E9A0();

    sub_25A00EC10();
    uint64_t v30 = sub_25A00EB10();
    uint64_t v32 = v31;
    swift_bridgeObjectRelease();
    if (v30 == 91 && v32 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v33 = sub_25A00EE40();
      swift_bridgeObjectRelease();
      if ((v33 & 1) == 0) {
        goto LABEL_24;
      }
    }
    uint64_t v81 = (void *)a2;
    id v34 = objc_msgSend(v14, sel_string);
    sub_25A00E9A0();

    sub_25A00EC10();
    sub_25A00EA70();
    swift_bridgeObjectRelease();
    sub_25A00EC20();
    sub_25A00E1F0();
    sub_25A00EC30();
    swift_bridgeObjectRelease();
    uint64_t v35 = v10;
    a2 = v7;
    v28(v10, v7);
    uint64_t v75 = sub_25A00EC10();
    uint64_t v36 = v79;
    uint64_t v37 = v80;
    (*v78)(v79, v76, v80);
    uint64_t v38 = sub_25A00EC50();
    char v40 = v39;
    (*v77)(v36, v37);
    if (v40)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_259FE5E8C();
      swift_allocError();
      unint64_t v68 = v74;
      *(void *)uint64_t v63 = v73;
      *(void *)(v63 + 8) = v68;
      *(void *)(v63 + 24) = 0;
      *(void *)(v63 + 32) = 0;
      *(void *)(v63 + 16) = v75;
      char v65 = 2;
      goto LABEL_45;
    }
    if (v38 < 0) {
      break;
    }
    uint64_t v10 = v35;
    sub_25A00E1F0();
    sub_25A00EC30();
    swift_bridgeObjectRelease();
    uint64_t v7 = a2;
    v28(v35, a2);
    unsigned __int8 v41 = objc_msgSend(v14, sel_isAtEnd);
    a2 = (unint64_t)v81;
    if (v41) {
      goto LABEL_41;
    }
    id v42 = objc_msgSend(v14, sel_string);
    sub_25A00E9A0();

    sub_25A00EC10();
    uint64_t v43 = sub_25A00EB10();
    uint64_t v45 = v44;
    swift_bridgeObjectRelease();
    if (v43 == 93 && v45 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v47 = sub_25A00EE40();
      swift_bridgeObjectRelease();
      if ((v47 & 1) == 0)
      {
LABEL_41:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v66 = v74;
        swift_bridgeObjectRetain();
        uint64_t v67 = sub_25A00EC10();
        sub_259FE5E8C();
        swift_allocError();
        *(void *)uint64_t v59 = v73;
        *(void *)(v59 + 8) = v66;
        *(void *)(v59 + 24) = 0;
        *(void *)(v59 + 32) = 0;
        *(void *)(v59 + 16) = v67;
        char v60 = 4;
        goto LABEL_42;
      }
    }
    id v48 = objc_msgSend(v14, sel_string);
    sub_25A00E9A0();

    sub_25A00EC10();
    sub_25A00EA70();
    swift_bridgeObjectRelease();
    sub_25A00EC20();
    char v46 = 0;
LABEL_27:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a2 = (unint64_t)sub_259FC9AF4(0, *(void *)(a2 + 16) + 1, 1, (void *)a2);
    }
    unint64_t v50 = *(void *)(a2 + 16);
    unint64_t v49 = *(void *)(a2 + 24);
    if (v50 >= v49 >> 1) {
      a2 = (unint64_t)sub_259FC9AF4((void *)(v49 > 1), v50 + 1, 1, (void *)a2);
    }
    *(void *)(a2 + 16) = v50 + 1;
    uint64_t v51 = (void *)(a2 + 32 * v50);
    v51[4] = v84;
    v51[5] = v20;
    v51[6] = v38;
    *((unsigned char *)v51 + 56) = v46;
    if (objc_msgSend(v14, sel_isAtEnd))
    {

      return a2;
    }
    if (objc_msgSend(v14, sel_isAtEnd))
    {
LABEL_37:
      swift_bridgeObjectRelease();
      unint64_t v57 = v74;
      swift_bridgeObjectRetain();
      uint64_t v58 = sub_25A00EC10();
      sub_259FE5E8C();
      swift_allocError();
      *(void *)uint64_t v59 = v73;
      *(void *)(v59 + 8) = v57;
      *(void *)(v59 + 24) = 0;
      *(void *)(v59 + 32) = 0;
      *(void *)(v59 + 16) = v58;
      char v60 = 5;
LABEL_42:
      *(unsigned char *)(v59 + 40) = v60;
      goto LABEL_47;
    }
    id v52 = objc_msgSend(v14, sel_string);
    sub_25A00E9A0();

    sub_25A00EC10();
    uint64_t v53 = sub_25A00EB10();
    uint64_t v55 = v54;
    swift_bridgeObjectRelease();
    if (v53 == 46 && v55 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v15 = sub_25A00EE40();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0) {
        goto LABEL_37;
      }
    }
    id v16 = objc_msgSend(v14, sel_string);
    sub_25A00E9A0();

    sub_25A00EC10();
    sub_25A00EA70();
    swift_bridgeObjectRelease();
    sub_25A00EC20();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FE5E8C();
  swift_allocError();
  uint64_t v70 = v73;
  unint64_t v69 = v74;
  *(void *)uint64_t v63 = v38;
  *(void *)(v63 + 8) = v70;
  uint64_t v71 = v75;
  *(void *)(v63 + 16) = v69;
  *(void *)(v63 + 24) = v71;
  *(void *)(v63 + 32) = 0;
  char v65 = 3;
LABEL_45:
  *(unsigned char *)(v63 + 40) = v65;
LABEL_46:
  swift_bridgeObjectRetain();
LABEL_47:
  swift_willThrow();

  return a2;
}

unint64_t sub_259FE5E8C()
{
  unint64_t result = qword_26A403040;
  if (!qword_26A403040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A403040);
  }
  return result;
}

uint64_t sub_259FE5EE0()
{
  return sub_259FB681C() & 1;
}

uint64_t sub_259FE5F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 <= 5u)
  {
    if (((1 << a6) & 0x35) == 0 && a6 == 1) {
      swift_bridgeObjectRetain();
    }
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for PropertyPathUtil.Error(uint64_t a1)
{
  return sub_259FE5F90(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
}

uint64_t sub_259FE5F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 <= 5u)
  {
    if (((1 << a6) & 0x35) == 0 && a6 == 1) {
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PropertyPathUtil.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 40);
  sub_259FE5F00(*(void *)a2, v4, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for PropertyPathUtil.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 40);
  sub_259FE5F00(*(void *)a2, v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  unsigned __int8 v14 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  sub_259FE5F90(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for PropertyPathUtil.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v3;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_259FE5F90(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for PropertyPathUtil.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 250);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 6) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PropertyPathUtil.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 - 250;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_259FE61F8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 5u) {
    return *(unsigned __int8 *)(a1 + 40);
  }
  else {
    return (*(_DWORD *)a1 + 6);
  }
}

uint64_t sub_259FE6210(uint64_t result, unsigned int a2)
{
  if (a2 >= 6)
  {
    *(void *)uint64_t result = a2 - 6;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 6;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PropertyPathUtil.Error()
{
  return &type metadata for PropertyPathUtil.Error;
}

uint64_t initializeWithCopy for PropertyPathElement(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PropertyPathElement(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PropertyPathElement(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for PropertyPathElement(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PropertyPathElement(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PropertyPathElement()
{
  return &type metadata for PropertyPathElement;
}

_OWORD *sub_259FE63E0(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(_OWORD *)((char *)a2 + 25) = *(long long *)((char *)a1 + 25);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

ValueMetadata *type metadata accessor for PropertyPathUtil()
{
  return &type metadata for PropertyPathUtil;
}

uint64_t sub_259FE6408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  void (*v12)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  void v21[2];
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;

  uint64_t v7 = MEMORY[0x263F8EE78];
  sub_259FB24C8(MEMORY[0x263F8EE78]);
  uint64_t v24 = sub_259FB0620(v7);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(ObjectType, a2);
  swift_unknownObjectRetain();
  sub_259FE6B18(v9, &v24, a1, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (v3)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = a3;
    unint64_t v11 = v24;
    uint64_t v12 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 24);
    swift_bridgeObjectRetain_n();
    v12(v21, ObjectType, a2);
    uint64_t v13 = v21[0];
    if (v21[0])
    {
      char v15 = v22;
      unsigned __int8 v14 = v23;
      id v16 = v21[1];
      sub_259FAE450(v22, v23);
      sub_259FAFD34(v13, v16, v15, v14);
    }
    else
    {
      char v15 = 0;
      unsigned __int8 v14 = 0xF000000000000000;
    }
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 32);
    sub_259FAF3C4(v15, v14);
    uint64_t v18 = v17(ObjectType, a2);
    uint64_t v19 = sub_259FE6964(v18);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_retain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v15, v14);
    sub_259FAF410(v15, v14);
    swift_bridgeObjectRelease_n();
    sub_259FAF410(v15, v14);
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v20 = v11;
    v20[1] = v15;
    long long v20[2] = v14;
    v20[3] = v19;
  }
  return result;
}

uint64_t EnumManifest.init(values:options:valueOptions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  sub_259FB24C8(MEMORY[0x263F8EE78]);
  swift_bridgeObjectRetain();
  sub_259FAF3C4(a2, a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_259FAF3C4(a2, a3);
  swift_bridgeObjectRetain();
  sub_259FAF410(a2, a3);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  sub_259FAF410(a2, a3);
  uint64_t result = swift_bridgeObjectRelease();
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t EnumManifest.values.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EnumManifest.values.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*EnumManifest.values.modify())()
{
  return nullsub_1;
}

uint64_t EnumManifest.options.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_259FAF3C4(v1, *(void *)(v0 + 16));
  return v1;
}

uint64_t EnumManifest.options.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_259FAF410(*(void *)(v2 + 8), *(void *)(v2 + 16));
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*EnumManifest.options.modify())()
{
  return nullsub_1;
}

uint64_t EnumManifest.valueOptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EnumManifest.valueOptions.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*EnumManifest.valueOptions.modify())()
{
  return nullsub_1;
}

uint64_t EnumManifest.nextAvailableValue.getter()
{
  int64_t v1 = 0;
  uint64_t v2 = *v0;
  uint64_t result = 1;
  uint64_t v4 = 1 << *(unsigned char *)(*v0 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v7 = *(void *)(v2 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v8 = v5 & v7;
  int64_t v9 = (unint64_t)(v4 + 63) >> 6;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v10 | (v1 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v1 << 6))
  {
    uint64_t v15 = *(void *)(*(void *)(*v0 + 56) + 8 * i);
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16)
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    if (v17 > result) {
      uint64_t result = v17;
    }
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v1 + 1;
    if (__OFADD__(v1, 1)) {
      goto LABEL_30;
    }
    if (v12 >= v9) {
      return result;
    }
    unint64_t v13 = *(void *)(v6 + 8 * v12);
    ++v1;
    if (!v13)
    {
      int64_t v1 = v12 + 1;
      if (v12 + 1 >= v9) {
        return result;
      }
      unint64_t v13 = *(void *)(v6 + 8 * v1);
      if (!v13)
      {
        int64_t v1 = v12 + 2;
        if (v12 + 2 >= v9) {
          return result;
        }
        unint64_t v13 = *(void *)(v6 + 8 * v1);
        if (!v13)
        {
          int64_t v1 = v12 + 3;
          if (v12 + 3 >= v9) {
            return result;
          }
          unint64_t v13 = *(void *)(v6 + 8 * v1);
          if (!v13)
          {
            int64_t v1 = v12 + 4;
            if (v12 + 4 >= v9) {
              return result;
            }
            unint64_t v13 = *(void *)(v6 + 8 * v1);
            if (!v13) {
              break;
            }
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 5;
  if (v14 >= v9) {
    return result;
  }
  unint64_t v13 = *(void *)(v6 + 8 * v14);
  if (v13)
  {
    int64_t v1 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v1 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v1 >= v9) {
      return result;
    }
    unint64_t v13 = *(void *)(v6 + 8 * v1);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_259FE6964(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D08);
  uint64_t result = sub_25A00EDC0();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = result + 64;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    uint64_t v16 = *(void *)(*(void *)(a1 + 48) + 8 * i);
    uint64_t v17 = *(void *)(a1 + 56) + 32 * i;
    uint64_t result = *(void *)(v17 + 16);
    unint64_t v18 = *(void *)(v17 + 24);
    *(void *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v3[6] + 8 * i) = v16;
    uint64_t v19 = (uint64_t *)(v3[7] + 16 * i);
    *uint64_t v19 = result;
    v19[1] = v18;
    uint64_t v20 = v3[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v22;
    uint64_t result = sub_259FAE450(result, v18);
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v9) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v9) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v9) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_259FE6B18(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v39 = a1 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 56);
  int64_t v40 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      uint64_t v12 = (v9 - 1) & v9;
      unint64_t v13 = v11 | (v10 << 6);
    }
    else
    {
      BOOL v14 = __OFADD__(v10++, 1);
      if (v14) {
        goto LABEL_40;
      }
      if (v10 >= v40) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v39 + 8 * v10);
      if (!v15)
      {
        int64_t v16 = v10 + 1;
        if (v10 + 1 >= v40) {
          return swift_release();
        }
        unint64_t v15 = *(void *)(v39 + 8 * v16);
        if (!v15)
        {
          int64_t v16 = v10 + 2;
          if (v10 + 2 >= v40) {
            return swift_release();
          }
          unint64_t v15 = *(void *)(v39 + 8 * v16);
          if (!v15)
          {
            int64_t v16 = v10 + 3;
            if (v10 + 3 >= v40) {
              return swift_release();
            }
            unint64_t v15 = *(void *)(v39 + 8 * v16);
            if (!v15)
            {
              int64_t v16 = v10 + 4;
              if (v10 + 4 >= v40) {
                return swift_release();
              }
              unint64_t v15 = *(void *)(v39 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_41;
                  }
                  if (v10 >= v40) {
                    return swift_release();
                  }
                  unint64_t v15 = *(void *)(v39 + 8 * v10);
                  ++v16;
                  if (v15) {
                    goto LABEL_20;
                  }
                }
              }
            }
          }
        }
        int64_t v10 = v16;
      }
LABEL_20:
      uint64_t v12 = (v15 - 1) & v15;
      unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    uint64_t v17 = *(void *)(*(void *)(a1 + 48) + 8 * v13);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 48))(v17, ObjectType);
    if (v5) {
      return swift_release();
    }
    uint64_t v21 = v19;
    uint64_t v22 = v20;
    unint64_t v43 = v12;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = (void *)*a2;
    uint64_t v44 = (void *)*a2;
    uint64_t v25 = a2;
    *a2 = 0x8000000000000000;
    unint64_t v27 = sub_259FE120C(v21, v22);
    uint64_t v28 = v24[2];
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      break;
    }
    char v31 = v26;
    if (v24[3] >= v30)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        id v34 = v44;
        if (v26) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_259FFA5C4();
        id v34 = v44;
        if (v31) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_259FF88F4(v30, isUniquelyReferenced_nonNull_native);
      unint64_t v32 = sub_259FE120C(v21, v22);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_42;
      }
      unint64_t v27 = v32;
      id v34 = v44;
      if (v31)
      {
LABEL_4:
        *(void *)(v34[7] + 8 * v27) = v17;
        goto LABEL_5;
      }
    }
    v34[(v27 >> 6) + 8] |= 1 << v27;
    uint64_t v35 = (uint64_t *)(v34[6] + 16 * v27);
    *uint64_t v35 = v21;
    v35[1] = v22;
    *(void *)(v34[7] + 8 * v27) = v17;
    uint64_t v36 = v34[2];
    BOOL v14 = __OFADD__(v36, 1);
    uint64_t v37 = v36 + 1;
    if (v14) {
      goto LABEL_39;
    }
    _DWORD v34[2] = v37;
    swift_bridgeObjectRetain();
LABEL_5:
    a2 = v25;
    *uint64_t v25 = v34;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    unint64_t v9 = v43;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  uint64_t result = sub_25A00EF00();
  __break(1u);
  return result;
}

uint64_t _s17PoirotSchematizer12EnumManifestV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  unint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v5 = a2[1];
  unint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  if ((sub_259FCCA0C(*a1, *a2) & 1) == 0) {
    return 0;
  }
  if (v3 >> 60 == 15)
  {
    if (v6 >> 60 == 15) {
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
LABEL_6:
    sub_259FAF3C4(v2, v3);
    sub_259FAF3C4(v5, v6);
    sub_259FAF410(v2, v3);
    sub_259FAF410(v5, v6);
    return 0;
  }
  sub_259FAF3C4(v2, v3);
  sub_259FAF3C4(v5, v6);
  char v8 = sub_259FFCCD4(v2, v3, v5, v6);
  sub_259FAF410(v5, v6);
  sub_259FAF410(v2, v3);
  if ((v8 & 1) == 0) {
    return 0;
  }
LABEL_8:
  return sub_259FCCBA4(v4, v7);
}

uint64_t destroy for EnumManifest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >> 60 != 15) {
    sub_259FAE4A8(*(void *)(a1 + 8), v2);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EnumManifest(uint64_t a1, void *a2)
{
  *(void *)a1 = *a2;
  uint64_t v4 = a2 + 1;
  unint64_t v5 = a2[2];
  swift_bridgeObjectRetain();
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)v4;
  }
  else
  {
    uint64_t v6 = *v4;
    sub_259FAE450(*v4, v5);
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v5;
  }
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EnumManifest(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2 + 1;
  unint64_t v5 = a2[2];
  if (a1[2] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_259FAE450(*v4, a2[2]);
      uint64_t v8 = a1[1];
      unint64_t v9 = a1[2];
      a1[1] = v7;
      a1[2] = v5;
      sub_259FAE4A8(v8, v9);
      goto LABEL_8;
    }
    sub_259FAFB48((uint64_t)(a1 + 1));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  uint64_t v6 = *v4;
  sub_259FAE450(*v4, a2[2]);
  a1[1] = v6;
  a1[2] = v5;
LABEL_8:
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for EnumManifest(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2 + 1;
  unint64_t v5 = a1[2];
  if (v5 >> 60 != 15)
  {
    unint64_t v6 = a2[2];
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = a1[1];
      a1[1] = *v4;
      a1[2] = v6;
      sub_259FAE4A8(v7, v5);
      goto LABEL_6;
    }
    sub_259FAFB48((uint64_t)(a1 + 1));
  }
  *(_OWORD *)(a1 + 1) = *(_OWORD *)v4;
LABEL_6:
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for EnumManifest()
{
  return &type metadata for EnumManifest;
}

uint64_t static ProtoFirstOfHelper.getFirst(ofFields:fromDada:atFieldPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_259FE7208(a1, a2, a3, a4);
  if (v4) {
    return v6;
  }
  return result;
}

uint64_t sub_259FE7208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a3 - a2;
  if (a2) {
    unint64_t v6 = a3 - a2;
  }
  else {
    unint64_t v6 = 0;
  }
  uint64_t v43 = 0;
  if ((v6 & 0x8000000000000000) != 0) {
    goto LABEL_90;
  }
  unint64_t v8 = *(void *)(a4 + 16);
  uint64_t v42 = a1;
  if (!v8) {
    goto LABEL_52;
  }
  uint64_t v9 = 0;
  uint64_t v10 = a4 + 32;
  uint64_t v11 = a2 + 1;
  uint64_t v39 = a4 + 32;
  while (2)
  {
    uint64_t v40 = v9;
    uint64_t v12 = *(void *)(v10 + 8 * v9);
    while (1)
    {
      uint64_t v13 = v43;
      if ((v43 & 0x8000000000000000) == 0 && v43 >= v6) {
        return 0;
      }
      if (a2)
      {
        uint64_t v14 = v5;
        if (v43 >= v5) {
          goto LABEL_49;
        }
      }
      else
      {
        if ((v43 & 0x8000000000000000) == 0) {
          goto LABEL_49;
        }
        uint64_t v14 = 0;
      }
      unint64_t v15 = *(unsigned __int8 *)(a2 + v43);
      uint64_t v16 = v43 + 1;
      if (*(char *)(a2 + v43) < 0)
      {
        if (v16 >= v14) {
          goto LABEL_49;
        }
        v15 &= 0x7Fu;
        unint64_t v17 = 7;
        while (1)
        {
          uint64_t v16 = v13 + 2;
          v15 |= (unint64_t)(*(unsigned char *)(v11 + v13) & 0x7F) << v17;
          if ((*(unsigned char *)(v11 + v13) & 0x80) == 0) {
            break;
          }
          if (v16 < v14)
          {
            ++v13;
            BOOL v18 = v17 > 0x38;
            v17 += 7;
            if (!v18) {
              continue;
            }
          }
          goto LABEL_49;
        }
        uint64_t v43 = v13 + 2;
        if (v15 > 0xFFFFFFFE) {
          goto LABEL_49;
        }
      }
      else
      {
        ++v43;
      }
      if (v15 < 8 || (v15 & 6) == 6) {
        goto LABEL_49;
      }
      if (v12 == v15 >> 3) {
        break;
      }
      sub_259FC4550(v15);
      if (v4) {
        return v8;
      }
    }
    if (sub_259FAE500(v15) != 2)
    {
      sub_25A00ED10();
      sub_25A00EA80();
      sub_259FAE500(v15);
      sub_25A00ED90();
      sub_259FB3304();
      swift_allocError();
      *(void *)uint64_t v38 = 0;
      *(void *)(v38 + 8) = 0xE000000000000000;
      *(unsigned char *)(v38 + 16) = 5;
      goto LABEL_50;
    }
    if (a2)
    {
      uint64_t v20 = v5;
      a1 = v42;
      uint64_t v10 = v39;
      if (v16 >= v5)
      {
LABEL_49:
        sub_259FBA9FC();
        swift_allocError();
        *(void *)uint64_t v24 = 1;
        *(_OWORD *)(v24 + 8) = 0u;
        *(_OWORD *)(v24 + 24) = 0u;
        *(_OWORD *)(v24 + 40) = 0u;
        *(void *)(v24 + 56) = 0;
        *(unsigned char *)(v24 + 64) = 2;
LABEL_50:
        swift_willThrow();
        return v8;
      }
    }
    else
    {
      a1 = v42;
      uint64_t v10 = v39;
      if ((v16 & 0x8000000000000000) == 0) {
        goto LABEL_49;
      }
      uint64_t v20 = 0;
    }
    uint64_t v21 = *(unsigned __int8 *)(a2 + v16);
    uint64_t v22 = v16 + 1;
    if (*(char *)(a2 + v16) < 0)
    {
      if (v22 >= v20) {
        goto LABEL_49;
      }
      v21 &= 0x7Fu;
      unint64_t v23 = 7;
      while (1)
      {
        uint64_t v22 = v16 + 2;
        v21 |= (unint64_t)(*(unsigned char *)(v11 + v16) & 0x7F) << v23;
        if ((*(unsigned char *)(v11 + v16) & 0x80) == 0) {
          break;
        }
        if (v22 < v20)
        {
          ++v16;
          BOOL v27 = v23 >= 0x39;
          v23 += 7;
          if (!v27) {
            continue;
          }
        }
        goto LABEL_49;
      }
    }
    uint64_t v43 = v22;
    if (v22 < 0) {
      goto LABEL_90;
    }
    unint64_t v6 = v21 + v22;
    if (__CFADD__(v21, v22))
    {
      __break(1u);
LABEL_90:
      uint64_t result = sub_25A00EDA0();
      __break(1u);
      return result;
    }
    uint64_t v9 = v40 + 1;
    if (v40 + 1 != v8) {
      continue;
    }
    break;
  }
LABEL_52:
  uint64_t v41 = a1 + 56;
  while (1)
  {
    uint64_t v26 = v43;
    BOOL v27 = v43 >= 0 && v43 >= v6;
    if (v27) {
      return 0;
    }
    if (a2)
    {
      uint64_t v28 = v5;
      if (v43 >= v5) {
        goto LABEL_49;
      }
    }
    else
    {
      if ((v43 & 0x8000000000000000) == 0) {
        goto LABEL_49;
      }
      uint64_t v28 = 0;
    }
    unint64_t v29 = *(unsigned __int8 *)(a2 + v43);
    if (*(char *)(a2 + v43) < 0)
    {
      if (v43 + 1 >= v28) {
        goto LABEL_49;
      }
      v29 &= 0x7Fu;
      unint64_t v30 = 7;
      while (1)
      {
        v29 |= (unint64_t)(*(unsigned char *)(a2 + 1 + v26) & 0x7F) << v30;
        if ((*(unsigned char *)(a2 + 1 + v26) & 0x80) == 0) {
          break;
        }
        if (v26 + 2 < v28)
        {
          ++v26;
          BOOL v18 = v30 > 0x38;
          v30 += 7;
          if (!v18) {
            continue;
          }
        }
        goto LABEL_49;
      }
      uint64_t v43 = v26 + 2;
      if (v29 > 0xFFFFFFFE) {
        goto LABEL_49;
      }
    }
    else
    {
      ++v43;
    }
    if (v29 < 8 || (v29 & 6) == 6) {
      goto LABEL_49;
    }
    if (*(void *)(v42 + 16))
    {
      unint64_t v8 = v29 >> 3;
      uint64_t v32 = sub_25A00EF50();
      uint64_t v33 = -1 << *(unsigned char *)(v42 + 32);
      unint64_t v34 = v32 & ~v33;
      if ((*(void *)(v41 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34))
      {
        uint64_t v35 = *(void *)(v42 + 48);
        if (*(void *)(v35 + 8 * v34) == v8) {
          return v8;
        }
        uint64_t v36 = ~v33;
        unint64_t v37 = (v34 + 1) & v36;
        if ((*(void *)(v41 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37))
        {
          if (*(void *)(v35 + 8 * v37) == v8) {
            return v8;
          }
          while (1)
          {
            unint64_t v37 = (v37 + 1) & v36;
            if (((*(void *)(v41 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37) & 1) == 0) {
              break;
            }
            if (*(void *)(v35 + 8 * v37) == v8) {
              return v8;
            }
          }
        }
      }
    }
    sub_259FC4550(v29);
    if (v4) {
      return v8;
    }
  }
}

ValueMetadata *type metadata accessor for ProtoFirstOfHelper()
{
  return &type metadata for ProtoFirstOfHelper;
}

uint64_t dispatch thunk of SchemaDescribing.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SchemaDescribing.getHelp()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t (*SchematizedDataComposer.subscript.modify(uint64_t *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  *a1 = SchematizedDataComposer.subscript.getter(a2, a3);
  return sub_259FE7C1C;
}

{
  uint64_t v3;

  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  *a1 = SchematizedDataComposer.subscript.getter(a2, a3);
  return sub_259FE87DC;
}

{
  uint64_t v3;

  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  *a1 = SchematizedDataComposer.subscript.getter(a2, a3);
  return sub_259FE8D18;
}

{
  uint64_t v3;

  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  *a1 = SchematizedDataComposer.subscript.getter(a2, a3);
  return sub_259FE9C94;
}

{
  uint64_t v3;

  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  *a1 = SchematizedDataComposer.subscript.getter(a2, a3);
  return sub_259FEA12C;
}

{
  uint64_t v3;

  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  *a1 = SchematizedDataComposer.subscript.getter(a2, a3);
  return sub_259FEA5B0;
}

{
  uint64_t v3;

  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  *a1 = SchematizedDataComposer.subscript.getter(a2, a3);
  return sub_259FEA894;
}

{
  uint64_t v3;

  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  *a1 = SchematizedDataComposer.subscript.getter(a2, a3);
  return sub_259FEAD28;
}

{
  uint64_t v3;

  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  *a1 = SchematizedDataComposer.subscript.getter(a2, a3);
  return sub_259FEB1C8;
}

{
  uint64_t v3;

  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  *a1 = SchematizedDataComposer.subscript.getter(a2, a3);
  return sub_259FEB65C;
}

{
  uint64_t v3;

  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  *a1 = SchematizedDataComposer.subscript.getter(a2, a3);
  return sub_259FEBB88;
}

uint64_t sub_259FE7C1C(uint64_t *a1, char a2)
{
  return sub_259FE87F4(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FE8178(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  uint64_t v8 = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a5(v8, v6, v7);
}

uint64_t sub_259FE87DC(uint64_t *a1, char a2)
{
  return sub_259FE87F4(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FE87F4(uint64_t *a1, char a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = a1[2];
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a3(v5, v6, v4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))a3)(v5, v6, v4);
  }
}

uint64_t sub_259FE8D18(uint64_t *a1, char a2)
{
  return sub_259FE87F4(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FE9C94(uint64_t *a1, char a2)
{
  return sub_259FE87F4(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FEA12C(uint64_t *a1, char a2)
{
  return sub_259FE87F4(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FEA5B0(uint64_t *a1, char a2)
{
  return sub_259FE87F4(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FEA894(uint64_t *a1, char a2)
{
  return sub_259FE87F4(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FEAD28(uint64_t *a1, char a2)
{
  return sub_259FE87F4(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FEAF9C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v6 = a3;
  uint64_t v7 = a2;
  if (a1)
  {
    int64_t v9 = *(void *)(a1 + 16);
    if (v9)
    {
      uint64_t v22 = v4;
      uint64_t v25 = MEMORY[0x263F8EE78];
      sub_259FE1544(0, v9, 0);
      uint64_t v11 = 0;
      uint64_t v12 = v25;
      uint64_t v13 = *(void *)(v25 + 16);
      uint64_t v14 = 40 * v13;
      do
      {
        uint64_t v15 = *(void *)(a1 + 32 + 8 * v11);
        uint64_t v25 = v12;
        unint64_t v16 = *(void *)(v12 + 24);
        uint64_t v17 = v13 + v11 + 1;
        if (v13 + v11 >= v16 >> 1)
        {
          sub_259FE1544(v16 > 1, v13 + v11 + 1, 1);
          uint64_t v12 = v25;
        }
        ++v11;
        *(void *)(v12 + 16) = v17;
        uint64_t v18 = v12 + v14;
        *(void *)(v18 + 32) = v15;
        *(void *)(v18 + 40) = 0;
        *(void *)(v18 + 48) = 0;
        *(void *)(v18 + 56) = 0;
        *(unsigned char *)(v18 + 64) = 0;
        v14 += 40;
        *(unsigned char *)(v18 + 65) = a4;
      }
      while (v9 != v11);
      swift_bridgeObjectRelease();
      uint64_t v5 = v22;
      uint64_t v6 = a3;
      uint64_t v7 = a2;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v12 = MEMORY[0x263F8EE78];
    }
    uint64_t v25 = v12;
    unint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    __int16 v29 = 0x8000;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *(void *)(v5 + 16);
    *(void *)(v5 + 16) = 0x8000000000000000;
    sub_259FFB7FC((uint64_t)&v25, v7, v6, isUniquelyReferenced_nonNull_native);
    *(void *)(v5 + 16) = v24;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_259FFB0CC(a2, a3, (uint64_t)&v25);
    swift_bridgeObjectRelease();
    return sub_259FB66F8(v25, v26, v27, v28, v29);
  }
}

uint64_t sub_259FEB1C8(uint64_t *a1, char a2)
{
  return sub_259FE87F4(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FEB65C(uint64_t *a1, char a2)
{
  return sub_259FE87F4(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FEB8C8@<X0>(uint64_t *a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = a2(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t result = swift_unknownObjectRelease();
  *a3 = v7;
  return result;
}

uint64_t sub_259FEBB88(uint64_t *a1, char a2)
{
  return sub_259FE87F4(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FEBBA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
    sub_259FE1544(0, v3, 0);
    uint64_t v4 = v15;
    uint64_t v8 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v10 = *v8++;
      uint64_t v9 = v10;
      unint64_t v12 = *(void *)(v15 + 16);
      unint64_t v11 = *(void *)(v15 + 24);
      swift_unknownObjectRetain();
      if (v12 >= v11 >> 1) {
        sub_259FE1544(v11 > 1, v12 + 1, 1);
      }
      *(void *)(v15 + 16) = v12 + 1;
      uint64_t v13 = v15 + 40 * v12;
      *(void *)(v13 + 32) = a2;
      *(void *)(v13 + 40) = a3;
      *(void *)(v13 + 48) = v9;
      *(void *)(v13 + 56) = 0;
      *(_WORD *)(v13 + 64) = 1793;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_259FEBC98@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_259FEB8C8(a1, SchematizedDataComposer.subscript.getter, a2);
}

uint64_t sub_259FEBCC4(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_259FE8178(a1, a2, a3, a4, SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FEBCF0()
{
  return 0;
}

uint64_t sub_259FEBD00@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_259FEB8C8(a1, SchematizedDataComposer.subscript.getter, a2);
}

uint64_t sub_259FEBD2C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_259FE8178(a1, a2, a3, a4, SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FEBD58()
{
  return 0;
}

uint64_t sub_259FEBD68@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_259FEB8C8(a1, SchematizedDataComposer.subscript.getter, a2);
}

uint64_t sub_259FEBD94(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_259FE8178(a1, a2, a3, a4, SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FEBDC0()
{
  return 0;
}

uint64_t sub_259FEBDD0@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_259FEB8C8(a1, SchematizedDataComposer.subscript.getter, a2);
}

uint64_t sub_259FEBDFC(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_259FE8178(a1, a2, a3, a4, SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FEBE28()
{
  return 0;
}

uint64_t sub_259FEBE38@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_259FEB8C8(a1, SchematizedDataComposer.subscript.getter, a2);
}

uint64_t sub_259FEBE64(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_259FE8178(a1, a2, a3, a4, SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FEBE90()
{
  return 0;
}

uint64_t sub_259FEBEA0@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_259FEB8C8(a1, SchematizedDataComposer.subscript.getter, a2);
}

uint64_t sub_259FEBECC(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_259FE8178(a1, a2, a3, a4, SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FEBEF8()
{
  return 0;
}

uint64_t sub_259FEBF08@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_259FEB8C8(a1, SchematizedDataComposer.subscript.getter, a2);
}

uint64_t sub_259FEBF34(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_259FE8178(a1, a2, a3, a4, SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FEBF60()
{
  return 0;
}

uint64_t sub_259FEBF70@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_259FEB8C8(a1, SchematizedDataComposer.subscript.getter, a2);
}

uint64_t sub_259FEBF9C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_259FE8178(a1, a2, a3, a4, SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FEBFC8()
{
  return 0;
}

uint64_t sub_259FEBFD8@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_259FEB8C8(a1, SchematizedDataComposer.subscript.getter, a2);
}

uint64_t sub_259FEC004(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_259FE8178(a1, a2, a3, a4, SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FEC030()
{
  return 0;
}

uint64_t sub_259FEC040@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_259FEB8C8(a1, SchematizedDataComposer.subscript.getter, a2);
}

uint64_t sub_259FEC06C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_259FE8178(a1, a2, a3, a4, SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FEC098()
{
  return 0;
}

uint64_t sub_259FEC0A8@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_259FEB8C8(a1, SchematizedDataComposer.subscript.getter, a2);
}

uint64_t sub_259FEC0D4(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_259FE8178(a1, a2, a3, a4, SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FEC100()
{
  return 0;
}

uint64_t UnsafeAnyValue.asPublic()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_259FAEE8C(v1, (uint64_t)&v27);
  switch(v30)
  {
    case 1:
      *(void *)a1 = v27;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      __int16 v4 = 256;
      goto LABEL_17;
    case 2:
      *(void *)a1 = v27;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      __int16 v4 = 512;
      goto LABEL_17;
    case 3:
      *(void *)a1 = v27;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      __int16 v4 = 768;
      goto LABEL_17;
    case 4:
      *(void *)a1 = v27;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      __int16 v4 = 1024;
      goto LABEL_17;
    case 5:
      *(void *)a1 = v27;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      __int16 v4 = 1280;
      goto LABEL_17;
    case 6:
      *(void *)a1 = v27;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      __int16 v4 = 1536;
      goto LABEL_17;
    case 7:
      char v5 = v29;
      long long v6 = v28;
      *(_OWORD *)a1 = v27;
      *(_OWORD *)(a1 + 16) = v6;
      *(unsigned char *)(a1 + 32) = v5;
      *(unsigned char *)(a1 + 33) = 7;
      return result;
    case 8:
      sub_259FAF0F0(&v27, (uint64_t)&v24);
      uint64_t v7 = v25;
      uint64_t v8 = v26;
      __swift_project_boxed_opaque_existential_1(&v24, v25);
      *(void *)a1 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
      *(void *)(a1 + 8) = v9;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      __int16 v10 = 2048;
      goto LABEL_12;
    case 9:
      sub_259FAF0F0(&v27, (uint64_t)&v24);
      uint64_t v11 = v25;
      uint64_t v12 = v26;
      __swift_project_boxed_opaque_existential_1(&v24, v25);
      *(void *)a1 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
      *(void *)(a1 + 8) = v13;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      __int16 v10 = 2304;
LABEL_12:
      *(_WORD *)(a1 + 32) = v10;
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
      break;
    case 10:
      uint64_t v25 = MEMORY[0x263F8D3E8];
      uint64_t v26 = MEMORY[0x263F07B80];
      long long v23 = v27;
      long long v24 = v28;
      uint64_t v14 = __swift_project_boxed_opaque_existential_1(&v24, MEMORY[0x263F8D3E8]);
      uint64_t v15 = *v14;
      if (*v14 && (unint64_t v16 = (unsigned char *)v14[1], v17 = (uint64_t)&v16[-v15], v16 != (unsigned char *)v15))
      {
        if (v17 <= 14)
        {
          uint64_t v18 = sub_259FC3B50((unsigned char *)*v14, v16);
          unint64_t v19 = v21 & 0xFFFFFFFFFFFFFFLL;
          swift_unknownObjectRetain();
        }
        else
        {
          swift_unknownObjectRetain();
          if ((unint64_t)v17 >= 0x7FFFFFFF)
          {
            uint64_t v18 = sub_259FC3C98(v15, (uint64_t)v16);
            unint64_t v19 = v22 | 0x8000000000000000;
          }
          else
          {
            uint64_t v18 = sub_259FC3C14(v15, (uint64_t)v16);
            unint64_t v19 = v20 | 0x4000000000000000;
          }
        }
      }
      else
      {
        swift_unknownObjectRetain();
        uint64_t v18 = 0;
        unint64_t v19 = 0xC000000000000000;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
      uint64_t result = swift_unknownObjectRelease();
      *(_OWORD *)a1 = v23;
      *(void *)(a1 + 16) = v18;
      *(void *)(a1 + 24) = v19;
      __int16 v4 = 2560;
LABEL_17:
      *(_WORD *)(a1 + 32) = v4;
      break;
    default:
      *(void *)a1 = v27;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      *(_WORD *)(a1 + 32) = 0;
      break;
  }
  return result;
}

uint64_t AnyValue.asUnsafe<A>(_:)(void (*a1)(uint64_t *))
{
  uint64_t v3 = *(void *)v1;
  unint64_t v4 = *(void *)(v1 + 8);
  uint64_t v6 = *(void *)(v1 + 16);
  unint64_t v5 = *(void *)(v1 + 24);
  char v7 = *(unsigned char *)(v1 + 32);
  switch(*(unsigned char *)(v1 + 33))
  {
    case 1:
      LODWORD(v12) = *(void *)v1;
      char v9 = 1;
      goto LABEL_9;
    case 2:
      uint64_t v12 = *(void *)v1;
      char v9 = 2;
      goto LABEL_9;
    case 3:
      uint64_t v12 = *(void *)v1;
      char v9 = 3;
      goto LABEL_9;
    case 4:
      LODWORD(v12) = *(void *)v1;
      char v9 = 4;
      goto LABEL_9;
    case 5:
      uint64_t v12 = *(void *)v1;
      char v9 = 5;
      goto LABEL_9;
    case 6:
      LOBYTE(v12) = v3 & 1;
      char v9 = 6;
LABEL_9:
      char v17 = v9;
      goto LABEL_10;
    case 7:
      uint64_t v12 = *(void *)v1;
      unint64_t v13 = v4;
      uint64_t v14 = v6;
      unint64_t v15 = v5;
      LOBYTE(v16) = v7 & 1;
      char v17 = 7;
      swift_unknownObjectRetain();
      sub_259FB94E4(v6, v5, v7 & 1);
      goto LABEL_10;
    case 8:
      MEMORY[0x270FA5388](a1);
      return String.asUnsafe<A>(_:)();
    case 9:
      unint64_t v15 = MEMORY[0x263F06F78];
      unint64_t v16 = &protocol witness table for Data;
      uint64_t v12 = v3;
      unint64_t v13 = v4;
      char v17 = 9;
      sub_259FAE450(v3, v4);
      goto LABEL_10;
    case 0xA:
      uint64_t v18 = v11;
      MEMORY[0x270FA5388](a1);
      v11[1] = v2;
      v11[0] = swift_getObjectType();
      MEMORY[0x270FA5388](v11[0]);
      swift_unknownObjectRetain();
      sub_259FAE450(v6, v5);
      MessageSchemaDescribing.schematizing<A>(data:block:)();
      return sub_259FB671C(v3, v4, v6, v5, v7, 10);
    default:
      LODWORD(v12) = *(void *)v1;
      char v17 = 0;
LABEL_10:
      a1(&v12);
      return sub_259FAED74((uint64_t)&v12);
  }
}

uint64_t sub_259FEC6E0(_OWORD *a1, void (*a2)(_OWORD *))
{
  long long v3 = a1[1];
  v5[0] = *a1;
  v5[1] = v3;
  char v6 = 10;
  swift_unknownObjectRetain();
  a2(v5);
  return sub_259FAED74((uint64_t)v5);
}

uint64_t UnsafeAnyValue.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25A00EFA0();
  sub_259FAEE8C(v1, (uint64_t)&v15);
  switch(v18)
  {
    case 1:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
      sub_25A00EEC0();
      break;
    case 2:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
      sub_25A00EEB0();
      break;
    case 3:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
      sub_25A00EED0();
      break;
    case 4:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
      sub_25A00EE80();
      break;
    case 5:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
      sub_25A00EE70();
      break;
    case 6:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
      sub_25A00EE60();
      break;
    case 7:
      long long v2 = v16;
      char v3 = v17;
      long long v12 = v15;
      long long v13 = v16;
      LOBYTE(v14) = v17;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
      sub_259FECCA8();
      sub_25A00EE90();
      swift_unknownObjectRelease();
      sub_259FB680C(v2, *((uint64_t *)&v2 + 1), v3);
      break;
    case 8:
      sub_259FAF0F0(&v15, (uint64_t)&v12);
      uint64_t v4 = *((void *)&v13 + 1);
      uint64_t v5 = v14;
      __swift_project_boxed_opaque_existential_1(&v12, *((uint64_t *)&v13 + 1));
      (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
      sub_25A00EE50();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    case 9:
      sub_259FAF0F0(&v15, (uint64_t)&v12);
      uint64_t v6 = *((void *)&v13 + 1);
      uint64_t v7 = v14;
      __swift_project_boxed_opaque_existential_1(&v12, *((uint64_t *)&v13 + 1));
      uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(v6, v7);
      unint64_t v10 = v9;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
      sub_259FECC54();
      sub_25A00EE90();
      sub_259FAE4A8(v8, v10);
LABEL_12:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
      break;
    case 10:
      long long v12 = v15;
      long long v13 = v16;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
      sub_259FC4424();
      sub_25A00EE90();
      swift_unknownObjectRelease();
      break;
    default:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
      sub_25A00EEA0();
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

uint64_t sub_259FECB90(void *a1)
{
  return UnsafeAnyValue.encode(to:)(a1);
}

uint64_t sub_259FECBA8(_OWORD *a1)
{
  return sub_259FEC6E0(a1, *(void (**)(_OWORD *))(v1 + 24));
}

uint64_t sub_259FECBC8(_OWORD *a1)
{
  return sub_259FDA250(a1, *(uint64_t (**)(_OWORD *))(v1 + 24));
}

uint64_t sub_259FECBE8(uint64_t a1)
{
  long long v2 = *(void (**)(unsigned char *))(v1 + 24);
  sub_259FB3358(a1, (uint64_t)v4);
  v4[40] = 8;
  v2(v4);
  return sub_259FAED74((uint64_t)v4);
}

unint64_t sub_259FECC54()
{
  unint64_t result = qword_26A403050;
  if (!qword_26A403050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A403050);
  }
  return result;
}

unint64_t sub_259FECCA8()
{
  unint64_t result = qword_26A403058;
  if (!qword_26A403058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A403058);
  }
  return result;
}

uint64_t assignWithCopy for AnyValue(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 33);
    if (v4 >= 0xB) {
      unsigned int v4 = *(_DWORD *)a1 + 11;
    }
    switch(v4)
    {
      case 7u:
        swift_unknownObjectRelease();
        sub_259FB680C(*(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
        break;
      case 8u:
        swift_bridgeObjectRelease();
        break;
      case 9u:
        uint64_t v5 = *(void *)a1;
        unint64_t v6 = *(void *)(a1 + 8);
        goto LABEL_8;
      case 0xAu:
        swift_unknownObjectRelease();
        uint64_t v5 = *(void *)(a1 + 16);
        unint64_t v6 = *(void *)(a1 + 24);
LABEL_8:
        sub_259FAE4A8(v5, v6);
        break;
      default:
        break;
    }
    unsigned int v7 = *(unsigned __int8 *)(a2 + 33);
    if (v7 >= 0xB) {
      unsigned int v7 = *(_DWORD *)a2 + 11;
    }
    switch(v7)
    {
      case 1u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        char v8 = 1;
        goto LABEL_23;
      case 2u:
        *(void *)a1 = *(void *)a2;
        char v8 = 2;
        goto LABEL_23;
      case 3u:
        *(void *)a1 = *(void *)a2;
        char v8 = 3;
        goto LABEL_23;
      case 4u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        char v8 = 4;
        goto LABEL_23;
      case 5u:
        *(void *)a1 = *(void *)a2;
        char v8 = 5;
        goto LABEL_23;
      case 6u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        char v8 = 6;
        goto LABEL_23;
      case 7u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v9 = *(void *)(a2 + 16);
        uint64_t v10 = *(void *)(a2 + 24);
        char v11 = *(unsigned char *)(a2 + 32);
        swift_unknownObjectRetain();
        sub_259FB94E4(v9, v10, v11);
        *(void *)(a1 + 16) = v9;
        *(void *)(a1 + 24) = v10;
        *(unsigned char *)(a1 + 32) = v11;
        char v8 = 7;
        goto LABEL_23;
      case 8u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 33) = 8;
        swift_bridgeObjectRetain();
        return a1;
      case 9u:
        uint64_t v13 = *(void *)a2;
        unint64_t v12 = *(void *)(a2 + 8);
        sub_259FAE450(v13, v12);
        *(void *)a1 = v13;
        *(void *)(a1 + 8) = v12;
        char v8 = 9;
        goto LABEL_23;
      case 0xAu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v15 = *(void *)(a2 + 16);
        unint64_t v14 = *(void *)(a2 + 24);
        swift_unknownObjectRetain();
        sub_259FAE450(v15, v14);
        *(void *)(a1 + 16) = v15;
        *(void *)(a1 + 24) = v14;
        char v8 = 10;
LABEL_23:
        *(unsigned char *)(a1 + 33) = v8;
        break;
      default:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(unsigned char *)(a1 + 33) = 0;
        break;
    }
  }
  return a1;
}

uint64_t assignWithTake for AnyValue(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 33);
    if (v4 >= 0xB) {
      unsigned int v4 = *(_DWORD *)a1 + 11;
    }
    switch(v4)
    {
      case 7u:
        swift_unknownObjectRelease();
        sub_259FB680C(*(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
        break;
      case 8u:
        swift_bridgeObjectRelease();
        break;
      case 9u:
        uint64_t v5 = *(void *)a1;
        unint64_t v6 = *(void *)(a1 + 8);
        goto LABEL_8;
      case 0xAu:
        swift_unknownObjectRelease();
        uint64_t v5 = *(void *)(a1 + 16);
        unint64_t v6 = *(void *)(a1 + 24);
LABEL_8:
        sub_259FAE4A8(v5, v6);
        break;
      default:
        break;
    }
    unsigned int v7 = *(unsigned __int8 *)(a2 + 33);
    if (v7 >= 0xB) {
      unsigned int v7 = *(_DWORD *)a2 + 11;
    }
    switch(v7)
    {
      case 1u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        char v8 = 1;
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        char v8 = 2;
        break;
      case 3u:
        *(void *)a1 = *(void *)a2;
        char v8 = 3;
        break;
      case 4u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        char v8 = 4;
        break;
      case 5u:
        *(void *)a1 = *(void *)a2;
        char v8 = 5;
        break;
      case 6u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        char v8 = 6;
        break;
      case 7u:
        long long v9 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v9;
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        char v8 = 7;
        break;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v8 = 8;
        break;
      case 9u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v8 = 9;
        break;
      case 0xAu:
        long long v10 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v10;
        char v8 = 10;
        break;
      default:
        char v8 = 0;
        *(_DWORD *)a1 = *(_DWORD *)a2;
        break;
    }
    *(unsigned char *)(a1 + 33) = v8;
  }
  return a1;
}

uint64_t sub_259FED18C(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 33);
  if (result >= 0xB) {
    return (*(_DWORD *)a1 + 11);
  }
  return result;
}

uint64_t sub_259FED1A8(uint64_t result, unsigned int a2)
{
  if (a2 > 0xA)
  {
    *(unsigned char *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 11;
    LOBYTE(a2) = 11;
  }
  *(unsigned char *)(result + 33) = a2;
  return result;
}

uint64_t assignWithCopy for UnsafeAnyValue(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 0xB) {
      unsigned int v4 = *(_DWORD *)a1 + 11;
    }
    switch(v4)
    {
      case 7u:
        swift_unknownObjectRelease();
        sub_259FB680C(*(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
        break;
      case 8u:
      case 9u:
        __swift_destroy_boxed_opaque_existential_1(a1);
        break;
      case 0xAu:
        swift_unknownObjectRelease();
        break;
      default:
        break;
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 0xB) {
      unsigned int v5 = *(_DWORD *)a2 + 11;
    }
    switch(v5)
    {
      case 1u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        char v6 = 1;
        goto LABEL_22;
      case 2u:
        *(void *)a1 = *(void *)a2;
        char v6 = 2;
        goto LABEL_22;
      case 3u:
        *(void *)a1 = *(void *)a2;
        char v6 = 3;
        goto LABEL_22;
      case 4u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        char v6 = 4;
        goto LABEL_22;
      case 5u:
        *(void *)a1 = *(void *)a2;
        char v6 = 5;
        goto LABEL_22;
      case 6u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        char v6 = 6;
        goto LABEL_22;
      case 7u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v7 = *(void *)(a2 + 16);
        uint64_t v8 = *(void *)(a2 + 24);
        char v9 = *(unsigned char *)(a2 + 32);
        swift_unknownObjectRetain();
        sub_259FB94E4(v7, v8, v9);
        *(void *)(a1 + 16) = v7;
        *(void *)(a1 + 24) = v8;
        *(unsigned char *)(a1 + 32) = v9;
        char v6 = 7;
        goto LABEL_22;
      case 8u:
        uint64_t v11 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v11;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1, a2);
        char v6 = 8;
        goto LABEL_22;
      case 9u:
        uint64_t v10 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v10;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1, a2);
        char v6 = 9;
LABEL_22:
        *(unsigned char *)(a1 + 40) = v6;
        break;
      case 0xAu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(unsigned char *)(a1 + 40) = 10;
        swift_unknownObjectRetain();
        break;
      default:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(unsigned char *)(a1 + 40) = 0;
        break;
    }
  }
  return a1;
}

uint64_t assignWithTake for UnsafeAnyValue(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 0xB) {
      unsigned int v4 = *(_DWORD *)a1 + 11;
    }
    switch(v4)
    {
      case 7u:
        swift_unknownObjectRelease();
        sub_259FB680C(*(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
        break;
      case 8u:
      case 9u:
        __swift_destroy_boxed_opaque_existential_1(a1);
        break;
      case 0xAu:
        swift_unknownObjectRelease();
        break;
      default:
        break;
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 0xB) {
      unsigned int v5 = *(_DWORD *)a2 + 11;
    }
    switch(v5)
    {
      case 1u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        char v6 = 1;
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        char v6 = 2;
        break;
      case 3u:
        *(void *)a1 = *(void *)a2;
        char v6 = 3;
        break;
      case 4u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        char v6 = 4;
        break;
      case 5u:
        *(void *)a1 = *(void *)a2;
        char v6 = 5;
        break;
      case 6u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        char v6 = 6;
        break;
      case 7u:
        long long v7 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v7;
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        char v6 = 7;
        break;
      case 8u:
        long long v10 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v10;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v6 = 8;
        break;
      case 9u:
        long long v8 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v8;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v6 = 9;
        break;
      case 0xAu:
        long long v9 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v9;
        char v6 = 10;
        break;
      default:
        char v6 = 0;
        *(_DWORD *)a1 = *(_DWORD *)a2;
        break;
    }
    *(unsigned char *)(a1 + 40) = v6;
  }
  return a1;
}

uint64_t storeEnumTagSinglePayload for UnsafeAnyValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF5)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 246;
    if (a3 >= 0xF6) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF6) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_259FED6E8(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 0xB) {
    return (*(_DWORD *)a1 + 11);
  }
  return result;
}

uint64_t sub_259FED704(uint64_t result, unsigned int a2)
{
  if (a2 > 0xA)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 11;
    LOBYTE(a2) = 11;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for UnsafeAnyValue()
{
  return &type metadata for UnsafeAnyValue;
}

uint64_t sub_259FED73C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, int a5@<W4>, void *a6@<X8>)
{
  long long v8 = v6;
  if (a1 >= 2)
  {
    uint64_t v19 = *v6;
    if (*v6)
    {
      uint64_t v20 = v6[1];
      uint64_t v21 = v8[2];
      unint64_t v29 = v8[3];
      v32[4] = v19;
      v32[5] = v20;
      uint64_t v33 = v21;
      unint64_t v34 = v29;
      v31[0] = a1;
      v31[1] = a2;
      _OWORD v31[2] = a3;
      void v31[3] = a4;
      sub_259FF264C(a1, a2, a3, a4);
      sub_259FF264C(a1, a2, a3, a4);
      sub_259FF264C(a1, a2, a3, a4);
      sub_259FB2A0C(v19, v20, v21, v29);
      sub_259FB09F4(v31, a5, v32);
      if (v7)
      {
        sub_259FF265C(a1, a2, a3, a4);
        uint64_t v22 = v33;
        unint64_t v23 = v34;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_259FAF410(v22, v23);
        sub_259FF265C(a1, a2, a3, a4);
        return sub_259FF265C(a1, a2, a3, a4);
      }
      else
      {
        sub_259FB2A68(v19, v20, v21, v29);
        sub_259FF265C(a1, a2, a3, a4);
        uint64_t v24 = v33;
        unint64_t v35 = v34;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_259FAF410(v24, v35);
        sub_259FF265C(a1, a2, a3, a4);
        sub_259FF265C(a1, a2, a3, a4);
        uint64_t v25 = v32[0];
        uint64_t v26 = v32[1];
        uint64_t v27 = v32[2];
        unint64_t v28 = v32[3];
        *long long v8 = v32[0];
        v8[1] = v26;
        _OWORD v8[2] = v27;
        v8[3] = v28;
        *a6 = v25;
        a6[1] = v26;
        a6[2] = v27;
        a6[3] = v28;
        return sub_259FB2A0C(v25, v26, v27, v28);
      }
    }
    else
    {
      *char v6 = a1;
      v6[1] = a2;
      v6[2] = a3;
      v6[3] = a4;
      *a6 = a1;
      a6[1] = a2;
      a6[2] = a3;
      a6[3] = a4;
      sub_259FF264C(a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return sub_259FAF3C4(a3, a4);
    }
  }
  else
  {
    uint64_t v10 = *v6;
    uint64_t v11 = v6[1];
    uint64_t v12 = v6[2];
    unint64_t v13 = v6[3];
    *a6 = *v6;
    a6[1] = v11;
    a6[2] = v12;
    a6[3] = v13;
    return sub_259FB2A0C(v10, v11, v12, v13);
  }
}

uint64_t sub_259FED99C(void *a1, uint64_t *a2, void *a3)
{
  uint64_t v6 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v8 = a1[3];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 56))(1701603686, 0xE400000000000000, ObjectType, v6);
  if (!v3)
  {
    uint64_t v12 = v8 - v7;
    if (!v7) {
      uint64_t v12 = 0;
    }
    v13[0] = v7;
    v13[1] = v8;
    void v13[3] = 0;
    v13[4] = 0;
    uint64_t v13[2] = v12;
    char v14 = 1;
    sub_259FBF1EC(result, v11, v13, a2, a3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_259FEDA70(uint64_t a1, uint64_t *a2, void *a3)
{
  char v47 = (void *)MEMORY[0x263F8EE78];
  sub_259FAEE8C(a1, (uint64_t)&v41);
  if (v46 == 10)
  {
    unint64_t v29 = a2;
    uint64_t v6 = v42;
    uint64_t v7 = v43;
    uint64_t v8 = v44;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 56))(0x6567616B636170, 0xE700000000000000, ObjectType, v6);
    if (v3)
    {
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v12 = v10;
      uint64_t v28 = v7;
      uint64_t v26 = ObjectType;
      uint64_t v27 = v8;
      uint64_t v25 = a3;
      uint64_t v13 = swift_getObjectType();
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v12 + 56))(&v33, v13, v12);
      uint64_t v14 = v33;
      uint64_t v15 = v34;
      uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 48))(v13, v12);
      if (v28) {
        uint64_t v17 = v27 - v28;
      }
      else {
        uint64_t v17 = 0;
      }
      uint64_t v33 = v28;
      uint64_t v34 = v27;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v35 = v17;
      char v38 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B3251A8);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_25A010B90;
      *(void *)(v18 + 32) = v16;
      *(void *)(v18 + 40) = 0;
      *(unsigned char *)(v18 + 48) = 0;
      uint64_t v30 = v18;
      unint64_t v31 = v14;
      uint64_t v32 = v15;
      sub_259FBAA50(v14, v15);
      sub_259FDE504(&v30, 0, (uint64_t)v39);
      swift_bridgeObjectRelease();
      sub_259FAD1BC(v14, v15);
      sub_259FAD1BC(v14, v15);
      swift_unknownObjectRelease();
      if (v40 == 255)
      {
        sub_259FAF090((uint64_t)v39);
      }
      else
      {
        sub_259FC2DB4((uint64_t)v39, (uint64_t)&v41);
        sub_259FAEE8C((uint64_t)&v41, (uint64_t)v39);
        if (v40 == 8)
        {
          sub_259FAF0F0(v39, (uint64_t)&v33);
          uint64_t v21 = v36;
          uint64_t v20 = v37;
          __swift_project_boxed_opaque_existential_1(&v33, v36);
          *(void *)&v39[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 24))(v21, v20);
          *((void *)&v39[0] + 1) = v22;
          uint64_t v30 = 46;
          unint64_t v31 = 0xE100000000000000;
          sub_259FD6B80();
          unint64_t v23 = (void *)sub_25A00EC80();
          swift_bridgeObjectRelease();
          sub_259FAED74((uint64_t)&v41);
          swift_bridgeObjectRelease();
          char v47 = v23;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
        }
        else
        {
          sub_259FAED74((uint64_t)&v41);
          sub_259FAED74((uint64_t)v39);
        }
      }
      uint64_t v41 = v28;
      uint64_t v42 = v27;
      uint64_t v44 = 0;
      uint64_t v45 = 0;
      uint64_t v43 = v17;
      char v46 = 1;
      uint64_t v24 = (*(uint64_t (**)(uint64_t))(v6 + 40))(v26);
      sub_259FC1C18(v24, &v41, &v47, v29, v25);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_259FAED74((uint64_t)&v41);
    sub_259FEDE6C();
    swift_allocError();
    *(void *)uint64_t v11 = 0xD00000000000002ALL;
    *(void *)(v11 + 8) = 0x800000025A010160;
    *(unsigned char *)(v11 + 16) = 0;
    swift_willThrow();
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_259FEDE6C()
{
  unint64_t result = qword_26A403060;
  if (!qword_26A403060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A403060);
  }
  return result;
}

uint64_t sub_259FEDEC0(uint64_t a1, void **a2, uint64_t *a3, void *a4)
{
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)(v8 + 8) + 8))(ObjectType);
  BOOL v12 = v10 == 0x7079745F6D756E65 && v11 == 0xE900000000000065;
  if (v12 || (uint64_t v13 = v10, v14 = v11, (sub_25A00EE40() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = *a2;
    swift_bridgeObjectRetain();
    sub_259FF0DDC(a1 + 16, v15, a3);
    return swift_bridgeObjectRelease();
  }
  BOOL v17 = v13 == 0x5F6567617373656DLL && v14 == 0xEC00000065707974;
  if (v17 || (sub_25A00EE40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = *a2;
    swift_bridgeObjectRetain();
    sub_259FF2194(a1 + 16, v18, a4, a3);
    return swift_bridgeObjectRelease();
  }
  if (v13 == 0x6F69736E65747865 && v14 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return sub_259FF15B0(a1 + 16, a4);
  }
  char v20 = sub_25A00EE40();
  uint64_t result = swift_bridgeObjectRelease();
  if (v20) {
    return sub_259FF15B0(a1 + 16, a4);
  }
  return result;
}

uint64_t sub_259FEE0E4(uint64_t a1, void *a2, uint64_t *a3, void *a4, void **a5)
{
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)(v11 + 8) + 8))(ObjectType);
  BOOL v15 = v13 == 1701667182 && v14 == 0xE400000000000000;
  if (v15 || (uint64_t v16 = v13, v17 = v14, (sub_25A00EE40() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    sub_259FAEE8C(a1 + 16, (uint64_t)&v62);
    if (v65 == 8)
    {
      sub_259FAF0F0(&v62, (uint64_t)&v58);
      uint64_t v18 = v60;
      uint64_t v19 = v61;
      __swift_project_boxed_opaque_existential_1(&v58, v60);
      *a2 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 24))(v18, v19);
      a2[1] = v20;
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
    }
    sub_259FAED74((uint64_t)&v62);
    sub_259FEDE6C();
    swift_allocError();
    long long v23 = xmmword_25A0115A0;
    goto LABEL_20;
  }
  BOOL v24 = v16 == 0x736E6F6974706FLL && v17 == 0xE700000000000000;
  if (!v24 && (sub_25A00EE40() & 1) == 0)
  {
    if (v16 == 0x65756C6176 && v17 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v35 = sub_25A00EE40();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v35 & 1) == 0) {
        return result;
      }
    }
    uint64_t v58 = 0;
    unint64_t v59 = 0xE000000000000000;
    uint64_t v67 = 0;
    char v68 = 1;
    long long v66 = xmmword_25A011290;
    sub_259FAEE8C(a1 + 16, (uint64_t)&v62);
    if (v65 == 10)
    {
      uint64_t v36 = *((void *)&v62 + 1);
      unint64_t v37 = *((void *)&v63 + 1) - v63;
      if (!(void)v63) {
        unint64_t v37 = 0;
      }
      long long v62 = v63;
      uint64_t v64 = 0;
      long long v63 = v37;
      char v65 = 1;
      uint64_t v38 = swift_getObjectType();
      uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 40))(v38, v36);
      if (v5)
      {
        swift_unknownObjectRelease();
        sub_259FAF410(0, 0xF000000000000000);
        return swift_bridgeObjectRelease();
      }
      sub_259FBFB9C(v39, (uint64_t *)&v62, &v58, (uint64_t *)&v66, (uint64_t)&v67);
      swift_bridgeObjectRelease();
      uint64_t v45 = v58;
      unint64_t v44 = v59;
      uint64_t v46 = HIBYTE(v59) & 0xF;
      if ((v59 & 0x2000000000000000) == 0) {
        uint64_t v46 = v58 & 0xFFFFFFFFFFFFLL;
      }
      if (v46 && (v68 & 1) == 0)
      {
        uint64_t v48 = v67;
        unint64_t v49 = *((void *)&v66 + 1);
        if (*((void *)&v66 + 1) >> 60 != 15)
        {
          uint64_t v69 = v67;
          uint64_t v50 = v66;
          sub_259FAE450(v66, *((unint64_t *)&v66 + 1));
          sub_259FAE450(v50, v49);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v62 = *a4;
          *a4 = 0x8000000000000000;
          sub_259FFBE8C(v50, v49, v69, isUniquelyReferenced_nonNull_native);
          *a4 = v62;
          swift_bridgeObjectRelease();
          uint64_t v52 = v50;
          uint64_t v48 = v69;
          sub_259FAF410(v52, v49);
        }
        uint64_t v53 = *a5;
        swift_bridgeObjectRetain();
        char v54 = swift_isUniquelyReferenced_nonNull_native();
        *a5 = v53;
        if ((v54 & 1) == 0)
        {
          uint64_t v53 = sub_259FC93E0(0, v53[2] + 1, 1, v53);
          *a5 = v53;
        }
        unint64_t v56 = v53[2];
        unint64_t v55 = v53[3];
        if (v56 >= v55 >> 1)
        {
          uint64_t v53 = sub_259FC93E0((void *)(v55 > 1), v56 + 1, 1, v53);
          *a5 = v53;
        }
        uint64_t v53[2] = v56 + 1;
        unint64_t v57 = &v53[3 * v56];
        v57[4] = v45;
        v57[5] = v44;
        v57[6] = v48;
        swift_unknownObjectRelease();
        sub_259FAF410(v66, *((unint64_t *)&v66 + 1));
        return swift_bridgeObjectRelease();
      }
      sub_259FEDE6C();
      swift_allocError();
      *(void *)uint64_t v47 = 0xD000000000000015;
      *(void *)(v47 + 8) = 0x800000025A0101F0;
      *(unsigned char *)(v47 + 16) = 1;
      swift_willThrow();
      swift_unknownObjectRelease();
    }
    else
    {
      sub_259FAED74((uint64_t)&v62);
      sub_259FEDE6C();
      swift_allocError();
      *(_OWORD *)uint64_t v41 = xmmword_25A0115A0;
      *(unsigned char *)(v41 + 16) = 0;
      swift_willThrow();
    }
    sub_259FAF410(v66, *((unint64_t *)&v66 + 1));
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_259FAEE8C(a1 + 16, (uint64_t)&v62);
  if (v65 != 10)
  {
    sub_259FAED74((uint64_t)&v62);
    sub_259FEDE6C();
    swift_allocError();
    long long v23 = xmmword_25A0115B0;
LABEL_20:
    *(_OWORD *)uint64_t v22 = v23;
    *(unsigned char *)(v22 + 16) = 0;
    return swift_willThrow();
  }
  long long v25 = v63;
  *((void *)&v63 + 1) = MEMORY[0x263F8D3E8];
  uint64_t v64 = MEMORY[0x263F07B80];
  long long v62 = v25;
  uint64_t v26 = __swift_project_boxed_opaque_existential_1(&v62, MEMORY[0x263F8D3E8]);
  uint64_t v27 = *v26;
  if (*v26 && (uint64_t v28 = (unsigned char *)v26[1], v29 = (uint64_t)&v28[-v27], v28 != (unsigned char *)v27))
  {
    if (v29 <= 14)
    {
      uint64_t v30 = sub_259FC3B50((unsigned char *)*v26, v28);
      unint64_t v31 = v42 & 0xFFFFFFFFFFFFFFLL;
      swift_unknownObjectRetain();
    }
    else
    {
      swift_unknownObjectRetain();
      if ((unint64_t)v29 >= 0x7FFFFFFF)
      {
        uint64_t v30 = sub_259FC3C98(v27, (uint64_t)v28);
        unint64_t v31 = v43 | 0x8000000000000000;
      }
      else
      {
        uint64_t v30 = sub_259FC3C14(v27, (uint64_t)v28);
        unint64_t v31 = v40 | 0x4000000000000000;
      }
    }
  }
  else
  {
    swift_unknownObjectRetain();
    uint64_t v30 = 0;
    unint64_t v31 = 0xC000000000000000;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v62);
  swift_unknownObjectRelease_n();
  uint64_t v32 = *a3;
  unint64_t v33 = a3[1];
  *a3 = v30;
  a3[1] = v31;
  return sub_259FAF410(v32, v33);
}

uint64_t sub_259FEE718(uint64_t a1, void *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)(v8 + 8) + 8))(ObjectType);
  BOOL v12 = v10 == 1701667182 && v11 == 0xE400000000000000;
  if (v12 || (uint64_t v13 = v10, v14 = v11, (sub_25A00EE40() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    sub_259FAEE8C(a1 + 16, (uint64_t)&v39);
    if (v42 == 8)
    {
      sub_259FAF0F0(&v39, (uint64_t)v36);
      uint64_t v15 = v37;
      uint64_t v16 = v38;
      __swift_project_boxed_opaque_existential_1(v36, v37);
      *a2 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
      a2[1] = v17;
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    }
    goto LABEL_27;
  }
  BOOL v19 = v13 == 0x736E6F6974706FLL && v14 == 0xE700000000000000;
  if (v19 || (sub_25A00EE40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_259FAEE8C(a1 + 16, (uint64_t)&v39);
    if (v42 != 10)
    {
      sub_259FAED74((uint64_t)&v39);
      sub_259FEDE6C();
      swift_allocError();
      *(void *)uint64_t v29 = 0xD000000000000012;
      unint64_t v30 = 0x800000025A010210;
LABEL_28:
      *(void *)(v29 + 8) = v30;
      *(unsigned char *)(v29 + 16) = 0;
      return swift_willThrow();
    }
    long long v20 = v40;
    *((void *)&v40 + 1) = MEMORY[0x263F8D3E8];
    uint64_t v41 = MEMORY[0x263F07B80];
    long long v39 = v20;
    uint64_t v21 = __swift_project_boxed_opaque_existential_1(&v39, MEMORY[0x263F8D3E8]);
    uint64_t v22 = *v21;
    if (*v21 && (long long v23 = (unsigned char *)v21[1], v24 = (uint64_t)&v23[-v22], v23 != (unsigned char *)v22))
    {
      if (v24 <= 14)
      {
        uint64_t v25 = sub_259FC3B50((unsigned char *)*v21, v23);
        unint64_t v26 = v34 & 0xFFFFFFFFFFFFFFLL;
        swift_unknownObjectRetain();
      }
      else
      {
        swift_unknownObjectRetain();
        if ((unint64_t)v24 >= 0x7FFFFFFF)
        {
          uint64_t v25 = sub_259FC3C98(v22, (uint64_t)v23);
          unint64_t v26 = v35 | 0x8000000000000000;
        }
        else
        {
          uint64_t v25 = sub_259FC3C14(v22, (uint64_t)v23);
          unint64_t v26 = v33 | 0x4000000000000000;
        }
      }
    }
    else
    {
      swift_unknownObjectRetain();
      uint64_t v25 = 0;
      unint64_t v26 = 0xC000000000000000;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v39);
    swift_unknownObjectRelease_n();
    uint64_t v27 = *a3;
    unint64_t v28 = a3[1];
    *a3 = v25;
    a3[1] = v26;
    return sub_259FAF410(v27, v28);
  }
  else
  {
    if (v13 == 0x7265626D756ELL && v14 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v32 = sub_25A00EE40();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v32 & 1) == 0) {
        return result;
      }
    }
    uint64_t result = sub_259FAEE8C(a1 + 16, (uint64_t)&v39);
    if (v42)
    {
LABEL_27:
      unint64_t v30 = 0xEF656D616E206575;
      sub_259FAED74((uint64_t)&v39);
      sub_259FEDE6C();
      swift_allocError();
      *(void *)uint64_t v29 = 0x6C6176206D756E45;
      goto LABEL_28;
    }
    *(void *)a4 = (int)v39;
    *(unsigned char *)(a4 + 8) = 0;
  }
  return result;
}

uint64_t sub_259FEEAB4(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4, char *a5, uint64_t *a6, BOOL *a7, _DWORD *a8)
{
  unint64_t v74 = a8;
  uint64_t v75 = a7;
  unsigned int v76 = a6;
  uint64_t v77 = a5;
  uint64_t v78 = a4;
  uint64_t v11 = sub_25A00E250();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)(v15 + 8) + 8))(ObjectType);
  BOOL v19 = v17 == 1701667182 && v18 == 0xE400000000000000;
  if (v19 || (uint64_t v20 = v17, v21 = v18, (sub_25A00EE40() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    sub_259FAEE8C(a1 + 16, (uint64_t)&v82);
    if (v85 == 8)
    {
      sub_259FAF0F0(&v82, (uint64_t)v79);
      uint64_t v22 = v80;
      uint64_t v23 = v81;
      __swift_project_boxed_opaque_existential_1(v79, v80);
      *a2 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 24))(v22, v23);
      a2[1] = v24;
LABEL_8:
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
    }
    sub_259FAED74((uint64_t)&v82);
    sub_259FEDE6C();
    swift_allocError();
    long long v27 = xmmword_25A011610;
LABEL_18:
    *(_OWORD *)uint64_t v26 = v27;
    *(unsigned char *)(v26 + 16) = 0;
    return swift_willThrow();
  }
  BOOL v28 = v20 == 0x7265626D756ELL && v21 == 0xE600000000000000;
  if (v28 || (sub_25A00EE40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t result = sub_259FAEE8C(a1 + 16, (uint64_t)&v82);
    if (!v85)
    {
      *(void *)a3 = (int)v82;
      *(unsigned char *)(a3 + 8) = 0;
      return result;
    }
    sub_259FAED74((uint64_t)&v82);
    sub_259FEDE6C();
    swift_allocError();
    long long v27 = xmmword_25A011600;
    goto LABEL_18;
  }
  BOOL v29 = v20 == 0x736E6F6974706FLL && v21 == 0xE700000000000000;
  if (!v29 && (sub_25A00EE40() & 1) == 0)
  {
    BOOL v40 = v20 == 1701869940 && v21 == 0xE400000000000000;
    if (!v40 && (sub_25A00EE40() & 1) == 0)
    {
      if (v20 == 0x6D616E5F65707974 && v21 == 0xE900000000000065 || (sub_25A00EE40() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_259FAEE8C(a1 + 16, (uint64_t)&v82);
        if (v85 == 8)
        {
          sub_259FAF0F0(&v82, (uint64_t)v79);
          uint64_t v52 = v80;
          uint64_t v53 = v81;
          __swift_project_boxed_opaque_existential_1(v79, v80);
          *(void *)&long long v82 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 24))(v52, v53);
          *((void *)&v82 + 1) = v54;
          sub_25A00E200();
          sub_259FD6B80();
          uint64_t v55 = sub_25A00EC90();
          uint64_t v57 = v56;
          (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
          swift_bridgeObjectRelease();
          uint64_t v58 = v76;
          *unsigned int v76 = v55;
          v58[1] = v57;
          goto LABEL_8;
        }
      }
      else
      {
        if ((v20 != 0x6C6562616CLL || v21 != 0xE500000000000000) && (sub_25A00EE40() & 1) == 0)
        {
          if (v20 == 0x6E695F666F656E6FLL && v21 == 0xEB00000000786564)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v69 = sub_25A00EE40();
            uint64_t result = swift_bridgeObjectRelease();
            if ((v69 & 1) == 0) {
              return result;
            }
          }
          uint64_t result = sub_259FAEE8C(a1 + 16, (uint64_t)&v82);
          if (!v85)
          {
            uint64_t v70 = v74;
            *unint64_t v74 = v82;
            *((unsigned char *)v70 + 4) = 0;
            return result;
          }
          sub_259FAED74((uint64_t)&v82);
          sub_259FEDE6C();
          swift_allocError();
          long long v27 = xmmword_25A0115C0;
          goto LABEL_18;
        }
        swift_bridgeObjectRelease();
        sub_259FAEE8C(a1 + 16, (uint64_t)&v82);
        if (v85 == 7)
        {
          long long v61 = v83;
          char v62 = v84;
          if (v84)
          {
            uint64_t v63 = v83;
          }
          else
          {
            uint64_t v64 = *((void *)&v82 + 1);
            uint64_t v65 = swift_getObjectType();
            long long v66 = *(uint64_t (**)(void, void, uint64_t, uint64_t))(v64 + 40);
            swift_bridgeObjectRetain();
            uint64_t v67 = v86;
            uint64_t v68 = v66(v61, *((void *)&v61 + 1), v65, v64);
            uint64_t v86 = v67;
            if (v67)
            {
              sub_259FB680C(v61, *((uint64_t *)&v61 + 1), 0);
              swift_unknownObjectRelease();
              return sub_259FB680C(v61, *((uint64_t *)&v61 + 1), 0);
            }
            uint64_t v63 = v68;
            sub_259FB680C(v61, *((uint64_t *)&v61 + 1), 0);
          }
          swift_unknownObjectRelease();
          uint64_t result = sub_259FB680C(v61, *((uint64_t *)&v61 + 1), v62);
          *uint64_t v75 = v63 == 3;
          return result;
        }
      }
      sub_259FAED74((uint64_t)&v82);
      sub_259FEDE6C();
      swift_allocError();
      long long v27 = xmmword_25A0115D0;
      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
    sub_259FAEE8C(a1 + 16, (uint64_t)&v82);
    if (v85 != 7)
    {
      sub_259FAED74((uint64_t)&v82);
      sub_259FEDE6C();
      swift_allocError();
      long long v27 = xmmword_25A0115E0;
      goto LABEL_18;
    }
    long long v41 = v83;
    char v42 = v84;
    if (v84)
    {
      uint64_t v43 = *((void *)&v82 + 1);
      uint64_t v44 = swift_getObjectType();
      uint64_t v45 = v86;
      uint64_t v46 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v43 + 48))(v41, v44, v43);
      uint64_t v86 = v45;
      if (v45)
      {
        swift_unknownObjectRelease();
        return sub_259FB680C(v41, *((uint64_t *)&v41 + 1), 1);
      }
      uint64_t v51 = v46;
      uint64_t v50 = v47;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v50 = *((void *)&v41 + 1);
      uint64_t v51 = v41;
    }
    if (v51 == 0x4F4F425F45505954 && v50 == 0xE90000000000004CLL || (sub_25A00EE40() & 1) != 0)
    {
      swift_unknownObjectRelease();
      sub_259FB680C(v41, *((uint64_t *)&v41 + 1), v42);
      uint64_t result = swift_bridgeObjectRelease();
      char v60 = 7;
LABEL_58:
      *uint64_t v77 = v60;
      return result;
    }
    if (v51 == 0x5459425F45505954 && v50 == 0xEA00000000005345 || (sub_25A00EE40() & 1) != 0)
    {
      swift_unknownObjectRelease();
      sub_259FB680C(v41, *((uint64_t *)&v41 + 1), v42);
      uint64_t result = swift_bridgeObjectRelease();
      char v60 = 10;
      goto LABEL_58;
    }
    if (v51 == 0x554F445F45505954 && v50 == 0xEB00000000454C42 || (sub_25A00EE40() & 1) != 0)
    {
      swift_unknownObjectRelease();
      sub_259FB680C(v41, *((uint64_t *)&v41 + 1), v42);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v77 = 0;
      return result;
    }
    if (v51 == 0x554E455F45505954 && v50 == 0xE90000000000004DLL || (sub_25A00EE40() & 1) != 0)
    {
      swift_unknownObjectRelease();
      sub_259FB680C(v41, *((uint64_t *)&v41 + 1), v42);
      uint64_t result = swift_bridgeObjectRelease();
      char v60 = 12;
      goto LABEL_58;
    }
    if (v51 == 0x4F4C465F45505954 && v50 == 0xEA00000000005441 || (sub_25A00EE40() & 1) != 0)
    {
      swift_unknownObjectRelease();
      sub_259FB680C(v41, *((uint64_t *)&v41 + 1), v42);
      uint64_t result = swift_bridgeObjectRelease();
      char v60 = 1;
      goto LABEL_58;
    }
    if (v51 == 0x544E495F45505954 && v50 == 0xEA00000000003233 || (sub_25A00EE40() & 1) != 0)
    {
      swift_unknownObjectRelease();
      sub_259FB680C(v41, *((uint64_t *)&v41 + 1), v42);
      uint64_t result = swift_bridgeObjectRelease();
      char v60 = 4;
      goto LABEL_58;
    }
    if (v51 == 0x544E495F45505954 && v50 == 0xEA00000000003436 || (sub_25A00EE40() & 1) != 0)
    {
      swift_unknownObjectRelease();
      sub_259FB680C(v41, *((uint64_t *)&v41 + 1), v42);
      uint64_t result = swift_bridgeObjectRelease();
      char v60 = 2;
      goto LABEL_58;
    }
    if (v51 == 0x53454D5F45505954 && v50 == 0xEC00000045474153 || (sub_25A00EE40() & 1) != 0)
    {
      swift_unknownObjectRelease();
      sub_259FB680C(v41, *((uint64_t *)&v41 + 1), v42);
      uint64_t result = swift_bridgeObjectRelease();
      char v60 = 9;
      goto LABEL_58;
    }
    if (v51 == 0x5254535F45505954 && v50 == 0xEB00000000474E49 || (sub_25A00EE40() & 1) != 0)
    {
      swift_unknownObjectRelease();
      sub_259FB680C(v41, *((uint64_t *)&v41 + 1), v42);
      uint64_t result = swift_bridgeObjectRelease();
      char v60 = 8;
      goto LABEL_58;
    }
    if (v51 == 0x4E49555F45505954 && v50 == 0xEB00000000323354 || (sub_25A00EE40() & 1) != 0)
    {
      swift_unknownObjectRelease();
      sub_259FB680C(v41, *((uint64_t *)&v41 + 1), v42);
      uint64_t result = swift_bridgeObjectRelease();
      char v60 = 11;
      goto LABEL_58;
    }
    if (v51 == 0x4E49555F45505954 && v50 == 0xEB00000000343654 || (sub_25A00EE40() & 1) != 0)
    {
      swift_unknownObjectRelease();
      sub_259FB680C(v41, *((uint64_t *)&v41 + 1), v42);
      uint64_t result = swift_bridgeObjectRelease();
      char v60 = 3;
      goto LABEL_58;
    }
    if (v51 == 0x5849465F45505954 && v50 == 0xEC00000032334445 || (sub_25A00EE40() & 1) != 0)
    {
      swift_unknownObjectRelease();
      sub_259FB680C(v41, *((uint64_t *)&v41 + 1), v42);
      uint64_t result = swift_bridgeObjectRelease();
      char v60 = 6;
      goto LABEL_58;
    }
    if (v51 == 0x5849465F45505954 && v50 == 0xEC00000034364445 || (sub_25A00EE40() & 1) != 0)
    {
      swift_unknownObjectRelease();
      sub_259FB680C(v41, *((uint64_t *)&v41 + 1), v42);
      uint64_t result = swift_bridgeObjectRelease();
      char v60 = 5;
      goto LABEL_58;
    }
    if (v51 == 0x4F52475F45505954 && v50 == 0xEA00000000005055 || (sub_25A00EE40() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_259FEDE6C();
      swift_allocError();
      *(void *)uint64_t v71 = 0xD000000000000013;
      *(void *)(v71 + 8) = 0x800000025A010290;
      *(unsigned char *)(v71 + 16) = 0;
      swift_willThrow();
      swift_unknownObjectRelease();
      return sub_259FB680C(v41, *((uint64_t *)&v41 + 1), v42);
    }
    if (v51 == 0x4946535F45505954 && v50 == 0xED00003233444558 || (sub_25A00EE40() & 1) != 0)
    {
LABEL_135:
      swift_unknownObjectRelease();
      sub_259FB680C(v41, *((uint64_t *)&v41 + 1), v42);
      uint64_t result = swift_bridgeObjectRelease();
      char v60 = 13;
      goto LABEL_58;
    }
    if ((v51 != 0x4946535F45505954 || v50 != 0xED00003436444558) && (sub_25A00EE40() & 1) == 0)
    {
      if (v51 == 0x4E49535F45505954 && v50 == 0xEB00000000323354 || (sub_25A00EE40() & 1) != 0) {
        goto LABEL_135;
      }
      if ((v51 != 0x4E49535F45505954 || v50 != 0xEB00000000343654) && (sub_25A00EE40() & 1) == 0)
      {
        *(void *)&long long v82 = 0;
        *((void *)&v82 + 1) = 0xE000000000000000;
        sub_25A00ED10();
        swift_bridgeObjectRelease();
        strcpy((char *)&v82, "Unknown type: ");
        HIBYTE(v82) = -18;
        sub_25A00EA80();
        swift_bridgeObjectRelease();
        long long v72 = v82;
        sub_259FEDE6C();
        swift_allocError();
        *(_OWORD *)uint64_t v73 = v72;
        *(unsigned char *)(v73 + 16) = 0;
        swift_willThrow();
        swift_unknownObjectRelease();
        return sub_259FB680C(v41, *((uint64_t *)&v41 + 1), v42);
      }
    }
    swift_unknownObjectRelease();
    sub_259FB680C(v41, *((uint64_t *)&v41 + 1), v42);
    uint64_t result = swift_bridgeObjectRelease();
    char v60 = 14;
    goto LABEL_58;
  }
  swift_bridgeObjectRelease();
  sub_259FAEE8C(a1 + 16, (uint64_t)&v82);
  if (v85 != 10)
  {
    sub_259FAED74((uint64_t)&v82);
    sub_259FEDE6C();
    swift_allocError();
    long long v27 = xmmword_25A0115F0;
    goto LABEL_18;
  }
  long long v30 = v83;
  *((void *)&v83 + 1) = MEMORY[0x263F8D3E8];
  uint64_t v84 = MEMORY[0x263F07B80];
  long long v82 = v30;
  unint64_t v31 = __swift_project_boxed_opaque_existential_1(&v82, MEMORY[0x263F8D3E8]);
  uint64_t v32 = *v31;
  if (*v31 && (uint64_t v33 = (unsigned char *)v31[1], v34 = (uint64_t)&v33[-v32], v33 != (unsigned char *)v32))
  {
    if (v34 <= 14)
    {
      uint64_t v35 = sub_259FC3B50((unsigned char *)*v31, v33);
      unint64_t v36 = v49 & 0xFFFFFFFFFFFFFFLL;
      swift_unknownObjectRetain();
    }
    else
    {
      swift_unknownObjectRetain();
      if ((unint64_t)v34 >= 0x7FFFFFFF)
      {
        uint64_t v35 = sub_259FC3C98(v32, (uint64_t)v33);
        unint64_t v36 = v59 | 0x8000000000000000;
      }
      else
      {
        uint64_t v35 = sub_259FC3C14(v32, (uint64_t)v33);
        unint64_t v36 = v48 | 0x4000000000000000;
      }
    }
  }
  else
  {
    swift_unknownObjectRetain();
    uint64_t v35 = 0;
    unint64_t v36 = 0xC000000000000000;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v82);
  swift_unknownObjectRelease_n();
  uint64_t v37 = v78;
  uint64_t v38 = *v78;
  unint64_t v39 = v78[1];
  uint64_t *v78 = v35;
  v37[1] = v36;
  return sub_259FAF410(v38, v39);
}

uint64_t sub_259FEFF2C(uint64_t a1, uint64_t *a2, void *a3, uint64_t *a4, uint64_t *a5, void *a6, uint64_t *a7, void **a8)
{
  uint64_t v14 = *(void *)(a1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(*(void *)(v14 + 8) + 8))(ObjectType);
  BOOL v18 = v16 == 1701667182 && v17 == 0xE400000000000000;
  if (v18 || (uint64_t v19 = v16, v20 = v17, (sub_25A00EE40() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    sub_259FAEE8C(a1 + 16, (uint64_t)&v64);
    if (v67 == 8)
    {
      sub_259FAF0F0(&v64, (uint64_t)v61);
      uint64_t v21 = v62;
      uint64_t v22 = v63;
      __swift_project_boxed_opaque_existential_1(v61, v62);
      *a2 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 24))(v21, v22);
      a2[1] = v23;
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
    }
    sub_259FAED74((uint64_t)&v64);
    sub_259FEDE6C();
    swift_allocError();
    long long v26 = xmmword_25A011630;
LABEL_10:
    *(_OWORD *)uint64_t v25 = v26;
    *(unsigned char *)(v25 + 16) = 0;
    return swift_willThrow();
  }
  BOOL v27 = v19 == 0x7079745F6D756E65 && v20 == 0xE900000000000065;
  if (v27 || (sub_25A00EE40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v29 = *a2;
    uint64_t v28 = a2[1];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a3 = sub_259FC9C04(0, a3[2] + 1, 1, a3);
    }
    unint64_t v31 = a3[2];
    unint64_t v30 = a3[3];
    if (v31 >= v30 >> 1) {
      a3 = sub_259FC9C04((void *)(v30 > 1), v31 + 1, 1, a3);
    }
    a3[2] = v31 + 1;
    uint64_t v32 = &a3[2 * v31];
    v32[4] = v29;
    v32[5] = v28;
    swift_bridgeObjectRelease();
    sub_259FF0DDC(a1 + 16, a3, a4);
    return swift_bridgeObjectRelease();
  }
  BOOL v33 = v19 == 0x736E6F6974706FLL && v20 == 0xE700000000000000;
  if (!v33 && (sub_25A00EE40() & 1) == 0)
  {
    BOOL v43 = v19 == 0x745F64657473656ELL && v20 == 0xEB00000000657079;
    if (v43 || (sub_25A00EE40() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v45 = *a2;
      uint64_t v44 = a2[1];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a3 = sub_259FC9C04(0, a3[2] + 1, 1, a3);
      }
      unint64_t v47 = a3[2];
      unint64_t v46 = a3[3];
      if (v47 >= v46 >> 1) {
        a3 = sub_259FC9C04((void *)(v46 > 1), v47 + 1, 1, a3);
      }
      a3[2] = v47 + 1;
      uint64_t v48 = &a3[2 * v47];
      v48[4] = v45;
      v48[5] = v44;
      swift_bridgeObjectRelease();
      sub_259FF2194(a1 + 16, a3, a6, a4);
      return swift_bridgeObjectRelease();
    }
    BOOL v50 = v19 == 0x646C656966 && v20 == 0xE500000000000000;
    if (v50 || (sub_25A00EE40() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return sub_259FF1288(a1 + 16, a7);
    }
    if (v19 == 0x6F69736E65747865 && v20 == 0xE90000000000006ELL || (sub_25A00EE40() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v54 = *a2;
      uint64_t v53 = a2[1];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a3 = sub_259FC9C04(0, a3[2] + 1, 1, a3);
      }
      unint64_t v56 = a3[2];
      unint64_t v55 = a3[3];
      if (v56 >= v55 >> 1) {
        a3 = sub_259FC9C04((void *)(v55 > 1), v56 + 1, 1, a3);
      }
      a3[2] = v56 + 1;
      uint64_t v57 = &a3[2 * v56];
      v57[4] = v54;
      v57[5] = v53;
      swift_bridgeObjectRelease();
      sub_259FF15B0(a1 + 16, a6);
      return swift_bridgeObjectRelease();
    }
    if (v19 == 0x65645F666F656E6FLL && v20 == 0xEA00000000006C63)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v58 = sub_25A00EE40();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v58 & 1) == 0) {
        return result;
      }
    }
    return sub_259FF1B3C(a1 + 16, a8);
  }
  swift_bridgeObjectRelease();
  sub_259FAEE8C(a1 + 16, (uint64_t)&v64);
  if (v67 != 10)
  {
    sub_259FAED74((uint64_t)&v64);
    sub_259FEDE6C();
    swift_allocError();
    long long v26 = xmmword_25A011620;
    goto LABEL_10;
  }
  long long v34 = v65;
  *((void *)&v65 + 1) = MEMORY[0x263F8D3E8];
  uint64_t v66 = MEMORY[0x263F07B80];
  long long v64 = v34;
  uint64_t v35 = __swift_project_boxed_opaque_existential_1(&v64, MEMORY[0x263F8D3E8]);
  uint64_t v36 = *v35;
  if (*v35 && (uint64_t v37 = (unsigned char *)v35[1], v38 = (uint64_t)&v37[-v36], v37 != (unsigned char *)v36))
  {
    if (v38 <= 14)
    {
      uint64_t v39 = sub_259FC3B50((unsigned char *)*v35, v37);
      unint64_t v40 = v51 & 0xFFFFFFFFFFFFFFLL;
      swift_unknownObjectRetain();
    }
    else
    {
      swift_unknownObjectRetain();
      if ((unint64_t)v38 >= 0x7FFFFFFF)
      {
        uint64_t v39 = sub_259FC3C98(v36, (uint64_t)v37);
        unint64_t v40 = v52 | 0x8000000000000000;
      }
      else
      {
        uint64_t v39 = sub_259FC3C14(v36, (uint64_t)v37);
        unint64_t v40 = v49 | 0x4000000000000000;
      }
    }
  }
  else
  {
    swift_unknownObjectRetain();
    uint64_t v39 = 0;
    unint64_t v40 = 0xC000000000000000;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
  swift_unknownObjectRelease_n();
  uint64_t v41 = *a5;
  unint64_t v42 = a5[1];
  *a5 = v39;
  a5[1] = v40;
  return sub_259FAF410(v41, v42);
}

unint64_t sub_259FF0634(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_25A00ECD0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_25A00EF60();
        swift_bridgeObjectRetain();
        sub_25A00EA40();
        uint64_t v11 = sub_25A00EF90();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          uint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          uint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            *uint64_t v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          unint64_t v17 = v16 + 40 * v3;
          BOOL v18 = (long long *)(v16 + 40 * v6);
          if (40 * v3 < (uint64_t)(40 * v6) || v17 >= (unint64_t)v18 + 40 || (v19 = v3 == v6, int64_t v3 = v6, !v19))
          {
            long long v9 = *v18;
            long long v10 = v18[1];
            *(void *)(v17 + 32) = *((void *)v18 + 4);
            *(_OWORD *)unint64_t v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_259FF082C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_25A00ECD0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_25A00EF60();
        swift_bridgeObjectRetain();
        sub_25A00EA40();
        uint64_t v10 = sub_25A00EF90();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          unint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    BOOL v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *BOOL v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void (*sub_259FF0A04(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  unint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_259FF0CC0(v6);
  v6[10] = sub_259FF0B24(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_259FF0AB0;
}

void sub_259FF0AB0(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  long long v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_259FF0B24(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t v5 = v4;
  uint64_t v10 = malloc(0x48uLL);
  *a1 = v10;
  v10[5] = a3;
  void v10[6] = v4;
  v10[4] = a2;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_259FE120C(a2, a3);
  *((unsigned char *)v10 + 64) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_13;
  }
  char v17 = v12;
  uint64_t v18 = *(void *)(v11 + 24);
  if (v18 < v16 || (a4 & 1) == 0)
  {
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_259FFAD1C();
      goto LABEL_9;
    }
    sub_259FF9588(v16, a4 & 1);
    unint64_t v19 = sub_259FE120C(a2, a3);
    if ((v17 & 1) == (v20 & 1))
    {
      unint64_t v13 = v19;
      goto LABEL_9;
    }
LABEL_13:
    uint64_t result = (void (*)(uint64_t **))sub_25A00EF00();
    __break(1u);
    return result;
  }
LABEL_9:
  v10[7] = v13;
  long long v21 = 0uLL;
  long long v22 = 0uLL;
  if (v17)
  {
    uint64_t v23 = (long long *)(*(void *)(*v5 + 56) + 32 * v13);
    long long v21 = *v23;
    long long v22 = v23[1];
  }
  *(_OWORD *)uint64_t v10 = v21;
  *((_OWORD *)v10 + 1) = v22;
  return sub_259FF0C6C;
}

void sub_259FF0C6C(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_259FF0CFC(*a1, *((unsigned char *)*a1 + 64), (uint64_t *)(*a1)[6], (*a1)[7], (*a1)[4], (*a1)[5]);
  sub_259FB2A68(*v1, v1[1], v1[2], v1[3]);
  free(v1);
}

uint64_t (*sub_259FF0CC0(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_259FF0CF0;
}

uint64_t sub_259FF0CF0(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_259FF0CFC(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  unint64_t v11 = a1[3];
  if (*a1)
  {
    char v12 = (void *)*a3;
    if (a2)
    {
      unint64_t v13 = (uint64_t *)(v12[7] + 32 * a4);
      *unint64_t v13 = v8;
      v13[1] = v9;
      uint64_t v13[2] = v10;
      void v13[3] = v11;
    }
    else
    {
      sub_259FFC524(a4, a5, a6, v8, v9, v10, v11, v12);
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_259FF082C(a4, *a3);
  }
  return sub_259FB2A0C(v8, v9, v10, v11);
}

uint64_t sub_259FF0DDC(uint64_t a1, void *a2, uint64_t *a3)
{
  sub_259FAEE8C(a1, (uint64_t)&v33);
  if (v38 == 10)
  {
    uint64_t v6 = v34;
    uint64_t v7 = v35;
    uint64_t v8 = v36;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v39 = (void *)MEMORY[0x263F8EE78];
    long long v30 = xmmword_25A011290;
    unint64_t v29 = sub_259FB24C8(MEMORY[0x263F8EE78]);
    uint64_t v9 = v8 - v7;
    if (!v7) {
      uint64_t v9 = 0;
    }
    BOOL v33 = (void *)v7;
    uint64_t v34 = v8;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v35 = v9;
    char v38 = 1;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 40))(ObjectType, v6);
    if (v3)
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      sub_259FAF410(0, 0xF000000000000000);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_259FBFF08(v11, (uint64_t *)&v33, &v31, (uint64_t *)&v30, &v29, &v39);
      swift_bridgeObjectRelease();
      uint64_t v14 = v32;
      if (v32)
      {
        uint64_t v15 = v31;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          a2 = sub_259FC9C04(0, a2[2] + 1, 1, a2);
        }
        unint64_t v17 = a2[2];
        unint64_t v16 = a2[3];
        if (v17 >= v16 >> 1) {
          a2 = sub_259FC9C04((void *)(v16 > 1), v17 + 1, 1, a2);
        }
        a2[2] = v17 + 1;
        uint64_t v18 = &a2[2 * v17];
        v18[4] = v15;
        v18[5] = v14;
        swift_bridgeObjectRelease();
        BOOL v33 = a2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A402ED8);
        sub_259FD5EF0();
        uint64_t v28 = sub_25A00E970();
        uint64_t v20 = v19;
        swift_bridgeObjectRelease();
        long long v21 = v39;
        if (v39[2])
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D10);
          uint64_t v22 = sub_25A00EDE0();
        }
        else
        {
          uint64_t v22 = MEMORY[0x263F8EE80];
        }
        BOOL v33 = (void *)v22;
        swift_bridgeObjectRetain_n();
        sub_25A003C0C(v21, 1, &v33);
        swift_bridgeObjectRelease();
        uint64_t v24 = (uint64_t)v33;
        long long v25 = v30;
        uint64_t v26 = v29;
        sub_259FB24C8(MEMORY[0x263F8EE78]);
        sub_259FAF3C4(v25, *((unint64_t *)&v25 + 1));
        swift_bridgeObjectRetain();
        sub_259FAF3C4(v25, *((unint64_t *)&v25 + 1));
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_259FAF3C4(v25, *((unint64_t *)&v25 + 1));
        swift_bridgeObjectRetain();
        sub_259FAF410(v25, *((unint64_t *)&v25 + 1));
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_259FAF410(v25, *((unint64_t *)&v25 + 1));
        swift_bridgeObjectRelease();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        BOOL v33 = (void *)*a3;
        *a3 = 0x8000000000000000;
        sub_259FFBCFC(v24, v25, *((uint64_t *)&v25 + 1), v26, v28, v20, isUniquelyReferenced_nonNull_native);
        *a3 = (uint64_t)v33;
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_259FEDE6C();
        swift_allocError();
        *(void *)uint64_t v23 = 0xD00000000000001DLL;
        *(void *)(v23 + 8) = 0x800000025A0101B0;
        *(unsigned char *)(v23 + 16) = 1;
        swift_willThrow();
        swift_unknownObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_259FAF410(v30, *((unint64_t *)&v30 + 1));
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_259FAED74((uint64_t)&v33);
    sub_259FEDE6C();
    swift_allocError();
    *(void *)uint64_t v12 = 0xD000000000000018;
    *(void *)(v12 + 8) = 0x800000025A010190;
    *(unsigned char *)(v12 + 16) = 0;
    return swift_willThrow();
  }
}

uint64_t sub_259FF1288(uint64_t a1, uint64_t *a2)
{
  sub_259FAEE8C(a1, (uint64_t)&v22);
  if (v27 == 10)
  {
    uint64_t v4 = v23;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    char v19 = 1;
    char v38 = 2;
    char v37 = 17;
    uint64_t v16 = 0;
    long long v15 = xmmword_25A011290;
    int v35 = 0;
    char v36 = 1;
    uint64_t v5 = v25 - v24;
    if (!v24) {
      uint64_t v5 = 0;
    }
    uint64_t v22 = v24;
    uint64_t v23 = v25;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v24 = v5;
    char v27 = 1;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 40))(ObjectType, v4);
    if (v2)
    {
      swift_unknownObjectRelease();
      sub_259FAF410(0, 0xF000000000000000);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_259FC0294(v7, &v22, &v20, (uint64_t)&v18, (uint64_t *)&v15, &v37, &v16, (BOOL *)&v38, &v35);
      swift_bridgeObjectRelease();
      if (v37 == 17 || (uint64_t v10 = v21) == 0 || (v19 & 1) != 0)
      {
        sub_259FEDE6C();
        swift_allocError();
        *(void *)uint64_t v11 = 0xD000000000000015;
        *(void *)(v11 + 8) = 0x800000025A0101F0;
        *(unsigned char *)(v11 + 16) = 1;
        swift_willThrow();
        swift_unknownObjectRelease();
        sub_259FAF410(v15, *((unint64_t *)&v15 + 1));
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v12 = v20;
        long long v13 = v15;
        LOBYTE(v28) = v37;
        *((void *)&v28 + 1) = v16;
        uint64_t v29 = v17;
        uint64_t v30 = v18;
        char v31 = v38 & 1;
        int v32 = v35;
        char v33 = v36;
        long long v34 = v15;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_259FAF3C4(v13, *((unint64_t *)&v13 + 1));
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v22 = *a2;
        *a2 = 0x8000000000000000;
        sub_259FFB528(&v28, v12, v10, isUniquelyReferenced_nonNull_native);
        *a2 = v22;
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_259FAF410(v13, *((unint64_t *)&v13 + 1));
        swift_bridgeObjectRelease();
      }
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_259FAED74((uint64_t)&v22);
    sub_259FEDE6C();
    swift_allocError();
    *(void *)uint64_t v8 = 0xD000000000000010;
    *(void *)(v8 + 8) = 0x800000025A010270;
    *(unsigned char *)(v8 + 16) = 0;
    return swift_willThrow();
  }
}

uint64_t sub_259FF15B0(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_25A00E250();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_259FAEE8C(a1, (uint64_t)&v61);
  if (v64 != 10)
  {
    sub_259FAED74((uint64_t)&v61);
    sub_259FEDE6C();
    swift_allocError();
    *(void *)uint64_t v14 = 0xD00000000000001BLL;
    *(void *)(v14 + 8) = 0x800000025A010230;
    *(unsigned char *)(v14 + 16) = 0;
    return swift_willThrow();
  }
  uint64_t v50 = v6;
  long long v65 = a2;
  uint64_t v49 = a1;
  long long v9 = v61;
  uint64_t v10 = v62;
  uint64_t v11 = v63;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, unint64_t, uint64_t, void))(*((void *)&v9 + 1) + 56))(0x6565646E65747865, 0xE800000000000000, ObjectType, *((void *)&v9 + 1));
  if (v2) {
    return swift_unknownObjectRelease();
  }
  uint64_t v16 = v13;
  uint64_t v48 = v9;
  uint64_t v17 = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v16 + 56))(&v52, v17, v16);
  uint64_t v46 = v52;
  uint64_t v47 = v53;
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 48))(v17, v16);
  uint64_t v19 = v11 - v10;
  if (!v10) {
    uint64_t v19 = 0;
  }
  uint64_t v52 = v10;
  uint64_t v53 = v11;
  uint64_t v55 = 0;
  uint64_t v56 = 0;
  uint64_t v54 = v19;
  char v57 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B3251A8);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_25A010B90;
  *(void *)(v20 + 32) = v18;
  *(void *)(v20 + 40) = 0;
  *(unsigned char *)(v20 + 48) = 0;
  uint64_t v21 = v46;
  v51[0] = v20;
  v51[1] = v46;
  uint64_t v22 = v47;
  v51[2] = v47;
  sub_259FBAA50(v46, v47);
  sub_259FDE504(v51, 0, (uint64_t)&v61);
  swift_bridgeObjectRelease();
  sub_259FAD1BC(v21, v22);
  sub_259FAD1BC(v21, v22);
  swift_unknownObjectRelease();
  if (v64 != 8)
  {
    if (v64 == 255) {
      sub_259FAF090((uint64_t)&v61);
    }
    else {
      sub_259FAED74((uint64_t)&v61);
    }
    sub_259FEDE6C();
    swift_allocError();
    *(void *)uint64_t v39 = 0xD000000000000023;
    *(void *)(v39 + 8) = 0x800000025A0102D0;
    *(unsigned char *)(v39 + 16) = 0;
    swift_willThrow();
    return swift_unknownObjectRelease();
  }
  sub_259FAF0F0(&v61, (uint64_t)v58);
  uint64_t v23 = v59;
  uint64_t v24 = v60;
  __swift_project_boxed_opaque_existential_1(v58, v59);
  *(void *)&long long v61 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 24))(v23, v24);
  *((void *)&v61 + 1) = v25;
  sub_25A00E200();
  sub_259FD6B80();
  uint64_t v26 = sub_25A00EC90();
  uint64_t v28 = v27;
  (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  uint64_t v29 = v65;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v61 = *v29;
  uint64_t v31 = v61;
  *uint64_t v29 = 0x8000000000000000;
  unint64_t v33 = sub_259FE120C(v26, v28);
  uint64_t v34 = *(void *)(v31 + 16);
  BOOL v35 = (v32 & 1) == 0;
  uint64_t v36 = v34 + v35;
  if (__OFADD__(v34, v35))
  {
    __break(1u);
    goto LABEL_23;
  }
  LOBYTE(v8) = v32;
  if (*(void *)(v31 + 24) >= v36)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_19;
    }
LABEL_23:
    sub_259FFAD1C();
    goto LABEL_19;
  }
  sub_259FF9588(v36, isUniquelyReferenced_nonNull_native);
  unint64_t v37 = sub_259FE120C(v26, v28);
  if ((v8 & 1) != (v38 & 1))
  {
    uint64_t result = sub_25A00EF00();
    __break(1u);
    return result;
  }
  unint64_t v33 = v37;
LABEL_19:
  uint64_t v40 = v49;
  *uint64_t v29 = v61;
  swift_bridgeObjectRelease();
  uint64_t v41 = (void *)*v29;
  swift_bridgeObjectRetain();
  if ((v8 & 1) == 0)
  {
    uint64_t v42 = v26;
    uint64_t v43 = MEMORY[0x263F8EE78];
    unint64_t v44 = sub_259FB01F0(MEMORY[0x263F8EE78]);
    sub_259FFC524(v33, v42, v28, v44, v43, 0, 0xF000000000000000, v41);
    swift_bridgeObjectRetain();
  }
  uint64_t v45 = v41[7];
  swift_bridgeObjectRelease();
  sub_259FF1288(v40, (uint64_t *)(v45 + 32 * v33));
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
}

uint64_t sub_259FF1B3C(uint64_t a1, void **a2)
{
  sub_259FAEE8C(a1, (uint64_t)&v60);
  if (v63 != 10)
  {
    sub_259FAED74((uint64_t)&v60);
    sub_259FEDE6C();
    swift_allocError();
    *(void *)uint64_t v8 = 0xD000000000000010;
    *(void *)(v8 + 8) = 0x800000025A0102B0;
    *(unsigned char *)(v8 + 16) = 0;
    return swift_willThrow();
  }
  uint64_t v4 = *((void *)&v60 + 1);
  uint64_t v47 = *((void *)&v61 + 1);
  uint64_t v64 = v61;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 56);
  v6(1701667182, 0xE400000000000000, ObjectType, v4);
  if (v2) {
    return swift_unknownObjectRelease();
  }
  uint64_t v10 = v7;
  uint64_t v45 = v4;
  uint64_t v46 = ObjectType;
  unint64_t v44 = a2;
  uint64_t v11 = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v10 + 56))(&v51, v11, v10);
  uint64_t v13 = v51;
  uint64_t v12 = v52;
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 48))(v11, v10);
  if (v64) {
    uint64_t v15 = v47 - v64;
  }
  else {
    uint64_t v15 = 0;
  }
  uint64_t v51 = v64;
  uint64_t v52 = v47;
  uint64_t v54 = 0;
  uint64_t v55 = 0;
  uint64_t v53 = v15;
  char v56 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B3251A8);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_25A010B90;
  *(void *)(v16 + 32) = v14;
  *(void *)(v16 + 40) = 0;
  *(unsigned char *)(v16 + 48) = 0;
  uint64_t v48 = v16;
  uint64_t v49 = v13;
  uint64_t v50 = v12;
  sub_259FBAA50(v13, v12);
  sub_259FDE504(&v48, 0, (uint64_t)&v60);
  swift_bridgeObjectRelease();
  sub_259FAD1BC(v13, v12);
  sub_259FAD1BC(v13, v12);
  swift_unknownObjectRelease();
  if (v63 != 8)
  {
    if (v63 == 255) {
      sub_259FAF090((uint64_t)&v60);
    }
    else {
      sub_259FAED74((uint64_t)&v60);
    }
    sub_259FEDE6C();
    swift_allocError();
    *(_OWORD *)uint64_t v17 = xmmword_25A0115A0;
    *(unsigned char *)(v17 + 16) = 0;
    swift_willThrow();
    return swift_unknownObjectRelease();
  }
  sub_259FAF0F0(&v60, (uint64_t)v57);
  v6(0x736E6F6974706FLL, 0xE700000000000000, v46, v45);
  uint64_t v19 = v18;
  uint64_t v20 = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v19 + 56))(&v51, v20, v19);
  uint64_t v22 = v51;
  uint64_t v21 = v52;
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 48))(v20, v19);
  uint64_t v51 = v64;
  uint64_t v52 = v47;
  uint64_t v54 = 0;
  uint64_t v55 = 0;
  uint64_t v53 = v15;
  char v56 = 1;
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_25A010B90;
  *(void *)(v24 + 32) = v23;
  *(void *)(v24 + 40) = 0;
  *(unsigned char *)(v24 + 48) = 0;
  uint64_t v48 = v24;
  uint64_t v49 = v22;
  uint64_t v50 = v21;
  sub_259FBAA50(v22, v21);
  sub_259FDE504(&v48, 0, (uint64_t)&v60);
  swift_bridgeObjectRelease();
  sub_259FAD1BC(v22, v21);
  sub_259FAD1BC(v22, v21);
  swift_unknownObjectRelease();
  if (v63 == 10)
  {
    long long v25 = v61;
    *((void *)&v61 + 1) = MEMORY[0x263F8D3E8];
    uint64_t v62 = MEMORY[0x263F07B80];
    long long v60 = v25;
    uint64_t v26 = __swift_project_boxed_opaque_existential_1(&v60, MEMORY[0x263F8D3E8]);
    uint64_t v27 = *v26;
    if (*v26 && (uint64_t v28 = (unsigned char *)v26[1], v29 = (uint64_t)&v28[-v27], v28 != (unsigned char *)v27))
    {
      if (v29 <= 14)
      {
        uint64_t v30 = sub_259FC3B50((unsigned char *)*v26, v28);
        unint64_t v31 = v42 & 0xFFFFFFFFFFFFFFLL;
        swift_unknownObjectRetain();
      }
      else
      {
        swift_unknownObjectRetain();
        if ((unint64_t)v29 >= 0x7FFFFFFF)
        {
          uint64_t v30 = sub_259FC3C98(v27, (uint64_t)v28);
          unint64_t v31 = v43 | 0x8000000000000000;
        }
        else
        {
          uint64_t v30 = sub_259FC3C14(v27, (uint64_t)v28);
          unint64_t v31 = v41 | 0x4000000000000000;
        }
      }
    }
    else
    {
      swift_unknownObjectRetain();
      uint64_t v30 = 0;
      unint64_t v31 = 0xC000000000000000;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v60);
    swift_unknownObjectRelease_n();
  }
  else
  {
    if (v63 == 255) {
      sub_259FAF090((uint64_t)&v60);
    }
    else {
      sub_259FAED74((uint64_t)&v60);
    }
    uint64_t v30 = 0;
    unint64_t v31 = 0xF000000000000000;
  }
  uint64_t v32 = v58;
  uint64_t v33 = v59;
  __swift_project_boxed_opaque_existential_1(v57, v58);
  uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 24))(v32, v33);
  uint64_t v36 = v35;
  unint64_t v37 = *v44;
  sub_259FAF3C4(v30, v31);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v37 = sub_259FCA068(0, v37[2] + 1, 1, v37);
  }
  unint64_t v39 = v37[2];
  unint64_t v38 = v37[3];
  if (v39 >= v38 >> 1) {
    unint64_t v37 = sub_259FCA068((void *)(v38 > 1), v39 + 1, 1, v37);
  }
  uint64_t v37[2] = v39 + 1;
  uint64_t v40 = &v37[4 * v39];
  v40[4] = v34;
  _OWORD v40[5] = v36;
  v40[6] = v30;
  v40[7] = v31;
  sub_259FAF410(v30, v31);
  swift_unknownObjectRelease();
  *unint64_t v44 = v37;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
}

uint64_t sub_259FF2194(uint64_t a1, void *a2, void *a3, uint64_t *a4)
{
  sub_259FAEE8C(a1, (uint64_t)&v40);
  if (v45 == 10)
  {
    uint64_t v33 = a4;
    uint64_t v34 = a3;
    uint64_t v8 = v41;
    uint64_t v10 = v42;
    uint64_t v9 = v43;
    uint64_t v38 = 0;
    unint64_t v39 = 0xE000000000000000;
    uint64_t v11 = (void *)MEMORY[0x263F8EE78];
    unint64_t v46 = sub_259FB01F0(MEMORY[0x263F8EE78]);
    unint64_t v37 = v11;
    long long v36 = xmmword_25A011290;
    uint64_t v12 = v9 - v10;
    if (!v10) {
      uint64_t v12 = 0;
    }
    uint64_t v40 = (void *)v10;
    uint64_t v41 = v9;
    unint64_t v43 = 0;
    uint64_t v44 = 0;
    uint64_t v42 = v12;
    char v45 = 1;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 40);
    swift_bridgeObjectRetain();
    uint64_t v15 = v14(ObjectType, v8);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      sub_259FAF410(0, 0xF000000000000000);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = v15;
      swift_bridgeObjectRetain();
      sub_259FC0A14(v18, (uint64_t *)&v40, &v38, a2, v33, (uint64_t *)&v36, v34, (uint64_t *)&v46, &v37);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v19 = v38;
      unint64_t v20 = v39;
      uint64_t v21 = HIBYTE(v39) & 0xF;
      if ((v39 & 0x2000000000000000) == 0) {
        uint64_t v21 = v38 & 0xFFFFFFFFFFFFLL;
      }
      if (v21)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          a2 = sub_259FC9C04(0, a2[2] + 1, 1, a2);
        }
        unint64_t v23 = a2[2];
        unint64_t v22 = a2[3];
        if (v23 >= v22 >> 1) {
          a2 = sub_259FC9C04((void *)(v22 > 1), v23 + 1, 1, a2);
        }
        a2[2] = v23 + 1;
        uint64_t v24 = &a2[2 * v23];
        void v24[4] = v19;
        v24[5] = v20;
        uint64_t v40 = a2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A402ED8);
        sub_259FD5EF0();
        uint64_t v25 = sub_25A00E970();
        uint64_t v27 = v26;
        swift_bridgeObjectRelease();
        unint64_t v28 = v46;
        uint64_t v29 = v37;
        long long v30 = v36;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_259FAF3C4(v30, *((unint64_t *)&v30 + 1));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_259FAF3C4(v30, *((unint64_t *)&v30 + 1));
        swift_bridgeObjectRetain();
        unint64_t v31 = sub_259FF0A04(v35, v25, v27);
        sub_259FED73C(v28, (uint64_t)v29, v30, *((unint64_t *)&v30 + 1), 2, &v40);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_259FAF410(v30, *((unint64_t *)&v30 + 1));
        sub_259FB2A68((uint64_t)v40, v41, v42, v43);
        ((void (*)(void *, void))v31)(v35, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        sub_259FAF410(v30, *((unint64_t *)&v30 + 1));
        swift_bridgeObjectRelease();
        sub_259FAF410(v30, *((unint64_t *)&v30 + 1));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_259FEDE6C();
        swift_allocError();
        *(void *)uint64_t v32 = 0xD00000000000001FLL;
        *(void *)(v32 + 8) = 0x800000025A010250;
        *(unsigned char *)(v32 + 16) = 1;
        swift_willThrow();
        swift_unknownObjectRelease();
        sub_259FAF410(v36, *((unint64_t *)&v36 + 1));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_259FAED74((uint64_t)&v40);
    sub_259FEDE6C();
    swift_allocError();
    *(void *)uint64_t v16 = 0xD00000000000001BLL;
    *(void *)(v16 + 8) = 0x800000025A010230;
    *(unsigned char *)(v16 + 16) = 0;
    return swift_willThrow();
  }
}

uint64_t sub_259FF264C(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (result != 1) {
    return sub_259FB2A0C(result, a2, a3, a4);
  }
  return result;
}

uint64_t sub_259FF265C(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (result != 1) {
    return sub_259FB2A68(result, a2, a3, a4);
  }
  return result;
}

uint64_t sub_259FF266C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v33 = a2;
  char v8 = *a3;
  uint64_t v9 = *((void *)a3 + 1);
  uint64_t v10 = *((void *)a3 + 2);
  uint64_t v11 = *((void *)a3 + 3);
  char v12 = a3[32];
  int v13 = *((_DWORD *)a3 + 9);
  char v14 = a3[40];
  uint64_t v16 = *((void *)a3 + 6);
  unint64_t v15 = *((void *)a3 + 7);
  *(unsigned char *)(v6 + 88) = 1;
  *(unsigned char *)(v6 + 73) = v12;
  *(void *)(v6 + 80) = v11;
  *(_DWORD *)(v6 + 128) = v13;
  *(unsigned char *)(v6 + 132) = v14;
  swift_unknownObjectWeakInit();
  v27[0] = v8;
  uint64_t v28 = v9;
  uint64_t v29 = v10;
  uint64_t v30 = a5;
  swift_unknownObjectWeakAssign();
  sub_259FF336C((uint64_t)v27, (uint64_t)v31);
  char v32 = 0;
  sub_259FF345C((uint64_t)v31, v6 + 32);
  uint64_t ObjectType = swift_getObjectType();
  swift_bridgeObjectRetain();
  swift_retain();
  if ((sub_259FD0930(ObjectType, a5) & 1) != 0 && v15 >> 60 != 15)
  {
    sub_259FAE450(v16, v15);
    sub_259FD09B0(ObjectType, a5);
    if (v26)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      sub_259FAF410(v16, v15);
      swift_release();
      sub_259FAF410(v16, v15);
      sub_259FF3494(v6 + 32);
      swift_deallocPartialClassInstance();
      return v6;
    }
    uint64_t v22 = v21;
    uint64_t v23 = swift_getObjectType();
    (*(void (**)(_OWORD *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t))(v22 + 80))(v31, v16, v15, v23, v22);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_259FAF410(v16, v15);
    sub_259FAF410(v16, v15);
    long long v18 = v31[0];
    long long v19 = v31[1];
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_259FAF410(v16, v15);
    long long v18 = 0uLL;
    long long v19 = 0uLL;
  }
  uint64_t v20 = v33;
  *(_OWORD *)(v6 + 96) = v18;
  *(_OWORD *)(v6 + 112) = v19;
  swift_release();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = v20;
  return v6;
}

void *sub_259FF2900@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  if (a3)
  {
    uint64_t v6 = v4;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t result = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 24))(a2, a3, ObjectType, a1);
    if (!v5)
    {
      char v14 = result;
      uint64_t v15 = v13;
      if (object_getClass(result) == (Class)_TtC17PoirotSchematizer18ProtoMessageSchema && v14 != 0) {
        swift_unknownObjectRetain();
      }
      swift_weakInit();
      swift_release();
      char v20 = 2;
      swift_beginAccess();
      sub_259FF33EC((uint64_t)v19, v6 + 32);
      swift_endAccess();
      swift_getObjectType();
      MessageSchemaDescribing.asPublic()(v15, v19);
      uint64_t result = (void *)swift_unknownObjectRelease();
      uint64_t v18 = v19[1] | 0x4000000000000000;
      *a4 = v19[0];
      a4[1] = v18;
    }
  }
  else
  {
    sub_259FB3304();
    swift_allocError();
    *(_OWORD *)uint64_t v17 = xmmword_25A011640;
    *(unsigned char *)(v17 + 16) = 7;
    return (void *)swift_willThrow();
  }
  return result;
}

uint64_t sub_259FF2A7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v4 = v1 + 32;
  swift_beginAccess();
  uint64_t result = sub_259FF3334((uint64_t *)(v1 + 32), (uint64_t)v25);
  if (v26)
  {
    if (v26 == 1)
    {
      *(_OWORD *)a1 = v25[0];
    }
    else
    {
      sub_259FF3424();
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        uint64_t v10 = Strong;
        uint64_t result = sub_259FF3434((uint64_t)v19);
        *a1 = v10;
        a1[1] = 0x40000002707EAD98uLL;
      }
      else
      {
        sub_259FB3304();
        swift_allocError();
        *(void *)uint64_t v12 = 0xD000000000000012;
        *(void *)(v12 + 8) = 0x800000025A010370;
        *(unsigned char *)(v12 + 16) = 2;
        swift_willThrow();
        return sub_259FF3434((uint64_t)v19);
      }
    }
    return result;
  }
  sub_259FF336C((uint64_t)v25, (uint64_t)v21);
  if (!MEMORY[0x25A2F2B50](v24))
  {
    sub_259FB3304();
    swift_allocError();
    *(void *)uint64_t v11 = 0xD000000000000012;
    *(void *)(v11 + 8) = 0x800000025A010370;
    *(unsigned char *)(v11 + 16) = 2;
    swift_willThrow();
    return sub_259FF33B8((uint64_t)v21);
  }
  uint64_t v6 = v24[1];
  if (v21[0] == 9)
  {
    uint64_t v7 = v23;
    if (v23)
    {
      uint64_t v8 = v22;
      swift_bridgeObjectRetain();
      sub_259FF2900(v6, v8, v7, a1);
      sub_259FF33B8((uint64_t)v21);
      swift_unknownObjectRelease();
      return swift_bridgeObjectRelease();
    }
    sub_259FB3304();
    swift_allocError();
    *(_OWORD *)uint64_t v17 = xmmword_25A011640;
    *(unsigned char *)(v17 + 16) = 7;
    swift_willThrow();
    swift_unknownObjectRelease();
    return sub_259FF33B8((uint64_t)v21);
  }
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  v18[0] = v21[0];
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain();
  sub_25A00C77C(v18, v13, v14, v6, v19);
  if (!v2)
  {
    uint64_t v15 = v19[0];
    uint64_t v16 = v19[1];
    char v20 = 1;
    swift_beginAccess();
    sub_259FBAA50(v15, v16);
    sub_259FF33EC((uint64_t)v19, v4);
    swift_endAccess();
    *a1 = v15;
    a1[1] = v16;
  }
  sub_259FF33B8((uint64_t)v21);
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_259FF2D58()
{
  sub_259FF3494((uint64_t)(v0 + 4));
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  unint64_t v4 = v0[15];
  return sub_259FAFD34(v1, v2, v3, v4);
}

uint64_t sub_259FF2D8C()
{
  swift_bridgeObjectRelease();
  sub_259FF3494(v0 + 32);
  sub_259FAFD34(*(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120));
  return MEMORY[0x270FA0228](v0, 133, 7);
}

uint64_t type metadata accessor for ProtoFieldSchema()
{
  return self;
}

uint64_t destroy for ProtoFieldSchema.FieldContainer(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 40);
  if (v2 >= 3) {
    unsigned int v2 = *(_DWORD *)a1 + 3;
  }
  if (v2 == 2)
  {
    return swift_weakDestroy();
  }
  else if (v2 == 1)
  {
    uint64_t v3 = *(void *)a1;
    uint64_t v4 = *(void *)(a1 + 8);
    return sub_259FAD1BC(v3, v4);
  }
  else
  {
    swift_bridgeObjectRelease();
    return swift_unknownObjectWeakDestroy();
  }
}

uint64_t initializeWithCopy for ProtoFieldSchema.FieldContainer(uint64_t a1, uint64_t *a2)
{
  unsigned int v4 = *((unsigned __int8 *)a2 + 40);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a2 + 3;
  }
  if (v4 == 2)
  {
    swift_weakCopyInit();
    char v7 = 2;
  }
  else if (v4 == 1)
  {
    uint64_t v6 = *a2;
    uint64_t v5 = a2[1];
    sub_259FBAA50(*a2, v5);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v5;
    char v7 = 1;
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v8 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v8;
    swift_bridgeObjectRetain();
    swift_unknownObjectWeakCopyInit();
    char v7 = 0;
    *(void *)(a1 + 32) = a2[4];
  }
  *(unsigned char *)(a1 + 40) = v7;
  return a1;
}

uint64_t assignWithCopy for ProtoFieldSchema.FieldContainer(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 == 2)
    {
      swift_weakDestroy();
    }
    else if (v4 == 1)
    {
      sub_259FAD1BC(*(void *)a1, *(void *)(a1 + 8));
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectWeakDestroy();
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    if (v5 == 2)
    {
      swift_weakCopyInit();
      char v8 = 2;
    }
    else if (v5 == 1)
    {
      uint64_t v7 = *(void *)a2;
      uint64_t v6 = *(void *)(a2 + 8);
      sub_259FBAA50(v7, v6);
      *(void *)a1 = v7;
      *(void *)(a1 + 8) = v6;
      char v8 = 1;
    }
    else
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_unknownObjectWeakCopyInit();
      char v8 = 0;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    *(unsigned char *)(a1 + 40) = v8;
  }
  return a1;
}

uint64_t initializeWithTake for ProtoFieldSchema.FieldContainer(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 40);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a2 + 3;
  }
  if (v4 == 2)
  {
    swift_weakTakeInit();
    LOBYTE(v4) = 2;
  }
  else if (v4 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    swift_unknownObjectWeakTakeInit();
    LOBYTE(v4) = 0;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  *(unsigned char *)(a1 + 40) = v4;
  return a1;
}

uint64_t assignWithTake for ProtoFieldSchema.FieldContainer(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 == 2)
    {
      swift_weakDestroy();
    }
    else if (v4 == 1)
    {
      sub_259FAD1BC(*(void *)a1, *(void *)(a1 + 8));
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectWeakDestroy();
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    if (v5 == 2)
    {
      swift_weakTakeInit();
      LOBYTE(v5) = 2;
    }
    else if (v5 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      swift_unknownObjectWeakTakeInit();
      LOBYTE(v5) = 0;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    *(unsigned char *)(a1 + 40) = v5;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ProtoFieldSchema.FieldContainer(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ProtoFieldSchema.FieldContainer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_259FF327C(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 3) {
    return (*(_DWORD *)a1 + 3);
  }
  return result;
}

uint64_t sub_259FF3298(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ProtoFieldSchema.FieldContainer()
{
  return &type metadata for ProtoFieldSchema.FieldContainer;
}

uint64_t sub_259FF32D0()
{
  return *(unsigned __int8 *)(v0 + 73);
}

uint64_t sub_259FF32D8()
{
  return 1;
}

uint64_t sub_259FF32E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[12];
  uint64_t v3 = v1[13];
  uint64_t v4 = v1[14];
  unint64_t v5 = v1[15];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_259FB45E0(v2, v3, v4, v5);
}

unint64_t sub_259FF32F4()
{
  return *(unsigned int *)(v0 + 128) | ((unint64_t)*(unsigned __int8 *)(v0 + 132) << 32);
}

uint64_t sub_259FF3314()
{
  return *(void *)(v0 + 80);
}

uint64_t sub_259FF331C@<X0>(uint64_t *a1@<X8>)
{
  return sub_259FF2A7C(a1);
}

uint64_t sub_259FF3334(uint64_t *a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_259FF336C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a2 = *(unsigned char *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  swift_unknownObjectWeakTakeInit();
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  return a2;
}

uint64_t sub_259FF33B8(uint64_t a1)
{
  return a1;
}

uint64_t sub_259FF33EC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_259FF3424()
{
  return swift_weakTakeInit();
}

uint64_t sub_259FF3434(uint64_t a1)
{
  return a1;
}

uint64_t sub_259FF345C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_259FF3494(uint64_t a1)
{
  return a1;
}

uint64_t assignWithCopy for ProtoFieldSchema.MessageFieldType()
{
  return MEMORY[0x270FA0638]();
}

uint64_t assignWithTake for ProtoFieldSchema.MessageFieldType()
{
  return MEMORY[0x270FA0660]();
}

uint64_t getEnumTagSinglePayload for ProtoFieldSchema.MessageFieldType(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ProtoFieldSchema.MessageFieldType(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ProtoFieldSchema.MessageFieldType()
{
  return &type metadata for ProtoFieldSchema.MessageFieldType;
}

uint64_t destroy for ProtoFieldSchema.Config()
{
  swift_bridgeObjectRelease();
  return swift_unknownObjectWeakDestroy();
}

uint64_t initializeWithCopy for ProtoFieldSchema.Config(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRetain();
  swift_unknownObjectWeakCopyInit();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t assignWithCopy for ProtoFieldSchema.Config(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakCopyAssign();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t initializeWithTake for ProtoFieldSchema.Config(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectWeakTakeInit();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for ProtoFieldSchema.Config(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakTakeAssign();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProtoFieldSchema.Config(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  if ((*(void *)(a1 + 32) & 0xF000000000000007) != 0) {
    int v2 = *(_DWORD *)(a1 + 24) & 0x7FFFFFFF;
  }
  else {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProtoFieldSchema.Config(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      *(void *)(result + 32) = 1;
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProtoFieldSchema.Config()
{
  return &type metadata for ProtoFieldSchema.Config;
}

unint64_t *sub_259FF3780@<X0>(unint64_t *result@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4 = *result;
  unint64_t v3 = result[1];
  if (!(v3 >> 62))
  {
    uint64_t v8 = *v2;
    if (*v2)
    {
      uint64_t v9 = v2[1] - v8;
      uint64_t v10 = v2[3];
      if (v10 >= v9) {
        goto LABEL_168;
      }
    }
    else
    {
      uint64_t v10 = v2[3];
      if ((v10 & 0x8000000000000000) == 0) {
        goto LABEL_168;
      }
      uint64_t v9 = 0;
    }
    LODWORD(v11) = *(unsigned __int8 *)(v8 + v10);
    uint64_t v12 = v10 + 1;
    if (*(char *)(v8 + v10) < 0)
    {
      if (v12 >= v9) {
        goto LABEL_168;
      }
      v11 &= 0x7Fu;
      uint64_t v13 = v8 + 1;
      unint64_t v14 = 7;
      while (1)
      {
        uint64_t v15 = v10 + 2;
        v11 |= (unint64_t)(*(unsigned char *)(v13 + v10) & 0x7F) << v14;
        if ((*(unsigned char *)(v13 + v10) & 0x80) == 0) {
          break;
        }
        if (v15 < v9)
        {
          ++v10;
          BOOL v16 = v14 > 0x38;
          v14 += 7;
          if (!v16) {
            continue;
          }
        }
        goto LABEL_168;
      }
      _OWORD v2[3] = v15;
    }
    else
    {
      _OWORD v2[3] = v12;
    }
    *(void *)a2 = v4;
    *(void *)(a2 + 8) = v3;
    *(void *)(a2 + 16) = (int)v11;
    *(void *)(a2 + 24) = 0;
    *(unsigned char *)(a2 + 32) = 1;
    *(unsigned char *)(a2 + 40) = 7;
    return (unint64_t *)sub_259FBAA50(v4, v3);
  }
  if (v3 >> 62 == 2 && v4 <= 0xC)
  {
    switch(v4)
    {
      case 1uLL:
        uint64_t v17 = *v2;
        if (*v2)
        {
          uint64_t v18 = v2[1] - v17;
          uint64_t v19 = v2[3];
          if (v19 >= v18) {
            break;
          }
        }
        else
        {
          uint64_t v19 = v2[3];
          if ((v19 & 0x8000000000000000) == 0) {
            break;
          }
          uint64_t v18 = 0;
        }
        LODWORD(v55) = *(unsigned __int8 *)(v17 + v19);
        uint64_t v56 = v19 + 1;
        if ((*(char *)(v17 + v19) & 0x80000000) == 0)
        {
          _OWORD v2[3] = v56;
          goto LABEL_69;
        }
        if (v56 < v18)
        {
          v55 &= 0x7Fu;
          uint64_t v84 = v17 + 1;
          unint64_t v85 = 7;
          while (1)
          {
            uint64_t v86 = v19 + 2;
            v55 |= (unint64_t)(*(unsigned char *)(v84 + v19) & 0x7F) << v85;
            if ((*(unsigned char *)(v84 + v19) & 0x80) == 0) {
              break;
            }
            if (v86 < v18)
            {
              ++v19;
              BOOL v16 = v85 > 0x38;
              v85 += 7;
              if (!v16) {
                continue;
              }
            }
            goto LABEL_168;
          }
          _OWORD v2[3] = v86;
LABEL_69:
          *(_DWORD *)a2 = v55;
          char v57 = 1;
          goto LABEL_119;
        }
        break;
      case 2uLL:
        uint64_t v20 = *v2;
        if (*v2)
        {
          uint64_t v21 = v2[1] - v20;
          uint64_t v22 = v2[3];
          if (v22 >= v21) {
            break;
          }
        }
        else
        {
          uint64_t v22 = v2[3];
          if ((v22 & 0x8000000000000000) == 0) {
            break;
          }
          uint64_t v21 = 0;
        }
        LODWORD(v58) = *(unsigned __int8 *)(v20 + v22);
        uint64_t v59 = v22 + 1;
        if ((*(char *)(v20 + v22) & 0x80000000) == 0)
        {
          _OWORD v2[3] = v59;
          goto LABEL_74;
        }
        if (v59 < v21)
        {
          v58 &= 0x7Fu;
          uint64_t v87 = v20 + 1;
          unint64_t v88 = 7;
          while (1)
          {
            uint64_t v89 = v22 + 2;
            v58 |= (unint64_t)(*(unsigned char *)(v87 + v22) & 0x7F) << v88;
            if ((*(unsigned char *)(v87 + v22) & 0x80) == 0) {
              break;
            }
            if (v89 < v21)
            {
              ++v22;
              BOOL v16 = v88 > 0x38;
              v88 += 7;
              if (!v16) {
                continue;
              }
            }
            goto LABEL_168;
          }
          _OWORD v2[3] = v89;
LABEL_74:
          *(_DWORD *)a2 = -(v58 & 1) ^ (v58 >> 1);
          *(unsigned char *)(a2 + 40) = 0;
          return result;
        }
        break;
      case 3uLL:
        uint64_t v23 = v2[3];
        uint64_t v24 = *v2;
        if (*v2)
        {
          if (v2[1] - v24 < v23) {
            goto LABEL_182;
          }
          uint64_t v25 = (int *)(v24 + v23);
        }
        else
        {
          if (v23 > 0)
          {
LABEL_188:
            __break(1u);
            goto LABEL_189;
          }
          uint64_t v25 = 0;
        }
        BOOL v60 = __OFADD__(v23, 4);
        uint64_t v61 = v23 + 4;
        if (!v60)
        {
          int v62 = *v25;
          _OWORD v2[3] = v61;
          *(_DWORD *)a2 = v62;
          char v57 = 1;
LABEL_119:
          *(unsigned char *)(a2 + 40) = v57;
          return result;
        }
        __break(1u);
LABEL_177:
        __break(1u);
LABEL_178:
        __break(1u);
LABEL_179:
        __break(1u);
LABEL_180:
        __break(1u);
LABEL_181:
        __break(1u);
LABEL_182:
        __break(1u);
        goto LABEL_183;
      case 4uLL:
        uint64_t v26 = v2[3];
        uint64_t v27 = *v2;
        if (*v2)
        {
          if (v2[1] - v27 < v26)
          {
LABEL_183:
            __break(1u);
            goto LABEL_184;
          }
          uint64_t v28 = (int *)(v27 + v26);
        }
        else
        {
          if (v26 > 0)
          {
LABEL_189:
            __break(1u);
            goto LABEL_190;
          }
          uint64_t v28 = 0;
        }
        BOOL v60 = __OFADD__(v26, 4);
        uint64_t v63 = v26 + 4;
        if (!v60)
        {
          int v64 = *v28;
          _OWORD v2[3] = v63;
          *(_DWORD *)a2 = v64;
          *(unsigned char *)(a2 + 40) = 0;
          return result;
        }
        goto LABEL_177;
      case 5uLL:
        uint64_t v29 = *v2;
        if (*v2)
        {
          uint64_t v30 = v2[1] - v29;
          uint64_t v31 = v2[3];
          if (v31 >= v30) {
            break;
          }
        }
        else
        {
          uint64_t v31 = v2[3];
          if ((v31 & 0x8000000000000000) == 0) {
            break;
          }
          uint64_t v30 = 0;
        }
        uint64_t v65 = *(unsigned __int8 *)(v29 + v31);
        uint64_t v66 = v31 + 1;
        if ((*(char *)(v29 + v31) & 0x80000000) == 0)
        {
          _OWORD v2[3] = v66;
          goto LABEL_87;
        }
        if (v66 < v30)
        {
          v65 &= 0x7Fu;
          uint64_t v90 = v29 + 1;
          unint64_t v91 = 7;
          while (1)
          {
            uint64_t v92 = v31 + 2;
            v65 |= (unint64_t)(*(unsigned char *)(v90 + v31) & 0x7F) << v91;
            if ((*(unsigned char *)(v90 + v31) & 0x80) == 0) {
              break;
            }
            if (v92 < v30)
            {
              ++v31;
              BOOL v16 = v91 > 0x38;
              v91 += 7;
              if (!v16) {
                continue;
              }
            }
            goto LABEL_168;
          }
          _OWORD v2[3] = v92;
LABEL_87:
          *(void *)a2 = v65;
          char v57 = 2;
          goto LABEL_119;
        }
        break;
      case 6uLL:
        uint64_t v32 = *v2;
        if (*v2)
        {
          uint64_t v33 = v2[1] - v32;
          uint64_t v34 = v2[3];
          if (v34 >= v33) {
            break;
          }
        }
        else
        {
          uint64_t v34 = v2[3];
          if ((v34 & 0x8000000000000000) == 0) {
            break;
          }
          uint64_t v33 = 0;
        }
        uint64_t v67 = *(unsigned __int8 *)(v32 + v34);
        uint64_t v68 = v34 + 1;
        if ((*(char *)(v32 + v34) & 0x80000000) == 0)
        {
          _OWORD v2[3] = v68;
          goto LABEL_92;
        }
        if (v68 < v33)
        {
          v67 &= 0x7Fu;
          uint64_t v93 = v32 + 1;
          unint64_t v94 = 7;
          while (1)
          {
            uint64_t v95 = v34 + 2;
            v67 |= (unint64_t)(*(unsigned char *)(v93 + v34) & 0x7F) << v94;
            if ((*(unsigned char *)(v93 + v34) & 0x80) == 0) {
              break;
            }
            if (v95 < v33)
            {
              ++v34;
              BOOL v16 = v94 > 0x38;
              v94 += 7;
              if (!v16) {
                continue;
              }
            }
            goto LABEL_168;
          }
          _OWORD v2[3] = v95;
LABEL_92:
          *(void *)a2 = v67;
          char v57 = 3;
          goto LABEL_119;
        }
        break;
      case 7uLL:
        uint64_t v35 = *v2;
        if (*v2)
        {
          uint64_t v36 = v2[1] - v35;
          uint64_t v37 = v2[3];
          if (v37 >= v36) {
            break;
          }
        }
        else
        {
          uint64_t v37 = v2[3];
          if ((v37 & 0x8000000000000000) == 0) {
            break;
          }
          uint64_t v36 = 0;
        }
        unint64_t v69 = *(unsigned __int8 *)(v35 + v37);
        uint64_t v70 = v37 + 1;
        if ((*(char *)(v35 + v37) & 0x80000000) == 0)
        {
          _OWORD v2[3] = v70;
          goto LABEL_97;
        }
        if (v70 < v36)
        {
          v69 &= 0x7Fu;
          uint64_t v96 = v35 + 1;
          unint64_t v97 = 7;
          while (1)
          {
            uint64_t v98 = v37 + 2;
            v69 |= (unint64_t)(*(unsigned char *)(v96 + v37) & 0x7F) << v97;
            if ((*(unsigned char *)(v96 + v37) & 0x80) == 0) {
              break;
            }
            if (v98 < v36)
            {
              ++v37;
              BOOL v16 = v97 > 0x38;
              v97 += 7;
              if (!v16) {
                continue;
              }
            }
            goto LABEL_168;
          }
          _OWORD v2[3] = v98;
LABEL_97:
          *(void *)a2 = -(uint64_t)(v69 & 1) ^ (v69 >> 1);
          char v57 = 2;
          goto LABEL_119;
        }
        break;
      case 8uLL:
        uint64_t v38 = v2[3];
        uint64_t v39 = *v2;
        if (*v2)
        {
          if (v2[1] - v39 < v38)
          {
LABEL_184:
            __break(1u);
            goto LABEL_185;
          }
          uint64_t v40 = (uint64_t *)(v39 + v38);
        }
        else
        {
          if (v38 > 0)
          {
LABEL_190:
            __break(1u);
            goto LABEL_191;
          }
          uint64_t v40 = 0;
        }
        BOOL v60 = __OFADD__(v38, 8);
        uint64_t v71 = v38 + 8;
        if (!v60)
        {
          uint64_t v72 = *v40;
          _OWORD v2[3] = v71;
          *(void *)a2 = v72;
          char v57 = 3;
          goto LABEL_119;
        }
        goto LABEL_178;
      case 9uLL:
        uint64_t v41 = v2[3];
        uint64_t v42 = *v2;
        if (*v2)
        {
          if (v2[1] - v42 < v41)
          {
LABEL_185:
            __break(1u);
            goto LABEL_186;
          }
          unint64_t v43 = (uint64_t *)(v42 + v41);
        }
        else
        {
          if (v41 > 0)
          {
LABEL_191:
            __break(1u);
            goto LABEL_192;
          }
          unint64_t v43 = 0;
        }
        BOOL v60 = __OFADD__(v41, 8);
        uint64_t v73 = v41 + 8;
        if (!v60)
        {
          uint64_t v74 = *v43;
          _OWORD v2[3] = v73;
          *(void *)a2 = v74;
          char v57 = 2;
          goto LABEL_119;
        }
        goto LABEL_179;
      case 0xAuLL:
        uint64_t v44 = v2[3];
        uint64_t v45 = *v2;
        if (*v2)
        {
          if (v2[1] - v45 < v44)
          {
LABEL_186:
            __break(1u);
            goto LABEL_187;
          }
          unint64_t v46 = (uint64_t *)(v45 + v44);
        }
        else
        {
          if (v44 > 0)
          {
LABEL_192:
            __break(1u);
            goto LABEL_193;
          }
          unint64_t v46 = 0;
        }
        BOOL v60 = __OFADD__(v44, 8);
        uint64_t v75 = v44 + 8;
        if (!v60)
        {
          uint64_t v76 = *v46;
          _OWORD v2[3] = v75;
          *(void *)a2 = v76;
          char v57 = 5;
          goto LABEL_119;
        }
        goto LABEL_180;
      case 0xBuLL:
        uint64_t v47 = v2[3];
        uint64_t v48 = *v2;
        if (*v2)
        {
          if (v2[1] - v48 < v47)
          {
LABEL_187:
            __break(1u);
            goto LABEL_188;
          }
          uint64_t v49 = (int *)(v48 + v47);
        }
        else
        {
          if (v47 > 0)
          {
LABEL_193:
            __break(1u);
            JUMPOUT(0x259FF3F88);
          }
          uint64_t v49 = 0;
        }
        BOOL v60 = __OFADD__(v47, 4);
        uint64_t v77 = v47 + 4;
        if (!v60)
        {
          int v78 = *v49;
          _OWORD v2[3] = v77;
          *(_DWORD *)a2 = v78;
          char v57 = 4;
          goto LABEL_119;
        }
        goto LABEL_181;
      case 0xCuLL:
        uint64_t v50 = *v2;
        if (*v2)
        {
          uint64_t v51 = v2[1] - v50;
          uint64_t v52 = v2[3];
          if (v52 >= v51) {
            break;
          }
        }
        else
        {
          uint64_t v52 = v2[3];
          if ((v52 & 0x8000000000000000) == 0) {
            break;
          }
          uint64_t v51 = 0;
        }
        uint64_t v79 = *(unsigned __int8 *)(v50 + v52);
        uint64_t v80 = v52 + 1;
        if ((*(char *)(v50 + v52) & 0x80000000) == 0)
        {
          _OWORD v2[3] = v80;
          goto LABEL_118;
        }
        if (v80 < v51)
        {
          v79 &= 0x7Fu;
          uint64_t v99 = v50 + 1;
          unint64_t v100 = 7;
          while (1)
          {
            uint64_t v101 = v52 + 2;
            v79 |= (unint64_t)(*(unsigned char *)(v99 + v52) & 0x7F) << v100;
            if ((*(unsigned char *)(v99 + v52) & 0x80) == 0) {
              break;
            }
            if (v101 < v51)
            {
              ++v52;
              BOOL v16 = v100 > 0x38;
              v100 += 7;
              if (!v16) {
                continue;
              }
            }
            goto LABEL_168;
          }
          _OWORD v2[3] = v101;
LABEL_118:
          *(unsigned char *)a2 = v79 != 0;
          char v57 = 6;
          goto LABEL_119;
        }
        break;
      default:
        uint64_t v5 = *v2;
        if (*v2)
        {
          uint64_t v6 = v2[1] - v5;
          uint64_t v7 = v2[3];
          if (v7 >= v6) {
            break;
          }
        }
        else
        {
          uint64_t v7 = v2[3];
          if ((v7 & 0x8000000000000000) == 0) {
            break;
          }
          uint64_t v6 = 0;
        }
        LODWORD(v53) = *(unsigned __int8 *)(v5 + v7);
        uint64_t v54 = v7 + 1;
        if ((*(char *)(v5 + v7) & 0x80000000) == 0)
        {
          _OWORD v2[3] = v54;
          goto LABEL_64;
        }
        if (v54 < v6)
        {
          v53 &= 0x7Fu;
          uint64_t v81 = v5 + 1;
          unint64_t v82 = 7;
          while (1)
          {
            uint64_t v83 = v7 + 2;
            v53 |= (unint64_t)(*(unsigned char *)(v81 + v7) & 0x7F) << v82;
            if ((*(unsigned char *)(v81 + v7) & 0x80) == 0) {
              break;
            }
            if (v83 < v6)
            {
              ++v7;
              BOOL v16 = v82 > 0x38;
              v82 += 7;
              if (!v16) {
                continue;
              }
            }
            goto LABEL_168;
          }
          _OWORD v2[3] = v83;
LABEL_64:
          *(_DWORD *)a2 = v53;
          *(unsigned char *)(a2 + 40) = 0;
          return result;
        }
        break;
    }
  }
LABEL_168:
  sub_259FBA9FC();
  swift_allocError();
  *(void *)uint64_t v102 = 1;
  *(_OWORD *)(v102 + 8) = 0u;
  *(_OWORD *)(v102 + 24) = 0u;
  *(_OWORD *)(v102 + 40) = 0u;
  *(void *)(v102 + 56) = 0;
  *(unsigned char *)(v102 + 64) = 2;
  return (unint64_t *)swift_willThrow();
}

uint64_t sub_259FF3FF8()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *v0;
  if (*v0)
  {
    if (v0[1] - v2 < v1)
    {
LABEL_9:
      __break(1u);
      goto LABEL_10;
    }
    unint64_t v3 = (unsigned int *)(v2 + v1);
    BOOL v4 = __OFADD__(v1, 4);
    uint64_t v5 = v1 + 4;
    if (!v4)
    {
LABEL_4:
      uint64_t result = *v3;
      v0[3] = v5;
      return result;
    }
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v1 <= 0)
  {
    unint64_t v3 = 0;
    BOOL v4 = __OFADD__(v1, 4);
    uint64_t v5 = v1 + 4;
    if (!v4) {
      goto LABEL_4;
    }
    goto LABEL_8;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t *sub_259FF404C(uint64_t *result, uint64_t a2)
{
  unint64_t v3 = result[1];
  if (v3 >> 62)
  {
    if (v3 >> 62 == 1
      || (uint64_t v4 = *result, __PAIR128__(((unint64_t)*result >= 0xD) + v3 + 0x7FFFFFFFFFFFFFFFLL, *result - 13) < 2))
    {
LABEL_22:
      sub_259FBA9FC();
      swift_allocError();
      *(void *)uint64_t v14 = 1;
      *(_OWORD *)(v14 + 8) = 0u;
      *(_OWORD *)(v14 + 24) = 0u;
      *(_OWORD *)(v14 + 40) = 0u;
      *(void *)(v14 + 56) = 0;
      *(unsigned char *)(v14 + 64) = 2;
      return (uint64_t *)swift_willThrow();
    }
    if (((1 << v4) & 0x10E7) == 0)
    {
      if (((1 << v4) & 0x700) != 0)
      {
        if ((unint64_t)(a2 - 0x1000000000000000) >> 61 != 7)
        {
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
        uint64_t v15 = v2[3];
        BOOL v16 = __OFADD__(v15, 8 * a2);
        uint64_t v17 = v15 + 8 * a2;
        if (v16)
        {
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        uint64_t v18 = *v2;
        if (*v2)
        {
LABEL_28:
          if (v17 >= v2[1] - v18) {
            return result;
          }
          goto LABEL_34;
        }
      }
      else
      {
        if ((unint64_t)(a2 - 0x2000000000000000) >> 62 != 3)
        {
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
        uint64_t v19 = v2[3];
        BOOL v16 = __OFADD__(v19, 4 * a2);
        uint64_t v17 = v19 + 4 * a2;
        if (v16)
        {
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t v18 = *v2;
        if (*v2) {
          goto LABEL_28;
        }
      }
      if ((v17 & 0x8000000000000000) == 0) {
        return result;
      }
LABEL_34:
      _OWORD v2[3] = v17;
      return result;
    }
  }
  if (a2 < 0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (a2)
  {
    uint64_t v5 = 0;
    uint64_t v6 = *v2;
    uint64_t v7 = v2[1] - *v2;
    uint64_t v8 = v2[3];
    uint64_t v9 = *v2 + 1;
    while (v5 != a2)
    {
      if (v6)
      {
        uint64_t v10 = v7;
        if (v8 >= v7) {
          goto LABEL_22;
        }
      }
      else
      {
        if ((v8 & 0x8000000000000000) == 0) {
          goto LABEL_22;
        }
        uint64_t v10 = 0;
      }
      uint64_t v11 = v8 + 1;
      if (*(char *)(v6 + v8) < 0)
      {
        if (v11 >= v10) {
          goto LABEL_22;
        }
        unint64_t v12 = 7;
        while (1)
        {
          uint64_t v11 = v8 + 2;
          if ((*(char *)(v9 + v8) & 0x80000000) == 0) {
            break;
          }
          if (v11 < v10)
          {
            ++v8;
            BOOL v13 = v12 > 0x38;
            v12 += 7;
            if (!v13) {
              continue;
            }
          }
          goto LABEL_22;
        }
      }
      ++v5;
      _OWORD v2[3] = v11;
      uint64_t v8 = v11;
      if (v5 == a2) {
        return result;
      }
    }
    __break(1u);
    goto LABEL_36;
  }
  return result;
}

uint64_t sub_259FF4230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_259FFC740(a1, (uint64_t)v16);
  uint64_t v8 = v16[0];
  unint64_t v9 = v16[1];
  uint64_t v10 = v16[2];
  uint64_t v11 = v16[3];
  __int16 v12 = v17;
  sub_259FFC740(a1, (uint64_t)v18);
  if (v19 >> 12 <= 0xEu)
  {
    uint64_t v20 = v8;
    unint64_t v21 = v9;
    uint64_t v22 = v10;
    uint64_t v23 = v11;
    __int16 v24 = v12;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_259FFB7FC((uint64_t)&v20, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v15;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_259FFB0CC(a2, a3, (uint64_t)&v20);
    swift_bridgeObjectRelease();
    return sub_259FB66F8(v20, v21, v22, v23, v24);
  }
}

uint64_t SchematizedDataComposer.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    uint64_t v20 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    MessageSchemaDescribing.asPublic()(v20, &v24);
    unint64_t v9 = v25;
    uint64_t v10 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v9 + 56))(a3, a4, v10, v9);
    uint64_t v12 = v11;
    swift_getObjectType();
    FieldSchemaDescribing.asPublic()(v12, &v26);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    unint64_t v13 = v27;
    uint64_t v14 = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t))(v13 + 56))(&v24, v14, v13);
    uint64_t v16 = v24;
    uint64_t v15 = v25;
    if (v25 >> 62)
    {
      if (v25 >> 62 == 2 && v24 == 13 && v25 == 0x8000000000000000)
      {
        uint64_t v26 = a1;
        unint64_t v27 = a2;
        uint64_t v28 = 0;
        uint64_t v29 = 0;
        __int16 v30 = 2048;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v23 = *(void *)(v4 + 16);
        *(void *)(v4 + 16) = 0x8000000000000000;
        sub_259FFB7FC((uint64_t)&v26, a3, a4, isUniquelyReferenced_nonNull_native);
        *(void *)(v4 + 16) = v23;
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v26 = 0;
        unint64_t v27 = 0xE000000000000000;
        sub_25A00ED10();
        swift_bridgeObjectRelease();
        uint64_t v26 = 0x73696D2065707954;
        unint64_t v27 = 0xEF203A686374616DLL;
        (*(void (**)(uint64_t))(*(void *)(v20 + 8) + 8))(ObjectType);
        sub_25A00EA80();
        swift_bridgeObjectRelease();
        sub_25A00EA80();
        sub_25A00EA80();
        uint64_t result = sub_25A00EDB0();
        __break(1u);
      }
    }
    else
    {
      uint64_t v26 = v24;
      unint64_t v27 = v25;
      uint64_t v28 = a1;
      uint64_t v29 = a2;
      __int16 v30 = 1792;
      swift_unknownObjectRetain();
      char v17 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v22 = *(void *)(v4 + 16);
      *(void *)(v4 + 16) = 0x8000000000000000;
      sub_259FFB7FC((uint64_t)&v26, a3, a4, v17);
      *(void *)(v4 + 16) = v22;
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_259FAD1BC(v16, v15);
    }
  }
  else
  {
    sub_259FFB0CC(a3, a4, (uint64_t)&v26);
    swift_bridgeObjectRelease();
    return sub_259FB66F8(v26, v27, v28, v29, v30);
  }
  return result;
}

uint64_t SchematizedDataComposer.subscript.setter(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 >> 60 == 15)
  {
    sub_259FFB0CC(a3, a4, (uint64_t)&v10);
    swift_bridgeObjectRelease();
    return sub_259FB66F8(v10, v11, v12, v13, v14);
  }
  else
  {
    uint64_t v10 = a1;
    unint64_t v11 = a2;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    __int16 v14 = 2304;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *(void *)(v4 + 16);
    *(void *)(v4 + 16) = 0x8000000000000000;
    sub_259FFB7FC((uint64_t)&v10, a3, a4, isUniquelyReferenced_nonNull_native);
    *(void *)(v4 + 16) = v9;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t SchematizedDataComposer.subscript.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    sub_259FFB0CC(a3, a4, (uint64_t)&v28);
    swift_bridgeObjectRelease();
    return sub_259FB66F8(v28, v29, v30, v31, v32);
  }
  else
  {
    uint64_t v8 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    MessageSchemaDescribing.asPublic()(v8, &v26);
    unint64_t v9 = v27;
    uint64_t v10 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v9 + 56))(a3, a4, v10, v9);
    uint64_t v12 = v11;
    swift_getObjectType();
    FieldSchemaDescribing.asPublic()(v12, &v28);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    unint64_t v13 = v29;
    uint64_t v14 = swift_getObjectType();
    (*(void (**)(unint64_t *__return_ptr, uint64_t, unint64_t))(v13 + 56))(&v26, v14, v13);
    uint64_t v15 = v26;
    uint64_t v16 = v27;
    if (v27 >> 62)
    {
      if (v27 >> 62 != 2 || v26 > 0xC)
      {
LABEL_17:
        uint64_t v28 = 0;
        unint64_t v29 = 0xE000000000000000;
        sub_25A00ED10();
        swift_bridgeObjectRelease();
        uint64_t v28 = 0x73696D2065707954;
        unint64_t v29 = 0xEF203A686374616DLL;
        (*(void (**)(uint64_t))(*(void *)(v8 + 8) + 8))(ObjectType);
        sub_25A00EA80();
        swift_bridgeObjectRelease();
        sub_25A00EA80();
        sub_25A00EA80();
        sub_25A00EDB0();
        __break(1u);
        JUMPOUT(0x259FF4DD4);
      }
      switch(v26)
      {
        case 1uLL:
        case 3uLL:
          uint64_t v28 = a1;
          unint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = 0;
          __int16 v19 = 256;
          goto LABEL_12;
        case 5uLL:
        case 7uLL:
        case 9uLL:
          uint64_t v28 = a1;
          unint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = 0;
          __int16 v19 = 512;
          goto LABEL_12;
        case 6uLL:
        case 8uLL:
          uint64_t v28 = a1;
          unint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = 0;
          __int16 v19 = 768;
LABEL_12:
          __int16 v32 = v19;
          goto LABEL_13;
        case 0xAuLL:
        case 0xBuLL:
          goto LABEL_17;
        case 0xCuLL:
          uint64_t v28 = a1 != 0;
          unint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = 0;
          __int16 v32 = 1536;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v25 = *(void *)(v4 + 16);
          *(void *)(v4 + 16) = 0x8000000000000000;
          sub_259FFB7FC((uint64_t)&v28, a3, a4, isUniquelyReferenced_nonNull_native);
          unint64_t v21 = v25;
          goto LABEL_14;
        default:
          uint64_t v28 = a1;
          unint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = 0;
          __int16 v32 = 0;
LABEL_13:
          char v20 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v26 = *(void *)(v4 + 16);
          *(void *)(v4 + 16) = 0x8000000000000000;
          sub_259FFB7FC((uint64_t)&v28, a3, a4, v20);
          unint64_t v21 = v26;
LABEL_14:
          *(void *)(v4 + 16) = v21;
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          break;
      }
    }
    else
    {
      uint64_t v28 = v26;
      unint64_t v29 = v27;
      uint64_t v30 = a1;
      uint64_t v31 = 0;
      __int16 v32 = 1793;
      swift_unknownObjectRetain();
      char v17 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v24 = *(void *)(v4 + 16);
      *(void *)(v4 + 16) = 0x8000000000000000;
      sub_259FFB7FC((uint64_t)&v28, a3, a4, v17);
      *(void *)(v4 + 16) = v24;
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_259FAD1BC(v15, v16);
    }
  }
  return result;
}

{
  return sub_259FF76B8(a1, a2, a3, a4, 512);
}

{
  return sub_259FF76B8(a1, a2, a3, a4, 768);
}

{
  return sub_259FF76B8(a1, a2, a3, a4, 1280);
}

uint64_t SchematizedDataComposer.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = *(void *)(v3 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  SchematizedDataComposer.subscript.getter(a1, a2, (uint64_t)&v13);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (HIBYTE(v17) <= 0xFEu)
  {
    uint64_t result = v13;
    unint64_t v9 = v14;
    uint64_t v10 = v15;
    uint64_t v11 = v16;
    if ((v17 & 0xFF00) == 0xA00)
    {
      *a3 = v13;
      a3[1] = v9;
      a3[2] = v10;
      a3[3] = v11;
      return result;
    }
    sub_259FE3748(v13, v14, v15, v16, v17);
  }
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_25A00ED10();
  swift_bridgeObjectRelease();
  uint64_t v13 = 0x73696D2065707954;
  unint64_t v14 = 0xEF203A686374616DLL;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(v7 + 8) + 8))(ObjectType);
  sub_25A00EA80();
  swift_bridgeObjectRelease();
  sub_25A00EA80();
  sub_25A00EA80();
  uint64_t result = sub_25A00EDB0();
  __break(1u);
  return result;
}

double sub_259FF4FB4@<D0>(uint64_t *a1@<X1>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  SchematizedDataComposer.subscript.getter(v3, v4, v7);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  double result = *(double *)v7;
  long long v6 = v7[1];
  *a2 = v7[0];
  a2[1] = v6;
  return result;
}

uint64_t sub_259FF5040(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = a3[1];
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v7 = a1[2];
  unint64_t v8 = a1[3];
  if (*a1) {
    uint64_t v9 = a1[1];
  }
  else {
    uint64_t v9 = 0;
  }
  if (*a1) {
    uint64_t v10 = a1[2];
  }
  else {
    uint64_t v10 = 0;
  }
  if (*a1) {
    uint64_t v11 = a1[3];
  }
  else {
    uint64_t v11 = 0;
  }
  if (*a1) {
    __int16 v12 = 2560;
  }
  else {
    __int16 v12 = -4096;
  }
  v14[0] = *a1;
  v14[1] = v9;
  void v14[2] = v10;
  v14[3] = v11;
  __int16 v15 = v12;
  swift_bridgeObjectRetain();
  sub_259FB45E0(v5, v6, v7, v8);
  return sub_259FF4230((uint64_t)v14, v3, v4);
}

uint64_t SchematizedDataComposer.subscript.setter(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (*a1)
  {
    uint64_t v3 = a1[3];
    long long v4 = *(_OWORD *)(a1 + 1);
    __int16 v5 = 2560;
  }
  else
  {
    uint64_t v3 = 0;
    long long v4 = 0uLL;
    __int16 v5 = -4096;
  }
  uint64_t v7 = *a1;
  long long v8 = v4;
  uint64_t v9 = v3;
  __int16 v10 = v5;
  return sub_259FF4230((uint64_t)&v7, a2, a3);
}

void (*SchematizedDataComposer.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x88uLL);
  *a1 = v7;
  v7[15] = a3;
  v7[16] = v3;
  v7[14] = a2;
  SchematizedDataComposer.subscript.getter(a2, a3, v7 + 10);
  return sub_259FF51DC;
}

{
  uint64_t v3;
  void *v7;
  uint64_t v8;

  uint64_t v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  void v7[4] = v3;
  _OWORD v7[2] = a2;
  *uint64_t v7 = SchematizedDataComposer.subscript.getter(a2, a3);
  v7[1] = v8;
  return sub_259FF57E0;
}

void sub_259FF51DC(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[10];
  if (a2)
  {
    uint64_t v5 = v2[11];
    uint64_t v4 = v2[12];
    if (v3) {
      uint64_t v6 = v2[11];
    }
    else {
      uint64_t v6 = 0;
    }
    if (v3) {
      uint64_t v7 = v2[12];
    }
    else {
      uint64_t v7 = 0;
    }
    unint64_t v8 = v2[13];
    uint64_t v9 = v2[14];
    if (v3) {
      uint64_t v10 = v2[13];
    }
    else {
      uint64_t v10 = 0;
    }
    if (v3) {
      __int16 v11 = 2560;
    }
    else {
      __int16 v11 = -4096;
    }
    uint64_t v12 = v2[15];
    *uint64_t v2 = v3;
    v2[1] = v6;
    v2[2] = v7;
    _OWORD v2[3] = v10;
    *((_WORD *)v2 + 16) = v11;
    swift_bridgeObjectRetain();
    sub_259FB45E0(v3, v5, v4, v8);
    sub_259FF4230((uint64_t)v2, v9, v12);
    sub_259FAFD34(v2[10], v2[11], v2[12], v2[13]);
  }
  else
  {
    if (v3)
    {
      uint64_t v13 = v2[13];
      long long v14 = *(_OWORD *)(v2 + 11);
      __int16 v15 = 2560;
    }
    else
    {
      uint64_t v13 = 0;
      long long v14 = 0uLL;
      __int16 v15 = -4096;
    }
    uint64_t v16 = v2[15];
    uint64_t v17 = v2[14];
    v2[5] = v3;
    *((_OWORD *)v2 + 3) = v14;
    v2[8] = v13;
    *((_WORD *)v2 + 36) = v15;
    swift_bridgeObjectRetain();
    sub_259FF4230((uint64_t)(v2 + 5), v17, v16);
  }
  free(v2);
}

uint64_t sub_259FF56EC(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = a3[1];
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return SchematizedDataComposer.subscript.setter(v5, v6, v3, v4);
}

void sub_259FF57E0(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = **a1;
  uint64_t v4 = (*a1)[1];
  uint64_t v5 = (*a1)[3];
  uint64_t v6 = (*a1)[2];
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    SchematizedDataComposer.subscript.setter(v3, v4, v6, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    SchematizedDataComposer.subscript.setter(v3, v4, v6, v5);
  }
  free(v2);
}

uint64_t sub_259FF5A18@<X0>(uint64_t *a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = a2(v5, v6);
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  uint64_t result = swift_unknownObjectRelease();
  *a3 = v7;
  a3[1] = v9;
  return result;
}

uint64_t sub_259FF5AB4(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = a3[1];
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  if (v6 >> 60 == 15) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = *a1;
  }
  if (v6 >> 60 == 15) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = a1[1];
  }
  if (v6 >> 60 == 15) {
    __int16 v9 = -4096;
  }
  else {
    __int16 v9 = 2304;
  }
  v11[0] = v7;
  v11[1] = v8;
  void v11[2] = 0;
  v11[3] = 0;
  __int16 v12 = v9;
  swift_bridgeObjectRetain();
  sub_259FAF3C4(v5, v6);
  return sub_259FF4230((uint64_t)v11, v3, v4);
}

void sub_259FF5BD8(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 80);
  unint64_t v5 = *(void *)(*(void *)a1 + 88);
  uint64_t v4 = *(void *)(*(void *)a1 + 96);
  if (v5 >> 60 == 15) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)a1 + 80);
  }
  if (v5 >> 60 == 15) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)a1 + 88);
  }
  if (v5 >> 60 == 15) {
    __int16 v8 = -4096;
  }
  else {
    __int16 v8 = 2304;
  }
  uint64_t v9 = v2[13];
  if (a2)
  {
    *uint64_t v2 = v6;
    v2[1] = v7;
    v2[2] = 0;
    _OWORD v2[3] = 0;
    *((_WORD *)v2 + 16) = v8;
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v3, v5);
    sub_259FF4230((uint64_t)v2, v4, v9);
    sub_259FAF410(v2[10], v2[11]);
  }
  else
  {
    v2[5] = v6;
    v2[6] = v7;
    v2[7] = 0;
    v2[8] = 0;
    *((_WORD *)v2 + 36) = v8;
    swift_bridgeObjectRetain();
    sub_259FF4230((uint64_t)(v2 + 5), v4, v9);
  }
  free(v2);
}

uint64_t sub_259FF6134@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = SchematizedDataComposer.subscript.getter(v3, v4);
  LOBYTE(v3) = v6;
  swift_bridgeObjectRelease();
  uint64_t result = swift_unknownObjectRelease();
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v3 & 1;
  return result;
}

void (*SchematizedDataComposer.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, uint64_t a2)
{
  uint64_t v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  void v7[4] = v3;
  _OWORD v7[2] = a2;
  *uint64_t v7 = SchematizedDataComposer.subscript.getter(a2, a3);
  *((unsigned char *)v7 + 8) = v8 & 1;
  return sub_259FF6268;
}

{
  uint64_t v3;
  void *v7;

  uint64_t v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  void v7[4] = v3;
  _OWORD v7[2] = a2;
  *uint64_t v7 = SchematizedDataComposer.subscript.getter(a2, a3);
  *((unsigned char *)v7 + 8) = 0;
  return sub_259FF6AB0;
}

{
  uint64_t v3;
  void *v7;

  uint64_t v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  void v7[4] = v3;
  _OWORD v7[2] = a2;
  *uint64_t v7 = SchematizedDataComposer.subscript.getter(a2, a3);
  *((unsigned char *)v7 + 8) = 0;
  return sub_259FF70B0;
}

{
  uint64_t v3;
  void *v7;

  uint64_t v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  void v7[4] = v3;
  _OWORD v7[2] = a2;
  *uint64_t v7 = SchematizedDataComposer.subscript.getter(a2, a3);
  *((unsigned char *)v7 + 8) = 0;
  return sub_259FF7818;
}

void sub_259FF6268(uint64_t **a1, uint64_t a2)
{
}

uint64_t sub_259FF6420@<X0>(uint64_t *a1@<X1>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  char v5 = SchematizedDataComposer.subscript.getter(v3, v4);
  swift_bridgeObjectRelease();
  uint64_t result = swift_unknownObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t SchematizedDataComposer.subscript.setter(char a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 2)
  {
    sub_259FFB0CC(a2, a3, (uint64_t)&v9);
    swift_bridgeObjectRelease();
    return sub_259FB66F8(v9, v10, v11, v12, v13);
  }
  else
  {
    uint64_t v9 = a1 & 1;
    unint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    __int16 v13 = 1536;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *(void *)(v3 + 16);
    *(void *)(v3 + 16) = 0x8000000000000000;
    sub_259FFB7FC((uint64_t)&v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *(void *)(v3 + 16) = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t (*SchematizedDataComposer.subscript.modify(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = v3;
  *(void *)a1 = a2;
  *(unsigned char *)(a1 + 24) = SchematizedDataComposer.subscript.getter(a2, a3);
  return sub_259FF65EC;
}

uint64_t sub_259FF65EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)a1;
  char v3 = *(unsigned char *)(a1 + 24);
  swift_bridgeObjectRetain();
  return SchematizedDataComposer.subscript.setter(v3, v2, v1);
}

uint64_t (*SchematizedDataComposer.subscript.modify(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = v3;
  *(void *)a1 = a2;
  uint64_t v5 = SchematizedDataComposer.subscript.getter(a2, a3);
  *(_DWORD *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 28) = BYTE4(v5) & 1;
  return sub_259FF6854;
}

{
  uint64_t v3;
  uint64_t v5;

  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = v3;
  *(void *)a1 = a2;
  uint64_t v5 = SchematizedDataComposer.subscript.getter(a2, a3);
  *(_DWORD *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 28) = BYTE4(v5) & 1;
  return sub_259FF6DE0;
}

{
  uint64_t v3;
  uint64_t v5;

  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = v3;
  *(void *)a1 = a2;
  uint64_t v5 = SchematizedDataComposer.subscript.getter(a2, a3);
  *(_DWORD *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 28) = BYTE4(v5) & 1;
  return sub_259FF745C;
}

uint64_t sub_259FF6854(uint64_t a1, uint64_t a2)
{
  return sub_259FF6DF8(a1, a2, SchematizedDataComposer.subscript.setter);
}

void sub_259FF6AB0(uint64_t **a1, uint64_t a2)
{
}

void sub_259FF6AC8(uint64_t **a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[3];
  uint64_t v6 = (*a1)[2];
  uint64_t v7 = **a1;
  uint64_t v8 = *((unsigned __int8 *)*a1 + 8);
  swift_bridgeObjectRetain();
  a3(v7, v8, v6, v5);
  free(v4);
}

uint64_t sub_259FF6CF4(unsigned int *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t (*a5)(unint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  uint64_t v8 = *a1;
  unsigned __int8 v9 = *((unsigned char *)a1 + 4);
  swift_bridgeObjectRetain();
  return a5(v8 | ((unint64_t)v9 << 32), v6, v7);
}

uint64_t sub_259FF6DE0(uint64_t a1, uint64_t a2)
{
  return sub_259FF6DF8(a1, a2, SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FF6DF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, uint64_t))
{
  uint64_t v5 = *(unsigned int *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 28);
  swift_bridgeObjectRetain();
  return a3(v5 | (v7 << 32), *(void *)a1, v6);
}

void sub_259FF70B0(uint64_t **a1, uint64_t a2)
{
}

uint64_t sub_259FF7274@<X0>(uint64_t *a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = a2(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t result = swift_unknownObjectRelease();
  *(_DWORD *)a3 = v7;
  *(unsigned char *)(a3 + 4) = BYTE4(v7) & 1;
  return result;
}

uint64_t sub_259FF731C(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  if ((a1 & 0x100000000) != 0)
  {
    sub_259FFB0CC(a2, a3, (uint64_t)&v10);
    swift_bridgeObjectRelease();
    return sub_259FB66F8(v10, v11, v12, v13, v14);
  }
  else
  {
    uint64_t v10 = a1;
    unint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    __int16 v14 = a4;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *(void *)(v4 + 16);
    *(void *)(v4 + 16) = 0x8000000000000000;
    sub_259FFB7FC((uint64_t)&v10, a2, a3, isUniquelyReferenced_nonNull_native);
    *(void *)(v4 + 16) = v9;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_259FF745C(uint64_t a1, uint64_t a2)
{
  return sub_259FF6DF8(a1, a2, SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FF7614@<X0>(uint64_t *a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = a2(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t result = swift_unknownObjectRelease();
  *(void *)a3 = v7;
  *(unsigned char *)(a3 + 8) = 0;
  return result;
}

uint64_t sub_259FF76B8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  if (a2)
  {
    sub_259FFB0CC(a3, a4, (uint64_t)&v11);
    swift_bridgeObjectRelease();
    return sub_259FB66F8(v11, v12, v13, v14, v15);
  }
  else
  {
    uint64_t v11 = a1;
    unint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    __int16 v15 = a5;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *(void *)(v5 + 16);
    *(void *)(v5 + 16) = 0x8000000000000000;
    sub_259FFB7FC((uint64_t)&v11, a3, a4, isUniquelyReferenced_nonNull_native);
    *(void *)(v5 + 16) = v10;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

void sub_259FF7818(uint64_t **a1, uint64_t a2)
{
}

uint64_t sub_259FF7830(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402CF0);
  char v45 = a2;
  uint64_t v6 = sub_25A00EDD0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v43 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v41 = v3;
  int64_t v42 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  uint64_t v44 = v5;
  while (1)
  {
    if (v10)
    {
      uint64_t v46 = (v10 - 1) & v10;
      int64_t v47 = v13;
      unint64_t v20 = __clz(__rbit64(v10)) | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v42) {
      break;
    }
    uint64_t v22 = v43;
    unint64_t v23 = v43[v21];
    int64_t v24 = v13 + 1;
    if (!v23)
    {
      int64_t v24 = v13 + 2;
      if (v13 + 2 >= v42) {
        goto LABEL_33;
      }
      unint64_t v23 = v43[v24];
      if (!v23)
      {
        uint64_t v25 = v13 + 3;
        if (v13 + 3 >= v42)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v41;
          if ((v45 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = v43[v25];
        if (!v23)
        {
          while (1)
          {
            int64_t v24 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v24 >= v42) {
              goto LABEL_33;
            }
            unint64_t v23 = v43[v24];
            ++v25;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v24 = v13 + 3;
      }
    }
LABEL_30:
    uint64_t v46 = (v23 - 1) & v23;
    int64_t v47 = v24;
    unint64_t v20 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_31:
    uint64_t v30 = *(void *)(v5 + 56);
    uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    uint64_t v34 = (uint64_t *)(v30 + 40 * v20);
    uint64_t v35 = *v34;
    uint64_t v36 = v34[1];
    uint64_t v37 = v34[2];
    uint64_t v38 = v34[3];
    unint64_t v39 = v34[4];
    if ((v45 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_259FB2B48(v35, v36, v37, v38, v39);
    }
    sub_25A00EF60();
    sub_25A00EA40();
    uint64_t result = sub_25A00EF90();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v32;
    v18[1] = v33;
    __int16 v19 = (uint64_t *)(*(void *)(v7 + 56) + 40 * v17);
    *__int16 v19 = v35;
    v19[1] = v36;
    uint64_t v19[2] = v37;
    uint64_t v19[3] = v38;
    v19[4] = v39;
    ++*(void *)(v7 + 16);
    uint64_t v5 = v44;
    unint64_t v10 = v46;
    int64_t v13 = v47;
  }
  swift_release();
  uint64_t v3 = v41;
  uint64_t v22 = v43;
  if ((v45 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v40 = 1 << *(unsigned char *)(v5 + 32);
  if (v40 >= 64) {
    bzero(v22, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v40;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_259FF7B9C(uint64_t a1, char a2, uint64_t *a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = v4;
  uint64_t v7 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v48 = a2;
  uint64_t v8 = sub_25A00EDD0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_40;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  char v45 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v7 + 64);
  unint64_t v43 = v5;
  int64_t v44 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v13 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  uint64_t v47 = v7;
  while (1)
  {
    if (v12)
    {
      uint64_t v49 = (v12 - 1) & v12;
      int64_t v50 = v15;
      unint64_t v22 = __clz(__rbit64(v12)) | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v44) {
      break;
    }
    int64_t v24 = v45;
    unint64_t v25 = v45[v23];
    int64_t v26 = v15 + 1;
    if (!v25)
    {
      int64_t v26 = v15 + 2;
      if (v15 + 2 >= v44) {
        goto LABEL_33;
      }
      unint64_t v25 = v45[v26];
      if (!v25)
      {
        uint64_t v27 = v15 + 3;
        if (v15 + 3 >= v44)
        {
LABEL_33:
          swift_release();
          uint64_t v5 = v43;
          if ((v48 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = v45[v27];
        if (!v25)
        {
          while (1)
          {
            int64_t v26 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_42;
            }
            if (v26 >= v44) {
              goto LABEL_33;
            }
            unint64_t v25 = v45[v26];
            ++v27;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v26 = v15 + 3;
      }
    }
LABEL_30:
    uint64_t v49 = (v25 - 1) & v25;
    int64_t v50 = v26;
    unint64_t v22 = __clz(__rbit64(v25)) + (v26 << 6);
LABEL_31:
    uint64_t v32 = *(void *)(v7 + 56);
    uint64_t v33 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v22);
    uint64_t v34 = *v33;
    uint64_t v35 = v33[1];
    uint64_t v36 = (uint64_t *)(v32 + 40 * v22);
    uint64_t v37 = *v36;
    uint64_t v38 = v36[1];
    uint64_t v40 = v36[2];
    uint64_t v39 = v36[3];
    uint64_t v41 = *((unsigned __int8 *)v36 + 32);
    if ((v48 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      a4(v37, v38, v40, v39, v41);
    }
    sub_25A00EF60();
    sub_25A00EA40();
    uint64_t result = sub_25A00EF90();
    uint64_t v16 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v30 = v18 == v29;
        if (v18 == v29) {
          unint64_t v18 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v13 + 8 * v18);
      }
      while (v31 == -1);
      unint64_t v19 = __clz(__rbit64(~v31)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    unint64_t v20 = (void *)(*(void *)(v9 + 48) + 16 * v19);
    *unint64_t v20 = v34;
    v20[1] = v35;
    uint64_t v21 = *(void *)(v9 + 56) + 40 * v19;
    *(void *)uint64_t v21 = v37;
    *(void *)(v21 + 8) = v38;
    *(void *)(v21 + 16) = v40;
    *(void *)(v21 + 24) = v39;
    *(unsigned char *)(v21 + 32) = v41;
    ++*(void *)(v9 + 16);
    uint64_t v7 = v47;
    unint64_t v12 = v49;
    int64_t v15 = v50;
  }
  swift_release();
  uint64_t v5 = v43;
  int64_t v24 = v45;
  if ((v48 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v42 = 1 << *(unsigned char *)(v7 + 32);
  if (v42 >= 64) {
    bzero(v24, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v42;
  }
  *(void *)(v7 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v5 = v9;
  return result;
}

uint64_t sub_259FF7F10(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D40);
  char v40 = a2;
  uint64_t v6 = sub_25A00EDD0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      unint64_t v32 = *(void *)(v5 + 56) + (v21 << 6);
      char v33 = *(unsigned char *)v32;
      uint64_t v44 = *(void *)(v32 + 8);
      long long v45 = *(_OWORD *)(v32 + 16);
      int v42 = *(_DWORD *)(v32 + 36);
      char v43 = *(unsigned char *)(v32 + 32);
      char v41 = *(unsigned char *)(v32 + 40);
      uint64_t v34 = *(void *)(v32 + 48);
      unint64_t v35 = *(void *)(v32 + 56);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_259FAF3C4(v34, v35);
      }
      sub_25A00EF60();
      sub_25A00EA40();
      uint64_t result = sub_25A00EF90();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *unint64_t v18 = v31;
      v18[1] = v30;
      unint64_t v19 = *(void *)(v7 + 56) + (v17 << 6);
      *(unsigned char *)unint64_t v19 = v33;
      *(void *)(v19 + 8) = v44;
      *(_OWORD *)(v19 + 16) = v45;
      *(unsigned char *)(v19 + 32) = v43;
      *(_DWORD *)(v19 + 36) = v42;
      *(unsigned char *)(v19 + 40) = v41;
      *(void *)(v19 + 48) = v34;
      *(void *)(v19 + 56) = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_259FF8288(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402CF8);
  uint64_t result = sub_25A00EDD0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    uint64_t v30 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v13) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v13) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v30;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v9 = -1 << v29;
              }
              uint64_t v3 = v30;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v13) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
      long long v31 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0) {
        swift_unknownObjectRetain();
      }
      uint64_t result = sub_25A00EF50();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v17 == v25;
          if (v17 == v25) {
            unint64_t v17 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        unint64_t v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v7 + 48) + 8 * v18) = v28;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v18) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_259FF854C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D00);
  char v47 = a2;
  uint64_t v51 = sub_25A00EDD0();
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v6 = 1 << *(unsigned char *)(v5 + 32);
  long long v45 = (void *)(v5 + 64);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v5 + 64);
  char v43 = v2;
  int64_t v44 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = v51 + 64;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  uint64_t v46 = v5;
  while (1)
  {
    if (v8)
    {
      uint64_t v48 = (v8 - 1) & v8;
      int64_t v49 = v11;
      unint64_t v21 = __clz(__rbit64(v8)) | (v11 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v44) {
      break;
    }
    int64_t v23 = v45;
    unint64_t v24 = v45[v22];
    int64_t v25 = v11 + 1;
    if (!v24)
    {
      int64_t v25 = v11 + 2;
      if (v11 + 2 >= v44) {
        goto LABEL_33;
      }
      unint64_t v24 = v45[v25];
      if (!v24)
      {
        uint64_t v26 = v11 + 3;
        if (v11 + 3 >= v44)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v43;
          if ((v47 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = v45[v26];
        if (!v24)
        {
          while (1)
          {
            int64_t v25 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v25 >= v44) {
              goto LABEL_33;
            }
            unint64_t v24 = v45[v25];
            ++v26;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v25 = v11 + 3;
      }
    }
LABEL_30:
    uint64_t v48 = (v24 - 1) & v24;
    int64_t v49 = v25;
    unint64_t v21 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_31:
    long long v31 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = v31[1];
    uint64_t v50 = *v31;
    char v33 = (uint64_t *)(*(void *)(v5 + 56) + (v21 << 6));
    uint64_t v34 = *v33;
    uint64_t v35 = v33[1];
    uint64_t v36 = v33[2];
    uint64_t v37 = v33[3];
    uint64_t v39 = v33[4];
    uint64_t v38 = v33[5];
    uint64_t v41 = v33[6];
    unint64_t v40 = v33[7];
    if ((v47 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_259FB2BA4(v34, v35, v36, v37, v39, v38, v41, v40);
    }
    sub_25A00EF60();
    sub_25A00EA40();
    uint64_t v12 = sub_25A00EF90();
    uint64_t v13 = -1 << *(unsigned char *)(v51 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v9 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v9 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      uint64_t result = v40;
      uint64_t v17 = v41;
      uint64_t v18 = v34;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v13) >> 6;
      uint64_t result = v40;
      uint64_t v17 = v41;
      uint64_t v18 = v34;
      do
      {
        if (++v15 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v15 == v28;
        if (v15 == v28) {
          unint64_t v15 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v9 + 8 * v15);
      }
      while (v30 == -1);
      unint64_t v16 = __clz(__rbit64(~v30)) + (v15 << 6);
    }
    *(void *)(v9 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    unint64_t v19 = (void *)(*(void *)(v51 + 48) + 16 * v16);
    *unint64_t v19 = v50;
    v19[1] = v32;
    unint64_t v20 = (uint64_t *)(*(void *)(v51 + 56) + (v16 << 6));
    *unint64_t v20 = v18;
    v20[1] = v35;
    long long v20[2] = v36;
    v20[3] = v37;
    void v20[4] = v39;
    void v20[5] = v38;
    v20[6] = v17;
    v20[7] = result;
    ++*(void *)(v51 + 16);
    uint64_t v5 = v46;
    unint64_t v8 = v48;
    int64_t v11 = v49;
  }
  swift_release();
  uint64_t v3 = v43;
  int64_t v23 = v45;
  if ((v47 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v42 = 1 << *(unsigned char *)(v5 + 32);
  if (v42 >= 64) {
    bzero(v23, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v42;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v51;
  return result;
}

uint64_t sub_259FF88F4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D10);
  char v37 = a2;
  uint64_t v6 = sub_25A00EDD0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_25A00EF60();
    sub_25A00EA40();
    uint64_t result = sub_25A00EF90();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  int64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_259FF8C00(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A403068);
  char v45 = a2;
  uint64_t v6 = sub_25A00EDD0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  char v43 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v41 = v3;
  int64_t v42 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  uint64_t v44 = v5;
  while (1)
  {
    if (v10)
    {
      uint64_t v46 = (v10 - 1) & v10;
      int64_t v47 = v13;
      unint64_t v20 = __clz(__rbit64(v10)) | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v42) {
      break;
    }
    int64_t v22 = v43;
    unint64_t v23 = v43[v21];
    int64_t v24 = v13 + 1;
    if (!v23)
    {
      int64_t v24 = v13 + 2;
      if (v13 + 2 >= v42) {
        goto LABEL_33;
      }
      unint64_t v23 = v43[v24];
      if (!v23)
      {
        uint64_t v25 = v13 + 3;
        if (v13 + 3 >= v42)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v41;
          if ((v45 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = v43[v25];
        if (!v23)
        {
          while (1)
          {
            int64_t v24 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v24 >= v42) {
              goto LABEL_33;
            }
            unint64_t v23 = v43[v24];
            ++v25;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v24 = v13 + 3;
      }
    }
LABEL_30:
    uint64_t v46 = (v23 - 1) & v23;
    int64_t v47 = v24;
    unint64_t v20 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_31:
    uint64_t v30 = *(void *)(v5 + 56);
    uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    uint64_t v34 = v30 + 40 * v20;
    uint64_t v35 = *(void *)v34;
    unint64_t v36 = *(void *)(v34 + 8);
    uint64_t v37 = *(void *)(v34 + 16);
    uint64_t v38 = *(void *)(v34 + 24);
    __int16 v39 = *(_WORD *)(v34 + 32);
    if ((v45 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_259FE3724(v35, v36, v37, v38, v39);
    }
    sub_25A00EF60();
    sub_25A00EA40();
    uint64_t result = sub_25A00EF90();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v32;
    v18[1] = v33;
    uint64_t v19 = *(void *)(v7 + 56) + 40 * v17;
    *(void *)uint64_t v19 = v35;
    *(void *)(v19 + 8) = v36;
    *(void *)(v19 + 16) = v37;
    *(void *)(v19 + 24) = v38;
    *(_WORD *)(v19 + 32) = v39;
    ++*(void *)(v7 + 16);
    uint64_t v5 = v44;
    unint64_t v10 = v46;
    int64_t v13 = v47;
  }
  swift_release();
  uint64_t v3 = v41;
  int64_t v22 = v43;
  if ((v45 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v40 = 1 << *(unsigned char *)(v5 + 32);
  if (v40 >= 64) {
    bzero(v22, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v40;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_259FF8F6C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D38);
  char v44 = a2;
  uint64_t v6 = sub_25A00EDD0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v42 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v41 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  uint64_t v43 = v5;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      int64_t v45 = v13;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v41) {
      break;
    }
    unint64_t v23 = v42;
    unint64_t v24 = v42[v22];
    int64_t v25 = v13 + 1;
    if (!v24)
    {
      int64_t v25 = v13 + 2;
      if (v13 + 2 >= v41) {
        goto LABEL_33;
      }
      unint64_t v24 = v42[v25];
      if (!v24)
      {
        uint64_t v26 = v13 + 3;
        if (v13 + 3 >= v41)
        {
LABEL_33:
          swift_release();
          if ((v44 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = v42[v26];
        if (!v24)
        {
          while (1)
          {
            int64_t v25 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v25 >= v41) {
              goto LABEL_33;
            }
            unint64_t v24 = v42[v25];
            ++v26;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v25 = v13 + 3;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    int64_t v45 = v25;
    unint64_t v21 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_31:
    uint64_t v31 = *(void *)(v5 + 56);
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(v31 + 32 * v21);
    uint64_t v37 = *v35;
    uint64_t v36 = v35[1];
    unint64_t v38 = v35[2];
    uint64_t v39 = v35[3];
    if ((v44 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_259FAF3C4(v36, v38);
      swift_bridgeObjectRetain();
    }
    sub_25A00EF60();
    sub_25A00EA40();
    uint64_t result = sub_25A00EF90();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v34;
    v18[1] = v33;
    uint64_t v19 = (void *)(*(void *)(v7 + 56) + 32 * v17);
    *uint64_t v19 = v37;
    v19[1] = v36;
    uint64_t v19[2] = v38;
    uint64_t v19[3] = v39;
    ++*(void *)(v7 + 16);
    uint64_t v5 = v43;
    int64_t v13 = v45;
  }
  swift_release();
  unint64_t v23 = v42;
  if ((v44 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v40 = 1 << *(unsigned char *)(v5 + 32);
  if (v40 >= 64) {
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v40;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_259FF92C0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D08);
  uint64_t result = sub_25A00EDD0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    uint64_t v30 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v13) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v13) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v30;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v9 = -1 << v29;
              }
              uint64_t v3 = v30;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v13) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
      long long v31 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0) {
        sub_259FAE450(v31, *((unint64_t *)&v31 + 1));
      }
      uint64_t result = sub_25A00EF50();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v17 == v25;
          if (v17 == v25) {
            unint64_t v17 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        unint64_t v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v7 + 48) + 8 * v18) = v28;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v18) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_259FF9588(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D30);
  char v38 = a2;
  uint64_t v6 = sub_25A00EDD0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v37 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v36 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v36) {
          goto LABEL_33;
        }
        unint64_t v23 = v37[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v23 = v37[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v36)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v38)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
                if (v35 >= 64) {
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v35;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v37[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v23 = v37[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 32 * v21;
      long long v39 = *(_OWORD *)v32;
      uint64_t v33 = *(void *)(v32 + 16);
      unint64_t v34 = *(void *)(v32 + 24);
      if ((v38 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_259FAF3C4(v33, v34);
      }
      sub_25A00EF60();
      sub_25A00EA40();
      uint64_t result = sub_25A00EF90();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *unint64_t v18 = v31;
      v18[1] = v30;
      uint64_t v19 = *(void *)(v7 + 56) + 32 * v17;
      *(_OWORD *)uint64_t v19 = v39;
      *(void *)(v19 + 16) = v33;
      *(void *)(v19 + 24) = v34;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_259FF98C0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D18);
  char v36 = a2;
  uint64_t v6 = sub_25A00EDD0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_25A00EF60();
    sub_25A00EA40();
    uint64_t result = sub_25A00EF90();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void *sub_259FF9BD8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402CF0);
  uint64_t v29 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_25A00EDC0();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v29 = v3;
    return result;
  }
  uint64_t result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5) {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  }
  uint64_t v30 = v1 + 64;
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v7 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v11) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v30 + 8 * v26);
    ++v7;
    if (!v27)
    {
      int64_t v7 = v26 + 1;
      if (v26 + 1 >= v11) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v30 + 8 * v7);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v27 - 1) & v27;
    unint64_t v13 = __clz(__rbit64(v27)) + (v7 << 6);
LABEL_12:
    uint64_t v14 = 16 * v13;
    uint64_t v15 = *(void *)(v1 + 56);
    unint64_t v16 = (void *)(*(void *)(v1 + 48) + 16 * v13);
    uint64_t v17 = v16[1];
    uint64_t v18 = 40 * v13;
    uint64_t v19 = *(void *)(v15 + v18);
    uint64_t v20 = *(void *)(v15 + v18 + 8);
    uint64_t v21 = *(void *)(v15 + v18 + 16);
    uint64_t v22 = *(void *)(v15 + v18 + 24);
    unint64_t v23 = *(void *)(v15 + v18 + 32);
    int64_t v24 = (void *)(*(void *)(v3 + 48) + v14);
    *int64_t v24 = *v16;
    v24[1] = v17;
    char v25 = (uint64_t *)(*(void *)(v3 + 56) + v18);
    *char v25 = v19;
    v25[1] = v20;
    _OWORD v25[2] = v21;
    v25[3] = v22;
    v25[4] = v23;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_259FB2B48(v19, v20, v21, v22, v23);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v11) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v30 + 8 * v28);
  if (v27)
  {
    int64_t v7 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v7 >= v11) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v30 + 8 * v7);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_259FF9DDC(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v31 = v2;
  uint64_t v3 = *v2;
  uint64_t v4 = sub_25A00EDC0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v31 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 64);
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v7);
  }
  uint64_t v32 = v3 + 64;
  int64_t v9 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v3 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v32 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v32 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v3 + 56);
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v15);
    uint64_t v19 = v18[1];
    uint64_t v20 = 40 * v15;
    uint64_t v21 = *(void *)(v17 + v20);
    uint64_t v22 = *(void *)(v17 + v20 + 8);
    uint64_t v23 = *(void *)(v17 + v20 + 16);
    uint64_t v24 = *(void *)(v17 + v20 + 24);
    uint64_t v25 = *(unsigned __int8 *)(v17 + v20 + 32);
    int64_t v26 = (void *)(*(void *)(v5 + 48) + v16);
    void *v26 = *v18;
    v26[1] = v19;
    uint64_t v27 = *(void *)(v5 + 56) + v20;
    *(void *)uint64_t v27 = v21;
    *(void *)(v27 + 8) = v22;
    *(void *)(v27 + 16) = v23;
    *(void *)(v27 + 24) = v24;
    *(unsigned char *)(v27 + 32) = v25;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)a2(v21, v22, v23, v24, v25);
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v13) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v32 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v32 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_259FF9FE4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D40);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25A00EDC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v32 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v32 >= v13) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v6 + 8 * v32);
    ++v9;
    if (!v33)
    {
      int64_t v9 = v32 + 1;
      if (v32 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v33 = *(void *)(v6 + 8 * v9);
      if (!v33) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v33 - 1) & v33;
    unint64_t v15 = __clz(__rbit64(v33)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    unint64_t v20 = v15 << 6;
    unint64_t v21 = *(void *)(v2 + 56) + v20;
    char v22 = *(unsigned char *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    char v24 = *(unsigned char *)(v21 + 32);
    int v25 = *(_DWORD *)(v21 + 36);
    char v26 = *(unsigned char *)(v21 + 40);
    uint64_t v27 = *(void *)(v21 + 48);
    unint64_t v28 = *(void *)(v21 + 56);
    unint64_t v29 = (void *)(*(void *)(v4 + 48) + v16);
    long long v30 = *(_OWORD *)(v21 + 16);
    *unint64_t v29 = v18;
    v29[1] = v19;
    unint64_t v31 = *(void *)(v4 + 56) + v20;
    *(unsigned char *)unint64_t v31 = v22;
    *(void *)(v31 + 8) = v23;
    *(_OWORD *)(v31 + 16) = v30;
    *(unsigned char *)(v31 + 32) = v24;
    *(_DWORD *)(v31 + 36) = v25;
    *(unsigned char *)(v31 + 40) = v26;
    *(void *)(v31 + 48) = v27;
    *(void *)(v31 + 56) = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_259FAF3C4(v27, v28);
  }
  int64_t v34 = v32 + 2;
  if (v34 >= v13) {
    goto LABEL_26;
  }
  unint64_t v33 = *(void *)(v6 + 8 * v34);
  if (v33)
  {
    int64_t v9 = v34;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v6 + 8 * v9);
    ++v34;
    if (v33) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_259FFA1EC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402CF8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25A00EDC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    uint64_t result = (void *)swift_unknownObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_259FFA398()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D00);
  unint64_t v33 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_25A00EDC0();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t v32 = v3;
    uint64_t result = (void *)swift_release();
    *unint64_t v33 = v32;
    return result;
  }
  uint64_t result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  BOOL v6 = v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5;
  uint64_t v37 = v3;
  if (v6)
  {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v5);
    uint64_t v3 = v37;
  }
  uint64_t v35 = v1 + 64;
  uint64_t v36 = v1;
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      uint64_t v13 = v36;
      uint64_t v3 = v37;
      goto LABEL_12;
    }
    int64_t v29 = v7 + 1;
    uint64_t v13 = v36;
    uint64_t v3 = v37;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v34) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v35 + 8 * v29);
    ++v7;
    if (!v30)
    {
      int64_t v7 = v29 + 1;
      if (v29 + 1 >= v34) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v35 + 8 * v7);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v30 - 1) & v30;
    unint64_t v12 = __clz(__rbit64(v30)) + (v7 << 6);
LABEL_12:
    uint64_t v14 = 16 * v12;
    uint64_t v15 = *(void *)(v13 + 56);
    uint64_t v16 = (void *)(*(void *)(v13 + 48) + 16 * v12);
    uint64_t v17 = v16[1];
    unint64_t v18 = v12 << 6;
    uint64_t v19 = *(void *)(v15 + v18);
    uint64_t v20 = *(void *)(v15 + v18 + 8);
    uint64_t v21 = *(void *)(v15 + v18 + 16);
    uint64_t v22 = *(void *)(v15 + v18 + 24);
    uint64_t v23 = *(void *)(v15 + v18 + 32);
    uint64_t v24 = *(void *)(v15 + v18 + 40);
    uint64_t v25 = *(void *)(v15 + v18 + 48);
    unint64_t v26 = *(void *)(v15 + v18 + 56);
    uint64_t v27 = (void *)(*(void *)(v3 + 48) + v14);
    *uint64_t v27 = *v16;
    v27[1] = v17;
    unint64_t v28 = (uint64_t *)(*(void *)(v3 + 56) + v18);
    *unint64_t v28 = v19;
    v28[1] = v20;
    v28[2] = v21;
    v28[3] = v22;
    v28[4] = v23;
    v28[5] = v24;
    v28[6] = v25;
    v28[7] = v26;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_259FB2BA4(v19, v20, v21, v22, v23, v24, v25, v26);
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v34) {
    goto LABEL_26;
  }
  unint64_t v30 = *(void *)(v35 + 8 * v31);
  if (v30)
  {
    int64_t v7 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v7 >= v34) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v35 + 8 * v7);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_259FFA5C4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D10);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25A00EDC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    void *v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_259FFA774()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A403068);
  unint64_t v30 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_25A00EDC0();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *unint64_t v30 = v3;
    return result;
  }
  uint64_t result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5) {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  }
  uint64_t v31 = v1 + 64;
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v7 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v11) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v31 + 8 * v27);
    ++v7;
    if (!v28)
    {
      int64_t v7 = v27 + 1;
      if (v27 + 1 >= v11) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v31 + 8 * v7);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v28 - 1) & v28;
    unint64_t v13 = __clz(__rbit64(v28)) + (v7 << 6);
LABEL_12:
    uint64_t v14 = 16 * v13;
    unint64_t v15 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v13);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    uint64_t v18 = 40 * v13;
    uint64_t v19 = *(void *)(v1 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    unint64_t v21 = *(void *)(v19 + 8);
    uint64_t v22 = *(void *)(v19 + 16);
    uint64_t v23 = *(void *)(v19 + 24);
    unint64_t v24 = (void *)(*(void *)(v3 + 48) + v14);
    __int16 v25 = *(_WORD *)(v19 + 32);
    *unint64_t v24 = v17;
    v24[1] = v16;
    uint64_t v26 = *(void *)(v3 + 56) + v18;
    *(void *)uint64_t v26 = v20;
    *(void *)(v26 + 8) = v21;
    *(void *)(v26 + 16) = v22;
    *(void *)(v26 + 24) = v23;
    *(_WORD *)(v26 + 32) = v25;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_259FE3724(v20, v21, v22, v23, v25);
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v11) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v31 + 8 * v29);
  if (v28)
  {
    int64_t v7 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v7 >= v11) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v31 + 8 * v7);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_259FFA978()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D38);
  int64_t v29 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_25A00EDC0();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *int64_t v29 = v3;
    return result;
  }
  uint64_t result = (void *)(v2 + 64);
  uint64_t v5 = v1 + 64;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6) {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v12) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v5 + 8 * v26);
    ++v8;
    if (!v27)
    {
      int64_t v8 = v26 + 1;
      if (v26 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v5 + 8 * v8);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v27 - 1) & v27;
    unint64_t v14 = __clz(__rbit64(v27)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 16 * v14;
    uint64_t v16 = *(void *)(v1 + 56);
    uint64_t v17 = (void *)(*(void *)(v1 + 48) + 16 * v14);
    uint64_t v18 = v17[1];
    uint64_t v19 = 32 * v14;
    uint64_t v20 = *(void *)(v16 + v19);
    uint64_t v21 = *(void *)(v16 + v19 + 8);
    unint64_t v22 = *(void *)(v16 + v19 + 16);
    uint64_t v23 = *(void *)(v16 + v19 + 24);
    unint64_t v24 = (void *)(*(void *)(v3 + 48) + v15);
    *unint64_t v24 = *v17;
    v24[1] = v18;
    __int16 v25 = (void *)(*(void *)(v3 + 56) + v19);
    *__int16 v25 = v20;
    v25[1] = v21;
    _OWORD v25[2] = v22;
    v25[3] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v21, v22);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v12) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v5 + 8 * v28);
  if (v27)
  {
    int64_t v8 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v5 + 8 * v8);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_259FFAB6C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D08);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25A00EDC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    uint64_t result = (void *)sub_259FAE450(v19, *((unint64_t *)&v19 + 1));
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_259FFAD1C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D30);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25A00EDC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)(v21 + 16);
    unint64_t v23 = *(void *)(v21 + 24);
    unint64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    long long v25 = *(_OWORD *)v21;
    *unint64_t v24 = v19;
    v24[1] = v18;
    uint64_t v26 = *(void *)(v4 + 56) + v20;
    *(_OWORD *)uint64_t v26 = v25;
    *(void *)(v26 + 16) = v22;
    *(void *)(v26 + 24) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_259FAF3C4(v22, v23);
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_259FFAF14()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D18);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25A00EDC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

double sub_259FFB0CC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_259FE120C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v16 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_259FFA774();
      uint64_t v11 = v16;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56) + 40 * v8;
    __int16 v13 = *(_WORD *)(v12 + 32);
    long long v14 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)a3 = *(_OWORD *)v12;
    *(_OWORD *)(a3 + 16) = v14;
    *(_WORD *)(a3 + 32) = v13;
    sub_259FF0634(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_WORD *)(a3 + 32) = -4096;
  }
  return result;
}

uint64_t sub_259FFB1C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_259FFB254(a1, a2, a3, a4, &qword_26A402D20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_259FB2BFC, sub_259FFC5D0, sub_259FFC62C);
}

uint64_t sub_259FFB20C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_259FFB254(a1, a2, a3, a4, &qword_26A402D28, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_259FB2C64, sub_259FFC1B0, sub_259FFC20C);
}

uint64_t sub_259FFB254(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a7)(uint64_t, uint64_t), uint64_t (*a8)(uint64_t, uint64_t))
{
  uint64_t v11 = (void **)v8;
  uint64_t v16 = (void *)*v8;
  unint64_t v18 = sub_259FE120C(a2, a3);
  uint64_t v19 = v16[2];
  BOOL v20 = (v17 & 1) == 0;
  uint64_t v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v22 = v17;
  uint64_t v23 = v16[3];
  if (v23 < v21 || (a4 & 1) == 0)
  {
    if (v23 >= v21 && (a4 & 1) == 0)
    {
      sub_259FF9DDC(a5, a6);
      goto LABEL_7;
    }
    sub_259FF7B9C(v21, a4 & 1, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))a6);
    unint64_t v27 = sub_259FE120C(a2, a3);
    if ((v22 & 1) == (v28 & 1))
    {
      unint64_t v18 = v27;
      int64_t v24 = *v11;
      if (v22) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_25A00EF00();
    __break(1u);
    return result;
  }
LABEL_7:
  int64_t v24 = *v11;
  if (v22)
  {
LABEL_8:
    uint64_t v25 = v24[7] + 40 * v18;
    return a7(a1, v25);
  }
LABEL_13:
  sub_259FFC13C(v18, a2, a3, a1, v24, a8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_259FFB3E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_259FE120C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_259FFA398();
      goto LABEL_7;
    }
    sub_259FF854C(v15, a4 & 1);
    unint64_t v21 = sub_259FE120C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_25A00EF00();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + (v12 << 6);
    return sub_259FFC2D4(a1, v19);
  }
LABEL_13:
  sub_259FFC268(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_259FFB528(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_259FE120C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_259FF9FE4();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + (v12 << 6);
      return sub_259FFC574((uint64_t)a1, v19);
    }
    goto LABEL_13;
  }
  sub_259FF7F10(v15, a4 & 1);
  unint64_t v21 = sub_259FE120C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = sub_25A00EF00();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  int64_t v24 = (_OWORD *)(v18[7] + (v12 << 6));
  long long v25 = *a1;
  long long v26 = a1[1];
  long long v27 = a1[3];
  void v24[2] = a1[2];
  v24[3] = v27;
  *int64_t v24 = v25;
  v24[1] = v26;
  uint64_t v28 = v18[2];
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (v29)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v18[2] = v30;
  return swift_bridgeObjectRetain();
}

uint64_t sub_259FFB6B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_259FE120C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_259FF9BD8();
      goto LABEL_7;
    }
    sub_259FF7830(v15, a4 & 1);
    unint64_t v21 = sub_259FE120C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_25A00EF00();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + 40 * v12;
    return sub_259FFC3FC(a1, v19);
  }
LABEL_13:
  sub_259FFC38C(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_259FFB7FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_259FE120C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_259FFA774();
      goto LABEL_7;
    }
    sub_259FF8C00(v15, a4 & 1);
    unint64_t v21 = sub_259FE120C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_25A00EF00();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + 40 * v12;
    return sub_259FFC688(a1, v19);
  }
LABEL_13:
  sub_259FFC4B4(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_259FFB950()
{
  return 0;
}

uint64_t sub_259FFB960@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_259FF5A18(a1, SchematizedDataComposer.subscript.getter, a2);
}

uint64_t sub_259FFB990()
{
  return 0;
}

uint64_t sub_259FFB9A0@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_259FF5A18(a1, SchematizedDataComposer.subscript.getter, a2);
}

uint64_t sub_259FFB9D0()
{
  return 0;
}

uint64_t sub_259FFB9E4(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return keypath_set_10Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FFB9FC()
{
  return 0;
}

uint64_t sub_259FFBA10(char *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = a3[1];
  char v5 = *a1;
  swift_bridgeObjectRetain();
  return SchematizedDataComposer.subscript.setter(v5, v3, v4);
}

uint64_t sub_259FFBA58()
{
  return 0;
}

uint64_t sub_259FFBA68@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_259FF7274(a1, SchematizedDataComposer.subscript.getter, a2);
}

uint64_t sub_259FFBA94(unsigned int *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_259FF6CF4(a1, a2, a3, a4, (uint64_t (*)(unint64_t, uint64_t, uint64_t))SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FFBAC0()
{
  return 0;
}

uint64_t sub_259FFBAD0@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_259FF7614(a1, SchematizedDataComposer.subscript.getter, a2);
}

uint64_t sub_259FFBAFC(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return keypath_set_10Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))SchematizedDataComposer.subscript.setter);
}

uint64_t keypath_set_10Tm(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  uint64_t v8 = *a1;
  uint64_t v9 = *((unsigned __int8 *)a1 + 8);
  swift_bridgeObjectRetain();
  return a5(v8, v9, v6, v7);
}

uint64_t sub_259FFBB74()
{
  return 0;
}

uint64_t sub_259FFBB84@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_259FF7274(a1, SchematizedDataComposer.subscript.getter, a2);
}

uint64_t sub_259FFBBB0(unsigned int *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_259FF6CF4(a1, a2, a3, a4, (uint64_t (*)(unint64_t, uint64_t, uint64_t))SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FFBBDC()
{
  return 0;
}

uint64_t sub_259FFBBEC@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_259FF7614(a1, SchematizedDataComposer.subscript.getter, a2);
}

uint64_t sub_259FFBC18(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return keypath_set_10Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FFBC30()
{
  return 0;
}

uint64_t sub_259FFBC40@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_259FF7274(a1, SchematizedDataComposer.subscript.getter, a2);
}

uint64_t sub_259FFBC6C(unsigned int *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_259FF6CF4(a1, a2, a3, a4, (uint64_t (*)(unint64_t, uint64_t, uint64_t))SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FFBC98()
{
  return 0;
}

uint64_t sub_259FFBCA8@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_259FF7614(a1, SchematizedDataComposer.subscript.getter, a2);
}

uint64_t sub_259FFBCD4(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return keypath_set_10Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))SchematizedDataComposer.subscript.setter);
}

uint64_t sub_259FFBCEC()
{
  return 0;
}

uint64_t sub_259FFBCFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v8 = (void **)v7;
  uint64_t v15 = (void *)*v7;
  unint64_t v17 = sub_259FE120C(a5, a6);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v21 = v16;
  uint64_t v22 = v15[3];
  if (v22 >= v20 && (a7 & 1) != 0)
  {
LABEL_7:
    uint64_t v23 = *v8;
    if (v21)
    {
LABEL_8:
      int64_t v24 = (uint64_t *)(v23[7] + 32 * v17);
      uint64_t v25 = v24[1];
      unint64_t v26 = v24[2];
      swift_bridgeObjectRelease();
      sub_259FAF410(v25, v26);
      uint64_t result = swift_bridgeObjectRelease();
      *int64_t v24 = a1;
      v24[1] = a2;
      void v24[2] = a3;
      v24[3] = a4;
      return result;
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_259FFA978();
    goto LABEL_7;
  }
  sub_259FF8F6C(v20, a7 & 1);
  unint64_t v28 = sub_259FE120C(a5, a6);
  if ((v21 & 1) != (v29 & 1))
  {
LABEL_15:
    uint64_t result = sub_25A00EF00();
    __break(1u);
    return result;
  }
  unint64_t v17 = v28;
  uint64_t v23 = *v8;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  sub_259FFC524(v17, a5, a6, a1, a2, a3, a4, v23);
  return swift_bridgeObjectRetain();
}

uint64_t sub_259FFBE8C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_259FE1284(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_259FFAB6C();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 16 * v12;
      uint64_t result = sub_259FAE4A8(*(void *)v19, *(void *)(v19 + 8));
      *(void *)uint64_t v19 = a1;
      *(void *)(v19 + 8) = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(void *)(v18[6] + 8 * v12) = a3;
    char v21 = (void *)(v18[7] + 16 * v12);
    *char v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_259FF92C0(result, a4 & 1);
  uint64_t result = sub_259FE1284(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    uint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_25A00EF00();
  __break(1u);
  return result;
}

uint64_t sub_259FFBFCC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_259FE120C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_259FFAF14();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_259FF98C0(v15, a4 & 1);
  unint64_t v21 = sub_259FE120C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_25A00EF00();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  BOOL v23 = (uint64_t *)(v18[6] + 16 * v12);
  *BOOL v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;
  return swift_bridgeObjectRetain();
}

uint64_t sub_259FFC13C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v7 = (void *)(a5[6] + 16 * a1);
  *uint64_t v7 = a2;
  v7[1] = a3;
  uint64_t result = a6(a4, a5[7] + 40 * a1);
  uint64_t v9 = a5[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a5[2] = v11;
  }
  return result;
}

uint64_t sub_259FFC1B0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_259FFC20C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_259FFC268(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_259FFC330(a4, a5[7] + (a1 << 6));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_259FFC2D4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_259FFC330(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_259FFC38C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_259FFC458(a4, a5[7] + 40 * a1);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_259FFC3FC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_259FFC458(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_259FFC4B4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_259FFC6E4(a4, a5[7] + 40 * a1);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_259FFC524(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  a8[(result >> 6) + 8] |= 1 << result;
  uint64_t v8 = (void *)(a8[6] + 16 * result);
  *uint64_t v8 = a2;
  v8[1] = a3;
  BOOL v9 = (void *)(a8[7] + 32 * result);
  *BOOL v9 = a4;
  v9[1] = a5;
  uint64_t v9[2] = a6;
  v9[3] = a7;
  uint64_t v10 = a8[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a8[2] = v12;
  }
  return result;
}

uint64_t sub_259FFC574(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_259FFC5D0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_259FFC62C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_259FFC688(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_259FFC6E4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_259FFC740(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A403070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OneofManifest.init(name:options:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t OneofManifest.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OneofManifest.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*OneofManifest.name.modify())()
{
  return nullsub_1;
}

uint64_t OneofManifest.options.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_259FAF3C4(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t OneofManifest.options.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_259FAF410(*(void *)(v2 + 16), *(void *)(v2 + 24));
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*OneofManifest.options.modify())()
{
  return nullsub_1;
}

uint64_t sub_259FFC8D0@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_259FAE450(a2, a3);
      uint64_t v10 = (char *)sub_25A00E270();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_25A00E290();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_25A00E280();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x259FFCB34);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_259FAE4A8(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_25A00E270();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_25A00E290();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_25A00E280();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_259FFCB44(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_259FFC8D0((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_259FFCC1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_25A00E270();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_25A00E290();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_25A00E280();
  sub_259FFC8D0(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_259FFCCD4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x259FFCF3CLL);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_259FAE450(a3, a4);
                  sub_259FAE450(a1, a2);
                  char v17 = sub_259FFCC1C((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_259FAE4A8(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_259FAE450(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_259FFCC1C(v21, v22, v20, a3, a4);
                  sub_259FAE4A8(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_259FAE450(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_259FAE450(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_259FFCB44(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_259FAE4A8(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

BOOL _s17PoirotSchematizer13OneofManifestV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v5 = a2[2];
  unint64_t v4 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_25A00EE40(), result = 0, (v7 & 1) != 0))
  {
    if (v3 >> 60 == 15)
    {
      if (v4 >> 60 == 15) {
        return 1;
      }
    }
    else if (v4 >> 60 != 15)
    {
      sub_259FAF3C4(v2, v3);
      sub_259FAF3C4(v5, v4);
      char v9 = sub_259FFCCD4(v2, v3, v5, v4);
      sub_259FAF410(v5, v4);
      sub_259FAF410(v2, v3);
      return (v9 & 1) != 0;
    }
    sub_259FAF3C4(v2, v3);
    sub_259FAF3C4(v5, v4);
    sub_259FAF410(v2, v3);
    sub_259FAF410(v5, v4);
    return 0;
  }
  return result;
}

uint64_t destroy for OneofManifest(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 16);
    return sub_259FAE4A8(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for OneofManifest(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2 + 2;
  unint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v4;
  }
  else
  {
    uint64_t v6 = *(void *)v4;
    sub_259FAE450(v6, v5);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v5;
  }
  return a1;
}

void *assignWithCopy for OneofManifest(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2 + 2;
  unint64_t v5 = a2[3];
  if (a1[3] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_259FAE450(*v4, v5);
      uint64_t v8 = a1[2];
      unint64_t v9 = a1[3];
      a1[2] = v7;
      a1[3] = v5;
      sub_259FAE4A8(v8, v9);
      return a1;
    }
    sub_259FAFB48((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
    return a1;
  }
  uint64_t v6 = *v4;
  sub_259FAE450(*v4, v5);
  a1[2] = v6;
  a1[3] = v5;
  return a1;
}

void *assignWithTake for OneofManifest(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  unint64_t v5 = a2 + 2;
  unint64_t v6 = a1[3];
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = a2[3];
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = a1[2];
      a1[2] = *v5;
      a1[3] = v7;
      sub_259FAE4A8(v8, v6);
      return a1;
    }
    sub_259FAFB48((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for OneofManifest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OneofManifest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OneofManifest()
{
  return &type metadata for OneofManifest;
}

uint64_t sub_259FFD340(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = a1;
  uint64_t v40 = MEMORY[0x263F8EE78];
  sub_259FE1480(0, v1, 0);
  uint64_t v2 = v40;
  uint64_t result = sub_25A005148(v3);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = v3 + 64;
  uint64_t v27 = v3 + 80;
  int64_t v28 = v1;
  int v29 = v5;
  uint64_t v30 = v3 + 64;
  uint64_t v31 = v3;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v32 = v7;
    uint64_t v12 = *(void *)(v3 + 56);
    uint64_t v13 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v6);
    uint64_t v14 = v13[1];
    uint64_t v33 = *v13;
    uint64_t v15 = (char *)(v12 + (v6 << 6));
    char v34 = *v15;
    uint64_t v16 = *((void *)v15 + 2);
    uint64_t v39 = *((void *)v15 + 1);
    uint64_t v38 = *((void *)v15 + 3);
    int v36 = *((_DWORD *)v15 + 9);
    char v37 = v15[32];
    char v35 = v15[40];
    uint64_t v17 = *((void *)v15 + 6);
    unint64_t v18 = *((void *)v15 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v17, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259FAF410(v17, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_259FAF410(v17, v18);
    unint64_t v20 = *(void *)(v40 + 16);
    unint64_t v19 = *(void *)(v40 + 24);
    if (v20 >= v19 >> 1) {
      uint64_t result = sub_259FE1480(v19 > 1, v20 + 1, 1);
    }
    *(void *)(v40 + 16) = v20 + 1;
    uint64_t v21 = v40 + 80 * v20;
    *(void *)(v21 + 32) = v33;
    *(void *)(v21 + 40) = v14;
    *(unsigned char *)(v21 + 48) = v34;
    *(void *)(v21 + 56) = v39;
    *(void *)(v21 + 64) = v16;
    *(void *)(v21 + 72) = v38;
    *(unsigned char *)(v21 + 80) = v37;
    *(_DWORD *)(v21 + 84) = v36;
    *(unsigned char *)(v21 + 88) = v35;
    *(void *)(v21 + 96) = v17;
    *(void *)(v21 + 104) = v18;
    uint64_t v3 = v31;
    int64_t v9 = 1 << *(unsigned char *)(v31 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = v30;
    uint64_t v22 = *(void *)(v30 + 8 * v11);
    if ((v22 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v29;
    if (*(_DWORD *)(v31 + 36) != v29) {
      goto LABEL_27;
    }
    unint64_t v23 = v22 & (-2 << (v6 & 0x3F));
    if (v23)
    {
      int64_t v9 = __clz(__rbit64(v23)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v28;
    }
    else
    {
      unint64_t v24 = v11 + 1;
      unint64_t v25 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v28;
      if (v11 + 1 < v25)
      {
        unint64_t v26 = *(void *)(v30 + 8 * v24);
        if (v26)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v26)) + (v24 << 6);
        }
        else
        {
          while (v25 - 2 != v11)
          {
            unint64_t v26 = *(void *)(v27 + 8 * v11++);
            if (v26)
            {
              unint64_t v24 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v32 + 1;
    uint64_t v6 = v9;
    if (v32 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_259FFD650(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_259FE14A0(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = (long long *)(a1 + 40);
    do
    {
      unint64_t v6 = *(void *)(v9 + 16);
      unint64_t v5 = *(void *)(v9 + 24);
      long long v8 = *v4;
      swift_unknownObjectRetain();
      if (v6 >= v5 >> 1) {
        sub_259FE14A0(v5 > 1, v6 + 1, 1);
      }
      *(void *)(v9 + 16) = v6 + 1;
      *(_OWORD *)(v9 + 16 * v6 + 32) = v8;
      uint64_t v4 = (long long *)((char *)v4 + 24);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_259FFD728@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, void *)@<X1>, void *a3@<X8>)
{
  uint64_t v28 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v29 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v32 = (v5 - 1) & v5;
  int64_t v33 = v7;
  for (unint64_t i = __clz(__rbit64(v5)) | (v7 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v10 << 6))
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    uint64_t v16 = (void *)(*(void *)(a1 + 56) + (i << 6));
    uint64_t v18 = v16[1];
    uint64_t v20 = v16[2];
    uint64_t v19 = v16[3];
    uint64_t v22 = v16[4];
    uint64_t v21 = v16[5];
    uint64_t v24 = v16[6];
    unint64_t v23 = v16[7];
    v35[0] = *v16;
    uint64_t v17 = v35[0];
    v35[1] = v18;
    v35[2] = v20;
    uint64_t v35[3] = v19;
    void v35[4] = v22;
    v35[5] = v21;
    v35[6] = v24;
    v35[7] = v23;
    swift_bridgeObjectRetain();
    unint64_t v34 = v23;
    sub_259FB2BA4(v17, v18, v20, v19, v22, v21, v24, v23);
    uint64_t v25 = v36;
    char v26 = a2(v14, v15, v35);
    uint64_t v36 = v25;
    if (v25)
    {
      swift_bridgeObjectRelease();
      sub_25A0006B8(v17, v18, v20, v19, v22, v21, v24, v34);
      return swift_release();
    }
    if (v26)
    {
      uint64_t result = swift_release();
      *a3 = v14;
      a3[1] = v15;
      a3[2] = v17;
      a3[3] = v18;
      a3[4] = v20;
      a3[5] = v19;
      a3[6] = v22;
      a3[7] = v21;
      a3[8] = v24;
      a3[9] = v34;
      return result;
    }
    swift_bridgeObjectRelease();
    uint64_t result = sub_25A0006B8(v17, v18, v20, v19, v22, v21, v24, v34);
    unint64_t v5 = v32;
    int64_t v7 = v33;
    if (v32) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v9 = __OFADD__(v7, 1);
    int64_t v10 = v7 + 1;
    if (v9)
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v10 >= v29) {
      goto LABEL_28;
    }
    unint64_t v11 = *(void *)(v28 + 8 * v10);
    if (!v11) {
      break;
    }
LABEL_17:
    uint64_t v32 = (v11 - 1) & v11;
    int64_t v33 = v10;
  }
  int64_t v12 = v10 + 1;
  if (v10 + 1 >= v29) {
    goto LABEL_28;
  }
  unint64_t v11 = *(void *)(v28 + 8 * v12);
  if (v11) {
    goto LABEL_16;
  }
  int64_t v12 = v10 + 2;
  if (v10 + 2 >= v29) {
    goto LABEL_28;
  }
  unint64_t v11 = *(void *)(v28 + 8 * v12);
  if (v11) {
    goto LABEL_16;
  }
  int64_t v12 = v10 + 3;
  if (v10 + 3 >= v29) {
    goto LABEL_28;
  }
  unint64_t v11 = *(void *)(v28 + 8 * v12);
  if (v11) {
    goto LABEL_16;
  }
  int64_t v12 = v10 + 4;
  if (v10 + 4 >= v29)
  {
LABEL_28:
    uint64_t result = swift_release();
    *((_OWORD *)a3 + 3) = 0u;
    *((_OWORD *)a3 + 4) = 0u;
    *((_OWORD *)a3 + 1) = 0u;
    *((_OWORD *)a3 + 2) = 0u;
    *(_OWORD *)a3 = 0u;
    return result;
  }
  unint64_t v11 = *(void *)(v28 + 8 * v12);
  if (v11)
  {
LABEL_16:
    int64_t v10 = v12;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v10 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_28;
    }
    unint64_t v11 = *(void *)(v28 + 8 * v10);
    ++v12;
    if (v11) {
      goto LABEL_17;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_259FFDA0C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (a1[4])
  {
    uint64_t v6 = a1[6];
    unint64_t v5 = a1[7];
    sub_259FAE450(v6, v5);
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v5 = 0xF000000000000000;
  }
  swift_beginAccess();
  sub_259FAF3C4(v6, v5);
  uint64_t v7 = swift_bridgeObjectRetain();
  unint64_t v8 = sub_25A0059AC(v7, sub_25A006168, (uint64_t)a1);
  if (v2)
  {
    swift_release();
    swift_bridgeObjectRelease();
    sub_259FAF410(v6, v5);
  }
  else
  {
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    v34[0] = v9;
    swift_bridgeObjectRetain();
    sub_25A004034(v34, (uint64_t (*)(uint64_t))sub_25A0050F4, sub_25A0040B8);
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_259FFD650(v34[0]);
    swift_release();
    int64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      uint64_t v30 = a2;
      uint64_t v31 = v6;
      unint64_t v32 = v5;
      uint64_t v37 = MEMORY[0x263F8EE78];
      sub_259FE14E0(0, v11, 0);
      uint64_t v12 = v37;
      uint64_t v13 = (uint64_t *)(v10 + 40);
      do
      {
        uint64_t v14 = *v13;
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v16 = *(void *)(v14 + 8);
        uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
        swift_unknownObjectRetain();
        uint64_t v18 = v17(ObjectType, v16);
        uint64_t v33 = v19;
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v14 + 16))(v34, ObjectType, v14);
        uint64_t v20 = v34[0];
        if (v34[0])
        {
          uint64_t v21 = v35;
          unint64_t v22 = v36;
          uint64_t v23 = v34[1];
          sub_259FAE450(v35, v36);
          sub_259FAFD34(v20, v23, v21, v22);
        }
        else
        {
          uint64_t v21 = 0;
          unint64_t v22 = 0xF000000000000000;
        }
        swift_unknownObjectRelease();
        uint64_t v37 = v12;
        unint64_t v25 = *(void *)(v12 + 16);
        unint64_t v24 = *(void *)(v12 + 24);
        if (v25 >= v24 >> 1)
        {
          sub_259FE14E0(v24 > 1, v25 + 1, 1);
          uint64_t v12 = v37;
        }
        *(void *)(v12 + 16) = v25 + 1;
        char v26 = (void *)(v12 + 32 * v25);
        v26[4] = v18;
        v26[5] = v33;
        void v26[6] = v21;
        v26[7] = v22;
        v13 += 2;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
      uint64_t v6 = v31;
      unint64_t v5 = v32;
      a2 = v30;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v12 = MEMORY[0x263F8EE78];
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v27 = swift_bridgeObjectRetain();
    uint64_t v28 = sub_259FFDDC0(v27);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v6, v5);
    sub_259FAF410(v6, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a2 = v28;
    a2[1] = v12;
    a2[2] = v6;
    a2[3] = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return sub_259FAF410(v6, v5);
}

uint64_t sub_259FFDDC0(uint64_t a1)
{
  uint64_t v44 = MEMORY[0x263F8EE80];
  uint64_t v57 = MEMORY[0x263F8EE80];
  uint64_t v46 = a1 + 64;
  uint64_t v1 = -1 << *(unsigned char *)(a1 + 32);
  if (-v1 < 64) {
    uint64_t v2 = ~(-1 << -(char)v1);
  }
  else {
    uint64_t v2 = -1;
  }
  unint64_t v3 = v2 & *(void *)(a1 + 64);
  int64_t v45 = (unint64_t)(63 - v1) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v5 = 0;
  if (!v3) {
    goto LABEL_6;
  }
LABEL_5:
  uint64_t v48 = (v3 - 1) & v3;
  int64_t v49 = v5;
  for (unint64_t i = __clz(__rbit64(v3)) | (v5 << 6); ; unint64_t i = __clz(__rbit64(v8)) + (v7 << 6))
  {
    unint64_t v10 = *(void *)(a1 + 56) + (i << 6);
    uint64_t v12 = *(void *)v10;
    uint64_t v11 = *(void *)(v10 + 8);
    uint64_t v14 = *(void *)(v10 + 16);
    uint64_t v13 = *(void *)(v10 + 24);
    uint64_t v15 = *(void *)(v10 + 32);
    uint64_t v16 = *(void *)(v10 + 40);
    uint64_t v18 = *(void *)(v10 + 48);
    unint64_t v17 = *(void *)(v10 + 56);
    if ((v16 & 0x8000000000000000) == 0)
    {
      sub_259FB2BA4(*(void *)v10, *(void *)(v10 + 8), *(void *)(v10 + 16), *(void *)(v10 + 24), *(void *)(v10 + 32), *(void *)(v10 + 40), *(void *)(v10 + 48), *(void *)(v10 + 56));
      uint64_t result = sub_25A0006B8(v12, v11, v14, v13, v15, v16, v18, v17);
      unint64_t v3 = v48;
      int64_t v5 = v49;
      if (v48) {
        goto LABEL_5;
      }
      goto LABEL_6;
    }
    uint64_t v19 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v41 = *v19;
    uint64_t v43 = v19[1];
    sub_259FB2BA4(v12, v11, v14, v13, v15, v16, v18, v17);
    sub_259FB2BA4(v12, v11, v14, v13, v15, v16, v18, v17);
    swift_bridgeObjectRetain();
    sub_259FAF478(v11, (uint64_t)v50);
    if (v42)
    {
      swift_bridgeObjectRelease();
      sub_25A0006B8(v12, v11, v14, v13, v15, v16, v18, v17);
      swift_release();
      uint64_t v33 = v44;
      sub_259FB2B40();
      return v33;
    }
    char v38 = v50[0];
    uint64_t v37 = v52;
    int v35 = v54;
    char v36 = v53;
    char v34 = v55;
    long long v39 = v56;
    long long v40 = v51;
    uint64_t v20 = v44;
    unint64_t v21 = *(void *)(v44 + 16);
    if (*(void *)(v44 + 24) <= v21)
    {
      sub_259FF7F10(v21 + 1, 1);
      uint64_t v20 = v57;
    }
    uint64_t v44 = v20;
    sub_25A00EF60();
    sub_25A00EA40();
    uint64_t result = sub_25A00EF90();
    uint64_t v22 = v44 + 64;
    uint64_t v23 = -1 << *(unsigned char *)(v44 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v44 + 64 + 8 * (v24 >> 6))) == 0) {
      break;
    }
    unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v44 + 64 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_39:
    *(void *)(v22 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t v31 = (void *)(*(void *)(v44 + 48) + 16 * v26);
    void *v31 = v41;
    v31[1] = v43;
    unint64_t v32 = *(void *)(v44 + 56) + (v26 << 6);
    *(unsigned char *)unint64_t v32 = v38;
    *(_OWORD *)(v32 + 8) = v40;
    *(void *)(v32 + 24) = v37;
    *(unsigned char *)(v32 + 32) = v36;
    *(_DWORD *)(v32 + 36) = v35;
    *(unsigned char *)(v32 + 40) = v34;
    *(_OWORD *)(v32 + 48) = v39;
    ++*(void *)(v44 + 16);
    uint64_t result = sub_25A0006B8(v12, v11, v14, v13, v15, v16, v18, v17);
    unint64_t v3 = v48;
    int64_t v5 = v49;
    if (v48) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v7 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v7 >= v45) {
      goto LABEL_41;
    }
    unint64_t v8 = *(void *)(v46 + 8 * v7);
    if (!v8)
    {
      int64_t v9 = v5 + 2;
      if (v5 + 2 >= v45) {
        goto LABEL_41;
      }
      unint64_t v8 = *(void *)(v46 + 8 * v9);
      if (v8) {
        goto LABEL_17;
      }
      int64_t v9 = v5 + 3;
      if (v5 + 3 >= v45) {
        goto LABEL_41;
      }
      unint64_t v8 = *(void *)(v46 + 8 * v9);
      if (v8) {
        goto LABEL_17;
      }
      int64_t v9 = v5 + 4;
      if (v5 + 4 >= v45) {
        goto LABEL_41;
      }
      unint64_t v8 = *(void *)(v46 + 8 * v9);
      if (v8)
      {
LABEL_17:
        int64_t v7 = v9;
        goto LABEL_18;
      }
      int64_t v9 = v5 + 5;
      if (v5 + 5 < v45)
      {
        unint64_t v8 = *(void *)(v46 + 8 * v9);
        if (!v8)
        {
          while (1)
          {
            int64_t v7 = v9 + 1;
            if (__OFADD__(v9, 1)) {
              goto LABEL_46;
            }
            if (v7 >= v45) {
              goto LABEL_41;
            }
            unint64_t v8 = *(void *)(v46 + 8 * v7);
            ++v9;
            if (v8) {
              goto LABEL_18;
            }
          }
        }
        goto LABEL_17;
      }
LABEL_41:
      uint64_t v33 = v44;
      sub_259FB2B40();
      return v33;
    }
LABEL_18:
    uint64_t v48 = (v8 - 1) & v8;
    int64_t v49 = v7;
  }
  char v27 = 0;
  unint64_t v28 = (unint64_t)(63 - v23) >> 6;
  while (++v25 != v28 || (v27 & 1) == 0)
  {
    BOOL v29 = v25 == v28;
    if (v25 == v28) {
      unint64_t v25 = 0;
    }
    v27 |= v29;
    uint64_t v30 = *(void *)(v22 + 8 * v25);
    if (v30 != -1)
    {
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
      goto LABEL_39;
    }
  }
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_259FFE29C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = v5;
  uint64_t v9 = *a3;
  uint64_t v11 = a3[2];
  unint64_t v10 = a3[3];
  *(void *)(v5 + 88) = 0;
  swift_unknownObjectWeakInit();
  swift_retain();
  uint64_t v12 = MEMORY[0x263F8EE78];
  *(void *)(v7 + 96) = sub_259FAFF0C(MEMORY[0x263F8EE78]);
  *(void *)(v7 + 104) = sub_259FB228C(v12);
  *(void *)(v7 + 112) = sub_259FB0094(v12);
  uint64_t v48 = v9;
  *(void *)&v49[0] = sub_259FFD340(v9);
  swift_bridgeObjectRetain();
  sub_25A004034((uint64_t *)v49, (uint64_t (*)(uint64_t))sub_25A0050E0, sub_259FB8604);
  if (v6) {
    goto LABEL_19;
  }
  uint64_t v47 = v11;
  uint64_t v44 = a5;
  unint64_t v45 = v10;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)&v49[0];
  int64_t v14 = *(void *)(*(void *)&v49[0] + 16);
  if (v14)
  {
    *(void *)&v49[0] = v12;
    sub_259FE1460(0, v14, 0);
    uint64_t v15 = *(void *)&v49[0];
    uint64_t v16 = (unint64_t *)(v13 + 104);
    do
    {
      uint64_t v18 = *(v16 - 9);
      uint64_t v17 = *(v16 - 8);
      uint64_t v20 = *(v16 - 1);
      unint64_t v19 = *v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_259FAF3C4(v20, v19);
      swift_bridgeObjectRelease();
      sub_259FAF410(v20, v19);
      *(void *)&v49[0] = v15;
      unint64_t v22 = *(void *)(v15 + 16);
      unint64_t v21 = *(void *)(v15 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_259FE1460(v21 > 1, v22 + 1, 1);
        uint64_t v15 = *(void *)&v49[0];
      }
      v16 += 10;
      *(void *)(v15 + 16) = v22 + 1;
      uint64_t v23 = v15 + 16 * v22;
      *(void *)(v23 + 32) = v18;
      *(void *)(v23 + 40) = v17;
      --v14;
    }
    while (v14);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v15 = MEMORY[0x263F8EE78];
  }
  *(void *)(v7 + 64) = v15;
  uint64_t v24 = sub_25A004EC8(v48);
  swift_beginAccess();
  *(void *)(v7 + 96) = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = swift_bridgeObjectRetain();
  uint64_t v26 = sub_259FFE8A4(v25);
  swift_bridgeObjectRelease();
  if (*(void *)(v26 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402CF0);
    uint64_t v27 = sub_25A00EDE0();
  }
  else
  {
    uint64_t v27 = MEMORY[0x263F8EE80];
  }
  *(void *)&v49[0] = v27;
  uint64_t v28 = swift_bridgeObjectRetain();
  sub_25A0038D0(v28, 1, v49);
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)&v49[0];
  swift_retain();
  uint64_t v30 = swift_bridgeObjectRetain();
  uint64_t v31 = sub_259FE35E4(v30);
  swift_release();
  *(void *)&v49[0] = v31;
  sub_25A004034((uint64_t *)v49, sub_25A0050CC, sub_259FE3E50);
  swift_release();
  *(void *)(v7 + 72) = *(void *)&v49[0];
  swift_beginAccess();
  *(void *)(v7 + 112) = v29;
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void *)(v15 + 16);
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void *)(v29 + 16);
  swift_release();
  if (__OFADD__(v32, v33))
  {
    __break(1u);
LABEL_19:
    swift_bridgeObjectRelease();
    swift_release();
    __break(1u);
    swift_unexpectedError();
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  *(void *)(v7 + 120) = v32 + v33;
  uint64_t ObjectType = swift_getObjectType();
  if ((sub_259FD0794(ObjectType, v44) & 1) != 0 && v45 >> 60 != 15)
  {
    sub_259FAE450(v47, v45);
    sub_259FD08E8(ObjectType, v44);
    uint64_t v40 = v39;
    uint64_t v41 = swift_getObjectType();
    (*(void (**)(_OWORD *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t))(v40 + 80))(v49, v47, v45, v41, v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_259FAF410(v47, v45);
    sub_259FAF410(v47, v45);
    long long v35 = v49[0];
    long long v36 = v49[1];
    uint64_t v38 = a1;
    uint64_t v37 = a2;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259FAF410(v47, v45);
    long long v35 = 0uLL;
    long long v36 = 0uLL;
    uint64_t v37 = a2;
    uint64_t v38 = a1;
  }
  *(_OWORD *)(v7 + 32) = v35;
  *(_OWORD *)(v7 + 48) = v36;
  swift_release();
  *(void *)(v7 + 16) = v38;
  *(void *)(v7 + 24) = v37;
  *(void *)(v7 + 88) = v44;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return v7;
}

uint64_t sub_259FFE8A4(uint64_t a1)
{
  uint64_t v14 = MEMORY[0x263F8EE78];
  sub_259FE1440(0, 0, 0);
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v13 = v2;
  if (v2)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (unint64_t *)(a1 + 56);
    while (v4 != 0x80000000)
    {
      uint64_t v6 = *(v5 - 3);
      uint64_t v7 = *(v5 - 2);
      uint64_t v8 = *(v5 - 1);
      unint64_t v9 = *v5;
      swift_bridgeObjectRetain();
      sub_259FAF3C4(v8, v9);
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      uint64_t result = swift_bridgeObjectRetain();
      if (v11 >= v10 >> 1) {
        uint64_t result = sub_259FE1440(v10 > 1, v11 + 1, 1);
      }
      v5 += 4;
      *(void *)(v14 + 16) = v11 + 1;
      uint64_t v12 = (void *)(v14 + 56 * v11);
      v12[4] = v6;
      uint64_t v12[5] = v7;
      v12[6] = v4;
      uint64_t v12[7] = v6;
      v12[8] = v7;
      v12[9] = v8;
      v12[10] = v9;
      if (v13 == ++v4) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return v14;
  }
  return result;
}

uint64_t sub_259FFE9E4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v6 = *(void *)(v2 + 96);
  if (!*(void *)(v6 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_259FE120C(a1, a2);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_endAccess();
    sub_25A00ED10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_25A00EA80();
    swift_bridgeObjectRelease();
    sub_25A00EA80();
    sub_25A00EA80();
    sub_25A00EA80();
    sub_259FB3304();
    swift_allocError();
    *(void *)uint64_t v19 = 0x2220616D65686353;
    *(void *)(v19 + 8) = 0xE800000000000000;
    *(unsigned char *)(v19 + 16) = 3;
    return swift_willThrow();
  }
  uint64_t v22 = a1;
  unint64_t v9 = (uint64_t *)(*(void *)(v6 + 56) + (v7 << 6));
  uint64_t v10 = *v9;
  uint64_t v12 = v9[2];
  uint64_t v11 = v9[3];
  uint64_t v13 = v9[4];
  uint64_t v24 = v9[5];
  uint64_t v25 = v9[1];
  uint64_t v15 = v9[6];
  unint64_t v14 = v9[7];
  swift_endAccess();
  uint64_t v23 = v10;
  uint64_t v32 = v15;
  sub_259FB2BA4(v10, v25, v12, v11, v13, v24, v15, v14);
  swift_bridgeObjectRelease();
  if (v24 < 0) {
    return v10;
  }
  LOBYTE(v26[0]) = v10;
  v26[1] = v25;
  v26[2] = v12;
  v26[3] = v11;
  char v27 = v13 & 1;
  int v28 = HIDWORD(v13);
  char v29 = v24 & 1;
  uint64_t v30 = v32;
  unint64_t v31 = v14;
  swift_bridgeObjectRetain();
  sub_259FAF3C4(v32, v14);
  uint64_t v16 = sub_259FFF218(v22, a2, (uint64_t)v26);
  if (v3)
  {
    uint64_t v17 = v32;
    sub_25A0006B8(v10, v25, v12, v11, v13, v24, v32, v14);
    return sub_25A0006B8(v10, v25, v12, v11, v13, v24, v17, v14);
  }
  else
  {
    uint64_t v20 = v16;
    uint64_t v21 = v32;
    sub_25A0006B8(v23, v25, v12, v11, v13, v24, v32, v14);
    sub_25A0006B8(v23, v25, v12, v11, v13, v24, v21, v14);
    return v20;
  }
}

uint64_t sub_259FFED04()
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_25A0059AC(v2, sub_25A006168, v0);
  swift_bridgeObjectRelease();
  if (!v1)
  {
    uint64_t v5 = v3;
    swift_bridgeObjectRetain();
    sub_25A004034(&v5, (uint64_t (*)(uint64_t))sub_25A0050F4, sub_25A0040B8);
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_259FFD650(v5);
    swift_release();
  }
  return v3;
}

uint64_t sub_259FFEE14(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = a3[1];
  uint64_t v5 = a3[2];
  if (*a3 < 0)
  {
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v7 = a3[3];
    unint64_t v6 = a3[4];
    v9[0] = a3[1];
    v9[1] = v5;
    uint64_t v9[2] = v7;
    v9[3] = v6;
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v7, v6);
    sub_259FFEEFC(v3, v9);
    sub_25A00042C(v3, v4, v5, v7, v6);
  }
  return v3;
}

uint64_t sub_259FFEEFC(unsigned int a1, uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v8 = a2[2];
  unint64_t v9 = a2[3];
  uint64_t v10 = MEMORY[0x25A2F2B50](v4 + 10);
  if (!v10)
  {
    sub_259FB3304();
    swift_allocError();
    *(void *)uint64_t v14 = 0;
    *(void *)(v14 + 8) = 0;
    *(unsigned char *)(v14 + 16) = 7;
    swift_willThrow();
    return v9;
  }
  uint64_t v25 = v4[11];
  uint64_t v26 = v10;
  v27[0] = v7;
  v27[1] = v6;
  uint64_t v27[2] = v8;
  v27[3] = v9;
  uint64_t v11 = swift_beginAccess();
  MEMORY[0x270FA5388](v11);
  uint64_t v24 = v7;
  swift_bridgeObjectRetain();
  sub_259FAF3C4(v8, v9);
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_25A005CEC(v12, sub_25A005990);
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
    sub_259FAF410(v8, v9);
    swift_unknownObjectRelease();
    return v9;
  }
  if (*(void *)(v13 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D10);
    uint64_t v15 = sub_25A00EDE0();
  }
  else
  {
    uint64_t v15 = MEMORY[0x263F8EE80];
  }
  uint64_t v29 = v15;
  uint64_t v16 = (void *)swift_bridgeObjectRetain();
  sub_25A003C0C(v16, 1, &v29);
  swift_bridgeObjectRelease();
  uint64_t v17 = v29;
  type metadata accessor for ProtoOneOfSchema();
  swift_allocObject();
  swift_unknownObjectRetain();
  uint64_t v18 = sub_259FB3DEC(v27, v17, v26, v25);
  unint64_t v9 = v18;
  v28[0] = a1 | 0x8000000000000000;
  v28[1] = v18;
  v28[3] = 0;
  v28[4] = 0;
  v28[2] = &off_2707EAA68;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v29 = v4[14];
  v4[14] = 0x8000000000000000;
  sub_259FFB6B0((uint64_t)v28, v24, v6, isUniquelyReferenced_nonNull_native);
  v4[14] = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_unknownObjectRelease();
  uint64_t v21 = v4[15];
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (!v22)
  {
    v4[15] = v23;
    if (!v23)
    {
      v4[11] = 0;
      swift_unknownObjectWeakAssign();
    }
    return v9;
  }
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_259FFF218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  char v5 = *(unsigned char *)a3;
  uint64_t v6 = *(void *)(a3 + 8);
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v26 = *(void *)(a3 + 24);
  char v8 = *(unsigned char *)(a3 + 32);
  int v9 = *(_DWORD *)(a3 + 36);
  char v10 = *(unsigned char *)(a3 + 40);
  uint64_t v12 = *(void *)(a3 + 48);
  unint64_t v11 = *(void *)(a3 + 56);
  uint64_t v25 = MEMORY[0x25A2F2B50]();
  if (!v25)
  {
    sub_259FB3304();
    swift_allocError();
    *(void *)uint64_t v14 = 0;
    *(void *)(v14 + 8) = 0;
    *(unsigned char *)(v14 + 16) = 7;
    swift_willThrow();
    return v12;
  }
  uint64_t v21 = v4[11];
  v27[0] = v5;
  uint64_t v28 = v6;
  uint64_t v29 = v7;
  uint64_t v30 = v26;
  char v31 = v8;
  int v32 = v9;
  char v33 = v10;
  uint64_t v34 = v12;
  unint64_t v35 = v11;
  type metadata accessor for ProtoFieldSchema();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_259FAF3C4(v12, v11);
  swift_unknownObjectRetain();
  uint64_t v13 = sub_259FF266C(a1, a2, v27, v25, v21);
  if (v22)
  {
    swift_unknownObjectRelease();
    return v12;
  }
  uint64_t v12 = v13;
  v36[0] = v13;
  v36[1] = &off_2707EAA28;
  memset(&v36[2], 0, 24);
  v36[5] = 0x8000000000000000;
  v36[6] = 0;
  v36[7] = 0;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v37 = v4[12];
  v4[12] = 0x8000000000000000;
  sub_259FFB3E0((uint64_t)v36, a1, a2, isUniquelyReferenced_nonNull_native);
  v4[12] = v37;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_beginAccess();
  swift_retain();
  char v16 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v37 = v4[13];
  v4[13] = 0x8000000000000000;
  sub_25A005810(v12, v26, v16, &v37);
  v4[13] = v37;
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t result = swift_unknownObjectRelease();
  uint64_t v18 = v4[15];
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (!v19)
  {
    v4[15] = v20;
    if (!v20)
    {
      v4[11] = 0;
      swift_unknownObjectWeakAssign();
    }
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_259FFF4A4(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 104);
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_259FE1284(a1), (v6 & 1) != 0))
  {
    a1 = *(void *)(*(void *)(v4 + 56) + 16 * v5);
    swift_endAccess();
    swift_unknownObjectRetain();
  }
  else
  {
    swift_endAccess();
    uint64_t v7 = swift_beginAccess();
    MEMORY[0x270FA5388](v7);
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_259FFD728(v8, (uint64_t (*)(uint64_t, uint64_t, void *))sub_25A006028, v28);
    swift_bridgeObjectRelease();
    if (!v2)
    {
      uint64_t v10 = v28[1];
      if (v28[1])
      {
        a1 = v29;
        uint64_t v11 = v30;
        uint64_t v13 = v31;
        uint64_t v12 = v32;
        uint64_t v14 = v33;
        uint64_t v15 = v34;
        uint64_t v27 = v35;
        uint64_t v25 = v28[0];
        unint64_t v26 = v36;
        uint64_t v24 = v32;
        if (v34 < 0)
        {
          uint64_t v18 = v31;
          uint64_t v19 = v30;
          uint64_t v20 = v33;
          uint64_t v21 = v34;
          sub_259FB2BA4(v29, v30, v31, v32, v33, v34, v35, v36);
          sub_25A0060D8(v25, v10, a1, v19, v18, v24, v20, v21, v27, v26);
        }
        else
        {
          LOBYTE(v28[0]) = v29;
          v28[1] = v30;
          uint64_t v29 = v31;
          uint64_t v30 = v32;
          LOBYTE(v31) = v33 & 1;
          HIDWORD(v31) = HIDWORD(v33);
          LOBYTE(v32) = v34 & 1;
          uint64_t v23 = v11;
          uint64_t v33 = v35;
          uint64_t v34 = v36;
          sub_259FB2BA4(a1, v11, v13, v12, v14, v15, v35, v36);
          sub_25A006048(v25, v10, a1, v23, v13, v12, v14, v15, v27, v26);
          uint64_t v22 = sub_259FFF218(v25, v10, (uint64_t)v28);
          sub_25A0060D8(v25, v10, a1, v23, v13, v24, v14, v15, v27, v26);
          sub_25A0060D8(v25, v10, a1, v23, v13, v24, v14, v15, v27, v26);
          sub_25A0006B8(a1, v23, v13, v24, v14, v15, v27, v26);
          return v22;
        }
      }
      else
      {
        strcpy((char *)v28, "With number ");
        BYTE5(v28[1]) = 0;
        HIWORD(v28[1]) = -5120;
        uint64_t v37 = a1;
        sub_25A00EE30();
        sub_25A00EA80();
        swift_bridgeObjectRelease();
        uint64_t v16 = v28[0];
        a1 = v28[1];
        sub_259FB3304();
        swift_allocError();
        *(void *)uint64_t v17 = v16;
        *(void *)(v17 + 8) = a1;
        *(unsigned char *)(v17 + 16) = 3;
        swift_willThrow();
      }
    }
  }
  return a1;
}

BOOL sub_259FFF91C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = a3[3];
  uint64_t v6 = a3[5];
  if (v6 < 0)
  {
    unint64_t v17 = a3[7];
    uint64_t v15 = a3[4];
    uint64_t v16 = a3[6];
    uint64_t v8 = a3[1];
    uint64_t v14 = a3[2];
    uint64_t v9 = *a3;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 48);
    swift_unknownObjectRetain();
    uint64_t v12 = v11(ObjectType, v8);
    sub_25A0006B8(v9, v8, v14, v5, v15, v6, v16, v17);
    return v12 == a4;
  }
  else
  {
    return v5 == a4;
  }
}

uint64_t sub_259FFFA04(uint64_t a1, uint64_t a2, uint64_t *a3, int a4)
{
  uint64_t v7 = a3[3];
  uint64_t v8 = a3[4];
  uint64_t v9 = a3[5];
  if (v9 < 0)
  {
    uint64_t v10 = *a3;
    uint64_t v11 = a3[1];
    uint64_t v16 = a3[2];
    uint64_t v17 = a3[6];
    unint64_t v18 = a3[7];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 40);
    swift_unknownObjectRetain();
    uint64_t v14 = v13(ObjectType, v11);
    if ((v14 & 0x100000000) != 0 || v14 != a4)
    {
      sub_25A0006B8(v10, v11, v16, v7, v8, v9, v17, v18);
      return 0;
    }
    (*(void (**)(uint64_t, uint64_t))(v11 + 48))(ObjectType, v11);
    sub_25A0006B8(v10, v11, v16, v7, v8, v9, v17, v18);
    if (v4) {
      return a1;
    }
  }
  else if ((v9 & 1) != 0 || HIDWORD(v8) != a4)
  {
    return 0;
  }
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_259FFFB8C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v6 = *(void *)(v2 + 112);
  if (!*(void *)(v6 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_259FE120C(a1, a2);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_endAccess();
    sub_259FB3304();
    swift_allocError();
    *(_OWORD *)uint64_t v15 = xmmword_25A011720;
    *(unsigned char *)(v15 + 16) = 7;
    swift_willThrow();
    return a1;
  }
  uint64_t v9 = (uint64_t *)(*(void *)(v6 + 56) + 40 * v7);
  uint64_t v10 = *v9;
  a1 = v9[1];
  uint64_t v11 = v9[2];
  uint64_t v12 = v9[3];
  unint64_t v13 = v9[4];
  swift_endAccess();
  sub_259FB2B48(v10, a1, v11, v12, v13);
  swift_bridgeObjectRelease();
  if ((v10 & 0x8000000000000000) == 0)
  {
    v18[0] = a1;
    v18[1] = v11;
    v18[2] = v12;
    v18[3] = v13;
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v12, v13);
    uint64_t v14 = sub_259FFEEFC(v10, v18);
    if (v3)
    {
      sub_25A00042C(v10, a1, v11, v12, v13);
      sub_25A00042C(v10, a1, v11, v12, v13);
    }
    else
    {
      uint64_t v17 = v14;
      sub_25A00042C(v10, a1, v11, v12, v13);
      sub_25A00042C(v10, a1, v11, v12, v13);
      return v17;
    }
  }
  return a1;
}

uint64_t sub_259FFFD64@<X0>(uint64_t (*a1)(uint64_t *__return_ptr, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  sub_25A00E2B0();
  swift_allocObject();
  uint64_t v6 = sub_25A00E2A0() | 0x4000000000000000;
  uint64_t v55 = 0;
  uint64_t v56 = v6;
  uint64_t v7 = *(void *)(v3 + 64);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8)
  {
    uint64_t v31 = 0;
LABEL_13:
    *a3 = v4;
    a3[1] = &off_2707EAD98;
    a3[2] = v31;
    a3[3] = v6;
    return swift_retain();
  }
  uint64_t v37 = a3;
  uint64_t v38 = v3;
  uint64_t v39 = (uint64_t *)(v3 + 96);
  swift_bridgeObjectRetain_n();
  uint64_t v9 = (uint64_t *)(v7 + 40);
  while (1)
  {
    uint64_t v11 = *(v9 - 1);
    uint64_t v10 = *v9;
    swift_beginAccess();
    uint64_t v12 = *v39;
    uint64_t v13 = *(void *)(*v39 + 16);
    swift_bridgeObjectRetain();
    if (!v13) {
      goto LABEL_15;
    }
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_259FE120C(v11, v10);
    if ((v15 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_15:
      swift_endAccess();
      uint64_t v46 = 0;
      unint64_t v47 = 0xE000000000000000;
      sub_25A00ED10();
      swift_bridgeObjectRelease();
      uint64_t v46 = 0x2220616D65686353;
      unint64_t v47 = 0xE800000000000000;
      swift_bridgeObjectRetain();
      sub_25A00EA80();
      swift_bridgeObjectRelease();
      sub_25A00EA80();
      sub_25A00EA80();
      sub_25A00EA80();
      uint64_t v33 = v46;
      unint64_t v34 = v47;
      sub_259FB3304();
      uint64_t v35 = swift_allocError();
      *(void *)uint64_t v36 = v33;
      *(void *)(v36 + 8) = v34;
      *(unsigned char *)(v36 + 16) = 3;
      uint64_t v57 = v35;
      swift_willThrow();
      swift_bridgeObjectRelease_n();
      goto LABEL_18;
    }
    uint64_t v42 = v11;
    uint64_t v43 = v9;
    uint64_t v44 = v8;
    uint64_t v16 = (uint64_t *)(*(void *)(v12 + 56) + (v14 << 6));
    uint64_t v17 = v10;
    uint64_t v18 = *v16;
    uint64_t v19 = v16[1];
    uint64_t v21 = v16[2];
    uint64_t v20 = v16[3];
    uint64_t v22 = v16[4];
    uint64_t v23 = v16[5];
    uint64_t v24 = v16[6];
    unint64_t v25 = v16[7];
    swift_endAccess();
    unint64_t v45 = v25;
    sub_259FB2BA4(v18, v19, v21, v20, v22, v23, v24, v25);
    swift_bridgeObjectRelease();
    if ((v23 & 0x8000000000000000) == 0) {
      break;
    }
    uint64_t v28 = v19;
LABEL_9:
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v30 = v57;
    sub_25A0001AC((uint64_t)&v55, a1, a2, ObjectType, v28);
    uint64_t v57 = v30;
    if (v30)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return sub_259FAE4A8(v55, v56);
    }
    uint64_t v9 = v43 + 2;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v8 = v44 - 1;
    if (v44 == 1)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v31 = v55;
      uint64_t v6 = v56;
      uint64_t v4 = v38;
      a3 = v37;
      goto LABEL_13;
    }
  }
  LOBYTE(v46) = v18;
  unint64_t v47 = v19;
  uint64_t v48 = v21;
  uint64_t v49 = v20;
  char v50 = v22 & 1;
  int v51 = HIDWORD(v22);
  char v52 = v23 & 1;
  uint64_t v53 = v24;
  unint64_t v54 = v25;
  swift_bridgeObjectRetain();
  sub_259FAF3C4(v24, v25);
  uint64_t v26 = v57;
  sub_259FFF218(v42, v17, (uint64_t)&v46);
  uint64_t v57 = v26;
  if (!v26)
  {
    uint64_t v28 = v27;
    sub_25A0006B8(v18, v19, v21, v20, v22, v23, v24, v45);
    sub_25A0006B8(v18, v19, v21, v20, v22, v23, v24, v45);
    goto LABEL_9;
  }
  sub_25A0006B8(v18, v19, v21, v20, v22, v23, v24, v25);
  sub_25A0006B8(v18, v19, v21, v20, v22, v23, v24, v25);
  swift_bridgeObjectRelease_n();
LABEL_18:
  swift_bridgeObjectRelease();
  return sub_259FAE4A8(v55, v56);
}

void *sub_25A0001AC(uint64_t a1, uint64_t (*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (((*(uint64_t (**)(uint64_t, uint64_t))(a5 + 16))(a4, a5) & 1) == 0) {
    return sub_25A000AA8(a1, (void *(*)(void *__return_ptr, uint64_t, uint64_t))a2, a3, a4, a5);
  }
  uint64_t result = (*(void *(**)(unint64_t *__return_ptr, uint64_t, uint64_t))(a5 + 56))(&v14, a4, a5);
  if (!v5)
  {
    uint64_t v12 = v14;
    uint64_t v13 = v15;
    if (v15 >> 62 == 1
      || v15 >> 62 == 2 && __PAIR128__(-1, -3) < __PAIR128__((v14 >= 0xF) + v15 + 0x7FFFFFFFFFFFFFFFLL, v14 - 15))
    {
      sub_25A000FB8(a1, (uint64_t *)&v14, a2, a3, a4, a5);
    }
    else
    {
      sub_25A0029E0(a1, (uint64_t *)&v14, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))a2, a3, a4, a5);
    }
    return (void *)sub_259FAD1BC(v12, v13);
  }
  return result;
}

uint64_t sub_25A000308()
{
  sub_259FAFD34(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25A006564(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25A000364()
{
  swift_bridgeObjectRelease();
  sub_259FAFD34(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25A006564(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25A0003C0()
{
  sub_25A000364();
  return MEMORY[0x270FA0228](v0, 128, 7);
}

uint64_t type metadata accessor for ProtoMessageSchema()
{
  return self;
}

uint64_t destroy for ProtoMessageSchema.OneofContainer(uint64_t a1)
{
  return sub_25A00042C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32));
}

uint64_t sub_25A00042C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a1 < 0)
  {
    return swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return sub_259FAF410(a4, a5);
  }
}

uint64_t *initializeWithCopy for ProtoMessageSchema.OneofContainer(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  unint64_t v7 = a2[4];
  sub_259FB2B48(*a2, v4, v5, v6, v7);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return a1;
}

uint64_t *assignWithCopy for ProtoMessageSchema.OneofContainer(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  unint64_t v7 = a2[4];
  sub_259FB2B48(*a2, v4, v5, v6, v7);
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v11 = a1[3];
  unint64_t v12 = a1[4];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  sub_25A00042C(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *assignWithTake for ProtoMessageSchema.OneofContainer(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  uint64_t v4 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v7 = a1[3];
  unint64_t v8 = a1[4];
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v9;
  a1[4] = v3;
  sub_25A00042C(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProtoMessageSchema.OneofContainer(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  HIDWORD(v3) = *(_DWORD *)(a1 + 4);
  LODWORD(v3) = HIDWORD(v3);
  unsigned int v2 = v3 >> 31;
  if (v2 > 0x80000000) {
    int v4 = ~v2;
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

double storeEnumTagSinglePayload for ProtoMessageSchema.OneofContainer(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      HIDWORD(v4) = -a2;
      LODWORD(v4) = -a2;
      *(void *)a1 = (unint64_t)(v4 >> 1) << 32;
      double result = 0.0;
      *(_OWORD *)(a1 + 8) = 0u;
      *(_OWORD *)(a1 + 24) = 0u;
      return result;
    }
    *(unsigned char *)(a1 + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_25A000668(void *a1)
{
  return *a1 >> 63;
}

void *sub_25A000674(void *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t sub_25A000684(uint64_t result, int a2)
{
  *(_DWORD *)(result + 4) = a2 << 31;
  return result;
}

ValueMetadata *type metadata accessor for ProtoMessageSchema.OneofContainer()
{
  return &type metadata for ProtoMessageSchema.OneofContainer;
}

uint64_t destroy for ProtoMessageSchema.FieldContainer(uint64_t a1)
{
  return sub_25A0006B8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56));
}

uint64_t sub_25A0006B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a6 < 0)
  {
    return swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return sub_259FAF410(a7, a8);
  }
}

uint64_t *initializeWithCopy for ProtoMessageSchema.FieldContainer(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  unint64_t v10 = a2[7];
  sub_259FB2BA4(*a2, v4, v5, v6, v7, v8, v9, v10);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  return a1;
}

uint64_t *assignWithCopy for ProtoMessageSchema.FieldContainer(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  unint64_t v10 = a2[7];
  sub_259FB2BA4(*a2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v13 = a1[2];
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  uint64_t v16 = a1[5];
  uint64_t v17 = a1[6];
  unint64_t v18 = a1[7];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  sub_25A0006B8(v11, v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

uint64_t *assignWithTake for ProtoMessageSchema.FieldContainer(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v8 = a1[5];
  uint64_t v9 = a1[6];
  unint64_t v10 = a1[7];
  long long v11 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v11;
  long long v12 = a2[3];
  *((_OWORD *)a1 + 2) = a2[2];
  *((_OWORD *)a1 + 3) = v12;
  sub_25A0006B8(v3, v5, v4, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProtoMessageSchema.FieldContainer(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = (*(_DWORD *)(a1 + 32) >> 1) & 0x7FFFFFFF | ((*(_DWORD *)(a1 + 40) >> 1) << 31);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for ProtoMessageSchema.FieldContainer(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 56) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 32) = (-2 * a2);
      *(void *)(a1 + 40) = 2;
      *(void *)(a1 + 48) = 0;
      *(void *)(a1 + 56) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_25A000944(uint64_t a1)
{
  return *(void *)(a1 + 40) >> 63;
}

uint64_t sub_25A000950(uint64_t result)
{
  *(void *)(result + 40) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_25A000960(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 40) & 1 | (a2 << 63);
  *(void *)(result + 32) &= 0xFFFFFFFF00000001;
  *(void *)(result + 40) = v2;
  return result;
}

ValueMetadata *type metadata accessor for ProtoMessageSchema.FieldContainer()
{
  return &type metadata for ProtoMessageSchema.FieldContainer;
}

uint64_t sub_25A000988@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[4];
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  unint64_t v5 = v1[7];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_259FB45E0(v2, v3, v4, v5);
}

uint64_t sub_25A00099C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_25A0009A4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_25A0009AC()
{
  uint64_t result = sub_25A006184();
  if (!v0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_25A0009D4()
{
  return sub_259FFED04();
}

uint64_t sub_25A0009EC(uint64_t a1, uint64_t a2)
{
  return sub_259FFE9E4(a1, a2);
}

uint64_t sub_25A000A04(uint64_t a1)
{
  return sub_259FFF4A4(a1);
}

uint64_t sub_25A000A1C(uint64_t a1, uint64_t a2)
{
  return sub_259FFFB8C(a1, a2);
}

uint64_t sub_25A000A34@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  *a4 = v4;
  a4[1] = a3;
  a4[2] = a1;
  a4[3] = a2;
  sub_259FAE450(a1, a2);
  return swift_retain();
}

uint64_t sub_25A000A6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  *a4 = v4;
  a4[1] = a3;
  a4[2] = a1;
  a4[3] = a2;
  return swift_retain();
}

uint64_t sub_25A000A90@<X0>(uint64_t (*a1)(uint64_t *__return_ptr, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_259FFFD64(a1, a2, a3);
}

void *sub_25A000AA8(uint64_t a1, void *(*a2)(void *__return_ptr, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = v5;
  uint64_t result = a2(v38, v5, a5);
  if (!v6)
  {
    __int16 v12 = v39;
    if (HIBYTE(v39) <= 0xFEu)
    {
      uint64_t v13 = v38[0];
      unint64_t v14 = v38[1];
      uint64_t v15 = v38[2];
      unint64_t v40 = v38[3];
      uint64_t v16 = MEMORY[0x270FA5388](result);
      switch(v17)
      {
        case 1:
          LODWORD(v32) = v13;
          char v18 = 1;
          goto LABEL_7;
        case 2:
          uint64_t v32 = v13;
          char v18 = 2;
LABEL_7:
          char v37 = v18;
          goto LABEL_16;
        case 3:
          uint64_t v32 = v13;
          char v37 = 3;
          goto LABEL_16;
        case 4:
          LODWORD(v32) = v13;
          char v37 = 4;
          goto LABEL_16;
        case 5:
          uint64_t v32 = v13;
          char v37 = 5;
          goto LABEL_16;
        case 6:
          LOBYTE(v32) = v13 & 1;
          char v37 = 6;
          goto LABEL_16;
        case 7:
          uint64_t v32 = v13;
          unint64_t v33 = v14;
          uint64_t v34 = v15;
          unint64_t v31 = v14;
          uint64_t v19 = v15;
          uint64_t v20 = v40;
          unint64_t v35 = v40;
          LOBYTE(v36) = v12 & 1;
          char v37 = 7;
          swift_unknownObjectRetain();
          sub_259FB94E4(v19, v20, v12 & 1);
          sub_25A000EE4((uint64_t)&v32, a1, v7, a4, a5);
          sub_259FAED74((uint64_t)&v32);
          uint64_t v21 = v13;
          unint64_t v22 = v31;
          uint64_t v23 = v19;
          goto LABEL_17;
        case 8:
          MEMORY[0x270FA5388](v16);
          uint64_t v32 = v13;
          unint64_t v33 = v14;
          uint64_t v24 = v15;
          uint64_t v25 = v15;
          uint64_t v26 = v40;
          sub_259FE3734(v13, v14, v25, v40, v12);
          sub_25A0031A4(&v32, (void (*)(void *))sub_25A0057A4);
          swift_bridgeObjectRelease();
          return (void *)sub_259FE3748(v13, v14, v24, v26, v12);
        case 9:
          unint64_t v35 = MEMORY[0x263F06F78];
          uint64_t v36 = &protocol witness table for Data;
          uint64_t v32 = v13;
          unint64_t v33 = v14;
          char v37 = 9;
          sub_259FAE450(v13, v14);
          goto LABEL_16;
        case 10:
          MEMORY[0x270FA5388](v16);
          uint64_t ObjectType = swift_getObjectType();
          MEMORY[0x270FA5388](ObjectType);
          swift_unknownObjectRetain();
          uint64_t v28 = v15;
          uint64_t v29 = v15;
          uint64_t v30 = v40;
          sub_259FAE450(v29, v40);
          MessageSchemaDescribing.schematizing<A>(data:block:)();
          sub_259FE3748(v13, v14, v28, v30, v12);
          return (void *)sub_259FE3748(v13, v14, v28, v30, v12);
        default:
          LODWORD(v32) = v13;
          char v37 = 0;
LABEL_16:
          sub_25A000EE4((uint64_t)&v32, a1, v7, a4, a5);
          sub_259FAED74((uint64_t)&v32);
          uint64_t v21 = v13;
          unint64_t v22 = v14;
          uint64_t v23 = v15;
LABEL_17:
          uint64_t result = (void *)sub_259FE3748(v21, v22, v23, v40, v12);
          break;
      }
    }
  }
  return result;
}

void *sub_25A000EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a5 + 56))(&v14, a4, a5);
  if (!v5)
  {
    uint64_t v10 = v14;
    uint64_t v11 = v15;
    v13[0] = v14;
    v13[1] = v15;
    int v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 48))(a4, a5);
    sub_259FBAABC(a1, v13, v12);
    return (void *)sub_259FAD1BC(v10, v11);
  }
  return result;
}

uint64_t sub_25A000FB8(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  void (*v107)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  void v118[2];
  char v119;
  uint64_t v120[3];
  uint64_t v121;
  uint64_t v122;
  void *v123;
  char *v124;
  uint64_t v125;
  _UNKNOWN **v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  unint64_t v130;
  _UNKNOWN **v131;
  char v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unsigned __int16 v137;
  uint64_t v138;

  uint64_t v8 = v6;
  uint64_t v138 = *MEMORY[0x263EF8340];
  uint64_t v14 = *a2;
  unint64_t v15 = a2[1];
  uint64_t result = a3(&v133, v8, a6);
  if (v7) {
    return result;
  }
  uint64_t v116 = 0;
  long long v113 = v15;
  uint64_t v112 = v14;
  if (HIBYTE(v137) > 0xFEu) {
    return result;
  }
  uint64_t v107 = (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))a3;
  uint64_t v108 = a4;
  LODWORD(v109) = v137;
  uint64_t v18 = v133;
  unint64_t v17 = v134;
  uint64_t v19 = v136;
  long long v114 = v135;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 48))(a5, a6);
  char v115 = v18;
  uint64_t v110 = v17;
  uint64_t v105 = a6;
  uint64_t v111 = v19;
  uint64_t v106 = v8;
  if (v113 >> 62)
  {
    if (v113 >> 62 != 1)
    {
      switch(v112)
      {
        case 3:
        case 4:
        case 11:
          int v20 = 5;
          goto LABEL_8;
        case 8:
        case 9:
        case 10:
          int v20 = 1;
          goto LABEL_8;
        case 13:
        case 14:
          break;
        default:
          goto LABEL_10;
      }
    }
    int v20 = 2;
LABEL_8:
    uint64_t v21 = v20 | (8 * result);
  }
  else
  {
LABEL_10:
    uint64_t v21 = (8 * result);
  }
  unint64_t v104 = v21;
  unsigned __int16 v22 = v109;
  while (2)
  {
    uint64_t v23 = MEMORY[0x270FA5388](result);
    v103[-4] = a1;
    LODWORD(v103[-3]) = v21;
    unint64_t v24 = v113;
    v103[-2] = v112;
    v103[-1] = v24;
    uint64_t v25 = MEMORY[0x270FA5388](v23);
    v103[-2] = sub_25A005604;
    v103[-1] = v26;
    unint64_t v109 = v27;
    switch(v28)
    {
      case 1:
        LODWORD(v127) = v115;
        uint64_t v132 = 1;
        unint64_t v29 = v104;
        if (v21 >= 0x80)
        {
          do
          {
            uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D78);
            char v125 = v32;
            uint64_t v126 = (_UNKNOWN **)sub_259FB3DA8(&qword_26A402D80, &qword_26A402D78);
            LOBYTE(v123) = v29 | 0x80;
            LOBYTE(v120[0]) = *(unsigned char *)__swift_project_boxed_opaque_existential_1(&v123, v32);
            sub_25A00E320();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
            unint64_t v33 = v29 >> 14;
            v29 >>= 7;
          }
          while (v33);
        }
        goto LABEL_41;
      case 2:
        long long v127 = v115;
        uint64_t v132 = 2;
        if (v21 < 0x80)
        {
          LOBYTE(v36) = v104;
        }
        else
        {
          unint64_t v34 = v104;
          do
          {
            uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D78);
            char v125 = v35;
            uint64_t v126 = (_UNKNOWN **)sub_259FB3DA8(&qword_26A402D80, &qword_26A402D78);
            LOBYTE(v123) = v34 | 0x80;
            LOBYTE(v120[0]) = *(unsigned char *)__swift_project_boxed_opaque_existential_1(&v123, v35);
            sub_25A00E320();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
            unint64_t v36 = v34 >> 7;
            unint64_t v37 = v34 >> 14;
            v34 >>= 7;
          }
          while (v37);
        }
        goto LABEL_75;
      case 3:
        long long v127 = v115;
        uint64_t v132 = 3;
        if (v21 < 0x80)
        {
          LOBYTE(v36) = v104;
        }
        else
        {
          unint64_t v38 = v104;
          do
          {
            uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D78);
            char v125 = v39;
            uint64_t v126 = (_UNKNOWN **)sub_259FB3DA8(&qword_26A402D80, &qword_26A402D78);
            LOBYTE(v123) = v38 | 0x80;
            LOBYTE(v120[0]) = *(unsigned char *)__swift_project_boxed_opaque_existential_1(&v123, v39);
            sub_25A00E320();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
            unint64_t v36 = v38 >> 7;
            unint64_t v40 = v38 >> 14;
            v38 >>= 7;
          }
          while (v40);
        }
LABEL_75:
        uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D78);
        char v125 = v89;
        uint64_t v126 = (_UNKNOWN **)sub_259FB3DA8(&qword_26A402D80, &qword_26A402D78);
        LOBYTE(v123) = v36;
        LOBYTE(v120[0]) = *(unsigned char *)__swift_project_boxed_opaque_existential_1(&v123, v89);
        sub_25A00E320();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
        uint64_t v123 = (void *)v112;
        char v124 = (char *)v113;
        uint64_t v92 = v116;
        goto LABEL_80;
      case 4:
        LODWORD(v127) = v115;
        uint64_t v132 = 4;
        unint64_t v29 = v104;
        if (v21 >= 0x80)
        {
          do
          {
            uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D78);
            char v125 = v41;
            uint64_t v126 = (_UNKNOWN **)sub_259FB3DA8(&qword_26A402D80, &qword_26A402D78);
            LOBYTE(v123) = v29 | 0x80;
            LOBYTE(v120[0]) = *(unsigned char *)__swift_project_boxed_opaque_existential_1(&v123, v41);
            sub_25A00E320();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
            unint64_t v42 = v29 >> 14;
            v29 >>= 7;
          }
          while (v42);
        }
        goto LABEL_41;
      case 5:
        long long v127 = v115;
        uint64_t v132 = 5;
        unint64_t v29 = v104;
        if (v21 >= 0x80)
        {
          do
          {
            uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D78);
            char v125 = v43;
            uint64_t v126 = (_UNKNOWN **)sub_259FB3DA8(&qword_26A402D80, &qword_26A402D78);
            LOBYTE(v123) = v29 | 0x80;
            LOBYTE(v120[0]) = *(unsigned char *)__swift_project_boxed_opaque_existential_1(&v123, v43);
            sub_25A00E320();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
            unint64_t v44 = v29 >> 14;
            v29 >>= 7;
          }
          while (v44);
        }
        goto LABEL_41;
      case 6:
        LOBYTE(v127) = v115 & 1;
        uint64_t v132 = 6;
        unint64_t v29 = v104;
        if (v21 >= 0x80)
        {
          do
          {
            uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D78);
            char v125 = v45;
            uint64_t v126 = (_UNKNOWN **)sub_259FB3DA8(&qword_26A402D80, &qword_26A402D78);
            LOBYTE(v123) = v29 | 0x80;
            LOBYTE(v120[0]) = *(unsigned char *)__swift_project_boxed_opaque_existential_1(&v123, v45);
            sub_25A00E320();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
            unint64_t v46 = v29 >> 14;
            v29 >>= 7;
          }
          while (v46);
        }
        goto LABEL_41;
      case 7:
        uint64_t v49 = v115;
        unint64_t v50 = v110;
        long long v127 = v115;
        unsigned __int8 v128 = v110;
        uint64_t v51 = v114;
        uint64_t v129 = v114;
        uint64_t v52 = v111;
        long long v130 = v111;
        LOBYTE(v131) = v22 & 1;
        uint64_t v132 = 7;
        sub_259FE3734(v115, v110, v114, v111, v22);
        sub_259FDF0B0(v49, v50, v51, v52, v22, 7);
        unint64_t v53 = v104;
        if (v21 >= 0x80)
        {
          do
          {
            uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D78);
            char v125 = v55;
            uint64_t v126 = (_UNKNOWN **)sub_259FB3DA8(&qword_26A402D80, &qword_26A402D78);
            LOBYTE(v123) = v53 | 0x80;
            LOBYTE(v120[0]) = *(unsigned char *)__swift_project_boxed_opaque_existential_1(&v123, v55);
            sub_25A00E320();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
            unint64_t v56 = v53 >> 14;
            v53 >>= 7;
          }
          while (v56);
        }
        uint64_t v54 = v116;
        uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D78);
        char v125 = v90;
        uint64_t v126 = (_UNKNOWN **)sub_259FB3DA8(&qword_26A402D80, &qword_26A402D78);
        LOBYTE(v123) = v53;
        LOBYTE(v120[0]) = *(unsigned char *)__swift_project_boxed_opaque_existential_1(&v123, v90);
        sub_25A00E320();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
        uint64_t v123 = (void *)v112;
        char v124 = (char *)v113;
        uint64_t v48 = v54;
        goto LABEL_42;
      case 8:
        uint64_t v57 = v115;
        unint64_t v58 = v110;
        sub_259FE3734(v115, v110, v114, v111, v22);
        swift_bridgeObjectRetain();
        unint64_t v59 = v58;
        uint64_t v60 = v57;
        if ((v58 & 0x1000000000000000) != 0)
        {
          uint64_t v60 = sub_25A0032C4();
          unint64_t v59 = v102;
          sub_259FE3748(v57, v58, v114, v111, v22);
        }
        v103[1] = v59;
        if ((v59 & 0x2000000000000000) != 0)
        {
          v118[0] = v60;
          v118[1] = v59 & 0xFFFFFFFFFFFFFFLL;
          char v125 = MEMORY[0x263F8D3E8];
          uint64_t v126 = &protocol witness table for UnsafeRawBufferPointer;
          uint64_t v123 = v118;
          char v124 = (char *)v118 + (HIBYTE(v59) & 0xF);
          sub_259FB3358((uint64_t)&v123, (uint64_t)&v127);
          uint64_t v132 = 8;
          if (v21 < 0x80)
          {
            LOBYTE(v87) = v104;
          }
          else
          {
            unint64_t v85 = v104;
            do
            {
              uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D78);
              uint64_t v121 = v86;
              char v122 = sub_259FB3DA8(&qword_26A402D80, &qword_26A402D78);
              LOBYTE(v120[0]) = v85 | 0x80;
              char v117 = *(unsigned char *)__swift_project_boxed_opaque_existential_1(v120, v86);
              sub_25A00E320();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v120);
              unint64_t v87 = v85 >> 7;
              unint64_t v88 = v85 >> 14;
              v85 >>= 7;
            }
            while (v88);
          }
          uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D78);
          uint64_t v121 = v94;
          char v122 = sub_259FB3DA8(&qword_26A402D80, &qword_26A402D78);
          LOBYTE(v120[0]) = v87;
          char v117 = *(unsigned char *)__swift_project_boxed_opaque_existential_1(v120, v94);
        }
        else
        {
          if ((v60 & 0x1000000000000000) != 0)
          {
            uint64_t v61 = (v59 & 0xFFFFFFFFFFFFFFFLL) + 32;
            uint64_t v62 = v60 & 0xFFFFFFFFFFFFLL;
          }
          else
          {
            uint64_t v61 = sub_25A00ED30();
          }
          uint64_t v63 = (char *)(v61 + v62);
          if (!v61) {
            uint64_t v63 = 0;
          }
          char v125 = MEMORY[0x263F8D3E8];
          uint64_t v126 = &protocol witness table for UnsafeRawBufferPointer;
          uint64_t v123 = (void *)v61;
          char v124 = v63;
          sub_259FB3358((uint64_t)&v123, (uint64_t)&v127);
          uint64_t v132 = 8;
          if (v21 < 0x80)
          {
            LOBYTE(v66) = v104;
          }
          else
          {
            unint64_t v64 = v104;
            do
            {
              uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D78);
              uint64_t v121 = v65;
              char v122 = sub_259FB3DA8(&qword_26A402D80, &qword_26A402D78);
              LOBYTE(v120[0]) = v64 | 0x80;
              LOBYTE(v118[0]) = *(unsigned char *)__swift_project_boxed_opaque_existential_1(v120, v65);
              sub_25A00E320();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v120);
              unint64_t v66 = v64 >> 7;
              unint64_t v67 = v64 >> 14;
              v64 >>= 7;
            }
            while (v67);
          }
          uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D78);
          uint64_t v121 = v93;
          char v122 = sub_259FB3DA8(&qword_26A402D80, &qword_26A402D78);
          LOBYTE(v120[0]) = v66;
          LOBYTE(v118[0]) = *(unsigned char *)__swift_project_boxed_opaque_existential_1(v120, v93);
        }
        sub_25A00E320();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v120);
        v120[0] = v112;
        v120[1] = v113;
        uint64_t v95 = v116;
        sub_259FBA454((uint64_t)&v127, v120);
        if (!v95)
        {
          sub_259FAED74((uint64_t)&v127);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
          swift_bridgeObjectRelease();
LABEL_84:
          sub_259FE3748(v115, v110, v114, v111, v22);
LABEL_85:
          v107(&v127, v106, v105);
          uint64_t v116 = 0;
          uint64_t v96 = v21;
          uint64_t v98 = v127;
          unint64_t v97 = v128;
          uint64_t v99 = v129;
          uint64_t v100 = v130;
          unsigned __int16 v22 = (unsigned __int16)v131;
          unsigned int v101 = (unsigned __int16)v131 >> 8;
          uint64_t result = sub_259FE3748(v133, v134, v135, v136, v137);
          char v115 = v98;
          char v133 = v98;
          uint64_t v21 = v96;
          uint64_t v110 = v97;
          v134 = v97;
          v135 = v99;
          long long v114 = v99;
          uint64_t v111 = v100;
          uint64_t v136 = v100;
          uint64_t v137 = v22;
          if (v101 > 0xFE) {
            return result;
          }
          continue;
        }
        sub_259FAED74((uint64_t)&v127);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
        swift_bridgeObjectRelease();
LABEL_94:
        sub_259FE3748(v115, v110, v114, v111, v22);
        return sub_259FE3748(v133, v134, v135, v136, v137);
      case 9:
        long long v130 = MEMORY[0x263F06F78];
        long long v131 = &protocol witness table for Data;
        uint64_t v68 = v115;
        unint64_t v69 = v110;
        long long v127 = v115;
        unsigned __int8 v128 = v110;
        uint64_t v132 = 9;
        uint64_t v70 = v114;
        uint64_t v71 = v111;
        sub_259FE3734(v115, v110, v114, v111, v22);
        sub_259FDF0B0(v68, v69, v70, v71, v22, 9);
        if (v21 < 0x80)
        {
          LOBYTE(v75) = v104;
          uint64_t v73 = v116;
        }
        else
        {
          unint64_t v72 = v104;
          uint64_t v73 = v116;
          do
          {
            uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D78);
            char v125 = v74;
            uint64_t v126 = (_UNKNOWN **)sub_259FB3DA8(&qword_26A402D80, &qword_26A402D78);
            LOBYTE(v123) = v72 | 0x80;
            LOBYTE(v120[0]) = *(unsigned char *)__swift_project_boxed_opaque_existential_1(&v123, v74);
            sub_25A00E320();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
            unint64_t v75 = v72 >> 7;
            unint64_t v76 = v72 >> 14;
            v72 >>= 7;
          }
          while (v76);
        }
        uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D78);
        char v125 = v91;
        uint64_t v126 = (_UNKNOWN **)sub_259FB3DA8(&qword_26A402D80, &qword_26A402D78);
        LOBYTE(v123) = v75;
        LOBYTE(v120[0]) = *(unsigned char *)__swift_project_boxed_opaque_existential_1(&v123, v91);
        sub_25A00E320();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
        uint64_t v123 = (void *)v112;
        char v124 = (char *)v113;
        uint64_t v92 = v73;
LABEL_80:
        sub_259FBA454((uint64_t)&v127, (uint64_t *)&v123);
        if (v92)
        {
          sub_259FAED74((uint64_t)&v127);
          goto LABEL_94;
        }
        char v119 = 0;
        sub_259FAED74((uint64_t)&v127);
        goto LABEL_84;
      case 10:
        MEMORY[0x270FA5388](v25);
        uint64_t v116 = v77;
        v103[-2] = sub_25A005668;
        v103[-1] = v78;
        uint64_t v79 = v115;
        uint64_t ObjectType = swift_getObjectType();
        MEMORY[0x270FA5388](ObjectType);
        v103[-2] = sub_25A005718;
        v103[-1] = &v103[-4];
        swift_unknownObjectRetain();
        uint64_t v81 = v114;
        unint64_t v82 = v111;
        sub_259FAE450(v114, v111);
        swift_unknownObjectRetain();
        sub_259FAE450(v81, v82);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A403078);
        unint64_t v83 = v110;
        uint64_t v84 = v116;
        MessageSchemaDescribing.schematizing<A>(data:block:)();
        if (v84)
        {
          sub_259FE3748(v79, v83, v81, v82, v22);
          sub_259FE3748(v79, v83, v81, v82, v22);
          return sub_259FE3748(v133, v134, v135, v136, v137);
        }
        sub_259FE3748(v79, v83, v81, v82, v22);
        sub_259FE3748(v79, v83, v81, v82, v22);
        goto LABEL_85;
      default:
        LODWORD(v127) = v115;
        uint64_t v132 = 0;
        unint64_t v29 = v104;
        if (v21 >= 0x80)
        {
          do
          {
            uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D78);
            char v125 = v30;
            uint64_t v126 = (_UNKNOWN **)sub_259FB3DA8(&qword_26A402D80, &qword_26A402D78);
            LOBYTE(v123) = v29 | 0x80;
            LOBYTE(v120[0]) = *(unsigned char *)__swift_project_boxed_opaque_existential_1(&v123, v30);
            sub_25A00E320();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
            unint64_t v31 = v29 >> 14;
            v29 >>= 7;
          }
          while (v31);
        }
LABEL_41:
        uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D78);
        char v125 = v47;
        uint64_t v126 = (_UNKNOWN **)sub_259FB3DA8(&qword_26A402D80, &qword_26A402D78);
        LOBYTE(v123) = v29;
        LOBYTE(v120[0]) = *(unsigned char *)__swift_project_boxed_opaque_existential_1(&v123, v47);
        sub_25A00E320();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
        uint64_t v123 = (void *)v112;
        char v124 = (char *)v113;
        uint64_t v48 = v116;
LABEL_42:
        sub_259FBA454((uint64_t)&v127, (uint64_t *)&v123);
        if (v48)
        {
          sub_259FAED74((uint64_t)&v127);
          sub_259FE3748(v115, v110, v114, v111, v22);
          return sub_259FE3748(v133, v134, v135, v136, v137);
        }
        char v119 = 0;
        sub_259FAED74((uint64_t)&v127);
        sub_259FE3748(v115, v110, v114, v111, v22);
        goto LABEL_85;
    }
  }
}

void *sub_25A0029E0(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  void (*v49)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[2];
  uint64_t *v53;
  char *v54;
  uint64_t v55;
  _UNKNOWN **v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  _UNKNOWN **v63;
  char v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  unsigned __int16 v71;
  uint64_t v72;

  uint64_t v8 = v6;
  uint64_t v14 = *a2;
  uint64_t v15 = a2[1];
  uint64_t result = ((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))a3)(&v67, v8, a6);
  if (!v7)
  {
    uint64_t v51 = v15;
    unint64_t v72 = v14;
    __int16 v17 = v71;
    if (HIBYTE(v71) <= 0xFEu)
    {
      uint64_t v49 = a3;
      unint64_t v50 = a4;
      uint64_t v46 = a1;
      uint64_t v18 = v67;
      unint64_t v19 = v68;
      uint64_t v20 = a6;
      uint64_t v21 = v69;
      uint64_t v47 = v70;
      sub_25A00E2B0();
      swift_allocObject();
      uint64_t v65 = 0;
      unint64_t v66 = sub_25A00E2A0() | 0x4000000000000000;
      uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 48))(a5, v20);
      unint64_t v23 = (unint64_t)v47;
      uint64_t v48 = v20;
      uint64_t v42 = 8 * v22;
      uint64_t v43 = MEMORY[0x263F8EE60] + 8;
      uint64_t v45 = v8;
      while (2)
      {
        uint64_t v24 = MEMORY[0x270FA5388](v22);
        *(&v41 - 4) = (uint64_t)&v65;
        uint64_t v25 = v72;
        uint64_t v26 = (char *)v51;
        *(&v41 - 3) = v72;
        *(&v41 - 2) = (uint64_t)v26;
        switch(v27)
        {
          case 1:
            LODWORD(v59) = v18;
            char v28 = 1;
            goto LABEL_12;
          case 2:
            unint64_t v59 = v18;
            char v28 = 2;
            goto LABEL_12;
          case 3:
            unint64_t v59 = v18;
            char v28 = 3;
            goto LABEL_12;
          case 4:
            LODWORD(v59) = v18;
            char v28 = 4;
            goto LABEL_12;
          case 5:
            unint64_t v59 = v18;
            char v28 = 5;
            goto LABEL_12;
          case 6:
            LOBYTE(v59) = v18 & 1;
            char v28 = 6;
LABEL_12:
            unint64_t v64 = v28;
            goto LABEL_13;
          case 7:
            unint64_t v59 = v18;
            uint64_t v60 = v19;
            uint64_t v61 = v21;
            uint64_t v62 = v23;
            LOBYTE(v63) = v17 & 1;
            unint64_t v64 = 7;
            unint64_t v53 = (uint64_t *)v25;
            uint64_t v54 = v26;
            sub_259FE3734(v18, v19, v21, v23, v17);
            swift_unknownObjectRetain();
            sub_259FB94E4(v21, v23, v17 & 1);
            goto LABEL_14;
          case 8:
            sub_259FE3734(v18, v19, v21, v23, v17);
            swift_bridgeObjectRetain();
            unint64_t v31 = v19;
            uint64_t v32 = v18;
            if ((v19 & 0x1000000000000000) != 0)
            {
              uint64_t v32 = sub_25A0032C4();
              unint64_t v31 = v38;
              sub_259FE3748(v18, v19, v21, v23, v17);
              if ((v31 & 0x2000000000000000) != 0)
              {
LABEL_29:
                uint64_t v57 = v32;
                unint64_t v58 = v31 & 0xFFFFFFFFFFFFFFLL;
                uint64_t v55 = MEMORY[0x263F8D3E8];
                unint64_t v56 = &protocol witness table for UnsafeRawBufferPointer;
                unint64_t v53 = &v57;
                uint64_t v54 = (char *)&v57 + (HIBYTE(v31) & 0xF);
                sub_259FB3358((uint64_t)&v53, (uint64_t)&v59);
                unint64_t v64 = 8;
                v52[0] = v72;
                v52[1] = v51;
                sub_259FBA454((uint64_t)&v59, v52);
                sub_259FAED74((uint64_t)&v59);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
                swift_bridgeObjectRelease();
                sub_259FE3748(v18, v19, v21, v23, v17);
LABEL_30:
                uint64_t v8 = v45;
                goto LABEL_16;
              }
            }
            else if ((v19 & 0x2000000000000000) != 0)
            {
              goto LABEL_29;
            }
            uint64_t v47 = (uint64_t *)v31;
            if ((v32 & 0x1000000000000000) != 0)
            {
              uint64_t v33 = (v31 & 0xFFFFFFFFFFFFFFFLL) + 32;
              uint64_t v34 = v32 & 0xFFFFFFFFFFFFLL;
            }
            else
            {
              uint64_t v33 = sub_25A00ED30();
            }
            uint64_t v35 = (char *)(v33 + v34);
            if (!v33) {
              uint64_t v35 = 0;
            }
            uint64_t v55 = MEMORY[0x263F8D3E8];
            unint64_t v56 = &protocol witness table for UnsafeRawBufferPointer;
            unint64_t v53 = (uint64_t *)v33;
            uint64_t v54 = v35;
            sub_259FB3358((uint64_t)&v53, (uint64_t)&v59);
            unint64_t v64 = 8;
            uint64_t v57 = v72;
            unint64_t v58 = v51;
            sub_259FBA454((uint64_t)&v59, &v57);
            uint64_t v8 = v45;
            sub_259FAED74((uint64_t)&v59);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
            swift_bridgeObjectRelease();
LABEL_15:
            sub_259FE3748(v18, v19, v21, v23, v17);
LABEL_16:
            v49(&v59, v8, v48);
            uint64_t v18 = v59;
            unint64_t v19 = v60;
            uint64_t v21 = v61;
            uint64_t v29 = v62;
            __int16 v17 = (__int16)v63;
            unsigned int v30 = (unsigned __int16)v63 >> 8;
            uint64_t v22 = sub_259FE3748(v67, v68, v69, (uint64_t)v70, v71);
            unint64_t v67 = v18;
            uint64_t v68 = v19;
            unint64_t v69 = v21;
            uint64_t v70 = (uint64_t *)v29;
            unint64_t v23 = v29;
            uint64_t v71 = v17;
            if (v30 < 0xFF) {
              continue;
            }
            sub_259FB37C8(v42 & 0xFFFFFFF8 | 2);
            uint64_t v39 = v65;
            unint64_t v40 = v66;
            sub_259FAE450(v65, v66);
            sub_25A005290(v39, v40);
            sub_259FAE4A8(v39, v40);
            uint64_t result = (void *)sub_259FAE4A8(v39, v40);
            break;
          case 9:
            uint64_t v62 = MEMORY[0x263F06F78];
            uint64_t v63 = &protocol witness table for Data;
            unint64_t v59 = v18;
            uint64_t v60 = v19;
            unint64_t v64 = 9;
            unint64_t v53 = (uint64_t *)v25;
            uint64_t v54 = v26;
            sub_259FE3734(v18, v19, v21, v23, v17);
            sub_259FAE450(v18, v19);
            goto LABEL_14;
          case 10:
            uint64_t v47 = &v41;
            unint64_t v44 = &v41;
            MEMORY[0x270FA5388](v24);
            *(&v41 - 2) = (uint64_t)sub_25A003894;
            *(&v41 - 1) = v36;
            uint64_t ObjectType = swift_getObjectType();
            MEMORY[0x270FA5388](ObjectType);
            *(&v41 - 2) = (uint64_t)sub_25A0055CC;
            *(&v41 - 1) = (uint64_t)(&v41 - 4);
            swift_unknownObjectRetain();
            sub_259FAE450(v21, v23);
            swift_unknownObjectRetain();
            sub_259FAE450(v21, v23);
            MessageSchemaDescribing.schematizing<A>(data:block:)();
            sub_259FE3748(v18, v19, v21, v23, v17);
            sub_259FE3748(v18, v19, v21, v23, v17);
            goto LABEL_30;
          default:
            LODWORD(v59) = v18;
            unint64_t v64 = 0;
LABEL_13:
            unint64_t v53 = (uint64_t *)v25;
            uint64_t v54 = v26;
LABEL_14:
            sub_259FBA454((uint64_t)&v59, (uint64_t *)&v53);
            sub_259FAED74((uint64_t)&v59);
            goto LABEL_15;
        }
        break;
      }
    }
  }
  return result;
}

uint64_t sub_25A0031A4(uint64_t *a1, void (*a2)(void *))
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  if ((v4 & 0x1000000000000000) != 0)
  {
    uint64_t v3 = sub_25A0032C4();
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    *a1 = v3;
    a1[1] = v10;
    unint64_t v4 = v10;
    if ((v10 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_9:
    v15[0] = v3;
    v15[1] = v4 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (char *)v15 + (HIBYTE(v4) & 0xF);
    uint64_t v13 = MEMORY[0x263F8D3E8];
    uint64_t v14 = &protocol witness table for UnsafeRawBufferPointer;
    v12[0] = v15;
    goto LABEL_10;
  }
  if ((v4 & 0x2000000000000000) != 0) {
    goto LABEL_9;
  }
LABEL_3:
  if ((v3 & 0x1000000000000000) != 0)
  {
    uint64_t v5 = (v4 & 0xFFFFFFFFFFFFFFFLL) + 32;
    uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v5 = sub_25A00ED30();
  }
  uint64_t v7 = (char *)(v5 + v6);
  if (!v5) {
    uint64_t v7 = 0;
  }
  uint64_t v13 = MEMORY[0x263F8D3E8];
  uint64_t v14 = &protocol witness table for UnsafeRawBufferPointer;
  v12[0] = v5;
LABEL_10:
  v12[1] = v7;
  a2(v12);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
}

uint64_t sub_25A0032C4()
{
  unint64_t v0 = sub_25A00EB30();
  uint64_t v4 = sub_25A003344(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_25A003344(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = sub_25A00349C(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = sub_25A00359C(v9, 0);
      unint64_t v12 = sub_25A003604((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_25A00ED30();
LABEL_4:
        JUMPOUT(0x25A2F2160);
      }
    }
    else
    {
      uint64_t v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x25A2F2160](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x25A2F2160]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_25A00349C(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    uint64_t result = sub_25A003818(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    uint64_t result = sub_25A003818(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  return sub_25A00EAC0();
}

void *sub_25A00359C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402F38);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  _OWORD v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

unint64_t sub_25A003604(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    uint64_t v9[2] = a6;
    v9[3] = a7;
    uint64_t v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_25A003818(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_25A00EAD0();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_25A00ED30();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_25A003818(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_25A00EAA0();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_25A003818(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_25A00EAF0();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x25A2F21F0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_25A003894(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 24);
  return sub_259FBA454(a1, (uint64_t *)&v3);
}

uint64_t sub_25A0038D0(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v31 = v4;
  if (!v4) {
    return swift_bridgeObjectRelease_n();
  }
  unint64_t v5 = 0;
  for (unint64_t i = (uint64_t *)(a1 + 40); ; i += 7)
  {
    if (v5 >= *(void *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_25A00EF00();
      __break(1u);
      goto LABEL_24;
    }
    uint64_t v8 = i[4];
    unint64_t v7 = i[5];
    uint64_t v9 = i[2];
    uint64_t v10 = i[3];
    uint64_t v12 = *i;
    uint64_t v11 = i[1];
    uint64_t v13 = *(i - 1);
    swift_bridgeObjectRetain();
    sub_259FB2B48(v11, v9, v10, v8, v7);
    if (!v12) {
      return swift_bridgeObjectRelease_n();
    }
    uint64_t v33 = v10;
    uint64_t v34 = v8;
    unint64_t v35 = v7;
    uint64_t v14 = (void *)*a3;
    unint64_t v16 = sub_259FE120C(v13, v12);
    uint64_t v17 = v14[2];
    BOOL v18 = (v15 & 1) == 0;
    uint64_t v19 = v17 + v18;
    if (__OFADD__(v17, v18)) {
      goto LABEL_21;
    }
    char v20 = v15;
    if (v14[3] < v19) {
      break;
    }
    if (a2)
    {
      if (v15) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_259FF9BD8();
      if (v20) {
        goto LABEL_16;
      }
    }
LABEL_12:
    unint64_t v23 = (void *)*a3;
    *(void *)(*a3 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    uint64_t v24 = (uint64_t *)(v23[6] + 16 * v16);
    *uint64_t v24 = v13;
    v24[1] = v12;
    uint64_t v25 = (uint64_t *)(v23[7] + 40 * v16);
    *uint64_t v25 = v11;
    v25[1] = v9;
    _OWORD v25[2] = v33;
    v25[3] = v34;
    v25[4] = v35;
    uint64_t v26 = v23[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_22;
    }
    ++v5;
    _OWORD v23[2] = v28;
    a2 = 1;
    if (v31 == v5) {
      return swift_bridgeObjectRelease_n();
    }
  }
  sub_259FF7830(v19, a2 & 1);
  unint64_t v21 = sub_259FE120C(v13, v12);
  if ((v20 & 1) != (v22 & 1)) {
    goto LABEL_23;
  }
  unint64_t v16 = v21;
  if ((v20 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_16:
  uint64_t v29 = swift_allocError();
  swift_willThrow();
  MEMORY[0x25A2F2990](v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402CE8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_25A00042C(v11, v9, v33, v34, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x25A2F2980](v29);
  }
LABEL_24:
  sub_25A00ED10();
  sub_25A00EA80();
  sub_25A00ED90();
  sub_25A00EA80();
  uint64_t result = sub_25A00EDB0();
  __break(1u);
  return result;
}

uint64_t sub_25A003C0C(void *a1, char a2, void *a3)
{
  uint64_t v4 = a1[2];
  if (!v4) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v8 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v42 = a1[6];
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)*a3;
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_259FE120C(v8, v7);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_23;
  }
  char v15 = v10;
  if (v9[3] >= v14)
  {
    if (a2)
    {
      if (v10) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_259FFA5C4();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    char v20 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    unint64_t v21 = (uint64_t *)(v20[6] + 16 * v11);
    *unint64_t v21 = v8;
    v21[1] = v7;
    *(void *)(v20[7] + 8 * v11) = v42;
    uint64_t v22 = v20[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    long long v20[2] = v24;
    uint64_t v25 = v4 - 1;
    if (v4 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    for (unint64_t i = a1 + 9; ; i += 3)
    {
      uint64_t v28 = *(i - 2);
      uint64_t v27 = *(i - 1);
      uint64_t v29 = *i;
      unsigned int v30 = (void *)*a3;
      swift_bridgeObjectRetain();
      unint64_t v31 = sub_259FE120C(v28, v27);
      uint64_t v33 = v30[2];
      BOOL v34 = (v32 & 1) == 0;
      BOOL v23 = __OFADD__(v33, v34);
      uint64_t v35 = v33 + v34;
      if (v23) {
        break;
      }
      char v36 = v32;
      if (v30[3] < v35)
      {
        sub_259FF88F4(v35, 1);
        unint64_t v31 = sub_259FE120C(v28, v27);
        if ((v36 & 1) != (v37 & 1)) {
          goto LABEL_25;
        }
      }
      if (v36) {
        goto LABEL_10;
      }
      unint64_t v38 = (void *)*a3;
      *(void *)(*a3 + 8 * (v31 >> 6) + 64) |= 1 << v31;
      uint64_t v39 = (uint64_t *)(v38[6] + 16 * v31);
      *uint64_t v39 = v28;
      v39[1] = v27;
      *(void *)(v38[7] + 8 * v31) = v29;
      uint64_t v40 = v38[2];
      BOOL v23 = __OFADD__(v40, 1);
      uint64_t v41 = v40 + 1;
      if (v23) {
        goto LABEL_24;
      }
      v38[2] = v41;
      if (!--v25) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_259FF88F4(v14, a2 & 1);
  unint64_t v16 = sub_259FE120C(v8, v7);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v19 = swift_allocError();
    swift_willThrow();
    MEMORY[0x25A2F2990](v19);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402CE8);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return MEMORY[0x25A2F2980](v19);
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_25A00EF00();
  __break(1u);
LABEL_26:
  sub_25A00ED10();
  sub_25A00EA80();
  sub_25A00ED90();
  sub_25A00EA80();
  uint64_t result = sub_25A00EDB0();
  __break(1u);
  return result;
}

uint64_t sub_25A003F8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t result = sub_25A00E270();
  uint64_t v7 = result;
  if (result)
  {
    uint64_t result = sub_25A00E290();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v7 += a1 - result;
  }
  BOOL v8 = __OFSUB__(a2, a1);
  uint64_t v9 = a2 - a1;
  if (v8)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v10 = sub_25A00E280();
  if (v10 >= v9) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = v10;
  }
  uint64_t v12 = v7 + v11;
  if (v7) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  return a3(v7, v13);
}

uint64_t sub_25A004034(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_25A0040B8(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_25A00EE20();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v87 = 0;
      uint64_t v88 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        int v90 = *(_DWORD *)(v88 + 24 * i);
        uint64_t v91 = v87;
        do
        {
          uint64_t v92 = v88 + v91;
          if (v90 >= *(_DWORD *)(v88 + v91)) {
            break;
          }
          if (!v88) {
            goto LABEL_140;
          }
          uint64_t v93 = v88 + v91;
          long long v94 = *(_OWORD *)(v88 + v91 + 32);
          *(_OWORD *)(v88 + v91 + 24) = *(_OWORD *)v92;
          *(void *)(v88 + v91 + 40) = *(void *)(v92 + 16);
          *(_DWORD *)uint64_t v93 = v90;
          *(_OWORD *)(v93 + 8) = v94;
          v91 -= 24;
        }
        while (v91 != -24);
        v87 += 24;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v6 = result;
  unint64_t v104 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v12 = (char *)MEMORY[0x263F8EE78];
LABEL_102:
      uint64_t v95 = v12;
      uint64_t v106 = v9;
      if (v13 >= 2)
      {
        uint64_t v96 = *v104;
        do
        {
          unint64_t v97 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_131;
          }
          if (!v96) {
            goto LABEL_144;
          }
          uint64_t v98 = v95;
          uint64_t v99 = *(void *)&v95[16 * v97 + 32];
          uint64_t v100 = *(void *)&v95[16 * v13 + 24];
          sub_25A0047D8((char *)(v96 + 24 * v99), (char *)(v96 + 24 * *(void *)&v95[16 * v13 + 16]), v96 + 24 * v100, __dst);
          if (v1) {
            break;
          }
          if (v100 < v99) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v98 = sub_25A004EB4((uint64_t)v98);
          }
          if (v97 >= *((void *)v98 + 2)) {
            goto LABEL_133;
          }
          unsigned int v101 = &v98[16 * v97 + 32];
          *(void *)unsigned int v101 = v99;
          *((void *)v101 + 1) = v100;
          unint64_t v102 = *((void *)v98 + 2);
          if (v13 > v102) {
            goto LABEL_134;
          }
          memmove(&v98[16 * v13 + 16], &v98[16 * v13 + 32], 16 * (v102 - v13));
          uint64_t v95 = v98;
          *((void *)v98 + 2) = v102 - 1;
          unint64_t v13 = v102 - 1;
        }
        while (v102 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v106 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v106 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402F88);
    uint64_t v8 = sub_25A00EB90();
    *(void *)(v8 + 16) = v7;
    uint64_t v106 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v105 = *a1 + 48;
  uint64_t v103 = *a1 - 24;
  uint64_t v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v107 = v6;
  uint64_t v108 = v3;
  uint64_t v109 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      int v15 = *(_DWORD *)(v11 + 24 * v10);
      int v16 = *(_DWORD *)(v11 + 24 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        char v17 = (int *)(v105 + 24 * v14);
        int v18 = v15;
        while (1)
        {
          int v20 = *v17;
          v17 += 6;
          int v19 = v20;
          if (v15 < v16 == v20 >= v18) {
            break;
          }
          ++v10;
          int v18 = v19;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_137;
        }
        if (v14 < v10)
        {
          uint64_t v21 = 24 * v10;
          uint64_t v22 = 24 * v14;
          uint64_t v23 = v10;
          uint64_t v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11) {
                goto LABEL_143;
              }
              uint64_t v25 = v11 + v22;
              uint64_t v26 = v11 + v21;
              int v27 = *(_DWORD *)(v11 + v22);
              long long v28 = *(_OWORD *)(v11 + v22 + 8);
              long long v29 = *(_OWORD *)(v11 + v21 - 24);
              *(void *)(v25 + 16) = *(void *)(v11 + v21 - 8);
              *(_OWORD *)uint64_t v25 = v29;
              *(_DWORD *)(v26 - 24) = v27;
              *(_OWORD *)(v26 - 16) = v28;
            }
            ++v24;
            v21 -= 24;
            v22 += 24;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_135;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v30 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_138;
    }
    if (v30 >= v3) {
      uint64_t v30 = v3;
    }
    if (v30 < v14) {
      break;
    }
    if (v10 != v30)
    {
      uint64_t v31 = v103 + 24 * v10;
      do
      {
        int v32 = *(_DWORD *)(v11 + 24 * v10);
        uint64_t v33 = v14;
        uint64_t v34 = v31;
        do
        {
          if (v32 >= *(_DWORD *)v34) {
            break;
          }
          if (!v11) {
            goto LABEL_141;
          }
          long long v35 = *(_OWORD *)(v34 + 32);
          *(_OWORD *)(v34 + 24) = *(_OWORD *)v34;
          *(void *)(v34 + 40) = *(void *)(v34 + 16);
          *(_DWORD *)uint64_t v34 = v32;
          *(_OWORD *)(v34 + 8) = v35;
          v34 -= 24;
          ++v33;
        }
        while (v10 != v33);
        ++v10;
        v31 += 24;
      }
      while (v10 != v30);
      uint64_t v10 = v30;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_25A004A90(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v37 = *((void *)v12 + 2);
    unint64_t v36 = *((void *)v12 + 3);
    unint64_t v13 = v37 + 1;
    uint64_t v11 = v109;
    if (v37 >= v36 >> 1)
    {
      uint64_t v86 = sub_25A004A90((char *)(v36 > 1), v37 + 1, 1, v12);
      uint64_t v11 = v109;
      uint64_t v12 = v86;
    }
    *((void *)v12 + 2) = v13;
    unint64_t v38 = v12 + 32;
    uint64_t v39 = &v12[16 * v37 + 32];
    *(void *)uint64_t v39 = v14;
    *((void *)v39 + 1) = v10;
    if (v37)
    {
      while (1)
      {
        unint64_t v40 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v45 = &v38[16 * v13];
          uint64_t v46 = *((void *)v45 - 8);
          uint64_t v47 = *((void *)v45 - 7);
          BOOL v51 = __OFSUB__(v47, v46);
          uint64_t v48 = v47 - v46;
          if (v51) {
            goto LABEL_119;
          }
          uint64_t v50 = *((void *)v45 - 6);
          uint64_t v49 = *((void *)v45 - 5);
          BOOL v51 = __OFSUB__(v49, v50);
          uint64_t v43 = v49 - v50;
          char v44 = v51;
          if (v51) {
            goto LABEL_120;
          }
          unint64_t v52 = v13 - 2;
          unint64_t v53 = &v38[16 * v13 - 32];
          uint64_t v55 = *(void *)v53;
          uint64_t v54 = *((void *)v53 + 1);
          BOOL v51 = __OFSUB__(v54, v55);
          uint64_t v56 = v54 - v55;
          if (v51) {
            goto LABEL_122;
          }
          BOOL v51 = __OFADD__(v43, v56);
          uint64_t v57 = v43 + v56;
          if (v51) {
            goto LABEL_125;
          }
          if (v57 >= v48)
          {
            unint64_t v75 = &v38[16 * v40];
            uint64_t v77 = *(void *)v75;
            uint64_t v76 = *((void *)v75 + 1);
            BOOL v51 = __OFSUB__(v76, v77);
            uint64_t v78 = v76 - v77;
            if (v51) {
              goto LABEL_129;
            }
            BOOL v68 = v43 < v78;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v69 = *((void *)v12 + 4);
            uint64_t v70 = *((void *)v12 + 5);
            BOOL v51 = __OFSUB__(v70, v69);
            uint64_t v62 = v70 - v69;
            char v63 = v51;
            goto LABEL_77;
          }
          uint64_t v42 = *((void *)v12 + 4);
          uint64_t v41 = *((void *)v12 + 5);
          BOOL v51 = __OFSUB__(v41, v42);
          uint64_t v43 = v41 - v42;
          char v44 = v51;
        }
        if (v44) {
          goto LABEL_121;
        }
        unint64_t v52 = v13 - 2;
        unint64_t v58 = &v38[16 * v13 - 32];
        uint64_t v60 = *(void *)v58;
        uint64_t v59 = *((void *)v58 + 1);
        BOOL v61 = __OFSUB__(v59, v60);
        uint64_t v62 = v59 - v60;
        char v63 = v61;
        if (v61) {
          goto LABEL_124;
        }
        unint64_t v64 = &v38[16 * v40];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v51 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v51) {
          goto LABEL_127;
        }
        if (__OFADD__(v62, v67)) {
          goto LABEL_128;
        }
        if (v62 + v67 >= v43)
        {
          BOOL v68 = v43 < v67;
LABEL_83:
          if (v68) {
            unint64_t v40 = v52;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v63) {
          goto LABEL_123;
        }
        uint64_t v71 = &v38[16 * v40];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        BOOL v51 = __OFSUB__(v72, v73);
        uint64_t v74 = v72 - v73;
        if (v51) {
          goto LABEL_126;
        }
        if (v74 < v62) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v79 = v40 - 1;
        if (v40 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11) {
          goto LABEL_142;
        }
        uint64_t v80 = v12;
        uint64_t v81 = &v38[16 * v79];
        uint64_t v82 = *(void *)v81;
        unint64_t v83 = &v38[16 * v40];
        uint64_t v84 = *((void *)v83 + 1);
        sub_25A0047D8((char *)(v11 + 24 * *(void *)v81), (char *)(v11 + 24 * *(void *)v83), v11 + 24 * v84, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v84 < v82) {
          goto LABEL_116;
        }
        if (v40 > *((void *)v80 + 2)) {
          goto LABEL_117;
        }
        *(void *)uint64_t v81 = v82;
        *(void *)&v38[16 * v79 + 8] = v84;
        unint64_t v85 = *((void *)v80 + 2);
        if (v40 >= v85) {
          goto LABEL_118;
        }
        uint64_t v12 = v80;
        unint64_t v13 = v85 - 1;
        memmove(&v38[16 * v40], v83 + 16, 16 * (v85 - 1 - v40));
        *((void *)v80 + 2) = v85 - 1;
        uint64_t v11 = v109;
        if (v85 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v107;
    uint64_t v3 = v108;
    if (v10 >= v108)
    {
      uint64_t v9 = v106;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_25A00EDA0();
  __break(1u);
  return result;
}

uint64_t sub_25A0047D8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  uint64_t v26 = __src;
  uint64_t v25 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      if (__dst != a2 || &a2[24 * v11] <= __dst) {
        memmove(__dst, a2, 24 * v11);
      }
      int v16 = &v4[24 * v11];
      uint64_t v24 = v16;
      uint64_t v26 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        unint64_t v17 = a3 - 24;
        int v18 = v6;
        while (1)
        {
          int v19 = (char *)(v17 + 24);
          int v20 = *((_DWORD *)v18 - 6);
          v18 -= 24;
          if (*((_DWORD *)v16 - 6) >= v20)
          {
            uint64_t v24 = v16 - 24;
            if (v19 < v16 || v17 >= (unint64_t)v16 || v19 != v16)
            {
              long long v22 = *(_OWORD *)(v16 - 24);
              *(void *)(v17 + 16) = *((void *)v16 - 1);
              *(_OWORD *)unint64_t v17 = v22;
            }
            int v18 = v6;
            v16 -= 24;
            if (v6 <= v7) {
              goto LABEL_38;
            }
          }
          else
          {
            if (v19 != v6 || v17 >= (unint64_t)v6)
            {
              long long v21 = *(_OWORD *)v18;
              *(void *)(v17 + 16) = *((void *)v18 + 2);
              *(_OWORD *)unint64_t v17 = v21;
            }
            uint64_t v26 = v18;
            if (v18 <= v7) {
              goto LABEL_38;
            }
          }
          v17 -= 24;
          uint64_t v6 = v18;
          if (v16 <= v4) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_38;
    }
  }
  else if (v8 >= -23)
  {
    if (__dst != __src || &__src[24 * v9] <= __dst) {
      memmove(__dst, __src, 24 * v9);
    }
    uint64_t v12 = &v4[24 * v9];
    uint64_t v24 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      do
      {
        if (*(_DWORD *)v6 >= *(_DWORD *)v4)
        {
          if (v7 != v4)
          {
            long long v15 = *(_OWORD *)v4;
            *((void *)v7 + 2) = *((void *)v4 + 2);
            *(_OWORD *)uint64_t v7 = v15;
          }
          v4 += 24;
          uint64_t v25 = v4;
          unint64_t v13 = v6;
        }
        else
        {
          unint64_t v13 = v6 + 24;
          if (v7 < v6 || v7 >= v13 || v7 != v6)
          {
            long long v14 = *(_OWORD *)v6;
            *((void *)v7 + 2) = *((void *)v6 + 2);
            *(_OWORD *)uint64_t v7 = v14;
          }
        }
        v7 += 24;
        if (v4 >= v12) {
          break;
        }
        uint64_t v6 = v13;
      }
      while ((unint64_t)v13 < a3);
      uint64_t v26 = v7;
    }
LABEL_38:
    sub_25A004D14((void **)&v26, (const void **)&v25, &v24);
    return 1;
  }
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

char *sub_25A004A90(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A403080);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  long long v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_25A004B8C(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_25A00EDF0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_25A004C48(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -80)
  {
    uint64_t result = (char *)sub_25A00EDF0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 80;
    if (result != v3 || result >= &v3[80 * v6])
    {
      return (char *)memmove(result, v3, 80 * v6);
    }
  }
  return result;
}

char *sub_25A004D14(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    uint64_t result = (char *)sub_25A00EDF0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
    {
      return (char *)memmove(result, v3, 24 * v6);
    }
  }
  return result;
}

char *sub_25A004DE4(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -48)
  {
    uint64_t result = (char *)sub_25A00EDF0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 48;
    if (result != v3 || result >= &v3[48 * v6])
    {
      return (char *)memmove(result, v3, 48 * v6);
    }
  }
  return result;
}

char *sub_25A004EB4(uint64_t a1)
{
  return sub_25A004A90(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_25A004EC8(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D00);
  uint64_t result = sub_25A00EDC0();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = result + 64;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    int v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    int v19 = (unsigned __int8 *)(*(void *)(a1 + 56) + (i << 6));
    uint64_t v20 = *v19;
    uint64_t v21 = *((void *)v19 + 1);
    uint64_t v22 = v19[40];
    uint64_t v23 = *((void *)v19 + 6);
    unint64_t v24 = *((void *)v19 + 7);
    unint64_t v25 = v19[32] | ((unint64_t)*((unsigned int *)v19 + 9) << 32);
    uint64_t result = v3[6];
    uint64_t v26 = (void *)(result + 16 * i);
    long long v27 = *((_OWORD *)v19 + 1);
    *(void *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    void *v26 = v17;
    v26[1] = v18;
    unint64_t v28 = v3[7] + (i << 6);
    *(void *)unint64_t v28 = v20;
    *(void *)(v28 + 8) = v21;
    *(_OWORD *)(v28 + 16) = v27;
    *(void *)(v28 + 32) = v25;
    *(void *)(v28 + 40) = v22;
    *(void *)(v28 + 48) = v23;
    *(void *)(v28 + 56) = v24;
    uint64_t v29 = v3[2];
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (v30)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_259FAF3C4(v23, v24);
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v9) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v9) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v9) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_25A0050CC(uint64_t a1)
{
  return sub_259FE176C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_25A0050E0(void *a1)
{
  return sub_259FE1A84(0, a1[2], 0, a1);
}

uint64_t sub_25A0050F4(void *a1)
{
  return sub_259FE1DB4(0, a1[2], 0, a1);
}

uint64_t sub_25A005108(void *a1)
{
  return sub_259FE26DC(0, a1[2], 0, a1);
}

uint64_t sub_25A00511C(void *a1)
{
  return sub_259FE2884(0, a1[2], 0, a1);
}

uint64_t sub_25A005130(void *a1)
{
  return sub_259FE2A2C(0, a1[2], 0, a1);
}

uint64_t sub_25A005148(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  int64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_25A0051D0(uint64_t a1, uint64_t a2)
{
  if (a1) {
    unint64_t v3 = a2 - a1;
  }
  else {
    unint64_t v3 = 0;
  }
  sub_259FB37C8(v3);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D68);
  uint64_t v7 = sub_259FB3DA8(&qword_26A402D70, &qword_26A402D68);
  v5[0] = a1;
  v5[1] = v3;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  sub_25A00E330();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

uint64_t sub_25A005290(uint64_t a1, unint64_t a2)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
      }
      unint64_t v5 = HIDWORD(a1) - (int)a1;
      sub_259FAE450(a1, a2);
      uint64_t v6 = sub_259FB37C8(v5);
      MEMORY[0x270FA5388](v6);
      if (a1 >> 32 < (int)a1) {
        goto LABEL_13;
      }
      swift_retain();
      sub_25A003F8C((int)a1, a1 >> 32, sub_259FBB444);
      sub_259FAE4A8(a1, a2);
      return sub_259FAE4A8(a1, a2);
    case 2uLL:
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v7 = *(void *)(a1 + 24);
      unint64_t v9 = v7 - v8;
      if (__OFSUB__(v7, v8)) {
        goto LABEL_12;
      }
      sub_259FAE450(a1, a2);
      uint64_t v10 = sub_259FB37C8(v9);
      MEMORY[0x270FA5388](v10);
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      sub_25A003F8C(v11, v12, sub_259FBB444);
      swift_release();
      swift_release();
      return sub_259FAE4A8(a1, a2);
    case 3uLL:
      sub_259FB37C8(0);
      memset(v14, 0, 14);
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D68);
      uint64_t v18 = sub_259FB3DA8(&qword_26A402D70, &qword_26A402D68);
      int64_t v15 = v14;
      uint64_t v16 = 0;
      uint64_t v4 = v17;
      goto LABEL_9;
    default:
      sub_259FB37C8(BYTE6(a2));
      v14[0] = a1;
      LOWORD(v14[1]) = a2;
      BYTE2(v14[1]) = BYTE2(a2);
      BYTE3(v14[1]) = BYTE3(a2);
      BYTE4(v14[1]) = BYTE4(a2);
      BYTE5(v14[1]) = BYTE5(a2);
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A402D68);
      uint64_t v18 = sub_259FB3DA8(&qword_26A402D70, &qword_26A402D68);
      int64_t v15 = v14;
      uint64_t v16 = BYTE6(a2);
      uint64_t v4 = v17;
LABEL_9:
      __swift_project_boxed_opaque_existential_1(&v15, v4);
      sub_25A00E330();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v15);
      return sub_259FAE4A8(a1, a2);
  }
}

uint64_t sub_25A0055CC(_OWORD *a1)
{
  return sub_259FEC6E0(a1, *(void (**)(_OWORD *))(v1 + 16));
}

uint64_t sub_25A0055E8(_OWORD *a1)
{
  return sub_259FDA250(a1, *(uint64_t (**)(_OWORD *))(v1 + 16));
}

uint64_t sub_25A005604(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  sub_259FB37C8(*(unsigned int *)(v1 + 24));
  v6[0] = v3;
  v6[1] = v4;
  return sub_259FBA454(a1, v6);
}

uint64_t sub_25A005668@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2) {
    *a1 = 0;
  }
  return result;
}

uint64_t sub_25A00569C@<X0>(_OWORD *a1@<X0>, void (*a2)(uint64_t *__return_ptr, _OWORD *)@<X1>, unsigned char *a3@<X8>)
{
  long long v6 = a1[1];
  v8[0] = *a1;
  v8[1] = v6;
  char v9 = 10;
  swift_unknownObjectRetain();
  a2(&v10, v8);
  uint64_t result = sub_259FAED74((uint64_t)v8);
  if (!v3) {
    *a3 = v10;
  }
  return result;
}

uint64_t sub_25A005718@<X0>(_OWORD *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_25A00569C(a1, *(void (**)(uint64_t *__return_ptr, _OWORD *))(v2 + 16), a2);
}

void *sub_25A005734@<X0>(_OWORD *a1@<X0>, unsigned char *a2@<X8>)
{
  void *(*v5)(uint64_t *__return_ptr, _OWORD *);
  long long v6;
  void *result;
  _OWORD v8[2];
  uint64_t v9;

  unint64_t v5 = *(void *(**)(uint64_t *__return_ptr, _OWORD *))(v2 + 16);
  long long v6 = a1[1];
  v8[0] = *a1;
  v8[1] = v6;
  uint64_t result = v5(&v9, v8);
  if (!v3) {
    *a2 = v9;
  }
  return result;
}

void *sub_25A005784(uint64_t a1)
{
  return sub_25A000EE4(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_25A0057A4(uint64_t a1)
{
  uint64_t v2 = *(void (**)(unsigned char *))(v1 + 16);
  sub_259FB3358(a1, (uint64_t)v4);
  v4[40] = 8;
  v2(v4);
  return sub_259FAED74((uint64_t)v4);
}

unint64_t sub_25A005810(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v8 = (void *)*a4;
  unint64_t v10 = sub_259FE1284(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v16 = (void *)*a4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = (uint64_t *)(v16[7] + 16 * v10);
      unint64_t result = swift_unknownObjectRelease();
      *uint64_t v17 = a1;
      v17[1] = (uint64_t)&off_2707EAA28;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_259FFA1EC();
    goto LABEL_7;
  }
  sub_259FF8288(v13, a3 & 1);
  unint64_t v19 = sub_259FE1284(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_15:
    unint64_t result = sub_25A00EF00();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  uint64_t v16 = (void *)*a4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  return sub_25A005940(v10, a2, a1, v16);
}

unint64_t sub_25A005940(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(void *)(a4[6] + 8 * result) = a2;
  uint64_t v4 = (void *)(a4[7] + 16 * result);
  *uint64_t v4 = a3;
  v4[1] = &off_2707EAA28;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

uint64_t sub_25A005990(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_259FFFA04(a1, a2, a3, *(_DWORD *)(v3 + 16));
}

unint64_t sub_25A0059AC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, void *), uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (!v5) {
    return v6;
  }
  uint64_t v7 = a1;
  uint64_t v51 = MEMORY[0x263F8EE78];
  sub_259FE14C0(0, v5, 0);
  uint64_t v6 = v51;
  unint64_t result = sub_25A005148(v7);
  uint64_t v10 = 0;
  uint64_t v11 = v7 + 64;
  uint64_t v40 = v7;
  uint64_t v43 = v7 + 80;
  int64_t v37 = v5;
  int v38 = v9;
  uint64_t v39 = v7 + 64;
  while ((result & 0x8000000000000000) == 0 && (uint64_t)result < 1 << *(unsigned char *)(v7 + 32))
  {
    unint64_t v14 = result >> 6;
    if ((*(void *)(v11 + 8 * (result >> 6)) & (1 << result)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(v7 + 36) != v9) {
      goto LABEL_26;
    }
    uint64_t v46 = v10;
    uint64_t v47 = 1 << result;
    uint64_t v49 = v6;
    uint64_t v15 = (uint64_t *)(*(void *)(v7 + 48) + 16 * result);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    int64_t v48 = result;
    uint64_t v18 = (void *)(*(void *)(v7 + 56) + 40 * result);
    uint64_t v20 = v18[1];
    uint64_t v22 = v18[2];
    uint64_t v21 = v18[3];
    unint64_t v23 = v18[4];
    v50[0] = *v18;
    uint64_t v19 = v50[0];
    v50[1] = v20;
    v50[2] = v22;
    v50[3] = v21;
    v50[4] = v23;
    swift_bridgeObjectRetain();
    sub_259FB2B48(v19, v20, v22, v21, v23);
    swift_bridgeObjectRetain();
    sub_259FB2B48(v19, v20, v22, v21, v23);
    swift_bridgeObjectRelease();
    sub_25A00042C(v19, v20, v22, v21, v23);
    uint64_t v24 = v16;
    uint64_t v6 = a3;
    int v25 = a2(v24, v17, v50);
    if (v4)
    {
      swift_bridgeObjectRelease();
      sub_25A00042C(v19, v20, v22, v21, v23);
      swift_release();
      return v6;
    }
    int v28 = v25;
    uint64_t v44 = v27;
    uint64_t v45 = v26;
    swift_bridgeObjectRelease();
    unint64_t result = sub_25A00042C(v19, v20, v22, v21, v23);
    uint64_t v6 = v49;
    uint64_t v51 = v49;
    unint64_t v30 = *(void *)(v49 + 16);
    unint64_t v29 = *(void *)(v49 + 24);
    if (v30 >= v29 >> 1)
    {
      unint64_t result = sub_259FE14C0(v29 > 1, v30 + 1, 1);
      uint64_t v6 = v51;
    }
    *(void *)(v6 + 16) = v30 + 1;
    uint64_t v31 = v6 + 24 * v30;
    *(_DWORD *)(v31 + 32) = v28;
    *(void *)(v31 + 40) = v45;
    *(void *)(v31 + 48) = v44;
    uint64_t v7 = v40;
    int64_t v12 = 1 << *(unsigned char *)(v40 + 32);
    if (v48 >= v12) {
      goto LABEL_27;
    }
    uint64_t v11 = v39;
    uint64_t v32 = *(void *)(v39 + 8 * v14);
    if ((v32 & v47) == 0) {
      goto LABEL_28;
    }
    int v9 = v38;
    if (*(_DWORD *)(v40 + 36) != v38) {
      goto LABEL_29;
    }
    unint64_t v33 = v32 & (-2 << (v48 & 0x3F));
    if (v33)
    {
      int64_t v12 = __clz(__rbit64(v33)) | v48 & 0xFFFFFFFFFFFFFFC0;
      uint64_t v4 = 0;
      int64_t v13 = v37;
    }
    else
    {
      unint64_t v34 = v14 + 1;
      unint64_t v35 = (unint64_t)(v12 + 63) >> 6;
      uint64_t v4 = 0;
      int64_t v13 = v37;
      if (v14 + 1 < v35)
      {
        unint64_t v36 = *(void *)(v39 + 8 * v34);
        if (v36)
        {
LABEL_21:
          int64_t v12 = __clz(__rbit64(v36)) + (v34 << 6);
        }
        else
        {
          while (v35 - 2 != v14)
          {
            unint64_t v36 = *(void *)(v43 + 8 * v14++);
            if (v36)
            {
              unint64_t v34 = v14 + 1;
              goto LABEL_21;
            }
          }
        }
      }
    }
    uint64_t v10 = v46 + 1;
    unint64_t result = v12;
    if (v46 + 1 == v13) {
      return v6;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_25A005CEC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, void *))
{
  uint64_t v34 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v35 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  uint64_t v7 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v43 = v7;
    if (v4)
    {
      uint64_t v40 = (v4 - 1) & v4;
      int64_t v41 = v6;
      unint64_t v8 = __clz(__rbit64(v4)) | (v6 << 6);
      goto LABEL_19;
    }
    BOOL v9 = __OFADD__(v6, 1);
    int64_t v10 = v6 + 1;
    if (v9)
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v10 >= v35) {
      goto LABEL_33;
    }
    unint64_t v11 = *(void *)(v34 + 8 * v10);
    if (!v11) {
      break;
    }
LABEL_18:
    uint64_t v40 = (v11 - 1) & v11;
    int64_t v41 = v10;
    unint64_t v8 = __clz(__rbit64(v11)) + (v10 << 6);
LABEL_19:
    int64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v8);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    uint64_t v16 = (void *)(*(void *)(a1 + 56) + (v8 << 6));
    uint64_t v17 = v16[1];
    uint64_t v20 = v16[2];
    uint64_t v19 = v16[3];
    uint64_t v22 = v16[4];
    uint64_t v21 = v16[5];
    uint64_t v23 = v16[6];
    unint64_t v24 = v16[7];
    v44[0] = *v16;
    uint64_t v18 = v44[0];
    v44[1] = v17;
    void v44[2] = v20;
    v44[3] = v19;
    v44[4] = v22;
    v44[5] = v21;
    v44[6] = v23;
    v44[7] = v24;
    swift_bridgeObjectRetain();
    uint64_t v42 = v21;
    sub_259FB2BA4(v18, v17, v20, v19, v22, v21, v23, v24);
    uint64_t v25 = v45;
    uint64_t v26 = a2(v15, v14, v44);
    uint64_t v45 = v25;
    if (v25)
    {
      swift_bridgeObjectRelease();
      sub_25A0006B8(v18, v17, v20, v19, v22, v42, v23, v24);
      uint64_t v7 = v43;
      swift_bridgeObjectRelease();
LABEL_33:
      swift_release();
      return (uint64_t)v7;
    }
    uint64_t v29 = v27;
    uint64_t v38 = v28;
    uint64_t v39 = v26;
    swift_bridgeObjectRelease();
    uint64_t result = sub_25A0006B8(v18, v17, v20, v19, v22, v42, v23, v24);
    if (v29)
    {
      uint64_t v7 = v43;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_259FC93E0(0, v43[2] + 1, 1, v43);
        uint64_t v7 = (void *)result;
      }
      unint64_t v31 = v7[2];
      unint64_t v30 = v7[3];
      if (v31 >= v30 >> 1)
      {
        uint64_t result = (uint64_t)sub_259FC93E0((void *)(v30 > 1), v31 + 1, 1, v7);
        uint64_t v7 = (void *)result;
      }
      _OWORD v7[2] = v31 + 1;
      uint64_t v32 = &v7[3 * v31];
      v32[4] = v39;
      v32[5] = v29;
      uint64_t v32[6] = v38;
    }
    else
    {
      uint64_t v7 = v43;
    }
    unint64_t v4 = v40;
    int64_t v6 = v41;
  }
  int64_t v12 = v10 + 1;
  if (v10 + 1 >= v35) {
    goto LABEL_33;
  }
  unint64_t v11 = *(void *)(v34 + 8 * v12);
  if (v11) {
    goto LABEL_17;
  }
  int64_t v12 = v10 + 2;
  if (v10 + 2 >= v35) {
    goto LABEL_33;
  }
  unint64_t v11 = *(void *)(v34 + 8 * v12);
  if (v11) {
    goto LABEL_17;
  }
  int64_t v12 = v10 + 3;
  if (v10 + 3 >= v35) {
    goto LABEL_33;
  }
  unint64_t v11 = *(void *)(v34 + 8 * v12);
  if (v11)
  {
LABEL_17:
    int64_t v10 = v12;
    goto LABEL_18;
  }
  int64_t v33 = v10 + 4;
  if (v10 + 4 >= v35) {
    goto LABEL_33;
  }
  unint64_t v11 = *(void *)(v34 + 8 * v33);
  v10 += 4;
  if (v11) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v10 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v10 >= v35) {
      goto LABEL_33;
    }
    unint64_t v11 = *(void *)(v34 + 8 * v10);
    ++v33;
    if (v11) {
      goto LABEL_18;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

BOOL sub_25A006028(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_259FFF91C(a1, a2, a3, *(void *)(v3 + 16));
}

void sub_25A006048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_259FB2BA4(a3, a4, a5, a6, a7, a8, a9, a10);
  }
}

void sub_25A0060D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_25A0006B8(a3, a4, a5, a6, a7, a8, a9, a10);
  }
}

uint64_t sub_25A006168(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_259FFEE14(a1, a2, a3);
}

uint64_t sub_25A006184()
{
  if (!v0[15] || (uint64_t v2 = v0[8], (v3 = *(void *)(v2 + 16)) == 0))
  {
LABEL_14:
    swift_beginAccess();
    return v0[13];
  }
  uint64_t v28 = v1;
  uint64_t v27 = v0 + 12;
  swift_bridgeObjectRetain_n();
  unint64_t v4 = (uint64_t *)(v2 + 40);
  while (1)
  {
    uint64_t v7 = *(v4 - 1);
    uint64_t v6 = *v4;
    swift_beginAccess();
    uint64_t v8 = *v27;
    uint64_t v9 = *(void *)(*v27 + 16);
    uint64_t v40 = v6;
    swift_bridgeObjectRetain();
    if (!v9) {
      goto LABEL_12;
    }
    uint64_t v10 = v40;
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_259FE120C(v7, v10);
    if ((v12 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_12:
      swift_endAccess();
      uint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      sub_25A00ED10();
      swift_bridgeObjectRelease();
      uint64_t v31 = 0x2220616D65686353;
      unint64_t v32 = 0xE800000000000000;
      swift_bridgeObjectRetain();
      sub_25A00EA80();
      swift_bridgeObjectRelease();
      sub_25A00EA80();
      sub_25A00EA80();
      sub_25A00EA80();
      uint64_t v22 = v31;
      unint64_t v23 = v32;
      sub_259FB3304();
      swift_allocError();
      *(void *)uint64_t v24 = v22;
      *(void *)(v24 + 8) = v23;
      *(unsigned char *)(v24 + 16) = 3;
      swift_willThrow();
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
    uint64_t v29 = v7;
    uint64_t v30 = v3;
    int64_t v13 = (uint64_t *)(*(void *)(v8 + 56) + (v11 << 6));
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    uint64_t v17 = v13[2];
    uint64_t v16 = v13[3];
    uint64_t v19 = v13[4];
    uint64_t v18 = v13[5];
    uint64_t v21 = v13[6];
    unint64_t v20 = v13[7];
    swift_endAccess();
    sub_259FB2BA4(v14, v15, v17, v16, v19, v18, v21, v20);
    swift_bridgeObjectRelease();
    if ((v18 & 0x8000000000000000) == 0) {
      break;
    }
    sub_25A0006B8(v14, v15, v17, v16, v19, v18, v21, v20);
    swift_bridgeObjectRelease();
    uint64_t v5 = v30;
LABEL_5:
    v4 += 2;
    uint64_t v3 = v5 - 1;
    if (!v3)
    {
      swift_bridgeObjectRelease_n();
      unint64_t v0 = v26;
      goto LABEL_14;
    }
  }
  LOBYTE(v31) = v14;
  unint64_t v32 = v15;
  uint64_t v33 = v17;
  uint64_t v34 = v16;
  char v35 = v19 & 1;
  int v36 = HIDWORD(v19);
  char v37 = v18 & 1;
  uint64_t v38 = v21;
  unint64_t v39 = v20;
  swift_bridgeObjectRetain();
  sub_259FAF3C4(v21, v20);
  sub_259FFF218(v29, v40, (uint64_t)&v31);
  if (!v28)
  {
    sub_25A0006B8(v14, v15, v17, v16, v19, v18, v21, v20);
    sub_25A0006B8(v14, v15, v17, v16, v19, v18, v21, v20);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v5 = v30;
    goto LABEL_5;
  }
  sub_25A0006B8(v14, v15, v17, v16, v19, v18, v21, v20);
  sub_25A0006B8(v14, v15, v17, v16, v19, v18, v21, v20);
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25A006564(uint64_t a1)
{
  return a1;
}

uint64_t sub_25A00658C(_OWORD *a1)
{
  return sub_25A0055CC(a1);
}

uint64_t sub_25A0065A4(_OWORD *a1)
{
  return sub_25A0055E8(a1);
}

uint64_t sub_25A0065BC(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  int v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v26 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_25A00EBD0();
  if (!v20) {
    return sub_25A00EB80();
  }
  uint64_t v21 = v20;
  uint64_t v27 = v15;
  uint64_t v43 = sub_25A00ED70();
  uint64_t v35 = sub_25A00ED80();
  sub_25A00ED50();
  int64_t v41 = v19;
  uint64_t result = sub_25A00EBC0();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    char v37 = v23;
    uint64_t v24 = v27;
    while (1)
    {
      uint64_t v25 = (void (*)(char *, void))sub_25A00EBF0();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_25A00ED60();
      sub_25A00EBE0();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

uint64_t Dictionary<>.toTuplesSortedByValues()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6[2] = a2;
  v6[3] = a3;
  v6[4] = a4;
  v6[5] = a5;
  return Dictionary.toTuplesSortedByValues(by:)((uint64_t)sub_25A006D1C, (uint64_t)v6, a1, a2, a3, a4);
}

uint64_t Dictionary<>.toTuplesSortedByKeys()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v23 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  uint64_t v12 = a2;
  uint64_t v13 = a3;
  uint64_t v14 = a4;
  uint64_t v15 = a5;
  uint64_t v16 = sub_25A006D54;
  uint64_t v17 = &v18;
  uint64_t v5 = sub_25A00E960();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v23 = sub_25A0065BC((void (*)(char *, char *))sub_25A006D58, (uint64_t)v11, v5, TupleTypeMetadata2, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v8);
  sub_25A00EBA0();
  swift_getWitnessTable();
  uint64_t v9 = sub_25A00EB50();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t Dictionary.toTuplesSortedByValues(by:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = a3;
  uint64_t v19 = a4;
  uint64_t v20 = a5;
  uint64_t v21 = a6;
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v15 = a6;
  uint64_t v16 = sub_25A006D54;
  uint64_t v17 = &v18;
  uint64_t v6 = sub_25A00E960();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v22 = sub_25A0065BC((void (*)(char *, char *))sub_25A006ED4, (uint64_t)v12, v6, TupleTypeMetadata2, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v9);
  sub_25A00EBA0();
  swift_getWitnessTable();
  uint64_t v10 = sub_25A00EB50();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_25A006D1C()
{
  return sub_25A00E980() & 1;
}

uint64_t sub_25A006D58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 48);
  uint64_t v6 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v5(a2, a2 + *(int *)(TupleTypeMetadata2 + 48), a1, v6);
}

uint64_t sub_25A006DFC()
{
  return sub_25A00E980() & 1;
}

uint64_t sub_25A006E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(v4 + 16);
  uint64_t v9 = *(void *)(v4 + 24);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a3);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  return v10(a2, a4, v9);
}

uint64_t sub_25A006ED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 40);
  uint64_t v6 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v5(a2, a2 + *(int *)(TupleTypeMetadata2 + 48), a1, v6);
}

uint64_t sub_25A006F78(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 40);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v5(a1 + *(int *)(TupleTypeMetadata2 + 48), a2 + *(int *)(TupleTypeMetadata2 + 48)) & 1;
}

uint64_t sub_25A006FE4(uint64_t a1, void *a2, uint64_t *a3, void (**a4)(char *, uint64_t))
{
  uint64_t v116 = a3;
  char v117 = a4;
  uint64_t v121 = a2;
  uint64_t v106 = sub_25A00E400();
  uint64_t v104 = *(void *)(v106 - 8);
  MEMORY[0x270FA5388](v106);
  uint64_t v105 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_25A00E3F0();
  uint64_t v103 = *(void *)(v112 - 8);
  MEMORY[0x270FA5388](v112 - 8);
  uint64_t v111 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_25A00E7E0();
  uint64_t v113 = *(void *)(v115 - 8);
  MEMORY[0x270FA5388](v115);
  uint64_t v9 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25A00E780();
  uint64_t v109 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = a1;
  uint64_t v13 = sub_25A00E480();
  uint64_t v14 = *(void *)(v13 + 16);
  long long v114 = v9;
  uint64_t v110 = (void (*)(char *, unint64_t, uint64_t))v10;
  uint64_t v108 = v12;
  if (v14)
  {
    uint64_t v15 = *(void *)(sub_25A00E5A0() - 8);
    uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
    uint64_t v107 = v13;
    unint64_t v17 = v13 + ((v16 + 32) & ~v16);
    uint64_t v18 = *(void *)(v15 + 72);
    while (1)
    {
      uint64_t v19 = sub_25A00E420();
      uint64_t v21 = v20;
      uint64_t v22 = v121;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v22 = sub_259FC9C04(0, v121[2] + 1, 1, v121);
      }
      unint64_t v24 = v22[2];
      unint64_t v23 = v22[3];
      if (v24 >= v23 >> 1) {
        uint64_t v22 = sub_259FC9C04((void *)(v23 > 1), v24 + 1, 1, v22);
      }
      id v22[2] = v24 + 1;
      uint64_t v25 = &v22[2 * v24];
      v25[4] = v19;
      v25[5] = v21;
      swift_bridgeObjectRelease();
      sub_25A008F4C(v17, (void (*)(void *, unint64_t, uint64_t))v22, v117);
      if (v4) {
        goto LABEL_11;
      }
      swift_bridgeObjectRelease();
      v17 += v18;
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = v114;
        uint64_t v10 = (uint64_t)v110;
        goto LABEL_12;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_12:
  uint64_t v26 = sub_25A00E410();
  uint64_t v27 = *(void *)(v26 + 16);
  if (v27)
  {
    uint64_t v28 = *(void *)(sub_25A00E4D0() - 8);
    uint64_t v29 = *(unsigned __int8 *)(v28 + 80);
    uint64_t v107 = v26;
    uint64_t v30 = v26 + ((v29 + 32) & ~v29);
    uint64_t v31 = *(void *)(v28 + 72);
    while (1)
    {
      uint64_t v32 = sub_25A00E420();
      uint64_t v34 = v33;
      uint64_t v35 = v121;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v35 = sub_259FC9C04(0, v121[2] + 1, 1, v121);
      }
      unint64_t v37 = v35[2];
      unint64_t v36 = v35[3];
      if (v37 >= v36 >> 1) {
        uint64_t v35 = sub_259FC9C04((void *)(v36 > 1), v37 + 1, 1, v35);
      }
      v35[2] = v37 + 1;
      uint64_t v38 = &v35[2 * v37];
      void v38[4] = v32;
      v38[5] = v34;
      swift_bridgeObjectRelease();
      sub_25A006FE4(v30, v35, v116, v117);
      if (v4) {
        break;
      }
      swift_bridgeObjectRelease();
      v30 += v31;
      if (!--v27)
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = v114;
        uint64_t v10 = (uint64_t)v110;
        goto LABEL_23;
      }
    }
LABEL_11:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_23:
  uint64_t v39 = (void (**)(char *, uint64_t))sub_25A00E440();
  unint64_t v40 = sub_259FB01F0(MEMORY[0x263F8EE78]);
  v120[0] = v40;
  int64_t v41 = v39[2];
  if (v41)
  {
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v109 + 16);
    uint64_t v43 = (char *)v39 + ((*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80));
    uint64_t v44 = (void (**)(char *, uint64_t))(v109 + 8);
    uint64_t v45 = *(void *)(v109 + 72);
    char v117 = v39;
    swift_bridgeObjectRetain();
    uint64_t v46 = v108;
    while (1)
    {
      v42(v46, v43, v10);
      sub_25A0088EC(v120);
      if (v4) {
        break;
      }
      (*v44)(v46, v10);
      v43 += v45;
      int64_t v41 = (void (*)(char *, uint64_t))((char *)v41 - 1);
      if (!v41)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v107 = v120[0];
        uint64_t v9 = v114;
        goto LABEL_29;
      }
    }
    swift_bridgeObjectRelease();
    (*v44)(v46, v10);
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v107 = v40;
    swift_bridgeObjectRelease();
LABEL_29:
    uint64_t v47 = (void (**)(char *, uint64_t))sub_25A00E490();
    int64_t v48 = v47[2];
    if (v48)
    {
      uint64_t v49 = *(unsigned __int8 *)(v109 + 80);
      char v117 = v47;
      uint64_t v50 = (uint64_t)v47 + ((v49 + 32) & ~v49);
      uint64_t v51 = *(void *)(v109 + 72);
      while (1)
      {
        uint64_t v52 = sub_25A00E660();
        uint64_t v54 = v53;
        uint64_t v55 = v121;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v55 = sub_259FC9C04(0, v121[2] + 1, 1, v121);
        }
        unint64_t v57 = v55[2];
        unint64_t v56 = v55[3];
        if (v57 >= v56 >> 1) {
          uint64_t v55 = sub_259FC9C04((void *)(v56 > 1), v57 + 1, 1, v55);
        }
        v55[2] = v57 + 1;
        unint64_t v58 = &v55[2 * v57];
        v58[4] = v52;
        v58[5] = v54;
        swift_bridgeObjectRelease();
        sub_25A0099D4(v50, v116);
        if (v4) {
          break;
        }
        swift_bridgeObjectRelease();
        v50 += v51;
        int64_t v48 = (void (*)(char *, uint64_t))((char *)v48 - 1);
        if (!v48)
        {
          swift_bridgeObjectRelease();
          uint64_t v9 = v114;
          goto LABEL_41;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
LABEL_41:
    uint64_t v60 = sub_25A00E4A0();
    int64_t v61 = *(void *)(v60 + 16);
    if (!v61)
    {
      swift_bridgeObjectRelease();
      uint64_t v78 = MEMORY[0x263F8EE78];
LABEL_60:
      uint64_t v79 = sub_25A00E420();
      uint64_t v81 = v80;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v83 = v106;
      uint64_t v84 = v105;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v121 = sub_259FC9C04(0, v121[2] + 1, 1, v121);
      }
      unint64_t v86 = v121[2];
      unint64_t v85 = v121[3];
      if (v86 >= v85 >> 1) {
        uint64_t v121 = sub_259FC9C04((void *)(v85 > 1), v86 + 1, 1, v121);
      }
      uint64_t v87 = v121;
      v121[2] = v86 + 1;
      uint64_t v88 = &v87[2 * v86];
      v88[4] = v79;
      v88[5] = v81;
      swift_bridgeObjectRelease();
      v120[0] = (uint64_t)v87;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A402ED8);
      sub_259FD5EF0();
      uint64_t v89 = sub_25A00E970();
      uint64_t v91 = v90;
      swift_bridgeObjectRelease();
      sub_25A00E460();
      sub_25A00A054(&qword_26A402D98, MEMORY[0x263F50370]);
      uint64_t v92 = sub_25A00E900();
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v104 + 8))(v84, v83);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v94 = v92;
        unint64_t v95 = v93;
        (*(void (**)(char *, uint64_t))(v104 + 8))(v84, v83);
        unint64_t v96 = 0xF000000000000000;
        uint64_t v97 = 0;
        switch(v95 >> 62)
        {
          case 1uLL:
            uint64_t v98 = (int)v94;
            uint64_t v99 = v94 >> 32;
            goto LABEL_71;
          case 2uLL:
            uint64_t v98 = *(void *)(v94 + 16);
            uint64_t v99 = *(void *)(v94 + 24);
LABEL_71:
            if (v98 == v99) {
              goto LABEL_72;
            }
            goto LABEL_68;
          case 3uLL:
            goto LABEL_73;
          default:
            if ((v95 & 0xFF000000000000) != 0)
            {
LABEL_68:
              sub_259FAE450(v94, v95);
              uint64_t v97 = v94;
              unint64_t v96 = v95;
            }
            else
            {
LABEL_72:
              uint64_t v97 = 0;
            }
LABEL_73:
            uint64_t v121 = (void *)v94;
            unint64_t v100 = v107;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_259FAF3C4(v97, v96);
            swift_bridgeObjectRetain();
            unsigned int v101 = sub_259FF0A04(v119, v89, v91);
            sub_259FED73C(v100, v78, v97, v96, 2, v120);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_259FAF410(v97, v96);
            sub_259FB2A68(v120[0], v120[1], v120[2], v120[3]);
            ((void (*)(void *, void))v101)(v119, 0);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_259FAF410(v97, v96);
            sub_259FAE4A8((uint64_t)v121, v95);
            break;
        }
      }
      return swift_bridgeObjectRelease();
    }
    v120[0] = MEMORY[0x263F8EE78];
    sub_259FE14E0(0, v61, 0);
    uint64_t v110 = *(void (**)(char *, unint64_t, uint64_t))(v113 + 16);
    unint64_t v62 = (*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80);
    uint64_t v102 = v60;
    unint64_t v63 = v60 + v62;
    uint64_t v108 = *(char **)(v113 + 72);
    uint64_t v109 = v103 + 8;
    v113 += 16;
    char v117 = (void (**)(char *, uint64_t))(v113 - 8);
    while (1)
    {
      v110(v9, v63, v115);
      unint64_t v64 = v111;
      sub_25A00E7B0();
      sub_25A00A054(&qword_26A402DA0, MEMORY[0x263F50360]);
      uint64_t v65 = v112;
      uint64_t v66 = sub_25A00E900();
      if (v4) {
        break;
      }
      uint64_t v68 = v66;
      unint64_t v69 = v67;
      (*(void (**)(char *, uint64_t))v109)(v64, v65);
      uint64_t v70 = sub_25A00E790();
      uint64_t v72 = v71;
      switch(v69 >> 62)
      {
        case 1uLL:
          if ((int)v68 == v68 >> 32) {
            goto LABEL_50;
          }
          break;
        case 2uLL:
          if (*(void *)(v68 + 16) == *(void *)(v68 + 24)) {
            goto LABEL_50;
          }
          break;
        case 3uLL:
          goto LABEL_50;
        default:
          if ((v69 & 0xFF000000000000) == 0)
          {
LABEL_50:
            sub_259FAE4A8(v68, v69);
            uint64_t v68 = 0;
            unint64_t v69 = 0xF000000000000000;
          }
          break;
      }
      (*v117)(v9, v115);
      uint64_t v73 = v120[0];
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v74 = v73;
      }
      else
      {
        sub_259FE14E0(0, *(void *)(v73 + 16) + 1, 1);
        uint64_t v74 = v120[0];
      }
      unint64_t v76 = *(void *)(v74 + 16);
      unint64_t v75 = *(void *)(v74 + 24);
      if (v76 >= v75 >> 1)
      {
        uint64_t v103 = v70;
        sub_259FE14E0(v75 > 1, v76 + 1, 1);
        uint64_t v70 = v103;
        uint64_t v74 = v120[0];
      }
      *(void *)(v74 + 16) = v76 + 1;
      uint64_t v77 = (void *)(v74 + 32 * v76);
      v77[4] = v70;
      v77[5] = v72;
      v77[6] = v68;
      v77[7] = v69;
      v63 += (unint64_t)v108;
      --v61;
      uint64_t v9 = v114;
      if (!v61)
      {
        uint64_t v78 = v74;
        swift_bridgeObjectRelease();
        goto LABEL_60;
      }
    }
    (*(void (**)(char *, uint64_t))v109)(v64, v65);
    (*v117)(v9, v115);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

uint64_t sub_25A007D28@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v72 = a2;
  uint64_t v63 = sub_25A00E780();
  uint64_t v73 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v5 = (char *)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_25A00E4D0();
  uint64_t v6 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  unint64_t v64 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_25A00E5A0();
  uint64_t v8 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v70 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25A00E620();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v74 = (char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x263F8EE78];
  unint64_t v86 = (void (*)(char *, uint64_t))sub_259FB0380(MEMORY[0x263F8EE78]);
  unint64_t v85 = sub_259FB04CC(v13);
  uint64_t v14 = a1;
  uint64_t result = MEMORY[0x25A2F1C30]();
  uint64_t v16 = result;
  uint64_t v17 = *(void *)(result + 16);
  if (v17)
  {
    unint64_t v18 = 0;
    unint64_t v19 = result + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v80 = v8 + 16;
    uint64_t v81 = (void (**)(unint64_t, uint64_t))(v8 + 8);
    uint64_t v79 = v6 + 16;
    uint64_t v62 = v6;
    uint64_t v78 = (void (**)(uint64_t, uint64_t))(v6 + 8);
    uint64_t v76 = v73 + 16;
    uint64_t v77 = v84;
    uint64_t v59 = (void (**)(uint64_t, uint64_t))(v73 + 8);
    uint64_t v66 = (void (**)(char *, uint64_t))(v11 + 8);
    long long v82 = xmmword_25A010B90;
    uint64_t v69 = a1;
    uint64_t v68 = result;
    uint64_t v67 = v10;
    uint64_t v54 = v5;
    uint64_t v60 = v8;
    uint64_t v58 = v11;
    uint64_t v57 = v17;
    unint64_t v56 = v19;
    uint64_t v55 = v11 + 16;
    while (v18 < *(void *)(v16 + 16))
    {
      uint64_t v20 = *(void *)(v11 + 72);
      unint64_t v61 = v18;
      uint64_t v21 = v74;
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v74, v19 + v20 * v18, v10);
      uint64_t v83 = sub_25A00E5D0();
      uint64_t v23 = v22;
      uint64_t v24 = sub_25A00E5E0();
      uint64_t v25 = *(void *)(v24 + 16);
      if (v25)
      {
        unint64_t v26 = v24 + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80));
        uint64_t v27 = *(void *)(v60 + 72);
        uint64_t v28 = *(void (**)(unint64_t, unint64_t, uint64_t))(v60 + 16);
        uint64_t v75 = v24;
        swift_bridgeObjectRetain();
        uint64_t v29 = v71;
        unint64_t v30 = (unint64_t)v70;
        while (1)
        {
          v28(v30, v26, v29);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E50);
          uint64_t v31 = swift_allocObject();
          *(_OWORD *)(v31 + 16) = v82;
          *(void *)(v31 + 32) = v83;
          *(void *)(v31 + 40) = v23;
          swift_bridgeObjectRetain();
          sub_25A008F4C(v30, (void (*)(void *, unint64_t, uint64_t))v31, &v86);
          if (v2) {
            break;
          }
          swift_bridgeObjectRelease();
          (*v81)(v30, v29);
          v26 += v27;
          if (!--v25)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v21 = v74;
            goto LABEL_10;
          }
        }
        swift_bridgeObjectRelease();
        (*v81)(v30, v29);
        goto LABEL_29;
      }
      swift_bridgeObjectRelease();
LABEL_10:
      uint64_t v32 = v73;
      uint64_t v33 = sub_25A00E5B0();
      uint64_t v34 = *(void *)(v33 + 16);
      if (v34)
      {
        unint64_t v35 = v33 + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80));
        uint64_t v36 = *(void *)(v62 + 72);
        unint64_t v37 = *(void (**)(uint64_t, unint64_t, uint64_t))(v62 + 16);
        uint64_t v75 = v33;
        swift_bridgeObjectRetain();
        uint64_t v38 = v65;
        uint64_t v39 = (uint64_t)v64;
        while (1)
        {
          v37(v39, v35, v38);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A402E50);
          uint64_t v40 = swift_allocObject();
          *(_OWORD *)(v40 + 16) = v82;
          *(void *)(v40 + 32) = v83;
          *(void *)(v40 + 40) = v23;
          swift_bridgeObjectRetain();
          sub_25A006FE4(v39, (void *)v40, (uint64_t *)&v85, &v86);
          if (v2) {
            break;
          }
          swift_bridgeObjectRelease();
          (*v78)(v39, v38);
          v35 += v36;
          if (!--v34)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v32 = v73;
            uint64_t v21 = v74;
            goto LABEL_16;
          }
        }
        swift_bridgeObjectRelease();
        (*v78)(v39, v38);
        goto LABEL_29;
      }
      swift_bridgeObjectRelease();
LABEL_16:
      uint64_t v41 = sub_25A00E600();
      uint64_t v42 = *(void *)(v41 + 16);
      uint64_t v43 = v59;
      if (v42)
      {
        unint64_t v44 = v41 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
        uint64_t v75 = *(void *)(v32 + 72);
        uint64_t v45 = *(void (**)(uint64_t, unint64_t, uint64_t))(v32 + 16);
        v53[1] = v41;
        swift_bridgeObjectRetain();
        uint64_t v46 = v63;
        uint64_t v47 = (uint64_t)v54;
        while (1)
        {
          v45(v47, v44, v46);
          v84[0] = v83;
          v84[1] = v23;
          swift_bridgeObjectRetain();
          sub_25A0099D4(v47, (uint64_t *)&v85);
          if (v2) {
            break;
          }
          swift_arrayDestroy();
          (*v43)(v47, v46);
          v44 += v75;
          if (!--v42)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v21 = v74;
            goto LABEL_22;
          }
        }
        swift_arrayDestroy();
        (*v43)(v47, v46);
LABEL_29:
        swift_bridgeObjectRelease();
        uint64_t v52 = sub_25A00E520();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v69, v52);
        swift_bridgeObjectRelease();
        (*v66)(v74, v67);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
LABEL_22:
      unint64_t v48 = v61 + 1;
      uint64_t v10 = v67;
      (*v66)(v21, v67);
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v18 = v48;
      uint64_t v14 = v69;
      uint64_t v16 = v68;
      uint64_t v49 = v72;
      uint64_t v11 = v58;
      unint64_t v19 = v56;
      if (v48 == v57) {
        goto LABEL_25;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v49 = v72;
LABEL_25:
    uint64_t v50 = sub_25A00E520();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v14, v50);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v51 = v86;
    *uint64_t v49 = v85;
    v49[1] = (unint64_t)v51;
  }
  return result;
}

uint64_t sub_25A00857C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_25A00E730();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (result == *MEMORY[0x263F50400])
  {
    *a2 = 0;
    return result;
  }
  if (result == *MEMORY[0x263F503E0])
  {
    char v9 = 1;
LABEL_19:
    *a2 = v9;
    return result;
  }
  if (result == *MEMORY[0x263F503F8])
  {
    char v9 = 2;
    goto LABEL_19;
  }
  if (result == *MEMORY[0x263F50428])
  {
    char v9 = 3;
    goto LABEL_19;
  }
  if (result == *MEMORY[0x263F503F0])
  {
    char v9 = 4;
    goto LABEL_19;
  }
  if (result == *MEMORY[0x263F50438])
  {
    char v9 = 5;
    goto LABEL_19;
  }
  if (result == *MEMORY[0x263F50430])
  {
    char v9 = 6;
    goto LABEL_19;
  }
  if (result == *MEMORY[0x263F503C8])
  {
    char v9 = 7;
    goto LABEL_19;
  }
  if (result == *MEMORY[0x263F50418])
  {
    char v9 = 8;
    goto LABEL_19;
  }
  if (result == *MEMORY[0x263F503E8])
  {
    sub_259FC8ED8();
    swift_allocError();
    *uint64_t v10 = 0xD000000000000013;
    v10[1] = 0x800000025A010290;
    return swift_willThrow();
  }
  else
  {
    if (result == *MEMORY[0x263F50440])
    {
      char v9 = 9;
      goto LABEL_19;
    }
    if (result == *MEMORY[0x263F503D8])
    {
      char v9 = 10;
      goto LABEL_19;
    }
    if (result == *MEMORY[0x263F50420])
    {
      char v9 = 11;
      goto LABEL_19;
    }
    if (result == *MEMORY[0x263F503D0])
    {
      char v9 = 12;
      goto LABEL_19;
    }
    if (result == *MEMORY[0x263F50448])
    {
      char v9 = 13;
      goto LABEL_19;
    }
    if (result == *MEMORY[0x263F50450])
    {
      char v9 = 14;
      goto LABEL_19;
    }
    if (result == *MEMORY[0x263F50408])
    {
      char v9 = 15;
      goto LABEL_19;
    }
    if (result == *MEMORY[0x263F50410])
    {
      char v9 = 16;
      goto LABEL_19;
    }
    uint64_t result = sub_25A00EDB0();
    __break(1u);
  }
  return result;
}

uint64_t sub_25A0088EC(void *a1)
{
  uint64_t v62 = a1;
  uint64_t v63 = sub_25A00E6B0();
  uint64_t v61 = *(void *)(v63 - 8);
  uint64_t v1 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v60 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v52 - v3;
  uint64_t v5 = sub_25A00E250();
  uint64_t v59 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25A00E3E0();
  uint64_t v64 = *(void *)(v8 - 8);
  uint64_t v65 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25A00E730();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A00E680();
  uint64_t v15 = v66;
  sub_25A00857C((uint64_t)v14, (char *)v67);
  if (v15) {
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v57 = v7;
  uint64_t v58 = v5;
  uint64_t v66 = v4;
  uint64_t v17 = v63;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  char v18 = v67[0];
  sub_25A00E700();
  sub_25A00A054(&qword_26A402DA8, MEMORY[0x263F50350]);
  uint64_t v19 = v65;
  uint64_t v20 = sub_25A00E900();
  uint64_t v55 = 0;
  unint64_t v56 = v21;
  uint64_t v54 = v20;
  (*(void (**)(char *, uint64_t))(v64 + 8))(v10, v19);
  uint64_t v53 = sub_25A00E660();
  uint64_t v23 = v22;
  uint64_t v24 = sub_25A00E750();
  unint64_t v26 = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = HIBYTE(v26) & 0xF;
  if ((v26 & 0x2000000000000000) == 0) {
    uint64_t v27 = v24 & 0xFFFFFFFFFFFFLL;
  }
  if (v27)
  {
    v67[0] = sub_25A00E750();
    v67[1] = v28;
    uint64_t v29 = v57;
    sub_25A00E200();
    sub_259FD6B80();
    uint64_t v30 = sub_25A00EC90();
    uint64_t v64 = v31;
    uint64_t v65 = v30;
    (*(void (**)(char *, uint64_t))(v59 + 8))(v29, v58);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v64 = 0;
    uint64_t v65 = 0;
  }
  uint64_t v32 = v17;
  uint64_t v34 = v60;
  uint64_t v33 = v61;
  uint64_t v63 = sub_25A00E6E0();
  unint64_t v35 = v66;
  sub_25A00E6C0();
  (*(void (**)(char *, void, uint64_t))(v33 + 104))(v34, *MEMORY[0x263F503B0], v17);
  sub_25A00A054(&qword_26A403088, MEMORY[0x263F503B8]);
  sub_25A00EB70();
  sub_25A00EB70();
  uint64_t v36 = v67[0];
  unint64_t v37 = v34;
  uint64_t v38 = v76;
  uint64_t v39 = *(void (**)(char *, uint64_t))(v33 + 8);
  v39(v37, v32);
  v39(v35, v32);
  char v40 = sub_25A00E650();
  if (v40) {
    int v41 = sub_25A00E630();
  }
  else {
    int v41 = 0;
  }
  uint64_t v42 = v54;
  unint64_t v43 = v56;
  uint64_t v44 = v23;
  uint64_t v45 = v53;
  char v46 = v40 ^ 1;
  unint64_t v47 = 0xF000000000000000;
  uint64_t v48 = 0;
  uint64_t v49 = v62;
  switch(v56 >> 62)
  {
    case 1uLL:
      if ((int)v54 == v54 >> 32) {
        goto LABEL_17;
      }
      goto LABEL_15;
    case 2uLL:
      if (*(void *)(v54 + 16) != *(void *)(v54 + 24)) {
        goto LABEL_15;
      }
LABEL_17:
      uint64_t v48 = 0;
      unint64_t v47 = 0xF000000000000000;
      break;
    case 3uLL:
      break;
    default:
      if ((v56 & 0xFF000000000000) != 0)
      {
LABEL_15:
        sub_259FAE450(v54, v56);
        unint64_t v43 = v56;
        uint64_t v48 = v42;
        unint64_t v47 = v56;
      }
      else
      {
        uint64_t v48 = 0;
      }
      break;
  }
  LOBYTE(v68) = v18;
  *((void *)&v68 + 1) = v65;
  uint64_t v69 = v64;
  uint64_t v70 = (int)v63;
  BOOL v71 = v36 == v38;
  int v72 = v41;
  char v73 = v46 & 1;
  uint64_t v74 = v48;
  unint64_t v75 = v47;
  unint64_t v50 = v43;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v67[0] = *v49;
  *uint64_t v49 = 0x8000000000000000;
  sub_259FFB528(&v68, v45, v44, isUniquelyReferenced_nonNull_native);
  *uint64_t v49 = v67[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_259FAE4A8(v42, v50);
}

uint64_t sub_25A008F4C(unint64_t a1, void (*a2)(void *, unint64_t, uint64_t), void *a3)
{
  uint64_t v97 = a3;
  uint64_t v107 = a2;
  uint64_t v100 = sub_25A00E4E0();
  uint64_t v96 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v6 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25A00E860();
  uint64_t v102 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (void (**)(char *, uint64_t))((char *)&v89 - v11);
  uint64_t v13 = sub_25A00E3D0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v98 = a1;
  sub_25A00E570();
  sub_25A00A054(&qword_26A402DB8, MEMORY[0x263F50318]);
  uint64_t v17 = sub_25A00E900();
  if (v3) {
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  unint64_t v94 = v18;
  uint64_t v95 = v17;
  uint64_t v108 = v12;
  uint64_t v109 = v7;
  uint64_t v103 = v10;
  uint64_t v99 = v6;
  uint64_t v101 = 0;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v20 = (void *)sub_25A00E530();
  uint64_t v22 = v21;
  uint64_t v23 = (uint64_t)v107;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_59;
  }
  while (1)
  {
    uint64_t v24 = v109;
    unint64_t v26 = *(void *)(v23 + 16);
    unint64_t v25 = *(void *)(v23 + 24);
    if (v26 >= v25 >> 1) {
      uint64_t v23 = (uint64_t)sub_259FC9C04((void *)(v25 > 1), v26 + 1, 1, (void *)v23);
    }
    *(void *)(v23 + 16) = v26 + 1;
    uint64_t v27 = v23 + 16 * v26;
    *(void *)(v27 + 32) = v20;
    *(void *)(v27 + 40) = v22;
    swift_bridgeObjectRelease();
    uint64_t v110 = (void *)v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402ED8);
    sub_259FD5EF0();
    uint64_t v92 = sub_25A00E970();
    uint64_t v93 = v28;
    uint64_t v29 = swift_bridgeObjectRelease();
    uint64_t v30 = MEMORY[0x25A2F1C90](v29);
    uint64_t v31 = (void *)sub_259FB0620(MEMORY[0x263F8EE78]);
    uint64_t v23 = *(void *)(v30 + 16);
    if (!v23) {
      break;
    }
    uint64_t v32 = *(void (**)(void (**)(char *, uint64_t), uint64_t, uint64_t))(v102 + 16);
    uint64_t v22 = v30 + ((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80));
    uint64_t v105 = (void (**)(void, uint64_t))(v102 + 8);
    uint64_t v106 = v32;
    uint64_t v107 = (void (*)(void *, unint64_t, uint64_t))(v102 + 16);
    unint64_t v104 = *(void *)(v102 + 72);
    uint64_t v91 = (void *)v30;
    swift_bridgeObjectRetain();
    uint64_t v33 = v108;
    while (1)
    {
      v106(v33, v22, v24);
      uint64_t v34 = sub_25A00E7F0();
      uint64_t v36 = v35;
      int v37 = sub_25A00E810();
      uint64_t v20 = v31;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v110 = v20;
      unint64_t v40 = sub_259FE120C(v34, v36);
      uint64_t v41 = v20[2];
      BOOL v42 = (v39 & 1) == 0;
      uint64_t v43 = v41 + v42;
      if (__OFADD__(v41, v42)) {
        break;
      }
      char v44 = v39;
      if (v20[3] >= v43)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v20 = &v110;
          sub_259FFA5C4();
        }
      }
      else
      {
        sub_259FF88F4(v43, isUniquelyReferenced_nonNull_native);
        uint64_t v20 = v110;
        unint64_t v45 = sub_259FE120C(v34, v36);
        if ((v44 & 1) != (v46 & 1))
        {
          sub_25A00EF00();
          __break(1u);
LABEL_61:
          sub_25A00EF00();
          __break(1u);
          JUMPOUT(0x25A0099B4);
        }
        unint64_t v40 = v45;
      }
      uint64_t v31 = v110;
      if (v44)
      {
        *(void *)(v110[7] + 8 * v40) = v37;
      }
      else
      {
        v110[(v40 >> 6) + 8] |= 1 << v40;
        unint64_t v47 = (uint64_t *)(v31[6] + 16 * v40);
        *unint64_t v47 = v34;
        v47[1] = v36;
        *(void *)(v31[7] + 8 * v40) = v37;
        uint64_t v48 = v31[2];
        BOOL v49 = __OFADD__(v48, 1);
        uint64_t v50 = v48 + 1;
        if (v49) {
          goto LABEL_56;
        }
        _OWORD v31[2] = v50;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v33 = v108;
      uint64_t v24 = v109;
      (*v105)(v108, v109);
      v22 += v104;
      if (!--v23)
      {
        swift_bridgeObjectRelease();
        unint64_t v51 = v94;
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    uint64_t v23 = (uint64_t)sub_259FC9C04(0, *(void *)(v23 + 16) + 1, 1, (void *)v23);
  }
  unint64_t v51 = v94;
LABEL_21:
  uint64_t v52 = swift_bridgeObjectRelease();
  unint64_t v53 = 0xF000000000000000;
  uint64_t v54 = v101;
  uint64_t v55 = v99;
  uint64_t v56 = 0;
  unint64_t v57 = v51;
  switch(v51 >> 62)
  {
    case 1uLL:
      uint64_t v56 = v95;
      if ((int)v56 != v56 >> 32) {
        goto LABEL_27;
      }
      goto LABEL_25;
    case 2uLL:
      uint64_t v56 = v95;
      if (*(void *)(v95 + 16) != *(void *)(v95 + 24)) {
        goto LABEL_27;
      }
LABEL_25:
      uint64_t v56 = 0;
      unint64_t v53 = 0xF000000000000000;
      break;
    case 3uLL:
      break;
    default:
      uint64_t v56 = v95;
      if ((v51 & 0xFF000000000000) != 0)
      {
LABEL_27:
        uint64_t v52 = sub_259FAE450(v56, v51);
        unint64_t v53 = v51;
      }
      else
      {
        uint64_t v56 = 0;
      }
      break;
  }
  unint64_t v98 = v53;
  uint64_t v58 = MEMORY[0x25A2F1C90](v52);
  unint64_t v104 = sub_259FB24C8(MEMORY[0x263F8EE78]);
  uint64_t v59 = *(void *)(v58 + 16);
  if (v59)
  {
    uint64_t v90 = v56;
    uint64_t v91 = v31;
    uint64_t v60 = v102 + 16;
    unint64_t v61 = v58 + ((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80));
    uint64_t v107 = *(void (**)(void *, unint64_t, uint64_t))(v102 + 16);
    uint64_t v108 = (void (**)(char *, uint64_t))(v96 + 8);
    uint64_t v105 = *(void (***)(void, uint64_t))(v102 + 72);
    uint64_t v106 = (void (*)(void (**)(char *, uint64_t), uint64_t, uint64_t))(v102 + 8);
    uint64_t v96 = v58;
    swift_bridgeObjectRetain();
    uint64_t v20 = v103;
    uint64_t v62 = v100;
    uint64_t v102 = v60;
    while (2)
    {
      v107(v20, v61, v24);
      sub_25A00E830();
      sub_25A00A054(&qword_26A402DC0, MEMORY[0x263F50388]);
      uint64_t v63 = sub_25A00E900();
      uint64_t v65 = v62;
      if (v54)
      {
        (*v108)(v55, v62);
        swift_bridgeObjectRelease();
        (*(void (**)(void *, uint64_t))v106)(v103, v24);
        swift_bridgeObjectRelease();
        sub_259FAE4A8(v95, v94);
        sub_259FAF410(v90, v98);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      uint64_t v66 = v63;
      unint64_t v67 = v64;
      long long v68 = v55;
      uint64_t v69 = v55;
      uint64_t v70 = v65;
      (*v108)(v69, v65);
      uint64_t v20 = v103;
      switch(v67 >> 62)
      {
        case 1uLL:
          if ((int)v66 != v66 >> 32) {
            goto LABEL_39;
          }
          goto LABEL_30;
        case 2uLL:
          if (*(void *)(v66 + 16) != *(void *)(v66 + 24)) {
            goto LABEL_39;
          }
          goto LABEL_30;
        case 3uLL:
          goto LABEL_30;
        default:
          if ((v67 & 0xFF000000000000) == 0)
          {
LABEL_30:
            sub_259FAE4A8(v66, v67);
            uint64_t v62 = v70;
            uint64_t v55 = v68;
            goto LABEL_31;
          }
LABEL_39:
          uint64_t v101 = 0;
          uint64_t v23 = (int)sub_25A00E810();
          uint64_t v20 = (void *)v104;
          uint64_t v22 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v110 = v20;
          unint64_t v72 = sub_259FE1284(v23);
          uint64_t v73 = v20[2];
          BOOL v74 = (v71 & 1) == 0;
          uint64_t v75 = v73 + v74;
          if (__OFADD__(v73, v74)) {
            goto LABEL_57;
          }
          char v76 = v71;
          if (v20[3] < v75)
          {
            sub_259FF92C0(v75, v22);
            unint64_t v77 = sub_259FE1284(v23);
            if ((v76 & 1) != (v78 & 1)) {
              goto LABEL_61;
            }
            unint64_t v72 = v77;
            goto LABEL_43;
          }
          uint64_t v20 = v103;
          if ((v22 & 1) == 0)
          {
            sub_259FFAB6C();
LABEL_43:
            uint64_t v20 = v103;
          }
          uint64_t v79 = v110;
          unint64_t v104 = (unint64_t)v110;
          if (v76)
          {
            uint64_t v80 = v110[7] + 16 * v72;
            sub_259FAE4A8(*(void *)v80, *(void *)(v80 + 8));
            *(void *)uint64_t v80 = v66;
            *(void *)(v80 + 8) = v67;
          }
          else
          {
            v110[(v72 >> 6) + 8] |= 1 << v72;
            *(void *)(v79[6] + 8 * v72) = v23;
            uint64_t v81 = (uint64_t *)(v79[7] + 16 * v72);
            *uint64_t v81 = v66;
            v81[1] = v67;
            uint64_t v82 = v79[2];
            BOOL v49 = __OFADD__(v82, 1);
            uint64_t v83 = v82 + 1;
            if (v49) {
              goto LABEL_58;
            }
            v79[2] = v83;
          }
          swift_bridgeObjectRelease();
          uint64_t v62 = v100;
          uint64_t v54 = v101;
          uint64_t v24 = v109;
          uint64_t v55 = v99;
LABEL_31:
          (*(void (**)(void *, uint64_t))v106)(v20, v24);
          v61 += (unint64_t)v105;
          if (--v59) {
            continue;
          }
          uint64_t v101 = v54;
          swift_bridgeObjectRelease();
          unint64_t v84 = v94;
          uint64_t v56 = v90;
          uint64_t v31 = v91;
          break;
      }
      break;
    }
  }
  else
  {
    unint64_t v84 = v57;
  }
  swift_bridgeObjectRelease();
  sub_259FB24C8(MEMORY[0x263F8EE78]);
  swift_bridgeObjectRetain();
  unint64_t v85 = v98;
  sub_259FAF3C4(v56, v98);
  uint64_t v86 = v104;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_259FAF3C4(v56, v85);
  swift_bridgeObjectRetain();
  sub_259FAF410(v56, v85);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  sub_259FAF410(v56, v85);
  swift_bridgeObjectRelease();
  uint64_t v87 = v97;
  char v88 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v110 = (void *)*v87;
  *uint64_t v87 = 0x8000000000000000;
  sub_259FFBCFC((uint64_t)v31, v56, v85, v86, v92, v93, v88);
  *uint64_t v87 = v110;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_259FAE4A8(v95, v84);
}

uint64_t sub_25A0099D4(uint64_t a1, uint64_t *a2)
{
  unint64_t v64 = a2;
  uint64_t v2 = sub_25A00E6B0();
  uint64_t v61 = *(void *)(v2 - 8);
  uint64_t v62 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v60 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v59 = (char *)&v56 - v5;
  uint64_t v6 = sub_25A00E730();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25A00E250();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_25A00E740();
  uint64_t v68 = v14;
  sub_25A00E200();
  unint64_t v58 = sub_259FD6B80();
  uint64_t v15 = sub_25A00EC90();
  unint64_t v17 = v16;
  unint64_t v57 = *(void (**)(char *, uint64_t))(v11 + 8);
  v57(v13, v10);
  swift_bridgeObjectRelease();
  uint64_t v18 = HIBYTE(v17) & 0xF;
  uint64_t v63 = v15;
  if ((v17 & 0x2000000000000000) == 0) {
    uint64_t v18 = v15 & 0xFFFFFFFFFFFFLL;
  }
  if (!v18)
  {
    swift_bridgeObjectRelease();
    sub_259FC8ED8();
    swift_allocError();
    *uint64_t v21 = 0xD000000000000010;
    v21[1] = 0x800000025A0104A0;
    return swift_willThrow();
  }
  unint64_t v65 = v17;
  sub_25A00E680();
  uint64_t v19 = v66;
  sub_25A00857C((uint64_t)v9, (char *)&v67);
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return swift_bridgeObjectRelease();
  }
  uint64_t v56 = 0;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  int v22 = v67;
  uint64_t v23 = sub_25A00E750();
  unint64_t v25 = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = HIBYTE(v25) & 0xF;
  if ((v25 & 0x2000000000000000) == 0) {
    uint64_t v26 = v23 & 0xFFFFFFFFFFFFLL;
  }
  LODWORD(v66) = v22;
  if (v26)
  {
    uint64_t v67 = sub_25A00E750();
    uint64_t v68 = v27;
    sub_25A00E200();
    unint64_t v58 = sub_25A00EC90();
    uint64_t v29 = v28;
    v57(v13, v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v58 = 0;
    uint64_t v29 = 0;
  }
  uint64_t v31 = v61;
  uint64_t v30 = v62;
  uint64_t v32 = (int)sub_25A00E6E0();
  uint64_t v33 = v59;
  sub_25A00E6C0();
  uint64_t v34 = v60;
  (*(void (**)(char *, void, uint64_t))(v31 + 104))(v60, *MEMORY[0x263F503B0], v30);
  sub_25A00A054(&qword_26A403088, MEMORY[0x263F503B8]);
  sub_25A00EB70();
  sub_25A00EB70();
  BOOL v35 = v67 == v76;
  uint64_t v36 = *(void (**)(char *, uint64_t))(v31 + 8);
  v36(v34, v30);
  v36(v33, v30);
  LOBYTE(v69) = v66;
  *((void *)&v69 + 1) = v58;
  uint64_t v70 = v29;
  uint64_t v71 = v32;
  BOOL v72 = v35;
  int v73 = 0;
  char v74 = 1;
  long long v75 = xmmword_25A011290;
  uint64_t v66 = sub_25A00E660();
  uint64_t v38 = v37;
  swift_bridgeObjectRetain();
  sub_259FAF3C4(0, 0xF000000000000000);
  char v39 = v64;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v67 = *v39;
  uint64_t v41 = v67;
  *char v39 = 0x8000000000000000;
  uint64_t v42 = v63;
  uint64_t v43 = v65;
  unint64_t v45 = sub_259FE120C(v63, v65);
  uint64_t v46 = *(void *)(v41 + 16);
  BOOL v47 = (v44 & 1) == 0;
  uint64_t v48 = v46 + v47;
  if (__OFADD__(v46, v47))
  {
    __break(1u);
    goto LABEL_22;
  }
  LOBYTE(v33) = v44;
  if (*(void *)(v41 + 24) >= v48)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_17;
    }
LABEL_22:
    sub_259FFAD1C();
    goto LABEL_17;
  }
  sub_259FF9588(v48, isUniquelyReferenced_nonNull_native);
  unint64_t v49 = sub_259FE120C(v42, v43);
  if ((v33 & 1) != (v50 & 1))
  {
    uint64_t result = sub_25A00EF00();
    __break(1u);
    return result;
  }
  unint64_t v45 = v49;
LABEL_17:
  *char v39 = v67;
  swift_bridgeObjectRelease();
  unint64_t v51 = (void *)*v39;
  swift_bridgeObjectRetain();
  if ((v33 & 1) == 0)
  {
    uint64_t v52 = MEMORY[0x263F8EE78];
    unint64_t v53 = sub_259FB01F0(MEMORY[0x263F8EE78]);
    sub_259FFC524(v45, v42, v43, v53, v52, 0, 0xF000000000000000, v51);
    swift_bridgeObjectRetain();
  }
  uint64_t v54 = v51[7];
  swift_bridgeObjectRelease();
  char v55 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v67 = *(void *)(v54 + 32 * v45);
  *(void *)(v54 + 32 * v45) = 0x8000000000000000;
  sub_259FFB528(&v69, v66, v38, v55);
  *(void *)(v54 + 32 * v45) = v67;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259FAF410(0, 0xF000000000000000);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25A00A054(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MessageSchema.makeFlatMessagePayload(from:)(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t ObjectType = swift_getObjectType();
  v10[2] = a1;
  uint64_t v7 = v4;
  (*(void (**)(uint64_t *__return_ptr, uint64_t (*)@<X0>(uint64_t@<X1>, uint64_t@<X8>), void *, uint64_t, uint64_t))(v5 + 96))(&v11, sub_25A00A39C, v10, ObjectType, v5);
  if (!v2)
  {
    uint64_t v7 = v12;
    unint64_t v8 = v13;
    sub_259FAE450(v12, v13);
    swift_unknownObjectRelease();
    sub_259FAE4A8(v7, v8);
  }
  return v7;
}

uint64_t sub_25A00A168@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(void *)(a1 + 8);
  unint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  uint64_t v8 = v17(ObjectType, v7);
  if (!*(void *)(a2 + 16) || (unint64_t v10 = sub_259FE120C(v8, v9), (v11 & 1) == 0))
  {
    uint64_t v20 = 0;
    long long v18 = 0u;
    long long v19 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_259FB3358(*(void *)(a2 + 56) + 40 * v10, (uint64_t)&v18);
  swift_bridgeObjectRelease();
  if (!*((void *)&v19 + 1))
  {
LABEL_7:
    uint64_t result = sub_25A00A3B8((uint64_t)&v18);
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_WORD *)(a3 + 32) = -256;
    return result;
  }
  sub_259FAF0F0(&v18, (uint64_t)v21);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(a1 + 16))(ObjectType, a1))
  {
    *(void *)&long long v18 = 0;
    *((void *)&v18 + 1) = 0xE000000000000000;
    sub_25A00ED10();
    swift_bridgeObjectRelease();
    *(void *)&long long v18 = 0xD00000000000002BLL;
    *((void *)&v18 + 1) = 0x800000025A010500;
    v17(ObjectType, v7);
    sub_25A00EA80();
    swift_bridgeObjectRelease();
    long long v12 = v18;
    sub_259FB3304();
    swift_allocError();
    *(_OWORD *)uint64_t v13 = v12;
    *(unsigned char *)(v13 + 16) = 6;
    swift_willThrow();
  }
  else
  {
    uint64_t v15 = v21[6];
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a1 + 56))(&v18, ObjectType, a1);
    if (!v15)
    {
      long long v16 = v18;
      TypeSchema.makeValue(from:)(v21, a3);
      sub_259FAD1BC(v16, *((uint64_t *)&v16 + 1));
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

uint64_t sub_25A00A39C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_25A00A168(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_25A00A3B8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A403090);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25A00A418(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = a1;
  uint64_t v36 = MEMORY[0x263F8EE78];
  sub_259FE15C4(0, v1, 0);
  uint64_t v2 = v36;
  uint64_t result = sub_25A005144(v3);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = v3 + 64;
  uint64_t v29 = v3 + 80;
  int64_t v30 = v1;
  int v31 = v5;
  uint64_t v32 = v3 + 64;
  uint64_t v33 = v3;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v34 = v7;
    uint64_t v12 = *(void *)(v3 + 56);
    uint64_t v13 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v6);
    uint64_t v14 = v13[1];
    uint64_t v35 = *v13;
    uint64_t v15 = (uint64_t *)(v12 + 32 * v6);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    unint64_t v18 = v15[2];
    uint64_t v19 = v15[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v17, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v17, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259FAF410(v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v17, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259FAF410(v17, v18);
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v21 = *(void *)(v36 + 16);
    unint64_t v20 = *(void *)(v36 + 24);
    unint64_t v22 = v21 + 1;
    if (v21 >= v20 >> 1)
    {
      uint64_t result = sub_259FE15C4(v20 > 1, v21 + 1, 1);
      unint64_t v22 = v21 + 1;
    }
    *(void *)(v36 + 16) = v22;
    uint64_t v23 = (void *)(v36 + 48 * v21);
    void v23[4] = v35;
    uint64_t v23[5] = v14;
    v23[6] = v16;
    v23[7] = v17;
    v23[8] = v18;
    v23[9] = v19;
    uint64_t v3 = v33;
    int64_t v9 = 1 << *(unsigned char *)(v33 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = v32;
    uint64_t v24 = *(void *)(v32 + 8 * v11);
    if ((v24 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v31;
    if (*(_DWORD *)(v33 + 36) != v31) {
      goto LABEL_27;
    }
    unint64_t v25 = v24 & (-2 << (v6 & 0x3F));
    if (v25)
    {
      int64_t v9 = __clz(__rbit64(v25)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v30;
    }
    else
    {
      unint64_t v26 = v11 + 1;
      unint64_t v27 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v30;
      if (v11 + 1 < v27)
      {
        unint64_t v28 = *(void *)(v32 + 8 * v26);
        if (v28)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v28)) + (v26 << 6);
        }
        else
        {
          while (v27 - 2 != v11)
          {
            unint64_t v28 = *(void *)(v29 + 8 * v11++);
            if (v28)
            {
              unint64_t v26 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v34 + 1;
    uint64_t v6 = v9;
    if (v34 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_25A00A704(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = a1;
  uint64_t v33 = MEMORY[0x263F8EE78];
  sub_259FE15E4(0, v1, 0);
  uint64_t v2 = v33;
  uint64_t result = sub_25A005144(v3);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = v3 + 64;
  uint64_t v25 = v3 + 80;
  int64_t v26 = v1;
  int v27 = v5;
  uint64_t v28 = v3 + 64;
  uint64_t v29 = v3;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v30 = v7;
    uint64_t v12 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v6);
    uint64_t v13 = v12[1];
    uint64_t v31 = *v12;
    uint64_t v14 = *(void *)(v3 + 56) + 32 * v6;
    long long v32 = *(_OWORD *)v14;
    uint64_t v15 = *(void *)(v14 + 16);
    unint64_t v16 = *(void *)(v14 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v15, v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v15, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259FAF410(v15, v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259FAF3C4(v15, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_259FAF410(v15, v16);
    unint64_t v18 = *(void *)(v33 + 16);
    unint64_t v17 = *(void *)(v33 + 24);
    if (v18 >= v17 >> 1) {
      uint64_t result = sub_259FE15E4(v17 > 1, v18 + 1, 1);
    }
    *(void *)(v33 + 16) = v18 + 1;
    uint64_t v19 = v33 + 48 * v18;
    *(void *)(v19 + 32) = v31;
    *(void *)(v19 + 40) = v13;
    *(_OWORD *)(v19 + 48) = v32;
    *(void *)(v19 + 64) = v15;
    *(void *)(v19 + 72) = v16;
    uint64_t v3 = v29;
    int64_t v9 = 1 << *(unsigned char *)(v29 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = v28;
    uint64_t v20 = *(void *)(v28 + 8 * v11);
    if ((v20 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v27;
    if (*(_DWORD *)(v29 + 36) != v27) {
      goto LABEL_27;
    }
    unint64_t v21 = v20 & (-2 << (v6 & 0x3F));
    if (v21)
    {
      int64_t v9 = __clz(__rbit64(v21)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v26;
    }
    else
    {
      unint64_t v22 = v11 + 1;
      unint64_t v23 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v26;
      if (v11 + 1 < v23)
      {
        unint64_t v24 = *(void *)(v28 + 8 * v22);
        if (v24)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v24)) + (v22 << 6);
        }
        else
        {
          while (v23 - 2 != v11)
          {
            unint64_t v24 = *(void *)(v25 + 8 * v11++);
            if (v24)
            {
              unint64_t v22 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v30 + 1;
    uint64_t v6 = v9;
    if (v30 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_25A00A9FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = *v3;
  *(void *)&long long v33 = sub_25A00A418(v3[1]);
  swift_bridgeObjectRetain();
  sub_25A00AFAC((uint64_t *)&v33, (uint64_t (*)(uint64_t))sub_25A00511C, sub_25A00B078);
  if (v4)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v28 = a3;
    swift_bridgeObjectRelease();
    uint64_t v9 = v33;
    *(void *)&long long v33 = sub_25A00A704(v8);
    swift_bridgeObjectRetain();
    sub_25A00AFAC((uint64_t *)&v33, (uint64_t (*)(uint64_t))sub_25A005130, sub_25A00B7C4);
    swift_bridgeObjectRelease();
    uint64_t v10 = v33;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v12 = *(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(a2 + 24);
    uint64_t v13 = v12(0xD000000000000021, 0x800000025A00FE30, ObjectType, a2);
    uint64_t v15 = v14;
    *(void *)&long long v26 = v10;
    *(void *)&long long v27 = v9;
    uint64_t v16 = v13;
    uint64_t v17 = sub_25A00E950();
    *(void *)&long long v33 = v16;
    *((void *)&v33 + 1) = v15;
    uint64_t v34 = v17;
    v25[0] = v16;
    v25[1] = v25;
    *(void *)&long long v31 = v12(0xD000000000000023, 0x800000025A00F4A0, ObjectType, a2);
    *((void *)&v31 + 1) = v18;
    uint64_t v32 = sub_25A00E950();
    MEMORY[0x270FA5388](v32);
    void v24[2] = a1;
    v24[3] = a2;
    uint64_t v19 = sub_25A00C3E0(v27, (void (*)(long long *__return_ptr, uint64_t, uint64_t, void *))sub_25A00B030);
    swift_release();
    uint64_t v20 = SchematizedDataComposer.subscript.setter(v19, 0x7079745F6D756E65, 0xE900000000000065);
    MEMORY[0x270FA5388](v20);
    v24[-2] = a1;
    v24[-1] = a2;
    uint64_t v21 = sub_25A00C5CC(v26, (void (*)(long long *__return_ptr, uint64_t, uint64_t, void *))sub_25A00C590);
    swift_release();
    SchematizedDataComposer.subscript.setter(v21, 0x5F6567617373656DLL, 0xEC00000065707974);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A402FD0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25A010B90;
    long long v27 = v31;
    long long v29 = v31;
    uint64_t v30 = v32;
    SchematizedDataComposer.compose()(inited + 32);
    SchematizedDataComposer.subscript.setter(inited, 1701603686, 0xE400000000000000);
    long long v26 = v33;
    long long v29 = v33;
    uint64_t v30 = v34;
    SchematizedDataComposer.compose()(v28);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_25A00AF2C(uint64_t *a1)
{
  return sub_25A00AFAC(a1, (uint64_t (*)(uint64_t))sub_25A00511C, sub_25A00B078);
}

uint64_t sub_25A00AF6C(uint64_t *a1)
{
  return sub_25A00AFAC(a1, (uint64_t (*)(uint64_t))sub_25A005130, sub_25A00B7C4);
}

uint64_t sub_25A00AFAC(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_25A00B030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_259FB56C4(a1, a2, *(void *)(v3 + 24), a3);
}

uint64_t sub_25A00B078(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_25A00EE20();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_25A00BF18(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v113 = result;
  uint64_t v110 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      unint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      uint64_t v101 = v11;
      uint64_t v112 = v8;
      if (v12 >= 2)
      {
        uint64_t v102 = *v110;
        do
        {
          unint64_t v103 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v102) {
            goto LABEL_159;
          }
          unint64_t v104 = v101;
          uint64_t v105 = *(void *)&v101[16 * v103 + 32];
          uint64_t v106 = *(void *)&v101[16 * v12 + 24];
          sub_25A00C108((char *)(v102 + 48 * v105), (char *)(v102 + 48 * *(void *)&v101[16 * v12 + 16]), v102 + 48 * v106, __dst);
          if (v1) {
            break;
          }
          if (v106 < v105) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v104 = sub_25A004EB4((uint64_t)v104);
          }
          if (v103 >= *((void *)v104 + 2)) {
            goto LABEL_149;
          }
          uint64_t v107 = &v104[16 * v103 + 32];
          *(void *)uint64_t v107 = v105;
          *((void *)v107 + 1) = v106;
          unint64_t v108 = *((void *)v104 + 2);
          if (v12 > v108) {
            goto LABEL_150;
          }
          memmove(&v104[16 * v12 + 16], &v104[16 * v12 + 32], 16 * (v108 - v12));
          uint64_t v101 = v104;
          *((void *)v104 + 2) = v108 - 1;
          unint64_t v12 = v108 - 1;
        }
        while (v108 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v112 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v112 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A403008);
    uint64_t v7 = sub_25A00EB90();
    *(void *)(v7 + 16) = v6;
    uint64_t v112 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v111 = *a1 + 8;
  uint64_t v109 = *a1 + 40;
  unint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v114 = v3;
  uint64_t v115 = *a1;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 48 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 48 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_25A00EE40();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v111 + 48 * v20);
    do
    {
      unint64_t v23 = (void *)(v10 + 48 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_25A00EE40()))
      {
        goto LABEL_36;
      }
      v21 += 6;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 48 * v20;
        uint64_t v26 = 48 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            long long v29 = (_OWORD *)(v10 + v26);
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = v10 + v25;
            uint64_t v32 = *(void *)(v10 + v26 + 40);
            long long v33 = *(_OWORD *)(v10 + v26 + 8);
            long long v34 = *(_OWORD *)(v10 + v26 + 24);
            long long v36 = *(_OWORD *)(v10 + v25 - 32);
            long long v35 = *(_OWORD *)(v10 + v25 - 16);
            *long long v29 = *(_OWORD *)(v10 + v25 - 48);
            v29[1] = v36;
            v29[2] = v35;
            *(void *)(v31 - 48) = v30;
            *(_OWORD *)(v31 - 40) = v33;
            *(_OWORD *)(v31 - 24) = v34;
            *(void *)(v31 - 8) = v32;
          }
          ++v28;
          v25 -= 48;
          v26 += 48;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v113) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v11 = sub_25A004A90(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v51 = *((void *)v11 + 2);
    unint64_t v50 = *((void *)v11 + 3);
    unint64_t v12 = v51 + 1;
    if (v51 >= v50 >> 1) {
      unint64_t v11 = sub_25A004A90((char *)(v50 > 1), v51 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v52 = v11 + 32;
    unint64_t v53 = &v11[16 * v51 + 32];
    *(void *)unint64_t v53 = v13;
    *((void *)v53 + 1) = v9;
    if (v51)
    {
      uint64_t v10 = v115;
      while (1)
      {
        unint64_t v54 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v59 = &v52[16 * v12];
          uint64_t v60 = *((void *)v59 - 8);
          uint64_t v61 = *((void *)v59 - 7);
          BOOL v65 = __OFSUB__(v61, v60);
          uint64_t v62 = v61 - v60;
          if (v65) {
            goto LABEL_135;
          }
          uint64_t v64 = *((void *)v59 - 6);
          uint64_t v63 = *((void *)v59 - 5);
          BOOL v65 = __OFSUB__(v63, v64);
          uint64_t v57 = v63 - v64;
          char v58 = v65;
          if (v65) {
            goto LABEL_136;
          }
          unint64_t v66 = v12 - 2;
          uint64_t v67 = &v52[16 * v12 - 32];
          uint64_t v69 = *(void *)v67;
          uint64_t v68 = *((void *)v67 + 1);
          BOOL v65 = __OFSUB__(v68, v69);
          uint64_t v70 = v68 - v69;
          if (v65) {
            goto LABEL_138;
          }
          BOOL v65 = __OFADD__(v57, v70);
          uint64_t v71 = v57 + v70;
          if (v65) {
            goto LABEL_141;
          }
          if (v71 >= v62)
          {
            uint64_t v89 = &v52[16 * v54];
            uint64_t v91 = *(void *)v89;
            uint64_t v90 = *((void *)v89 + 1);
            BOOL v65 = __OFSUB__(v90, v91);
            uint64_t v92 = v90 - v91;
            if (v65) {
              goto LABEL_145;
            }
            BOOL v82 = v57 < v92;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v83 = *((void *)v11 + 4);
            uint64_t v84 = *((void *)v11 + 5);
            BOOL v65 = __OFSUB__(v84, v83);
            uint64_t v76 = v84 - v83;
            char v77 = v65;
            goto LABEL_99;
          }
          uint64_t v56 = *((void *)v11 + 4);
          uint64_t v55 = *((void *)v11 + 5);
          BOOL v65 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          char v58 = v65;
        }
        if (v58) {
          goto LABEL_137;
        }
        unint64_t v66 = v12 - 2;
        BOOL v72 = &v52[16 * v12 - 32];
        uint64_t v74 = *(void *)v72;
        uint64_t v73 = *((void *)v72 + 1);
        BOOL v75 = __OFSUB__(v73, v74);
        uint64_t v76 = v73 - v74;
        char v77 = v75;
        if (v75) {
          goto LABEL_140;
        }
        char v78 = &v52[16 * v54];
        uint64_t v80 = *(void *)v78;
        uint64_t v79 = *((void *)v78 + 1);
        BOOL v65 = __OFSUB__(v79, v80);
        uint64_t v81 = v79 - v80;
        if (v65) {
          goto LABEL_143;
        }
        if (__OFADD__(v76, v81)) {
          goto LABEL_144;
        }
        if (v76 + v81 >= v57)
        {
          BOOL v82 = v57 < v81;
LABEL_105:
          if (v82) {
            unint64_t v54 = v66;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v77) {
          goto LABEL_139;
        }
        unint64_t v85 = &v52[16 * v54];
        uint64_t v87 = *(void *)v85;
        uint64_t v86 = *((void *)v85 + 1);
        BOOL v65 = __OFSUB__(v86, v87);
        uint64_t v88 = v86 - v87;
        if (v65) {
          goto LABEL_142;
        }
        if (v88 < v76) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v93 = v54 - 1;
        if (v54 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v10) {
          goto LABEL_157;
        }
        unint64_t v94 = v11;
        uint64_t v95 = v10;
        uint64_t v96 = &v52[16 * v93];
        uint64_t v97 = *(void *)v96;
        unint64_t v98 = &v52[16 * v54];
        uint64_t v99 = *((void *)v98 + 1);
        sub_25A00C108((char *)(v95 + 48 * *(void *)v96), (char *)(v95 + 48 * *(void *)v98), v95 + 48 * v99, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v99 < v97) {
          goto LABEL_132;
        }
        if (v54 > *((void *)v94 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v96 = v97;
        *(void *)&v52[16 * v93 + 8] = v99;
        unint64_t v100 = *((void *)v94 + 2);
        if (v54 >= v100) {
          goto LABEL_134;
        }
        unint64_t v11 = v94;
        unint64_t v12 = v100 - 1;
        memmove(&v52[16 * v54], v98 + 16, 16 * (v100 - 1 - v54));
        *((void *)v94 + 2) = v100 - 1;
        BOOL v82 = v100 > 2;
        uint64_t v10 = v115;
        if (!v82) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
    uint64_t v10 = v115;
LABEL_15:
    uint64_t v3 = v114;
    if (v9 >= v114)
    {
      uint64_t v8 = v112;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v113)) {
    goto LABEL_153;
  }
  if (v13 + v113 >= v3) {
    uint64_t v37 = v3;
  }
  else {
    uint64_t v37 = v13 + v113;
  }
  if (v37 >= v13)
  {
    if (v9 != v37)
    {
      uint64_t v38 = v109 + 48 * v9;
      do
      {
        char v39 = (uint64_t *)(v10 + 48 * v9);
        uint64_t v40 = *v39;
        uint64_t v41 = v39[1];
        uint64_t v42 = v13;
        uint64_t v43 = v38;
        do
        {
          char v44 = (_OWORD *)(v43 - 88);
          BOOL v45 = v40 == *(void *)(v43 - 88) && v41 == *(void *)(v43 - 80);
          if (v45 || (sub_25A00EE40() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          long long v47 = *(_OWORD *)(v43 - 72);
          long long v46 = *(_OWORD *)(v43 - 56);
          *(void *)(v43 - 48) = *(void *)v43;
          v43 -= 48;
          uint64_t v40 = *(void *)(v43 + 8);
          long long v48 = *(_OWORD *)(v43 + 16);
          long long v49 = *(_OWORD *)(v43 + 32);
          v44[3] = *v44;
          v44[4] = v47;
          v44[5] = v46;
          *(void *)(v43 - 40) = v40;
          *(_OWORD *)(v43 - 32) = v48;
          *(_OWORD *)(v43 - 16) = v49;
          uint64_t v41 = v48;
          ++v42;
        }
        while (v9 != v42);
        ++v9;
        v38 += 48;
      }
      while (v9 != v37);
      uint64_t v9 = v37;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_25A00EDA0();
  __break(1u);
  return result;
}

uint64_t sub_25A00B7C4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_25A00EE20();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_25A00C00C(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v113 = result;
  uint64_t v110 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      unint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      uint64_t v101 = v11;
      uint64_t v112 = v8;
      if (v12 >= 2)
      {
        uint64_t v102 = *v110;
        do
        {
          unint64_t v103 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v102) {
            goto LABEL_159;
          }
          unint64_t v104 = v101;
          uint64_t v105 = *(void *)&v101[16 * v103 + 32];
          uint64_t v106 = *(void *)&v101[16 * v12 + 24];
          sub_25A00C108((char *)(v102 + 48 * v105), (char *)(v102 + 48 * *(void *)&v101[16 * v12 + 16]), v102 + 48 * v106, __dst);
          if (v1) {
            break;
          }
          if (v106 < v105) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v104 = sub_25A004EB4((uint64_t)v104);
          }
          if (v103 >= *((void *)v104 + 2)) {
            goto LABEL_149;
          }
          uint64_t v107 = &v104[16 * v103 + 32];
          *(void *)uint64_t v107 = v105;
          *((void *)v107 + 1) = v106;
          unint64_t v108 = *((void *)v104 + 2);
          if (v12 > v108) {
            goto LABEL_150;
          }
          memmove(&v104[16 * v12 + 16], &v104[16 * v12 + 32], 16 * (v108 - v12));
          uint64_t v101 = v104;
          *((void *)v104 + 2) = v108 - 1;
          unint64_t v12 = v108 - 1;
        }
        while (v108 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v112 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v112 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A403000);
    uint64_t v7 = sub_25A00EB90();
    *(void *)(v7 + 16) = v6;
    uint64_t v112 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v111 = *a1 + 8;
  uint64_t v109 = *a1 + 32;
  unint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v114 = v3;
  uint64_t v115 = *a1;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 48 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 48 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_25A00EE40();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v111 + 48 * v20);
    do
    {
      unint64_t v23 = (void *)(v10 + 48 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_25A00EE40()))
      {
        goto LABEL_36;
      }
      v21 += 6;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 48 * v20;
        uint64_t v26 = 48 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            long long v29 = (_OWORD *)(v10 + v26);
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = v10 + v25;
            uint64_t v32 = *(void *)(v10 + v26 + 24);
            long long v33 = *(_OWORD *)(v10 + v26 + 8);
            long long v34 = *(_OWORD *)(v10 + v26 + 32);
            long long v36 = *(_OWORD *)(v10 + v25 - 32);
            long long v35 = *(_OWORD *)(v10 + v25 - 16);
            *long long v29 = *(_OWORD *)(v10 + v25 - 48);
            v29[1] = v36;
            v29[2] = v35;
            *(void *)(v31 - 48) = v30;
            *(_OWORD *)(v31 - 40) = v33;
            *(void *)(v31 - 24) = v32;
            *(_OWORD *)(v31 - 16) = v34;
          }
          ++v28;
          v25 -= 48;
          v26 += 48;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v113) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v11 = sub_25A004A90(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v51 = *((void *)v11 + 2);
    unint64_t v50 = *((void *)v11 + 3);
    unint64_t v12 = v51 + 1;
    if (v51 >= v50 >> 1) {
      unint64_t v11 = sub_25A004A90((char *)(v50 > 1), v51 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v52 = v11 + 32;
    unint64_t v53 = &v11[16 * v51 + 32];
    *(void *)unint64_t v53 = v13;
    *((void *)v53 + 1) = v9;
    if (v51)
    {
      uint64_t v10 = v115;
      while (1)
      {
        unint64_t v54 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v59 = &v52[16 * v12];
          uint64_t v60 = *((void *)v59 - 8);
          uint64_t v61 = *((void *)v59 - 7);
          BOOL v65 = __OFSUB__(v61, v60);
          uint64_t v62 = v61 - v60;
          if (v65) {
            goto LABEL_135;
          }
          uint64_t v64 = *((void *)v59 - 6);
          uint64_t v63 = *((void *)v59 - 5);
          BOOL v65 = __OFSUB__(v63, v64);
          uint64_t v57 = v63 - v64;
          char v58 = v65;
          if (v65) {
            goto LABEL_136;
          }
          unint64_t v66 = v12 - 2;
          uint64_t v67 = &v52[16 * v12 - 32];
          uint64_t v69 = *(void *)v67;
          uint64_t v68 = *((void *)v67 + 1);
          BOOL v65 = __OFSUB__(v68, v69);
          uint64_t v70 = v68 - v69;
          if (v65) {
            goto LABEL_138;
          }
          BOOL v65 = __OFADD__(v57, v70);
          uint64_t v71 = v57 + v70;
          if (v65) {
            goto LABEL_141;
          }
          if (v71 >= v62)
          {
            uint64_t v89 = &v52[16 * v54];
            uint64_t v91 = *(void *)v89;
            uint64_t v90 = *((void *)v89 + 1);
            BOOL v65 = __OFSUB__(v90, v91);
            uint64_t v92 = v90 - v91;
            if (v65) {
              goto LABEL_145;
            }
            BOOL v82 = v57 < v92;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v83 = *((void *)v11 + 4);
            uint64_t v84 = *((void *)v11 + 5);
            BOOL v65 = __OFSUB__(v84, v83);
            uint64_t v76 = v84 - v83;
            char v77 = v65;
            goto LABEL_99;
          }
          uint64_t v56 = *((void *)v11 + 4);
          uint64_t v55 = *((void *)v11 + 5);
          BOOL v65 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          char v58 = v65;
        }
        if (v58) {
          goto LABEL_137;
        }
        unint64_t v66 = v12 - 2;
        BOOL v72 = &v52[16 * v12 - 32];
        uint64_t v74 = *(void *)v72;
        uint64_t v73 = *((void *)v72 + 1);
        BOOL v75 = __OFSUB__(v73, v74);
        uint64_t v76 = v73 - v74;
        char v77 = v75;
        if (v75) {
          goto LABEL_140;
        }
        char v78 = &v52[16 * v54];
        uint64_t v80 = *(void *)v78;
        uint64_t v79 = *((void *)v78 + 1);
        BOOL v65 = __OFSUB__(v79, v80);
        uint64_t v81 = v79 - v80;
        if (v65) {
          goto LABEL_143;
        }
        if (__OFADD__(v76, v81)) {
          goto LABEL_144;
        }
        if (v76 + v81 >= v57)
        {
          BOOL v82 = v57 < v81;
LABEL_105:
          if (v82) {
            unint64_t v54 = v66;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v77) {
          goto LABEL_139;
        }
        unint64_t v85 = &v52[16 * v54];
        uint64_t v87 = *(void *)v85;
        uint64_t v86 = *((void *)v85 + 1);
        BOOL v65 = __OFSUB__(v86, v87);
        uint64_t v88 = v86 - v87;
        if (v65) {
          goto LABEL_142;
        }
        if (v88 < v76) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v93 = v54 - 1;
        if (v54 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v10) {
          goto LABEL_157;
        }
        unint64_t v94 = v11;
        uint64_t v95 = v10;
        uint64_t v96 = &v52[16 * v93];
        uint64_t v97 = *(void *)v96;
        unint64_t v98 = &v52[16 * v54];
        uint64_t v99 = *((void *)v98 + 1);
        sub_25A00C108((char *)(v95 + 48 * *(void *)v96), (char *)(v95 + 48 * *(void *)v98), v95 + 48 * v99, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v99 < v97) {
          goto LABEL_132;
        }
        if (v54 > *((void *)v94 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v96 = v97;
        *(void *)&v52[16 * v93 + 8] = v99;
        unint64_t v100 = *((void *)v94 + 2);
        if (v54 >= v100) {
          goto LABEL_134;
        }
        unint64_t v11 = v94;
        unint64_t v12 = v100 - 1;
        memmove(&v52[16 * v54], v98 + 16, 16 * (v100 - 1 - v54));
        *((void *)v94 + 2) = v100 - 1;
        BOOL v82 = v100 > 2;
        uint64_t v10 = v115;
        if (!v82) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
    uint64_t v10 = v115;
LABEL_15:
    uint64_t v3 = v114;
    if (v9 >= v114)
    {
      uint64_t v8 = v112;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v113)) {
    goto LABEL_153;
  }
  if (v13 + v113 >= v3) {
    uint64_t v37 = v3;
  }
  else {
    uint64_t v37 = v13 + v113;
  }
  if (v37 >= v13)
  {
    if (v9 != v37)
    {
      uint64_t v38 = v109 + 48 * v9;
      do
      {
        char v39 = (uint64_t *)(v10 + 48 * v9);
        uint64_t v40 = *v39;
        uint64_t v41 = v39[1];
        uint64_t v42 = v13;
        uint64_t v43 = v38;
        do
        {
          char v44 = (_OWORD *)(v43 - 80);
          BOOL v45 = v40 == *(void *)(v43 - 80) && v41 == *(void *)(v43 - 72);
          if (v45 || (sub_25A00EE40() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          long long v47 = *(_OWORD *)(v43 - 64);
          long long v46 = *(_OWORD *)(v43 - 48);
          *(_OWORD *)(v43 - 48) = *(_OWORD *)v43;
          v43 -= 48;
          uint64_t v40 = *(void *)(v43 + 16);
          uint64_t v48 = *(void *)(v43 + 40);
          long long v49 = *(_OWORD *)(v43 + 24);
          v44[3] = *v44;
          v44[4] = v47;
          v44[5] = v46;
          *(void *)(v43 - 32) = v40;
          *(_OWORD *)(v43 - 24) = v49;
          *(void *)(v43 - 8) = v48;
          uint64_t v41 = v49;
          ++v42;
        }
        while (v9 != v42);
        ++v9;
        v38 += 48;
      }
      while (v9 != v37);
      uint64_t v9 = v37;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_25A00EDA0();
  __break(1u);
  return result;
}

uint64_t sub_25A00BF18(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 48 * a3 + 40;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 48 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    uint64_t v12 = v8;
    while (1)
    {
      uint64_t v13 = (_OWORD *)(v12 - 88);
      BOOL v14 = result == *(void *)(v12 - 88) && v10 == *(void *)(v12 - 80);
      if (v14 || (uint64_t result = sub_25A00EE40(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 48;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      long long v16 = *(_OWORD *)(v12 - 72);
      long long v15 = *(_OWORD *)(v12 - 56);
      *(void *)(v12 - 48) = *(void *)v12;
      v12 -= 48;
      uint64_t result = *(void *)(v12 + 8);
      long long v17 = *(_OWORD *)(v12 + 16);
      long long v18 = *(_OWORD *)(v12 + 32);
      void v13[3] = *v13;
      v13[4] = v16;
      uint64_t v13[5] = v15;
      *(void *)(v12 - 40) = result;
      *(_OWORD *)(v12 - 32) = v17;
      *(_OWORD *)(v12 - 16) = v18;
      uint64_t v10 = v17;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_25A00C00C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 48 * a3 + 32;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 48 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    uint64_t v12 = v8;
    while (1)
    {
      uint64_t v13 = (_OWORD *)(v12 - 80);
      BOOL v14 = result == *(void *)(v12 - 80) && v10 == *(void *)(v12 - 72);
      if (v14 || (uint64_t result = sub_25A00EE40(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 48;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      long long v16 = *(_OWORD *)(v12 - 64);
      long long v15 = *(_OWORD *)(v12 - 48);
      *(_OWORD *)(v12 - 48) = *(_OWORD *)v12;
      v12 -= 48;
      uint64_t result = *(void *)(v12 + 16);
      uint64_t v17 = *(void *)(v12 + 40);
      long long v18 = *(_OWORD *)(v12 + 24);
      void v13[3] = *v13;
      v13[4] = v16;
      uint64_t v13[5] = v15;
      *(void *)(v12 - 32) = result;
      *(_OWORD *)(v12 - 24) = v18;
      *(void *)(v12 - 8) = v17;
      uint64_t v10 = v18;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_25A00C108(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 48;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 48;
  long long v33 = __src;
  uint64_t v32 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -47)
    {
      if (__dst != a2 || &a2[48 * v11] <= __dst) {
        memmove(__dst, a2, 48 * v11);
      }
      int v19 = &v4[48 * v11];
      uint64_t v31 = v19;
      long long v33 = v6;
      if (v7 < v6 && v10 >= 48)
      {
        uint64_t v20 = (char *)(a3 - 48);
        uint64_t v21 = v6;
        while (1)
        {
          uint64_t v22 = v20 + 48;
          uint64_t v23 = *((void *)v21 - 6);
          uint64_t v24 = *((void *)v21 - 5);
          v21 -= 48;
          BOOL v25 = *((void *)v19 - 6) == v23 && *((void *)v19 - 5) == v24;
          if (v25 || (sub_25A00EE40() & 1) == 0)
          {
            uint64_t v31 = v19 - 48;
            if (v22 < v19 || v20 >= v19 || v22 != v19)
            {
              long long v28 = *((_OWORD *)v19 - 3);
              long long v29 = *((_OWORD *)v19 - 1);
              *((_OWORD *)v20 + 1) = *((_OWORD *)v19 - 2);
              *((_OWORD *)v20 + 2) = v29;
              *(_OWORD *)uint64_t v20 = v28;
            }
            uint64_t v21 = v6;
            v19 -= 48;
            if (v6 <= v7) {
              goto LABEL_46;
            }
          }
          else
          {
            if (v22 != v6 || v20 >= v6)
            {
              long long v26 = *(_OWORD *)v21;
              long long v27 = *((_OWORD *)v21 + 2);
              *((_OWORD *)v20 + 1) = *((_OWORD *)v21 + 1);
              *((_OWORD *)v20 + 2) = v27;
              *(_OWORD *)uint64_t v20 = v26;
            }
            long long v33 = v21;
            if (v21 <= v7) {
              goto LABEL_46;
            }
          }
          v20 -= 48;
          uint64_t v6 = v21;
          if (v19 <= v4) {
            goto LABEL_46;
          }
        }
      }
      goto LABEL_46;
    }
  }
  else if (v8 >= -47)
  {
    if (__dst != __src || &__src[48 * v9] <= __dst) {
      memmove(__dst, __src, 48 * v9);
    }
    uint64_t v12 = &v4[48 * v9];
    uint64_t v31 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 48)
    {
      do
      {
        BOOL v13 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v13 || (sub_25A00EE40() & 1) == 0)
        {
          if (v7 != v4)
          {
            long long v17 = *(_OWORD *)v4;
            long long v18 = *((_OWORD *)v4 + 2);
            *((_OWORD *)v7 + 1) = *((_OWORD *)v4 + 1);
            *((_OWORD *)v7 + 2) = v18;
            *(_OWORD *)uint64_t v7 = v17;
          }
          v4 += 48;
          uint64_t v32 = v4;
          BOOL v14 = v6;
        }
        else
        {
          BOOL v14 = v6 + 48;
          if (v7 < v6 || v7 >= v14 || v7 != v6)
          {
            long long v15 = *(_OWORD *)v6;
            long long v16 = *((_OWORD *)v6 + 2);
            *((_OWORD *)v7 + 1) = *((_OWORD *)v6 + 1);
            *((_OWORD *)v7 + 2) = v16;
            *(_OWORD *)uint64_t v7 = v15;
          }
        }
        v7 += 48;
        if (v4 >= v12) {
          break;
        }
        uint64_t v6 = v14;
      }
      while ((unint64_t)v14 < a3);
      long long v33 = v7;
    }
LABEL_46:
    sub_25A004DE4((void **)&v33, (const void **)&v32, &v31);
    return 1;
  }
  uint64_t result = sub_25A00EDF0();
  __break(1u);
  return result;
}

uint64_t sub_25A00C3E0(uint64_t a1, void (*a2)(long long *__return_ptr, uint64_t, uint64_t, void *))
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v21 = v2;
    uint64_t v25 = MEMORY[0x263F8EE78];
    sub_259FE1564(0, v3, 0);
    uint64_t v4 = v25;
    for (unint64_t i = (uint64_t *)(a1 + 40); ; i += 6)
    {
      uint64_t v7 = *(i - 1);
      uint64_t v8 = *i;
      uint64_t v9 = i[2];
      unint64_t v10 = i[3];
      uint64_t v11 = i[4];
      v22[0] = i[1];
      v22[1] = v9;
      id v22[2] = v10;
      uint64_t v22[3] = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_259FAF3C4(v9, v10);
      swift_bridgeObjectRetain();
      a2(&v23, v7, v8, v22);
      if (v21) {
        break;
      }
      uint64_t v21 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_259FAF410(v9, v10);
      swift_bridgeObjectRelease();
      long long v12 = v23;
      long long v13 = v24;
      uint64_t v25 = v4;
      unint64_t v15 = *(void *)(v4 + 16);
      unint64_t v14 = *(void *)(v4 + 24);
      if (v15 >= v14 >> 1)
      {
        long long v18 = v24;
        long long v19 = v23;
        sub_259FE1564(v14 > 1, v15 + 1, 1);
        long long v13 = v18;
        long long v12 = v19;
        uint64_t v4 = v25;
      }
      *(void *)(v4 + 16) = v15 + 1;
      uint64_t v16 = v4 + 32 * v15;
      *(_OWORD *)(v16 + 32) = v12;
      *(_OWORD *)(v16 + 48) = v13;
      if (!--v3) {
        return v4;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259FAF410(v9, v10);
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_25A00C590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_259FC5650(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), a3);
}

uint64_t sub_25A00C5CC(uint64_t a1, void (*a2)(long long *__return_ptr, uint64_t, uint64_t, void *))
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v21 = v2;
    uint64_t v25 = MEMORY[0x263F8EE78];
    sub_259FE1564(0, v3, 0);
    uint64_t v4 = v25;
    uint64_t v6 = (unint64_t *)(a1 + 72);
    while (1)
    {
      uint64_t v7 = *(v6 - 5);
      uint64_t v8 = *(v6 - 4);
      uint64_t v9 = *(v6 - 2);
      uint64_t v10 = *(v6 - 1);
      unint64_t v11 = *v6;
      v22[0] = *(v6 - 3);
      v22[1] = v9;
      id v22[2] = v10;
      uint64_t v22[3] = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_259FAF3C4(v10, v11);
      a2(&v23, v7, v8, v22);
      if (v21) {
        break;
      }
      uint64_t v21 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_259FAF410(v10, v11);
      long long v12 = v23;
      long long v13 = v24;
      uint64_t v25 = v4;
      unint64_t v15 = *(void *)(v4 + 16);
      unint64_t v14 = *(void *)(v4 + 24);
      if (v15 >= v14 >> 1)
      {
        long long v18 = v24;
        long long v19 = v23;
        sub_259FE1564(v14 > 1, v15 + 1, 1);
        long long v13 = v18;
        long long v12 = v19;
        uint64_t v4 = v25;
      }
      v6 += 6;
      *(void *)(v4 + 16) = v15 + 1;
      uint64_t v16 = v4 + 32 * v15;
      *(_OWORD *)(v16 + 32) = v12;
      *(_OWORD *)(v16 + 48) = v13;
      if (!--v3) {
        return v4;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259FAF410(v10, v11);
    swift_release();
  }
  return v4;
}

uint64_t sub_25A00C77C@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  switch(*a1)
  {
    case 1:
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v11 = 0x8000000000000000;
      uint64_t v12 = 11;
      goto LABEL_23;
    case 2:
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v11 = 0x8000000000000000;
      uint64_t v12 = 5;
      goto LABEL_23;
    case 3:
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v11 = 0x8000000000000000;
      uint64_t v12 = 6;
      goto LABEL_23;
    case 4:
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v12 = 0;
      uint64_t v11 = 0x8000000000000000;
      goto LABEL_23;
    case 5:
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v11 = 0x8000000000000000;
      uint64_t v12 = 8;
      goto LABEL_23;
    case 6:
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v11 = 0x8000000000000000;
      uint64_t v12 = 3;
      goto LABEL_23;
    case 7:
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v11 = 0x8000000000000000;
      uint64_t v12 = 12;
      goto LABEL_23;
    case 8:
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v11 = 0x8000000000000000;
      uint64_t v12 = 13;
      goto LABEL_23;
    case 9:
      if (!a3)
      {
        sub_259FB3304();
        swift_allocError();
        uint64_t v20 = 2;
        goto LABEL_27;
      }
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 24))(a2, a3, ObjectType, a4);
      uint64_t v15 = v14;
      swift_bridgeObjectRelease();
      uint64_t result = swift_unknownObjectRelease();
      if (v5) {
        return result;
      }
      swift_getObjectType();
      MessageSchemaDescribing.asPublic()(v15, &v21);
      uint64_t result = swift_unknownObjectRelease();
      uint64_t v12 = v21;
      uint64_t v11 = v22 | 0x4000000000000000;
      goto LABEL_23;
    case 0xA:
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v11 = 0x8000000000000000;
      uint64_t v12 = 14;
      goto LABEL_23;
    case 0xB:
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v11 = 0x8000000000000000;
      uint64_t v12 = 1;
      goto LABEL_23;
    case 0xC:
      if (a3)
      {
        uint64_t v16 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 32))(a2, a3, v16, a4);
        uint64_t v18 = v17;
        swift_bridgeObjectRelease();
        uint64_t result = swift_unknownObjectRelease();
        if (!v5)
        {
          swift_getObjectType();
          EnumSchemaDescribing.asPublic()(v18, &v21);
          uint64_t result = swift_unknownObjectRelease();
          uint64_t v12 = v21;
          uint64_t v11 = v22;
LABEL_23:
          *a5 = v12;
          a5[1] = v11;
        }
      }
      else
      {
        sub_259FB3304();
        swift_allocError();
        uint64_t v20 = 3;
LABEL_27:
        *(void *)uint64_t v19 = v20;
        *(void *)(v19 + 8) = 0;
        *(unsigned char *)(v19 + 16) = 7;
        swift_willThrow();
        return swift_unknownObjectRelease();
      }
      return result;
    case 0xD:
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v11 = 0x8000000000000000;
      uint64_t v12 = 4;
      goto LABEL_23;
    case 0xE:
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v11 = 0x8000000000000000;
      uint64_t v12 = 9;
      goto LABEL_23;
    case 0xF:
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v11 = 0x8000000000000000;
      uint64_t v12 = 2;
      goto LABEL_23;
    case 0x10:
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v11 = 0x8000000000000000;
      uint64_t v12 = 7;
      goto LABEL_23;
    default:
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v11 = 0x8000000000000000;
      uint64_t v12 = 10;
      goto LABEL_23;
  }
}

unint64_t TypeSchema.description.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  if (!(v2 >> 62))
  {
    swift_unknownObjectRetain();
    sub_25A00ED10();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = *(void *)(v2 + 8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
    swift_unknownObjectRetain();
    uint64_t v9 = v8(ObjectType, v7);
    sub_259FAD1BC(v1, v2);
    swift_bridgeObjectRelease();
    uint64_t v11 = v9;
    sub_25A00EA80();
    swift_unknownObjectRetain();
    v8(ObjectType, v7);
    sub_259FAD1BC(v1, v2);
    sub_25A00EA80();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  if (v2 >> 62 == 1)
  {
    swift_unknownObjectRetain();
    sub_25A00ED10();
    swift_bridgeObjectRelease();
    uint64_t v11 = 0x206567617373656DLL;
    uint64_t v3 = swift_getObjectType();
    uint64_t v4 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 8);
    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    swift_unknownObjectRetain();
    v5(v3, v4);
    sub_259FAD1BC(v1, v2);
    sub_25A00EA80();
    swift_bridgeObjectRelease();
LABEL_5:
    sub_25A00EA80();
    sub_259FAD1BC(v1, v2);
    return v11;
  }
  unint64_t result = 0xD000000000000011;
  switch(v1)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0xD000000000000020;
      break;
    case 3:
      unint64_t result = 0xD000000000000019;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0xD000000000000020;
      break;
    case 8:
      unint64_t result = 0xD000000000000019;
      break;
    case 9:
      unint64_t result = 0xD000000000000017;
      break;
    case 10:
      unint64_t result = 0xD000000000000015;
      break;
    case 11:
      unint64_t result = 0x676E6974616F6C66;
      break;
    case 12:
      unint64_t result = 0x6E61656C6F6F62;
      break;
    case 13:
      unint64_t result = 0x7274732074786574;
      break;
    case 14:
      unint64_t result = 0x64207972616E6962;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t _s17PoirotSchematizer10TypeSchemaO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v2 = a1[1];
  uint64_t v5 = *a2;
  unint64_t v4 = a2[1];
  if (!(v2 >> 62))
  {
    if (!(v4 >> 62))
    {
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v14 = *(void *)(v2 + 8);
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
      sub_259FBAA50(v5, v4);
      sub_259FBAA50(v3, v2);
      sub_259FBAA50(v5, v4);
      sub_259FBAA50(v3, v2);
      uint64_t v55 = v15(ObjectType, v14);
      uint64_t v10 = v16;
      uint64_t v11 = swift_getObjectType();
      uint64_t v12 = *(void *)(v4 + 8);
      goto LABEL_7;
    }
LABEL_148:
    sub_259FBAA50(*a2, a2[1]);
    sub_259FBAA50(v3, v2);
    sub_259FAD1BC(v3, v2);
    sub_259FAD1BC(v5, v4);
    char v22 = 0;
    return v22 & 1;
  }
  if (v2 >> 62 == 1)
  {
    if (v4 >> 62 == 1)
    {
      uint64_t v6 = swift_getObjectType();
      uint64_t v7 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 8);
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
      sub_259FBAA50(v5, v4);
      sub_259FBAA50(v3, v2);
      sub_259FBAA50(v5, v4);
      sub_259FBAA50(v3, v2);
      uint64_t v55 = v8(v6, v7);
      uint64_t v10 = v9;
      uint64_t v11 = swift_getObjectType();
      uint64_t v12 = *(void *)((v4 & 0x3FFFFFFFFFFFFFFFLL) + 8);
LABEL_7:
      uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
      swift_unknownObjectRetain();
      uint64_t v18 = v17(v11, v12);
      uint64_t v20 = v19;
      sub_259FAD1BC(v5, v4);
      if (v55 == v18 && v10 == v20) {
        char v22 = 1;
      }
      else {
        char v22 = sub_25A00EE40();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_259FAD1BC(v5, v4);
      sub_259FAD1BC(v3, v2);
      sub_259FAD1BC(v3, v2);
      sub_259FAD1BC(v5, v4);
      return v22 & 1;
    }
    goto LABEL_148;
  }
  switch(v3)
  {
    case 1:
      if (v4 >> 62 != 2 || v5 != 1 || v4 != 0x8000000000000000) {
        goto LABEL_148;
      }
      sub_259FAD1BC(*a1, v2);
      char v22 = 1;
      sub_259FAD1BC(1, 0x8000000000000000);
      return v22 & 1;
    case 2:
      if (v4 >> 62 != 2 || v5 != 2 || v4 != 0x8000000000000000) {
        goto LABEL_148;
      }
      sub_259FAD1BC(*a1, v2);
      uint64_t v25 = 2;
      goto LABEL_151;
    case 3:
      if (v4 >> 62 != 2 || v5 != 3 || v4 != 0x8000000000000000) {
        goto LABEL_148;
      }
      sub_259FAD1BC(*a1, v2);
      uint64_t v25 = 3;
      goto LABEL_151;
    case 4:
      if (v4 >> 62 != 2 || v5 != 4 || v4 != 0x8000000000000000) {
        goto LABEL_148;
      }
      sub_259FAD1BC(*a1, v2);
      uint64_t v25 = 4;
      goto LABEL_151;
    case 5:
      if (v4 >> 62 != 2 || v5 != 5 || v4 != 0x8000000000000000) {
        goto LABEL_148;
      }
      sub_259FAD1BC(*a1, v2);
      uint64_t v25 = 5;
      goto LABEL_151;
    case 6:
      if (v4 >> 62 != 2 || v5 != 6 || v4 != 0x8000000000000000) {
        goto LABEL_148;
      }
      sub_259FAD1BC(*a1, v2);
      uint64_t v25 = 6;
      goto LABEL_151;
    case 7:
      if (v4 >> 62 != 2 || v5 != 7 || v4 != 0x8000000000000000) {
        goto LABEL_148;
      }
      sub_259FAD1BC(*a1, v2);
      uint64_t v25 = 7;
      goto LABEL_151;
    case 8:
      if (v4 >> 62 != 2 || v5 != 8 || v4 != 0x8000000000000000) {
        goto LABEL_148;
      }
      sub_259FAD1BC(*a1, v2);
      uint64_t v25 = 8;
      goto LABEL_151;
    case 9:
      if (v4 >> 62 != 2 || v5 != 9 || v4 != 0x8000000000000000) {
        goto LABEL_148;
      }
      sub_259FAD1BC(*a1, v2);
      uint64_t v25 = 9;
      goto LABEL_151;
    case 10:
      if (v4 >> 62 != 2 || v5 != 10 || v4 != 0x8000000000000000) {
        goto LABEL_148;
      }
      sub_259FAD1BC(*a1, v2);
      uint64_t v25 = 10;
      goto LABEL_151;
    case 11:
      if (v4 >> 62 != 2 || v5 != 11 || v4 != 0x8000000000000000) {
        goto LABEL_148;
      }
      sub_259FAD1BC(*a1, v2);
      uint64_t v25 = 11;
      goto LABEL_151;
    case 12:
      if (v4 >> 62 != 2 || v5 != 12 || v4 != 0x8000000000000000) {
        goto LABEL_148;
      }
      sub_259FAD1BC(*a1, v2);
      uint64_t v25 = 12;
      goto LABEL_151;
    case 13:
      if (v4 >> 62 != 2 || v5 != 13 || v4 != 0x8000000000000000) {
        goto LABEL_148;
      }
      sub_259FAD1BC(*a1, v2);
      uint64_t v25 = 13;
      goto LABEL_151;
    case 14:
      if (v4 >> 62 != 2 || v5 != 14 || v4 != 0x8000000000000000) {
        goto LABEL_148;
      }
      sub_259FAD1BC(*a1, v2);
      uint64_t v25 = 14;
      goto LABEL_151;
    default:
      if (v4 >> 62 != 2 || v5 != 0 || v4 != 0x8000000000000000) {
        goto LABEL_148;
      }
      sub_259FAD1BC(*a1, v2);
      uint64_t v25 = 0;
LABEL_151:
      sub_259FAD1BC(v25, 0x8000000000000000);
      char v22 = 1;
      break;
  }
  return v22 & 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for TypeSchema(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  sub_259FBAA50(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t *assignWithCopy for TypeSchema(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  sub_259FBAA50(*a2, v4);
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_259FAD1BC(v5, v6);
  return a1;
}

uint64_t *assignWithTake for TypeSchema(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_259FAD1BC(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for TypeSchema(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 57) >> 5) | (4
                                                          * ((*(void *)(a1 + 8) >> 57) & 0x18 | *(void *)(a1 + 8) & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TypeSchema(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)unint64_t result = a2 - 126;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_25A00D5E0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8) >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_25A00D5FC(uint64_t result)
{
  *(void *)(result + 8) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t UnsafeRawBufferPointer.safeData()(uint64_t a1, uint64_t a2)
{
  v8[3] = MEMORY[0x263F8D3E8];
  uint64_t v8[4] = MEMORY[0x263F07B80];
  v8[0] = a1;
  v8[1] = a2;
  unint64_t v2 = __swift_project_boxed_opaque_existential_1(v8, MEMORY[0x263F8D3E8]);
  uint64_t v3 = (unsigned char *)*v2;
  if (*v2 && (uint64_t v4 = (unsigned char *)v2[1], v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      uint64_t v6 = sub_259FC3B50(v3, v4);
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      uint64_t v6 = sub_259FC3C98((uint64_t)v3, (uint64_t)v4);
    }
    else
    {
      uint64_t v6 = sub_259FC3C14((uint64_t)v3, (uint64_t)v4);
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v6;
}

uint64_t String.asUnsafe<A>(_:)()
{
  return swift_bridgeObjectRelease();
}

Swift::String __swiftcall UnsafeRawBufferPointer.safeString()()
{
  uint64_t v0 = sub_25A00EA30();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t sub_25A00D7A4()
{
  if (*v0) {
    return v0[1] - *v0;
  }
  else {
    return 0;
  }
}

uint64_t sub_25A00D7C0(uint64_t a1)
{
  uint64_t v9 = a1;
  uint64_t v10 = MEMORY[0x263F07B80];
  long long v8 = *v1;
  unint64_t v2 = __swift_project_boxed_opaque_existential_1(&v8, a1);
  uint64_t v3 = (unsigned char *)*v2;
  if (*v2 && (uint64_t v4 = (unsigned char *)v2[1], v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      uint64_t v6 = sub_259FC3B50(v3, v4);
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      uint64_t v6 = sub_259FC3C98((uint64_t)v3, (uint64_t)v4);
    }
    else
    {
      uint64_t v6 = sub_259FC3C14((uint64_t)v3, (uint64_t)v4);
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
  return v6;
}

uint64_t sub_25A00D878()
{
  return sub_25A00EB60();
}

uint64_t Data.safeData()(uint64_t a1, unint64_t a2)
{
  return a1;
}

Swift::String __swiftcall Data.safeString()()
{
  switch(v1 >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(v0), v0)) {
        goto LABEL_5;
      }
      __break(1u);
LABEL_7:
      __break(1u);
      JUMPOUT(0x25A00D988);
    case 2uLL:
      if (!__OFSUB__(*(void *)(v0 + 24), *(void *)(v0 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_7;
    default:
LABEL_5:
      ((void (*)())MEMORY[0x270FA5388])();
      uint64_t v2 = sub_25A00EA30();
      result._object = v3;
      result._uint64_t countAndFlagsBits = v2;
      return result;
  }
}

uint64_t sub_25A00D998(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = sub_25A00E360();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_259FAE450(a3, a4);
  sub_25A00E300();
  sub_259FAE4A8(a3, a4);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t result = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a3), a3))
      {
        __break(1u);
LABEL_8:
        __break(1u);
        JUMPOUT(0x25A00DB0CLL);
      }
      return HIDWORD(a3) - (int)a3;
    case 2uLL:
      uint64_t v12 = *(void *)(a3 + 16);
      uint64_t v11 = *(void *)(a3 + 24);
      uint64_t result = v11 - v12;
      if (!__OFSUB__(v11, v12)) {
        return result;
      }
      goto LABEL_8;
    case 3uLL:
      return result;
    default:
      return BYTE6(a4);
  }
}

uint64_t sub_25A00DB1C()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t result = 0;
  switch(v2 >> 62)
  {
    case 1uLL:
      BOOL v4 = __OFSUB__(HIDWORD(v1), v1);
      int v5 = HIDWORD(v1) - v1;
      if (v4)
      {
        __break(1u);
LABEL_8:
        __break(1u);
        JUMPOUT(0x25A00DB7CLL);
      }
      return v5;
    case 2uLL:
      uint64_t v8 = v1 + 16;
      uint64_t v6 = *(void *)(v1 + 16);
      uint64_t v7 = *(void *)(v8 + 8);
      uint64_t result = v7 - v6;
      if (!__OFSUB__(v7, v6)) {
        return result;
      }
      goto LABEL_8;
    case 3uLL:
      return result;
    default:
      return BYTE6(v2);
  }
}

uint64_t sub_25A00DB8C()
{
  uint64_t v1 = *(void *)v0;
  sub_259FAE450(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t sub_25A00DBC0()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = 0;
  switch(v2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v1), v1))
      {
        __break(1u);
LABEL_8:
        __break(1u);
        JUMPOUT(0x25A00DC80);
      }
      uint64_t v3 = HIDWORD(v1) - (int)v1;
LABEL_6:
      MEMORY[0x270FA5388](v3);
      return sub_25A00EA30();
    case 2uLL:
      uint64_t v5 = *(void *)(v1 + 16);
      uint64_t v4 = *(void *)(v1 + 24);
      uint64_t v3 = v4 - v5;
      if (!__OFSUB__(v4, v5)) {
        goto LABEL_6;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v3 = BYTE6(v2);
      goto LABEL_6;
  }
}

uint64_t sub_25A00DC90()
{
  return sub_25A00E340();
}

uint64_t sub_25A00DCB0(uint64_t (*a1)(void *, uint64_t))
{
  uint64_t v3 = *v1;
  unint64_t v4 = v1[1];
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v6 = HIBYTE(v4) & 0xF;
    v10[0] = v3;
    v10[1] = v4 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v5 = v10;
    return a1(v5, v6);
  }
  uint64_t v3 = sub_25A0032C4();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  *uint64_t v1 = v3;
  v1[1] = v8;
  unint64_t v4 = v8;
  if ((v8 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v3 & 0x1000000000000000) != 0)
  {
    uint64_t v5 = (void *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v5 = (void *)sub_25A00ED30();
  }
  return a1(v5, v6);
}

uint64_t SQLiteContext.setString(_:)(uint64_t a1)
{
  sub_25A00E020(a1, (uint64_t)&v4);
  if (v5)
  {
    sub_259FAF0F0(&v4, (uint64_t)v6);
    uint64_t v1 = v6[4];
    unint64_t v2 = __swift_project_boxed_opaque_existential_1(v6, v6[3]);
    MEMORY[0x270FA5388](v2);
    (*(void (**)(void (*)(const char *, uint64_t)))(v1 + 32))(sub_25A00E0E8);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  else
  {
    sub_25A00E088((uint64_t)&v4);
    return sub_25A00E3C0();
  }
}

void sub_25A00DE64(const char *a1, uint64_t a2)
{
  uint64_t v4 = sub_25A00E390();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25A00E3B0();
  if (a1) {
    uint64_t v9 = a2 - (void)a1;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v9 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v9 <= 0x7FFFFFFF)
  {
    uint64_t v10 = (sqlite3_context *)v8;
    sub_25A00E380();
    uint64_t v11 = (void (__cdecl *)(void *))sub_25A00E370();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sqlite3_result_text(v10, a1, v9, v11);
    return;
  }
  __break(1u);
}

uint64_t sub_25A00DF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(void *))(v2 + 24);
  uint64_t v4 = a1 + a2;
  v6[3] = MEMORY[0x263F8D3E8];
  v6[4] = &protocol witness table for UnsafeRawBufferPointer;
  if (!a1) {
    uint64_t v4 = 0;
  }
  v6[0] = a1;
  v6[1] = v4;
  v3(v6);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t sub_25A00E004(uint64_t a1, uint64_t a2)
{
  return sub_25A00D998(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_25A00E020(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A403098);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25A00E088(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A403098);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_25A00E0E8(const char *a1, uint64_t a2)
{
}

uint64_t dispatch thunk of DataValueDescribing.count.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DataValueDescribing.safeData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DataValueDescribing.safeString()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of DataValueDescribing.withUnsafeBytes<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t sub_25A00E168(uint64_t a1, uint64_t a2)
{
  return sub_25A00E004(a1, a2);
}

uint64_t sub_25A00E180()
{
  return MEMORY[0x270EEDE28]();
}

uint64_t sub_25A00E190()
{
  return MEMORY[0x270EEDE38]();
}

uint64_t sub_25A00E1A0()
{
  return MEMORY[0x270EEDE58]();
}

uint64_t sub_25A00E1B0()
{
  return MEMORY[0x270EEDE70]();
}

uint64_t sub_25A00E1C0()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_25A00E1D0()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_25A00E1E0()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_25A00E1F0()
{
  return MEMORY[0x270EEE098]();
}

uint64_t sub_25A00E200()
{
  return MEMORY[0x270EEE0C0]();
}

uint64_t sub_25A00E210()
{
  return MEMORY[0x270EEE0D0]();
}

uint64_t sub_25A00E220()
{
  return MEMORY[0x270EEE1A8]();
}

uint64_t sub_25A00E230()
{
  return MEMORY[0x270EEE1E8]();
}

uint64_t sub_25A00E240()
{
  return MEMORY[0x270EEE200]();
}

uint64_t sub_25A00E250()
{
  return MEMORY[0x270EEE258]();
}

uint64_t sub_25A00E260()
{
  return MEMORY[0x270EEE628]();
}

uint64_t sub_25A00E270()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_25A00E280()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_25A00E290()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_25A00E2A0()
{
  return MEMORY[0x270EEE680]();
}

uint64_t sub_25A00E2B0()
{
  return MEMORY[0x270EEE688]();
}

uint64_t sub_25A00E2C0()
{
  return MEMORY[0x270EEE920]();
}

uint64_t sub_25A00E2D0()
{
  return MEMORY[0x270EEE930]();
}

uint64_t sub_25A00E2E0()
{
  return MEMORY[0x270EEE950]();
}

uint64_t sub_25A00E2F0()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_25A00E300()
{
  return MEMORY[0x270EF0048]();
}

uint64_t sub_25A00E310()
{
  return MEMORY[0x270EF0070]();
}

uint64_t sub_25A00E320()
{
  return MEMORY[0x270EF0090]();
}

uint64_t sub_25A00E330()
{
  return MEMORY[0x270EF00B0]();
}

uint64_t sub_25A00E340()
{
  return MEMORY[0x270EF00F8]();
}

uint64_t sub_25A00E350()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_25A00E360()
{
  return MEMORY[0x270EF0238]();
}

uint64_t sub_25A00E370()
{
  return MEMORY[0x270F549C8]();
}

uint64_t sub_25A00E380()
{
  return MEMORY[0x270F549D8]();
}

uint64_t sub_25A00E390()
{
  return MEMORY[0x270F549E0]();
}

uint64_t sub_25A00E3A0()
{
  return MEMORY[0x270F54A90]();
}

uint64_t sub_25A00E3B0()
{
  return MEMORY[0x270F54AE0]();
}

uint64_t sub_25A00E3C0()
{
  return MEMORY[0x270F54AF8]();
}

uint64_t sub_25A00E3D0()
{
  return MEMORY[0x270F446F0]();
}

uint64_t sub_25A00E3E0()
{
  return MEMORY[0x270F44740]();
}

uint64_t sub_25A00E3F0()
{
  return MEMORY[0x270F44748]();
}

uint64_t sub_25A00E400()
{
  return MEMORY[0x270F44750]();
}

uint64_t sub_25A00E410()
{
  return MEMORY[0x270F44758]();
}

uint64_t sub_25A00E420()
{
  return MEMORY[0x270F44760]();
}

uint64_t sub_25A00E430()
{
  return MEMORY[0x270F44768]();
}

uint64_t sub_25A00E440()
{
  return MEMORY[0x270F44770]();
}

uint64_t sub_25A00E450()
{
  return MEMORY[0x270F44778]();
}

uint64_t sub_25A00E460()
{
  return MEMORY[0x270F44780]();
}

uint64_t sub_25A00E470()
{
  return MEMORY[0x270F44788]();
}

uint64_t sub_25A00E480()
{
  return MEMORY[0x270F44790]();
}

uint64_t sub_25A00E490()
{
  return MEMORY[0x270F44798]();
}

uint64_t sub_25A00E4A0()
{
  return MEMORY[0x270F447A0]();
}

uint64_t sub_25A00E4B0()
{
  return MEMORY[0x270F447A8]();
}

uint64_t sub_25A00E4C0()
{
  return MEMORY[0x270F447B0]();
}

uint64_t sub_25A00E4D0()
{
  return MEMORY[0x270F447B8]();
}

uint64_t sub_25A00E4E0()
{
  return MEMORY[0x270F447C0]();
}

uint64_t sub_25A00E4F0()
{
  return MEMORY[0x270F447C8]();
}

uint64_t sub_25A00E500()
{
  return MEMORY[0x270F447D0]();
}

uint64_t sub_25A00E510()
{
  return MEMORY[0x270F447D8]();
}

uint64_t sub_25A00E520()
{
  return MEMORY[0x270F447E0]();
}

uint64_t sub_25A00E530()
{
  return MEMORY[0x270F447E8]();
}

uint64_t sub_25A00E540()
{
  return MEMORY[0x270F447F0]();
}

uint64_t sub_25A00E550()
{
  return MEMORY[0x270F447F8]();
}

uint64_t sub_25A00E560()
{
  return MEMORY[0x270F44800]();
}

uint64_t sub_25A00E570()
{
  return MEMORY[0x270F44808]();
}

uint64_t sub_25A00E580()
{
  return MEMORY[0x270F44810]();
}

uint64_t sub_25A00E590()
{
  return MEMORY[0x270F44818]();
}

uint64_t sub_25A00E5A0()
{
  return MEMORY[0x270F44820]();
}

uint64_t sub_25A00E5B0()
{
  return MEMORY[0x270F44828]();
}

uint64_t sub_25A00E5C0()
{
  return MEMORY[0x270F44830]();
}

uint64_t sub_25A00E5D0()
{
  return MEMORY[0x270F44838]();
}

uint64_t sub_25A00E5E0()
{
  return MEMORY[0x270F44840]();
}

uint64_t sub_25A00E5F0()
{
  return MEMORY[0x270F44848]();
}

uint64_t sub_25A00E600()
{
  return MEMORY[0x270F44850]();
}

uint64_t sub_25A00E610()
{
  return MEMORY[0x270F44858]();
}

uint64_t sub_25A00E620()
{
  return MEMORY[0x270F44860]();
}

uint64_t sub_25A00E630()
{
  return MEMORY[0x270F44868]();
}

uint64_t sub_25A00E640()
{
  return MEMORY[0x270F44870]();
}

uint64_t sub_25A00E650()
{
  return MEMORY[0x270F44878]();
}

uint64_t sub_25A00E660()
{
  return MEMORY[0x270F44880]();
}

uint64_t sub_25A00E670()
{
  return MEMORY[0x270F44888]();
}

uint64_t sub_25A00E680()
{
  return MEMORY[0x270F44890]();
}

uint64_t sub_25A00E690()
{
  return MEMORY[0x270F44898]();
}

uint64_t sub_25A00E6A0()
{
  return MEMORY[0x270F448A0]();
}

uint64_t sub_25A00E6B0()
{
  return MEMORY[0x270F448A8]();
}

uint64_t sub_25A00E6C0()
{
  return MEMORY[0x270F448B0]();
}

uint64_t sub_25A00E6D0()
{
  return MEMORY[0x270F448B8]();
}

uint64_t sub_25A00E6E0()
{
  return MEMORY[0x270F448C0]();
}

uint64_t sub_25A00E6F0()
{
  return MEMORY[0x270F448C8]();
}

uint64_t sub_25A00E700()
{
  return MEMORY[0x270F448D0]();
}

uint64_t sub_25A00E710()
{
  return MEMORY[0x270F448D8]();
}

uint64_t sub_25A00E720()
{
  return MEMORY[0x270F448E0]();
}

uint64_t sub_25A00E730()
{
  return MEMORY[0x270F448E8]();
}

uint64_t sub_25A00E740()
{
  return MEMORY[0x270F448F0]();
}

uint64_t sub_25A00E750()
{
  return MEMORY[0x270F448F8]();
}

uint64_t sub_25A00E760()
{
  return MEMORY[0x270F44900]();
}

uint64_t sub_25A00E770()
{
  return MEMORY[0x270F44908]();
}

uint64_t sub_25A00E780()
{
  return MEMORY[0x270F44910]();
}

uint64_t sub_25A00E790()
{
  return MEMORY[0x270F44918]();
}

uint64_t sub_25A00E7A0()
{
  return MEMORY[0x270F44920]();
}

uint64_t sub_25A00E7B0()
{
  return MEMORY[0x270F44928]();
}

uint64_t sub_25A00E7C0()
{
  return MEMORY[0x270F44930]();
}

uint64_t sub_25A00E7D0()
{
  return MEMORY[0x270F44938]();
}

uint64_t sub_25A00E7E0()
{
  return MEMORY[0x270F44940]();
}

uint64_t sub_25A00E7F0()
{
  return MEMORY[0x270F44948]();
}

uint64_t sub_25A00E800()
{
  return MEMORY[0x270F44950]();
}

uint64_t sub_25A00E810()
{
  return MEMORY[0x270F44958]();
}

uint64_t sub_25A00E820()
{
  return MEMORY[0x270F44960]();
}

uint64_t sub_25A00E830()
{
  return MEMORY[0x270F44968]();
}

uint64_t sub_25A00E840()
{
  return MEMORY[0x270F44970]();
}

uint64_t sub_25A00E850()
{
  return MEMORY[0x270F44978]();
}

uint64_t sub_25A00E860()
{
  return MEMORY[0x270F44980]();
}

uint64_t sub_25A00E870()
{
  return MEMORY[0x270F44A78]();
}

uint64_t sub_25A00E880()
{
  return MEMORY[0x270F44A80]();
}

uint64_t sub_25A00E890()
{
  return MEMORY[0x270F44A90]();
}

uint64_t sub_25A00E8A0()
{
  return MEMORY[0x270F44A98]();
}

uint64_t sub_25A00E8B0()
{
  return MEMORY[0x270F44AA8]();
}

uint64_t sub_25A00E8C0()
{
  return MEMORY[0x270F44AB0]();
}

uint64_t sub_25A00E8D0()
{
  return MEMORY[0x270F44C70]();
}

uint64_t sub_25A00E8E0()
{
  return MEMORY[0x270F44C78]();
}

uint64_t sub_25A00E8F0()
{
  return MEMORY[0x270F44CA0]();
}

uint64_t sub_25A00E900()
{
  return MEMORY[0x270F44CA8]();
}

uint64_t sub_25A00E910()
{
  return MEMORY[0x270F44CB0]();
}

uint64_t sub_25A00E920()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_25A00E930()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_25A00E940()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_25A00E950()
{
  return MEMORY[0x270F9D088]();
}

uint64_t sub_25A00E960()
{
  return MEMORY[0x270F9D1D0]();
}

uint64_t sub_25A00E970()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_25A00E980()
{
  return MEMORY[0x270F9D488]();
}

uint64_t sub_25A00E990()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_25A00E9A0()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_25A00E9B0()
{
  return MEMORY[0x270EF19F8]();
}

uint64_t sub_25A00E9C0()
{
  return MEMORY[0x270EF1A10]();
}

uint64_t sub_25A00E9D0()
{
  return MEMORY[0x270EF1AA8]();
}

uint64_t sub_25A00E9E0()
{
  return MEMORY[0x270EF1AD0]();
}

uint64_t sub_25A00E9F0()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_25A00EA00()
{
  return MEMORY[0x270F54CE0]();
}

uint64_t sub_25A00EA10()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_25A00EA20()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_25A00EA30()
{
  return MEMORY[0x270F9D6E0]();
}

uint64_t sub_25A00EA40()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_25A00EA50()
{
  return MEMORY[0x270F9D740]();
}

uint64_t sub_25A00EA60()
{
  return MEMORY[0x270F9D748]();
}

uint64_t sub_25A00EA70()
{
  return MEMORY[0x270F9D760]();
}

uint64_t sub_25A00EA80()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_25A00EA90()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_25A00EAA0()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_25A00EAB0()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_25A00EAC0()
{
  return MEMORY[0x270F9D808]();
}

uint64_t sub_25A00EAD0()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_25A00EAE0()
{
  return MEMORY[0x270F9D820]();
}

uint64_t sub_25A00EAF0()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_25A00EB00()
{
  return MEMORY[0x270F9D898]();
}

uint64_t sub_25A00EB10()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_25A00EB20()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_25A00EB30()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_25A00EB40()
{
  return MEMORY[0x270F9D9A8]();
}

uint64_t sub_25A00EB50()
{
  return MEMORY[0x270F9D9B0]();
}

uint64_t sub_25A00EB60()
{
  return MEMORY[0x270EF1B80]();
}

uint64_t sub_25A00EB70()
{
  return MEMORY[0x270F9DA70]();
}

uint64_t sub_25A00EB80()
{
  return MEMORY[0x270F9DC10]();
}

uint64_t sub_25A00EB90()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_25A00EBA0()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_25A00EBB0()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_25A00EBC0()
{
  return MEMORY[0x270F9E080]();
}

uint64_t sub_25A00EBD0()
{
  return MEMORY[0x270F9E0A0]();
}

uint64_t sub_25A00EBE0()
{
  return MEMORY[0x270F9E0E0]();
}

uint64_t sub_25A00EBF0()
{
  return MEMORY[0x270F9E1E0]();
}

uint64_t sub_25A00EC00()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_25A00EC10()
{
  return MEMORY[0x270EF2360]();
}

uint64_t sub_25A00EC20()
{
  return MEMORY[0x270EF2368]();
}

uint64_t sub_25A00EC30()
{
  return MEMORY[0x270EF2378]();
}

uint64_t sub_25A00EC40()
{
  return MEMORY[0x270EF2390]();
}

uint64_t sub_25A00EC50()
{
  return MEMORY[0x270EF2398]();
}

uint64_t sub_25A00EC60()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_25A00EC70()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_25A00EC80()
{
  return MEMORY[0x270EF23E8]();
}

uint64_t sub_25A00EC90()
{
  return MEMORY[0x270EF2478]();
}

uint64_t sub_25A00ECA0()
{
  return MEMORY[0x270F9E640]();
}

uint64_t sub_25A00ECB0()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_25A00ECC0()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_25A00ECD0()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_25A00ECE0()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_25A00ECF0()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_25A00ED00()
{
  return MEMORY[0x270F9E9A0]();
}

uint64_t sub_25A00ED10()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_25A00ED20()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_25A00ED30()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_25A00ED40()
{
  return MEMORY[0x270F9EB30]();
}

uint64_t sub_25A00ED50()
{
  return MEMORY[0x270F9EBD8]();
}

uint64_t sub_25A00ED60()
{
  return MEMORY[0x270F9EC48]();
}

uint64_t sub_25A00ED70()
{
  return MEMORY[0x270F9EC88]();
}

uint64_t sub_25A00ED80()
{
  return MEMORY[0x270F9EC90]();
}

uint64_t sub_25A00ED90()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_25A00EDA0()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_25A00EDB0()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_25A00EDC0()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_25A00EDD0()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_25A00EDE0()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_25A00EDF0()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_25A00EE00()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_25A00EE10()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_25A00EE20()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_25A00EE30()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_25A00EE40()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_25A00EE50()
{
  return MEMORY[0x270F9F878]();
}

uint64_t sub_25A00EE60()
{
  return MEMORY[0x270F9F880]();
}

uint64_t sub_25A00EE70()
{
  return MEMORY[0x270F9F888]();
}

uint64_t sub_25A00EE80()
{
  return MEMORY[0x270F9F890]();
}

uint64_t sub_25A00EE90()
{
  return MEMORY[0x270F9F8A8]();
}

uint64_t sub_25A00EEA0()
{
  return MEMORY[0x270F9F8C0]();
}

uint64_t sub_25A00EEB0()
{
  return MEMORY[0x270F9F8C8]();
}

uint64_t sub_25A00EEC0()
{
  return MEMORY[0x270F9F8E0]();
}

uint64_t sub_25A00EED0()
{
  return MEMORY[0x270F9F8E8]();
}

uint64_t sub_25A00EEE0()
{
  return MEMORY[0x270F9F920]();
}

uint64_t sub_25A00EEF0()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_25A00EF00()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_25A00EF10()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_25A00EF20()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_25A00EF30()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_25A00EF40()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_25A00EF50()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_25A00EF60()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_25A00EF70()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_25A00EF80()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_25A00EF90()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_25A00EFA0()
{
  return MEMORY[0x270F9FD88]();
}

uint64_t sub_25A00EFB0()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_25A00EFE0()
{
  return MEMORY[0x270FA0128]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void bzero(void *a1, size_t a2)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA468](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

Class object_getClass(id a1)
{
  return (Class)MEMORY[0x270F9AA40](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

void sqlite3_result_text(sqlite3_context *a1, const char *a2, int a3, void (__cdecl *a4)(void *))
{
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x270FA0330]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x270FA0588]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x270FA0598]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x270FA05D0]();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return MEMORY[0x270FA05D8]();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return MEMORY[0x270FA05E0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return MEMORY[0x270FA0600]();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return MEMORY[0x270FA0608]();
}

uint64_t swift_weakCopyInit()
{
  return MEMORY[0x270FA0640]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_weakTakeInit()
{
  return MEMORY[0x270FA0668]();
}