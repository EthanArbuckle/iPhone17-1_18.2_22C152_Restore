void sub_259F0DE40(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_259F0DE48(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = sub_259F686B0();
  uint64_t v15 = v14;
  swift_beginAccess();
  swift_retain();
  uint64_t v16 = sub_259F4AB98(v13, v15);
  swift_endAccess();
  if (v16)
  {
    swift_bridgeObjectRelease();
    *(void *)(v7 + 56) = v16;
    *(void *)(v7 + 64) = a5;
    *(void *)(v7 + 72) = a6;
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v17 = *(void *)(*__swift_project_boxed_opaque_existential_1(a1, a1[3]) + 120);
    *(unsigned char *)(v7 + 16) = 0;
    *(void *)(v7 + 24) = v17;
    *(void *)(v7 + 32) = a3;
    *(void *)(v7 + 40) = a4;
    *(void *)(v7 + 48) = a2;
    swift_retain();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    sub_259F0E9A4();
    swift_allocError();
    *(void *)uint64_t v18 = v13;
    *(void *)(v18 + 8) = v15;
    *(unsigned char *)(v18 + 16) = 3;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    type metadata accessor for MaterializedViewBlock();
    swift_deallocPartialClassInstance();
  }
  return v7;
}

uint64_t sub_259F0DFE0()
{
  uint64_t result = sub_259F58F0C();
  if (!v1) {
    *(unsigned char *)(v0 + 16) = 0;
  }
  return result;
}

uint64_t sub_259F0E014()
{
  sub_259F68820();
  if (!v1)
  {
    uint64_t v2 = *(void *)(v0 + 24);
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v4 = *(void *)(v0 + 72);
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_259F2C214(v3, v4);
    swift_bridgeObjectRelease();
    sub_259F58CAC(v2, v5);
    swift_bridgeObjectRelease();
    *(unsigned char *)(v0 + 16) = 1;
  }
  return 1;
}

uint64_t sub_259F0E0D4()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_259F0E104()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 80, 7);
}

uint64_t type metadata accessor for MaterializedViewBlock()
{
  return self;
}

void type metadata accessor for BMUseCaseIdentifier(uint64_t a1)
{
}

void type metadata accessor for BMStreamIdentifier(uint64_t a1)
{
}

uint64_t sub_259F0E1A0(uint64_t a1, uint64_t a2)
{
  return sub_259F0E6A8(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_259F0E1C4(uint64_t a1, uint64_t a2)
{
  return sub_259F0E6A8(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_259F0E1E4(uint64_t a1, id *a2)
{
  uint64_t result = sub_259F68630();
  *a2 = 0;
  return result;
}

uint64_t sub_259F0E25C(uint64_t a1, id *a2)
{
  char v3 = sub_259F68640();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_259F0E2DC@<X0>(uint64_t *a1@<X8>)
{
  sub_259F68650();
  uint64_t v2 = sub_259F68620();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_259F0E328@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_259F68650();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_259F0E354(uint64_t a1)
{
  uint64_t v2 = sub_259F0E660(&qword_26A3F9F50, type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_259F0E660(&qword_26A3F9F58, type metadata accessor for URLResourceKey);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_259F0E410(uint64_t a1)
{
  uint64_t v2 = sub_259F0E660(&qword_26A3F9EA8, type metadata accessor for BMUseCaseIdentifier);
  uint64_t v3 = sub_259F0E660(&qword_26A3F9EB0, type metadata accessor for BMUseCaseIdentifier);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_259F0E4CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_259F68620();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_259F0E514(uint64_t a1)
{
  uint64_t v2 = sub_259F0E660(&qword_26A3F9EB8, type metadata accessor for BMStreamIdentifier);
  uint64_t v3 = sub_259F0E660(&qword_26A3F9EC0, type metadata accessor for BMStreamIdentifier);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_259F0E5D0()
{
  return sub_259F0E660(&qword_26A3F9E78, type metadata accessor for BMStreamIdentifier);
}

uint64_t sub_259F0E618()
{
  return sub_259F0E660(&qword_26A3F9E80, type metadata accessor for BMStreamIdentifier);
}

uint64_t sub_259F0E660(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_259F0E6A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_259F68650();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_259F0E6EC()
{
  sub_259F68650();
  sub_259F686E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_259F0E740()
{
  sub_259F68650();
  sub_259F68DA0();
  sub_259F686E0();
  uint64_t v0 = sub_259F68DC0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_259F0E7B4()
{
  uint64_t v0 = sub_259F68650();
  uint64_t v2 = v1;
  if (v0 == sub_259F68650() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_259F68C70();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_259F0E840()
{
  return sub_259F0E660(&qword_26A3F9E88, type metadata accessor for BMStreamIdentifier);
}

uint64_t sub_259F0E888()
{
  return sub_259F0E660(&qword_26A3F9E90, type metadata accessor for BMUseCaseIdentifier);
}

uint64_t sub_259F0E8D0()
{
  return sub_259F0E660(&qword_26A3F9E98, type metadata accessor for BMUseCaseIdentifier);
}

uint64_t sub_259F0E918()
{
  return sub_259F0E660(&qword_26A3F9EA0, type metadata accessor for BMUseCaseIdentifier);
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_259F0E9A4()
{
  unint64_t result = qword_26A3F9EC8;
  if (!qword_26A3F9EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3F9EC8);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

void sub_259F0EA5C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_259F0EAA4()
{
  return sub_259F0E660(&qword_26A3F9F38, type metadata accessor for URLResourceKey);
}

uint64_t sub_259F0EAEC()
{
  return sub_259F0E660(&qword_26A3F9F40, type metadata accessor for URLResourceKey);
}

uint64_t sub_259F0EB34()
{
  return sub_259F0E660(&qword_26A3F9F48, type metadata accessor for URLResourceKey);
}

uint64_t dispatch thunk of ProvidesDependencyNames.dependencyNames.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t PoirotDefaultTaskParameters.recipeFolderPath.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PoirotDefaultTaskParameters.loggingPath.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

PoirotBlocks::PoirotDefaultTaskParameters __swiftcall PoirotDefaultTaskParameters.init(recipeFolderPath:loggingPath:)(Swift::String recipeFolderPath, Swift::String_optional loggingPath)
{
  v2->value = recipeFolderPath;
  v2[1] = loggingPath;
  result.loggingPath = loggingPath;
  result.recipeFolderPath = recipeFolderPath;
  return result;
}

BOOL sub_259F0EC08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_259F0EC20()
{
  return sub_259F68DC0();
}

uint64_t sub_259F0EC68()
{
  return sub_259F68DB0();
}

uint64_t sub_259F0EC94()
{
  return sub_259F68DC0();
}

uint64_t sub_259F0ECD8()
{
  if (*v0) {
    return 0x50676E6967676F6CLL;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_259F0ED20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_259F10708(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_259F0ED48()
{
  return 0;
}

void sub_259F0ED54(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_259F0ED60(uint64_t a1)
{
  unint64_t v2 = sub_259F106B4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_259F0ED9C(uint64_t a1)
{
  unint64_t v2 = sub_259F106B4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PoirotDefaultTaskParameters.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3F9FC0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  v10[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F106B4();
  sub_259F68E20();
  char v12 = 0;
  uint64_t v8 = v10[3];
  sub_259F68BB0();
  if (!v8)
  {
    char v11 = 1;
    sub_259F68B90();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PoirotDefaultTaskParameters.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3F9FD0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F106B4();
  sub_259F68DF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v20 = 0;
  uint64_t v9 = sub_259F68B40();
  uint64_t v11 = v10;
  char v19 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_259F68B00();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v18;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_259F0F154()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_259F0F184()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_259F0F1B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return PoirotDefaultTaskParameters.init(from:)(a1, a2);
}

uint64_t sub_259F0F1CC(void *a1)
{
  return PoirotDefaultTaskParameters.encode(to:)(a1);
}

uint64_t PoirotUserTaskParameters.recipeFolderPath.getter()
{
  uint64_t v0 = sub_259F10810();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t PoirotUserTaskParameters.loggingPath.getter()
{
  uint64_t v0 = sub_259F10818();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t PoirotUserTaskParameters.userDefined.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 56);
  uint64_t v5 = sub_259F688B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t PoirotUserTaskParameters.init(recipeFolderPath:loggingPath:userDefined:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  v14[0] = a6;
  v14[1] = a7;
  v14[2] = a8;
  v14[3] = a10;
  uint64_t v11 = (char *)a9 + *(int *)(type metadata accessor for PoirotUserTaskParameters(0, (uint64_t)v14) + 56);
  uint64_t v12 = sub_259F688B0();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a5, v12);
}

uint64_t static PoirotUserTaskParameters.== infix(_:_:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v70 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v13 = &v59[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_259F688B0();
  uint64_t v69 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  v65 = &v59[-v15];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v64 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v17 = &v59[-v16];
  v74[0] = a3;
  v74[1] = a4;
  v74[2] = a5;
  v74[3] = a6;
  uint64_t v18 = type metadata accessor for PoirotUserTaskParameters(0, (uint64_t)v74);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  v71 = &v59[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  v72 = &v59[-v22];
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  v25 = &v59[-v24];
  MEMORY[0x270FA5388](v23);
  v28 = &v59[-v27];
  uint64_t v29 = a1[1];
  uint64_t v30 = a2[1];
  BOOL v37 = *a1 == *a2;
  uint64_t v73 = v26;
  v66 = v17;
  uint64_t v67 = v14;
  v62 = v13;
  uint64_t v63 = a6;
  if (v37 && v29 == v30)
  {
    char v31 = 1;
  }
  else
  {
    char v32 = sub_259F68C70();
    uint64_t v26 = v73;
    char v31 = v32;
  }
  v33 = *(void (**)(unsigned char *, void *, uint64_t))(v26 + 16);
  uint64_t v34 = v26;
  v33(v28, a1, v18);
  v33(v25, a2, v18);
  if ((v31 & 1) == 0)
  {
    v39 = *(void (**)(unsigned char *, uint64_t))(v34 + 8);
    v39(v25, v18);
    v39(v28, v18);
LABEL_20:
    v41 = v71;
    v40 = v72;
    v33(v72, a1, v18);
    v33(v41, a2, v18);
    goto LABEL_21;
  }
  uint64_t v61 = a3;
  uint64_t v35 = *((void *)v28 + 3);
  uint64_t v36 = *((void *)v25 + 3);
  if (!v35)
  {
    v39 = *(void (**)(unsigned char *, uint64_t))(v73 + 8);
    swift_bridgeObjectRetain();
    v39(v25, v18);
    v39(v28, v18);
    if (!v36) {
      goto LABEL_25;
    }
    goto LABEL_19;
  }
  if (!v36)
  {
    v39 = *(void (**)(unsigned char *, uint64_t))(v73 + 8);
    swift_bridgeObjectRetain();
    v39(v25, v18);
    v39(v28, v18);
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  BOOL v37 = *((void *)v28 + 2) == *((void *)v25 + 2) && v35 == v36;
  if (!v37)
  {
    uint64_t v38 = v73;
    int v60 = sub_259F68C70();
    v39 = *(void (**)(unsigned char *, uint64_t))(v38 + 8);
    swift_bridgeObjectRetain();
    v39(v25, v18);
    v39(v28, v18);
    swift_bridgeObjectRelease();
    v40 = v72;
    v33(v72, a1, v18);
    v41 = v71;
    v33(v71, a2, v18);
    if (v60) {
      goto LABEL_26;
    }
LABEL_21:
    v39(v41, v18);
    v39(v40, v18);
    goto LABEL_22;
  }
  v39 = *(void (**)(unsigned char *, uint64_t))(v73 + 8);
  swift_bridgeObjectRetain();
  v39(v25, v18);
  v39(v28, v18);
  swift_bridgeObjectRelease();
LABEL_25:
  v40 = v72;
  v33(v72, a1, v18);
  v41 = v71;
  v33(v71, a2, v18);
LABEL_26:
  uint64_t v44 = *(int *)(v18 + 56);
  v45 = &v40[v44];
  v46 = v41;
  v47 = &v41[v44];
  v49 = v66;
  uint64_t v48 = v67;
  v50 = &v66[*(int *)(TupleTypeMetadata2 + 48)];
  v51 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v69 + 16);
  v51(v66, v45, v67);
  v51(v50, v47, v48);
  v52 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v70 + 48);
  if (v52(v49, 1, v61) == 1)
  {
    v39(v46, v18);
    v39(v72, v18);
    if (v52(v50, 1, v61) == 1)
    {
      (*(void (**)(unsigned char *, uint64_t))(v69 + 8))(v49, v48);
      char v42 = 1;
      return v42 & 1;
    }
  }
  else
  {
    v53 = v65;
    v51(v65, v49, v48);
    v54 = v53;
    if (v52(v50, 1, v61) != 1)
    {
      uint64_t v55 = v70;
      uint64_t v57 = v61;
      v56 = v62;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v70 + 32))(v62, v50, v61);
      char v42 = sub_259F68600();
      v58 = *(void (**)(unsigned char *, uint64_t))(v55 + 8);
      v58(v56, v57);
      v39(v71, v18);
      v39(v72, v18);
      v58(v54, v57);
      (*(void (**)(unsigned char *, uint64_t))(v69 + 8))(v49, v48);
      return v42 & 1;
    }
    v39(v71, v18);
    v39(v72, v18);
    (*(void (**)(unsigned char *, uint64_t))(v70 + 8))(v53, v61);
  }
  (*(void (**)(unsigned char *, uint64_t))(v64 + 8))(v49, TupleTypeMetadata2);
LABEL_22:
  char v42 = 0;
  return v42 & 1;
}

BOOL sub_259F0FB50(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_259F0FB60()
{
  return sub_259F68DB0();
}

uint64_t sub_259F0FB88(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x8000000259F69620 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x50676E6967676F6CLL && a2 == 0xEB00000000687461 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6966654472657375 && a2 == 0xEB0000000064656ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_259F68C70();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_259F0FD0C()
{
  return sub_259F68DC0();
}

uint64_t sub_259F0FD54(char a1)
{
  if (!a1) {
    return 0xD000000000000010;
  }
  if (a1 == 1) {
    return 0x50676E6967676F6CLL;
  }
  return 0x6966654472657375;
}

BOOL sub_259F0FDC0(char *a1, char *a2)
{
  return sub_259F0FB50(*a1, *a2);
}

uint64_t sub_259F0FDD8()
{
  return sub_259F0FD0C();
}

uint64_t sub_259F0FDE8()
{
  return sub_259F0FB60();
}

uint64_t sub_259F0FDF8()
{
  return sub_259F68DC0();
}

uint64_t sub_259F0FE44()
{
  return sub_259F0FD54(*v0);
}

uint64_t sub_259F0FE54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_259F0FB88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_259F0FE88@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_259F11F48();
  *a1 = result;
  return result;
}

uint64_t sub_259F0FEBC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_259F0FF10(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t PoirotUserTaskParameters.encode(to:)(void *a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  v10[0] = *(_OWORD *)(a2 + 32);
  v10[1] = v3;
  v11[0] = v3;
  v11[1] = v10[0];
  type metadata accessor for PoirotUserTaskParameters.CodingKeys(255, (uint64_t)v11);
  swift_getWitnessTable();
  uint64_t v4 = sub_259F68C00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F68E20();
  LOBYTE(v11[0]) = 0;
  uint64_t v8 = v12;
  sub_259F68BB0();
  if (!v8)
  {
    LOBYTE(v11[0]) = 1;
    sub_259F68B90();
    LOBYTE(v11[0]) = 2;
    sub_259F68BA0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PoirotUserTaskParameters.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v28 = a6;
  uint64_t v11 = sub_259F688B0();
  uint64_t v26 = *(void *)(v11 - 8);
  uint64_t v27 = v11;
  MEMORY[0x270FA5388](v11);
  char v31 = (char *)&v25 - v12;
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  type metadata accessor for PoirotUserTaskParameters.CodingKeys(255, (uint64_t)&v35);
  swift_getWitnessTable();
  uint64_t v33 = sub_259F68B80();
  uint64_t v30 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v14 = (char *)&v25 - v13;
  uint64_t v32 = a2;
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v29 = a3;
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v15 = type metadata accessor for PoirotUserTaskParameters(0, (uint64_t)&v35);
  uint64_t v25 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (uint64_t *)((char *)&v25 - v16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v34 = v14;
  uint64_t v18 = (uint64_t)v39;
  sub_259F68DF0();
  if (v18) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v39 = a1;
  uint64_t v19 = v30;
  uint64_t v20 = v31;
  LOBYTE(v35) = 0;
  *uint64_t v17 = sub_259F68B40();
  v17[1] = v21;
  LOBYTE(v35) = 1;
  v17[2] = sub_259F68B00();
  v17[3] = v22;
  LOBYTE(v35) = 2;
  sub_259F68B30();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v34, v33);
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))((char *)v17 + *(int *)(v15 + 56), v20, v27);
  uint64_t v23 = v25;
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v25 + 16))(v28, v17, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v23 + 8))(v17, v15);
}

uint64_t sub_259F10514()
{
  uint64_t v0 = sub_259F10810();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_259F1054C()
{
  uint64_t v0 = sub_259F10818();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_259F10584@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return PoirotUserTaskParameters.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_259F105A8(void *a1, uint64_t a2)
{
  return PoirotUserTaskParameters.encode(to:)(a1, a2);
}

uint64_t sub_259F105C0(void *a1, void *a2, uint64_t *a3)
{
  return static PoirotUserTaskParameters.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4], a3[5]);
}

uint64_t _s12PoirotBlocks0A21DefaultTaskParametersV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v5 = a2[2];
  uint64_t v4 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_259F68C70(), result = 0, (v7 & 1) != 0))
  {
    if (v3)
    {
      if (v4)
      {
        BOOL v9 = v2 == v5 && v3 == v4;
        if (v9 || (sub_259F68C70() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v4)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_259F106B4()
{
  unint64_t result = qword_26A3F9FC8;
  if (!qword_26A3F9FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3F9FC8);
  }
  return result;
}

uint64_t sub_259F10708(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x8000000259F69620 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x50676E6967676F6CLL && a2 == 0xEB00000000687461)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_259F68C70();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_259F10810()
{
  return *(void *)v0;
}

uint64_t sub_259F10818()
{
  return *(void *)(v0 + 16);
}

uint64_t type metadata accessor for PoirotUserTaskParameters(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA03B0](a1, a2, &nominal type descriptor for PoirotUserTaskParameters);
}

uint64_t type metadata accessor for PoirotUserTaskParameters.CodingKeys(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA03B0](a1, a2, &nominal type descriptor for PoirotUserTaskParameters.CodingKeys);
}

unint64_t sub_259F10850(void *a1)
{
  a1[1] = sub_259F10888();
  a1[2] = sub_259F108DC();
  unint64_t result = sub_259F10930();
  a1[3] = result;
  return result;
}

unint64_t sub_259F10888()
{
  unint64_t result = qword_26A3F9FD8;
  if (!qword_26A3F9FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3F9FD8);
  }
  return result;
}

unint64_t sub_259F108DC()
{
  unint64_t result = qword_26A3F9FE0;
  if (!qword_26A3F9FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3F9FE0);
  }
  return result;
}

unint64_t sub_259F10930()
{
  unint64_t result = qword_26A3F9FE8[0];
  if (!qword_26A3F9FE8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A3F9FE8);
  }
  return result;
}

uint64_t sub_259F10984(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

uint64_t dispatch thunk of PoirotTaskParametersProtocol.recipeFolderPath.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PoirotTaskParametersProtocol.loggingPath.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t initializeBufferWithCopyOfBuffer for PoirotDefaultTaskParameters(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for PoirotDefaultTaskParameters()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for PoirotDefaultTaskParameters(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PoirotDefaultTaskParameters(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for PoirotDefaultTaskParameters(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PoirotDefaultTaskParameters(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PoirotDefaultTaskParameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PoirotDefaultTaskParameters()
{
  return &type metadata for PoirotDefaultTaskParameters;
}

uint64_t sub_259F10C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

uint64_t sub_259F10C40()
{
  uint64_t result = sub_259F688B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_259F10CE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = v7;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v9 = *(void *)(v5 + 64);
  }
  else {
    size_t v9 = *(void *)(v5 + 64) + 1;
  }
  unint64_t v10 = ((v7 + 32) & ~(unint64_t)v7) + v9;
  int v11 = v7 & 0x100000;
  if (v8 > 7 || v11 != 0 || v10 > 0x18)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v15 = a2[1];
    *a1 = *a2;
    a1[1] = v15;
    uint64_t v16 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v17 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v16 = *v17;
    v16[1] = v17[1];
    uint64_t v18 = (void *)(((unint64_t)v16 + v8 + 16) & ~v8);
    uint64_t v19 = (const void *)(((unint64_t)v17 + v8 + 16) & ~v8);
    uint64_t v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20(v19, 1, v4))
    {
      memcpy(v18, v19, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v18, v19, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, v4);
    }
  }
  return a1;
}

uint64_t sub_259F10E8C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = v5;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 8);
    return v8(v6, v4);
  }
  return result;
}

void *sub_259F10F6C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  v5[1] = v6[1];
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (void *)(((unint64_t)v5 + v9 + 16) & ~v9);
  int v11 = (const void *)(((unint64_t)v6 + v9 + 16) & ~v9);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v11, 1, v7))
  {
    if (*(_DWORD *)(v8 + 84)) {
      size_t v13 = *(void *)(v8 + 64);
    }
    else {
      size_t v13 = *(void *)(v8 + 64) + 1;
    }
    memcpy(v10, v11, v13);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
  }
  return a1;
}

void *sub_259F110BC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  int v11 = (void *)(((unint64_t)v6 + v10 + 16) & ~v10);
  uint64_t v12 = (void *)(((unint64_t)v7 + v10 + 16) & ~v10);
  size_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  LODWORD(v7) = v13(v11, 1, v8);
  int v14 = v13(v12, 1, v8);
  if (v7)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v11, v12, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
      return a1;
    }
    int v15 = *(_DWORD *)(v9 + 84);
    size_t v16 = *(void *)(v9 + 64);
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 24))(v11, v12, v8);
      return a1;
    }
    uint64_t v18 = *(void (**)(void *, uint64_t))(v9 + 8);
    uint64_t v17 = v9 + 8;
    v18(v11, v8);
    int v15 = *(_DWORD *)(v17 + 76);
    size_t v16 = *(void *)(v17 + 56);
  }
  if (v15) {
    size_t v19 = v16;
  }
  else {
    size_t v19 = v16 + 1;
  }
  memcpy(v11, v12, v19);
  return a1;
}

_OWORD *sub_259F11284(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (void *)(((unint64_t)v4 + v8 + 16) & ~v8);
  uint64_t v10 = (const void *)(((unint64_t)v5 + v8 + 16) & ~v8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6))
  {
    if (*(_DWORD *)(v7 + 84)) {
      size_t v11 = *(void *)(v7 + 64);
    }
    else {
      size_t v11 = *(void *)(v7 + 64) + 1;
    }
    memcpy(v9, v10, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  return a1;
}

void *sub_259F113B8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (void *)(((unint64_t)v7 + v11 + 16) & ~v11);
  size_t v13 = (void *)(((unint64_t)v8 + v11 + 16) & ~v11);
  int v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v8) = v14(v12, 1, v9);
  int v15 = v14(v13, 1, v9);
  if (v8)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v12, v13, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v9);
      return a1;
    }
    int v16 = *(_DWORD *)(v10 + 84);
    size_t v17 = *(void *)(v10 + 64);
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v12, v13, v9);
      return a1;
    }
    size_t v19 = *(void (**)(void *, uint64_t))(v10 + 8);
    uint64_t v18 = v10 + 8;
    v19(v12, v9);
    int v16 = *(_DWORD *)(v18 + 76);
    size_t v17 = *(void *)(v18 + 56);
  }
  if (v16) {
    size_t v20 = v17;
  }
  else {
    size_t v20 = v17 + 1;
  }
  memcpy(v12, v13, v20);
  return a1;
}

uint64_t sub_259F11568(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  int v5 = *(_DWORD *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = v6;
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v9;
  }
  if (!a2) {
    return 0;
  }
  int v10 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_28;
  }
  uint64_t v11 = v9 + ((v8 + 32) & ~v8);
  char v12 = 8 * v11;
  if (v11 <= 3)
  {
    unsigned int v15 = ((v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      int v13 = *(_DWORD *)((char *)a1 + v11);
      if (!v13) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v15 > 0xFF)
    {
      int v13 = *(unsigned __int16 *)((char *)a1 + v11);
      if (!*(unsigned __int16 *)((char *)a1 + v11)) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v15 < 2)
    {
LABEL_28:
      if ((v6 & 0x80000000) != 0)
      {
        unsigned int v18 = (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                     + v8
                                                                     + 16) & ~v8);
        if (v18 >= 2) {
          return v18 - 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        unint64_t v17 = *((void *)a1 + 1);
        if (v17 >= 0xFFFFFFFF) {
          LODWORD(v17) = -1;
        }
        return (v17 + 1);
      }
    }
  }
  int v13 = *((unsigned __int8 *)a1 + v11);
  if (!*((unsigned char *)a1 + v11)) {
    goto LABEL_28;
  }
LABEL_20:
  int v16 = (v13 - 1) << v12;
  if (v11 > 3) {
    int v16 = 0;
  }
  if (v11)
  {
    if (v11 > 3) {
      LODWORD(v11) = 4;
    }
    switch((int)v11)
    {
      case 2:
        LODWORD(v11) = *a1;
        break;
      case 3:
        LODWORD(v11) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v11) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v11) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v11 | v16) + 1;
}

void sub_259F1174C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  else {
    unsigned int v10 = v9;
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  size_t v12 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (!v8) {
    ++v12;
  }
  size_t v13 = ((v11 + 32) & ~v11) + v12;
  BOOL v14 = a3 >= v10;
  unsigned int v15 = a3 - v10;
  if (v15 == 0 || !v14)
  {
LABEL_17:
    if (v10 < a2) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  if (v13 > 3)
  {
    int v6 = 1;
    if (v10 < a2) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  unsigned int v16 = ((v15 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
  if (!HIWORD(v16))
  {
    if (v16 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v16 > 1;
    }
    goto LABEL_17;
  }
  int v6 = 4;
  if (v10 < a2)
  {
LABEL_18:
    unsigned int v17 = ~v10 + a2;
    if (v13 < 4)
    {
      int v18 = (v17 >> (8 * v13)) + 1;
      if (v13)
      {
        int v19 = v17 & ~(-1 << (8 * v13));
        bzero(a1, v13);
        if (v13 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v13 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v13] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v13] = v18;
        return;
      case 3:
        goto LABEL_59;
      case 4:
        *(_DWORD *)&a1[v13] = v18;
        return;
      default:
        return;
    }
  }
LABEL_25:
  switch(v6)
  {
    case 1:
      a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_59:
      __break(1u);
      JUMPOUT(0x259F11A64);
    case 4:
      *(_DWORD *)&a1[v13] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (a2)
      {
LABEL_30:
        if ((v9 & 0x80000000) != 0)
        {
          size_t v20 = (unsigned char *)((((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v11 + 16) & ~v11);
          if (v9 >= a2)
          {
            uint64_t v24 = a2 + 1;
            uint64_t v25 = *(void (**)(unint64_t, uint64_t))(v7 + 56);
            unint64_t v26 = (((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v11 + 16) & ~v11;
            v25(v26, v24);
          }
          else
          {
            if (v12 <= 3) {
              int v21 = ~(-1 << (8 * v12));
            }
            else {
              int v21 = -1;
            }
            if (v12)
            {
              int v22 = v21 & (~v9 + a2);
              if (v12 <= 3) {
                int v23 = v12;
              }
              else {
                int v23 = 4;
              }
              bzero(v20, v12);
              switch(v23)
              {
                case 2:
                  *(_WORD *)size_t v20 = v22;
                  break;
                case 3:
                  *(_WORD *)size_t v20 = v22;
                  v20[2] = BYTE2(v22);
                  break;
                case 4:
                  *(_DWORD *)size_t v20 = v22;
                  break;
                default:
                  *size_t v20 = v22;
                  break;
              }
            }
          }
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t sub_259F11A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Query.UsageState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_259F11B44(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259F11C10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_259F11C38(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_259F11C44(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PoirotDefaultTaskParameters.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PoirotDefaultTaskParameters.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259F11DA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_259F11DD0(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PoirotDefaultTaskParameters.CodingKeys()
{
  return &type metadata for PoirotDefaultTaskParameters.CodingKeys;
}

unint64_t sub_259F11DF0()
{
  unint64_t result = qword_26A3FA0F0;
  if (!qword_26A3FA0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA0F0);
  }
  return result;
}

uint64_t sub_259F11E44()
{
  return swift_getWitnessTable();
}

uint64_t sub_259F11E60()
{
  return swift_getWitnessTable();
}

uint64_t sub_259F11E7C()
{
  return swift_getWitnessTable();
}

unint64_t sub_259F11E9C()
{
  unint64_t result = qword_26A3FA0F8;
  if (!qword_26A3FA0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA0F8);
  }
  return result;
}

unint64_t sub_259F11EF4()
{
  unint64_t result = qword_26A3FA100;
  if (!qword_26A3FA100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA100);
  }
  return result;
}

uint64_t sub_259F11F48()
{
  return 3;
}

uint64_t sub_259F11F50@<X0>(unsigned __int8 *a1@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, void (*a5)(char *, uint64_t, uint64_t, uint64_t)@<X6>, uint64_t a6@<X7>, char *a7@<X8>)
{
  uint64_t v109 = a6;
  uint64_t v106 = a4;
  v107 = (void (*)(char *, uint64_t, uint64_t, uint64_t))a5;
  v103 = a1;
  uint64_t v96 = sub_259F68530();
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  v94 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_259F68400();
  uint64_t v11 = *(void *)(v104 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v104);
  v97 = (char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  v93 = (char *)&v92 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA108);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  v99 = (char *)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  int v19 = (char *)&v92 - v18;
  uint64_t v108 = sub_259F68440();
  uint64_t v111 = *(void *)(v108 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v108);
  int v22 = (char *)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  v98 = (char *)&v92 - v24;
  MEMORY[0x270FA5388](v23);
  v102 = (char *)&v92 - v25;
  uint64_t v110 = type metadata accessor for InferredProtobufType();
  uint64_t v26 = MEMORY[0x270FA5388](v110);
  uint64_t v28 = (char *)&v92 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  uint64_t v105 = (uint64_t)&v92 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v116 = (uint64_t)&v92 - v31;
  uint64_t v32 = type metadata accessor for DatasetColumnDescription(0) - 8;
  uint64_t v33 = MEMORY[0x270FA5388](v32);
  uint64_t v35 = (char *)&v92 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v33);
  v39 = (uint64_t *)((char *)&v92 - v38);
  unint64_t v40 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v40 >= *(void *)(a3 + 16))
  {
LABEL_29:
    __break(1u);
    return result;
  }
  LODWORD(v103) = *v103;
  sub_259F138BC(a3+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v40, (uint64_t)&v92 - v38);
  sub_259F138BC((uint64_t)v39, (uint64_t)v35);
  uint64_t v41 = (uint64_t)v107;
  swift_bridgeObjectRetain();
  sub_259F593BC((uint64_t)v35, v106, v41, v116);
  uint64_t v43 = *v39;
  uint64_t v42 = v39[1];
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_259F68520();
  uint64_t v45 = *(void *)(v44 + 16);
  v100 = a7;
  v101 = v39;
  if (v45 && (unint64_t v46 = sub_259F17068(v43, v42), (v47 & 1) != 0))
  {
    uint64_t v48 = v111;
    uint64_t v49 = v108;
    (*(void (**)(char *, unint64_t, uint64_t))(v111 + 16))(v19, *(void *)(v44 + 56) + *(void *)(v111 + 72) * v46, v108);
    v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56);
    v50(v19, 0, 1, v49);
  }
  else
  {
    uint64_t v48 = v111;
    v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v111 + 56);
    uint64_t v49 = v108;
    v50(v19, 1, 1, v108);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v19, 1, v49) == 1)
  {
    v107 = v50;
    sub_259F137A4((uint64_t)v19);
    uint64_t v51 = v11;
    uint64_t v52 = v104;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v93, v116, v104);
    uint64_t v53 = v95;
    v54 = v94;
    uint64_t v55 = v96;
    (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v94, v109, v96);
    swift_bridgeObjectRetain();
    sub_259F684F0();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v55);
    LOBYTE(v114) = 1;
    v56 = v98;
    sub_259F68410();
    uint64_t v57 = v97;
    sub_259F68420();
    int v58 = (*(uint64_t (**)(char *, uint64_t))(v51 + 88))(v57, v52);
    int v59 = *MEMORY[0x263F5F1A0];
    (*(void (**)(char *, uint64_t))(v51 + 8))(v57, v52);
    if (v58 == v59)
    {
      uint64_t v60 = sub_259F68430();
      if (v61)
      {
        sub_259F42DE8(&v114, v60, v61);
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v62 = (uint64_t)v101;
    uint64_t v63 = *v101;
    uint64_t v64 = v101[1];
    uint64_t v65 = v111;
    uint64_t v66 = (uint64_t)v99;
    uint64_t v67 = v108;
    (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v99, v56, v108);
    v107((char *)v66, 0, 1, v67);
    swift_bridgeObjectRetain();
    v68 = v56;
    uint64_t v69 = (void (*)(uint64_t *, void))sub_259F68510();
    sub_259F29660(v66, v63, v64);
    v69(&v114, 0);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v68, v67);
    sub_259F13920(v116, (uint64_t (*)(void))type metadata accessor for InferredProtobufType);
    uint64_t result = sub_259F13920(v62, type metadata accessor for DatasetColumnDescription);
    uint64_t v70 = v100;
    char v71 = 1;
    goto LABEL_12;
  }
  v72 = v102;
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v102, v19, v49);
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v22, v72, v49);
  sub_259F68420();
  uint64_t v73 = sub_259F68430();
  uint64_t v75 = v74;
  v76 = *(void (**)(char *, uint64_t))(v48 + 8);
  uint64_t v111 = v48 + 8;
  v76(v22, v49);
  v77 = (uint64_t *)&v28[*(int *)(v110 + 20)];
  uint64_t *v77 = v73;
  v77[1] = v75;
  uint64_t v78 = v105;
  sub_259F13804((uint64_t)v28, v105);
  uint64_t v79 = v116;
  char v80 = sub_259F683F0();
  uint64_t v81 = (uint64_t)v101;
  if (v80)
  {
    uint64_t v82 = *(int *)(v110 + 20);
    v83 = (void *)(v78 + v82);
    uint64_t v84 = *(void *)(v78 + v82 + 8);
    v85 = (void *)(v79 + v82);
    uint64_t v86 = v85[1];
    if (v84)
    {
      if (v86 && (*v83 == *v85 && v84 == v86 || (sub_259F68C70() & 1) != 0)) {
        goto LABEL_19;
      }
    }
    else if (!v86)
    {
LABEL_19:
      sub_259F13920(v78, (uint64_t (*)(void))type metadata accessor for InferredProtobufType);
      v76(v102, v49);
      sub_259F13920(v79, (uint64_t (*)(void))type metadata accessor for InferredProtobufType);
      uint64_t result = sub_259F13920(v81, type metadata accessor for DatasetColumnDescription);
      uint64_t v70 = v100;
      char v71 = (char)v103;
LABEL_12:
      *uint64_t v70 = v71;
      return result;
    }
  }
  uint64_t v114 = 0;
  unint64_t v115 = 0xE000000000000000;
  sub_259F68960();
  v87 = (void (*)(void, void, void, void))v107;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v114 = v106;
  unint64_t v115 = (unint64_t)v87;
  sub_259F686F0();
  swift_bridgeObjectRetain();
  sub_259F686F0();
  uint64_t v88 = v105;
  swift_bridgeObjectRelease();
  sub_259F686F0();
  if (*(void *)(v88 + *(int *)(v110 + 20) + 8))
  {
    uint64_t v112 = 0;
    unint64_t v113 = 0xE000000000000000;
    sub_259F686F0();
    sub_259F686F0();
  }
  else
  {
    uint64_t v112 = 0;
    unint64_t v113 = 0xE000000000000000;
  }
  sub_259F68A10();
  sub_259F686F0();
  sub_259F686F0();
  swift_bridgeObjectRelease();
  sub_259F686F0();
  if (*(void *)(v79 + *(int *)(v110 + 20) + 8))
  {
    uint64_t v112 = 0;
    unint64_t v113 = 0xE000000000000000;
    sub_259F686F0();
    sub_259F686F0();
  }
  else
  {
    uint64_t v112 = 0;
    unint64_t v113 = 0xE000000000000000;
  }
  sub_259F68A10();
  sub_259F686F0();
  sub_259F686F0();
  swift_bridgeObjectRelease();
  sub_259F686F0();
  uint64_t v89 = v114;
  unint64_t v90 = v115;
  sub_259F13868();
  swift_allocError();
  *(void *)uint64_t v91 = v89;
  *(void *)(v91 + 8) = v90;
  *(unsigned char *)(v91 + 16) = 5;
  swift_willThrow();
  sub_259F13920(v105, (uint64_t (*)(void))type metadata accessor for InferredProtobufType);
  v76(v102, v49);
  sub_259F13920(v79, (uint64_t (*)(void))type metadata accessor for InferredProtobufType);
  return sub_259F13920(v81, type metadata accessor for DatasetColumnDescription);
}

uint64_t sub_259F12B30@<X0>(unsigned __int8 *a1@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void (*a5)(char *, uint64_t, uint64_t, uint64_t)@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned char *a9@<X8>)
{
  v88[1] = a8;
  uint64_t v104 = a7;
  uint64_t v106 = a5;
  unint64_t v107 = a6;
  v98 = a9;
  uint64_t v93 = sub_259F68530();
  uint64_t v92 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  uint64_t v91 = (char *)v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_259F68400();
  uint64_t v94 = *(void *)(v99 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v99);
  uint64_t v16 = (char *)v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  unint64_t v90 = (char *)v88 - v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA108);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v96 = (char *)v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  int v22 = (char *)v88 - v21;
  uint64_t v23 = sub_259F68440();
  uint64_t v102 = *(void *)(v23 - 8);
  uint64_t v103 = v23;
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v95 = (char *)v88 - v28;
  MEMORY[0x270FA5388](v27);
  v100 = (char *)v88 - v29;
  uint64_t v101 = type metadata accessor for InferredProtobufType();
  uint64_t v30 = MEMORY[0x270FA5388](v101);
  uint64_t v32 = (char *)v88 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v30);
  uint64_t v97 = (uint64_t)v88 - v34;
  uint64_t result = MEMORY[0x270FA5388](v33);
  uint64_t v114 = (uint64_t)v88 - v36;
  unint64_t v37 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v37 >= *(void *)(a3 + 16))
  {
LABEL_31:
    __break(1u);
    return result;
  }
  uint64_t v89 = v16;
  int v38 = *a1;
  uint64_t v39 = a3 + 56 * v37 + 32;
  sub_259F136C0(v39, (uint64_t)&v111);
  uint64_t v40 = (uint64_t)v111;
  uint64_t v41 = v112;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
  sub_259F136C0(v39, (uint64_t)&v111);
  swift_bridgeObjectRelease();
  sub_259F13728(&v113, (uint64_t)v110);
  sub_259F13740((uint64_t)v110, (uint64_t)&v111);
  uint64_t v42 = v107;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v43 = v42;
  uint64_t v44 = v105;
  sub_259F5984C(&v111, a4 & 1, (uint64_t)v106, v43, v40, v41, v114);
  if (v44)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
    return swift_bridgeObjectRelease();
  }
  LODWORD(v105) = v38;
  swift_bridgeObjectRetain();
  uint64_t v45 = sub_259F68520();
  uint64_t v46 = *(void *)(v45 + 16);
  v88[0] = v40;
  if (v46)
  {
    unint64_t v47 = sub_259F17068(v40, v41);
    uint64_t v48 = v102;
    uint64_t v49 = v103;
    if (v50)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v102 + 16))(v22, *(void *)(v45 + 56) + *(void *)(v102 + 72) * v47, v103);
      uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56);
      v51(v22, 0, 1, v49);
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v48 = v102;
    uint64_t v49 = v103;
  }
  uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56);
  v51(v22, 1, 1, v49);
LABEL_10:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v22, 1, v49) != 1)
  {
    uint64_t v67 = v100;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v100, v22, v49);
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v26, v67, v49);
    sub_259F68420();
    uint64_t v68 = sub_259F68430();
    uint64_t v70 = v69;
    char v71 = *(void (**)(char *, uint64_t))(v48 + 8);
    v71(v26, v49);
    uint64_t v72 = v101;
    uint64_t v73 = (uint64_t *)&v32[*(int *)(v101 + 20)];
    *uint64_t v73 = v68;
    v73[1] = v70;
    uint64_t v74 = (uint64_t)v32;
    uint64_t v75 = v97;
    sub_259F13804(v74, v97);
    uint64_t v76 = v114;
    char v77 = sub_259F683F0();
    char v78 = v105;
    if (v77)
    {
      uint64_t v79 = *(int *)(v72 + 20);
      char v80 = (void *)(v75 + v79);
      uint64_t v81 = *(void *)(v75 + v79 + 8);
      uint64_t v82 = (void *)(v76 + v79);
      uint64_t v83 = v82[1];
      if (v81)
      {
        if (v83 && (*v80 == *v82 && v81 == v83 || (sub_259F68C70() & 1) != 0)) {
          goto LABEL_21;
        }
      }
      else if (!v83)
      {
LABEL_21:
        swift_bridgeObjectRelease();
        sub_259F13920(v75, (uint64_t (*)(void))type metadata accessor for InferredProtobufType);
        v71(v100, v103);
        sub_259F13920(v76, (uint64_t (*)(void))type metadata accessor for InferredProtobufType);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
        unsigned char *v98 = v78;
        return result;
      }
    }
    uint64_t v111 = 0;
    unint64_t v112 = 0xE000000000000000;
    sub_259F68960();
    unint64_t v84 = v107;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v111 = v106;
    unint64_t v112 = v84;
    sub_259F686F0();
    sub_259F686F0();
    swift_bridgeObjectRelease();
    sub_259F686F0();
    if (*(void *)(v75 + *(int *)(v72 + 20) + 8))
    {
      uint64_t v108 = 0;
      unint64_t v109 = 0xE000000000000000;
      sub_259F686F0();
      sub_259F686F0();
    }
    else
    {
      uint64_t v108 = 0;
      unint64_t v109 = 0xE000000000000000;
    }
    sub_259F68A10();
    sub_259F686F0();
    sub_259F686F0();
    swift_bridgeObjectRelease();
    sub_259F686F0();
    if (*(void *)(v76 + *(int *)(v72 + 20) + 8))
    {
      uint64_t v108 = 0;
      unint64_t v109 = 0xE000000000000000;
      sub_259F686F0();
      sub_259F686F0();
    }
    else
    {
      uint64_t v108 = 0;
      unint64_t v109 = 0xE000000000000000;
    }
    sub_259F68A10();
    sub_259F686F0();
    sub_259F686F0();
    swift_bridgeObjectRelease();
    sub_259F686F0();
    v85 = (void (*)(void, void, void, void))v111;
    unint64_t v86 = v112;
    sub_259F13868();
    swift_allocError();
    *(void *)uint64_t v87 = v85;
    *(void *)(v87 + 8) = v86;
    *(unsigned char *)(v87 + 16) = 5;
    swift_willThrow();
    sub_259F13920(v75, (uint64_t (*)(void))type metadata accessor for InferredProtobufType);
    v71(v100, v103);
    sub_259F13920(v76, (uint64_t (*)(void))type metadata accessor for InferredProtobufType);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
  }
  uint64_t v106 = v51;
  unint64_t v107 = 0;
  sub_259F137A4((uint64_t)v22);
  uint64_t v52 = v94;
  uint64_t v53 = v114;
  uint64_t v54 = v99;
  (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v90, v114, v99);
  uint64_t v105 = *(void *)(v53 + *(int *)(v101 + 20));
  uint64_t v55 = v92;
  v56 = v91;
  uint64_t v57 = v93;
  (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v91, v104, v93);
  swift_bridgeObjectRetain();
  sub_259F684F0();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v57);
  LOBYTE(v111) = 1;
  int v58 = v95;
  sub_259F68410();
  int v59 = v89;
  sub_259F68420();
  LODWORD(v56) = (*(uint64_t (**)(char *, uint64_t))(v52 + 88))(v59, v54);
  int v60 = *MEMORY[0x263F5F1A0];
  (*(void (**)(char *, uint64_t))(v52 + 8))(v59, v54);
  if (v56 == v60)
  {
    uint64_t v61 = sub_259F68430();
    if (v62)
    {
      sub_259F42DE8((uint64_t *)&v111, v61, v62);
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v64 = v102;
  uint64_t v63 = v103;
  uint64_t v65 = (uint64_t)v96;
  (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v96, v58, v103);
  v106((char *)v65, 0, 1, v63);
  uint64_t v66 = (void (*)(void, void))sub_259F68510();
  sub_259F29660(v65, v88[0], v41);
  v66(&v111, 0);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v58, v63);
  sub_259F13920(v114, (uint64_t (*)(void))type metadata accessor for InferredProtobufType);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
  unsigned char *v98 = 1;
  return result;
}

uint64_t sub_259F136C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_259F13728(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_259F13740(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_259F137A4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA108);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_259F13804(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InferredProtobufType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_259F13868()
{
  unint64_t result = qword_26A3FA118;
  if (!qword_26A3FA118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA118);
  }
  return result;
}

uint64_t sub_259F138BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DatasetColumnDescription(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_259F13920(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for AggregationRecipe()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for AggregationRecipe(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AggregationRecipe(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AggregationRecipe(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AggregationRecipe(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AggregationRecipe(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AggregationRecipe()
{
  return &type metadata for AggregationRecipe;
}

BOOL sub_259F13BB0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_259F13BC4()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6556657069636572;
      break;
    case 3:
      unint64_t result = 0x747069726373;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_259F13C5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_259F140AC(a1, a2);
  *a3 = result;
  return result;
}

void sub_259F13C84(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_259F13C90(uint64_t a1)
{
  unint64_t v2 = sub_259F13FBC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_259F13CCC(uint64_t a1)
{
  unint64_t v2 = sub_259F13FBC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_259F13D08(void *a1)
{
  long long v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA120);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F13FBC();
  sub_259F68E20();
  LOBYTE(v11) = 0;
  sub_259F68BB0();
  if (!v2)
  {
    if (v3[2])
    {
      LOBYTE(v11) = 1;
      sub_259F68BE0();
    }
    uint64_t v11 = v3[3];
    HIBYTE(v10) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA130);
    sub_259F145E8(&qword_26A3FA138);
    sub_259F68BF0();
    uint64_t v11 = v3[4];
    HIBYTE(v10) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA140);
    sub_259F1464C(&qword_26A3FA148, (void (*)(void))sub_259F14058);
    sub_259F68BF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_259F13F5C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_259F14278(a1, (uint64_t *)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_259F13FA4(void *a1)
{
  return sub_259F13D08(a1);
}

unint64_t sub_259F13FBC()
{
  unint64_t result = qword_26A3FA128;
  if (!qword_26A3FA128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA128);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_259F14058()
{
  unint64_t result = qword_26A3FA150;
  if (!qword_26A3FA150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA150);
  }
  return result;
}

uint64_t sub_259F140AC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x8000000259F69580 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6556657069636572 && a2 == 0xED00006E6F697372 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000259F69640 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x747069726373 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_259F68C70();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_259F14278@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA158);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F13FBC();
  sub_259F68DF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v23) = 0;
  uint64_t v10 = sub_259F68B40();
  uint64_t v12 = v11;
  LOBYTE(v23) = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_259F68B20();
  if (v14) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = v13;
  }
  uint64_t v21 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA130);
  char v22 = 2;
  sub_259F145E8(&qword_26A3FA160);
  sub_259F68B30();
  if (v23) {
    uint64_t v16 = v23;
  }
  else {
    uint64_t v16 = MEMORY[0x263F8EE78];
  }
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA140);
  char v22 = 3;
  sub_259F1464C(&qword_26A3FA168, (void (*)(void))sub_259F146BC);
  uint64_t v20 = v16;
  swift_bridgeObjectRetain();
  sub_259F68B60();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v17 = v23;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v18 = v20;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v21;
  a2[3] = v18;
  a2[4] = v17;
  return result;
}

uint64_t sub_259F145E8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A3FA130);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_259F1464C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A3FA140);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_259F146BC()
{
  unint64_t result = qword_26A3FA170;
  if (!qword_26A3FA170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA170);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AggregationRecipe.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AggregationRecipe.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259F1486CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AggregationRecipe.CodingKeys()
{
  return &type metadata for AggregationRecipe.CodingKeys;
}

unint64_t sub_259F148A8()
{
  unint64_t result = qword_26A3FA178;
  if (!qword_26A3FA178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA178);
  }
  return result;
}

unint64_t sub_259F14900()
{
  unint64_t result = qword_26A3FA180;
  if (!qword_26A3FA180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA180);
  }
  return result;
}

unint64_t sub_259F14958()
{
  unint64_t result = qword_26A3FA188;
  if (!qword_26A3FA188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA188);
  }
  return result;
}

unint64_t sub_259F149AC(char a1)
{
  unint64_t result = 1701667182;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_259F14A44(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA1B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F15264();
  sub_259F68E20();
  char v13 = 0;
  sub_259F68BB0();
  if (!v2)
  {
    char v12 = 1;
    sub_259F68BC0();
    uint64_t v11 = *(void *)(v3 + 24);
    v10[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA1A0);
    sub_259F152B8((unint64_t *)&qword_26A3FA1C0, &qword_26A3FA1C8);
    sub_259F68BF0();
    v10[14] = 3;
    sub_259F68B90();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_259F14C50()
{
  return sub_259F149AC(*v0);
}

uint64_t sub_259F14C58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_259F15984(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_259F14C80(uint64_t a1)
{
  unint64_t v2 = sub_259F15264();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_259F14CBC(uint64_t a1)
{
  unint64_t v2 = sub_259F15264();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_259F14CF8()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_259F14D00()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_259F14D08()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

double sub_259F14D38@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_259F14F40(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_259F14D7C(void *a1)
{
  return sub_259F14A44(a1);
}

uint64_t sub_259F14D94(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_259F14E8C((uint64_t)v7, (uint64_t)v8) & 1;
}

uint64_t sub_259F14DDC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (*(uint64_t (**)(void))(*(void *)(a2[1] + 8) + 8))();
  uint64_t v8 = v7;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(a2[3] + 8))(a1);
  uint64_t result = (*(uint64_t (**)(uint64_t))(a2[2] + 8))(a1);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v8;
  *(unsigned char *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = v9;
  *(void *)(a3 + 32) = result;
  *(void *)(a3 + 40) = v11;
  return result;
}

uint64_t sub_259F14E8C(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (v5 = sub_259F68C70(), uint64_t result = 0, (v5 & 1) != 0))
  {
    if (((*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 16)) & 1) == 0
      && (sub_259F2D8E0(*(void *)(a1 + 24), *(void *)(a2 + 24)) & 1) != 0)
    {
      uint64_t v7 = *(void *)(a1 + 40);
      uint64_t v8 = *(void *)(a2 + 40);
      if (v7)
      {
        if (v8 && (*(void *)(a1 + 32) == *(void *)(a2 + 32) && v7 == v8 || (sub_259F68C70() & 1) != 0)) {
          return 1;
        }
      }
      else if (!v8)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_259F14F40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA190);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F15264();
  sub_259F68DF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v27 = 0;
  uint64_t v9 = sub_259F68B40();
  uint64_t v11 = v10;
  char v26 = 1;
  swift_bridgeObjectRetain();
  int v23 = sub_259F68B10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA1A0);
  char v25 = 2;
  sub_259F152B8(&qword_26A3FA1A8, &qword_26A3FA1B0);
  sub_259F68B60();
  char v24 = 3;
  uint64_t v21 = v22;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_259F68B00();
  uint64_t v14 = v13;
  v23 &= 1u;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v20 = v12;
  v15(v8, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v16 = v21;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v23;
  uint64_t v18 = v20;
  *(void *)(a2 + 24) = v16;
  *(void *)(a2 + 32) = v18;
  *(void *)(a2 + 40) = v14;
  return result;
}

unint64_t sub_259F15264()
{
  unint64_t result = qword_26A3FA198;
  if (!qword_26A3FA198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA198);
  }
  return result;
}

uint64_t sub_259F152B8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A3FA1A0);
    sub_259F15338(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_259F15338(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for DatasetColumnDescription(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ExtractionBlockConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259F15448);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtractionBlockConfig.CodingKeys()
{
  return &type metadata for ExtractionBlockConfig.CodingKeys;
}

uint64_t destroy for ExtractionBlockConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ExtractionBlockConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExtractionBlockConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ExtractionBlockConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AggregationBlockConfig(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AggregationBlockConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtractionBlockConfig()
{
  return &type metadata for ExtractionBlockConfig;
}

unint64_t sub_259F156CC(void *a1)
{
  a1[1] = sub_259F15704();
  a1[2] = sub_259F15758();
  unint64_t result = sub_259F157AC();
  a1[3] = result;
  return result;
}

unint64_t sub_259F15704()
{
  unint64_t result = qword_26A3FA1D0;
  if (!qword_26A3FA1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA1D0);
  }
  return result;
}

unint64_t sub_259F15758()
{
  unint64_t result = qword_26A3FA1D8;
  if (!qword_26A3FA1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA1D8);
  }
  return result;
}

unint64_t sub_259F157AC()
{
  unint64_t result = qword_26A3FA1E0;
  if (!qword_26A3FA1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA1E0);
  }
  return result;
}

unint64_t sub_259F15804()
{
  unint64_t result = qword_26A3FA1E8;
  if (!qword_26A3FA1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA1E8);
  }
  return result;
}

unint64_t sub_259F15858(uint64_t a1)
{
  unint64_t result = sub_259F15880();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_259F15880()
{
  unint64_t result = qword_26A3FA1F0;
  if (!qword_26A3FA1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA1F0);
  }
  return result;
}

unint64_t sub_259F158D8()
{
  unint64_t result = qword_26A3FA1F8;
  if (!qword_26A3FA1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA1F8);
  }
  return result;
}

unint64_t sub_259F15930()
{
  unint64_t result = qword_26A3FA200;
  if (!qword_26A3FA200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA200);
  }
  return result;
}

uint64_t sub_259F15984(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000259F69660 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000259F69680 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000259F69600)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_259F68C70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_259F15B18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
  swift_beginAccess();
  uint64_t v4 = sub_259F684E0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_259F15BA0(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_259F684E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = *a2 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  return swift_endAccess();
}

uint64_t sub_259F15CBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
  swift_beginAccess();
  uint64_t v4 = sub_259F684E0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ProtobufFactory.messageNameMap.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ProtobufFactory.__allocating_init(manifest:messageNameMap:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA208);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = v7 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store;
  uint64_t v9 = sub_259F68390();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  uint64_t v11 = v7 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
  uint64_t v12 = sub_259F684E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a1, v12);
  *(void *)(v7 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_messageNameMap) = a2;
  v10((uint64_t)v6, 1, 1, v9);
  uint64_t v13 = v7 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store;
  swift_beginAccess();
  sub_259F16078((uint64_t)v6, v13);
  swift_endAccess();
  return v7;
}

uint64_t ProtobufFactory.init(manifest:messageNameMap:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA208);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (char *)(v2 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store);
  uint64_t v9 = sub_259F68390();
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  uint64_t v11 = v2 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
  uint64_t v12 = sub_259F684E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a1, v12);
  *(void *)(v2 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_messageNameMap) = a2;
  v10(v7, 1, 1, v9);
  uint64_t v13 = v2 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store;
  swift_beginAccess();
  sub_259F16078((uint64_t)v7, v13);
  swift_endAccess();
  return v2;
}

uint64_t sub_259F16078(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_259F160E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_259F684E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA208);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v19 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v19 - v10;
  uint64_t v12 = v1 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store;
  swift_beginAccess();
  sub_259F17894(v12, (uint64_t)v11);
  uint64_t v13 = sub_259F68390();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a1, v11, v13);
  }
  sub_259F17838((uint64_t)v11, &qword_26A3FA208);
  uint64_t v15 = v1 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v15, v3);
  uint64_t v16 = v20;
  sub_259F68370();
  uint64_t v20 = v16;
  if (v16) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_getObjectType();
  sub_259F68540();
  swift_unknownObjectRelease();
  uint64_t v18 = (uint64_t)v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v19, a1, v13);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
  swift_beginAccess();
  sub_259F16078(v18, v12);
  return swift_endAccess();
}

uint64_t sub_259F163E8(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA208);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_259F684E0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  uint64_t v10 = v1 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v10, v9, v6);
  swift_endAccess();
  uint64_t v11 = sub_259F68390();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 1, v11);
  uint64_t v12 = v1 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store;
  swift_beginAccess();
  sub_259F16078((uint64_t)v5, v12);
  return swift_endAccess();
}

uint64_t sub_259F165B8(uint64_t *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_259F68390();
  uint64_t v17 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_259F68460();
  uint64_t v16 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v15 = a1[2];
  if (*(void *)(*(void *)(v3 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_messageNameMap) + 16))
  {
    swift_bridgeObjectRetain();
    sub_259F17068(v12, v11);
    if (v13)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
LABEL_6:
  sub_259F160E0((uint64_t)v7);
  if (!v2)
  {
    sub_259F68380();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v5);
    uint64_t v5 = sub_259F68450();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v8);
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_259F16844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v14[3] = a3;
  v14[1] = a2;
  uint64_t v5 = sub_259F68390();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_259F68460();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_259F160E0((uint64_t)v8);
  if (!v4)
  {
    v14[0] = v10;
    sub_259F68380();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v3 = sub_259F68450();
    (*(void (**)(char *, uint64_t))(v14[0] + 8))(v12, v9);
  }
  return v3;
}

uint64_t ProtobufFactory.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
  uint64_t v2 = sub_259F684E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  sub_259F17838(v0 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store, &qword_26A3FA208);
  return v0;
}

uint64_t ProtobufFactory.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
  uint64_t v2 = sub_259F684E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  sub_259F17838(v0 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store, &qword_26A3FA208);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t sub_259F16BB4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_259F16BC8(uint64_t *a1)
{
  return sub_259F165B8(a1);
}

uint64_t sub_259F16BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v15[3] = a3;
  v15[1] = a2;
  uint64_t v5 = sub_259F68390();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_259F68460();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v3;
  sub_259F160E0((uint64_t)v8);
  if (!v4)
  {
    v15[0] = v10;
    sub_259F68380();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v13 = sub_259F68450();
    (*(void (**)(char *, uint64_t))(v15[0] + 8))(v12, v9);
  }
  return v13;
}

uint64_t sub_259F16E0C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void, void, long long *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v21 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v10 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    sub_259F13740(*(void *)(a1 + 56) + 40 * i, (uint64_t)v27);
    *(void *)&long long v26 = v16;
    *((void *)&v26 + 1) = v17;
    long long v22 = v26;
    long long v23 = v27[0];
    long long v24 = v27[1];
    uint64_t v25 = v28;
    long long v18 = v26;
    swift_bridgeObjectRetain();
    if (a2(v18, *((void *)&v18 + 1), &v23))
    {
      uint64_t result = swift_release();
      long long v19 = v23;
      *(_OWORD *)a3 = v22;
      *(_OWORD *)(a3 + 16) = v19;
      *(_OWORD *)(a3 + 32) = v24;
      *(void *)(a3 + 48) = v25;
      return result;
    }
    uint64_t result = sub_259F17838((uint64_t)&v22, &qword_26A3FA238);
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v29) {
      goto LABEL_25;
    }
    unint64_t v13 = *(void *)(v21 + 8 * v12);
    ++v9;
    if (!v13)
    {
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v29) {
        goto LABEL_25;
      }
      unint64_t v13 = *(void *)(v21 + 8 * v9);
      if (!v13)
      {
        int64_t v9 = v12 + 2;
        if (v12 + 2 >= v29) {
          goto LABEL_25;
        }
        unint64_t v13 = *(void *)(v21 + 8 * v9);
        if (!v13)
        {
          int64_t v9 = v12 + 3;
          if (v12 + 3 >= v29) {
            goto LABEL_25;
          }
          unint64_t v13 = *(void *)(v21 + 8 * v9);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v29)
  {
LABEL_25:
    uint64_t result = swift_release();
    *(void *)(a3 + 48) = 0;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
    return result;
  }
  unint64_t v13 = *(void *)(v21 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v29) {
      goto LABEL_25;
    }
    unint64_t v13 = *(void *)(v21 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

unint64_t sub_259F17068(uint64_t a1, uint64_t a2)
{
  sub_259F68DA0();
  sub_259F686E0();
  uint64_t v4 = sub_259F68DC0();
  return sub_259F17440(a1, a2, v4);
}

uint64_t sub_259F170E8()
{
  return type metadata accessor for ProtobufFactory();
}

uint64_t type metadata accessor for ProtobufFactory()
{
  uint64_t result = qword_26A3FA218;
  if (!qword_26A3FA218) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_259F1713C()
{
  sub_259F684E0();
  if (v0 <= 0x3F)
  {
    sub_259F172F8();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for ProtobufFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ProtobufFactory);
}

uint64_t dispatch thunk of ProtobufFactory.manifest.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ProtobufFactory.__allocating_init(manifest:messageNameMap:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of ProtobufFactory.updateManifest(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of ProtobufFactory.makeFlatMessagePayload(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of ProtobufFactory.makeFlatMessagePayload(with:messageName:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

void sub_259F172F8()
{
  if (!qword_26A3FA228)
  {
    sub_259F68390();
    unint64_t v0 = sub_259F688B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A3FA228);
    }
  }
}

unint64_t sub_259F17350(uint64_t a1)
{
  sub_259F68A60();
  uint64_t v2 = sub_259F685B0();
  return sub_259F17524(a1, v2);
}

unint64_t sub_259F173B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_259F68DA0();
  DatasetRow.hash(into:)();
  uint64_t v6 = sub_259F68DC0();
  return sub_259F176BC(a1, a2, a3, v6);
}

unint64_t sub_259F17440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_259F68C70() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_259F68C70() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_259F17524(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v4 = sub_259F68A60();
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v20 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    unint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      uint64_t v16 = v11;
      v12(v7, *(void *)(v22 + 48) + v14 * v9, v4);
      char v17 = sub_259F68600();
      (*v15)(v7, v4);
      if (v17) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      uint64_t v11 = v16;
    }
    while (((*(void *)(v20 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_259F176BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v6 = a4 & ~v5;
  if ((*(void *)(v4 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v8 = ~v5;
    do
    {
      if (*(void *)(*(void *)(*(void *)(v4 + 48) + 24 * v6 + 16) + 16) == *(void *)(a3 + 16))
      {
        MEMORY[0x270FA5388](a1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v9 = swift_bridgeObjectRetain();
        sub_259F16E0C(v9, (uint64_t (*)(void, void, long long *))sub_259F1782C, (uint64_t)v12);
        swift_bridgeObjectRelease();
        uint64_t v10 = v13;
        sub_259F17838((uint64_t)v12, &qword_26A3FA230);
        swift_bridgeObjectRelease();
        a1 = swift_bridgeObjectRelease();
        if (!v10) {
          break;
        }
      }
      unint64_t v6 = (v6 + 1) & v8;
    }
    while (((*(void *)(v4 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

uint64_t sub_259F1782C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_259F18200(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_259F17838(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_259F17894(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for VoidLogger()
{
  return &type metadata for VoidLogger;
}

uint64_t DatasetRow.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DatasetRow.cells.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DatasetRow.init(name:_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t DatasetRow.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v50 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_259F1C8A8(0, v2, 0);
    uint64_t v4 = sub_259F1D9B8(v1);
    if ((v4 & 0x8000000000000000) == 0)
    {
      unint64_t v6 = v4;
      if (v4 < 1 << *(unsigned char *)(v1 + 32))
      {
        uint64_t v7 = 0;
        uint64_t v8 = v1 + 64;
        uint64_t v31 = v1 + 80;
        int64_t v32 = v2;
        int v33 = v5;
        uint64_t v34 = v1 + 64;
        uint64_t v35 = v1;
        do
        {
          unint64_t v9 = v6 >> 6;
          if ((*(void *)(v8 + 8 * (v6 >> 6)) & (1 << v6)) == 0) {
            goto LABEL_34;
          }
          if (*(_DWORD *)(v1 + 36) != v5) {
            goto LABEL_35;
          }
          uint64_t v10 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v6);
          uint64_t v12 = *v10;
          uint64_t v11 = v10[1];
          sub_259F13740(*(void *)(v1 + 56) + 40 * v6, (uint64_t)v45);
          v44[0] = v12;
          v44[1] = v11;
          *(void *)&long long v41 = v12;
          *((void *)&v41 + 1) = v11;
          sub_259F13740((uint64_t)v45, (uint64_t)v42);
          long long v38 = v41;
          v39[0] = v42[0];
          v39[1] = v42[1];
          uint64_t v40 = v43;
          swift_bridgeObjectRetain_n();
          sub_259F17838((uint64_t)v44, &qword_26A3FA238);
          unint64_t v13 = *((void *)&v38 + 1);
          unint64_t v14 = v38;
          *(_OWORD *)&v36[5] = v38;
          sub_259F13740((uint64_t)v39, (uint64_t)v37);
          unsigned long long v46 = __PAIR128__(v13, v14);
          sub_259F13740((uint64_t)v39, (uint64_t)v36);
          sub_259F13728((long long *)v36, (uint64_t)&v47);
          swift_bridgeObjectRetain();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
          sub_259F17838((uint64_t)&v38, &qword_26A3FA238);
          uint64_t v3 = v50;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_259F1C8A8(0, *(void *)(v3 + 16) + 1, 1);
            uint64_t v3 = v50;
          }
          unint64_t v16 = *(void *)(v3 + 16);
          unint64_t v15 = *(void *)(v3 + 24);
          uint64_t v1 = v35;
          if (v16 >= v15 >> 1)
          {
            sub_259F1C8A8(v15 > 1, v16 + 1, 1);
            uint64_t v3 = v50;
          }
          *(void *)(v3 + 16) = v16 + 1;
          uint64_t v17 = v3 + 56 * v16;
          unsigned long long v18 = v46;
          long long v19 = v47;
          long long v20 = v48;
          *(void *)(v17 + 80) = v49;
          *(_OWORD *)(v17 + 48) = v19;
          *(_OWORD *)(v17 + 64) = v20;
          *(_OWORD *)(v17 + 32) = v18;
          uint64_t v21 = 1 << *(unsigned char *)(v35 + 32);
          if ((uint64_t)v6 >= v21) {
            goto LABEL_36;
          }
          uint64_t v8 = v34;
          uint64_t v22 = *(void *)(v34 + 8 * v9);
          if ((v22 & (1 << v6)) == 0) {
            goto LABEL_37;
          }
          int v5 = v33;
          if (*(_DWORD *)(v35 + 36) != v33) {
            goto LABEL_38;
          }
          unint64_t v23 = v22 & (-2 << (v6 & 0x3F));
          if (v23)
          {
            unint64_t v6 = __clz(__rbit64(v23)) | v6 & 0xFFFFFFFFFFFFFFC0;
            int64_t v24 = v32;
            goto LABEL_23;
          }
          unint64_t v25 = v9 + 1;
          unint64_t v26 = (unint64_t)(v21 + 63) >> 6;
          int64_t v24 = v32;
          if (v9 + 1 < v26)
          {
            unint64_t v27 = *(void *)(v34 + 8 * v25);
            if (v27)
            {
LABEL_21:
              unint64_t v6 = __clz(__rbit64(v27)) + (v25 << 6);
              goto LABEL_23;
            }
            while (v26 - 2 != v9)
            {
              unint64_t v27 = *(void *)(v31 + 8 * v9++);
              if (v27)
              {
                unint64_t v25 = v9 + 1;
                goto LABEL_21;
              }
            }
          }
          unint64_t v6 = 1 << *(unsigned char *)(v35 + 32);
LABEL_23:
          if (++v7 == v24)
          {
            swift_bridgeObjectRelease();
            goto LABEL_28;
          }
        }
        while ((v6 & 0x8000000000000000) == 0 && (uint64_t)v6 < v21);
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
LABEL_28:
    *(void *)&unsigned long long v46 = v3;
    swift_bridgeObjectRetain();
    sub_259F1AC9C((uint64_t *)&v46, (uint64_t (*)(uint64_t))sub_259F1D904, sub_259F1AD20);
    swift_bridgeObjectRelease();
    uint64_t v28 = *(void *)(v46 + 16);
    if (v28)
    {
      uint64_t v29 = v46 + 32;
      swift_retain();
      do
      {
        sub_259F136C0(v29, (uint64_t)&v46);
        sub_259F686E0();
        __swift_project_boxed_opaque_existential_1(&v47, *((uint64_t *)&v48 + 1));
        sub_259F685C0();
        sub_259F17838((uint64_t)&v46, &qword_26A3FA110);
        v29 += 56;
        --v28;
      }
      while (v28);
      return swift_release_n();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t DatasetRow.hashValue.getter()
{
  return sub_259F68DC0();
}

uint64_t sub_259F17DF4()
{
  return sub_259F68DC0();
}

uint64_t sub_259F17E4C()
{
  return sub_259F68DC0();
}

uint64_t sub_259F17EA0(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = v6;
  sub_259F1E0DC(v5, (uint64_t)sub_259F1D8B0, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v10, v1, v3, v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v10;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2) {
    *(void *)(v1 + 16) = v8;
  }
  return result;
}

uint64_t sub_259F17F84@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (sub_259F682D0()) {
    return sub_259F13740((uint64_t)a1, a4);
  }
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  sub_259F68960();
  sub_259F686F0();
  uint64_t v10 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_259F33D4C(v10);
  swift_bridgeObjectRelease();
  unint64_t v16 = v11;
  sub_259F1AC9C((uint64_t *)&v16, sub_259F1D918, sub_259F1B518);
  if (v4)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    MEMORY[0x25A2EFD90](v16, MEMORY[0x263F8D310]);
    swift_release();
    sub_259F686F0();
    swift_bridgeObjectRelease();
    sub_259F686F0();
    swift_bridgeObjectRetain_n();
    uint64_t v12 = sub_259F33D4C(a3);
    swift_bridgeObjectRelease();
    unint64_t v16 = v12;
    sub_259F1AC9C((uint64_t *)&v16, sub_259F1D918, sub_259F1B518);
    swift_bridgeObjectRelease();
    MEMORY[0x25A2EFD90](v16, MEMORY[0x263F8D310]);
    swift_release();
    sub_259F686F0();
    swift_bridgeObjectRelease();
    uint64_t v13 = v17;
    unint64_t v14 = v18;
    sub_259F13868();
    swift_allocError();
    *(void *)uint64_t v15 = v13;
    *(void *)(v15 + 8) = v14;
    *(unsigned char *)(v15 + 16) = 2;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_259F18200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (!*(void *)(a6 + 16))
  {
    uint64_t v15 = 0;
    long long v13 = 0u;
    long long v14 = 0u;
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_259F17068(a1, a2);
  if ((v10 & 1) == 0)
  {
    uint64_t v15 = 0;
    long long v13 = 0u;
    long long v14 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_259F13740(*(void *)(a6 + 56) + 40 * v9, (uint64_t)&v13);
  swift_bridgeObjectRelease();
  if (!*((void *)&v14 + 1))
  {
LABEL_7:
    sub_259F17838((uint64_t)&v13, &qword_26A3FA270);
    char v11 = 1;
    return v11 & 1;
  }
  sub_259F13728(&v13, (uint64_t)v16);
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  char v11 = sub_259F682D0() ^ 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v11 & 1;
}

uint64_t sub_259F18300(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA2F8);
  char v36 = a2;
  uint64_t v6 = sub_259F68AA0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_259F68DA0();
    sub_259F686E0();
    uint64_t result = sub_259F68DC0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_259F18618(uint64_t a1, int a2)
{
  return sub_259F1A244(a1, a2, MEMORY[0x263F5F1F0], &qword_26A3FA348);
}

uint64_t sub_259F18638(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA250);
  char v37 = a2;
  uint64_t v6 = sub_259F68AA0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35) {
      break;
    }
    unint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v35) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v36 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v35) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v36 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    uint64_t v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    char v25 = (long long *)(*(void *)(v5 + 56) + 40 * v17);
    if (v37)
    {
      sub_259F13728(v25, (uint64_t)v38);
    }
    else
    {
      sub_259F13740((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_259F68DA0();
    sub_259F686E0();
    uint64_t result = sub_259F68DC0();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *unint64_t v15 = v24;
    v15[1] = v23;
    uint64_t result = sub_259F13728(v38, *(void *)(v7 + 56) + 40 * v14);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v19 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_259F18960(uint64_t a1, int a2)
{
  return sub_259F1A244(a1, a2, MEMORY[0x263F06EA8], &qword_26A3FA300);
}

uint64_t sub_259F18980(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA380);
  char v39 = a2;
  uint64_t v6 = sub_259F68AA0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v38 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v36 = v2;
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v13);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v13);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    unint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(v5 + 56) + 24 * v21;
    uint64_t v34 = *(void *)v33;
    long long v40 = *(_OWORD *)(v33 + 8);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_259F68DA0();
    sub_259F686E0();
    uint64_t result = sub_259F68DC0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *int64_t v18 = v32;
    v18[1] = v31;
    uint64_t v19 = *(void *)(v7 + 56) + 24 * v17;
    *(void *)uint64_t v19 = v34;
    *(_OWORD *)(v19 + 8) = v40;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  uint64_t v23 = (void *)(v5 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_259F18CC4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for DatasetColumnDescription(0);
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA2B0);
  int v43 = a2;
  uint64_t v9 = sub_259F68AA0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  long long v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  char v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    uint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    char v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_259F1E52C(v30, (uint64_t)v7);
    }
    else
    {
      sub_259F138BC(v30, (uint64_t)v7);
      swift_bridgeObjectRetain();
    }
    sub_259F68DA0();
    sub_259F686E0();
    uint64_t result = sub_259F68DC0();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *uint64_t v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_259F1E52C((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_259F19068(uint64_t a1, char a2)
{
  return sub_259F19F10(a1, a2, &qword_26A3FA2D0);
}

uint64_t sub_259F19074(uint64_t a1, char a2)
{
  return sub_259F19F10(a1, a2, &qword_26A3FA2C8);
}

uint64_t sub_259F19080(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = sub_259F68A60();
  uint64_t v5 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA308);
  int v45 = a2;
  uint64_t v9 = sub_259F68AA0();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    uint64_t v38 = v2;
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 64);
    int64_t v40 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v12;
    int64_t v39 = (unint64_t)(v11 + 63) >> 6;
    long long v41 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    unsigned long long v46 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v15 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    uint64_t v42 = v8;
    int v43 = v7;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v39) {
          goto LABEL_34;
        }
        unint64_t v22 = v40[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v39) {
            goto LABEL_34;
          }
          unint64_t v22 = v40[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v39)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v38;
              if (v45)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
                if (v36 >= 64) {
                  bzero(v40, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v40 = -1 << v36;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v40[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v22 = v40[v17];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_21:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = v5;
      uint64_t v25 = *(void *)(v5 + 72);
      unint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
      uint64_t v27 = v43;
      uint64_t v28 = v44;
      if (v45)
      {
        (*v46)(v43, v26, v44);
        sub_259F1E5EC((_OWORD *)(*(void *)(v8 + 56) + 32 * v20), v47);
      }
      else
      {
        (*v41)(v43, v26, v44);
        sub_259F1E590(*(void *)(v8 + 56) + 32 * v20, (uint64_t)v47);
      }
      uint64_t result = sub_259F685B0();
      uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v15 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v18 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      (*v46)((char *)(*(void *)(v10 + 48) + v25 * v18), (unint64_t)v27, v28);
      uint64_t result = (uint64_t)sub_259F1E5EC(v47, (_OWORD *)(*(void *)(v10 + 56) + 32 * v18));
      ++*(void *)(v10 + 16);
      uint64_t v5 = v24;
      uint64_t v8 = v42;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_259F1947C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA368);
  char v40 = a2;
  uint64_t v6 = sub_259F68AA0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v30 = *v29;
      uint64_t v31 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 24 * v21;
      uint64_t v34 = *(void *)v32;
      uint64_t v33 = *(void *)(v32 + 8);
      unsigned __int8 v35 = *(unsigned char *)(v32 + 16);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_259F1E5FC(v34, v33, v35);
      }
      sub_259F68DA0();
      sub_259F686E0();
      uint64_t result = sub_259F68DC0();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *unint64_t v18 = v30;
      v18[1] = v31;
      uint64_t v19 = *(void *)(v7 + 56) + 24 * v17;
      *(void *)uint64_t v19 = v34;
      *(void *)(v19 + 8) = v33;
      *(unsigned char *)(v19 + 16) = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_259F197A8(uint64_t a1, int a2)
{
  return sub_259F1A244(a1, a2, MEMORY[0x263F5F200], &qword_26A3FA340);
}

uint64_t sub_259F197C8(uint64_t a1, int a2)
{
  return sub_259F197F0(a1, a2, &qword_26A3FA320, &qword_26A3FA328);
}

uint64_t sub_259F197DC(uint64_t a1, int a2)
{
  return sub_259F197F0(a1, a2, &qword_26A3FA288, &qword_26A3FA290);
}

uint64_t sub_259F197F0(uint64_t a1, int a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v6 = v4;
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v8 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v51 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v50 = a2;
  uint64_t v11 = sub_259F68AA0();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v14 = *(void *)(v10 + 64);
  long long v47 = (void *)(v10 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  int v45 = v4;
  int64_t v46 = (unint64_t)(v13 + 63) >> 6;
  long long v48 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v49 = v8;
  unint64_t v17 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v18 = v11 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  while (1)
  {
    if (v16)
    {
      unint64_t v23 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v46) {
      break;
    }
    unint64_t v26 = v47;
    unint64_t v27 = v47[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v46) {
        goto LABEL_34;
      }
      unint64_t v27 = v47[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v46)
        {
LABEL_34:
          swift_release();
          uint64_t v6 = v45;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v47[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v46) {
              goto LABEL_34;
            }
            unint64_t v27 = v47[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v16 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v10 + 56);
    uint64_t v30 = v10;
    uint64_t v31 = (uint64_t *)(*(void *)(v10 + 48) + 16 * v24);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    uint64_t v34 = *(void *)(v49 + 72);
    uint64_t v35 = v29 + v34 * v24;
    if (v50)
    {
      (*v17)(v51, v35, v52);
    }
    else
    {
      (*v48)(v51, v35, v52);
      swift_bridgeObjectRetain();
    }
    sub_259F68DA0();
    sub_259F686E0();
    uint64_t result = sub_259F68DC0();
    uint64_t v36 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v37 = result & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)(v18 + 8 * (v37 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v37) & ~*(void *)(v18 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v39 = 0;
      unint64_t v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v41 = v38 == v40;
        if (v38 == v40) {
          unint64_t v38 = 0;
        }
        v39 |= v41;
        uint64_t v42 = *(void *)(v18 + 8 * v38);
      }
      while (v42 == -1);
      unint64_t v21 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    int64_t v22 = (void *)(*(void *)(v12 + 48) + 16 * v21);
    *int64_t v22 = v32;
    v22[1] = v33;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 56) + v34 * v21, v51, v52);
    ++*(void *)(v12 + 16);
    uint64_t v10 = v30;
  }
  swift_release();
  uint64_t v6 = v45;
  unint64_t v26 = v47;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v43 = 1 << *(unsigned char *)(v10 + 32);
  if (v43 >= 64) {
    bzero(v26, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v26 = -1 << v43;
  }
  *(void *)(v10 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v6 = v12;
  return result;
}

uint64_t sub_259F19BDC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA318);
  char v42 = a2;
  uint64_t v6 = sub_259F68AA0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    unint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_259F68DA0();
    sub_259F686E0();
    uint64_t result = sub_259F68DC0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *uint64_t v19 = v34;
    v19[1] = v33;
    int64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *int64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_259F19F04(uint64_t a1, char a2)
{
  return sub_259F19F10(a1, a2, &qword_26A3FA310);
}

uint64_t sub_259F19F10(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v37 = a2;
  uint64_t v7 = sub_259F68AA0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    int64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_259F68DA0();
    sub_259F686E0();
    uint64_t result = sub_259F68DC0();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *uint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  int64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_259F1A224(uint64_t a1, int a2)
{
  return sub_259F1A244(a1, a2, MEMORY[0x263F5F190], &qword_26A3FA350);
}

uint64_t sub_259F1A244(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t v6 = v4;
  uint64_t v52 = a3(0);
  uint64_t v8 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v51 = (char *)&v44 - v9;
  uint64_t v10 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v50 = a2;
  uint64_t v11 = sub_259F68AA0();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v14 = *(void *)(v10 + 64);
  long long v47 = (void *)(v10 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  int v45 = v4;
  int64_t v46 = (unint64_t)(v13 + 63) >> 6;
  long long v48 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v49 = v8;
  unint64_t v17 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v18 = v11 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  while (1)
  {
    if (v16)
    {
      unint64_t v23 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v46) {
      break;
    }
    char v26 = v47;
    unint64_t v27 = v47[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v46) {
        goto LABEL_34;
      }
      unint64_t v27 = v47[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v46)
        {
LABEL_34:
          swift_release();
          uint64_t v6 = v45;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v47[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v46) {
              goto LABEL_34;
            }
            unint64_t v27 = v47[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v16 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v10 + 56);
    uint64_t v30 = v10;
    uint64_t v31 = (uint64_t *)(*(void *)(v10 + 48) + 16 * v24);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    uint64_t v34 = *(void *)(v49 + 72);
    uint64_t v35 = v29 + v34 * v24;
    if (v50)
    {
      (*v17)(v51, v35, v52);
    }
    else
    {
      (*v48)(v51, v35, v52);
      swift_bridgeObjectRetain();
    }
    sub_259F68DA0();
    sub_259F686E0();
    uint64_t result = sub_259F68DC0();
    uint64_t v36 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v37 = result & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)(v18 + 8 * (v37 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v37) & ~*(void *)(v18 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v39 = 0;
      unint64_t v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v41 = v38 == v40;
        if (v38 == v40) {
          unint64_t v38 = 0;
        }
        v39 |= v41;
        uint64_t v42 = *(void *)(v18 + 8 * v38);
      }
      while (v42 == -1);
      unint64_t v21 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    int64_t v22 = (void *)(*(void *)(v12 + 48) + 16 * v21);
    *int64_t v22 = v32;
    v22[1] = v33;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 56) + v34 * v21, v51, v52);
    ++*(void *)(v12 + 16);
    uint64_t v10 = v30;
  }
  swift_release();
  uint64_t v6 = v45;
  char v26 = v47;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v43 = 1 << *(unsigned char *)(v10 + 32);
  if (v43 >= 64) {
    bzero(v26, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v26 = -1 << v43;
  }
  *(void *)(v10 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v6 = v12;
  return result;
}

uint64_t sub_259F1A630(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA358);
  char v37 = a2;
  uint64_t v6 = sub_259F68AA0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_259F68DA0();
    sub_259F686E0();
    uint64_t result = sub_259F68DC0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  int64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_259F1A93C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA268);
  uint64_t v6 = sub_259F68AA0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v40 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v38 = v2;
  int64_t v39 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v22 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v23 = v22 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v24 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v24 >= v39) {
      break;
    }
    char v25 = (void *)(v5 + 64);
    unint64_t v26 = *(void *)(v40 + 8 * v24);
    ++v13;
    if (!v26)
    {
      int64_t v13 = v24 + 1;
      if (v24 + 1 >= v39) {
        goto LABEL_33;
      }
      unint64_t v26 = *(void *)(v40 + 8 * v13);
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v39)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v38;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v26 = *(void *)(v40 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            int64_t v13 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v39) {
              goto LABEL_33;
            }
            unint64_t v26 = *(void *)(v40 + 8 * v13);
            ++v27;
            if (v26) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v27;
      }
    }
LABEL_30:
    unint64_t v10 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v13 << 6);
LABEL_31:
    uint64_t v32 = 24 * v23;
    uint64_t v33 = *(void *)(v5 + 48) + v32;
    uint64_t v34 = *(void *)v33;
    uint64_t v35 = *(void *)(v5 + 56) + v32;
    uint64_t v36 = *(void *)v35;
    long long v41 = *(_OWORD *)(v35 + 8);
    long long v42 = *(_OWORD *)(v33 + 8);
    if ((a2 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_259F68DA0();
    DatasetRow.hash(into:)();
    uint64_t result = sub_259F68DC0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      long long v18 = v42;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v14) >> 6;
      long long v18 = v42;
      do
      {
        if (++v16 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v30 = v16 == v29;
        if (v16 == v29) {
          unint64_t v16 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v16);
      }
      while (v31 == -1);
      unint64_t v17 = __clz(__rbit64(~v31)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v19 = 24 * v17;
    uint64_t v20 = *(void *)(v7 + 48) + v19;
    *(void *)uint64_t v20 = v34;
    *(_OWORD *)(v20 + 8) = v18;
    uint64_t v21 = *(void *)(v7 + 56) + v19;
    *(void *)uint64_t v21 = v36;
    *(_OWORD *)(v21 + 8) = v41;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v38;
  char v25 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
  if (v37 >= 64) {
    bzero(v25, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v25 = -1 << v37;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_259F1AC9C(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_259F1AD20(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_259F68C10();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_150;
    }
    if (v3) {
      return sub_259F1BC04(0, v3, 1, v2);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_158;
  }
  uint64_t v110 = result;
  uint64_t v119 = v1;
  if (v3 < 2)
  {
    uint64_t v8 = (char *)MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v109 = MEMORY[0x263F8EE78];
    if (v3 != 1)
    {
      unint64_t v10 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_117:
      v100 = v8;
      if (v10 >= 2)
      {
        uint64_t v101 = *v2;
        do
        {
          unint64_t v102 = v10 - 2;
          if (v10 < 2) {
            goto LABEL_145;
          }
          if (!v101) {
            goto LABEL_157;
          }
          uint64_t v103 = v100;
          uint64_t v104 = *(void *)&v100[16 * v102 + 32];
          uint64_t v105 = *(void *)&v100[16 * v10 + 24];
          uint64_t v106 = v119;
          sub_259F1BE34((char *)(v101 + 56 * v104), (char *)(v101 + 56 * *(void *)&v100[16 * v10 + 16]), v101 + 56 * v105, __dst);
          uint64_t v119 = v106;
          if (v106) {
            break;
          }
          if (v105 < v104) {
            goto LABEL_146;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v103 = sub_259F1C894((uint64_t)v103);
          }
          if (v102 >= *((void *)v103 + 2)) {
            goto LABEL_147;
          }
          unint64_t v107 = &v103[16 * v102 + 32];
          *(void *)unint64_t v107 = v104;
          *((void *)v107 + 1) = v105;
          unint64_t v108 = *((void *)v103 + 2);
          if (v10 > v108) {
            goto LABEL_148;
          }
          memmove(&v103[16 * v10 + 16], &v103[16 * v10 + 32], 16 * (v108 - v10));
          v100 = v103;
          *((void *)v103 + 2) = v108 - 1;
          unint64_t v10 = v108 - 1;
        }
        while (v108 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v109 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA110);
    uint64_t v7 = sub_259F687C0();
    *(void *)(v7 + 16) = v6;
    uint64_t v109 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v8 = (char *)MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v11 = v9++;
    if (v9 >= v3) {
      goto LABEL_43;
    }
    uint64_t v12 = *v2;
    sub_259F136C0(*v2 + 56 * v9, (uint64_t)&v117);
    uint64_t v13 = v12;
    sub_259F136C0(v12 + 56 * v11, (uint64_t)&v115);
    if (v117 == v115 && v118 == v116) {
      int v15 = 0;
    }
    else {
      int v15 = sub_259F68C70();
    }
    sub_259F17838((uint64_t)&v115, &qword_26A3FA110);
    sub_259F17838((uint64_t)&v117, &qword_26A3FA110);
    uint64_t v9 = v11 + 2;
    if (v11 + 2 >= v3)
    {
      if ((v15 & 1) == 0) {
        goto LABEL_43;
      }
LABEL_36:
      if (v9 < v11) {
        goto LABEL_151;
      }
      if (v11 < v9)
      {
        uint64_t v19 = v13 + 56 * v9 - 56;
        uint64_t v20 = (long long *)(v13 + 56 * v11);
        uint64_t v21 = v9;
        uint64_t v22 = v11;
        while (1)
        {
          if (v22 != --v21)
          {
            if (!v13) {
              goto LABEL_156;
            }
            uint64_t v23 = *((void *)v20 + 6);
            long long v25 = v20[1];
            long long v24 = v20[2];
            long long v26 = *v20;
            long long v28 = *(_OWORD *)(v19 + 16);
            long long v27 = *(_OWORD *)(v19 + 32);
            long long v29 = *(_OWORD *)v19;
            *((void *)v20 + 6) = *(void *)(v19 + 48);
            v20[1] = v28;
            v20[2] = v27;
            *uint64_t v20 = v29;
            *(_OWORD *)uint64_t v19 = v26;
            *(_OWORD *)(v19 + 16) = v25;
            *(_OWORD *)(v19 + 32) = v24;
            *(void *)(v19 + 48) = v23;
          }
          ++v22;
          v19 -= 56;
          uint64_t v20 = (long long *)((char *)v20 + 56);
          if (v22 >= v21) {
            goto LABEL_43;
          }
        }
      }
      goto LABEL_43;
    }
    uint64_t v111 = v13;
    uint64_t v16 = v13 + 56 * v11 + 56;
    while (1)
    {
      sub_259F136C0(v16 + 56, (uint64_t)&v117);
      sub_259F136C0(v16, (uint64_t)&v115);
      BOOL v17 = v117 == v115 && v118 == v116;
      int v18 = v17 ? 0 : sub_259F68C70();
      sub_259F17838((uint64_t)&v115, &qword_26A3FA110);
      sub_259F17838((uint64_t)&v117, &qword_26A3FA110);
      if ((v15 ^ v18)) {
        break;
      }
      ++v9;
      v16 += 56;
      if (v3 == v9)
      {
        uint64_t v9 = v3;
        break;
      }
    }
    uint64_t v13 = v111;
    if (v15) {
      goto LABEL_36;
    }
LABEL_43:
    if (v9 >= v3) {
      goto LABEL_66;
    }
    if (__OFSUB__(v9, v11)) {
      goto LABEL_149;
    }
    if (v9 - v11 >= v110) {
      goto LABEL_66;
    }
    if (__OFADD__(v11, v110)) {
      goto LABEL_152;
    }
    uint64_t v30 = v11;
    uint64_t v31 = v11 + v110 >= v3 ? v3 : v11 + v110;
    uint64_t v112 = v30;
    if (v31 < v30) {
      break;
    }
    if (v9 != v31)
    {
      uint64_t v32 = 56 * v9;
      do
      {
        uint64_t v33 = v112;
        uint64_t v34 = v32;
        while (1)
        {
          uint64_t v35 = *v2 + v34;
          sub_259F136C0(v35, (uint64_t)&v117);
          sub_259F136C0(v35 - 56, (uint64_t)&v115);
          if (v117 == v115 && v118 == v116) {
            break;
          }
          char v37 = sub_259F68C70();
          sub_259F17838((uint64_t)&v115, &qword_26A3FA110);
          sub_259F17838((uint64_t)&v117, &qword_26A3FA110);
          if ((v37 & 1) == 0) {
            goto LABEL_54;
          }
          if (!*v2) {
            goto LABEL_154;
          }
          uint64_t v38 = *v2 + v34;
          uint64_t v39 = *(void *)(v38 + 48);
          long long v41 = *(_OWORD *)(v38 + 16);
          long long v40 = *(_OWORD *)(v38 + 32);
          long long v42 = *(_OWORD *)v38;
          long long v43 = *(_OWORD *)(v38 - 40);
          *(_OWORD *)uint64_t v38 = *(_OWORD *)(v38 - 56);
          *(_OWORD *)(v38 + 16) = v43;
          *(_OWORD *)(v38 + 32) = *(_OWORD *)(v38 - 24);
          *(void *)(v38 + 48) = *(void *)(v38 - 8);
          *(_OWORD *)(v38 - 56) = v42;
          *(_OWORD *)(v38 - 40) = v41;
          *(_OWORD *)(v38 - 24) = v40;
          v34 -= 56;
          ++v33;
          *(void *)(v38 - 8) = v39;
          if (v9 == v33) {
            goto LABEL_54;
          }
        }
        sub_259F17838((uint64_t)&v115, &qword_26A3FA110);
        sub_259F17838((uint64_t)&v117, &qword_26A3FA110);
LABEL_54:
        ++v9;
        v32 += 56;
      }
      while (v9 != v31);
      uint64_t v9 = v31;
    }
    uint64_t v11 = v112;
LABEL_66:
    if (v9 < v11) {
      goto LABEL_144;
    }
    uint64_t v44 = v11;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_259F1C494(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v46 = *((void *)v8 + 2);
    unint64_t v45 = *((void *)v8 + 3);
    unint64_t v10 = v46 + 1;
    if (v46 >= v45 >> 1) {
      uint64_t v8 = sub_259F1C494((char *)(v45 > 1), v46 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v10;
    long long v47 = v8 + 32;
    long long v48 = &v8[16 * v46 + 32];
    *(void *)long long v48 = v44;
    *((void *)v48 + 1) = v9;
    if (v46)
    {
      uint64_t v113 = v9;
      while (1)
      {
        unint64_t v49 = v10 - 1;
        if (v10 >= 4)
        {
          uint64_t v54 = &v47[16 * v10];
          uint64_t v55 = *((void *)v54 - 8);
          uint64_t v56 = *((void *)v54 - 7);
          BOOL v60 = __OFSUB__(v56, v55);
          uint64_t v57 = v56 - v55;
          if (v60) {
            goto LABEL_133;
          }
          uint64_t v59 = *((void *)v54 - 6);
          uint64_t v58 = *((void *)v54 - 5);
          BOOL v60 = __OFSUB__(v58, v59);
          uint64_t v52 = v58 - v59;
          char v53 = v60;
          if (v60) {
            goto LABEL_134;
          }
          unint64_t v61 = v10 - 2;
          uint64_t v62 = &v47[16 * v10 - 32];
          uint64_t v64 = *(void *)v62;
          uint64_t v63 = *((void *)v62 + 1);
          BOOL v60 = __OFSUB__(v63, v64);
          uint64_t v65 = v63 - v64;
          if (v60) {
            goto LABEL_136;
          }
          BOOL v60 = __OFADD__(v52, v65);
          uint64_t v66 = v52 + v65;
          if (v60) {
            goto LABEL_139;
          }
          if (v66 >= v57)
          {
            unint64_t v84 = &v47[16 * v49];
            uint64_t v86 = *(void *)v84;
            uint64_t v85 = *((void *)v84 + 1);
            BOOL v60 = __OFSUB__(v85, v86);
            uint64_t v87 = v85 - v86;
            if (v60) {
              goto LABEL_143;
            }
            BOOL v77 = v52 < v87;
            goto LABEL_104;
          }
        }
        else
        {
          if (v10 != 3)
          {
            uint64_t v78 = *((void *)v8 + 4);
            uint64_t v79 = *((void *)v8 + 5);
            BOOL v60 = __OFSUB__(v79, v78);
            uint64_t v71 = v79 - v78;
            char v72 = v60;
            goto LABEL_98;
          }
          uint64_t v51 = *((void *)v8 + 4);
          uint64_t v50 = *((void *)v8 + 5);
          BOOL v60 = __OFSUB__(v50, v51);
          uint64_t v52 = v50 - v51;
          char v53 = v60;
        }
        if (v53) {
          goto LABEL_135;
        }
        unint64_t v61 = v10 - 2;
        uint64_t v67 = &v47[16 * v10 - 32];
        uint64_t v69 = *(void *)v67;
        uint64_t v68 = *((void *)v67 + 1);
        BOOL v70 = __OFSUB__(v68, v69);
        uint64_t v71 = v68 - v69;
        char v72 = v70;
        if (v70) {
          goto LABEL_138;
        }
        uint64_t v73 = &v47[16 * v49];
        uint64_t v75 = *(void *)v73;
        uint64_t v74 = *((void *)v73 + 1);
        BOOL v60 = __OFSUB__(v74, v75);
        uint64_t v76 = v74 - v75;
        if (v60) {
          goto LABEL_141;
        }
        if (__OFADD__(v71, v76)) {
          goto LABEL_142;
        }
        if (v71 + v76 >= v52)
        {
          BOOL v77 = v52 < v76;
LABEL_104:
          if (v77) {
            unint64_t v49 = v61;
          }
          goto LABEL_106;
        }
LABEL_98:
        if (v72) {
          goto LABEL_137;
        }
        char v80 = &v47[16 * v49];
        uint64_t v82 = *(void *)v80;
        uint64_t v81 = *((void *)v80 + 1);
        BOOL v60 = __OFSUB__(v81, v82);
        uint64_t v83 = v81 - v82;
        if (v60) {
          goto LABEL_140;
        }
        if (v83 < v71) {
          goto LABEL_14;
        }
LABEL_106:
        unint64_t v88 = v49 - 1;
        if (v49 - 1 >= v10)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        uint64_t v89 = *v2;
        if (!*v2) {
          goto LABEL_155;
        }
        unint64_t v90 = v8;
        uint64_t v91 = v2;
        uint64_t v92 = &v47[16 * v88];
        uint64_t v93 = *(void *)v92;
        uint64_t v94 = v47;
        unint64_t v95 = v49;
        uint64_t v96 = &v47[16 * v49];
        uint64_t v97 = *((void *)v96 + 1);
        uint64_t v98 = v119;
        sub_259F1BE34((char *)(v89 + 56 * *(void *)v92), (char *)(v89 + 56 * *(void *)v96), v89 + 56 * v97, __dst);
        uint64_t v119 = v98;
        if (v98) {
          goto LABEL_114;
        }
        if (v97 < v93) {
          goto LABEL_130;
        }
        if (v95 > *((void *)v90 + 2)) {
          goto LABEL_131;
        }
        *(void *)uint64_t v92 = v93;
        *(void *)&v94[16 * v88 + 8] = v97;
        unint64_t v99 = *((void *)v90 + 2);
        if (v95 >= v99) {
          goto LABEL_132;
        }
        uint64_t v8 = v90;
        unint64_t v10 = v99 - 1;
        memmove(v96, v96 + 16, 16 * (v99 - 1 - v95));
        long long v47 = v94;
        *((void *)v90 + 2) = v99 - 1;
        uint64_t v2 = v91;
        uint64_t v9 = v113;
        if (v99 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v10 = 1;
LABEL_14:
    uint64_t v3 = v2[1];
    if (v9 >= v3) {
      goto LABEL_117;
    }
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  uint64_t result = sub_259F68A70();
  __break(1u);
  return result;
}

uint64_t sub_259F1B518(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_259F68C10();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_259F1BD64(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  unint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      uint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_259F1C1F8((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_259F1C894((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          v100 = &v97[16 * v96 + 32];
          *(void *)v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_259F687C0();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    BOOL v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_259F68C70();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_259F68C70()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_259F1C494(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_259F1C494((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    long long v42 = v11 + 32;
    long long v43 = &v11[16 * v41 + 32];
    *(void *)long long v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          unint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        unint64_t v88 = v42;
        unint64_t v89 = v44;
        unint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_259F1C1F8((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        long long v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_259F68C70() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_259F68A70();
  __break(1u);
  return result;
}

uint64_t sub_259F1BC04(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v7 = result;
    uint64_t v8 = 56 * a3;
LABEL_6:
    uint64_t v9 = v7;
    uint64_t v10 = v8;
    while (1)
    {
      uint64_t v11 = *a4 + v10;
      sub_259F136C0(v11, (uint64_t)v21);
      sub_259F136C0(v11 - 56, (uint64_t)v20);
      if (v21[0] == v20[0] && v21[1] == v20[1])
      {
        sub_259F17838((uint64_t)v20, &qword_26A3FA110);
        uint64_t result = sub_259F17838((uint64_t)v21, &qword_26A3FA110);
LABEL_5:
        ++v5;
        v8 += 56;
        if (v5 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      char v13 = sub_259F68C70();
      sub_259F17838((uint64_t)v20, &qword_26A3FA110);
      uint64_t result = sub_259F17838((uint64_t)v21, &qword_26A3FA110);
      if ((v13 & 1) == 0) {
        goto LABEL_5;
      }
      if (!*a4) {
        break;
      }
      uint64_t v14 = *a4 + v10;
      uint64_t v15 = *(void *)(v14 + 48);
      long long v17 = *(_OWORD *)(v14 + 16);
      long long v16 = *(_OWORD *)(v14 + 32);
      long long v18 = *(_OWORD *)v14;
      long long v19 = *(_OWORD *)(v14 - 40);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)(v14 - 56);
      *(_OWORD *)(v14 + 16) = v19;
      *(_OWORD *)(v14 + 32) = *(_OWORD *)(v14 - 24);
      *(void *)(v14 + 48) = *(void *)(v14 - 8);
      *(_OWORD *)(v14 - 56) = v18;
      *(_OWORD *)(v14 - 40) = v17;
      *(_OWORD *)(v14 - 24) = v16;
      v10 -= 56;
      ++v9;
      *(void *)(v14 - 8) = v15;
      if (v5 == v9) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_259F1BD64(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_259F68C70(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_259F1BE34(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 56;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 56;
  unint64_t v44 = __src;
  long long v43 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -55)
    {
      if (__dst != a2 || &a2[56 * v11] <= __dst) {
        memmove(__dst, a2, 56 * v11);
      }
      long long v24 = &v4[56 * v11];
      long long v42 = v24;
      unint64_t v44 = v6;
      if (__src < v6 && v10 >= 56)
      {
        unint64_t v25 = a3 - 56;
        do
        {
          sub_259F136C0((uint64_t)(v24 - 56), (uint64_t)&v40);
          uint64_t v29 = v6 - 56;
          sub_259F136C0((uint64_t)(v6 - 56), (uint64_t)&v38);
          if (v40 == v38 && v41 == v39) {
            char v31 = 0;
          }
          else {
            char v31 = sub_259F68C70();
          }
          uint64_t v32 = (char *)(v25 + 56);
          sub_259F17838((uint64_t)&v38, &qword_26A3FA110);
          sub_259F17838((uint64_t)&v40, &qword_26A3FA110);
          if (v31)
          {
            if (v32 != v6 || v25 >= (unint64_t)v6)
            {
              long long v26 = *(_OWORD *)v29;
              long long v27 = *(_OWORD *)(v6 - 40);
              long long v28 = *(_OWORD *)(v6 - 24);
              *(void *)(v25 + 48) = *((void *)v6 - 1);
              *(_OWORD *)(v25 + 16) = v27;
              *(_OWORD *)(v25 + 32) = v28;
              *(_OWORD *)unint64_t v25 = v26;
            }
            v44 -= 56;
            long long v24 = v42;
            if (v42 <= v4) {
              break;
            }
          }
          else
          {
            uint64_t v33 = v42;
            long long v24 = v42 - 56;
            v42 -= 56;
            if (v32 < v33 || v25 >= (unint64_t)v33 || v32 != v33)
            {
              long long v34 = *(_OWORD *)v24;
              long long v35 = *(_OWORD *)(v33 - 40);
              long long v36 = *(_OWORD *)(v33 - 24);
              *(void *)(v25 + 48) = *((void *)v33 - 1);
              *(_OWORD *)(v25 + 16) = v35;
              *(_OWORD *)(v25 + 32) = v36;
              *(_OWORD *)unint64_t v25 = v34;
            }
            uint64_t v29 = v6;
            if (v24 <= v4) {
              break;
            }
          }
          v25 -= 56;
          uint64_t v6 = v29;
        }
        while (v29 > __src);
      }
LABEL_51:
      sub_259F1C590((void **)&v44, (const void **)&v43, &v42);
      return 1;
    }
  }
  else if (v8 >= -55)
  {
    if (__dst != __src || &__src[56 * v9] <= __dst) {
      memmove(__dst, __src, 56 * v9);
    }
    unint64_t v12 = (unint64_t)&v4[56 * v9];
    long long v42 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 56)
    {
      while (1)
      {
        sub_259F136C0((uint64_t)v6, (uint64_t)&v40);
        sub_259F136C0((uint64_t)v4, (uint64_t)&v38);
        if (v40 == v38 && v41 == v39) {
          break;
        }
        char v14 = sub_259F68C70();
        sub_259F17838((uint64_t)&v38, &qword_26A3FA110);
        sub_259F17838((uint64_t)&v40, &qword_26A3FA110);
        if ((v14 & 1) == 0) {
          goto LABEL_18;
        }
        uint64_t v15 = v44;
        unint64_t v16 = (unint64_t)(v6 + 56);
        if (v44 >= v6 && (unint64_t)v44 < v16 && v44 == v6)
        {
          uint64_t v15 = v6;
        }
        else
        {
          long long v17 = *(_OWORD *)v6;
          long long v18 = *((_OWORD *)v6 + 1);
          long long v19 = *((_OWORD *)v6 + 2);
          *((void *)v44 + 6) = *((void *)v6 + 6);
          v15[1] = v18;
          v15[2] = v19;
          *uint64_t v15 = v17;
        }
LABEL_22:
        unint64_t v44 = (char *)v15 + 56;
        uint64_t v4 = v43;
        if ((unint64_t)v43 < v12)
        {
          uint64_t v6 = (char *)v16;
          if (v16 < a3) {
            continue;
          }
        }
        goto LABEL_51;
      }
      sub_259F17838((uint64_t)&v38, &qword_26A3FA110);
      sub_259F17838((uint64_t)&v40, &qword_26A3FA110);
LABEL_18:
      uint64_t v15 = v44;
      uint64_t v20 = v43 + 56;
      if (v44 != v43 || v44 >= v20)
      {
        long long v21 = *(_OWORD *)v43;
        long long v22 = *((_OWORD *)v43 + 1);
        long long v23 = *((_OWORD *)v43 + 2);
        *((void *)v44 + 6) = *((void *)v43 + 6);
        v15[1] = v22;
        v15[2] = v23;
        *uint64_t v15 = v21;
      }
      long long v43 = v20;
      unint64_t v16 = (unint64_t)v6;
      goto LABEL_22;
    }
    goto LABEL_51;
  }
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F1C1F8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  long long v27 = __src;
  long long v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      long long v17 = &v4[16 * v13];
      unint64_t v25 = v17;
      long long v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        long long v18 = (char *)(a3 - 16);
        long long v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_259F68C70() & 1) == 0)
          {
            unint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)long long v18 = *((_OWORD *)v17 - 1);
            }
            long long v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)long long v18 = *(_OWORD *)v19;
            }
            long long v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    char v14 = &v4[16 * v10];
    unint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_259F68C70() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          long long v26 = v4;
          unint64_t v16 = v6;
        }
        else
        {
          unint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      long long v27 = v7;
    }
LABEL_50:
    sub_259F1C664((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

char *sub_259F1C494(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA258);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  char v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_259F1C590(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -56)
  {
    uint64_t result = (char *)sub_259F68AC0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 56;
    if (result != v3 || result >= &v3[56 * v6])
    {
      return (char *)memmove(result, v3, 56 * v6);
    }
  }
  return result;
}

char *sub_259F1C664(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_259F68AC0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

uint64_t sub_259F1C720(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_259F1C750(a1, a2, a3, MEMORY[0x263F1BF70]);
}

uint64_t sub_259F1C738(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_259F1C750(a1, a2, a3, type metadata accessor for DatasetColumnDescription);
}

uint64_t sub_259F1C750(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = a4(0);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = sub_259F68AC0();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_259F1C894(uint64_t a1)
{
  return sub_259F1C494(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_259F1C8A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259F1CABC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_259F1C8C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259F1CC68(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_259F1C8E8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259F1CF5C(a1, a2, a3, (void *)*v3, &qword_26A3FA2E8, &qword_26A3FA2F0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_259F1C918(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259F1D428(a1, a2, a3, (void *)*v3, &qword_26A3FA2A8, type metadata accessor for DatasetColumnDescription);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_259F1C954(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259F1CF5C(a1, a2, a3, (void *)*v3, &qword_26A3FA2D8, &qword_26A3FA2E0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_259F1C984(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259F1CDF0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_259F1C9A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259F1D104(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_259F1C9C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259F1D29C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_259F1C9E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259F1D428(a1, a2, a3, (void *)*v3, &qword_26A3FA360, type metadata accessor for DatasetColumnType);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_259F1CA20(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259F1D428(a1, a2, a3, (void *)*v3, &qword_26A3FA280, MEMORY[0x263F1BF70]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_259F1CA5C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259F1D670(a1, a2, a3, (void *)*v3, &qword_26A3FA330, &qword_26A3FA338);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_259F1CA8C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_259F1D670(a1, a2, a3, (void *)*v3, &qword_26A3FA298, &qword_26A3FA2A0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_259F1CABC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA388);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 56 * v8) {
      memmove(v10 + 4, a4 + 4, 56 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 56 * v8 || v12 >= v13 + 56 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA110);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F1CC68(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA278);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F1CDF0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA260);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  char v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F1CF5C(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    unint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    unint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F1D104(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA370);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 4;
  unint64_t v13 = a4 + 4;
  size_t v14 = 5 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA378);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F1D29C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA2B8);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA2C0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F1D428(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  long long v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F1D670(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  long long v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F1D8B0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  sub_259F13740((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_259F1D904(void *a1)
{
  return sub_259F1CABC(0, a1[2], 0, a1);
}

uint64_t sub_259F1D918(uint64_t a1)
{
  return sub_259F1CDF0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_259F1D92C(void *a1)
{
  return sub_259F1D428(0, a1[2], 0, a1, &qword_26A3FA280, MEMORY[0x263F1BF70]);
}

uint64_t sub_259F1D970(void *a1)
{
  return sub_259F1D428(0, a1[2], 0, a1, &qword_26A3FA2A8, type metadata accessor for DatasetColumnDescription);
}

uint64_t sub_259F1D9B8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  unint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_259F1DA40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    uint64_t v11 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    sub_259F13740(*(void *)(v3 + 56) + 40 * v10, (uint64_t)v26);
    *(void *)&long long v25 = v13;
    *((void *)&v25 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  int64_t v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    unint64_t v16 = *(void *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      uint64_t v9 = (v16 - 1) & v16;
      unint64_t v10 = __clz(__rbit64(v16)) + (v14 << 6);
      int64_t v7 = v14;
      goto LABEL_3;
    }
    int64_t v17 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      unint64_t v16 = *(void *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        int64_t v14 = v17;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        unint64_t v16 = *(void *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          int64_t v14 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v17 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          unint64_t v16 = *(void *)(v4 + 8 * v17);
          if (v16) {
            goto LABEL_10;
          }
          int64_t v14 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            unint64_t v16 = *(void *)(v4 + 8 * v14);
            if (v16) {
              goto LABEL_7;
            }
            int64_t v7 = v15 - 1;
            int64_t v18 = v5 + 6;
            while (v15 != v18)
            {
              unint64_t v16 = *(void *)(v4 + 8 * v18++);
              if (v16)
              {
                int64_t v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  uint64_t v27 = 0;
  memset(v26, 0, sizeof(v26));
  long long v25 = 0u;
LABEL_23:
  *unint64_t v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  uint64_t v19 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_259F1E4C0((uint64_t)&v25, (uint64_t)v23);
  if (*((void *)&v23[0] + 1))
  {
    v21[0] = v23[0];
    v21[1] = v23[1];
    v21[2] = v23[2];
    uint64_t v22 = v24;
    v19(v21);
    return sub_259F17838((uint64_t)v21, &qword_26A3FA238);
  }
  else
  {
    *(void *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

uint64_t sub_259F1DC3C()
{
  void (*v11)(uint64_t *__return_ptr, void *);
  uint64_t result;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  void v20[3];

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    int64_t v7 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v6);
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    uint64_t v10 = *(void *)(*(void *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    uint64_t v11 = (void (*)(uint64_t *__return_ptr, void *))v0[5];
    v20[0] = v8;
    v20[1] = v9;
    v20[2] = v10;
    swift_bridgeObjectRetain();
    swift_retain();
    v11(&v19, v20);
    swift_release();
    swift_bridgeObjectRelease();
    return v19;
  }
  uint64_t v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    int64_t v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      int64_t v15 = v0[1];
      unint64_t v16 = *(void *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        uint64_t v5 = (v16 - 1) & v16;
        unint64_t v6 = __clz(__rbit64(v16)) + (v13 << 6);
        int64_t v4 = v13;
        goto LABEL_3;
      }
      int64_t v17 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        unint64_t v16 = *(void *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          uint64_t v13 = v17;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          unint64_t v16 = *(void *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            uint64_t v13 = v3 + 3;
            goto LABEL_7;
          }
          int64_t v17 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            unint64_t v16 = *(void *)(v15 + 8 * v17);
            if (v16) {
              goto LABEL_10;
            }
            uint64_t v13 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              unint64_t v16 = *(void *)(v15 + 8 * v13);
              if (v16) {
                goto LABEL_7;
              }
              int64_t v4 = v14 - 1;
              int64_t v18 = v3 + 6;
              while (v14 != v18)
              {
                unint64_t v16 = *(void *)(v15 + 8 * v18++);
                if (v16)
                {
                  uint64_t v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    uint64_t result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

BOOL _s12PoirotBlocks10DatasetRowV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(*(void *)(a1 + 16) + 16) != *(void *)(*(void *)(a2 + 16) + 16)) {
    return 0;
  }
  MEMORY[0x270FA5388](a1);
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_259F16E0C(v2, (uint64_t (*)(void, void, long long *))sub_259F1782C, (uint64_t)v5);
  swift_bridgeObjectRelease();
  BOOL v3 = v6 == 0;
  sub_259F17838((uint64_t)v5, &qword_26A3FA230);
  return v3;
}

unint64_t sub_259F1DEAC()
{
  unint64_t result = qword_26A3FA240;
  if (!qword_26A3FA240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA240);
  }
  return result;
}

uint64_t destroy for DatasetRow()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s12PoirotBlocks10DatasetRowVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DatasetRow(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DatasetRow(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DatasetRow(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DatasetRow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DatasetRow()
{
  return &type metadata for DatasetRow;
}

void sub_259F1E0DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v51 = a8;
  uint64_t v12 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v13 = ~v12;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v15 = -v12;
  uint64_t v44 = a1;
  uint64_t v45 = a1 + 64;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  else {
    uint64_t v16 = -1;
  }
  uint64_t v46 = v13;
  uint64_t v47 = 0;
  uint64_t v48 = v16 & v14;
  uint64_t v49 = a2;
  uint64_t v50 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_259F1DA40((uint64_t)&v41);
  uint64_t v17 = v42;
  if (!v42)
  {
LABEL_20:
    swift_release();
    swift_bridgeObjectRelease();
    sub_259F1E4B8();
    swift_release();
    return;
  }
  while (1)
  {
    uint64_t v23 = v41;
    uint64_t v39 = v41;
    uint64_t v40 = v17;
    sub_259F13728(&v43, (uint64_t)v38);
    uint64_t v24 = *(void **)a5;
    unint64_t v26 = sub_259F17068(v23, v17);
    uint64_t v27 = v24[2];
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28))
    {
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_259F68D30();
      __break(1u);
      goto LABEL_26;
    }
    char v30 = v25;
    if (v24[3] < v29) {
      break;
    }
    if (a4)
    {
      if (v25) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_259F24F88();
      if (v30) {
        goto LABEL_16;
      }
    }
LABEL_6:
    int64_t v18 = *(void **)a5;
    *(void *)(*(void *)a5 + 8 * (v26 >> 6) + 64) |= 1 << v26;
    uint64_t v19 = (uint64_t *)(v18[6] + 16 * v26);
    *uint64_t v19 = v23;
    v19[1] = v17;
    sub_259F13728(v38, v18[7] + 40 * v26);
    uint64_t v20 = v18[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_24;
    }
    v18[2] = v22;
LABEL_8:
    sub_259F1DA40((uint64_t)&v41);
    uint64_t v17 = v42;
    a4 = 1;
    if (!v42) {
      goto LABEL_20;
    }
  }
  sub_259F18638(v29, a4 & 1);
  unint64_t v31 = sub_259F17068(v23, v17);
  if ((v30 & 1) != (v32 & 1)) {
    goto LABEL_25;
  }
  unint64_t v26 = v31;
  if ((v30 & 1) == 0) {
    goto LABEL_6;
  }
LABEL_16:
  sub_259F13740(*(void *)(*(void *)a5 + 56) + 40 * v26, (uint64_t)v36);
  sub_259F17F84(v36, a6, a9, (uint64_t)v37);
  if (!v9)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    swift_bridgeObjectRelease();
    uint64_t v33 = *(void *)(*(void *)a5 + 56) + 40 * v26;
    __swift_destroy_boxed_opaque_existential_1(v33);
    sub_259F13728(v37, v33);
    goto LABEL_8;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  v36[0] = v9;
  id v34 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA248);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    swift_bridgeObjectRelease();
    sub_259F1E4B8();
    swift_release();

    return;
  }
LABEL_26:
  *(void *)&v37[0] = 0;
  *((void *)&v37[0] + 1) = 0xE000000000000000;
  sub_259F68960();
  sub_259F686F0();
  sub_259F68A10();
  sub_259F686F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259F68A80();
  __break(1u);
}

uint64_t sub_259F1E4B8()
{
  return swift_release();
}

uint64_t sub_259F1E4C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_259F1E52C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DatasetColumnDescription(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_259F1E590(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_259F1E5EC(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_259F1E5FC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t dispatch thunk of ProtobufCreating.messageNameMap.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ProtobufCreating.makeFlatMessagePayload(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ProtobufCreating.makeFlatMessagePayload(with:messageName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t sub_259F1E68C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA390);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (uint64_t *)((char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA398);
  uint64_t v33 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v37 = (uint64_t)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v32 = (uint64_t)&v28 - v7;
  uint64_t v8 = sub_259F67E30();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA3A0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_259F6BA00;
  uint64_t v13 = (void *)*MEMORY[0x263EFF6A8];
  *(void *)(v12 + 32) = *MEMORY[0x263EFF6A8];
  id v14 = v13;
  uint64_t v15 = (void *)sub_259F688A0();
  swift_bridgeObjectRelease();
  if (v15)
  {
    uint64_t v29 = v9;
    id v16 = v15;
    sub_259F68890();
    id v30 = v16;

    sub_259F1F108();
    sub_259F688C0();
    if (v36)
    {
      uint64_t v17 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v33 + 48);
      unint64_t v18 = MEMORY[0x263F8EE78];
      uint64_t v31 = v4;
      while (1)
      {
        sub_259F1E5EC(&v35, v34);
        sub_259F1EBAC((uint64_t)v34, v3);
        if (v0) {
          break;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
        if ((*v17)(v3, 1, v4) == 1)
        {
          sub_259F17838((uint64_t)v3, &qword_26A3FA390);
        }
        else
        {
          uint64_t v19 = v32;
          sub_259F1F6C0((uint64_t)v3, v32);
          sub_259F1F6C0(v19, v37);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v18 = sub_259F2E090(0, *(void *)(v18 + 16) + 1, 1, v18);
          }
          unint64_t v21 = *(void *)(v18 + 16);
          unint64_t v20 = *(void *)(v18 + 24);
          if (v21 >= v20 >> 1) {
            unint64_t v18 = sub_259F2E090(v20 > 1, v21 + 1, 1, v18);
          }
          *(void *)(v18 + 16) = v21 + 1;
          sub_259F1F6C0(v37, v18+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v21);
          uint64_t v4 = v31;
        }
        sub_259F688C0();
        if (!v36) {
          goto LABEL_15;
        }
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v8);
      id v25 = v30;

      return swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v18 = MEMORY[0x263F8EE78];
LABEL_15:
      (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v8);
      if (*(void *)(v18 + 16))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA300);
        uint64_t v24 = sub_259F68AB0();
      }
      else
      {
        uint64_t v24 = MEMORY[0x263F8EE80];
      }
      *(void *)&long long v35 = v24;
      uint64_t v26 = swift_bridgeObjectRetain();
      sub_259F1F160(v26, 1, &v35);
      if (v0)
      {
        uint64_t result = swift_unexpectedError();
        __break(1u);
      }
      else
      {
        id v27 = v30;

        swift_bridgeObjectRelease();
        return v35;
      }
    }
  }
  else
  {
    sub_259F1EB58();
    swift_allocError();
    *(void *)uint64_t v22 = 0xD00000000000001DLL;
    *(void *)(v22 + 8) = 0x8000000259F69850;
    *(unsigned char *)(v22 + 16) = 0;
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_259F1EB58()
{
  unint64_t result = qword_26A3FA3A8;
  if (!qword_26A3FA3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA3A8);
  }
  return result;
}

uint64_t sub_259F1EBAC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v40 = sub_259F67E00();
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA3B8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_259F67F30();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  id v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  id v16 = (char *)&v34 - v15;
  sub_259F1E590(a1, (uint64_t)v39);
  int v17 = swift_dynamicCast();
  unint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  if (!v17)
  {
    v18(v9, 1, 1, v10);
    goto LABEL_6;
  }
  v18(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_6:
    sub_259F17838((uint64_t)v9, &qword_26A3FA3B8);
    sub_259F1EB58();
    swift_allocError();
    *(void *)uint64_t v23 = 0xD000000000000021;
    *(void *)(v23 + 8) = 0x8000000259F69890;
    *(unsigned char *)(v23 + 16) = 0;
    return swift_willThrow();
  }
  uint64_t v37 = a2;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA3A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_259F6BA00;
  unint64_t v20 = (void *)*MEMORY[0x263EFF6A8];
  *(void *)(inited + 32) = *MEMORY[0x263EFF6A8];
  id v21 = v20;
  sub_259F1F790(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_259F67EA0();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  char v24 = sub_259F67DF0();
  if (v24 != 2 && (v24 & 1) == 0)
  {
    sub_259F67E80();
    uint64_t v25 = sub_259F686B0();
    uint64_t v27 = v26;
    swift_bridgeObjectRelease();
    if (v25 == 7106931 && v27 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_13:
      sub_259F67ED0();
      sub_259F67EB0();
      uint64_t v36 = *(void (**)(char *, uint64_t))(v11 + 8);
      v36(v14, v10);
      uint64_t v35 = sub_259F686B0();
      uint64_t v30 = v29;
      swift_bridgeObjectRelease();
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA398);
      uint64_t v32 = v37;
      *uint64_t v37 = v35;
      v32[1] = v30;
      sub_259F67E40();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v40);
      v36(v16, v10);
      return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v32, 0, 1, v31);
    }
    char v28 = sub_259F68C70();
    swift_bridgeObjectRelease();
    if (v28) {
      goto LABEL_13;
    }
  }
  (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v40);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA398);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v37, 1, 1, v33);
}

unint64_t sub_259F1F108()
{
  unint64_t result = qword_26A3FA3B0;
  if (!qword_26A3FA3B0)
  {
    sub_259F67E30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA3B0);
  }
  return result;
}

void sub_259F1F160(uint64_t a1, int a2, void *a3)
{
  uint64_t v7 = sub_259F67F30();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA398);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (uint64_t *)((char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    return;
  }
  LODWORD(v62) = a2;
  uint64_t v58 = v3;
  uint64_t v59 = v16;
  int v17 = (char *)v15 + *(int *)(v12 + 48);
  unint64_t v57 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v18 = a1 + v57;
  uint64_t v64 = *(void *)(v13 + 72);
  uint64_t v61 = a1;
  swift_bridgeObjectRetain();
  sub_259F1F728(v18, (uint64_t)v15);
  uint64_t v60 = v8;
  uint64_t v19 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v21 = v15[1];
  uint64_t v70 = *v15;
  uint64_t v20 = v70;
  uint64_t v71 = v21;
  uint64_t v66 = v19;
  char v67 = v10;
  uint64_t v63 = v17;
  uint64_t v65 = v7;
  v19((unint64_t)v10, v17, v7);
  uint64_t v22 = (void *)*a3;
  unint64_t v24 = sub_259F17068(v20, v21);
  uint64_t v25 = v22[2];
  BOOL v26 = (v23 & 1) == 0;
  uint64_t v27 = v25 + v26;
  if (__OFADD__(v25, v26)) {
    goto LABEL_23;
  }
  char v28 = v23;
  if (v22[3] >= v27)
  {
    if (v62)
    {
      if (v23) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_259F25174();
      if (v28) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v33 = (void *)*a3;
    *(void *)(*a3 + 8 * (v24 >> 6) + 64) |= 1 << v24;
    uint64_t v34 = (uint64_t *)(v33[6] + 16 * v24);
    *uint64_t v34 = v20;
    v34[1] = v21;
    uint64_t v35 = v33[7];
    uint64_t v62 = *(void *)(v60 + 72);
    uint64_t v36 = v65;
    v66(v35 + v62 * v24, v67, v65);
    uint64_t v37 = v33[2];
    BOOL v38 = __OFADD__(v37, 1);
    uint64_t v39 = v37 + 1;
    if (v38)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v33[2] = v39;
    uint64_t v40 = v59 - 1;
    if (v59 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v41 = v61 + v64 + v57;
    while (1)
    {
      sub_259F1F728(v41, (uint64_t)v15);
      uint64_t v43 = v15[1];
      uint64_t v70 = *v15;
      uint64_t v42 = v70;
      uint64_t v71 = v43;
      v66((unint64_t)v67, v63, v36);
      uint64_t v44 = (void *)*a3;
      unint64_t v45 = sub_259F17068(v42, v43);
      uint64_t v47 = v44[2];
      BOOL v48 = (v46 & 1) == 0;
      BOOL v38 = __OFADD__(v47, v48);
      uint64_t v49 = v47 + v48;
      if (v38) {
        break;
      }
      char v50 = v46;
      if (v44[3] < v49)
      {
        sub_259F18960(v49, 1);
        unint64_t v45 = sub_259F17068(v42, v43);
        if ((v50 & 1) != (v51 & 1)) {
          goto LABEL_25;
        }
      }
      if (v50) {
        goto LABEL_10;
      }
      uint64_t v52 = (void *)*a3;
      *(void *)(*a3 + 8 * (v45 >> 6) + 64) |= 1 << v45;
      uint64_t v53 = (uint64_t *)(v52[6] + 16 * v45);
      uint64_t *v53 = v42;
      v53[1] = v43;
      uint64_t v36 = v65;
      v66(v52[7] + v62 * v45, v67, v65);
      uint64_t v54 = v52[2];
      BOOL v38 = __OFADD__(v54, 1);
      uint64_t v55 = v54 + 1;
      if (v38) {
        goto LABEL_24;
      }
      v52[2] = v55;
      v41 += v64;
      if (!--v40) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_259F18960(v27, v62 & 1);
  unint64_t v29 = sub_259F17068(v20, v21);
  if ((v28 & 1) == (v30 & 1))
  {
    unint64_t v24 = v29;
    if ((v28 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v31 = (void *)swift_allocError();
    swift_willThrow();
    id v72 = v31;
    id v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA248);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v67, v65);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_259F68D30();
  __break(1u);
LABEL_26:
  uint64_t v68 = 0;
  unint64_t v69 = 0xE000000000000000;
  sub_259F68960();
  sub_259F686F0();
  sub_259F68A10();
  sub_259F686F0();
  sub_259F68A80();
  __break(1u);
}

uint64_t sub_259F1F6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_259F1F728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_259F1F790(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA3C0);
    uint64_t v3 = sub_259F68950();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      uint64_t v6 = *(void **)(v32 + 8 * v4);
      sub_259F68650();
      sub_259F68DA0();
      id v7 = v6;
      sub_259F686E0();
      uint64_t v8 = sub_259F68DC0();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_259F68650();
        uint64_t v17 = v16;
        if (v15 == sub_259F68650() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_259F68C70();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_259F68650();
          uint64_t v24 = v23;
          if (v22 == sub_259F68650() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_259F68C70();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_259F1F9C4()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for QueryCollectionError()
{
  return sub_259F1F9DC();
}

uint64_t sub_259F1F9DC()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s12PoirotBlocks20QueryCollectionErrorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_259F1F9C4();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for QueryCollectionError(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_259F1F9C4();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_259F1F9DC();
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for QueryCollectionError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_259F1F9DC();
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryCollectionError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for QueryCollectionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_259F1FB70(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_259F1FB78(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for QueryCollectionError()
{
  return &type metadata for QueryCollectionError;
}

void *initializeBufferWithCopyOfBuffer for TemplateBlockError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for TemplateBlockError()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for TemplateBlockError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for TemplateBlockError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TemplateBlockError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TemplateBlockError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_259F1FCD4()
{
  return 0;
}

ValueMetadata *type metadata accessor for TemplateBlockError()
{
  return &type metadata for TemplateBlockError;
}

void sub_259F1FCEC(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_259F1FCF8(void *a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 184) = 0;
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void *)(a3 + 32);
  char v10 = *(unsigned char *)(a3 + 40);
  uint64_t v12 = *(void *)(a3 + 48);
  uint64_t v11 = *(void *)(a3 + 56);
  *(void *)(v3 + 56) = *(void *)(a3 + 16);
  *(void *)(v3 + 64) = v8;
  *(void *)(v3 + 72) = v9;
  *(unsigned char *)(v3 + 80) = v10;
  *(void *)(v3 + 88) = v12;
  *(void *)(v3 + 96) = v11;
  *(unsigned char *)(v3 + 144) = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_259F1FF18(a3, a1, a2, v21);
  if (v4)
  {
    sub_259F20254(a3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_259F20200(v3 + 56);
    swift_release();
    type metadata accessor for TemplateBlock();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v20 = (uint64_t)&v20;
    uint64_t v14 = *(void *)(a3 + 64);
    *(void *)(v3 + 152) = v14;
    MEMORY[0x270FA5388](v13);
    v19[2] = v21;
    v19[3] = a1;
    swift_bridgeObjectRetain_n();
    uint64_t v16 = sub_259F35038((void (*)(long long *__return_ptr, uint64_t *, uint64_t *))sub_259F202C4, (uint64_t)v19, v14);
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void *)(a3 + 80);
    *(void *)(v3 + 160) = *(void *)(a3 + 72);
    *(void *)(v3 + 168) = v17;
    *(void *)(v3 + 176) = v16;
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v18 = *(void *)(*__swift_project_boxed_opaque_existential_1(a1, a1[3]) + 120);
    *(unsigned char *)(v3 + 16) = 0;
    *(void *)(v3 + 24) = v18;
    long long v22 = *(_OWORD *)a3;
    *(_OWORD *)(v3 + 32) = v22;
    *(void *)(v3 + 48) = a2;
    swift_retain();
    sub_259F202E4((uint64_t)&v22);
    sub_259F20254(a3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_259F1FF18@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  char v10 = *(unsigned char *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  *(void *)&long long v21 = *(void *)(a1 + 16);
  *((void *)&v21 + 1) = v8;
  uint64_t v22 = v9;
  char v23 = v10;
  uint64_t v24 = v11;
  uint64_t v25 = v12;
  sub_259F13740((uint64_t)a2, (uint64_t)v20);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v13 = sub_259F686B0();
  uint64_t v15 = v14;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_259F4AB98(v13, v15);
  swift_endAccess();
  if (v16)
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = type metadata accessor for AggregationBlock();
    swift_allocObject();
    uint64_t result = sub_259F321BC((uint64_t)v20, v16, a3, &v21);
    if (!v4)
    {
      a4[3] = v17;
      a4[4] = (uint64_t)&off_2707E1FB0;
      *a4 = result;
    }
  }
  else
  {
    sub_259F0E9A4();
    swift_allocError();
    *(void *)uint64_t v19 = v13;
    *(void *)(v19 + 8) = v15;
    *(unsigned char *)(v19 + 16) = 3;
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_259F200C8@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t result = sub_259F32E80(a3, v9, a5);
  if (v5) {
    *a4 = v5;
  }
  return result;
}

uint64_t sub_259F2013C()
{
  sub_259F20200(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_259F2017C()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_259F20200(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 192, 7);
}

uint64_t type metadata accessor for TemplateBlock()
{
  return self;
}

uint64_t sub_259F20200(uint64_t a1)
{
  return a1;
}

uint64_t sub_259F20254(uint64_t a1)
{
  return a1;
}

uint64_t sub_259F202C4@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_259F200C8(a1, *(void **)(v3 + 16), *(void *)(v3 + 24), a2, a3);
}

uint64_t sub_259F202E4(uint64_t a1)
{
  return a1;
}

uint64_t dispatch thunk of BlockLogEntryCollecting.collectBuilder(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of BlockLogEntryCollecting.collectRow(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of BlockLogEntryCollecting.collectDataset(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of EntryBuilding.buildEntries()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

PoirotBlocks::BlockType_optional __swiftcall BlockType.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_259F68AE0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

unint64_t BlockType.rawValue.getter()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7461676572676761;
      break;
    case 2:
      unint64_t result = 0x6974636172747865;
      break;
    case 3:
    case 4:
      unint64_t result = 0x6574616C706D6574;
      break;
    case 5:
      unint64_t result = 1852403562;
      break;
    case 6:
      unint64_t result = 0x6966654472657375;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_259F204BC(unsigned __int8 *a1, char *a2)
{
  return sub_259F4BF1C(*a1, *a2);
}

unint64_t sub_259F204CC()
{
  unint64_t result = qword_26A3FA3C8;
  if (!qword_26A3FA3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA3C8);
  }
  return result;
}

uint64_t sub_259F20520()
{
  return sub_259F2065C();
}

uint64_t sub_259F2052C()
{
  return sub_259F20534();
}

uint64_t sub_259F20534()
{
  sub_259F686E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_259F20654()
{
  return sub_259F2065C();
}

uint64_t sub_259F2065C()
{
  return sub_259F68DC0();
}

PoirotBlocks::BlockType_optional sub_259F2078C(Swift::String *a1)
{
  return BlockType.init(rawValue:)(*a1);
}

unint64_t sub_259F20798@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = BlockType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_259F207C0()
{
  return sub_259F68760();
}

uint64_t sub_259F20820()
{
  return sub_259F68750();
}

uint64_t getEnumTagSinglePayload for BlockType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BlockType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259F209CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BlockType()
{
  return &type metadata for BlockType;
}

unint64_t sub_259F20A04()
{
  unint64_t result = qword_26A3FA3D0;
  if (!qword_26A3FA3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA3D0);
  }
  return result;
}

uint64_t dispatch thunk of ProvidesPivotColumnNames.pivotColumnNames.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void BaseStreamSchemaProvider.makeBiomeSchema(forTable:)()
{
  id v1 = (id)BMEventTimestampSQLColumn();
  if (v1)
  {
    int v2 = v1;
    uint64_t v3 = *(void *)(sub_259F68080() + 16);
    swift_bridgeObjectRelease();
    swift_retain();
    id v4 = v2;
    uint64_t v5 = sub_259F2102C(0, v3, v0, v4);
    swift_release();

    id v6 = v4;
    uint64_t v7 = swift_bridgeObjectRetain();
    MEMORY[0x25A2EFD70](v7);
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_259F687B0();
    }
    sub_259F687D0();
    sub_259F687A0();
    swift_bridgeObjectRelease();
    id v8 = objc_allocWithZone(MEMORY[0x263F2A8F0]);
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)sub_259F68620();
    swift_bridgeObjectRelease();
    sub_259F21678();
    char v10 = (void *)sub_259F68780();
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(v8, sel_initWithTableName_columns_, v9, v10);

    if (v11)
    {

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_259F20C04@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = sub_259F68050();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_259F1E590(a1, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA3E8);
  if (!swift_dynamicCast()) {
    goto LABEL_7;
  }
  id v8 = v16;
  id v9 = objc_msgSend((id)swift_unknownObjectRetain(), sel_performSelector_, sel_eventBodyData);
  id v10 = v8;
  if (!v9)
  {
    __break(1u);
LABEL_7:
    uint64_t result = sub_259F68A80();
    __break(1u);
    return result;
  }
  id v11 = v10;
  swift_unknownObjectRetain();
  id v16 = v9;
  if (swift_dynamicCast())
  {
    uint64_t v12 = v17[0];
    unint64_t v13 = v17[1];
    objc_msgSend(v11, sel_timestamp);
    sub_259F21710(v12, v13);
    sub_259F68040();
    sub_259F68060();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_259F21768(v12, v13);
    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t result = swift_unknownObjectRelease();
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

id sub_259F20EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v5)(void *__return_ptr, void *, uint64_t);
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void v13[3];
  uint64_t v14;
  void v15[4];
  uint64_t vars8;

  uint64_t v5 = *(void (**)(void *__return_ptr, void *, uint64_t))(a1 + 32);
  v15[3] = swift_getObjectType();
  v15[0] = a2;
  swift_retain();
  swift_unknownObjectRetain();
  v5(v13, v15, a3);
  swift_release();
  uint64_t v6 = v14;
  if (v14)
  {
    uint64_t v7 = __swift_project_boxed_opaque_existential_1(v13, v14);
    id v8 = *(void *)(v6 - 8);
    MEMORY[0x270FA5388](v7);
    id v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v8 + 16))(v10);
    id v11 = (void *)sub_259F68C60();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    id v11 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  return v11;
}

uint64_t sub_259F2102C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v57 = a4;
  uint64_t v59 = a3;
  uint64_t v52 = sub_259F67FC0();
  uint64_t v7 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  char v51 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_259F680E0();
  uint64_t v58 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v11 = &v36[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v62 = MEMORY[0x263F8EE78];
  if (a1 == a2) {
    return result;
  }
  if (a2 < a1) {
    goto LABEL_40;
  }
  uint64_t v42 = v4;
  uint64_t v55 = v58 + 16;
  char v50 = (uint64_t (**)(unsigned char *, uint64_t))(v7 + 88);
  int v49 = *MEMORY[0x263F5F238];
  int v47 = *MEMORY[0x263F5F228];
  int v13 = *MEMORY[0x263F5F248];
  int v45 = *MEMORY[0x263F5F250];
  int v46 = v13;
  int v44 = *MEMORY[0x263F5F260];
  int v43 = *MEMORY[0x263F5F268];
  int v41 = *MEMORY[0x263F5F240];
  int v40 = *MEMORY[0x263F5F258];
  BOOL v48 = v61;
  uint64_t v54 = (uint64_t (**)(unsigned char *, uint64_t))(v58 + 8);
  int v39 = *MEMORY[0x263F5F278];
  int v38 = *MEMORY[0x263F5F230];
  unint64_t v14 = a1;
  int v37 = *MEMORY[0x263F5F270];
  uint64_t v56 = a1;
  while ((uint64_t)v14 < a2)
  {
    uint64_t v15 = sub_259F68080();
    if (a1 < 0) {
      goto LABEL_38;
    }
    if (v14 >= *(void *)(v15 + 16)) {
      goto LABEL_39;
    }
    uint64_t v16 = v9;
    (*(void (**)(unsigned char *, unint64_t, uint64_t))(v58 + 16))(v11, v15+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(void *)(v58 + 72) * v14, v9);
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_259F680C0();
    uint64_t v19 = v18;
    id v20 = objc_msgSend(v57, sel_name);
    uint64_t v21 = sub_259F68650();
    uint64_t v23 = v22;

    if (v17 == v21 && v19 == v23)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v25 = sub_259F68C70();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v25 & 1) == 0)
      {
        uint64_t v26 = sub_259F680C0();
        char v27 = v51;
        sub_259F680D0();
        int v28 = (*v50)(v27, v52);
        uint64_t v53 = v26;
        if (v28 == v49)
        {
          uint64_t v29 = 2;
          goto LABEL_19;
        }
        if (v28 == v47)
        {
LABEL_18:
          uint64_t v29 = 4;
        }
        else
        {
          uint64_t v29 = 0;
          if (v28 != v46 && v28 != v45 && v28 != v44 && v28 != v43)
          {
            uint64_t v29 = 1;
            if (v28 != v41 && v28 != v40)
            {
              if (v28 == v39)
              {
                uint64_t v29 = 3;
              }
              else
              {
                if (v28 != v38)
                {
                  if (v28 != v37) {
                    goto LABEL_41;
                  }
                  goto LABEL_18;
                }
                uint64_t v29 = 0;
              }
            }
          }
        }
LABEL_19:
        uint64_t v30 = swift_allocObject();
        *(void *)(v30 + 16) = v59;
        *(void *)(v30 + 24) = v14;
        id v31 = objc_allocWithZone(MEMORY[0x263F2A8D8]);
        swift_retain();
        uint64_t v32 = (void *)sub_259F68620();
        swift_bridgeObjectRelease();
        v61[2] = sub_259F216F0;
        v61[3] = v30;
        aBlock[0] = MEMORY[0x263EF8330];
        aBlock[1] = 1107296256;
        v61[0] = sub_259F20EB0;
        v61[1] = &block_descriptor;
        uint64_t v33 = _Block_copy(aBlock);
        swift_release();
        id v34 = objc_msgSend(v31, sel_initWithName_dataType_requestOnly_extractBlock_, v32, v29, 0, v33);
        _Block_release(v33);

        uint64_t v9 = v16;
        uint64_t v35 = (*v54)(v11, v16);
        a1 = v56;
        if (v34)
        {
          MEMORY[0x25A2EFD70](v35);
          if (*(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_259F687B0();
          }
          sub_259F687D0();
          sub_259F687A0();
        }
        goto LABEL_6;
      }
    }
    uint64_t v9 = v16;
    (*v54)(v11, v16);
    a1 = v56;
LABEL_6:
    if (a2 == ++v14) {
      return v62;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  uint64_t result = sub_259F68A80();
  __break(1u);
  return result;
}

unint64_t sub_259F21678()
{
  unint64_t result = qword_26A3FA3E0;
  if (!qword_26A3FA3E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A3FA3E0);
  }
  return result;
}

uint64_t sub_259F216B8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_259F216F0@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_259F20C04(a1, a2);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_259F21710(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_259F21768(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t dispatch thunk of Templatable.templateValues.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

unint64_t sub_259F217D4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA250);
  uint64_t v2 = sub_259F68AB0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_259F26A1C(v6, (uint64_t)&v15, &qword_26A3FA110);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_259F17068(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    id v11 = (uint64_t *)(v3[6] + 16 * result);
    *id v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_259F13728(&v17, v3[7] + 40 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_259F21918(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA2F8);
  uint64_t v2 = (void *)sub_259F68AB0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_259F17068(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_259F21A34(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA380);
  uint64_t v2 = (void *)sub_259F68AB0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_OWORD *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 3);
    uint64_t v6 = *((void *)v4 - 2);
    uint64_t v7 = *((void *)v4 - 1);
    long long v15 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_259F17068(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    uint64_t v11 = v2[7] + 24 * result;
    *(void *)uint64_t v11 = v7;
    *(_OWORD *)(v11 + 8) = v15;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    uint64_t v4 = (_OWORD *)((char *)v4 + 40);
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_259F21B80(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA3F0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA2B0);
  uint64_t v6 = sub_259F68AB0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_259F26A1C(v12, (uint64_t)v5, &qword_26A3FA3F0);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_259F17068(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = (uint64_t *)(v7[6] + 16 * result);
    *uint64_t v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = type metadata accessor for DatasetColumnDescription(0);
    unint64_t result = sub_259F1E52C(v9, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_259F21D68(uint64_t a1)
{
  return sub_259F21EA4(a1, &qword_26A3FA2D0);
}

unint64_t sub_259F21D74(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA318);
  uint64_t v2 = (void *)sub_259F68AB0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_259F17068(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_259F21E98(uint64_t a1)
{
  return sub_259F21EA4(a1, &qword_26A3FA310);
}

unint64_t sub_259F21EA4(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v3 = (void *)sub_259F68AB0();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_259F17068(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *unint64_t v11 = v6;
    v11[1] = v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_259F21FBC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA358);
  uint64_t v2 = (void *)sub_259F68AB0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_259F17068(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_259F220D0(uint64_t a1)
{
  uint64_t result = sub_259F68830();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_259F42DE8(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t DatasetDescription.layoutNames.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_259F220D0(v0);
}

uint64_t DatasetDescription.layoutCount.getter()
{
  return *(void *)(*(void *)v0 + 16);
}

PoirotBlocks::DatasetDescription __swiftcall DatasetDescription.init()()
{
  id v1 = v0;
  result.layouts._rawValue = (void *)sub_259F21A34(MEMORY[0x263F8EE78]);
  v1->layouts._rawValue = result.layouts._rawValue;
  return result;
}

PoirotBlocks::DatasetDescription __swiftcall DatasetDescription.init(_:)(PoirotBlocks::DatasetDescription result)
{
  v1->layouts._rawValue = result.layouts._rawValue;
  return result;
}

uint64_t DatasetDescription.subscript.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *v3;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_7;
  }
  uint64_t v7 = result;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_259F17068(v7, a2);
  if ((v9 & 1) == 0)
  {
    PoirotBlocks::DatasetDescription result = swift_bridgeObjectRelease();
LABEL_7:
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    return result;
  }
  unint64_t v10 = (void *)(*(void *)(v5 + 56) + 24 * v8);
  uint64_t v11 = v10[1];
  uint64_t v12 = v10[2];
  *a3 = *v10;
  a3[1] = v11;
  a3[2] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall DatasetDescription.add(_:)(PoirotBlocks::DatasetColumnLayout a1)
{
  uint64_t v2 = *(void *)a1.name._countAndFlagsBits;
  uint64_t v3 = *(void *)(a1.name._countAndFlagsBits + 8);
  uint64_t v4 = *(void *)(a1.name._countAndFlagsBits + 16);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v6 = *v1;
  *id v1 = 0x8000000000000000;
  sub_259F23F98(v2, v3, v4, v2, v3, isUniquelyReferenced_nonNull_native);
  *id v1 = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

PoirotBlocks::DatasetColumnLayout_optional __swiftcall DatasetDescription.removeLayout(withName:)(Swift::String withName)
{
  uint64_t v3 = v2;
  uint64_t object = (uint64_t)withName._object;
  uint64_t countAndFlagsBits = withName._countAndFlagsBits;
  uint64_t v6 = v1;
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_259F17068(countAndFlagsBits, object);
  LOBYTE(object) = v8;
  uint64_t v9 = swift_bridgeObjectRelease();
  if (object)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v3;
    uint64_t v15 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_259F25194();
      uint64_t v13 = v15;
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void *)(v13 + 56) + 24 * v7;
    *(void *)uint64_t v6 = *(void *)v14;
    *(_OWORD *)(v6 + 8) = *(_OWORD *)(v14 + 8);
    sub_259F23300(v7, v13);
    *uint64_t v3 = v13;
    uint64_t v9 = swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)uint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    *(void *)(v6 + 16) = 0;
  }
  result.value.columnDescriptions._rawValue = v11;
  result.value.name._uint64_t object = v10;
  result.value.name._uint64_t countAndFlagsBits = v9;
  return result;
}

uint64_t DatasetDescription.forEach(_:)()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_259F267C8(v0, (void (*)(uint64_t, uint64_t, void *))sub_259F2537C);
  return swift_bridgeObjectRelease();
}

uint64_t static DatasetDescription.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_259F227C0(*a1, *a2);
}

uint64_t sub_259F225B8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v27) {
        return 1;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v27) {
          return 1;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
    uint64_t v14 = 16 * v10;
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + v14);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 56) + v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_259F17068(v16, v17);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v24 = (void *)(*(void *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      PoirotBlocks::DatasetColumnLayout_optional result = swift_bridgeObjectRelease();
    }
    else
    {
      char v26 = sub_259F68C70();
      PoirotBlocks::DatasetColumnLayout_optional result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v27) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_259F227C0(uint64_t a1, uint64_t a2)
{
  uint64_t v50 = type metadata accessor for DatasetColumnDescription(0);
  uint64_t v4 = MEMORY[0x270FA5388](v50);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v4);
  unint64_t v10 = (char *)&v41 - v9;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16))
  {
    uint64_t v41 = a2;
    uint64_t v42 = v8;
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(a1 + 64);
    uint64_t v45 = a1 + 64;
    uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
    uint64_t v14 = -1;
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    unint64_t v15 = v14 & v12;
    int64_t v46 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v47 = a1;
    while (1)
    {
      if (v15)
      {
        uint64_t v48 = (v15 - 1) & v15;
        int64_t v49 = v11;
        unint64_t v16 = __clz(__rbit64(v15)) | (v11 << 6);
      }
      else
      {
        int64_t v17 = v11 + 1;
        if (__OFADD__(v11, 1)) {
          goto LABEL_46;
        }
        if (v17 >= v46) {
          return 1;
        }
        unint64_t v18 = *(void *)(v45 + 8 * v17);
        int64_t v19 = v11 + 1;
        if (!v18)
        {
          int64_t v19 = v11 + 2;
          if (v11 + 2 >= v46) {
            return 1;
          }
          unint64_t v18 = *(void *)(v45 + 8 * v19);
          if (!v18)
          {
            int64_t v19 = v11 + 3;
            if (v11 + 3 >= v46) {
              return 1;
            }
            unint64_t v18 = *(void *)(v45 + 8 * v19);
            if (!v18)
            {
              uint64_t v20 = v11 + 4;
              if (v11 + 4 >= v46) {
                return 1;
              }
              unint64_t v18 = *(void *)(v45 + 8 * v20);
              if (!v18)
              {
                while (1)
                {
                  int64_t v19 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_47;
                  }
                  if (v19 >= v46) {
                    return 1;
                  }
                  unint64_t v18 = *(void *)(v45 + 8 * v19);
                  ++v20;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v19 = v11 + 4;
            }
          }
        }
LABEL_23:
        uint64_t v48 = (v18 - 1) & v18;
        int64_t v49 = v19;
        unint64_t v16 = __clz(__rbit64(v18)) + (v19 << 6);
      }
      unint64_t v21 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v16);
      uint64_t v22 = *v21;
      uint64_t v23 = v21[1];
      uint64_t v24 = (uint64_t *)(*(void *)(a1 + 56) + 24 * v16);
      uint64_t v25 = *v24;
      uint64_t v26 = v24[1];
      uint64_t v27 = v24[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v28 = sub_259F17068(v22, v23);
      char v30 = v29;
      swift_bridgeObjectRelease();
      if ((v30 & 1) == 0) {
        break;
      }
      id v31 = (void *)(*(void *)(a2 + 56) + 24 * v28);
      uint64_t v32 = v31[1];
      uint64_t v33 = v31[2];
      BOOL v34 = *v31 == v25 && v32 == v26;
      if (!v34 && (sub_259F68C70() & 1) == 0) {
        break;
      }
      uint64_t v35 = *(void *)(v33 + 16);
      if (v35 != *(void *)(v27 + 16)) {
        break;
      }
      if (v35)
      {
        a1 = v47;
        if (v33 != v27)
        {
          uint64_t v43 = v32;
          uint64_t v44 = v26;
          uint64_t v36 = v42;
          unint64_t v37 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v38 = 0;
          uint64_t v39 = *(void *)(v36 + 72);
          while (1)
          {
            uint64_t result = sub_259F138BC(v33 + v37, (uint64_t)v10);
            if (v38 >= *(void *)(v27 + 16)) {
              break;
            }
            sub_259F138BC(v27 + v37, (uint64_t)v6);
            sub_259F26B34();
            char v40 = sub_259F68600();
            sub_259F26B8C((uint64_t)v6);
            sub_259F26B8C((uint64_t)v10);
            if ((v40 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_42;
            }
            ++v38;
            v37 += v39;
            if (v35 == v38)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              a2 = v41;
              a1 = v47;
              goto LABEL_7;
            }
          }
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
          return result;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        a1 = v47;
      }
LABEL_7:
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v15 = v48;
      int64_t v11 = v49;
    }
    swift_bridgeObjectRelease();
LABEL_42:
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_259F22BBC(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v36 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & v4;
  int64_t v37 = (unint64_t)(v5 + 63) >> 6;
  if ((v6 & v4) != 0) {
    goto LABEL_9;
  }
  while (2)
  {
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_54;
    }
    if (v10 >= v37) {
      return 1;
    }
    unint64_t v11 = *(void *)(v36 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (v11) {
      goto LABEL_26;
    }
    int64_t v12 = v10 + 1;
    if (v10 + 1 >= v37) {
      return 1;
    }
    unint64_t v11 = *(void *)(v36 + 8 * v12);
    if (v11) {
      goto LABEL_26;
    }
    int64_t v12 = v10 + 2;
    if (v10 + 2 >= v37) {
      return 1;
    }
    unint64_t v11 = *(void *)(v36 + 8 * v12);
    if (v11) {
      goto LABEL_26;
    }
    int64_t v12 = v10 + 3;
    if (v10 + 3 >= v37) {
      return 1;
    }
    unint64_t v11 = *(void *)(v36 + 8 * v12);
    if (v11) {
      goto LABEL_26;
    }
    int64_t v13 = v10 + 4;
    if (v13 >= v37) {
      return 1;
    }
    unint64_t v11 = *(void *)(v36 + 8 * v13);
    if (!v11)
    {
      while (1)
      {
        int64_t v12 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          break;
        }
        if (v12 >= v37) {
          return 1;
        }
        unint64_t v11 = *(void *)(v36 + 8 * v12);
        ++v13;
        if (v11) {
          goto LABEL_26;
        }
      }
LABEL_54:
      __break(1u);
      JUMPOUT(0x259F230ECLL);
    }
    int64_t v12 = v13;
LABEL_26:
    unint64_t v7 = (v11 - 1) & v11;
    int64_t v38 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_27:
    uint64_t v14 = a1;
    unint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v9);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = *(void *)(a1 + 56) + 24 * v9;
    uint64_t v19 = *(uint64_t *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    int v21 = *(unsigned __int8 *)(v18 + 16);
    swift_bridgeObjectRetain();
    sub_259F1E5FC(v19, v20, v21);
    unint64_t v22 = sub_259F17068(v16, v17);
    char v24 = v23;
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0) {
      goto LABEL_51;
    }
    uint64_t v25 = *(void *)(a2 + 56) + 24 * v22;
    uint64_t v26 = *(uint64_t *)v25;
    uint64_t v27 = *(void *)(v25 + 8);
    unsigned __int8 v28 = *(unsigned char *)(v25 + 16);
    switch(v28)
    {
      case 1u:
        if (v21 != 1) {
          goto LABEL_49;
        }
        sub_259F1E5FC(*(void *)v25, *(void *)(v25 + 8), 1u);
        sub_259F1E5FC(v26, v27, 1u);
        sub_259F1E5FC(v19, v20, 1u);
        LOBYTE(v29) = sub_259F2DB5C(v26, v19);
        sub_259F26A80(v26, v27, 1u);
        sub_259F26A80(v19, v20, 1u);
        sub_259F26A80(v26, v27, 1u);
        uint64_t v30 = v19;
        uint64_t v31 = v20;
        unsigned __int8 v32 = 1;
        goto LABEL_7;
      case 2u:
        if (v21 != 2) {
          goto LABEL_49;
        }
        if (v26 != v19 || v27 != v20)
        {
          LOBYTE(v29) = sub_259F68C70();
          swift_bridgeObjectRetain();
          sub_259F26A80(v26, v27, 2u);
          uint64_t v30 = v19;
          uint64_t v31 = v20;
          unsigned __int8 v32 = 2;
          goto LABEL_7;
        }
        swift_bridgeObjectRetain();
        sub_259F26A80(v19, v20, 2u);
        sub_259F26A80(v19, v20, 2u);
        a1 = v14;
        int64_t v3 = v38;
        if (!v7) {
          continue;
        }
        goto LABEL_9;
      case 3u:
        if (v21 != 3) {
          goto LABEL_50;
        }
        sub_259F26A80(*(void *)v25, *(void *)(v25 + 8), 3u);
        sub_259F26A80(v19, v20, 3u);
        BOOL v34 = v26 == v19;
        goto LABEL_43;
      case 4u:
        if (v21 != 4) {
          goto LABEL_50;
        }
        sub_259F26A80(*(void *)v25, *(void *)(v25 + 8), 4u);
        sub_259F26A80(v19, v20, 4u);
        BOOL v34 = *(double *)&v26 == *(double *)&v19;
LABEL_43:
        a1 = v14;
        int64_t v3 = v38;
        if (!v34) {
          return 0;
        }
        goto LABEL_8;
      case 5u:
        if (v21 != 5) {
          goto LABEL_50;
        }
        sub_259F26A80(*(void *)v25, *(void *)(v25 + 8), 5u);
        sub_259F26A80(v19, v20, 5u);
        a1 = v14;
        int64_t v3 = v38;
        if (((v19 ^ ((v26 & 1) == 0)) & 1) == 0) {
          return 0;
        }
        goto LABEL_8;
      default:
        if (!v21)
        {
          sub_259F1E5FC(*(void *)v25, *(void *)(v25 + 8), 0);
          sub_259F1E5FC(v26, v27, 0);
          sub_259F1E5FC(v19, v20, 0);
          int v29 = sub_259F22BBC(v26, v19);
          sub_259F26A80(v26, v27, 0);
          sub_259F26A80(v19, v20, 0);
          sub_259F26A80(v26, v27, 0);
          uint64_t v30 = v19;
          uint64_t v31 = v20;
          unsigned __int8 v32 = 0;
LABEL_7:
          sub_259F26A80(v30, v31, v32);
          a1 = v14;
          int64_t v3 = v38;
          if ((v29 & 1) == 0) {
            return 0;
          }
LABEL_8:
          if (!v7) {
            continue;
          }
LABEL_9:
          unint64_t v8 = __clz(__rbit64(v7));
          v7 &= v7 - 1;
          int64_t v38 = v3;
          unint64_t v9 = v8 | (v3 << 6);
          goto LABEL_27;
        }
LABEL_49:
        sub_259F1E5FC(*(void *)v25, *(void *)(v25 + 8), *(unsigned char *)(v25 + 16));
        swift_bridgeObjectRetain();
LABEL_50:
        sub_259F1E5FC(v19, v20, v21);
        sub_259F26A80(v26, v27, v28);
        sub_259F26A80(v19, v20, v21);
        sub_259F26A80(v26, v27, v28);
LABEL_51:
        sub_259F26A80(v19, v20, v21);
        return 0;
    }
  }
}

uint64_t sub_259F23104(uint64_t *a1, uint64_t *a2)
{
  return sub_259F227C0(*a1, *a2);
}

unint64_t sub_259F23110(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_259F68920();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_259F68DA0();
        swift_bridgeObjectRetain();
        sub_259F686E0();
        uint64_t v9 = sub_259F68DC0();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          int64_t v12 = (_OWORD *)(v11 + 16 * v3);
          int64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *int64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          unint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *unint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_259F232E8(unint64_t a1, uint64_t a2)
{
  return sub_259F23BC8(a1, a2, MEMORY[0x263F5F1F0]);
}

unint64_t sub_259F23300(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_259F68920();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_259F68DA0();
        swift_bridgeObjectRetain();
        sub_259F686E0();
        uint64_t v10 = sub_259F68DC0();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          int64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *int64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = v15 + 24 * v3;
          uint64_t v17 = (long long *)(v15 + 24 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= (unint64_t)v17 + 24))
          {
            long long v9 = *v17;
            *(void *)(v16 + 16) = *((void *)v17 + 2);
            *(_OWORD *)unint64_t v16 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_259F234EC(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_259F68A60();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v38 = a2 + 64;
    unint64_t result = sub_259F68920();
    uint64_t v12 = v38;
    if ((*(void *)(v38 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v36 = (result + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v35 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v37 = v13;
      unint64_t v16 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      do
      {
        int64_t v17 = v15 * v10;
        v35(v8, *(void *)(a2 + 48) + v15 * v10, v4);
        uint64_t v18 = sub_259F685B0();
        unint64_t result = (*v16)(v8, v4);
        unint64_t v19 = v18 & v11;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_17:
            uint64_t v22 = *(void *)(a2 + 48);
            unint64_t result = v22 + v15 * a1;
            unint64_t v23 = v22 + v17 + v15;
            if (v15 * a1 < v17 || result >= v23)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v17)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v25 = *(void *)(a2 + 56);
            uint64_t v26 = (_OWORD *)(v25 + 32 * a1);
            uint64_t v27 = (_OWORD *)(v25 + 32 * v10);
            uint64_t v12 = v38;
            if (a1 != v10 || (a1 = v10, v26 >= v27 + 2))
            {
              long long v28 = v27[1];
              *uint64_t v26 = *v27;
              v26[1] = v28;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_17;
        }
        uint64_t v12 = v38;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    int v29 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    int v29 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *int v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_259F237A4(unint64_t a1, uint64_t a2)
{
  return sub_259F237BC(a1, a2, &qword_26A3FA320);
}

unint64_t sub_259F237B0(unint64_t a1, uint64_t a2)
{
  return sub_259F237BC(a1, a2, &qword_26A3FA288);
}

unint64_t sub_259F237BC(unint64_t result, uint64_t a2, uint64_t *a3)
{
  int64_t v4 = result;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(void *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v9 = ~v6;
    unint64_t result = sub_259F68920();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v10 = (result + 1) & v9;
      while (1)
      {
        sub_259F68DA0();
        swift_bridgeObjectRetain();
        sub_259F686E0();
        uint64_t v11 = sub_259F68DC0();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v9;
        if (v4 >= (uint64_t)v10) {
          break;
        }
        if (v12 < v10) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v13 = *(void *)(a2 + 48);
        uint64_t v14 = (_OWORD *)(v13 + 16 * v4);
        uint64_t v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1) {
          *uint64_t v14 = *v15;
        }
        uint64_t v16 = *(void *)(a2 + 56);
        uint64_t v17 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8) + 72);
        int64_t v18 = v17 * v4;
        unint64_t result = v16 + v17 * v4;
        int64_t v19 = v17 * v7;
        unint64_t v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v4 = v7;
          if (v18 == v19) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v4 = v7;
LABEL_6:
        unint64_t v7 = (v7 + 1) & v9;
        if (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v12 < v10) {
        goto LABEL_6;
      }
LABEL_11:
      if (v4 < (uint64_t)v12) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v4) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_259F239D8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_259F68920();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_259F68DA0();
        swift_bridgeObjectRetain();
        sub_259F686E0();
        uint64_t v9 = sub_259F68DC0();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_259F23BB0(unint64_t a1, uint64_t a2)
{
  return sub_259F23BC8(a1, a2, MEMORY[0x263F5F190]);
}

unint64_t sub_259F23BC8(unint64_t result, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v4 = result;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(void *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v9 = ~v6;
    unint64_t result = sub_259F68920();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v10 = (result + 1) & v9;
      while (1)
      {
        sub_259F68DA0();
        swift_bridgeObjectRetain();
        sub_259F686E0();
        uint64_t v11 = sub_259F68DC0();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v9;
        if (v4 >= (uint64_t)v10) {
          break;
        }
        if (v12 < v10) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v13 = *(void *)(a2 + 48);
        uint64_t v14 = (_OWORD *)(v13 + 16 * v4);
        uint64_t v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1) {
          *uint64_t v14 = *v15;
        }
        uint64_t v16 = *(void *)(a2 + 56);
        uint64_t v17 = *(void *)(*(void *)(a3(0) - 8) + 72);
        int64_t v18 = v17 * v4;
        unint64_t result = v16 + v17 * v4;
        int64_t v19 = v17 * v7;
        unint64_t v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v4 = v7;
          if (v18 == v19) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v4 = v7;
LABEL_6:
        unint64_t v7 = (v7 + 1) & v9;
        if (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v12 < v10) {
        goto LABEL_6;
      }
LABEL_11:
      if (v4 < (uint64_t)v12) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v4) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_259F23DE8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_259F17068(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_259F26158(MEMORY[0x263F5F1F0], &qword_26A3FA348);
      goto LABEL_7;
    }
    sub_259F18618(v15, a4 & 1);
    unint64_t v26 = sub_259F17068(a2, a3);
    if ((v16 & 1) == (v27 & 1))
    {
      unint64_t v12 = v26;
      int64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_259F68D30();
    __break(1u);
    return result;
  }
LABEL_7:
  int64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = sub_259F68440();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 40);
    uint64_t v23 = v20;
    uint64_t v24 = v19 + *(void *)(v21 + 72) * v12;
    return v22(v24, a1, v23);
  }
LABEL_13:
  sub_259F24CA0(v12, a2, a3, a1, v18, MEMORY[0x263F5F1F0]);
  return swift_bridgeObjectRetain();
}

uint64_t sub_259F23F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  unint64_t v7 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_259F17068(a4, a5);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= v19 && (a6 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_259F25194();
LABEL_7:
    uint64_t v22 = (void *)*v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = (void *)(v22[7] + 24 * v16);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v23 = a1;
      v23[1] = a2;
      v23[2] = a3;
      return result;
    }
    goto LABEL_11;
  }
  sub_259F18980(v19, a6 & 1);
  unint64_t v25 = sub_259F17068(a4, a5);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_17:
    uint64_t result = sub_259F68D30();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  uint64_t v22 = (void *)*v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  char v27 = (uint64_t *)(v22[6] + 16 * v16);
  *char v27 = a4;
  v27[1] = a5;
  long long v28 = (void *)(v22[7] + 24 * v16);
  void *v28 = a1;
  v28[1] = a2;
  v28[2] = a3;
  uint64_t v29 = v22[2];
  BOOL v30 = __OFADD__(v29, 1);
  uint64_t v31 = v29 + 1;
  if (v30)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v22[2] = v31;
  return swift_bridgeObjectRetain();
}

_OWORD *sub_259F24138(_OWORD *a1, uint64_t a2, char a3)
{
  int64_t v4 = (void **)v3;
  uint64_t v8 = sub_259F68A60();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_259F17350(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_259F25644();
      goto LABEL_7;
    }
    sub_259F19080(v17, a3 & 1);
    unint64_t v23 = sub_259F17350(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      char v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_259F24B00(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_259F68D30();
    __break(1u);
    return result;
  }
LABEL_7:
  char v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = (_OWORD *)(v20[7] + 32 * v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return sub_259F1E5EC(a1, v21);
}

uint64_t sub_259F24310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_259F17068(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_259F25DCC();
LABEL_7:
    char v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_259F19BDC(v17, a5 & 1);
  unint64_t v23 = sub_259F17068(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_259F68D30();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  char v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v25 = (uint64_t *)(v20[6] + 16 * v14);
  uint64_t *v25 = a3;
  v25[1] = a4;
  char v26 = (void *)(v20[7] + 16 * v14);
  *char v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v29;
  return swift_bridgeObjectRetain();
}

uint64_t sub_259F24498(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_259F17068(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_259F25F88(&qword_26A3FA310);
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_259F19F04(v15, a4 & 1);
  unint64_t v21 = sub_259F17068(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_259F68D30();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;
  return swift_bridgeObjectRetain();
}

uint64_t sub_259F24610(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_259F17068(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_259F26158(MEMORY[0x263F5F190], &qword_26A3FA350);
      goto LABEL_7;
    }
    sub_259F1A224(v15, a4 & 1);
    unint64_t v26 = sub_259F17068(a2, a3);
    if ((v16 & 1) == (v27 & 1))
    {
      unint64_t v12 = v26;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_259F68D30();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = sub_259F683E0();
    uint64_t v21 = *(void *)(v20 - 8);
    char v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 40);
    uint64_t v23 = v20;
    uint64_t v24 = v19 + *(void *)(v21 + 72) * v12;
    return v22(v24, a1, v23);
  }
LABEL_13:
  sub_259F24CA0(v12, a2, a3, a1, v18, MEMORY[0x263F5F190]);
  return swift_bridgeObjectRetain();
}

uint64_t sub_259F247C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_259F17068(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_259F2641C();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_259F1A630(result, a4 & 1);
  uint64_t result = sub_259F17068(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_259F68D30();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v20 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v20 = a2;
  v20[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v23;
  return swift_bridgeObjectRetain();
}

uint64_t sub_259F24924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v8 = (void **)v7;
  uint64_t v15 = (void *)*v7;
  unint64_t v17 = sub_259F173B4(a4, a5, a6);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v21 = v16;
  uint64_t v22 = v15[3];
  if (v22 >= v20 && (a7 & 1) != 0)
  {
LABEL_7:
    uint64_t v23 = *v8;
    if (v21)
    {
LABEL_8:
      uint64_t v24 = (uint64_t *)(v23[7] + 24 * v17);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v24 = a1;
      v24[1] = a2;
      v24[2] = a3;
      return result;
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_259F265CC();
    goto LABEL_7;
  }
  sub_259F1A93C(v20, a7 & 1);
  unint64_t v26 = sub_259F173B4(a4, a5, a6);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_15:
    uint64_t result = sub_259F68D30();
    __break(1u);
    return result;
  }
  unint64_t v17 = v26;
  uint64_t v23 = *v8;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  sub_259F24D54(v17, a4, a5, a6, a1, a2, a3, v23);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t sub_259F24AB8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

_OWORD *sub_259F24B00(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_259F68A60();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t result = sub_259F1E5EC(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_259F24BC0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_259F24CA0(a1, a2, a3, a4, a5, MEMORY[0x263F5F200]);
}

uint64_t sub_259F24BD8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_259F24BF0(a1, a2, a3, a4, a5, &qword_26A3FA320);
}

uint64_t sub_259F24BE4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_259F24BF0(a1, a2, a3, a4, a5, &qword_26A3FA288);
}

uint64_t sub_259F24BF0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t *a6)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v9 = (void *)(a5[6] + 16 * a1);
  *uint64_t v9 = a2;
  v9[1] = a3;
  uint64_t v10 = a5[7];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(a6);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a4, v11);
  uint64_t v13 = a5[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a5[2] = v15;
  }
  return result;
}

uint64_t sub_259F24CA0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t (*a6)(void))
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v9 = (void *)(a5[6] + 16 * a1);
  *uint64_t v9 = a2;
  v9[1] = a3;
  uint64_t v10 = a5[7];
  uint64_t v11 = a6(0);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a4, v11);
  uint64_t v13 = a5[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a5[2] = v15;
  }
  return result;
}

unint64_t sub_259F24D54(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  a8[(result >> 6) + 8] |= 1 << result;
  uint64_t v8 = (void *)(a8[6] + 24 * result);
  *uint64_t v8 = a2;
  v8[1] = a3;
  v8[2] = a4;
  uint64_t v9 = (void *)(a8[7] + 24 * result);
  *uint64_t v9 = a5;
  v9[1] = a6;
  void v9[2] = a7;
  uint64_t v10 = a8[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a8[2] = v12;
  }
  return result;
}

void *sub_259F24DB0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA2F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_259F68A90();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    char v21 = (void *)(*(void *)(v4 + 48) + v16);
    *char v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_259F24F68()
{
  return sub_259F26158(MEMORY[0x263F5F1F0], &qword_26A3FA348);
}

void *sub_259F24F88()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA250);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_259F68A90();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  BOOL v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 40 * v15;
    sub_259F13740(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    char v21 = (void *)(*(void *)(v4 + 48) + v16);
    *char v21 = v19;
    v21[1] = v18;
    sub_259F13728(v26, *(void *)(v4 + 56) + v20);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_259F25174()
{
  return sub_259F26158(MEMORY[0x263F06EA8], &qword_26A3FA300);
}

void *sub_259F25194()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA380);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_259F68A90();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    long long v24 = *(_OWORD *)(v21 + 8);
    *unint64_t v23 = v19;
    v23[1] = v18;
    uint64_t v25 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v25 = v22;
    *(_OWORD *)(v25 + 8) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_259F2537C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(v3 + 16);
  uint64_t v6 = *a3;
  long long v7 = *(_OWORD *)(a3 + 1);
  return v4(a1, a2, &v6);
}

void *sub_259F253C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DatasetColumnDescription(0);
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA2B0);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_259F68A90();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  unint64_t v27 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_259F138BC(*(void *)(v5 + 56) + v21, (uint64_t)v4);
    uint64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    *uint64_t v22 = v19;
    v22[1] = v20;
    sub_259F1E52C((uint64_t)v4, *(void *)(v7 + 56) + v21);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_259F2562C()
{
  return sub_259F25F88(&qword_26A3FA2D0);
}

void *sub_259F25638()
{
  return sub_259F25F88(&qword_26A3FA2C8);
}

void *sub_259F25644()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_259F68A60();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA308);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_259F68A90();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v22 = v1;
  uint64_t result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v23 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v25 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v24) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v23 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v24) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v23 + 8 * v11);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t v18 = 32 * v16;
    sub_259F1E590(*(void *)(v6 + 56) + v18, (uint64_t)v26);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
    uint64_t result = sub_259F1E5EC(v26, (_OWORD *)(*(void *)(v8 + 56) + v18));
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v24)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_25;
  }
  unint64_t v20 = *(void *)(v23 + 8 * v21);
  if (v20)
  {
    int64_t v11 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v23 + 8 * v11);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_259F258EC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA368);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_259F68A90();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    int64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    unsigned __int8 v25 = *(unsigned char *)(v21 + 16);
    *int64_t v24 = v19;
    v24[1] = v18;
    uint64_t v26 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v26 = v22;
    *(void *)(v26 + 8) = v23;
    *(unsigned char *)(v26 + 16) = v25;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_259F1E5FC(v22, v23, v25);
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_259F25AC8()
{
  return sub_259F26158(MEMORY[0x263F5F200], &qword_26A3FA340);
}

void *sub_259F25AE8()
{
  return sub_259F25B10(&qword_26A3FA320, &qword_26A3FA328);
}

void *sub_259F25AFC()
{
  return sub_259F25B10(&qword_26A3FA288, &qword_26A3FA290);
}

void *sub_259F25B10(uint64_t *a1, uint64_t *a2)
{
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v4 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v34 = v2;
  uint64_t v7 = *v2;
  uint64_t v8 = sub_259F68A90();
  uint64_t v9 = *(void *)(v7 + 16);
  uint64_t v40 = v8;
  if (!v9)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v32 = v40;
    uint64_t v31 = v34;
LABEL_28:
    *uint64_t v31 = v32;
    return result;
  }
  uint64_t v10 = v8;
  uint64_t result = (void *)(v8 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v7 || (unint64_t)result >= v7 + 64 + 8 * v12)
  {
    uint64_t result = memmove(result, (const void *)(v7 + 64), 8 * v12);
    uint64_t v10 = v40;
  }
  int64_t v14 = 0;
  *(void *)(v10 + 16) = *(void *)(v7 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v7 + 64);
  uint64_t v35 = v7 + 64;
  int64_t v36 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v37 = v4 + 32;
  uint64_t v38 = v4 + 16;
  uint64_t v18 = v39;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v36) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v28);
    ++v14;
    if (!v29)
    {
      int64_t v14 = v28 + 1;
      if (v28 + 1 >= v36) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v35 + 8 * v14);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v17 = (v29 - 1) & v29;
    unint64_t v20 = __clz(__rbit64(v29)) + (v14 << 6);
LABEL_12:
    uint64_t v21 = 16 * v20;
    uint64_t v22 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v20);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    unint64_t v25 = *(void *)(v4 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(void *)(v7 + 56) + v25, v18);
    uint64_t v26 = v40;
    int64_t v27 = (void *)(*(void *)(v40 + 48) + v21);
    *int64_t v27 = v23;
    v27[1] = v24;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(void *)(v26 + 56) + v25, v6, v18);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v36)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v31 = v34;
    uint64_t v32 = v40;
    goto LABEL_28;
  }
  unint64_t v29 = *(void *)(v35 + 8 * v30);
  if (v29)
  {
    int64_t v14 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v14 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v14 >= v36) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v14);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_259F25DCC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA318);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_259F68A90();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    unint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v23 = v19;
    v23[1] = v18;
    uint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *uint64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_259F25F88(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_259F68A90();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *uint64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_259F26138()
{
  return sub_259F26158(MEMORY[0x263F5F190], &qword_26A3FA350);
}

void *sub_259F26158(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v39 = a1(0);
  uint64_t v4 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v6 = (char *)&v33 - v5;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v34 = v2;
  uint64_t v7 = *v2;
  uint64_t v8 = sub_259F68A90();
  uint64_t v9 = *(void *)(v7 + 16);
  uint64_t v40 = v8;
  if (!v9)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v32 = v40;
    uint64_t v31 = v34;
LABEL_28:
    *uint64_t v31 = v32;
    return result;
  }
  uint64_t v10 = v8;
  uint64_t result = (void *)(v8 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v7 || (unint64_t)result >= v7 + 64 + 8 * v12)
  {
    uint64_t result = memmove(result, (const void *)(v7 + 64), 8 * v12);
    uint64_t v10 = v40;
  }
  int64_t v14 = 0;
  *(void *)(v10 + 16) = *(void *)(v7 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v7 + 64);
  uint64_t v35 = v7 + 64;
  int64_t v36 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v37 = v4 + 32;
  uint64_t v38 = v4 + 16;
  uint64_t v18 = v39;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v36) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v28);
    ++v14;
    if (!v29)
    {
      int64_t v14 = v28 + 1;
      if (v28 + 1 >= v36) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v35 + 8 * v14);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v17 = (v29 - 1) & v29;
    unint64_t v20 = __clz(__rbit64(v29)) + (v14 << 6);
LABEL_12:
    uint64_t v21 = 16 * v20;
    uint64_t v22 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v20);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    unint64_t v25 = *(void *)(v4 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(void *)(v7 + 56) + v25, v18);
    uint64_t v26 = v40;
    int64_t v27 = (void *)(*(void *)(v40 + 48) + v21);
    *int64_t v27 = v23;
    v27[1] = v24;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(void *)(v26 + 56) + v25, v6, v18);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v36)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v31 = v34;
    uint64_t v32 = v40;
    goto LABEL_28;
  }
  unint64_t v29 = *(void *)(v35 + 8 * v30);
  if (v29)
  {
    int64_t v14 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v14 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v14 >= v36) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v14);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_259F2641C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA358);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_259F68A90();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_259F265CC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA268);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_259F68A90();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)(v2 + 56) + v16;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v4 + 48) + v16;
    long long v21 = *(_OWORD *)(v17 + 8);
    long long v26 = *(_OWORD *)(v18 + 8);
    *(void *)uint64_t v20 = *(void *)v17;
    *(_OWORD *)(v20 + 8) = v21;
    uint64_t v22 = *(void *)(v4 + 56) + v16;
    *(void *)uint64_t v22 = v19;
    *(_OWORD *)(v22 + 8) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_259F267C8(uint64_t a1, void (*a2)(uint64_t, uint64_t, void *))
{
  int64_t v25 = a2;
  uint64_t v3 = v2;
  uint64_t v22 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v23 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v10 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    unint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = (void *)(*(void *)(a1 + 56) + 24 * i);
    uint64_t v19 = v18[1];
    uint64_t v20 = v18[2];
    v24[0] = *v18;
    v24[1] = v19;
    v24[2] = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25(v16, v17, v24);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v9 >= v23) {
      return swift_release();
    }
    unint64_t v13 = *(void *)(v22 + 8 * v9);
    if (!v13)
    {
      int64_t v14 = v9 + 1;
      if (v9 + 1 >= v23) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v22 + 8 * v14);
      if (v13) {
        goto LABEL_14;
      }
      int64_t v14 = v9 + 2;
      if (v9 + 2 >= v23) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v22 + 8 * v14);
      if (v13) {
        goto LABEL_14;
      }
      int64_t v14 = v9 + 3;
      if (v9 + 3 >= v23) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v22 + 8 * v14);
      if (v13)
      {
LABEL_14:
        int64_t v9 = v14;
        goto LABEL_15;
      }
      int64_t v21 = v9 + 4;
      if (v9 + 4 >= v23) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v22 + 8 * v21);
      v9 += 4;
      if (!v13) {
        break;
      }
    }
LABEL_15:
    unint64_t v7 = (v13 - 1) & v13;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v23) {
      return swift_release();
    }
    unint64_t v13 = *(void *)(v22 + 8 * v9);
    ++v21;
    if (v13) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for DatasetDescription()
{
  return &type metadata for DatasetDescription;
}

uint64_t sub_259F26A1C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_259F26A80(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_259F26A9C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_259F68830();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_259F42DE8(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_259F26B34()
{
  unint64_t result = qword_26A3FA3F8;
  if (!qword_26A3FA3F8)
  {
    type metadata accessor for DatasetColumnDescription(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA3F8);
  }
  return result;
}

uint64_t sub_259F26B8C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DatasetColumnDescription(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_259F26BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v18[2] = a7;
  uint64_t ObjectType = swift_getObjectType();
  char v25 = 2;
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v23 = a5;
  uint64_t v24 = a6;
  unint64_t v15 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t (*)()))(a6 + 16);
  v18[3] = ObjectType;
  unint64_t result = ((void *(*)(uint64_t *__return_ptr, char *, uint64_t, uint64_t, uint64_t, unint64_t (*)@<X0>(unint64_t *@<X8>), unsigned char *, ValueMetadata *))v15)(&v26, &v25, a2, a3, a4, sub_259F26D74, v19, &type metadata for DatasetDescription);
  if (!v7)
  {
    uint64_t v17 = swift_bridgeObjectRelease();
    v18[1] = v18;
    LOBYTE(v26) = 3;
    MEMORY[0x270FA5388](v17);
    return (void *)v15(&v26, a2, a3, a4, sub_259F26FE0);
  }
  return result;
}

unint64_t sub_259F26D74@<X0>(unint64_t *a1@<X8>)
{
  return sub_259F26D9C(v1[2], v1[3], v1[4], 0, v1[5], v1[6], a1);
}

unint64_t sub_259F26D9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t *a7@<X8>)
{
  unint64_t result = sub_259F21A34(MEMORY[0x263F8EE78]);
  unint64_t v33 = result;
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    int64_t v27 = a7;
    swift_getObjectType();
    int64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(a6 + 8);
    int64_t v14 = (void *)(a1 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      BYTE1(v32) = 1;
      uint64_t v16 = v14[3];
      uint64_t v15 = v14[4];
      __swift_project_boxed_opaque_existential_1(v14, v16);
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(v15 + 8) + 16))(&v32, v16);
      uint64_t v18 = v14[3];
      uint64_t v17 = v14[4];
      __swift_project_boxed_opaque_existential_1(v14, v18);
      uint64_t v19 = a5;
      uint64_t v20 = (*(uint64_t (**)(uint64_t))(*(void *)(v17 + 8) + 8))(v18);
      uint64_t v22 = v21;
      uint64_t v24 = v14[3];
      uint64_t v23 = v14[4];
      __swift_project_boxed_opaque_existential_1(v14, v24);
      uint64_t v25 = (*(uint64_t (**)(uint64_t))(*(void *)(v23 + 8) + 24))(v24);
      MEMORY[0x270FA5388](v25);
      uint64_t v26 = v20;
      a5 = v19;
      v28((char *)&v32 + 1, a2, a3, a4, &v32, v26, v22);
      if (v7) {
        break;
      }
      swift_bridgeObjectRelease();
      v14 += 5;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        unint64_t result = v33;
        a7 = v27;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_6:
    *a7 = result;
  }
  return result;
}

uint64_t sub_259F26FE0()
{
  return sub_259F27B28(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8]);
}

uint64_t sub_259F27008(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  sub_259F4A5F8(v4, *(void *)(v5 + 8));
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 + 24) + 8))(a2, v6);
  return swift_unknownObjectRelease();
}

void sub_259F270B4()
{
  uint64_t v2 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = *(void *)(*v0 + 16);
  if (!v4)
  {
LABEL_5:
    int64_t v8 = v2[12];
    if ((v8 & 0x8000000000000000) == 0 && v8 < v4)
    {
      while (1)
      {
        uint64_t v9 = MEMORY[0x25A2F04C0]();
        unint64_t v10 = (void *)v2[11];
        if ((unint64_t)v8 >= v10[2]) {
          break;
        }
        uint64_t v11 = (void *)v9;
        uint64_t v26 = v10[v8 + 4];
        swift_bridgeObjectRetain();
        char v12 = sub_259F273C0();
        if (v1)
        {
          swift_bridgeObjectRelease();
          return;
        }
        uint64_t v13 = v26;
        if (v12)
        {
          uint64_t v14 = v2[13];
          BOOL v15 = __OFADD__(v14, 1);
          uint64_t v16 = v14 + 1;
          if (v15) {
            goto LABEL_31;
          }
          v2[13] = v16;
          unint64_t v17 = v8 + 1;
          if (v17 < *(void *)(v3 + 16))
          {
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v10 = sub_259F2E300(0, v10[2] + 1, 1, v10);
            }
            unint64_t v19 = v10[2];
            unint64_t v18 = v10[3];
            if (v19 >= v18 >> 1) {
              unint64_t v10 = sub_259F2E300((void *)(v18 > 1), v19 + 1, 1, v10);
            }
            _OWORD v10[2] = v19 + 1;
            v10[v19 + 4] = v13;
            v2[11] = v10;
            v2[12] = v17;
            if (v17 >= *(void *)(v3 + 16)) {
              goto LABEL_34;
            }
            sub_259F13740(v3 + 40 * v17 + 32, (uint64_t)v23);
            uint64_t v21 = v24;
            uint64_t v20 = v25;
            __swift_project_boxed_opaque_existential_1(v23, v24);
            (*(void (**)(uint64_t))(*(void *)(v20 + 16) + 24))(v21);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          if (!v10[2]) {
            goto LABEL_32;
          }
          if (swift_isUniquelyReferenced_nonNull_native())
          {
            uint64_t v22 = v10[2];
            if (!v22) {
              goto LABEL_33;
            }
          }
          else
          {
            unint64_t v10 = sub_259F27B00(v10);
            uint64_t v22 = v10[2];
            if (!v22) {
              goto LABEL_33;
            }
          }
          _OWORD v10[2] = v22 - 1;
          swift_bridgeObjectRelease();
          v2[11] = v10;
          v2[12] = v8 - 1;
        }
        int64_t v8 = v2[12];
        if ((v8 & 0x8000000000000000) == 0)
        {
          uint64_t v3 = *v2;
          if (v8 < *(void *)(*v2 + 16)) {
            continue;
          }
        }
        return;
      }
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    return;
  }
  v0[12] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA400);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_259F6BA00;
  *(void *)(v5 + 32) = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  v2[11] = v5;
  if (!*(void *)(v3 + 16))
  {
LABEL_35:
    __break(1u);
    return;
  }
  sub_259F13740(v3 + 32, (uint64_t)v23);
  uint64_t v7 = v24;
  uint64_t v6 = v25;
  __swift_project_boxed_opaque_existential_1(v23, v24);
  (*(void (**)(uint64_t))(*(void *)(v6 + 16) + 24))(v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  if (!v1)
  {
    uint64_t v3 = *v2;
    uint64_t v4 = *(void *)(*v2 + 16);
    goto LABEL_5;
  }
}

uint64_t sub_259F273C0()
{
  void (*v15)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  unint64_t v2 = v0[12];
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = v0;
    if (v2 < *(void *)(*v0 + 16))
    {
      sub_259F13740(*v0 + 40 * v2 + 32, (uint64_t)v28);
      uint64_t v5 = v29;
      uint64_t v4 = v30;
      __swift_project_boxed_opaque_existential_1(v28, v29);
      if ((*(uint64_t (**)(uint64_t))(*(void *)(v4 + 16) + 8))(v5))
      {
        char v6 = 0;
      }
      else
      {
        type metadata accessor for BlockLogEntryCollector();
        uint64_t v7 = swift_allocObject();
        uint64_t v8 = MEMORY[0x263F8EE80];
        *(void *)(v7 + 16) = MEMORY[0x263F8EE78];
        *(void *)(v7 + 24) = v8;
        int64_t v27 = v1;
        uint64_t v9 = v3[1];
        uint64_t v10 = v3[2];
        swift_getObjectType();
        BYTE1(v31) = 2;
        uint64_t v11 = v3[4];
        uint64_t v26 = v3[3];
        uint64_t v25 = v3[5];
        uint64_t v13 = v29;
        uint64_t v12 = v30;
        __swift_project_boxed_opaque_existential_1(v28, v29);
        uint64_t v14 = *(void *)(v12 + 8);
        BOOL v15 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v14 + 16);
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        v15(&v31, v13, v14);
        unint64_t v17 = v29;
        uint64_t v16 = v30;
        __swift_project_boxed_opaque_existential_1(v28, v29);
        unint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)(v16 + 8) + 8))(v17);
        uint64_t v20 = v19;
        uint64_t v22 = v29;
        uint64_t v21 = v30;
        __swift_project_boxed_opaque_existential_1(v28, v29);
        uint64_t v23 = (*(uint64_t (**)(uint64_t))(*(void *)(v21 + 8) + 24))(v22);
        MEMORY[0x270FA5388](v23);
        char v6 = v9;
        (*(void (**)(char *__return_ptr, char *, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(v10 + 8))((char *)&v31 + 2, (char *)&v31 + 1, v26, v11, v25, &v31, v18, v20);
        if (v27)
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
          return v6 & 1;
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        char v6 = BYTE2(v31);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
      return v6 & 1;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_259F27698@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_259F4A5F8(v9, *(void *)(v10 + 8));
  char v11 = sub_259F27970(0x7845657069636572, 0xEF6E6F6974756365, (void (*)(uint64_t *__return_ptr))sub_259F27C7C);
  if (v4)
  {
    sub_259F277A8(a2, a1, a3);
    return swift_unknownObjectRelease();
  }
  else
  {
    char v13 = v11;
    sub_259F277A8(a2, a1, a3);
    uint64_t result = swift_unknownObjectRelease();
    *a4 = v13 & 1;
  }
  return result;
}

uint64_t sub_259F277A8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a1 + 104);
  uint64_t v8 = a2[3];
  uint64_t v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v8);
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(v7 + 8) + 16))(v18, v8);
  uint64_t v10 = a2[3];
  uint64_t v9 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v10);
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)(v9 + 8) + 8))(v10);
  uint64_t v13 = v12;
  sub_259F13740(a1 + 48, (uint64_t)v19);
  uint64_t v14 = v20;
  uint64_t v15 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  uint64_t v17 = v6;
  v18[1] = v11;
  v18[2] = v13;
  (*(void (**)(uint64_t, _UNKNOWN **, _UNKNOWN **, uint64_t *, uint64_t, uint64_t))(v15 + 8))(a3, &off_2707E3100, &off_2707E30F0, &v17, v14, v15);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

uint64_t sub_259F278E4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t))(*(void *)(v9 + 16) + 16))(a2, a3, &off_2707E3100, v8);
  if (!v4) {
    *a4 = result & 1;
  }
  return result;
}

uint64_t sub_259F27970(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v5 = v3;
  a3(&v19);
  if (v4)
  {
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = a1;
    _OWORD v8[3] = a2;
    v8[4] = v4;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = sub_259F27CDC;
    *(void *)(v9 + 24) = v8;
    uint64_t v10 = (void *)(v5 + 16);
    swift_beginAccess();
    uint64_t v11 = *(void **)(v5 + 16);
    swift_bridgeObjectRetain();
    id v12 = v4;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v5 + 16) = v11;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v11 = sub_259F2E410(0, v11[2] + 1, 1, v11);
      *uint64_t v10 = v11;
    }
    unint64_t v15 = v11[2];
    unint64_t v14 = v11[3];
    if (v15 >= v14 >> 1)
    {
      uint64_t v11 = sub_259F2E410((void *)(v14 > 1), v15 + 1, 1, v11);
      *uint64_t v10 = v11;
    }
    _OWORD v11[2] = v15 + 1;
    uint64_t v16 = &v11[2 * v15];
    void v16[4] = sub_259F27D34;
    v16[5] = v9;
    swift_endAccess();
    swift_release();
    swift_willThrow();
  }
  else
  {
    char v17 = v19;
  }
  return v17 & 1;
}

void *sub_259F27B00(void *a1)
{
  return sub_259F2E300(0, a1[2], 0, a1);
}

void *sub_259F27B14(void *a1)
{
  return sub_259F2EC04(0, a1[2], 0, a1);
}

uint64_t sub_259F27B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_259F13740(a7, (uint64_t)v20);
  *(void *)&long long v14 = a1;
  *((void *)&v14 + 1) = a5;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a2;
  *(void *)&long long v16 = a3;
  *((void *)&v16 + 1) = a4;
  sub_259F13740((uint64_t)v20, (uint64_t)v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  long long v19 = 0uLL;
  *((void *)&v18 + 1) = MEMORY[0x263F8EE78];
  v21[0] = v14;
  v21[1] = v15;
  v21[2] = v16;
  _OWORD v21[3] = v17[0];
  v21[4] = v17[1];
  uint64_t v21[5] = v18;
  v21[6] = 0uLL;
  sub_259F270B4();
  return sub_259F27C2C((uint64_t)v21);
}

uint64_t sub_259F27C2C(uint64_t a1)
{
  return a1;
}

uint64_t sub_259F27C5C@<X0>(unsigned char *a1@<X8>)
{
  return sub_259F27698(*(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_259F27C7C@<X0>(unsigned char *a1@<X8>)
{
  return sub_259F278E4(*(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_259F27C9C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_259F27CDC()
{
  return sub_259F53D4C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_259F27CFC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_259F27D34@<X0>(uint64_t *a1@<X8>)
{
  return sub_259F53EE8(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_259F27D50()
{
  return sub_259F27008(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t destroy for BlockProcessorHelper(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BlockProcessorHelper(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v5 = a2 + 48;
  long long v6 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v8(a1 + 48, v5, v7);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for BlockProcessorHelper(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = v4;
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  __swift_assign_boxed_opaque_existential_1(a1 + 6, a2 + 6);
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for BlockProcessorHelper(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for BlockProcessorHelper(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BlockProcessorHelper(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BlockProcessorHelper()
{
  return &type metadata for BlockProcessorHelper;
}

uint64_t dispatch thunk of ProvidesInputParametersBlockName.dependencyName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_259F28310(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v12[0] = a4;
  v12[1] = a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA418);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F289D8();
  sub_259F68E20();
  char v14 = 0;
  sub_259F68BB0();
  if (!v5)
  {
    char v13 = 1;
    sub_259F68B90();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_259F28484()
{
  if (*v0) {
    return 0xD000000000000012;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_259F284BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_259F286F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_259F284E4(uint64_t a1)
{
  unint64_t v2 = sub_259F289D8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_259F28520(uint64_t a1)
{
  unint64_t v2 = sub_259F289D8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_259F2855C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_259F287D0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_259F2858C(void *a1)
{
  return sub_259F28310(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_259F285AC(uint64_t *a1, uint64_t *a2)
{
  return sub_259F2864C(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_259F285C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 8) + 8) + 8))();
  (*(void (**)(uint64_t))(*(void *)(a2 + 16) + 8))(a1);
  return v4;
}

uint64_t sub_259F2864C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1 == a5 && a2 == a6 || (v12 = sub_259F68C70(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if (a4)
    {
      if (a8 && (a3 == a7 && a4 == a8 || (sub_259F68C70() & 1) != 0)) {
        return 1;
      }
    }
    else if (!a8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_259F286F0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000259F69600)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_259F68C70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_259F287D0(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA408);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F289D8();
  sub_259F68DF0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v11 = 0;
    uint64_t v7 = sub_259F68B40();
    char v10 = 1;
    swift_bridgeObjectRetain();
    sub_259F68B00();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_259F289D8()
{
  unint64_t result = qword_26A3FA410;
  if (!qword_26A3FA410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA410);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MaterializedViewBlockConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259F28AF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MaterializedViewBlockConfig.CodingKeys()
{
  return &type metadata for MaterializedViewBlockConfig.CodingKeys;
}

ValueMetadata *type metadata accessor for MaterializedViewBlockConfig()
{
  return &type metadata for MaterializedViewBlockConfig;
}

unint64_t sub_259F28B40(void *a1)
{
  a1[1] = sub_259F28B78();
  a1[2] = sub_259F28BCC();
  unint64_t result = sub_259F28C20();
  a1[3] = result;
  return result;
}

unint64_t sub_259F28B78()
{
  unint64_t result = qword_26A3FA420;
  if (!qword_26A3FA420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA420);
  }
  return result;
}

unint64_t sub_259F28BCC()
{
  unint64_t result = qword_26A3FA428;
  if (!qword_26A3FA428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA428);
  }
  return result;
}

unint64_t sub_259F28C20()
{
  unint64_t result = qword_26A3FA430;
  if (!qword_26A3FA430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA430);
  }
  return result;
}

unint64_t sub_259F28C78()
{
  unint64_t result = qword_26A3FA438;
  if (!qword_26A3FA438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA438);
  }
  return result;
}

unint64_t sub_259F28CD0()
{
  unint64_t result = qword_26A3FA440;
  if (!qword_26A3FA440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA440);
  }
  return result;
}

unint64_t sub_259F28D28()
{
  unint64_t result = qword_26A3FA448;
  if (!qword_26A3FA448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA448);
  }
  return result;
}

uint64_t BlockLogMetadata.sequenceId.getter()
{
  return *(void *)v0;
}

void BlockLogMetadata.blockType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

uint64_t BlockLogMetadata.blockName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_259F28DC0()
{
  uint64_t v1 = 0x7079546B636F6C62;
  if (*v0 != 1) {
    uint64_t v1 = 0x6D614E6B636F6C62;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x65636E6575716573;
  }
}

uint64_t sub_259F28E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_259F294D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_259F28E50(uint64_t a1)
{
  unint64_t v2 = sub_259F2908C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_259F28E8C(uint64_t a1)
{
  unint64_t v2 = sub_259F2908C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BlockLogMetadata.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA450);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v11 = *(unsigned __int8 *)(v1 + 8);
  uint64_t v8 = *(void *)(v1 + 16);
  v10[0] = *(void *)(v1 + 24);
  v10[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F2908C();
  sub_259F68E20();
  char v15 = 0;
  sub_259F68BD0();
  if (!v2)
  {
    char v14 = v11;
    char v13 = 1;
    sub_259F290E0();
    sub_259F68BF0();
    char v12 = 2;
    sub_259F68BB0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_259F2908C()
{
  unint64_t result = qword_26A3FA458;
  if (!qword_26A3FA458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA458);
  }
  return result;
}

unint64_t sub_259F290E0()
{
  unint64_t result = qword_26A3FA460;
  if (!qword_26A3FA460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA460);
  }
  return result;
}

uint64_t sub_259F29134(void *a1)
{
  return BlockLogMetadata.encode(to:)(a1);
}

uint64_t destroy for BlockLogMetadata()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BlockLogMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BlockLogMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for BlockLogMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BlockLogMetadata(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BlockLogMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BlockLogMetadata()
{
  return &type metadata for BlockLogMetadata;
}

unsigned char *storeEnumTagSinglePayload for BlockLogMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259F29390);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BlockLogMetadata.CodingKeys()
{
  return &type metadata for BlockLogMetadata.CodingKeys;
}

unint64_t sub_259F293CC()
{
  unint64_t result = qword_26A3FA468;
  if (!qword_26A3FA468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA468);
  }
  return result;
}

unint64_t sub_259F29424()
{
  unint64_t result = qword_26A3FA470;
  if (!qword_26A3FA470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA470);
  }
  return result;
}

unint64_t sub_259F2947C()
{
  unint64_t result = qword_26A3FA478;
  if (!qword_26A3FA478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA478);
  }
  return result;
}

uint64_t sub_259F294D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65636E6575716573 && a2 == 0xEA00000000006449;
  if (v2 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7079546B636F6C62 && a2 == 0xE900000000000065 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D614E6B636F6C62 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_259F68C70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t dispatch thunk of ProvidesCustomConfigData.customConfigData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_259F29660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_259F29810(a1, a2, a3, &qword_26A3FA108, MEMORY[0x263F5F1F0], (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_259F23DE8, (void (*)(uint64_t, uint64_t))sub_259F4AC68);
}

uint64_t sub_259F296A8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_259F1E5EC((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v2;
    *BOOL v2 = 0x8000000000000000;
    sub_259F24138(v9, a2, isUniquelyReferenced_nonNull_native);
    *BOOL v2 = v8;
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_259F68A60();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_259F17838(a1, &qword_26A3FA4C0);
    sub_259F4ACA8(a2, v9);
    uint64_t v7 = sub_259F68A60();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a2, v7);
    return sub_259F17838((uint64_t)v9, &qword_26A3FA4C0);
  }
}

uint64_t sub_259F297C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_259F29810(a1, a2, a3, &qword_26A3FA4C8, MEMORY[0x263F5F190], (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_259F24610, (void (*)(uint64_t, uint64_t))sub_259F4AEBC);
}

uint64_t sub_259F29810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void), void (*a6)(char *, uint64_t, uint64_t, uint64_t), void (*a7)(uint64_t, uint64_t))
{
  uint64_t v24 = a6;
  int v11 = v7;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x270FA5388](v15 - 8);
  char v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a5(0);
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v24 - v20;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(a1, 1, v18) == 1)
  {
    sub_259F17838(a1, a4);
    a7(a2, a3);
    swift_bridgeObjectRelease();
    return sub_259F17838((uint64_t)v17, a4);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v21, a1, v18);
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = *v11;
    *int v11 = 0x8000000000000000;
    v24(v21, a2, a3, isUniquelyReferenced_nonNull_native);
    *int v11 = v25;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

id sub_259F29A08(id result, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 3:
      unint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 1:
    case 2:
      unint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for RecipeError(uint64_t a1)
{
}

void sub_259F29A68(void *a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 1:
    case 2:

      break;
    default:
      return;
  }
}

uint64_t _s12PoirotBlocks11RecipeErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_259F29A08(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for RecipeError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_259F29A08(*(id *)a2, v4, v5);
  char v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_259F29A68(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for RecipeError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_259F29A68(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RecipeError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RecipeError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_259F29C30(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_259F29C48(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)unint64_t result = a2 - 4;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for RecipeError()
{
  return &type metadata for RecipeError;
}

void sub_259F29C70(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v35 = a3;
  uint64_t v6 = sub_259F68A60();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_259F67F30();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  char v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  sub_259F2C034(a2, (uint64_t)v33);
  uint64_t v14 = sub_259F67F40();
  if (v3)
  {
    sub_259F17838((uint64_t)v33, &qword_26A3FA498);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    *(void *)&long long v30 = v3;
    id v22 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA248);
    if (swift_dynamicCast())
    {
      sub_259F29A68(v33[0], (uint64_t)v33[1], v34);
    }
    else
    {
      sub_259F0E9A4();
      swift_allocError();
      *(void *)uint64_t v23 = v3;
      *(void *)(v23 + 8) = 0;
      *(unsigned char *)(v23 + 16) = 1;
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v27 = v14;
    unint64_t v28 = v15;
    sub_259F67D20();
    swift_allocObject();
    sub_259F67D10();
    if (qword_26A3F9E58 != -1) {
      swift_once();
    }
    uint64_t v16 = __swift_project_value_buffer(v6, (uint64_t)qword_26A4016C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v16, v6);
    sub_259F2C034((uint64_t)v33, (uint64_t)&v30);
    uint64_t v17 = type metadata accessor for CodingContext();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 56) = 0;
    *(void *)(v18 + 64) = 0;
    swift_bridgeObjectRelease();
    sub_259F2C158((uint64_t)&v30, v18 + 16);
    *(void *)&long long v32 = v17;
    *(void *)&long long v30 = v18;
    uint64_t v19 = (void (*)(char *, void))sub_259F67D00();
    sub_259F296A8((uint64_t)&v30, (uint64_t)v9);
    v19(v29, 0);
    sub_259F2C1C0();
    uint64_t v21 = v27;
    unint64_t v20 = v28;
    sub_259F67CF0();
    swift_release();
    sub_259F21768(v21, v20);
    sub_259F17838((uint64_t)v33, &qword_26A3FA498);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v24 = v31;
    long long v25 = v32;
    uint64_t v26 = v35;
    *uint64_t v35 = v30;
    *((void *)v26 + 2) = v24;
    *(_OWORD *)((char *)v26 + 24) = v25;
  }
}

uint64_t sub_259F2A048(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v108 = a5;
  uint64_t v109 = a4;
  uint64_t v110 = a3;
  uint64_t v118 = sub_259F67DB0();
  uint64_t v128 = *(void *)(v118 - 8);
  MEMORY[0x270FA5388](v118);
  uint64_t v117 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_259F68690();
  MEMORY[0x270FA5388](v9 - 8);
  v123 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_259F67E70();
  uint64_t v112 = *(void *)(v111 - 8);
  MEMORY[0x270FA5388](v111);
  uint64_t v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_259F67F30();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  v122 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  v129 = (char *)&v88 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v106 = (char *)&v88 - v20;
  MEMORY[0x270FA5388](v19);
  id v22 = (char *)&v88 - v21;
  uint64_t v23 = *(void **)(a1 + 16);
  *(void *)(v5 + 56) = v23;
  *(void *)(v5 + 120) = *(void *)(a1 + 40);
  long long v132 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v5 + 64) = v132;
  uint64_t v94 = v5 + 16;
  sub_259F13740(v108, v5 + 16);
  long long v24 = a2[1];
  long long v137 = *a2;
  uint64_t v25 = *((void *)a2 + 4);
  uint64_t v133 = *((void *)a2 + 3);
  uint64_t v138 = v133;
  uint64_t v136 = v25;
  *(_OWORD *)(v5 + 128) = v137;
  *(_OWORD *)(v5 + 144) = v24;
  *(void *)(v5 + 160) = v25;
  uint64_t v130 = v14;
  uint64_t v26 = *(void (**)(void))(v14 + 16);
  uint64_t v95 = v5 + OBJC_IVAR____TtC12PoirotBlocks15RecipeProcessor_recipeFolder;
  uint64_t v127 = v13;
  v120 = v26;
  uint64_t v121 = v14 + 16;
  v26();
  uint64_t v98 = v5;
  sub_259F2C034(v109, v5 + 80);
  uint64_t v97 = a1;
  uint64_t v103 = *(void *)(a1 + 16);
  uint64_t v134 = 0x73656972657551;
  unint64_t v135 = 0xE700000000000000;
  uint64_t v27 = v112;
  unint64_t v28 = *(void (**)(void))(v112 + 104);
  unsigned int v102 = *MEMORY[0x263F06E50];
  uint64_t v29 = v111;
  uint64_t v101 = v112 + 104;
  v100 = (void (*)(char *, void, uint64_t))v28;
  v28(v12);
  id v30 = v23;
  swift_retain();
  swift_unknownObjectRetain();
  sub_259F202E4((uint64_t)&v137);
  sub_259F2C09C((uint64_t)&v138);
  sub_259F2C09C((uint64_t)&v136);
  unint64_t v31 = sub_259F2BFE0();
  uint64_t v107 = v22;
  unint64_t v125 = v31;
  sub_259F67F20();
  long long v32 = *(void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v104 = v12;
  uint64_t v112 = v27 + 8;
  uint64_t v99 = v32;
  v32(v12, v29);
  swift_bridgeObjectRelease();
  unint64_t v33 = sub_259F21918(MEMORY[0x263F8EE78]);
  uint64_t v34 = *(void *)(v133 + 16);
  if (!v34)
  {
    uint64_t v36 = v130;
    goto LABEL_30;
  }
  unint64_t v105 = v33;
  uint64_t v91 = v5 + 80;
  uint64_t v35 = v133 + 32;
  uint64_t v36 = v130;
  uint64_t v115 = (void (**)(char *, uint64_t))(v128 + 8);
  swift_bridgeObjectRetain();
  uint64_t v37 = 0;
  uint64_t v38 = v131;
  uint64_t v39 = v129;
  uint64_t v90 = v34;
  v126 = (void (**)(void, void))(v36 + 8);
  uint64_t v89 = v35;
  while (2)
  {
    uint64_t v40 = *(void *)(v35 + 16 * v37);
    unint64_t v41 = *(void *)(v35 + 16 * v37 + 8);
    uint64_t v134 = v40;
    unint64_t v135 = v41;
    uint64_t v42 = v104;
    uint64_t v43 = v111;
    v100(v104, v102, v111);
    unint64_t v96 = v41;
    swift_bridgeObjectRetain();
    sub_259F67F20();
    v99(v42, v43);
    unint64_t v44 = (unint64_t)v126;
    uint64_t v45 = sub_259F1E68C();
    uint64_t v93 = v44 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    if (v38)
    {
      uint64_t v84 = *(void (**)(uint64_t, uint64_t))v44;
      uint64_t v83 = v98;
      uint64_t v85 = v109;
      uint64_t v86 = v108;
      uint64_t v87 = v127;
      (*(void (**)(char *, uint64_t))v44)(v106, v127);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_259F2C0F4((uint64_t)&v138);
      sub_259F2C0C8((uint64_t)&v137);
      sub_259F2C0F4((uint64_t)&v138);
      sub_259F2C0F4((uint64_t)&v136);
      __swift_destroy_boxed_opaque_existential_1(v86);
      sub_259F17838(v85, &qword_26A3FA498);
      v84(v110, v87);
      v84((uint64_t)v107, v87);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1(v94);

      swift_unknownObjectRelease();
      sub_259F17838(v91, &qword_26A3FA498);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v84(v95, v87);
      type metadata accessor for RecipeProcessor();
      swift_deallocPartialClassInstance();
      return v83;
    }
    uint64_t v46 = v45;
    uint64_t v92 = v37 + 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA2F8);
    uint64_t result = sub_259F68A90();
    uint64_t v124 = result;
    uint64_t v48 = 0;
    uint64_t v49 = *(void *)(v46 + 64);
    uint64_t v113 = v46 + 64;
    uint64_t v50 = 1 << *(unsigned char *)(v46 + 32);
    if (v50 < 64) {
      uint64_t v51 = ~(-1 << v50);
    }
    else {
      uint64_t v51 = -1;
    }
    unint64_t v52 = v51 & v49;
    int64_t v114 = (unint64_t)(v50 + 63) >> 6;
    uint64_t v116 = result + 64;
    uint64_t v53 = v127;
    uint64_t v119 = v46;
    while (1)
    {
      if (v52)
      {
        uint64_t v128 = (v52 - 1) & v52;
        v129 = v48;
        unint64_t v54 = __clz(__rbit64(v52)) | ((void)v48 << 6);
        goto LABEL_21;
      }
      BOOL v55 = __OFADD__(v48, 1);
      int64_t v56 = (int64_t)(v48 + 1);
      if (v55) {
        goto LABEL_34;
      }
      if (v56 >= v114) {
        break;
      }
      unint64_t v57 = *(void *)(v113 + 8 * v56);
      if (!v57)
      {
        int64_t v58 = v56 + 1;
        if (v56 + 1 >= v114) {
          break;
        }
        unint64_t v57 = *(void *)(v113 + 8 * v58);
        if (!v57)
        {
          int64_t v58 = v56 + 2;
          if (v56 + 2 >= v114) {
            break;
          }
          unint64_t v57 = *(void *)(v113 + 8 * v58);
          if (!v57)
          {
            int64_t v58 = v56 + 3;
            if (v56 + 3 >= v114) {
              break;
            }
            unint64_t v57 = *(void *)(v113 + 8 * v58);
            if (!v57)
            {
              while (1)
              {
                int64_t v56 = v58 + 1;
                if (__OFADD__(v58, 1)) {
                  goto LABEL_35;
                }
                if (v56 >= v114) {
                  goto LABEL_27;
                }
                unint64_t v57 = *(void *)(v113 + 8 * v56);
                ++v58;
                if (v57) {
                  goto LABEL_20;
                }
              }
            }
          }
        }
        int64_t v56 = v58;
      }
LABEL_20:
      uint64_t v128 = (v57 - 1) & v57;
      v129 = (char *)v56;
      unint64_t v54 = __clz(__rbit64(v57)) + (v56 << 6);
LABEL_21:
      uint64_t v59 = *(void *)(v46 + 56);
      uint64_t v60 = (uint64_t *)(*(void *)(v46 + 48) + 16 * v54);
      uint64_t v61 = v60[1];
      uint64_t v130 = *v60;
      ((void (*)(char *, unint64_t, uint64_t))v120)(v39, v59 + *(void *)(v36 + 72) * v54, v53);
      uint64_t v133 = v61;
      swift_bridgeObjectRetain();
      uint64_t v62 = v122;
      sub_259F67ED0();
      uint64_t v63 = sub_259F67EB0();
      uint64_t v131 = v64;
      unint64_t v44 = (unint64_t)v126;
      *(void *)&long long v132 = *(void *)(v36 + 8);
      ((void (*)(char *, uint64_t))v132)(v62, v53);
      sub_259F68680();
      uint64_t v65 = v36;
      uint64_t v134 = sub_259F68610();
      unint64_t v135 = v66;
      char v67 = v117;
      sub_259F67DA0();
      uint64_t v68 = sub_259F688E0();
      uint64_t v70 = v69;
      (*v115)(v67, v118);
      swift_bridgeObjectRelease();
      type metadata accessor for Query();
      uint64_t v71 = swift_allocObject();
      *(unsigned char *)(v71 + 48) = 0;
      uint64_t v72 = v131;
      *(void *)(v71 + 16) = v63;
      *(void *)(v71 + 24) = v72;
      *(void *)(v71 + 32) = v68;
      *(void *)(v71 + 40) = v70;
      uint64_t v73 = v127;
      uint64_t result = ((uint64_t (*)(char *))v132)(v39);
      *(void *)(v116 + ((v54 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v54;
      uint64_t v74 = v124;
      uint64_t v75 = (void *)(*(void *)(v124 + 48) + 16 * v54);
      uint64_t v76 = v133;
      *uint64_t v75 = v130;
      v75[1] = v76;
      *(void *)(*(void *)(v74 + 56) + 8 * v54) = v71;
      uint64_t v77 = *(void *)(v74 + 16);
      BOOL v55 = __OFADD__(v77, 1);
      uint64_t v78 = v77 + 1;
      if (v55)
      {
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        return result;
      }
      *(void *)(v74 + 16) = v78;
      uint64_t v38 = 0;
      uint64_t v36 = v65;
      uint64_t v46 = v119;
      uint64_t v53 = v73;
      unint64_t v52 = v128;
      uint64_t v48 = v129;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))v44)(v106, v53);
    uint64_t v79 = v105;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v134 = v79;
    sub_259F2B1F4(v124, (uint64_t)sub_259F2B614, 0, isUniquelyReferenced_nonNull_native, &v134);
    unint64_t v105 = v134;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v37 = v92;
    uint64_t v35 = v89;
    if (v92 != v90) {
      continue;
    }
    break;
  }
  sub_259F2C0F4((uint64_t)&v138);
  unint64_t v33 = v105;
LABEL_30:
  sub_259F2C0C8((uint64_t)&v137);
  sub_259F2C0F4((uint64_t)&v138);
  sub_259F2C0F4((uint64_t)&v136);
  __swift_destroy_boxed_opaque_existential_1(v108);
  sub_259F17838(v109, &qword_26A3FA498);
  uint64_t v81 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
  uint64_t v82 = v127;
  v81(v110, v127);
  v81((uint64_t)v107, v82);
  swift_release();
  uint64_t v83 = v98;
  *(void *)(v98 + OBJC_IVAR____TtC12PoirotBlocks15RecipeProcessor_unclaimedQueries) = v33;
  return v83;
}

uint64_t sub_259F2ACB4()
{
  swift_beginAccess();
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_259F2B65C(v1, (void (*)(uint64_t, uint64_t, uint64_t))sub_259F2AFBC);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  swift_unknownObjectRelease();
  sub_259F17838(v0 + 80, &qword_26A3FA498);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = v0 + OBJC_IVAR____TtC12PoirotBlocks15RecipeProcessor_recipeFolder;
  uint64_t v3 = sub_259F67F30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_259F2ADD0()
{
  return sub_259F58F0C();
}

uint64_t sub_259F2AE38()
{
  sub_259F2ACB4();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_259F2AE90()
{
  return type metadata accessor for RecipeProcessor();
}

uint64_t type metadata accessor for RecipeProcessor()
{
  uint64_t result = qword_26A3FA488;
  if (!qword_26A3FA488) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_259F2AEE4()
{
  uint64_t result = sub_259F67F30();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_259F2AFBC()
{
  return sub_259F2ADD0();
}

void *sub_259F2AFC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *(*v11)(uint64_t *__return_ptr, char *, uint64_t, uint64_t, uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  void *result;
  uint64_t v14;
  char v15;
  uint64_t v16;

  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = *(void *)(a1 + 72);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v15 = 1;
  uint64_t v11 = *(void *(**)(uint64_t *__return_ptr, char *, uint64_t, uint64_t, uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA4A0);
  uint64_t result = v11(&v16, &v15, a2, a3, a4, sub_259F2B7FC, a1, v12, ObjectType, v9);
  if (!v14)
  {
    sub_259F26BE8(v16, a2, a3, a4, v8, v9, a1 + 16);
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_259F2B0D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  v10[3] = type metadata accessor for RecipeProcessor();
  void v10[4] = &off_2707E1CF8;
  _OWORD v9[2] = v10;
  v10[0] = a1;
  swift_retain();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_259F2BDBC(v5, (uint64_t (*)(void, char *))sub_259F2B818, (uint64_t)v9);
  swift_bridgeObjectRelease();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_259F2B834(v8, (void (*)(uint64_t, uint64_t, uint64_t))sub_259F2BF00);
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = v6;
  }
  return result;
}

void sub_259F2B1F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = sub_259F1DC3C();
  if (!v8) {
    goto LABEL_22;
  }
  uint64_t v10 = v7;
  uint64_t v11 = v8;
  uint64_t v12 = v9;
  uint64_t v13 = (void *)*a5;
  unint64_t v15 = sub_259F17068(v7, v8);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  char v19 = v14;
  if (v13[3] >= v18)
  {
    if (a4)
    {
      id v22 = (void *)*a5;
      if ((v14 & 1) == 0) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_259F24DB0();
      id v22 = (void *)*a5;
      if ((v19 & 1) == 0) {
        goto LABEL_12;
      }
    }
    goto LABEL_9;
  }
  sub_259F18300(v18, a4 & 1);
  unint64_t v20 = sub_259F17068(v10, v11);
  if ((v19 & 1) == (v21 & 1))
  {
    unint64_t v15 = v20;
    id v22 = (void *)*a5;
    if ((v19 & 1) == 0)
    {
LABEL_12:
      v22[(v15 >> 6) + 8] |= 1 << v15;
      uint64_t v29 = (uint64_t *)(v22[6] + 16 * v15);
      *uint64_t v29 = v10;
      v29[1] = v11;
      *(void *)(v22[7] + 8 * v15) = v12;
      uint64_t v30 = v22[2];
      BOOL v31 = __OFADD__(v30, 1);
      uint64_t v32 = v30 + 1;
      if (v31)
      {
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      v22[2] = v32;
      uint64_t v33 = sub_259F1DC3C();
      if (v34)
      {
        uint64_t v36 = v33;
        uint64_t v37 = v34;
        uint64_t v38 = v35;
        do
        {
          uint64_t v39 = (void *)*a5;
          unint64_t v15 = sub_259F17068(v36, v37);
          uint64_t v41 = v39[2];
          BOOL v42 = (v40 & 1) == 0;
          uint64_t v43 = v41 + v42;
          if (__OFADD__(v41, v42)) {
            goto LABEL_23;
          }
          char v44 = v40;
          if (v39[3] < v43)
          {
            sub_259F18300(v43, 1);
            unint64_t v45 = sub_259F17068(v36, v37);
            if ((v44 & 1) != (v46 & 1)) {
              goto LABEL_25;
            }
            unint64_t v15 = v45;
          }
          id v22 = (void *)*a5;
          if (v44) {
            goto LABEL_9;
          }
          v22[(v15 >> 6) + 8] |= 1 << v15;
          uint64_t v47 = (uint64_t *)(v22[6] + 16 * v15);
          uint64_t *v47 = v36;
          v47[1] = v37;
          *(void *)(v22[7] + 8 * v15) = v38;
          uint64_t v48 = v22[2];
          BOOL v31 = __OFADD__(v48, 1);
          uint64_t v49 = v48 + 1;
          if (v31) {
            goto LABEL_24;
          }
          v22[2] = v49;
          uint64_t v36 = sub_259F1DC3C();
          uint64_t v37 = v50;
          uint64_t v38 = v51;
        }
        while (v50);
      }
LABEL_22:
      swift_release();
      swift_bridgeObjectRelease();
      sub_259F1E4B8();
      swift_release();
      return;
    }
LABEL_9:
    uint64_t v23 = *(void *)(v22[7] + 8 * v15);
    uint64_t v25 = *(void *)(v23 + 16);
    uint64_t v24 = *(void *)(v23 + 24);
    sub_259F1EB58();
    uint64_t v26 = (void *)swift_allocError();
    *(void *)uint64_t v27 = v25;
    *(void *)(v27 + 8) = v24;
    *(unsigned char *)(v27 + 16) = 1;
    swift_bridgeObjectRetain();
    swift_willThrow();
    id v28 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA248);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_259F1E4B8();
      swift_release();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_259F68D30();
  __break(1u);
LABEL_26:
  sub_259F68960();
  sub_259F686F0();
  sub_259F68A10();
  sub_259F686F0();
  sub_259F68A80();
  __break(1u);
}

uint64_t sub_259F2B614@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_259F2B65C(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v8) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v4 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v18 = *(void *)(v4 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v18 = *(void *)(v4 + 8 * v10);
        if (!v18)
        {
          int64_t v10 = v17 + 3;
          if (v17 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v18 = *(void *)(v4 + 8 * v10);
          if (!v18) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v12 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_5:
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    swift_retain();
    a2(v14, v15, v16);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v19 = v17 + 4;
  if (v19 >= v8) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v4 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v4 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_259F2B7FC@<X0>(uint64_t *a1@<X8>)
{
  return sub_259F2B0D0(v1, a1);
}

uint64_t sub_259F2B818(uint64_t a1, uint64_t a2)
{
  return sub_259F49304(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_259F2B834(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = v2;
  uint64_t v6 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 64);
  int64_t v22 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = *(void *)(*(void *)(a1 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    swift_retain();
    a2(v18, v19, v20);
    if (v3)
    {
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v11 >= v22) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    if (!v15)
    {
      int64_t v16 = v11 + 1;
      if (v11 + 1 >= v22) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v6 + 8 * v16);
      if (v15) {
        goto LABEL_14;
      }
      int64_t v16 = v11 + 2;
      if (v11 + 2 >= v22) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v6 + 8 * v16);
      if (v15) {
        goto LABEL_14;
      }
      int64_t v16 = v11 + 3;
      if (v11 + 3 >= v22) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v6 + 8 * v16);
      if (v15)
      {
LABEL_14:
        int64_t v11 = v16;
        goto LABEL_15;
      }
      int64_t v21 = v11 + 4;
      if (v11 + 4 >= v22) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v6 + 8 * v21);
      v11 += 4;
      if (!v15) {
        break;
      }
    }
LABEL_15:
    unint64_t v9 = (v15 - 1) & v15;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v22) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v21;
    if (v15) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_259F2BA1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = a1;
  uint64_t v33 = a4;
  uint64_t v37 = a3;
  uint64_t v5 = sub_259F67E70();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_259F67F30();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  unint64_t v15 = (char *)&v29 - v14;
  v35[0] = 0x6A2E657069636572;
  v35[1] = 0xEB000000006E6F73;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F06E50], v5);
  sub_259F2BFE0();
  sub_259F67F20();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  if ((sub_259F67E50() & 1) == 0)
  {
    uint64_t v16 = sub_259F67E90();
    uint64_t v21 = v20;
    sub_259F0E9A4();
    swift_allocError();
    *(void *)uint64_t v22 = v16;
    *(void *)(v22 + 8) = v21;
    *(unsigned char *)(v22 + 16) = 0;
    swift_willThrow();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v33);
    uint64_t v23 = v37;
LABEL_7:
    sub_259F17838(v23, &qword_26A3FA498);
    uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v26(a2, v9);
    v26((uint64_t)v15, v9);
    return v16;
  }
  uint64_t v17 = v32;
  uint64_t v16 = v33;
  uint64_t v18 = v37;
  uint64_t v19 = v31;
  sub_259F29C70((uint64_t)v15, v37, v36);
  if (v19)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v16);
    uint64_t v23 = v18;
    goto LABEL_7;
  }
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v30 = v13;
  v24(v13, a2, v9);
  sub_259F2C034(v18, (uint64_t)v35);
  uint64_t v25 = v16;
  sub_259F13740(v16, (uint64_t)v34);
  type metadata accessor for RecipeProcessor();
  uint64_t v16 = swift_allocObject();
  sub_259F2A048(v17, v36, (uint64_t)v30, (uint64_t)v35, (uint64_t)v34);
  __swift_destroy_boxed_opaque_existential_1(v25);
  sub_259F17838(v18, &qword_26A3FA498);
  id v28 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v28(a2, v9);
  v28((uint64_t)v15, v9);
  return v16;
}

uint64_t sub_259F2BDBC(uint64_t a1, uint64_t (*a2)(void, char *), uint64_t a3)
{
  uint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v18 = MEMORY[0x263F8EE78];
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v8 = 0;
    uint64_t v9 = v7 + 32;
    while (1)
    {
      sub_259F2BF28(v9, (uint64_t)v14 + 8);
      *(void *)&v16[0] = v8;
      sub_259F2BF84((uint64_t)v14 + 8, (uint64_t)v16 + 8);
      void v14[4] = v16[4];
      v14[5] = v16[5];
      char v15 = v17;
      v14[0] = v16[0];
      v14[1] = v16[1];
      v14[2] = v16[2];
      v14[3] = v16[3];
      uint64_t v5 = a3;
      uint64_t v10 = a2(*(void *)&v16[0], (char *)v14 + 8);
      if (v3) {
        break;
      }
      uint64_t v11 = v10;
      ++v8;
      sub_259F17838((uint64_t)v14, &qword_26A3FA4A8);
      sub_259F2D020(v11);
      v9 += 96;
      if (v6 == v8)
      {
        uint64_t v5 = v18;
        goto LABEL_6;
      }
    }
    sub_259F17838((uint64_t)v14, &qword_26A3FA4A8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_259F2BF00()
{
  return sub_259F58A38();
}

uint64_t sub_259F2BF28(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_259F2BF84(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_259F2BFE0()
{
  unint64_t result = qword_26A3FA4B0;
  if (!qword_26A3FA4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA4B0);
  }
  return result;
}

uint64_t sub_259F2C034(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_259F2C09C(uint64_t a1)
{
  return a1;
}

uint64_t sub_259F2C0C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_259F2C0F4(uint64_t a1)
{
  return a1;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_259F2C158(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_259F2C1C0()
{
  unint64_t result = qword_26A3FA4B8;
  if (!qword_26A3FA4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA4B8);
  }
  return result;
}

unint64_t sub_259F2C214(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return sub_259F217D4(MEMORY[0x263F8EE78]);
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_259F2F288(v4, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    sub_259F68960();
    swift_bridgeObjectRelease();
    sub_259F686F0();
    unint64_t v7 = 0x8000000259F69B80;
    sub_259F2FB00();
    swift_allocError();
    char v10 = 0;
    *(void *)uint64_t v9 = 0xD00000000000001ALL;
LABEL_8:
    *(void *)(v9 + 8) = v7;
    *(unsigned char *)(v9 + 16) = v10;
    swift_willThrow();
    return v7;
  }
  if (v6 != 1)
  {
    sub_259F68960();
    swift_bridgeObjectRelease();
    sub_259F686F0();
    sub_259F686F0();
    swift_bridgeObjectRelease();
    sub_259F68C20();
    sub_259F686F0();
    swift_bridgeObjectRelease();
    unint64_t v7 = 0x8000000259F69B60;
    sub_259F2FB00();
    swift_allocError();
    *(void *)uint64_t v9 = 0xD00000000000001DLL;
    char v10 = 1;
    goto LABEL_8;
  }
  unint64_t v7 = *(void *)(v5 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

PoirotBlocks::Dataset __swiftcall Dataset.init()()
{
  *uint64_t v0 = MEMORY[0x263F8EE78];
  return result;
}

uint64_t Dataset.rows.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Dataset.rowCount.getter()
{
  return *(void *)(*(void *)v0 + 16);
}

BOOL Dataset.isEmpty.getter()
{
  return *(void *)(*(void *)v0 + 16) == 0;
}

PoirotBlocks::Dataset __swiftcall Dataset.init(_:)(PoirotBlocks::Dataset result)
{
  v1->rows._rawValue = result.rows._rawValue;
  return result;
}

unint64_t Dataset.subscript.getter@<X0>(unint64_t result@<X0>, void *a2@<X8>)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (*(void *)(*(void *)v2 + 16) <= result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v3 = (void *)(*(void *)v2 + 24 * result);
  uint64_t v4 = v3[5];
  uint64_t v5 = v3[6];
  *a2 = v3[4];
  a2[1] = v4;
  a2[2] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Dataset.makeIterator()()
{
  return swift_bridgeObjectRetain();
}

uint64_t Dataset.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_259F2F288(v6, a1, a2);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v7;
  return result;
}

uint64_t Dataset.filter(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v8 = *v3;
  swift_bridgeObjectRetain();
  uint64_t result = sub_259F2D510(a1, a2, v8);
  if (!v4) {
    *a3 = result;
  }
  return result;
}

uint64_t Dataset.appending(_:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = *v2;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v7 = sub_259F2E644(0, v7[2] + 1, 1, v7);
  }
  unint64_t v9 = v7[2];
  unint64_t v8 = v7[3];
  if (v9 >= v8 >> 1) {
    uint64_t v7 = sub_259F2E644((void *)(v8 > 1), v9 + 1, 1, v7);
  }
  v7[2] = v9 + 1;
  char v10 = &v7[3 * v9];
  void v10[4] = v5;
  void v10[5] = v4;
  v10[6] = v6;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v7;
  return result;
}

uint64_t Dataset.appending<A>(contentsOf:)@<X0>(void *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA4D0);
  sub_259F2F450(&qword_26A3FA4D8, &qword_26A3FA4D0);
  uint64_t result = sub_259F68880();
  *a1 = v3;
  return result;
}

uint64_t Dataset.append(_:)(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_259F2E644(0, v5[2] + 1, 1, v5);
    uint64_t v5 = (void *)result;
  }
  unint64_t v8 = v5[2];
  unint64_t v7 = v5[3];
  if (v8 >= v7 >> 1)
  {
    uint64_t result = (uint64_t)sub_259F2E644((void *)(v7 > 1), v8 + 1, 1, v5);
    uint64_t v5 = (void *)result;
  }
  v5[2] = v8 + 1;
  unint64_t v9 = &v5[3 * v8];
  v9[4] = v3;
  v9[5] = v2;
  v9[6] = v4;
  *uint64_t v1 = v5;
  return result;
}

uint64_t Dataset.append<A>(contentsOf:)(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA4D0);
  return sub_259F687E0();
}

uint64_t sub_259F2C90C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_259F2E520(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F2CA6C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_259F2E644(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F2CBC8(uint64_t result)
{
  uint64_t v3 = *(void *)(result + 16);
  int64_t v4 = *(void **)v1;
  int64_t v5 = *(void *)(*(void *)v1 + 16);
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = result;
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6) {
      int64_t v10 = v5 + v3;
    }
    else {
      int64_t v10 = v5;
    }
    int64_t v4 = sub_259F2E644(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    int64_t v9 = v4[3] >> 1;
  }
  uint64_t v11 = v4[2];
  uint64_t v12 = v9 - v11;
  uint64_t result = (uint64_t)sub_259F34438(v41, &v4[3 * v11 + 4], v9 - v11, v7);
  if (result < v3) {
    goto LABEL_15;
  }
  if (result)
  {
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, result);
    uint64_t v15 = v13 + result;
    if (v14)
    {
      __break(1u);
      goto LABEL_51;
    }
    v4[2] = v15;
  }
  if (result != v12) {
    goto LABEL_13;
  }
LABEL_16:
  int64_t v2 = v4[2];
  uint64_t v7 = v42;
  uint64_t v39 = v41[1];
  uint64_t v40 = v41[0];
  int64_t v6 = v43;
  uint64_t v37 = v42;
  if (!v44)
  {
LABEL_51:
    int64_t v30 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      return result;
    }
    int64_t v22 = (unint64_t)(v7 + 64) >> 6;
    if (v30 >= v22) {
      goto LABEL_13;
    }
    unint64_t v34 = *(void *)(v39 + 8 * v30);
    if (!v34)
    {
      int64_t v35 = v6 + 2;
      if (v6 + 2 >= v22) {
        goto LABEL_13;
      }
      unint64_t v34 = *(void *)(v39 + 8 * v35);
      if (v34)
      {
LABEL_59:
        int64_t v30 = v35;
      }
      else
      {
        if (v6 + 3 >= v22) {
          goto LABEL_13;
        }
        unint64_t v34 = *(void *)(v39 + 8 * (v6 + 3));
        if (!v34) {
          goto LABEL_65;
        }
        int64_t v30 = v6 + 3;
      }
    }
LABEL_54:
    unint64_t v16 = (v34 - 1) & v34;
    unint64_t v17 = __clz(__rbit64(v34)) + (v30 << 6);
    int64_t v6 = v30;
    uint64_t v7 = v37;
    goto LABEL_18;
  }
  unint64_t v16 = (v44 - 1) & v44;
  unint64_t v17 = __clz(__rbit64(v44)) | (v43 << 6);
LABEL_18:
  uint64_t v18 = (uint64_t *)(*(void *)(v40 + 56) + 24 * v17);
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  uint64_t v21 = v18[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v20) {
    goto LABEL_13;
  }
  int64_t v38 = (unint64_t)(v7 + 64) >> 6;
  while (1)
  {
    unint64_t v23 = v4[3];
    int64_t v24 = v23 >> 1;
    if ((uint64_t)(v23 >> 1) < v2 + 1)
    {
      int64_t v4 = sub_259F2E644((void *)(v23 > 1), v2 + 1, 1, v4);
      int64_t v24 = v4[3] >> 1;
    }
    if (v2 < v24) {
      break;
    }
LABEL_20:
    v4[2] = v2;
    if (!v20) {
      goto LABEL_13;
    }
  }
  while (1)
  {
    uint64_t v29 = &v4[3 * v2 + 4];
    *uint64_t v29 = v19;
    v29[1] = v20;
    v29[2] = v21;
    ++v2;
    if (!v16) {
      break;
    }
    unint64_t v25 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    unint64_t v26 = v25 | (v6 << 6);
LABEL_26:
    uint64_t v27 = (uint64_t *)(*(void *)(v40 + 56) + 24 * v26);
    uint64_t v19 = *v27;
    uint64_t v20 = v27[1];
    uint64_t v21 = v27[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20) {
      BOOL v28 = v2 < v24;
    }
    else {
      BOOL v28 = 0;
    }
    if (!v28) {
      goto LABEL_20;
    }
  }
  int64_t v30 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v30 >= v38) {
      goto LABEL_55;
    }
    unint64_t v31 = *(void *)(v39 + 8 * v30);
    if (v31) {
      goto LABEL_41;
    }
    int64_t v32 = v6 + 2;
    if (v6 + 2 >= v38) {
      goto LABEL_55;
    }
    unint64_t v31 = *(void *)(v39 + 8 * v32);
    if (!v31)
    {
      if (v6 + 3 >= v38) {
        goto LABEL_55;
      }
      unint64_t v31 = *(void *)(v39 + 8 * (v6 + 3));
      if (v31)
      {
        int64_t v30 = v6 + 3;
        goto LABEL_41;
      }
      int64_t v32 = v6 + 4;
      if (v6 + 4 >= v38) {
        goto LABEL_55;
      }
      unint64_t v31 = *(void *)(v39 + 8 * v32);
      if (!v31)
      {
        int64_t v30 = v6 + 5;
        if (v6 + 5 >= v38) {
          goto LABEL_55;
        }
        unint64_t v31 = *(void *)(v39 + 8 * v30);
        if (!v31)
        {
          int64_t v33 = v6 + 6;
          while (v38 != v33)
          {
            unint64_t v31 = *(void *)(v39 + 8 * v33++);
            if (v31)
            {
              int64_t v30 = v33 - 1;
              goto LABEL_41;
            }
          }
LABEL_55:
          v4[2] = v2;
          goto LABEL_13;
        }
        goto LABEL_41;
      }
    }
    int64_t v30 = v32;
LABEL_41:
    unint64_t v16 = (v31 - 1) & v31;
    unint64_t v26 = __clz(__rbit64(v31)) + (v30 << 6);
    int64_t v6 = v30;
    goto LABEL_26;
  }
  __break(1u);
LABEL_65:
  int64_t v35 = v30 + 3;
  if (v30 + 3 < v22)
  {
    unint64_t v34 = *(void *)(v39 + 8 * v35);
    if (v34) {
      goto LABEL_59;
    }
    v30 += 4;
    if (v30 >= v22) {
      goto LABEL_13;
    }
    unint64_t v34 = *(void *)(v39 + 8 * v30);
    if (!v34)
    {
      int64_t v36 = v6 + 6;
      while (v22 != v36)
      {
        unint64_t v34 = *(void *)(v39 + 8 * v36++);
        if (v34)
        {
          int64_t v30 = v36 - 1;
          goto LABEL_54;
        }
      }
      goto LABEL_13;
    }
    goto LABEL_54;
  }
LABEL_13:
  uint64_t result = sub_259F1E4B8();
  *(void *)uint64_t v1 = v4;
  return result;
}

uint64_t sub_259F2D020(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_259F2E780(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA2F0);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F2D18C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_259F2E9C8(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F2D2E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_259F2EE58(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(type metadata accessor for DatasetColumnDescription(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

PoirotBlocks::Dataset __swiftcall Dataset.appending(contentsOf:)(PoirotBlocks::Dataset contentsOf)
{
  unint64_t v3 = v1;
  uint64_t v4 = *(void *)contentsOf.rows._rawValue;
  uint64_t v6 = *v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result.rows._rawValue = (void *)sub_259F2CA6C(v4);
  *unint64_t v3 = v6;
  return result;
}

Swift::Void __swiftcall Dataset.append(contentsOf:)(PoirotBlocks::Dataset contentsOf)
{
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_259F2CA6C(v1);
}

uint64_t sub_259F2D510(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v14 = (uint64_t (*)(uint64_t *))result;
  uint64_t v13 = *(void *)(a3 + 16);
  if (v13)
  {
    unint64_t v5 = 0;
    uint64_t v6 = (_OWORD *)(a3 + 40);
    uint64_t v7 = MEMORY[0x263F8EE78];
    while (v5 < *(void *)(a3 + 16))
    {
      uint64_t v8 = *((void *)v6 - 1);
      long long v15 = *v6;
      uint64_t v16 = v8;
      long long v17 = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v9 = v14(&v16);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if (v9)
      {
        PoirotBlocks::Dataset result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v18 = v7;
        if ((result & 1) == 0)
        {
          PoirotBlocks::Dataset result = sub_259F1C8C8(0, *(void *)(v7 + 16) + 1, 1);
          uint64_t v7 = v18;
        }
        unint64_t v11 = *(void *)(v7 + 16);
        unint64_t v10 = *(void *)(v7 + 24);
        if (v11 >= v10 >> 1)
        {
          PoirotBlocks::Dataset result = sub_259F1C8C8(v10 > 1, v11 + 1, 1);
          uint64_t v7 = v18;
        }
        *(void *)(v7 + 16) = v11 + 1;
        uint64_t v12 = v7 + 24 * v11;
        *(void *)(v12 + 32) = v8;
        *(_OWORD *)(v12 + 40) = v15;
      }
      else
      {
        swift_bridgeObjectRelease();
        PoirotBlocks::Dataset result = swift_bridgeObjectRelease();
      }
      ++v5;
      uint64_t v6 = (_OWORD *)((char *)v6 + 24);
      if (v13 == v5) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
LABEL_16:
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

uint64_t static Dataset.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_259F2D6C0(*a1, *a2);
}

uint64_t sub_259F2D6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = (uint64_t *)(a2 + 48);
    for (uint64_t i = a1 + 48; ; i += 24)
    {
      uint64_t v5 = *v3;
      if (*(void *)(*(void *)i + 16) != *(void *)(*v3 + 16)) {
        break;
      }
      MEMORY[0x270FA5388](a1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_259F16E0C(v5, (uint64_t (*)(void, void, long long *))sub_259F1782C, (uint64_t)v8);
      swift_bridgeObjectRelease();
      uint64_t v6 = v9;
      sub_259F301A8((uint64_t)v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = swift_bridgeObjectRelease();
      if (v6) {
        break;
      }
      v3 += 3;
      if (!--v2) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_259F2D818(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_259F68C70(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_259F68C70() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_259F2D8E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DatasetColumnDescription(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_259F138BC(a1 + v12, (uint64_t)v10);
        sub_259F138BC(a2 + v12, (uint64_t)v7);
        sub_259F26B34();
        char v15 = sub_259F68600();
        sub_259F26B8C((uint64_t)v7);
        sub_259F26B8C((uint64_t)v10);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_259F2DA5C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v5 = a1[4];
  uint64_t v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v7 = sub_259F225B8(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0) {
    return 0;
  }
  uint64_t v8 = a1 + 5;
  uint64_t v9 = a2 + 5;
  uint64_t v10 = v2 - 1;
  do
  {
    BOOL v11 = v10 == 0;
    if (!v10) {
      break;
    }
    uint64_t v13 = *v8++;
    uint64_t v12 = v13;
    uint64_t v14 = *v9++;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v15 = sub_259F225B8(v12, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    --v10;
  }
  while ((v15 & 1) != 0);
  return v11;
}

uint64_t sub_259F2DB5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (uint64_t *)(a2 + 48);
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (2)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *(v3 - 2);
    uint64_t v8 = *(v3 - 1);
    int v10 = *(unsigned __int8 *)v3;
    v3 += 3;
    int v9 = v10;
    int v12 = *(unsigned __int8 *)v4;
    v4 += 3;
    unsigned __int8 v11 = v12;
    switch(v12)
    {
      case 1:
        if (v9 != 1) {
          goto LABEL_31;
        }
        sub_259F1E5FC(v7, v8, 1u);
        sub_259F1E5FC(v5, v6, 1u);
        sub_259F1E5FC(v7, v8, 1u);
        sub_259F1E5FC(v5, v6, 1u);
        char v14 = sub_259F2DB5C(v5, v7);
        sub_259F26A80(v5, v6, 1u);
        sub_259F26A80(v7, v8, 1u);
        sub_259F26A80(v7, v8, 1u);
        sub_259F26A80(v5, v6, 1u);
        if ((v14 & 1) == 0) {
          return 0;
        }
        goto LABEL_6;
      case 2:
        if (v9 != 2) {
          goto LABEL_31;
        }
        if (v5 == v7 && v6 == v8)
        {
          sub_259F1E5FC(v5, v6, 2u);
          sub_259F1E5FC(v5, v6, 2u);
          sub_259F26A80(v5, v6, 2u);
          sub_259F26A80(v5, v6, 2u);
        }
        else
        {
          char v16 = sub_259F68C70();
          sub_259F1E5FC(v7, v8, 2u);
          sub_259F1E5FC(v5, v6, 2u);
          sub_259F26A80(v5, v6, 2u);
          sub_259F26A80(v7, v8, 2u);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        goto LABEL_6;
      case 3:
        if (v9 != 3) {
          goto LABEL_32;
        }
        sub_259F26A80(v5, v6, 3u);
        sub_259F26A80(v7, v8, 3u);
        if (v5 != v7) {
          return 0;
        }
        goto LABEL_6;
      case 4:
        if (v9 != 4) {
          goto LABEL_32;
        }
        sub_259F26A80(v5, v6, 4u);
        sub_259F26A80(v7, v8, 4u);
        if (*(double *)&v5 != *(double *)&v7) {
          return 0;
        }
        goto LABEL_6;
      case 5:
        if (v9 != 5) {
          goto LABEL_32;
        }
        sub_259F26A80(v5, v6, 5u);
        sub_259F26A80(v7, v8, 5u);
        if (((((v5 & 1) == 0) ^ v7) & 1) == 0) {
          return 0;
        }
        goto LABEL_6;
      default:
        if (!v9)
        {
          sub_259F1E5FC(v7, v8, 0);
          sub_259F1E5FC(v5, v6, 0);
          sub_259F1E5FC(v7, v8, 0);
          sub_259F1E5FC(v5, v6, 0);
          char v13 = sub_259F22BBC(v5, v7);
          sub_259F26A80(v5, v6, 0);
          sub_259F26A80(v7, v8, 0);
          sub_259F26A80(v7, v8, 0);
          sub_259F26A80(v5, v6, 0);
          if ((v13 & 1) == 0) {
            return 0;
          }
LABEL_6:
          if (!--v2) {
            return 1;
          }
          continue;
        }
LABEL_31:
        sub_259F1E5FC(v5, v6, v11);
        swift_bridgeObjectRetain();
LABEL_32:
        sub_259F1E5FC(v7, v8, v9);
        sub_259F26A80(v5, v6, v11);
        sub_259F26A80(v7, v8, v9);
        sub_259F26A80(v5, v6, v11);
        return 0;
    }
  }
}

uint64_t sub_259F2DF24(uint64_t *a1, uint64_t *a2)
{
  return sub_259F2D6C0(*a1, *a2);
}

void sub_259F2DF30(void *a1@<X8>)
{
  *a1 = *v1;
  a1[1] = 0;
}

uint64_t sub_259F2DF3C()
{
  return 0;
}

uint64_t sub_259F2DF44()
{
  return 2;
}

uint64_t sub_259F2DF4C()
{
  uint64_t v1 = sub_259F2F0C0(*v0);
  swift_bridgeObjectRelease();
  return v1;
}

void *sub_259F2DF84(void *a1, void *a2, uint64_t a3)
{
  return sub_259F2DF8C(a1, a2, a3, *v3);
}

void *sub_259F2DF8C(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (!a2)
  {
LABEL_11:
    uint64_t v6 = 0;
    goto LABEL_15;
  }
  uint64_t v6 = a3;
  if (!a3)
  {
LABEL_15:
    *uint64_t v5 = a4;
    v5[1] = v6;
    return (void *)v6;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = *(void *)(a4 + 16);
    if (v7)
    {
      uint64_t v8 = a2;
      int v9 = (uint64_t *)(a4 + 48);
      unint64_t v10 = 1;
      while (1)
      {
        uint64_t v11 = *(v9 - 1);
        uint64_t v12 = *v9;
        *uint64_t v8 = *(v9 - 2);
        v8[1] = v11;
        v8[2] = v12;
        if (v6 == v10) {
          break;
        }
        if (v7 == v10)
        {
          uint64_t v6 = v7;
          break;
        }
        v9 += 3;
        unint64_t v13 = *(void *)(a4 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v8 += 3;
        if (v10++ >= v13)
        {
          __break(1u);
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v6 = 0;
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_259F2E06C()
{
  return sub_259F68720();
}

uint64_t sub_259F2E090(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA520);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA398) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_259F68A70();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA398) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_259F2F6AC(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_259F2E300(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA400);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      unint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_259F2F808(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_259F2E410(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA4F8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      unint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_259F2F8FC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_259F2E520(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA4F0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_259F2FA08(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_259F2E644(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA278);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_259F2F4A4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_259F2E76C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_259F2EC18(a1, a2, a3, a4, &qword_26A3FA508, &qword_26A3FA510);
}

void *sub_259F2E780(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA2E8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_259F2FB54(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_259F2E8A4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A3FA530);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_259F2FEB0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_259F2E9C8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA260);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      unint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_259F2FC64(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_259F2EAD8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA388);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_259F2F59C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_259F2EC04(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_259F2EC18(a1, a2, a3, a4, &qword_26A3FA2B8, &qword_26A3FA2C0);
}

void *sub_259F2EC18(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      unint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_259F2FFA8(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_259F2ED34(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA528);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 96);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[12 * v8 + 4]) {
          memmove(v12, a4 + 4, 96 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_259F300B0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_259F2EE58(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA2A8);
  uint64_t v10 = *(void *)(type metadata accessor for DatasetColumnDescription(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_259F68A70();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for DatasetColumnDescription(0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_259F2FD58(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_259F2F0C0(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  uint64_t v2 = (void *)MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v4 = v2 + 4;
    char v5 = (uint64_t *)(result + 48);
    while (1)
    {
      uint64_t v6 = *(v5 - 2);
      uint64_t v7 = *(v5 - 1);
      uint64_t v8 = *v5;
      if (v3)
      {
        swift_bridgeObjectRetain();
        uint64_t result = swift_bridgeObjectRetain();
        BOOL v9 = __OFSUB__(v3--, 1);
        if (v9) {
          goto LABEL_28;
        }
      }
      else
      {
        unint64_t v10 = v2[3];
        if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_29;
        }
        int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
        if (v11 <= 1) {
          uint64_t v12 = 1;
        }
        else {
          uint64_t v12 = v11;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA278);
        unint64_t v13 = (void *)swift_allocObject();
        uint64_t v14 = (uint64_t)(_swift_stdlib_malloc_size(v13) - 32) / 24;
        v13[2] = v12;
        v13[3] = 2 * v14;
        BOOL v15 = v13 + 4;
        uint64_t v16 = v2[3] >> 1;
        uint64_t v4 = &v13[3 * v16 + 4];
        uint64_t v17 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        if (v2[2])
        {
          if (v13 != v2 || v15 >= &v2[3 * v16 + 4]) {
            memmove(v15, v2 + 4, 24 * v16);
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v2[2] = 0;
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        uint64_t result = swift_release();
        uint64_t v2 = v13;
        BOOL v9 = __OFSUB__(v17, 1);
        uint64_t v3 = v17 - 1;
        if (v9)
        {
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
          return result;
        }
      }
      *uint64_t v4 = v6;
      v4[1] = v7;
      v4[2] = v8;
      v4 += 3;
      v5 += 3;
      if (!--v1)
      {
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
  }
  uint64_t v3 = 0;
LABEL_24:
  unint64_t v19 = v2[3];
  if (v19 >= 2)
  {
    unint64_t v20 = v19 >> 1;
    BOOL v9 = __OFSUB__(v20, v3);
    uint64_t v21 = v20 - v3;
    if (v9) {
      goto LABEL_30;
    }
    v2[2] = v21;
  }
  return (uint64_t)v2;
}

uint64_t sub_259F2F288(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = 0;
  unint64_t v6 = *(void *)(result + 16);
  uint64_t v7 = result + 48;
  unint64_t v20 = v6;
  uint64_t v21 = MEMORY[0x263F8EE78];
  uint64_t v19 = result + 48;
LABEL_2:
  if (v5 > v6) {
    unint64_t v6 = v5;
  }
  uint64_t v8 = -(uint64_t)v6;
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (uint64_t *)(v7 + 24 * v5);
  while (1)
  {
    if (v22 + v9 == 1) {
      return v21;
    }
    unint64_t v5 = v9++;
    if (v8 + v9 == 2) {
      break;
    }
    uint64_t v11 = *(v10 - 2);
    uint64_t v12 = *(v10 - 1);
    uint64_t v13 = *v10;
    if (v11 == a2 && v12 == a3)
    {
      uint64_t v11 = a2;
      uint64_t v12 = a3;
LABEL_14:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v15 = v21;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_259F1C8C8(0, *(void *)(v21 + 16) + 1, 1);
        uint64_t v15 = v21;
      }
      unint64_t v17 = *(void *)(v15 + 16);
      unint64_t v16 = *(void *)(v15 + 24);
      if (v17 >= v16 >> 1)
      {
        uint64_t result = sub_259F1C8C8(v16 > 1, v17 + 1, 1);
        uint64_t v15 = v21;
      }
      *(void *)(v15 + 16) = v17 + 1;
      uint64_t v21 = v15;
      unint64_t v18 = (void *)(v15 + 24 * v17);
      void v18[4] = v11;
      v18[5] = v12;
      v18[6] = v13;
      uint64_t v7 = v19;
      unint64_t v6 = v20;
      goto LABEL_2;
    }
    v10 += 3;
    uint64_t result = sub_259F68C70();
    if (result) {
      goto LABEL_14;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_259F2F414()
{
  return sub_259F2F450(&qword_26A3FA4E0, &qword_26A3FA4E8);
}

uint64_t sub_259F2F450(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for Dataset()
{
  return &type metadata for Dataset;
}

uint64_t sub_259F2F4A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F2F59C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA110);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F2F6AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA398) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F2F808(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F2F8FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA500);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F2FA08(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

unint64_t sub_259F2FB00()
{
  unint64_t result = qword_26A3FA518;
  if (!qword_26A3FA518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA518);
  }
  return result;
}

uint64_t sub_259F2FB54(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA2F0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F2FC64(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F2FD58(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for DatasetColumnDescription(0) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F2FEB0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F2FFA8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F300B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 96 * a1 + 32;
    unint64_t v6 = a3 + 96 * v4;
    if (v5 >= v6 || v5 + 96 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F301A8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA230);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_259F30208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
  if (v6)
  {
    unint64_t v7 = (void *)v6;
    uint64_t v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
    id v9 = objc_msgSend(v8, sel_publisherWithUseCase_options_, v7, a1);
  }
  else
  {
    uint64_t v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
    id v9 = objc_msgSend(v8, sel_publisherWithOptions_, a1);
  }

  return v9;
}

uint64_t RawPayload.dataVersion.getter()
{
  return 1;
}

uint64_t RawPayload.data.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC12PoirotBlocks10RawPayload_data);
  sub_259F21710(v1, *(void *)(v0 + OBJC_IVAR____TtC12PoirotBlocks10RawPayload_data + 8));
  return v1;
}

id static RawPayload.event(with:dataVersion:)(uint64_t a1, unint64_t a2)
{
  unint64_t v5 = (char *)objc_allocWithZone(v2);
  *(_DWORD *)&v5[OBJC_IVAR____TtC12PoirotBlocks10RawPayload_dataVersion] = 1;
  uint64_t v6 = (uint64_t *)&v5[OBJC_IVAR____TtC12PoirotBlocks10RawPayload_data];
  *uint64_t v6 = a1;
  v6[1] = a2;
  sub_259F21710(a1, a2);
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

id RawPayload.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void RawPayload.init()()
{
}

id RawPayload.__allocating_init(jsonDictionary:)()
{
  v7[1] = *(id *)MEMORY[0x263EF8340];
  id v1 = objc_allocWithZone(v0);
  uint64_t v2 = (void *)sub_259F68580();
  swift_bridgeObjectRelease();
  v7[0] = 0;
  id v3 = objc_msgSend(v1, sel_initWithJSONDictionary_error_, v2, v7);

  if (v3)
  {
    id v4 = v7[0];
  }
  else
  {
    id v5 = v7[0];
    sub_259F67E20();

    swift_willThrow();
  }
  return v3;
}

void RawPayload.init(jsonDictionary:)()
{
}

id RawPayload.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_259F30708()
{
  swift_release();
  return MEMORY[0x270FA0228](v0, 56, 7);
}

id sub_259F30758()
{
  return *(id *)(*(void *)v0 + 40);
}

id sub_259F30764()
{
  id v1 = objc_msgSend(*(id *)(*(void *)v0 + 40), sel_schema);
  return v1;
}

uint64_t sub_259F307A0()
{
  return swift_retain();
}

id sub_259F307AC()
{
  id v1 = *(void **)(v0 + 64);
  if (v1)
  {
    id v2 = *(id *)(v0 + 64);
  }
  else
  {
    uint64_t v3 = v0;
    BaseStreamSchemaProvider.makeBiomeSchema(forTable:)();
    id v4 = *(void **)(v0 + 64);
    *(void *)(v3 + 64) = v5;
    id v2 = v5;

    id v1 = 0;
  }
  id v6 = v1;
  return v2;
}

uint64_t sub_259F308C4(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _OWORD v27[2] = *(id *)MEMORY[0x263EF8340];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A3FA550);
  MEMORY[0x270FA5388](v13 - 8);
  *(void *)(v7 + 64) = 0;
  *(unsigned char *)(v7 + 72) = 1;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  *(void *)(v7 + 32) = a3;
  *(void *)(v7 + 40) = a4;
  uint64_t v15 = a7;
  sub_259F31408(a7, (uint64_t)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_259F680B0();
  swift_allocObject();
  id v16 = a2;
  id v17 = a1;
  uint64_t v18 = v26[1];
  uint64_t v19 = sub_259F680A0();
  if (v18)
  {

    sub_259F31494(a7);
    swift_bridgeObjectRelease();

    type metadata accessor for BiomeTableConfig.SchematizedBiomeLibraryConfig();
    swift_deallocPartialClassInstance();
    return v7;
  }
  *(void *)(v7 + 56) = v19;
  id v20 = (id)BiomeLibrary();
  v27[0] = 0;
  id v21 = objc_msgSend(v20, sel_streamWithIdentifier_error_, v17, v27);
  swift_unknownObjectRelease();
  if (v21)
  {
    id v22 = v27[0];

    sub_259F31494(v15);
    *(void *)(v7 + 48) = v21;
    return v7;
  }
  id v24 = v27[0];
  uint64_t v25 = sub_259F67E20();

  swift_willThrow();
  v27[0] = 0;
  v27[1] = (id)0xE000000000000000;
  sub_259F68960();
  sub_259F686F0();
  _OWORD v26[2] = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA248);
  sub_259F68A10();
  uint64_t result = sub_259F68A80();
  __break(1u);
  return result;
}

uint64_t sub_259F30B88()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0228](v0, 73, 7);
}

id sub_259F30BE8()
{
  return *(id *)(*(void *)v0 + 48);
}

id sub_259F30BF4()
{
  return sub_259F307AC();
}

uint64_t sub_259F30C18()
{
  return swift_retain();
}

void *sub_259F30C24()
{
  id v1 = *(void **)(*(void *)v0 + 24);
  id v2 = v1;
  return v1;
}

uint64_t sub_259F30C50()
{
  return 1;
}

id sub_259F30C58()
{
  id v1 = *(void **)(v0 + 64);
  if (v1)
  {
    id v2 = *(id *)(v0 + 64);
  }
  else
  {
    uint64_t v3 = v0;
    BaseStreamSchemaProvider.makeBiomeSchema(forTable:)();
    id v4 = *(void **)(v0 + 64);
    *(void *)(v3 + 64) = v5;
    id v2 = v5;

    id v1 = 0;
  }
  id v6 = v1;
  return v2;
}

id sub_259F30D70()
{
  id v1 = *(void **)(v0 + 72);
  if (v1)
  {
    id v2 = *(id *)(v0 + 72);
  }
  else
  {
    id v3 = *(id *)(v0 + 32);
    id v4 = sub_259F30C58();
    type metadata accessor for RawPayload();
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F2A9A8]), sel_initWithStreamIdentifier_eventClass_storeConfig_, v3, swift_getObjCClassFromMetadata(), *(void *)(v0 + 40));
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F2A998]), sel_initWithIdentifier_schema_configuration_, v3, v4, v5);

    uint64_t v7 = *(void **)(v0 + 72);
    *(void *)(v0 + 72) = v6;
    id v2 = v6;

    id v1 = 0;
  }
  id v8 = v1;
  return v2;
}

id *sub_259F30E58()
{
  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t sub_259F30EA8()
{
  sub_259F30E58();
  return MEMORY[0x270FA0228](v0, 81, 7);
}

id sub_259F30EDC()
{
  return sub_259F30D70();
}

id sub_259F30F00()
{
  return sub_259F30C58();
}

void *sub_259F30F24()
{
  id v1 = *(void **)(*(void *)v0 + 48);
  id v2 = v1;
  return v1;
}

void BiomeTableConfig.init(identifier:useCase:)(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for BiomeTableConfig.BiomeLibraryConfig();
  swift_allocObject();
  uint64_t v7 = sub_259F3127C(a1, a2);
  *(void *)(a3 + 24) = v6;
  *(void *)(a3 + 32) = &off_2707E1EE8;

  *(void *)a3 = v7;
  *(unsigned char *)(a3 + 40) = 0;
}

uint64_t type metadata accessor for BiomeTableConfig.BiomeLibraryConfig()
{
  return self;
}

_OWORD *BiomeTableConfig.init(identifier:useCase:tableName:messageName:manifest:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _OWORD *a8@<X8>)
{
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  unint64_t v23 = a8;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A3FA550);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_259F31408(a7, (uint64_t)v15);
  uint64_t v16 = type metadata accessor for BiomeTableConfig.SchematizedBiomeLibraryConfig();
  uint64_t v17 = swift_allocObject();
  id v18 = a2;
  id v19 = a1;
  uint64_t v20 = v30;
  sub_259F308C4(v19, a2, a3, a4, v24, v25, (uint64_t)v15);
  if (v20)
  {

    return (_OWORD *)sub_259F31494(a7);
  }
  else
  {
    uint64_t v27 = v16;
    BOOL v28 = &off_2707E1EB0;

    *(void *)&long long v26 = v17;
    sub_259F31494(a7);
    char v29 = 1;
    return sub_259F314F4(&v26, v23);
  }
}

void BiomeTableConfig.init(identifier:useCase:tableName:schemaProvider:)(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = type metadata accessor for BiomeTableConfig.SchematizedBiomeLibraryConfig();
  swift_allocObject();
  uint64_t v13 = sub_259F3150C(a1, a2, a3, a4, a5);
  *(void *)(a6 + 24) = v12;
  *(void *)(a6 + 32) = &off_2707E1EB0;
  swift_release();
  *(void *)a6 = v13;

  *(unsigned char *)(a6 + 40) = 1;
}

uint64_t BiomeTableConfig.init(identifier:storeConfig:tableName:schemaProvider:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = type metadata accessor for BiomeTableConfig.PrivateBiomeStreamConfig();
  uint64_t result = swift_allocObject();
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = 0;
  *(unsigned char *)(result + 80) = 0;
  *(void *)(result + 16) = a3;
  *(void *)(result + 24) = a4;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = a2;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = a5;
  *(void *)(a6 + 24) = v12;
  *(void *)(a6 + 32) = &off_2707E1E78;
  *(void *)a6 = result;
  *(unsigned char *)(a6 + 40) = 2;
  return result;
}

uint64_t sub_259F3127C(void *a1, void *a2)
{
  v10[3] = *(id *)MEMORY[0x263EF8340];
  *(unsigned char *)(v2 + 32) = 0;
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  id v4 = a2;
  v10[0] = 0;
  id v5 = objc_msgSend((id)BiomeLibrary(), sel_streamWithIdentifier_error_, a1, v10);
  swift_unknownObjectRelease();
  id v6 = v10[0];
  if (v5)
  {
    *(void *)(v2 + 40) = v5;
    id v7 = v6;
    return v2;
  }
  else
  {
    id v9 = v10[0];
    sub_259F67E20();

    swift_willThrow();
    v10[0] = 0;
    v10[1] = (id)0xE000000000000000;
    sub_259F68960();
    sub_259F686F0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA248);
    sub_259F68A10();
    uint64_t result = sub_259F68A80();
    __break(1u);
  }
  return result;
}

uint64_t sub_259F31408(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A3FA550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for BiomeTableConfig.SchematizedBiomeLibraryConfig()
{
  return self;
}

uint64_t sub_259F31494(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A3FA550);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_259F314F4(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(_OWORD *)((char *)a2 + 25) = *(long long *)((char *)a1 + 25);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t sub_259F3150C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v14[3] = *(id *)MEMORY[0x263EF8340];
  *(unsigned char *)(v5 + 72) = 1;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 56) = a5;
  *(void *)(v5 + 64) = 0;
  id v7 = a2;
  id v8 = a1;
  swift_retain();
  v14[0] = 0;
  id v9 = objc_msgSend((id)BiomeLibrary(), sel_streamWithIdentifier_error_, v8, v14);
  swift_unknownObjectRelease();
  id v10 = v14[0];
  if (v9)
  {
    *(void *)(v5 + 48) = v9;
    id v11 = v10;
    return v5;
  }
  else
  {
    id v13 = v14[0];
    sub_259F67E20();

    swift_willThrow();
    v14[0] = 0;
    v14[1] = (id)0xE000000000000000;
    sub_259F68960();
    sub_259F686F0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA248);
    sub_259F68A10();
    uint64_t result = sub_259F68A80();
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for BiomeTableConfig.PrivateBiomeStreamConfig()
{
  return self;
}

uint64_t type metadata accessor for RawPayload()
{
  return self;
}

uint64_t method lookup function for RawPayload(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for RawPayload);
}

uint64_t destroy for BiomeTableConfig(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 2u) {
    return __swift_destroy_boxed_opaque_existential_1(a1);
  }
  return a1;
}

uint64_t initializeWithCopy for BiomeTableConfig(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 40);
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(unsigned char *)(a1 + 40) = v3;
  return a1;
}

uint64_t assignWithCopy for BiomeTableConfig(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_259F31808(a1);
    char v4 = *(unsigned char *)(a2 + 40);
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(unsigned char *)(a1 + 40) = v4;
  }
  return a1;
}

uint64_t sub_259F31808(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_OWORD *assignWithTake for BiomeTableConfig(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_259F31808((uint64_t)a1);
    long long v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for BiomeTableConfig(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BiomeTableConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BiomeTableConfig()
{
  return &type metadata for BiomeTableConfig;
}

uint64_t initializeWithCopy for BiomeTableConfig.Container(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 3) {
    LOBYTE(v3) = *(unsigned char *)a2 + 3;
  }
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(uint64_t))(v4 - 8))(a1);
  *(unsigned char *)(a1 + 40) = v3;
  return a1;
}

uint64_t assignWithCopy for BiomeTableConfig.Container(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    unsigned int v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 3) {
      LOBYTE(v4) = *(unsigned char *)a2 + 3;
    }
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(unsigned char *)(a1 + 40) = v4;
  }
  return a1;
}

uint64_t assignWithTake for BiomeTableConfig.Container(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    unsigned int v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 3) {
      LOBYTE(v4) = *(unsigned char *)a2 + 3;
    }
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = v4;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for BiomeTableConfig.Container(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BiomeTableConfig.Container(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_259F31B2C(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 3) {
    return (*(_DWORD *)a1 + 3);
  }
  return result;
}

uint64_t sub_259F31B48(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for BiomeTableConfig.Container()
{
  return &type metadata for BiomeTableConfig.Container;
}

uint64_t sub_259F31B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  uint64_t v7 = v6 & *(void *)(a3 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      v7 &= v7 - 1;
      goto LABEL_5;
    }
    int64_t v11 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    uint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v10;
    if (!v12)
    {
      int64_t v10 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      uint64_t v12 = *(void *)(v4 + 8 * v10);
      if (!v12)
      {
        int64_t v10 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        uint64_t v12 = *(void *)(v4 + 8 * v10);
        if (!v12)
        {
          int64_t v10 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          uint64_t v12 = *(void *)(v4 + 8 * v10);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v7 = (v12 - 1) & v12;
LABEL_5:
    sub_259F2BFE0();
    a1 = sub_259F688F0();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return a1;
  }
  uint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v10 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_23;
    }
    uint64_t v12 = *(void *)(v4 + 8 * v10);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_259F31D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a3 + 64);
  int64_t v13 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    int64_t v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v13) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v12 + 8 * v9);
    ++v8;
    if (!v10)
    {
      int64_t v8 = v9 + 1;
      if (v9 + 1 >= v13) {
        goto LABEL_23;
      }
      uint64_t v10 = *(void *)(v12 + 8 * v8);
      if (!v10)
      {
        int64_t v8 = v9 + 2;
        if (v9 + 2 >= v13) {
          goto LABEL_23;
        }
        uint64_t v10 = *(void *)(v12 + 8 * v8);
        if (!v10)
        {
          int64_t v8 = v9 + 3;
          if (v9 + 3 >= v13) {
            goto LABEL_23;
          }
          uint64_t v10 = *(void *)(v12 + 8 * v8);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v6 = (v10 - 1) & v10;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259F686F0();
    sub_259F686F0();
    sub_259F2BFE0();
    a1 = sub_259F688F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v13)
  {
LABEL_23:
    swift_release();
    return a1;
  }
  uint64_t v10 = *(void *)(v12 + 8 * v11);
  if (v10)
  {
    int64_t v8 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v8 >= v13) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v12 + 8 * v8);
    ++v11;
    if (v10) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *initializeBufferWithCopyOfBuffer for AggregationBlockError(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  id v4 = (id)(*a2 & 0x7FFFFFFFFFFFFFFFLL);
  *a1 = v3;
  return a1;
}

void destroy for AggregationBlockError(void *a1)
{
}

uint64_t *assignWithCopy for AggregationBlockError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  id v4 = (id)(*a2 & 0x7FFFFFFFFFFFFFFFLL);
  uint64_t v5 = *a1;
  *a1 = v3;

  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t *assignWithTake for AggregationBlockError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for AggregationBlockError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 6) | (2 * ((*(void *)a1 >> 57) & 0x38 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AggregationBlockError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)uint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_259F32170(void *a1)
{
  return *a1 >> 63;
}

void *sub_259F3217C(void *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_259F3218C(uint64_t *result, uint64_t a2)
{
  *uint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for AggregationBlockError()
{
  return &type metadata for AggregationBlockError;
}

void sub_259F321B0(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_259F321BC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  sub_259F13740(a1, (uint64_t)v18);
  v17[3] = &type metadata for AggregationBlockConfig;
  void v17[4] = sub_259F33318();
  int64_t v9 = (_OWORD *)swift_allocObject();
  v17[0] = v9;
  long long v10 = a4[1];
  v9[1] = *a4;
  _OWORD v9[2] = v10;
  void v9[3] = a4[2];
  swift_retain();
  uint64_t v11 = sub_259F4A630(v18, a2, a3, v17);
  if (v4)
  {
    v18[0] = v4;
    id v12 = v4;
    id v13 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA248);
    if (swift_dynamicCast())
    {
      swift_release();
    }
    else
    {

      sub_259F330F0();
      swift_allocError();
      *uint64_t v14 = v4;
      id v15 = v4;
      swift_willThrow();
      swift_release();
    }
  }
  else
  {
    swift_release();
  }
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v11;
}

uint64_t sub_259F32340(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_259F68810();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  long long v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_259F324F0(a1, a2, a3);
  if (v3)
  {
    unint64_t v16 = v3;
    id v11 = (id)v3;
    id v12 = (id)v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA248);
    if (swift_dynamicCast())
    {
    }
    else
    {
      unint64_t v16 = v3;
      if (swift_dynamicCast())
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      }
      else
      {
        sub_259F330F0();
        swift_allocError();
        *id v13 = v3 | 0x8000000000000000;
        swift_willThrow();
      }
    }
  }
  return 1;
}

uint64_t sub_259F324F0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  uint64_t v71 = a3;
  uint64_t v72 = a1;
  uint64_t v67 = a2;
  uint64_t v69 = sub_259F68810();
  uint64_t v60 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v68 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DatasetColumnDescription(0);
  uint64_t v66 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_259F68360();
  uint64_t v65 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unint64_t v16 = (char *)&v55 - v15;
  swift_bridgeObjectRetain();
  sub_259F68300();
  if (v4)
  {
    swift_bridgeObjectRelease();
    id v21 = v68;
    uint64_t v20 = v69;
    uint64_t v22 = v71;
    goto LABEL_4;
  }
  uint64_t v57 = v8;
  uint64_t v70 = v14;
  uint64_t v63 = v16;
  uint64_t v59 = v11;
  uint64_t v17 = v65;
  swift_bridgeObjectRelease();
  *(void *)&long long v73 = *v72;
  uint64_t v18 = *(void *)(v3 + 72);
  uint64_t v19 = *(void *)(v3 + 80);
  swift_bridgeObjectRetain();
  sub_259F2C214(v18, v19);
  swift_bridgeObjectRelease();
  char v29 = v70;
  sub_259F68350();
  uint64_t v62 = 0;
  uint64_t v30 = *(void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v65 = v17 + 8;
  BOOL v55 = v30;
  v30(v29, v59);
  swift_bridgeObjectRelease();
  uint64_t v64 = *(void *)(v6 + 32);
  uint64_t v70 = *(char **)(v6 + 40);
  uint64_t v22 = v71;
  uint64_t v58 = v71 + 16;
  uint64_t v31 = *(void *)(v6 + 64);
  uint64_t v61 = v31;
  int64_t v32 = (ValueMetadata *)v57;
  uint64_t v56 = v6;
  while (1)
  {
    int64_t v33 = *(void *)(v31 + 16);
    uint64_t v34 = v66;
    if (v33)
    {
      uint64_t v77 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_259F1C954(0, v33, 0);
      uint64_t v35 = v77;
      uint64_t v36 = v31 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
      uint64_t v37 = *(void *)(v34 + 72);
      do
      {
        sub_259F138BC(v36, (uint64_t)v10);
        uint64_t v77 = v35;
        unint64_t v39 = *(void *)(v35 + 16);
        unint64_t v38 = *(void *)(v35 + 24);
        if (v39 >= v38 >> 1)
        {
          sub_259F1C954(v38 > 1, v39 + 1, 1);
          uint64_t v35 = v77;
        }
        uint64_t v75 = v32;
        unint64_t v76 = sub_259F33410();
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v73);
        sub_259F138BC((uint64_t)v10, (uint64_t)boxed_opaque_existential_1);
        *(void *)(v35 + 16) = v39 + 1;
        sub_259F13728(&v73, v35 + 40 * v39 + 32);
        sub_259F26B8C((uint64_t)v10);
        v36 += v37;
        --v33;
      }
      while (v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v56;
      uint64_t v22 = v71;
    }
    else
    {
      uint64_t v35 = MEMORY[0x263F8EE78];
    }
    uint64_t v41 = *(void *)(v35 + 16);
    swift_bridgeObjectRelease();
    uint64_t v42 = v62;
    if (v41) {
      break;
    }
    uint64_t v47 = sub_259F68330();
    unint64_t v45 = v42;
    if (v42) {
      goto LABEL_31;
    }
    uint64_t v46 = v47;
    if (!v47)
    {
LABEL_29:
      v55(v63, v59);
      goto LABEL_9;
    }
LABEL_24:
    sub_259F68820();
    uint64_t v62 = 0;
    uint64_t ObjectType = swift_getObjectType();
    *(void *)&long long v73 = v64;
    *((void *)&v73 + 1) = v70;
    uint64_t v74 = v46;
    uint64_t v49 = *(void (**)(long long *, uint64_t, uint64_t))(v22 + 16);
    swift_bridgeObjectRetain();
    v49(&v73, ObjectType, v22);
    uint64_t v50 = (void *)*v72;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v50 = sub_259F2E644(0, v50[2] + 1, 1, v50);
    }
    unint64_t v52 = v50[2];
    unint64_t v51 = v50[3];
    if (v52 >= v51 >> 1) {
      uint64_t v50 = sub_259F2E644((void *)(v51 > 1), v52 + 1, 1, v50);
    }
    v50[2] = v52 + 1;
    uint64_t v53 = &v50[3 * v52];
    unint64_t v54 = v70;
    v53[4] = v64;
    v53[5] = v54;
    v53[6] = v46;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    void *v72 = v50;
    uint64_t v31 = v61;
  }
  uint64_t v75 = &type metadata for DatasetColumnLayout;
  unint64_t v43 = sub_259F334CC();
  *(void *)&long long v73 = v64;
  *((void *)&v73 + 1) = v70;
  unint64_t v76 = v43;
  uint64_t v74 = v61;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_259F68320();
  unint64_t v45 = v42;
  if (!v42)
  {
    uint64_t v46 = v44;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
    if (!v46) {
      goto LABEL_29;
    }
    goto LABEL_24;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
LABEL_31:
  uint64_t v5 = v45;
  v55(v63, v59);
  id v21 = v68;
  uint64_t v20 = v69;
LABEL_4:
  if (*(unsigned char *)(v6 + 88) == 1)
  {
    *(void *)&long long v73 = v5;
    id v23 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA248);
    if (swift_dynamicCast())
    {
      (*(void (**)(char *, uint64_t))(v60 + 8))(v21, v20);
    }
    else
    {
      uint64_t v24 = swift_getObjectType();
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v6;
      *(void *)(v25 + 24) = v5;
      long long v26 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v22 + 8);
      id v27 = v5;
      swift_retain();
      v26(sub_259F333F4, v25, v24, v22);
      swift_release();

LABEL_9:
      *(unsigned char *)(v6 + 16) = 1;
    }
  }
  return 1;
}

uint64_t sub_259F32C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_259F68690();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA4F0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_259F6BA00;
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  _OWORD v17[2] = 0;
  v17[3] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_259F68960();
  sub_259F686F0();
  void v17[5] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA248);
  sub_259F68A10();
  sub_259F68680();
  uint64_t v11 = sub_259F68660();
  unint64_t v13 = v12;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v13 >> 60 == 15) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = v11;
  }
  unint64_t v15 = 0xC000000000000000;
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v10;
  *(unsigned char *)(v8 + 48) = 3;
  if (v13 >> 60 != 15) {
    unint64_t v15 = v13;
  }
  *(void *)(v8 + 56) = v14;
  *(void *)(v8 + 64) = v15;
  return v8;
}

uint64_t sub_259F32E54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_259F32EAC(a1, a2, sub_259F31D80, a3);
}

uint64_t sub_259F32E80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_259F32EAC(a1, a2, sub_259F31B90, a3);
}

uint64_t sub_259F32EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7 = v5;
  uint64_t v8 = v4;
  uint64_t v11 = *(void *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 40);
  if (*(void *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_259F17068(v11, v12);
    if (v14)
    {
      unint64_t v15 = (uint64_t *)(*(void *)(a2 + 56) + 16 * v13);
      uint64_t v11 = *v15;
      uint64_t v16 = v15[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v12 = v16;
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
LABEL_6:
  sub_259F13740(a1, (uint64_t)v38);
  uint64_t v17 = *(void *)(v8 + 56);
  uint64_t v18 = *(void *)(v17 + 32);
  uint64_t v19 = *(void *)(v17 + 40);
  swift_bridgeObjectRetain();
  uint64_t v20 = v18;
  uint64_t v21 = v7;
  uint64_t v22 = a3(v20, v19, a2);
  uint64_t v24 = v23;
  uint64_t v25 = v21;
  swift_bridgeObjectRelease();
  type metadata accessor for Query();
  uint64_t v26 = swift_allocObject();
  *(unsigned char *)(v26 + 48) = 0;
  *(void *)(v26 + 16) = v11;
  *(void *)(v26 + 24) = v12;
  *(void *)(v26 + 32) = v22;
  *(void *)(v26 + 40) = v24;
  uint64_t v27 = *(void *)(v8 + 48);
  uint64_t v28 = *(void *)(v8 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v29 = v28;
  uint64_t v30 = v25;
  uint64_t v31 = sub_259F33144(v29, a2);
  swift_bridgeObjectRelease();
  char v32 = *(unsigned char *)(v8 + 88);
  uint64_t v33 = *(void *)(v8 + 72);
  uint64_t v34 = *(void *)(v8 + 80);
  *(void *)&long long v39 = v11;
  *((void *)&v39 + 1) = v12;
  uint64_t v40 = v31;
  char v41 = v32;
  uint64_t v42 = v33;
  uint64_t v43 = v34;
  uint64_t v35 = type metadata accessor for AggregationBlock();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t result = sub_259F321BC((uint64_t)v38, v26, v27, &v39);
  if (!v30)
  {
    a4[3] = v35;
    a4[4] = (uint64_t)&off_2707E3708;
    *a4 = result;
  }
  return result;
}

uint64_t sub_259F33074()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 89, 7);
}

uint64_t type metadata accessor for AggregationBlock()
{
  return self;
}

unint64_t sub_259F330F0()
{
  unint64_t result = qword_26A3FA5C0;
  if (!qword_26A3FA5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA5C0);
  }
  return result;
}

uint64_t sub_259F33144(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DatasetColumnDescription(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (v9)
  {
    uint64_t v22 = v2;
    uint64_t v24 = MEMORY[0x263F8EE78];
    sub_259F1C918(0, v9, 0);
    uint64_t v10 = v24;
    unint64_t v23 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v11 = a1 + v23;
    uint64_t v12 = *(void *)(v6 + 72);
    do
    {
      sub_259F138BC(v11, (uint64_t)v8);
      uint64_t v13 = *v8;
      uint64_t v14 = v8[1];
      if (*(void *)(a2 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v15 = sub_259F17068(v13, v14);
        uint64_t v16 = v14;
        if (v17)
        {
          uint64_t v18 = (uint64_t *)(*(void *)(a2 + 56) + 16 * v15);
          uint64_t v13 = *v18;
          uint64_t v16 = v18[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v14 = v16;
      }
      *uint64_t v8 = v13;
      v8[1] = v14;
      uint64_t v24 = v10;
      unint64_t v20 = *(void *)(v10 + 16);
      unint64_t v19 = *(void *)(v10 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_259F1C918(v19 > 1, v20 + 1, 1);
        uint64_t v10 = v24;
      }
      *(void *)(v10 + 16) = v20 + 1;
      sub_259F1E52C((uint64_t)v8, v10 + v23 + v20 * v12);
      v11 += v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

unint64_t sub_259F33318()
{
  unint64_t result = qword_26A3FA5C8;
  if (!qword_26A3FA5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA5C8);
  }
  return result;
}

uint64_t sub_259F3336C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_259F333B4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_259F333F4()
{
  return sub_259F32C7C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_259F33410()
{
  unint64_t result = qword_26A3FA5D0;
  if (!qword_26A3FA5D0)
  {
    type metadata accessor for DatasetColumnDescription(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA5D0);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  id v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_259F334CC()
{
  unint64_t result = qword_26A3FA5D8;
  if (!qword_26A3FA5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA5D8);
  }
  return result;
}

uint64_t sub_259F33524()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA5F8);
  __swift_allocate_value_buffer(v0, qword_26A3FA5E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A3FA5E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA608);
  return sub_259F68550();
}

uint64_t static Template.tokenRegex.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26A3F9E50 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA5F8);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26A3FA5E0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t static Template.extractTokens(from:)(uint64_t a1, uint64_t a2)
{
  return sub_259F339B0(a1, a2, (uint64_t)&unk_259F6C498);
}

unint64_t sub_259F3365C()
{
  unint64_t result = qword_26A3FA610;
  if (!qword_26A3FA610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA610);
  }
  return result;
}

unint64_t sub_259F336B0()
{
  unint64_t result = qword_26A3FA618;
  if (!qword_26A3FA618)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A3FA5F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA618);
  }
  return result;
}

uint64_t static Template.extractTokenName(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA600);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA620);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v17 - v12;
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  if (qword_26A3F9E50 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA5F8);
  __swift_project_value_buffer(v14, (uint64_t)qword_26A3FA5E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA608);
  sub_259F3365C();
  sub_259F336B0();
  sub_259F685D0();
  sub_259F34A58((uint64_t)v13, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
  {
    uint64_t v15 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
    swift_getKeyPath();
    sub_259F68560();
    swift_release();
    uint64_t v15 = MEMORY[0x25A2EFCD0](v17, v18, v19, v20);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_259F34AC0((uint64_t)v13);
  return v15;
}

uint64_t static Template.extractTokenNames(from:)(uint64_t a1, uint64_t a2)
{
  return sub_259F339B0(a1, a2, (uint64_t)&unk_259F6C4B8);
}

uint64_t sub_259F339B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = a3;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA600);
  uint64_t v5 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = (void *)a1;
  uint64_t v34 = a2;
  if (qword_26A3F9E50 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA5F8);
  __swift_project_value_buffer(v8, (uint64_t)qword_26A3FA5E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA608);
  sub_259F3365C();
  sub_259F336B0();
  uint64_t v9 = sub_259F685E0();
  int64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v37 = MEMORY[0x263F8EE78];
    sub_259F1C984(0, v10, 0);
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v27 = v9;
    uint64_t v14 = v9 + ((v13 + 32) & ~v13);
    uint64_t v28 = *(void *)(v11 + 56);
    uint64_t v29 = v12;
    uint64_t v30 = v11;
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v16 = v37;
    do
    {
      uint64_t v17 = v31;
      v29(v7, v14, v31);
      swift_getKeyPath();
      sub_259F68560();
      swift_release();
      uint64_t v18 = MEMORY[0x25A2EFCD0](v33, v34, v35, v36);
      uint64_t v20 = v19;
      swift_bridgeObjectRelease();
      (*v15)(v7, v17);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_259F1C984(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v37;
      }
      unint64_t v22 = *(void *)(v16 + 16);
      unint64_t v21 = *(void *)(v16 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_259F1C984(v21 > 1, v22 + 1, 1);
        uint64_t v16 = v37;
      }
      *(void *)(v16 + 16) = v22 + 1;
      uint64_t v23 = v16 + 16 * v22;
      *(void *)(v23 + 32) = v18;
      *(void *)(v23 + 40) = v20;
      v14 += v28;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = MEMORY[0x263F8EE78];
  }
  sub_259F26A9C(v16);
  swift_bridgeObjectRelease();
  uint64_t v24 = swift_bridgeObjectRetain();
  uint64_t v25 = sub_259F33EA4(v24);
  swift_bridgeObjectRelease();
  uint64_t v33 = v25;
  sub_259F33CE0((uint64_t *)&v33);
  swift_bridgeObjectRelease();
  uint64_t result = (uint64_t)v33;
  if (!v33[2])
  {
    swift_release();
    return 0;
  }
  return result;
}

uint64_t sub_259F33CE0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_259F1D918(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_259F1B518(v5);
  *a1 = v2;
  return result;
}

size_t sub_259F33D50(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA2A8);
  uint64_t v3 = *(void *)(type metadata accessor for DatasetColumnDescription(0) - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      _OWORD v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      uint64_t v9 = sub_259F3416C(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_259F1E4B8();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_259F33EA4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA260);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_259F34658((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_259F1E4B8();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_259F33F8C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA260);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_259F34858((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_259F1E4B8();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_259F34074(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA278);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  uint64_t v5 = sub_259F34438(&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_259F1E4B8();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_259F3416C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DatasetColumnDescription(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v35 = a4;
  uint64_t v18 = *(void *)(a4 + 64);
  uint64_t v17 = a4 + 64;
  uint64_t v16 = v18;
  uint64_t v19 = -1 << *(unsigned char *)(v17 - 32);
  if (-v19 < 64) {
    uint64_t v20 = ~(-1 << -(char)v19);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v16;
  if (!a2)
  {
    int64_t v22 = 0;
    a3 = 0;
LABEL_38:
    *a1 = v35;
    a1[1] = v17;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    int64_t v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v32 = -1 << *(unsigned char *)(v17 - 32);
  uint64_t v33 = a1;
  int64_t v22 = 0;
  uint64_t v23 = 0;
  int64_t v34 = (unint64_t)(63 - v19) >> 6;
  int64_t v31 = v34 - 1;
  if (!v21) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  unint64_t v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    uint64_t v29 = *(void *)(v9 + 72);
    sub_259F138BC(*(void *)(v35 + 56) + v29 * v25, (uint64_t)v12);
    sub_259F1E52C((uint64_t)v12, (uint64_t)v15);
    uint64_t result = sub_259F1E52C((uint64_t)v15, a2);
    if (v23 == a3) {
      goto LABEL_37;
    }
    a2 += v29;
    if (v21) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v34) {
      goto LABEL_32;
    }
    unint64_t v27 = *(void *)(v17 + 8 * v26);
    if (!v27) {
      break;
    }
LABEL_18:
    unint64_t v21 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v34)
  {
    unint64_t v21 = 0;
    int64_t v22 = v26;
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v17 + 8 * v22);
  if (v27) {
    goto LABEL_14;
  }
  int64_t v28 = v26 + 2;
  if (v26 + 2 >= v34) {
    goto LABEL_32;
  }
  unint64_t v27 = *(void *)(v17 + 8 * v28);
  if (v27) {
    goto LABEL_17;
  }
  int64_t v22 = v26 + 3;
  if (v26 + 3 >= v34)
  {
    unint64_t v21 = 0;
    int64_t v22 = v26 + 2;
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v17 + 8 * v22);
  if (v27)
  {
LABEL_14:
    int64_t v26 = v22;
    goto LABEL_18;
  }
  int64_t v28 = v26 + 4;
  if (v26 + 4 >= v34)
  {
LABEL_32:
    unint64_t v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    uint64_t v19 = v32;
    a1 = v33;
    goto LABEL_38;
  }
  unint64_t v27 = *(void *)(v17 + 8 * v28);
  if (v27)
  {
LABEL_17:
    int64_t v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v34)
    {
      unint64_t v21 = 0;
      int64_t v22 = v31;
      goto LABEL_36;
    }
    unint64_t v27 = *(void *)(v17 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_259F34438(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v22 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v23 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    uint64_t v19 = (void *)(*(void *)(a4 + 56) + 24 * v15);
    uint64_t v20 = v19[1];
    uint64_t v21 = v19[2];
    *uint64_t v10 = *v19;
    v10[1] = v20;
    void v10[2] = v21;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 3;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        unint64_t v8 = 0;
        int64_t v11 = v16;
      }
      else
      {
        unint64_t v17 = *(void *)(v5 + 8 * v11);
        if (v17) {
          goto LABEL_14;
        }
        int64_t v18 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          int64_t v16 = v18;
          goto LABEL_18;
        }
        int64_t v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          unint64_t v17 = *(void *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            int64_t v16 = v11;
            goto LABEL_18;
          }
          int64_t v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v17 = *(void *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              int64_t v16 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_42;
              }
              if (v16 >= v13)
              {
                unint64_t v8 = 0;
                int64_t v11 = v13 - 1;
                goto LABEL_37;
              }
              unint64_t v17 = *(void *)(v5 + 8 * v16);
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v16 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v22;
      uint64_t result = v23;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_259F34658(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *int64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_259F34858(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *int64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_259F34A58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA620);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_259F34AC0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA620);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for Template()
{
  return &type metadata for Template;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_259F34B94()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA628);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_259F68A60();
  __swift_allocate_value_buffer(v3, qword_26A4016C8);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_26A4016C8);
  sub_259F68A50();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  }
  __break(1u);
  return result;
}

uint64_t sub_259F34CCC()
{
  sub_259F17838(v0 + 16, &qword_26A3FA498);
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 72, 7);
}

uint64_t type metadata accessor for CodingContext()
{
  return self;
}

double sub_259F34D38@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = sub_259F34DB0(a1, a2, MEMORY[0x263F8E9D0]);
  if (v4)
  {
    sub_259F2C034(v4 + 16, a3);
    swift_release();
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_259F34DB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6 = sub_259F68A60();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a3(a1, a2);
  if (qword_26A3F9E58 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v6, (uint64_t)qword_26A4016C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  if (*(void *)(v10 + 16) && (unint64_t v12 = sub_259F17350((uint64_t)v9), (v13 & 1) != 0))
  {
    sub_259F1E590(*(void *)(v10 + 56) + 32 * v12, (uint64_t)&v16);
  }
  else
  {
    long long v16 = 0u;
    long long v17 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (*((void *)&v17 + 1))
  {
    type metadata accessor for CodingContext();
    if (swift_dynamicCast()) {
      return v15[1];
    }
  }
  else
  {
    sub_259F17838((uint64_t)&v16, &qword_26A3FA4C0);
  }
  return 0;
}

uint64_t sub_259F34F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_259F34DB0(a3, a4, MEMORY[0x263F8E9F0]);
  if (result)
  {
    *(void *)(result + 56) = a1;
    *(void *)(result + 64) = a2;
    swift_bridgeObjectRetain();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t dispatch thunk of BlockLogHandling.handleLogCollector(_:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t sub_259F35038(void (*a1)(long long *__return_ptr, uint64_t *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_259F1C8E8(0, v5, 0);
    uint64_t v6 = v16;
    for (uint64_t i = (uint64_t *)(a3 + 32); ; ++i)
    {
      uint64_t v14 = *i;
      swift_bridgeObjectRetain();
      a1(v15, &v14, &v13);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      uint64_t v16 = v6;
      unint64_t v11 = *(void *)(v6 + 16);
      unint64_t v10 = *(void *)(v6 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_259F1C8E8(v10 > 1, v11 + 1, 1);
        uint64_t v6 = v16;
      }
      *(void *)(v6 + 16) = v11 + 1;
      sub_259F13728(v15, v6 + 40 * v11 + 32);
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_259F35170(void (*a1)(void *__return_ptr, void *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v28 = MEMORY[0x263F8EE78];
    sub_259F1C9A4(0, v5, 0);
    uint64_t v6 = v28;
    uint64_t v8 = (unsigned char *)(a3 + 56);
    while (1)
    {
      uint64_t v9 = *((void *)v8 - 2);
      uint64_t v10 = *((void *)v8 - 1);
      char v11 = *v8;
      v23[0] = *((void *)v8 - 3);
      v23[1] = v9;
      v23[2] = v10;
      char v24 = v11;
      swift_bridgeObjectRetain();
      a1(v25, v23, &v22);
      if (v4) {
        break;
      }
      swift_bridgeObjectRelease();
      uint64_t v13 = v25[0];
      uint64_t v12 = v25[1];
      long long v14 = v26;
      char v15 = v27;
      uint64_t v28 = v6;
      unint64_t v17 = *(void *)(v6 + 16);
      unint64_t v16 = *(void *)(v6 + 24);
      if (v17 >= v16 >> 1)
      {
        long long v20 = v26;
        sub_259F1C9A4(v16 > 1, v17 + 1, 1);
        long long v14 = v20;
        uint64_t v6 = v28;
      }
      *(void *)(v6 + 16) = v17 + 1;
      uint64_t v18 = v6 + 40 * v17;
      *(void *)(v18 + 32) = v13;
      *(void *)(v18 + 40) = v12;
      *(_OWORD *)(v18 + 48) = v14;
      *(unsigned char *)(v18 + 64) = v15;
      v8 += 32;
      --v5;
      uint64_t v4 = 0;
      if (!v5) {
        return v6;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_259F352CC(void (*a1)(uint64_t *__return_ptr, char *, void *), uint64_t a2)
{
  void (*v28)(uint64_t *__return_ptr, char *, void *);
  uint64_t v29;
  long long v30;
  void v31[4];
  uint64_t v32;
  long long v33;
  uint64_t v34;

  uint64_t v4 = v3;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t v5 = sub_259F68100();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v27 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_259F68120();
  unint64_t v9 = sub_259F36FB0();
  uint64_t v10 = sub_259F68850();
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (!v10) {
    return v11;
  }
  uint64_t v12 = v10;
  int64_t v34 = MEMORY[0x263F8EE78];
  sub_259F1C8C8(0, v10 & ~(v10 >> 63), 0);
  uint64_t result = sub_259F68840();
  if ((v12 & 0x8000000000000000) == 0)
  {
    unint64_t v25 = (void (**)(char *, uint64_t))(v6 + 8);
    long long v26 = (void (**)(char *))(v6 + 16);
    uint64_t v23 = v5;
    uint64_t v24 = v2;
    while (1)
    {
      long long v14 = (void (*)(void *, void))sub_259F68870();
      char v15 = v27;
      (*v26)(v27);
      v14(v31, 0);
      v28(&v32, v15, v31);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      unint64_t v16 = v9;
      uint64_t v17 = v8;
      (*v25)(v15, v5);
      uint64_t v18 = v32;
      uint64_t v30 = v33;
      uint64_t v11 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_259F1C8C8(0, *(void *)(v11 + 16) + 1, 1);
        uint64_t v11 = v34;
      }
      unint64_t v20 = *(void *)(v11 + 16);
      unint64_t v19 = *(void *)(v11 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_259F1C8C8(v19 > 1, v20 + 1, 1);
        uint64_t v11 = v34;
      }
      *(void *)(v11 + 16) = v20 + 1;
      uint64_t v21 = v11 + 24 * v20;
      *(void *)(v21 + 32) = v18;
      *(_OWORD *)(v21 + 40) = v30;
      uint64_t v8 = v17;
      unint64_t v9 = v16;
      sub_259F68860();
      --v12;
      uint64_t v5 = v23;
      if (!v12) {
        return v11;
      }
    }
    (*v25)(v15, v5);
    swift_release();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_259F3558C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(void *)(a3 + 8) = a2;
  *(void *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 24) = 1;
  return result;
}

uint64_t sub_259F355A0()
{
  return *(void *)(v0 + 16);
}

void sub_259F355AC(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  *(void *)(a1 + 16) = 0;
}

uint64_t sub_259F355BC(uint64_t a1)
{
  unint64_t v2 = sub_259F36910();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_259F355F8(uint64_t a1)
{
  unint64_t v2 = sub_259F36910();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AnyCodable.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA630);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA638);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F36910();
  sub_259F68DF0();
  if (v2)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    sub_259F17838((uint64_t)v6, &qword_26A3FA630);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_259F68DD0();
    sub_259F13728(&v25, (uint64_t)v27);
    __swift_project_boxed_opaque_existential_1(v27, v28);
    char v13 = sub_259F68C40();
    long long v14 = (void *)MEMORY[0x263F8EE78];
    if ((v13 & 1) == 0)
    {
      do
      {
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v28);
        sub_259F369B4();
        sub_259F68C30();
        long long v17 = v25;
        char v18 = v26;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v14 = sub_259F2E8A4(0, v14[2] + 1, 1, v14);
        }
        unint64_t v20 = v14[2];
        unint64_t v19 = v14[3];
        if (v20 >= v19 >> 1) {
          long long v14 = sub_259F2E8A4((void *)(v19 > 1), v20 + 1, 1, v14);
        }
        v14[2] = v20 + 1;
        uint64_t v21 = &v14[3 * v20];
        *((_OWORD *)v21 + 2) = v17;
        *((unsigned char *)v21 + 48) = v18;
        __swift_project_boxed_opaque_existential_1(v27, v28);
      }
      while ((sub_259F68C40() & 1) == 0);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    char v15 = 1;
  }
  else
  {
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    uint64_t v11 = sub_259F68B70();
    MEMORY[0x270FA5388](v11);
    *((void *)&v25 - 2) = v10;
    uint64_t v12 = sub_259F35170((void (*)(void *__return_ptr, void *, uint64_t *))sub_259F36A08, (uint64_t)(&v25 - 2), v11);
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA368);
      uint64_t v16 = sub_259F68AB0();
    }
    else
    {
      uint64_t v16 = MEMORY[0x263F8EE80];
    }
    v27[0] = v16;
    uint64_t v22 = swift_bridgeObjectRetain();
    sub_259F36260(v22, 1, v27);
    swift_bridgeObjectRelease();
    long long v14 = (void *)v27[0];
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    char v15 = 0;
  }
  uint64_t v23 = v29;
  *uint64_t v29 = v14;
  v23[1] = 0;
  *((unsigned char *)v23 + 16) = v15;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_259F35C30@<X0>(void *a1@<X0>, void *a2@<X2>, void *a3@<X8>)
{
  uint64_t v5 = a1[1];
  *a3 = *a1;
  a3[1] = v5;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA638);
  sub_259F369B4();
  uint64_t result = sub_259F68B60();
  if (v3)
  {
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = v3;
  }
  return result;
}

uint64_t AnyCodable.encode(to:)(void *a1)
{
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA658);
  uint64_t v4 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v32 = (uint64_t)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)v1;
  uint64_t v7 = *(void *)(v1 + 8);
  uint64_t v8 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v30 = *(void *)v1;
  switch(v8)
  {
    case 1:
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_259F68E00();
      uint64_t v23 = *(void *)(v6 + 16);
      if (!v23) {
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
      }
      uint64_t v32 = v7;
      swift_bridgeObjectRetain();
      uint64_t v24 = (unsigned __int8 *)(v6 + 48);
      break;
    case 2:
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_259F68E10();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, v37);
      sub_259F68CD0();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    case 3:
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_259F68E10();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, v37);
      sub_259F68D10();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    case 4:
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_259F68E10();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, v37);
      sub_259F68CF0();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    case 5:
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_259F68E10();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, v37);
      sub_259F68CE0();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    default:
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_259F36910();
      sub_259F68E20();
      uint64_t v9 = swift_bridgeObjectRetain();
      v36[0] = (uint64_t)sub_259F33D4C(v9);
      sub_259F33CE0(v36);
      if (v2)
      {
        swift_release();
        __break(1u);
        JUMPOUT(0x259F36214);
      }
      sub_259F26A80(v6, v7, 0);
      uint64_t v10 = v36[0];
      uint64_t v11 = *(void *)(v36[0] + 16);
      if (v11)
      {
        uint64_t v29 = v4;
        swift_retain();
        v28[1] = v10;
        uint64_t v12 = (uint64_t *)(v10 + 40);
        do
        {
          uint64_t v14 = *(v12 - 1);
          uint64_t v13 = *v12;
          uint64_t v15 = *(void *)(v6 + 16);
          swift_bridgeObjectRetain_n();
          if (v15)
          {
            swift_bridgeObjectRetain();
            unint64_t v16 = sub_259F17068(v14, v13);
            if (v17)
            {
              uint64_t v18 = *(void *)(v6 + 56) + 24 * v16;
              uint64_t v19 = *(void *)v18;
              uint64_t v20 = *(void *)(v18 + 8);
              unsigned __int8 v21 = *(unsigned char *)(v18 + 16);
              sub_259F1E5FC(*(void *)v18, v20, v21);
            }
            else
            {
              uint64_t v19 = 0;
              uint64_t v20 = 0;
              unsigned __int8 v21 = -1;
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v19 = 0;
            uint64_t v20 = 0;
            unsigned __int8 v21 = -1;
          }
          uint64_t v33 = v19;
          uint64_t v34 = v20;
          unsigned __int8 v35 = v21;
          v36[0] = v14;
          v36[1] = v13;
          long long v36[2] = 0;
          LOBYTE(v37) = 1;
          sub_259F36A28();
          sub_259F68BA0();
          sub_259F36A7C(v19, v20, v21);
          v12 += 2;
          swift_bridgeObjectRelease_n();
          --v11;
          uint64_t v6 = v30;
        }
        while (v11);
        swift_release();
        uint64_t v4 = v29;
      }
      swift_release();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v32, v31);
  }
  while (1)
  {
    uint64_t v26 = *((void *)v24 - 1);
    unsigned __int8 v27 = *v24;
    uint64_t v33 = *((void *)v24 - 2);
    uint64_t v25 = v33;
    uint64_t v34 = v26;
    unsigned __int8 v35 = v27;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, v37);
    sub_259F1E5FC(v25, v26, v27);
    sub_259F36A28();
    sub_259F68C50();
    if (v2) {
      break;
    }
    v24 += 24;
    sub_259F26A80(v25, v26, v27);
    if (!--v23) {
      goto LABEL_25;
    }
  }
  sub_259F26A80(v25, v26, v27);
LABEL_25:
  sub_259F26A80(v30, v32, 1u);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
}

uint64_t sub_259F3622C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return AnyCodable.init(from:)(a1, a2);
}

uint64_t sub_259F36244(void *a1)
{
  return AnyCodable.encode(to:)(a1);
}

void sub_259F36260(uint64_t a1, char a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v46 = v5;
  if (v5)
  {
    if (!*(void *)(a1 + 16))
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    unsigned __int8 v6 = *(unsigned char *)(a1 + 64);
    uint64_t v8 = *(void *)(a1 + 48);
    uint64_t v7 = *(void *)(a1 + 56);
    uint64_t v9 = *(void *)(a1 + 32);
    uint64_t v10 = *(void *)(a1 + 40);
    swift_bridgeObjectRetain();
    unsigned __int8 v47 = v6;
    sub_259F1E5FC(v8, v7, v6);
    if (v10)
    {
      uint64_t v11 = (void *)*a3;
      unint64_t v13 = sub_259F17068(v9, v10);
      uint64_t v14 = v11[2];
      BOOL v15 = (v12 & 1) == 0;
      uint64_t v16 = v14 + v15;
      if (__OFADD__(v14, v15))
      {
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      char v17 = v12;
      if (v11[3] >= v16)
      {
        if (a2)
        {
          if ((v12 & 1) == 0) {
            goto LABEL_14;
          }
        }
        else
        {
          sub_259F258EC();
          if ((v17 & 1) == 0) {
            goto LABEL_14;
          }
        }
      }
      else
      {
        sub_259F1947C(v16, a2 & 1);
        unint64_t v18 = sub_259F17068(v9, v10);
        if ((v17 & 1) != (v19 & 1))
        {
LABEL_30:
          sub_259F68D30();
          __break(1u);
LABEL_31:
          sub_259F68960();
          sub_259F686F0();
          sub_259F68A10();
          sub_259F686F0();
          sub_259F68A80();
          __break(1u);
          return;
        }
        unint64_t v13 = v18;
        if ((v17 & 1) == 0)
        {
LABEL_14:
          uint64_t v22 = (void *)*a3;
          *(void *)(*a3 + 8 * (v13 >> 6) + 64) |= 1 << v13;
          uint64_t v23 = (uint64_t *)(v22[6] + 16 * v13);
          *uint64_t v23 = v9;
          v23[1] = v10;
          uint64_t v24 = v22[7] + 24 * v13;
          *(void *)uint64_t v24 = v8;
          *(void *)(v24 + 8) = v7;
          *(unsigned char *)(v24 + 16) = v6;
          uint64_t v25 = v22[2];
          BOOL v26 = __OFADD__(v25, 1);
          uint64_t v27 = v25 + 1;
          if (v26)
          {
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
          v22[2] = v27;
          if (v46 != 1)
          {
            uint64_t v28 = (unsigned __int8 *)(a1 + 104);
            unint64_t v29 = 1;
            while (v29 < *(void *)(a1 + 16))
            {
              unsigned __int8 v30 = *v28;
              uint64_t v8 = *((void *)v28 - 2);
              uint64_t v7 = *((void *)v28 - 1);
              uint64_t v32 = *((void *)v28 - 4);
              uint64_t v31 = *((void *)v28 - 3);
              swift_bridgeObjectRetain();
              unsigned __int8 v47 = v30;
              sub_259F1E5FC(v8, v7, v30);
              if (!v31) {
                goto LABEL_25;
              }
              uint64_t v33 = (void *)*a3;
              unint64_t v34 = sub_259F17068(v32, v31);
              uint64_t v36 = v33[2];
              BOOL v37 = (v35 & 1) == 0;
              BOOL v26 = __OFADD__(v36, v37);
              uint64_t v38 = v36 + v37;
              if (v26) {
                goto LABEL_28;
              }
              char v39 = v35;
              if (v33[3] < v38)
              {
                sub_259F1947C(v38, 1);
                unint64_t v34 = sub_259F17068(v32, v31);
                if ((v39 & 1) != (v40 & 1)) {
                  goto LABEL_30;
                }
              }
              if (v39) {
                goto LABEL_11;
              }
              char v41 = (void *)*a3;
              *(void *)(*a3 + 8 * (v34 >> 6) + 64) |= 1 << v34;
              uint64_t v42 = (uint64_t *)(v41[6] + 16 * v34);
              *uint64_t v42 = v32;
              v42[1] = v31;
              uint64_t v43 = v41[7] + 24 * v34;
              *(void *)uint64_t v43 = v8;
              *(void *)(v43 + 8) = v7;
              *(unsigned char *)(v43 + 16) = v30;
              uint64_t v44 = v41[2];
              BOOL v26 = __OFADD__(v44, 1);
              uint64_t v45 = v44 + 1;
              if (v26) {
                goto LABEL_29;
              }
              ++v29;
              void v41[2] = v45;
              v28 += 40;
              if (v46 == v29) {
                goto LABEL_25;
              }
            }
            goto LABEL_27;
          }
          goto LABEL_25;
        }
      }
LABEL_11:
      uint64_t v20 = (void *)swift_allocError();
      swift_willThrow();
      id v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA248);
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_259F26A80(v8, v7, v47);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return;
      }
      goto LABEL_31;
    }
  }
LABEL_25:
  swift_bridgeObjectRelease_n();
}

uint64_t _s12PoirotBlocks10AnyCodableO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *(uint64_t *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  switch(v4)
  {
    case 1u:
      if (v7 != 1) {
        goto LABEL_14;
      }
      sub_259F1E5FC(*(void *)a2, *(void *)(a2 + 8), 1u);
      sub_259F1E5FC(v2, v3, 1u);
      char v8 = sub_259F2DB5C(v2, v5);
      sub_259F26A80(v2, v3, 1u);
      sub_259F26A80(v5, v6, 1u);
      break;
    case 2u:
      if (v7 != 2) {
        goto LABEL_14;
      }
      if (v2 == v5 && v3 == v6) {
        char v8 = 1;
      }
      else {
        char v8 = sub_259F68C70();
      }
      sub_259F1E5FC(v5, v6, 2u);
      sub_259F1E5FC(v2, v3, 2u);
      sub_259F26A80(v2, v3, 2u);
      sub_259F26A80(v5, v6, 2u);
      break;
    case 3u:
      if (v7 != 3) {
        goto LABEL_19;
      }
      sub_259F26A80(*(void *)a1, v3, 3u);
      sub_259F26A80(v5, v6, 3u);
      char v8 = v2 == v5;
      break;
    case 4u:
      if (v7 != 4) {
        goto LABEL_19;
      }
      sub_259F26A80(*(void *)a1, v3, 4u);
      sub_259F26A80(v5, v6, 4u);
      char v8 = *(double *)&v2 == *(double *)&v5;
      break;
    case 5u:
      if (v7 != 5) {
        goto LABEL_19;
      }
      sub_259F26A80(*(void *)a1, v3, 5u);
      sub_259F26A80(v5, v6, 5u);
      char v8 = ((v2 & 1) == 0) ^ v5;
      break;
    default:
      if (*(unsigned char *)(a2 + 16))
      {
LABEL_14:
        swift_bridgeObjectRetain();
LABEL_19:
        sub_259F1E5FC(v5, v6, v7);
        sub_259F26A80(v2, v3, v4);
        sub_259F26A80(v5, v6, v7);
        char v8 = 0;
      }
      else
      {
        sub_259F1E5FC(*(void *)a2, *(void *)(a2 + 8), 0);
        sub_259F1E5FC(v2, v3, 0);
        char v8 = sub_259F22BBC(v2, v5);
        sub_259F26A80(v2, v3, 0);
        sub_259F26A80(v5, v6, 0);
      }
      break;
  }
  return v8 & 1;
}

unint64_t sub_259F36910()
{
  unint64_t result = qword_26A3FA640;
  if (!qword_26A3FA640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA640);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_259F369B4()
{
  unint64_t result = qword_26A3FA650;
  if (!qword_26A3FA650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA650);
  }
  return result;
}

uint64_t sub_259F36A08@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  return sub_259F35C30(a1, a2, a3);
}

unint64_t sub_259F36A28()
{
  unint64_t result = qword_26A3FA660;
  if (!qword_26A3FA660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA660);
  }
  return result;
}

uint64_t sub_259F36A7C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_259F26A80(a1, a2, a3);
  }
  return a1;
}

unint64_t sub_259F36A90(void *a1)
{
  a1[1] = sub_259F36AC8();
  a1[2] = sub_259F36B1C();
  unint64_t result = sub_259F36B70();
  a1[3] = result;
  return result;
}

unint64_t sub_259F36AC8()
{
  unint64_t result = qword_26A3FA668;
  if (!qword_26A3FA668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA668);
  }
  return result;
}

unint64_t sub_259F36B1C()
{
  unint64_t result = qword_26A3FA670;
  if (!qword_26A3FA670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA670);
  }
  return result;
}

unint64_t sub_259F36B70()
{
  unint64_t result = qword_26A3FA678;
  if (!qword_26A3FA678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA678);
  }
  return result;
}

uint64_t destroy for AnyCodable(uint64_t a1)
{
  return sub_259F26A80(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s12PoirotBlocks10AnyCodableOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_259F1E5FC(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for AnyCodable(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_259F1E5FC(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_259F26A80(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for AnyCodable(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_259F26A80(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyCodable(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 5) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyCodable(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 251;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_259F36D50(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AnyCodable()
{
  return &type metadata for AnyCodable;
}

uint64_t initializeWithCopy for AnyCodable.AnyKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AnyCodable.AnyKey(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AnyCodable.AnyKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyCodable.AnyKey(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyCodable.AnyKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyCodable.AnyKey()
{
  return &type metadata for AnyCodable.AnyKey;
}

unint64_t sub_259F36F04()
{
  unint64_t result = qword_26A3FA680;
  if (!qword_26A3FA680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA680);
  }
  return result;
}

unint64_t sub_259F36F5C()
{
  unint64_t result = qword_26A3FA688;
  if (!qword_26A3FA688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA688);
  }
  return result;
}

unint64_t sub_259F36FB0()
{
  unint64_t result = qword_26A3FA690;
  if (!qword_26A3FA690)
  {
    sub_259F68120();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA690);
  }
  return result;
}

uint64_t dispatch thunk of ProvidesOutputDescription.outputDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_259F3701C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v71 = a2;
  uint64_t v69 = a1;
  uint64_t v70 = a4;
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA3F0);
  uint64_t v5 = *(void *)(v76 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v76);
  uint64_t v75 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v74 = (uint64_t)&v67 - v8;
  uint64_t v86 = type metadata accessor for DatasetColumnDescription(0);
  uint64_t v87 = *(void *)(v86 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v86);
  uint64_t v77 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)&v67 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v85 = (char *)&v67 - v14;
  uint64_t v15 = sub_259F68240();
  MEMORY[0x270FA5388](v15);
  uint64_t v91 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = *(void *)(a3 + 16);
  if (v72)
  {
    uint64_t v68 = v5;
    uint64_t v73 = a3 + 32;
    uint64_t v84 = &v98;
    uint64_t v83 = &v94;
    uint64_t v82 = (void (**)(char *, char *, uint64_t))(v16 + 16);
    uint64_t v81 = (void (**)(char *, uint64_t))(v16 + 8);
    uint64_t v67 = a3;
    swift_bridgeObjectRetain();
    uint64_t v18 = 0;
    char v19 = (void *)MEMORY[0x263F8EE80];
LABEL_4:
    uint64_t v20 = *(void *)(v73 + 8 * v18);
    uint64_t v78 = v18 + 1;
    uint64_t v21 = *(void *)(v20 + 64);
    uint64_t v79 = v20 + 64;
    uint64_t v22 = 1 << *(unsigned char *)(v20 + 32);
    if (v22 < 64) {
      uint64_t v23 = ~(-1 << v22);
    }
    else {
      uint64_t v23 = -1;
    }
    unint64_t v24 = v23 & v21;
    int64_t v80 = (unint64_t)(v22 + 63) >> 6;
    uint64_t v88 = v20;
    swift_bridgeObjectRetain_n();
    for (int64_t i = 0; ; int64_t i = v90)
    {
      if (v24)
      {
        uint64_t v89 = (v24 - 1) & v24;
        int64_t v90 = i;
        unint64_t v26 = __clz(__rbit64(v24)) | (i << 6);
      }
      else
      {
        int64_t v27 = i + 1;
        if (__OFADD__(i, 1)) {
          goto LABEL_55;
        }
        if (v27 >= v80)
        {
LABEL_3:
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v18 = v78;
          if (v78 != v72) {
            goto LABEL_4;
          }
          swift_bridgeObjectRelease();
          uint64_t v5 = v68;
          break;
        }
        unint64_t v28 = *(void *)(v79 + 8 * v27);
        int64_t v29 = i + 1;
        if (!v28)
        {
          int64_t v29 = i + 2;
          if (i + 2 >= v80) {
            goto LABEL_3;
          }
          unint64_t v28 = *(void *)(v79 + 8 * v29);
          if (!v28)
          {
            int64_t v29 = i + 3;
            if (i + 3 >= v80) {
              goto LABEL_3;
            }
            unint64_t v28 = *(void *)(v79 + 8 * v29);
            if (!v28)
            {
              int64_t v29 = i + 4;
              if (i + 4 >= v80) {
                goto LABEL_3;
              }
              unint64_t v28 = *(void *)(v79 + 8 * v29);
              if (!v28)
              {
                int64_t v29 = i + 5;
                if (i + 5 >= v80) {
                  goto LABEL_3;
                }
                unint64_t v28 = *(void *)(v79 + 8 * v29);
                if (!v28)
                {
                  uint64_t v30 = i + 6;
                  if (i + 6 >= v80) {
                    goto LABEL_3;
                  }
                  unint64_t v28 = *(void *)(v79 + 8 * v30);
                  if (!v28)
                  {
                    while (1)
                    {
                      int64_t v29 = v30 + 1;
                      if (__OFADD__(v30, 1)) {
                        goto LABEL_56;
                      }
                      if (v29 >= v80) {
                        goto LABEL_3;
                      }
                      unint64_t v28 = *(void *)(v79 + 8 * v29);
                      ++v30;
                      if (v28) {
                        goto LABEL_29;
                      }
                    }
                  }
                  int64_t v29 = i + 6;
                }
              }
            }
          }
        }
LABEL_29:
        uint64_t v89 = (v28 - 1) & v28;
        int64_t v90 = v29;
        unint64_t v26 = __clz(__rbit64(v28)) + (v29 << 6);
      }
      uint64_t v31 = (uint64_t *)(*(void *)(v88 + 48) + 16 * v26);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      sub_259F13740(*(void *)(v88 + 56) + 40 * v26, (uint64_t)v84);
      *(void *)&long long v97 = v33;
      *((void *)&v97 + 1) = v32;
      long long v94 = v98;
      long long v95 = v99;
      long long v93 = v97;
      uint64_t v96 = v100;
      long long v34 = v97;
      char v35 = v83;
      __swift_project_boxed_opaque_existential_1(v83, *((uint64_t *)&v99 + 1));
      swift_getDynamicType();
      swift_bridgeObjectRetain();
      uint64_t v36 = v91;
      sub_259F68290();
      __swift_project_boxed_opaque_existential_1(v35, *((uint64_t *)&v95 + 1));
      swift_getDynamicType();
      swift_bridgeObjectRetain_n();
      LOBYTE(v32) = sub_259F682A0();
      uint64_t v37 = v86;
      uint64_t v38 = (uint64_t)v85;
      char v39 = v36;
      uint64_t v40 = v15;
      (*v82)(&v85[*(int *)(v86 + 24)], v39, v15);
      *(_OWORD *)uint64_t v38 = v34;
      *(unsigned char *)(v38 + 16) = v32 & 1;
      *(unsigned char *)(v38 + *(int *)(v37 + 28)) = 0;
      sub_259F1E52C(v38, (uint64_t)v13);
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v92 = v19;
      unint64_t v43 = sub_259F17068(v34, *((uint64_t *)&v34 + 1));
      uint64_t v44 = v19[2];
      BOOL v45 = (v42 & 1) == 0;
      uint64_t v46 = v44 + v45;
      if (__OFADD__(v44, v45))
      {
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        uint64_t result = sub_259F68D30();
        __break(1u);
        return result;
      }
      char v47 = v42;
      if (v19[3] >= v46)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          char v19 = v92;
          if (v42) {
            goto LABEL_8;
          }
        }
        else
        {
          sub_259F253C0();
          char v19 = v92;
          if (v47) {
            goto LABEL_8;
          }
        }
      }
      else
      {
        sub_259F18CC4(v46, isUniquelyReferenced_nonNull_native);
        unint64_t v48 = sub_259F17068(v34, *((uint64_t *)&v34 + 1));
        if ((v47 & 1) != (v49 & 1)) {
          goto LABEL_57;
        }
        unint64_t v43 = v48;
        char v19 = v92;
        if (v47)
        {
LABEL_8:
          sub_259F38570((uint64_t)v13, v19[7] + *(void *)(v87 + 72) * v43);
          goto LABEL_9;
        }
      }
      v19[(v43 >> 6) + 8] |= 1 << v43;
      *(_OWORD *)(v19[6] + 16 * v43) = v34;
      sub_259F1E52C((uint64_t)v13, v19[7] + *(void *)(v87 + 72) * v43);
      uint64_t v50 = v19[2];
      BOOL v51 = __OFADD__(v50, 1);
      uint64_t v52 = v50 + 1;
      if (v51) {
        goto LABEL_54;
      }
      v19[2] = v52;
      swift_bridgeObjectRetain();
LABEL_9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v40;
      (*v81)(v91, v40);
      sub_259F17838((uint64_t)&v93, &qword_26A3FA238);
      unint64_t v24 = v89;
    }
  }
  uint64_t v53 = sub_259F685A0();
  swift_bridgeObjectRelease();
  int64_t v54 = *(void *)(v53 + 16);
  if (v54)
  {
    *(void *)&long long v97 = MEMORY[0x263F8EE78];
    sub_259F1C918(0, v54, 0);
    uint64_t v55 = v53 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v56 = *(void *)(v5 + 72);
    uint64_t v57 = v97;
    uint64_t v58 = v77;
    do
    {
      uint64_t v59 = v74;
      sub_259F385D4(v55, v74);
      uint64_t v60 = *(int *)(v76 + 48);
      uint64_t v61 = (uint64_t)&v75[v60];
      sub_259F138BC(v59 + v60, (uint64_t)&v75[v60]);
      sub_259F1E52C(v61, v58);
      sub_259F17838(v59, &qword_26A3FA3F0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_259F1C918(0, *(void *)(v57 + 16) + 1, 1);
        uint64_t v57 = v97;
      }
      unint64_t v63 = *(void *)(v57 + 16);
      unint64_t v62 = *(void *)(v57 + 24);
      if (v63 >= v62 >> 1)
      {
        sub_259F1C918(v62 > 1, v63 + 1, 1);
        uint64_t v57 = v97;
      }
      *(void *)(v57 + 16) = v63 + 1;
      uint64_t v58 = v77;
      sub_259F1E52C(v77, v57+ ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80))+ *(void *)(v87 + 72) * v63);
      v55 += v56;
      --v54;
    }
    while (v54);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v57 = MEMORY[0x263F8EE78];
  }
  uint64_t v64 = v70;
  uint64_t v65 = v71;
  *uint64_t v70 = v69;
  v64[1] = v65;
  v64[2] = v57;
  return swift_bridgeObjectRetain();
}

uint64_t sub_259F37958(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_259F682B0();
  if (v10)
  {
    sub_259F13728(&v9, (uint64_t)v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
    if (swift_dynamicCast())
    {
      long long v6 = v9;
      uint64_t v7 = sub_259F67F60();
      sub_259F21768(v6, *((unint64_t *)&v6 + 1));
    }
    else
    {
      *(void *)&long long v9 = 0;
      *((void *)&v9 + 1) = 0xE000000000000000;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA6A8);
      sub_259F68A10();
      uint64_t v7 = v9;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a1);
  }
  else
  {
    sub_259F17838((uint64_t)&v9, &qword_26A3FA270);
    return 0;
  }
  return v7;
}

uint64_t sub_259F37B08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_259F3701C(a1, a2, a3, &v47);
  swift_bridgeObjectRelease();
  uint64_t v6 = v47;
  int64_t v7 = *(void *)(a3 + 16);
  long long v39 = v48;
  if (!v7)
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v34 = MEMORY[0x263F8EE78];
LABEL_34:
    *(void *)a4 = v6;
    *(_OWORD *)(a4 + 8) = v39;
    *(void *)(a4 + 24) = v34;
    return result;
  }
  uint64_t v37 = v47;
  uint64_t v38 = a4;
  uint64_t v50 = MEMORY[0x263F8EE78];
  sub_259F1C9C4(0, v7, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA318);
  uint64_t v8 = 0;
  uint64_t v41 = a3 + 32;
  int64_t v40 = v7;
  while (2)
  {
    uint64_t v9 = *(void *)(v41 + 8 * v8);
    uint64_t v42 = v8 + 1;
    uint64_t v10 = sub_259F68A90();
    uint64_t v11 = (void *)v10;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v43 = v9 + 64;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & *(void *)(v9 + 64);
    int64_t v44 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v45 = v10 + 64;
    uint64_t v46 = v9;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v16 = 0;
    if (v14)
    {
LABEL_7:
      unint64_t v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v18 = v17 | (v16 << 6);
      goto LABEL_24;
    }
    while (1)
    {
      int64_t v19 = v16 + 1;
      if (__OFADD__(v16, 1)) {
        goto LABEL_36;
      }
      if (v19 >= v44) {
        goto LABEL_27;
      }
      unint64_t v20 = *(void *)(v43 + 8 * v19);
      ++v16;
      if (!v20)
      {
        int64_t v16 = v19 + 1;
        if (v19 + 1 >= v44) {
          goto LABEL_27;
        }
        unint64_t v20 = *(void *)(v43 + 8 * v16);
        if (!v20)
        {
          int64_t v16 = v19 + 2;
          if (v19 + 2 >= v44) {
            goto LABEL_27;
          }
          unint64_t v20 = *(void *)(v43 + 8 * v16);
          if (!v20)
          {
            int64_t v16 = v19 + 3;
            if (v19 + 3 >= v44) {
              goto LABEL_27;
            }
            unint64_t v20 = *(void *)(v43 + 8 * v16);
            if (!v20) {
              break;
            }
          }
        }
      }
LABEL_23:
      unint64_t v14 = (v20 - 1) & v20;
      unint64_t v18 = __clz(__rbit64(v20)) + (v16 << 6);
LABEL_24:
      uint64_t v22 = (uint64_t *)(*(void *)(v46 + 48) + 16 * v18);
      uint64_t v23 = *v22;
      uint64_t v24 = v22[1];
      sub_259F13740(*(void *)(v46 + 56) + 40 * v18, (uint64_t)&v47);
      uint64_t v25 = v49;
      __swift_project_boxed_opaque_existential_1(&v47, v49);
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_259F37958(v25);
      uint64_t v28 = v27;
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
      *(void *)(v45 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      int64_t v29 = (void *)(v11[6] + 16 * v18);
      *int64_t v29 = v23;
      v29[1] = v24;
      uint64_t v30 = (uint64_t *)(v11[7] + 16 * v18);
      *uint64_t v30 = v26;
      v30[1] = v28;
      uint64_t v31 = v11[2];
      BOOL v32 = __OFADD__(v31, 1);
      uint64_t v33 = v31 + 1;
      if (v32)
      {
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      _OWORD v11[2] = v33;
      if (v14) {
        goto LABEL_7;
      }
    }
    int64_t v21 = v19 + 4;
    if (v21 >= v44)
    {
LABEL_27:
      swift_bridgeObjectRelease();
      uint64_t v34 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_259F1C9C4(0, *(void *)(v34 + 16) + 1, 1);
        uint64_t v34 = v50;
      }
      unint64_t v36 = *(void *)(v34 + 16);
      unint64_t v35 = *(void *)(v34 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_259F1C9C4(v35 > 1, v36 + 1, 1);
        uint64_t v34 = v50;
      }
      *(void *)(v34 + 16) = v36 + 1;
      *(void *)(v34 + 8 * v36 + 32) = v11;
      uint64_t v8 = v42;
      if (v42 == v40)
      {
        uint64_t result = swift_bridgeObjectRelease();
        a4 = v38;
        uint64_t v6 = v37;
        goto LABEL_34;
      }
      continue;
    }
    break;
  }
  unint64_t v20 = *(void *)(v43 + 8 * v21);
  if (v20)
  {
    int64_t v16 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v44) {
      goto LABEL_27;
    }
    unint64_t v20 = *(void *)(v43 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_259F37E94()
{
  uint64_t v1 = sub_259F68690();
  uint64_t v32 = *(void *)(v1 - 8);
  uint64_t v33 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v31 = (char *)v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DatasetColumnDescription(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (void *)((char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void *)(v0 + 16);
  v30[1] = *(void *)(v0 + 24);
  int64_t v8 = *(void *)(v7 + 16);
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (v8)
  {
    uint64_t v35 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_259F1C984(0, v8, 0);
    uint64_t v10 = *(unsigned __int8 *)(v4 + 80);
    v30[0] = v7;
    uint64_t v11 = v7 + ((v10 + 32) & ~v10);
    uint64_t v12 = *(void *)(v4 + 72);
    uint64_t v9 = v35;
    uint64_t v34 = v12;
    do
    {
      sub_259F138BC(v11, (uint64_t)v6);
      uint64_t v14 = *v6;
      uint64_t v13 = v6[1];
      swift_bridgeObjectRetain();
      sub_259F26B8C((uint64_t)v6);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_259F1C984(0, *(void *)(v9 + 16) + 1, 1);
        uint64_t v12 = v34;
        uint64_t v9 = v35;
      }
      unint64_t v16 = *(void *)(v9 + 16);
      unint64_t v15 = *(void *)(v9 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_259F1C984(v15 > 1, v16 + 1, 1);
        uint64_t v12 = v34;
        uint64_t v9 = v35;
      }
      *(void *)(v9 + 16) = v16 + 1;
      uint64_t v17 = v9 + 16 * v16;
      *(void *)(v17 + 32) = v14;
      *(void *)(v17 + 40) = v13;
      v11 += v12;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  uint64_t v35 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA130);
  sub_259F3822C();
  uint64_t v18 = sub_259F685F0();
  uint64_t v20 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA260);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_259F6BA00;
  *(void *)(v21 + 32) = v18;
  *(void *)(v21 + 40) = v20;
  swift_bridgeObjectRetain();
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = sub_259F383D4(v22, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v35 = v21;
  sub_259F2D18C(v23);
  sub_259F685F0();
  swift_bridgeObjectRelease();
  uint64_t v24 = v31;
  sub_259F68680();
  uint64_t v25 = sub_259F68660();
  unint64_t v27 = v26;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v24, v33);
  if (v27 >> 60 == 15)
  {
    sub_259F3851C();
    swift_allocError();
    void *v28 = 0;
    v28[1] = 0;
    swift_willThrow();
  }
  return v25;
}

unint64_t sub_259F3822C()
{
  unint64_t result = qword_26A3FA698;
  if (!qword_26A3FA698)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A3FA130);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA698);
  }
  return result;
}

uint64_t sub_259F38288(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v18 = MEMORY[0x263F8EE78];
    sub_259F1C984(0, v2, 0);
    uint64_t v3 = v18;
    for (int64_t i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v7 = *i;
      if (!*(void *)(a2 + 16)) {
        break;
      }
      uint64_t v8 = *(i - 1);
      swift_bridgeObjectRetain_n();
      unint64_t v9 = sub_259F17068(v8, v7);
      if ((v10 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      uint64_t v11 = (uint64_t *)(*(void *)(a2 + 56) + 16 * v9);
      uint64_t v13 = *v11;
      unint64_t v12 = v11[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_9:
      swift_bridgeObjectRelease();
      unint64_t v15 = *(void *)(v18 + 16);
      unint64_t v14 = *(void *)(v18 + 24);
      if (v15 >= v14 >> 1) {
        sub_259F1C984(v14 > 1, v15 + 1, 1);
      }
      *(void *)(v18 + 16) = v15 + 1;
      uint64_t v16 = v18 + 16 * v15;
      *(void *)(v16 + 32) = v13;
      *(void *)(v16 + 40) = v12;
      if (!--v2) {
        return v3;
      }
    }
    swift_bridgeObjectRetain();
LABEL_8:
    uint64_t v13 = 0;
    unint64_t v12 = 0xE000000000000000;
    goto LABEL_9;
  }
  return v3;
}

uint64_t sub_259F383D4(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
    sub_259F1C984(0, v2, 0);
    uint64_t v3 = v15;
    uint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v6 = *v5;
      swift_bridgeObjectRetain();
      sub_259F38288(a2, v6);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA130);
      sub_259F3822C();
      uint64_t v7 = sub_259F685F0();
      uint64_t v9 = v8;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v11 = *(void *)(v15 + 16);
      unint64_t v10 = *(void *)(v15 + 24);
      if (v11 >= v10 >> 1) {
        sub_259F1C984(v10 > 1, v11 + 1, 1);
      }
      *(void *)(v15 + 16) = v11 + 1;
      uint64_t v12 = v15 + 16 * v11;
      *(void *)(v12 + 32) = v7;
      *(void *)(v12 + 40) = v9;
      ++v5;
      --v2;
    }
    while (v2);
  }
  return v3;
}

unint64_t sub_259F3851C()
{
  unint64_t result = qword_26A3FA6A0;
  if (!qword_26A3FA6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA6A0);
  }
  return result;
}

uint64_t sub_259F38570(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DatasetColumnDescription(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_259F385D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA3F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t destroy for DatasetSnapshotError(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s12PoirotBlocks20DatasetSnapshotErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for DatasetSnapshotError(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DatasetSnapshotError(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DatasetSnapshotError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DatasetSnapshotError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_259F3885C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_259F38874(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DatasetSnapshotError()
{
  return &type metadata for DatasetSnapshotError;
}

uint64_t sub_259F388A4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA6E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F39A1C();
  sub_259F68E20();
  LOBYTE(v12[0]) = 0;
  sub_259F68BB0();
  if (!v2)
  {
    sub_259F39B5C((long long *)(v3 + 16), v13);
    sub_259F39B5C(v13, v12);
    char v11 = 1;
    sub_259F39B74();
    sub_259F68BF0();
    *(void *)&v12[0] = *(void *)(v3 + 64);
    char v11 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA6C8);
    sub_259F39BC8();
    sub_259F68BF0();
    LOBYTE(v12[0]) = 3;
    sub_259F68BB0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_259F38AA0()
{
  uint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6574616C706D6574;
      break;
    case 2:
      uint64_t result = 0x736F7263616DLL;
      break;
    case 3:
      uint64_t result = 0x6D614E7972657571;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_259F38B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_259F393E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_259F38B5C(uint64_t a1)
{
  unint64_t v2 = sub_259F39A1C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_259F38B98(uint64_t a1)
{
  unint64_t v2 = sub_259F39A1C();
  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_259F38BD4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_259F395BC(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(void *)(a2 + 80) = v8;
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_259F38C30(void *a1)
{
  return sub_259F388A4(a1);
}

uint64_t sub_259F38C7C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  id v7[2] = *(_OWORD *)(a1 + 32);
  _OWORD v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 80);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  _OWORD v9[2] = *(_OWORD *)(a2 + 32);
  void v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 80);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_259F39100((uint64_t)v7, (uint64_t)v9) & 1;
}

_OWORD *sub_259F38CE8@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_259F13740(a1, (uint64_t)v6);
  sub_259F4781C(v6, (uint64_t)v7);
  if (v2) {
    return (_OWORD *)__swift_destroy_boxed_opaque_existential_1(a1);
  }
  sub_259F39200((uint64_t)v7, (uint64_t)v8);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return sub_259F39B5C(v8, a2);
}

uint64_t sub_259F38D7C(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = *(unsigned char *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  v9[0] = *(void *)v1;
  v9[1] = v3;
  _OWORD v9[2] = v4;
  char v10 = v5;
  uint64_t v11 = v7;
  uint64_t v12 = v6;
  char v13 = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_259F47CE0(a1);
  return sub_259F20200((uint64_t)v9);
}

uint64_t sub_259F38E00(long long *a1, long long *a2)
{
  sub_259F39B5C(a1, v4);
  sub_259F39B5C(a2, v5);
  return sub_259F38FFC(v4, v5) & 1;
}

uint64_t TemplateBlockConfigType.init(aggregationBlock:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_259F13728(a1, a2);
}

uint64_t dispatch thunk of TemplateBlockProtocol.configType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TemplateBlockProtocol.macros.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t initializeWithCopy for TemplateBlockConfigType(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for TemplateBlockConfigType(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t assignWithTake for TemplateBlockConfigType(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TemplateBlockConfigType(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TemplateBlockConfigType(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TemplateBlockConfigType()
{
  return &type metadata for TemplateBlockConfigType;
}

uint64_t sub_259F38FFC(long long *a1, long long *a2)
{
  sub_259F39B5C(a2, &v18);
  long long v3 = v18;
  uint64_t v4 = v19;
  int v5 = v20;
  uint64_t v7 = v21;
  uint64_t v6 = v22;
  sub_259F39B5C(a1, &v13);
  uint64_t v8 = v14;
  int v9 = v15;
  uint64_t v11 = v16;
  uint64_t v10 = v17;
  if (v13 == v3 || (sub_259F68C70()) && (sub_259F2D8E0(v8, v4) & 1) != 0 && ((v5 ^ v9) & 1) == 0)
  {
    if (v10)
    {
      if (v6 && (v11 == v7 && v10 == v6 || (sub_259F68C70() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v6)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_259F39100(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (v5 = sub_259F68C70(), uint64_t result = 0, (v5 & 1) != 0))
  {
    char v7 = *(unsigned char *)(a1 + 40);
    uint64_t v8 = *(void *)(a2 + 16);
    char v9 = *(unsigned char *)(a2 + 40);
    uint64_t v10 = *(void *)(a1 + 16);
    long long v11 = *(_OWORD *)(a1 + 24);
    char v12 = v7;
    long long v13 = *(_OWORD *)(a1 + 48);
    uint64_t v14 = v8;
    long long v15 = *(_OWORD *)(a2 + 24);
    char v16 = v9;
    long long v17 = *(_OWORD *)(a2 + 48);
    if ((sub_259F4D7DC((uint64_t)&v10, (uint64_t)&v14) & 1) != 0
      && (sub_259F2DA5C(*(void **)(a1 + 64), *(void **)(a2 + 64)) & 1) != 0)
    {
      if (*(void *)(a1 + 72) == *(void *)(a2 + 72) && *(void *)(a1 + 80) == *(void *)(a2 + 80))
      {
        return 1;
      }
      else
      {
        return sub_259F68C70();
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_259F39200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_259F2BF28(a1, (uint64_t)&v11);
  switch(v15)
  {
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    case 2:
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    case 4:
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 5:
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    case 6:
      sub_259F20200((uint64_t)&v11);
LABEL_8:
      uint64_t v11 = 0;
      *(void *)&long long v12 = 0xE000000000000000;
      sub_259F68960();
      sub_259F686F0();
      sub_259F68A10();
      uint64_t v8 = v11;
      uint64_t v9 = v12;
      sub_259F3A4E4();
      swift_allocError();
      *uint64_t v10 = v8;
      v10[1] = v9;
      swift_willThrow();
      uint64_t result = sub_259F20200(a1);
      break;
    default:
      uint64_t result = sub_259F20200(a1);
      char v5 = v13;
      long long v6 = v12;
      long long v7 = v14;
      *(void *)a2 = v11;
      *(_OWORD *)(a2 + 8) = v6;
      *(unsigned char *)(a2 + 24) = v5;
      *(_OWORD *)(a2 + 32) = v7;
      break;
  }
  return result;
}

uint64_t sub_259F393E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574616C706D6574 && a2 == 0xED00006B636F6C42 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736F7263616DLL && a2 == 0xE600000000000000 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D614E7972657571 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_259F68C70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_259F395BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA6B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F39A1C();
  sub_259F68DF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v38) = 0;
  uint64_t v9 = sub_259F68B40();
  uint64_t v12 = v11;
  uint64_t v37 = v9;
  char v45 = 1;
  sub_259F39A70();
  swift_bridgeObjectRetain();
  sub_259F68B60();
  uint64_t v13 = v39;
  uint64_t v31 = v38;
  uint64_t v32 = v12;
  uint64_t v14 = v40;
  int v44 = v41;
  uint64_t v30 = v42;
  uint64_t v33 = 0;
  uint64_t v15 = v43;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA6C8);
  char v45 = 2;
  sub_259F39AC4();
  uint64_t v35 = v13;
  swift_bridgeObjectRetain();
  uint64_t v34 = v14;
  swift_bridgeObjectRetain();
  uint64_t v36 = v15;
  uint64_t v16 = v33;
  swift_bridgeObjectRetain();
  sub_259F68B60();
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = v38;
    LOBYTE(v38) = 3;
    uint64_t v29 = v17;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_259F68B40();
    uint64_t v19 = v32;
    uint64_t v21 = v20;
    uint64_t v22 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v33 = v18;
    v22(v8, v5);
    swift_bridgeObjectRetain();
    uint64_t v23 = v35;
    swift_bridgeObjectRetain();
    uint64_t v24 = v34;
    swift_bridgeObjectRetain();
    uint64_t v25 = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    uint64_t v26 = v29;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a2 = v37;
    *(void *)(a2 + 8) = v19;
    *(void *)(a2 + 16) = v31;
    *(void *)(a2 + 24) = v23;
    *(void *)(a2 + 32) = v24;
    *(unsigned char *)(a2 + 40) = v44;
    *(void *)(a2 + 48) = v30;
    *(void *)(a2 + 56) = v25;
    uint64_t v27 = v33;
    *(void *)(a2 + 64) = v26;
    *(void *)(a2 + 72) = v27;
    *(void *)(a2 + 80) = v21;
  }
  return result;
}

unint64_t sub_259F39A1C()
{
  unint64_t result = qword_26A3FA6B8;
  if (!qword_26A3FA6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA6B8);
  }
  return result;
}

unint64_t sub_259F39A70()
{
  unint64_t result = qword_26A3FA6C0;
  if (!qword_26A3FA6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA6C0);
  }
  return result;
}

unint64_t sub_259F39AC4()
{
  unint64_t result = qword_26A3FA6D0;
  if (!qword_26A3FA6D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A3FA6C8);
    sub_259F39C60(&qword_26A3FA6D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA6D0);
  }
  return result;
}

_OWORD *sub_259F39B5C(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

unint64_t sub_259F39B74()
{
  unint64_t result = qword_26A3FA6E8;
  if (!qword_26A3FA6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA6E8);
  }
  return result;
}

unint64_t sub_259F39BC8()
{
  unint64_t result = qword_26A3FA6F0;
  if (!qword_26A3FA6F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A3FA6C8);
    sub_259F39C60(&qword_26A3FA6F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA6F0);
  }
  return result;
}

uint64_t sub_259F39C60(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A3FA2C0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for AggregationBlockConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AggregationBlockConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AggregationBlockConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AggregationBlockConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TemplateConfig()
{
  return &type metadata for TemplateConfig;
}

unsigned char *storeEnumTagSinglePayload for TemplateBlockConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259F39F34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TemplateBlockConfig.CodingKeys()
{
  return &type metadata for TemplateBlockConfig.CodingKeys;
}

uint64_t destroy for TemplateBlockConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TemplateBlockConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TemplateBlockConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for TemplateBlockConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TemplateBlockConfig(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TemplateBlockConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TemplateBlockConfig()
{
  return &type metadata for TemplateBlockConfig;
}

unint64_t sub_259F3A2A8(void *a1)
{
  a1[1] = sub_259F3A2E0();
  a1[2] = sub_259F3A334();
  unint64_t result = sub_259F3A388();
  a1[3] = result;
  return result;
}

unint64_t sub_259F3A2E0()
{
  unint64_t result = qword_26A3FA700;
  if (!qword_26A3FA700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA700);
  }
  return result;
}

unint64_t sub_259F3A334()
{
  unint64_t result = qword_26A3FA708;
  if (!qword_26A3FA708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA708);
  }
  return result;
}

unint64_t sub_259F3A388()
{
  unint64_t result = qword_26A3FA710;
  if (!qword_26A3FA710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA710);
  }
  return result;
}

unint64_t sub_259F3A3E0()
{
  unint64_t result = qword_26A3FA718;
  if (!qword_26A3FA718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA718);
  }
  return result;
}

unint64_t sub_259F3A438()
{
  unint64_t result = qword_26A3FA720;
  if (!qword_26A3FA720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA720);
  }
  return result;
}

unint64_t sub_259F3A490()
{
  unint64_t result = qword_26A3FA728;
  if (!qword_26A3FA728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA728);
  }
  return result;
}

unint64_t sub_259F3A4E4()
{
  unint64_t result = qword_26A3FA730;
  if (!qword_26A3FA730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA730);
  }
  return result;
}

uint64_t DatasetColumnDescription.init(name:nullable:type:pivot:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  *(unsigned char *)(a6 + 16) = a3;
  uint64_t v9 = type metadata accessor for DatasetColumnDescription(0);
  *(unsigned char *)(a6 + *(int *)(v9 + 28)) = a5;
  uint64_t v10 = a6 + *(int *)(v9 + 24);
  return sub_259F3A5BC(a4, v10);
}

uint64_t type metadata accessor for DatasetColumnDescription(uint64_t a1)
{
  return sub_259F3A640(a1, (uint64_t *)&unk_26A3FA7B8);
}

uint64_t sub_259F3A5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DatasetColumnType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for DatasetColumnType(uint64_t a1)
{
  return sub_259F3A640(a1, (uint64_t *)&unk_26A3FA7A8);
}

uint64_t sub_259F3A640(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_259F3A678()
{
  return sub_259F68760();
}

uint64_t sub_259F3A708()
{
  return sub_259F68750();
}

uint64_t DatasetColumnType.sqlType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_259F68240();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t static DatasetColumnType.text.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_259F3A878(MEMORY[0x263F5EFD0], a1);
}

uint64_t static DatasetColumnType.blob.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_259F3A878(MEMORY[0x263F5EFC0], a1);
}

uint64_t static DatasetColumnType.int32.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_259F3A878(MEMORY[0x263F5EFE0], a1);
}

uint64_t static DatasetColumnType.int64.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_259F3A878(MEMORY[0x263F5EFE8], a1);
}

uint64_t static DatasetColumnType.uint32.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_259F3A878(MEMORY[0x263F5EFF8], a1);
}

uint64_t static DatasetColumnType.uint64.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_259F3A878(MEMORY[0x263F5F000], a1);
}

uint64_t static DatasetColumnType.float.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_259F3A878(MEMORY[0x263F5EFD8], a1);
}

uint64_t static DatasetColumnType.double.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_259F3A878(MEMORY[0x263F5EFF0], a1);
}

uint64_t static DatasetColumnType.datetime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_259F3A878(MEMORY[0x263F5F008], a1);
}

uint64_t static DatasetColumnType.BOOL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_259F3A878(MEMORY[0x263F5EFC8], a1);
}

uint64_t static DatasetColumnType.any.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_259F3A878(MEMORY[0x263F5EFB8], a1);
}

uint64_t sub_259F3A878@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = sub_259F68240();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104);
  return v5(a2, v3, v4);
}

uint64_t sub_259F3A8E4()
{
  uint64_t result = sub_259F3A904();
  qword_26A3FA738 = result;
  return result;
}

uint64_t sub_259F3A904()
{
  uint64_t v0 = type metadata accessor for DatasetColumnType(0);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_259F68220();
  int64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_259F1C9E4(0, v5, 0);
    uint64_t v6 = v17;
    uint64_t v16 = sub_259F68240();
    uint64_t v7 = *(void *)(v16 - 8);
    uint64_t v8 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v15[1] = v4;
    unint64_t v10 = v4 + v9;
    uint64_t v11 = *(void *)(v7 + 72);
    do
    {
      v8(v3, v10, v16);
      uint64_t v17 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_259F1C9E4(v12 > 1, v13 + 1, 1);
        uint64_t v6 = v17;
      }
      *(void *)(v6 + 16) = v13 + 1;
      sub_259F3A5BC((uint64_t)v3, v6+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(void *)(v1 + 72) * v13);
      v10 += v11;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v6;
}

uint64_t static DatasetColumnType.allCases.getter()
{
  if (qword_26A3F9E60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static DatasetColumnType.allCases.setter(uint64_t a1)
{
  if (qword_26A3F9E60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_26A3FA738 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static DatasetColumnType.allCases.modify())()
{
  if (qword_26A3F9E60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t DatasetColumnType.hash(into:)()
{
  sub_259F68240();
  sub_259F3C508(&qword_26A3FA740, MEMORY[0x263F5F010]);
  return sub_259F685C0();
}

uint64_t DatasetColumnType.hashValue.getter()
{
  return sub_259F68DC0();
}

uint64_t sub_259F3AD60()
{
  return sub_259F68DC0();
}

uint64_t sub_259F3ADE8()
{
  sub_259F68240();
  sub_259F3C508(&qword_26A3FA740, MEMORY[0x263F5F010]);
  return sub_259F685C0();
}

uint64_t sub_259F3AE6C()
{
  return sub_259F68DC0();
}

uint64_t sub_259F3AEF0@<X0>(void *a1@<X8>)
{
  if (qword_26A3F9E60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a1 = qword_26A3FA738;
  return swift_bridgeObjectRetain();
}

uint64_t DatasetColumnType.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_259F68240();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F68DE0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    sub_259F3C508(&qword_26A3FA748, MEMORY[0x263F5F010]);
    sub_259F68CB0();
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v8, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t DatasetColumnType.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F68E10();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_259F68240();
  sub_259F3C508(&qword_26A3FA750, MEMORY[0x263F5F010]);
  sub_259F68D00();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t sub_259F3B1EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DatasetColumnType.init(from:)(a1, a2);
}

uint64_t sub_259F3B204(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F68E10();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_259F68240();
  sub_259F3C508(&qword_26A3FA750, MEMORY[0x263F5F010]);
  sub_259F68D00();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t DatasetColumnDescription.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*DatasetColumnDescription.name.modify())()
{
  return nullsub_1;
}

uint64_t DatasetColumnDescription.nullable.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t DatasetColumnDescription.nullable.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*DatasetColumnDescription.nullable.modify())()
{
  return nullsub_1;
}

uint64_t DatasetColumnDescription.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DatasetColumnDescription(0);
  return sub_259F3C550(v1 + *(int *)(v3 + 24), a1, type metadata accessor for DatasetColumnType);
}

uint64_t DatasetColumnDescription.pivot.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for DatasetColumnDescription(0) + 28));
}

uint64_t DatasetColumnDescription.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = *(unsigned char *)(a1 + 16);
  uint64_t v5 = type metadata accessor for DatasetColumnDescription(0);
  sub_259F3C550(a1 + *(int *)(v5 + 24), a2 + *(int *)(v5 + 24), type metadata accessor for DatasetColumnType);
  char v6 = *(unsigned char *)(a1 + *(int *)(v5 + 28));
  swift_bridgeObjectRetain();
  uint64_t result = sub_259F26B8C(a1);
  *(unsigned char *)(a2 + *(int *)(v5 + 28)) = v6;
  return result;
}

uint64_t DatasetColumnDescription.matches(_:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DatasetColumnDescription(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)v15 - v8;
  if (*a1 == *v2 && a1[1] == v2[1])
  {
    sub_259F3C550((uint64_t)a1, (uint64_t)v15 - v8, type metadata accessor for DatasetColumnDescription);
    sub_259F3C550((uint64_t)v2, (uint64_t)v7, type metadata accessor for DatasetColumnDescription);
  }
  else
  {
    char v11 = sub_259F68C70();
    sub_259F3C550((uint64_t)a1, (uint64_t)v9, type metadata accessor for DatasetColumnDescription);
    sub_259F3C550((uint64_t)v2, (uint64_t)v7, type metadata accessor for DatasetColumnDescription);
    if ((v11 & 1) == 0) {
      goto LABEL_13;
    }
  }
  sub_259F68240();
  sub_259F3C508(&qword_26A3FA758, MEMORY[0x263F5F010]);
  sub_259F68740();
  sub_259F68740();
  if (v15[2] == v15[0] && v15[3] == v15[1])
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v12 = sub_259F68C70();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
LABEL_13:
      uint64_t v13 = 0;
      goto LABEL_14;
    }
  }
  uint64_t v13 = 1;
LABEL_14:
  sub_259F26B8C((uint64_t)v7);
  sub_259F26B8C((uint64_t)v9);
  return v13;
}

uint64_t DatasetColumnDescription.columnName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DatasetColumnDescription.columnType.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DatasetColumnType(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v10[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DatasetColumnDescription(0);
  sub_259F3C550(v0 + *(int *)(v5 + 24), (uint64_t)v4, type metadata accessor for DatasetColumnType);
  uint64_t DynamicType = sub_259F68210();
  uint64_t v7 = sub_259F68240();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
  if (*(unsigned char *)(v1 + 16) == 1)
  {
    sub_259F682C0();
    __swift_project_boxed_opaque_existential_1(v10, v10[3]);
    uint64_t DynamicType = swift_getDynamicType();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  return DynamicType;
}

uint64_t sub_259F3B7F8(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = type metadata accessor for DatasetColumnType(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_259F3C550(v1 + *(int *)(a1 + 24), (uint64_t)v6, type metadata accessor for DatasetColumnType);
  uint64_t DynamicType = sub_259F68210();
  uint64_t v8 = sub_259F68240();
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
  if (*(unsigned char *)(v3 + 16) == 1)
  {
    sub_259F682C0();
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    uint64_t DynamicType = swift_getDynamicType();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  return DynamicType;
}

uint64_t sub_259F3B92C()
{
  return sub_259F68270() & 1;
}

uint64_t sub_259F3B948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_259F3C508((unint64_t *)&qword_26A3FA5D0, (void (*)(uint64_t))type metadata accessor for DatasetColumnDescription);
  return MEMORY[0x270F54A08](a1, a2, a3, v6);
}

uint64_t sub_259F3B9CC()
{
  return sub_259F68250();
}

uint64_t sub_259F3BA34(unsigned __int8 *a1, char *a2)
{
  return sub_259F4C16C(*a1, *a2);
}

uint64_t sub_259F3BA40()
{
  return sub_259F68DC0();
}

uint64_t sub_259F3BB04()
{
  sub_259F686E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_259F3BBB0()
{
  return sub_259F68DC0();
}

uint64_t sub_259F3BC70@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_259F3D3A0();
  *a1 = result;
  return result;
}

void sub_259F3BCA0(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701667182;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x656C62616C6C756ELL;
      goto LABEL_3;
    case 2:
      *a1 = 0x746F766970;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 1701869940;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_259F3BD24()
{
  uint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C62616C6C756ELL;
      break;
    case 2:
      uint64_t result = 0x746F766970;
      break;
    case 3:
      uint64_t result = 1701869940;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_259F3BD9C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_259F3D3A0();
  *a1 = result;
  return result;
}

uint64_t sub_259F3BDC4(uint64_t a1)
{
  unint64_t v2 = sub_259F3C5B8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_259F3BE00(uint64_t a1)
{
  unint64_t v2 = sub_259F3C5B8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DatasetColumnDescription.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = type metadata accessor for DatasetColumnType(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA760);
  uint64_t v21 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DatasetColumnDescription(0);
  MEMORY[0x270FA5388](v10);
  char v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v23 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_259F3C5B8();
  sub_259F68DF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  }
  v19[1] = v4;
  uint64_t v15 = v21;
  uint64_t v14 = v22;
  char v27 = 0;
  *(void *)char v12 = sub_259F68B40();
  *((void *)v12 + 1) = v16;
  char v26 = 1;
  v12[16] = sub_259F68B10() & 1;
  char v25 = 2;
  v12[*(int *)(v10 + 28)] = sub_259F68B10() & 1;
  char v24 = 3;
  sub_259F3C508(&qword_26A3FA770, (void (*)(uint64_t))type metadata accessor for DatasetColumnType);
  sub_259F68B60();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
  uint64_t v17 = (uint64_t)v23;
  sub_259F3A5BC((uint64_t)v6, (uint64_t)&v12[*(int *)(v10 + 24)]);
  sub_259F3C550((uint64_t)v12, v20, type metadata accessor for DatasetColumnDescription);
  __swift_destroy_boxed_opaque_existential_1(v17);
  return sub_259F26B8C((uint64_t)v12);
}

uint64_t DatasetColumnDescription.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA778);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F3C5B8();
  sub_259F68E20();
  v10[15] = 0;
  swift_bridgeObjectRetain();
  sub_259F68BB0();
  if (v2)
  {
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v3 + 16) == 1)
    {
      v10[12] = 1;
      sub_259F68BC0();
    }
    if (*(unsigned char *)(v3 + *(int *)(type metadata accessor for DatasetColumnDescription(0) + 28)) == 1)
    {
      v10[13] = 2;
      sub_259F68BC0();
    }
    v10[14] = 3;
    type metadata accessor for DatasetColumnType(0);
    sub_259F3C508(&qword_26A3FA780, (void (*)(uint64_t))type metadata accessor for DatasetColumnType);
    sub_259F68BF0();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_259F3C3F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DatasetColumnDescription.init(from:)(a1, a2);
}

uint64_t sub_259F3C40C(void *a1)
{
  return DatasetColumnDescription.encode(to:)(a1);
}

uint64_t _s12PoirotBlocks17DatasetColumnTypeV2eeoiySbAC_ACtFZ_0()
{
  sub_259F68240();
  sub_259F3C508(&qword_26A3FA758, MEMORY[0x263F5F010]);
  sub_259F68740();
  sub_259F68740();
  if (v5 == v3 && v6 == v4) {
    char v1 = 1;
  }
  else {
    char v1 = sub_259F68C70();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_259F3C508(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_259F3C550(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_259F3C5B8()
{
  unint64_t result = qword_26A3FA768;
  if (!qword_26A3FA768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA768);
  }
  return result;
}

uint64_t sub_259F3C60C()
{
  return sub_259F3C508(&qword_26A3FA788, (void (*)(uint64_t))type metadata accessor for DatasetColumnType);
}

unint64_t sub_259F3C658()
{
  unint64_t result = qword_26A3FA790;
  if (!qword_26A3FA790)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A3FA798);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA790);
  }
  return result;
}

uint64_t sub_259F3C6B4()
{
  return sub_259F3C508(&qword_26A3FA7A0, (void (*)(uint64_t))type metadata accessor for DatasetColumnDescription);
}

uint64_t sub_259F3C6FC()
{
  return sub_259F3C508((unint64_t *)&qword_26A3FA3F8, (void (*)(uint64_t))type metadata accessor for DatasetColumnDescription);
}

uint64_t initializeBufferWithCopyOfBuffer for DatasetColumnType(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_259F68240();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for DatasetColumnType(uint64_t a1)
{
  uint64_t v2 = sub_259F68240();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for DatasetColumnType(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_259F68240();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for DatasetColumnType(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_259F68240();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for DatasetColumnType(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_259F68240();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for DatasetColumnType(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_259F68240();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for DatasetColumnType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_259F3C9B8);
}

uint64_t sub_259F3C9B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_259F68240();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DatasetColumnType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_259F3CA38);
}

uint64_t sub_259F3CA38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_259F68240();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_259F3CAA8()
{
  uint64_t result = sub_259F68240();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for DatasetColumnDescription(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_259F68240();
    char v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *((unsigned char *)v4 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

uint64_t destroy for DatasetColumnDescription(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_259F68240();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for DatasetColumnDescription(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_259F68240();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 28)) = *(unsigned char *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t assignWithCopy for DatasetColumnDescription(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_259F68240();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(unsigned char *)(a1 + *(int *)(a3 + 28)) = *(unsigned char *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t initializeWithTake for DatasetColumnDescription(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_259F68240();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(unsigned char *)(a1 + *(int *)(a3 + 28)) = *(unsigned char *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t assignWithTake for DatasetColumnDescription(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_259F68240();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 28)) = *(unsigned char *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t getEnumTagSinglePayload for DatasetColumnDescription(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_259F3CF88);
}

uint64_t sub_259F3CF88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for DatasetColumnType(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for DatasetColumnDescription(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_259F3D04C);
}

uint64_t sub_259F3D04C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for DatasetColumnType(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_259F3D0F4()
{
  uint64_t result = sub_259F68240();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DatasetColumnDescription.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259F3D260);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DatasetColumnDescription.CodingKeys()
{
  return &type metadata for DatasetColumnDescription.CodingKeys;
}

unint64_t sub_259F3D29C()
{
  unint64_t result = qword_26A3FA7C8;
  if (!qword_26A3FA7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA7C8);
  }
  return result;
}

unint64_t sub_259F3D2F4()
{
  unint64_t result = qword_26A3FA7D0;
  if (!qword_26A3FA7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA7D0);
  }
  return result;
}

unint64_t sub_259F3D34C()
{
  unint64_t result = qword_26A3FA7D8;
  if (!qword_26A3FA7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA7D8);
  }
  return result;
}

uint64_t sub_259F3D3A0()
{
  unint64_t v0 = sub_259F68AE0();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t AutomaticDSCFileProtobufFactory.dscUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC12PoirotBlocks31AutomaticDSCFileProtobufFactory_dscUrl;
  uint64_t v4 = sub_259F67F30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t AutomaticDSCFileProtobufFactory.updateFileAutomatically.getter()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC12PoirotBlocks31AutomaticDSCFileProtobufFactory_updateFileAutomatically);
}

uint64_t AutomaticDSCFileProtobufFactory.__allocating_init(dscUrl:updateFileAutomatically:messageNameMap:columnsLayout:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return AutomaticDSCFileProtobufFactory.init(dscUrl:updateFileAutomatically:messageNameMap:columnsLayout:)(a1, a2, a3, a4);
}

uint64_t AutomaticDSCFileProtobufFactory.init(dscUrl:updateFileAutomatically:messageNameMap:columnsLayout:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v5;
  uint64_t v7 = v4;
  uint64_t v40 = a4;
  uint64_t v41 = a3;
  uint64_t v35 = sub_259F684E0();
  uint64_t v38 = *(void *)(v35 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v35);
  uint64_t v37 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v35 - v12;
  uint64_t v14 = v7 + OBJC_IVAR____TtC12PoirotBlocks31AutomaticDSCFileProtobufFactory_dscUrl;
  uint64_t v15 = sub_259F67F30();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v16 + 16);
  uint64_t v39 = v15;
  v17(v14, a1);
  int v36 = a2;
  *(unsigned char *)(v7 + OBJC_IVAR____TtC12PoirotBlocks31AutomaticDSCFileProtobufFactory_updateFileAutomatically) = a2;
  id v18 = objc_msgSend(self, sel_defaultManager);
  sub_259F67F00();
  uint64_t v19 = (void *)sub_259F68620();
  swift_bridgeObjectRelease();
  unsigned int v20 = objc_msgSend(v18, sel_fileExistsAtPath_, v19);

  if (v20)
  {
    sub_259F67F40();
    if (v5)
    {
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      uint64_t v22 = a1;
      uint64_t v23 = v39;
      v21(v22, v39);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v21(v14, v23);
      type metadata accessor for AutomaticDSCFileProtobufFactory();
      swift_deallocPartialClassInstance();
      return v7;
    }
    sub_259F68470();
    uint64_t v6 = 0;
  }
  else
  {
    sub_259F68480();
  }
  uint64_t v24 = AutomaticProtobufFactory.init(manifest:messageNameMap:columnsLayout:)((uint64_t)v13, v41, v40);
  char v25 = v37;
  uint64_t v26 = v38;
  if (v6)
  {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, v39);
  }
  else
  {
    uint64_t v7 = v24;
    if ((v36 & 1) != 0 && (swift_beginAccess(), *(unsigned char *)(v7 + 24) == 1))
    {
      uint64_t v28 = *(void *)(v7 + 16) + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
      swift_beginAccess();
      uint64_t v29 = v35;
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v25, v28, v35);
      swift_retain();
      uint64_t v30 = sub_259F684D0();
      uint64_t v31 = v25;
      uint64_t v32 = v30;
      unint64_t v34 = v33;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v31, v29);
      sub_259F67F80();
      sub_259F21768(v32, v34);
      *(unsigned char *)(v7 + 24) = 0;
    }
    else
    {
      swift_retain();
    }
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, v39);
    swift_release();
  }
  return v7;
}

uint64_t AutomaticDSCFileProtobufFactory.__allocating_init(dscUrl:updateFileAutomatically:messageNameMap:allColumnsArePivots:)(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return AutomaticDSCFileProtobufFactory.init(dscUrl:updateFileAutomatically:messageNameMap:allColumnsArePivots:)(a1, a2, a3, a4);
}

uint64_t AutomaticDSCFileProtobufFactory.init(dscUrl:updateFileAutomatically:messageNameMap:allColumnsArePivots:)(uint64_t a1, int a2, uint64_t a3, int a4)
{
  uint64_t v6 = v5;
  uint64_t v7 = v4;
  int v40 = a4;
  uint64_t v42 = a3;
  uint64_t v10 = sub_259F684E0();
  uint64_t v37 = *(void *)(v10 - 8);
  uint64_t v38 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  int v36 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v35 - v13;
  uint64_t v15 = v7 + OBJC_IVAR____TtC12PoirotBlocks31AutomaticDSCFileProtobufFactory_dscUrl;
  uint64_t v16 = sub_259F67F30();
  uint64_t v17 = *(void *)(v16 - 8);
  id v18 = *(void (**)(uint64_t, uint64_t))(v17 + 16);
  uint64_t v41 = v16;
  v18(v15, a1);
  int v39 = a2;
  *(unsigned char *)(v7 + OBJC_IVAR____TtC12PoirotBlocks31AutomaticDSCFileProtobufFactory_updateFileAutomatically) = a2;
  id v19 = objc_msgSend(self, sel_defaultManager);
  sub_259F67F00();
  unsigned int v20 = (void *)sub_259F68620();
  swift_bridgeObjectRelease();
  unsigned int v21 = objc_msgSend(v19, sel_fileExistsAtPath_, v20);

  if (v21)
  {
    sub_259F67F40();
    uint64_t v22 = a1;
    if (v5)
    {
      uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      uint64_t v24 = a1;
      uint64_t v25 = v41;
      v23(v24, v41);
      swift_bridgeObjectRelease();
      v23(v15, v25);
      type metadata accessor for AutomaticDSCFileProtobufFactory();
      swift_deallocPartialClassInstance();
      return v7;
    }
    sub_259F68470();
    uint64_t v6 = 0;
  }
  else
  {
    sub_259F68480();
    uint64_t v22 = a1;
  }
  uint64_t v26 = AutomaticProtobufFactory.init(manifest:messageNameMap:allColumnsArePivots:)((uint64_t)v14, v42, v40 & 1);
  if (v6)
  {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v22, v41);
  }
  else
  {
    uint64_t v7 = v26;
    if ((v39 & 1) != 0 && (swift_beginAccess(), *(unsigned char *)(v7 + 24) == 1))
    {
      uint64_t v28 = *(void *)(v7 + 16) + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
      swift_beginAccess();
      uint64_t v29 = v36;
      uint64_t v30 = v37;
      uint64_t v31 = v38;
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v36, v28, v38);
      swift_retain();
      uint64_t v42 = sub_259F684D0();
      unint64_t v33 = v32;
      (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v31);
      uint64_t v34 = v42;
      sub_259F67F80();
      sub_259F21768(v34, v33);
      *(unsigned char *)(v7 + 24) = 0;
    }
    else
    {
      swift_retain();
    }
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v22, v41);
    swift_release();
  }
  return v7;
}

uint64_t sub_259F3DDC4()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_259F684E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = swift_beginAccess();
  if (*(unsigned char *)(v2 + 24) == 1)
  {
    uint64_t v8 = *(void *)(v2 + 16) + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
    swift_beginAccess();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v6, v8, v3);
    uint64_t v9 = sub_259F684D0();
    if (v1)
    {
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    }
    else
    {
      uint64_t v11 = v9;
      unint64_t v12 = v10;
      (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
      sub_259F67F80();
      uint64_t result = sub_259F21768(v11, v12);
      *(unsigned char *)(v2 + 24) = 0;
    }
  }
  return result;
}

uint64_t sub_259F3DF74(uint64_t *a1)
{
  uint64_t v3 = v1;
  uint64_t v24 = sub_259F684E0();
  uint64_t v20 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v21 = *a1;
  uint64_t v22 = v8;
  uint64_t v23 = v9;
  uint64_t v10 = *(void *)(v3 + 16);
  uint64_t v11 = *(void *)(v10 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_messageNameMap);
  swift_bridgeObjectRetain();
  sub_259F628E0(&v21, v11);
  swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t v21 = v7;
    uint64_t v22 = v8;
    uint64_t v23 = v9;
    uint64_t v11 = sub_259F165B8(&v21);
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC12PoirotBlocks31AutomaticDSCFileProtobufFactory_updateFileAutomatically) == 1)
    {
      swift_beginAccess();
      if (*(unsigned char *)(v3 + 24) == 1)
      {
        id v19 = (unsigned char *)(v3 + 24);
        uint64_t v13 = v10 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
        swift_beginAccess();
        uint64_t v14 = v20;
        uint64_t v15 = v24;
        (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v6, v13, v24);
        uint64_t v16 = sub_259F684D0();
        unint64_t v18 = v17;
        (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v15);
        sub_259F67F80();
        sub_259F21768(v16, v18);
        *id v19 = 0;
      }
    }
  }
  return v11;
}

void AutomaticDSCFileProtobufFactory.__allocating_init(manifest:messageNameMap:allColumnsArePivots:)()
{
}

void AutomaticDSCFileProtobufFactory.init(manifest:messageNameMap:allColumnsArePivots:)()
{
}

void AutomaticDSCFileProtobufFactory.__allocating_init(manifest:messageNameMap:columnsLayout:)()
{
}

void AutomaticDSCFileProtobufFactory.init(manifest:messageNameMap:columnsLayout:)()
{
}

uint64_t sub_259F3E2A8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12PoirotBlocks31AutomaticDSCFileProtobufFactory_dscUrl;
  uint64_t v2 = sub_259F67F30();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(v1, v2);
}

uint64_t AutomaticDSCFileProtobufFactory.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC12PoirotBlocks31AutomaticDSCFileProtobufFactory_dscUrl;
  uint64_t v2 = sub_259F67F30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t AutomaticDSCFileProtobufFactory.__deallocating_deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC12PoirotBlocks31AutomaticDSCFileProtobufFactory_dscUrl;
  uint64_t v2 = sub_259F67F30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t type metadata accessor for AutomaticDSCFileProtobufFactory()
{
  uint64_t result = qword_26A3FA7E0;
  if (!qword_26A3FA7E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_259F3E474()
{
  return type metadata accessor for AutomaticDSCFileProtobufFactory();
}

uint64_t sub_259F3E47C()
{
  uint64_t result = sub_259F67F30();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for AutomaticDSCFileProtobufFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AutomaticDSCFileProtobufFactory);
}

uint64_t dispatch thunk of AutomaticDSCFileProtobufFactory.__allocating_init(dscUrl:updateFileAutomatically:messageNameMap:columnsLayout:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of AutomaticDSCFileProtobufFactory.__allocating_init(dscUrl:updateFileAutomatically:messageNameMap:allColumnsArePivots:)()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of AutomaticDSCFileProtobufFactory.updateManifestFileIfNeeded()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t sub_259F3E5B4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = a5;
  uint64_t v15 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA800);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F3ED70();
  sub_259F68E20();
  LOBYTE(v17) = 0;
  sub_259F68BB0();
  if (!v5)
  {
    uint64_t v11 = v14;
    uint64_t v17 = v15;
    char v16 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA130);
    sub_259F145E8(&qword_26A3FA138);
    sub_259F68BF0();
    uint64_t v17 = v11;
    char v16 = 2;
    sub_259F68BF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_259F3E7A8()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 != 1) {
    unint64_t v1 = 0x73746F7669506E6FLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_259F3E800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_259F3F280(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_259F3E828(uint64_t a1)
{
  unint64_t v2 = sub_259F3ED70();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_259F3E864(uint64_t a1)
{
  unint64_t v2 = sub_259F3ED70();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_259F3E8A0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_259F3EA88(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_259F3E8D0(void *a1)
{
  return sub_259F3E5B4(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_259F3E8F0(void *a1, void *a2)
{
  uint64_t v2 = (void *)a1[2];
  uint64_t v3 = (void *)a1[3];
  uint64_t v5 = (void *)a2[2];
  uint64_t v4 = (void *)a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (!v6 && (sub_259F68C70() & 1) == 0 || (sub_259F2D818(v2, v5) & 1) == 0) {
    return 0;
  }
  return sub_259F2D818(v3, v4);
}

uint64_t sub_259F3E984(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)(a3[1] + 8) + 8))(a2);
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  (*(void (**)(uint64_t))(a3[2] + 8))(a2);
  (*(void (**)(void))(v7 + 8))();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(a3[3] + 8))(a2);
  return v6;
}

uint64_t sub_259F3EA88(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA7F0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F3ED70();
  sub_259F68DF0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    LOBYTE(v12) = 0;
    uint64_t v7 = sub_259F68B40();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA130);
    char v11 = 1;
    uint64_t v9 = sub_259F145E8(&qword_26A3FA160);
    swift_bridgeObjectRetain();
    uint64_t v10 = v9;
    sub_259F68B60();
    char v11 = 2;
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    sub_259F68B60();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_259F3ED70()
{
  unint64_t result = qword_26A3FA7F8;
  if (!qword_26A3FA7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA7F8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for JoinBlockConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259F3EE90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JoinBlockConfig.CodingKeys()
{
  return &type metadata for JoinBlockConfig.CodingKeys;
}

uint64_t destroy for JoinBlockConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for JoinBlockConfig(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for JoinBlockConfig(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for JoinBlockConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for JoinBlockConfig()
{
  return &type metadata for JoinBlockConfig;
}

unint64_t sub_259F3F044(void *a1)
{
  a1[1] = sub_259F3F07C();
  a1[2] = sub_259F3F0D0();
  unint64_t result = sub_259F3F124();
  a1[3] = result;
  return result;
}

unint64_t sub_259F3F07C()
{
  unint64_t result = qword_26A3FA808;
  if (!qword_26A3FA808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA808);
  }
  return result;
}

unint64_t sub_259F3F0D0()
{
  unint64_t result = qword_26A3FA810;
  if (!qword_26A3FA810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA810);
  }
  return result;
}

unint64_t sub_259F3F124()
{
  unint64_t result = qword_26A3FA818;
  if (!qword_26A3FA818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA818);
  }
  return result;
}

unint64_t sub_259F3F17C()
{
  unint64_t result = qword_26A3FA820;
  if (!qword_26A3FA820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA820);
  }
  return result;
}

unint64_t sub_259F3F1D4()
{
  unint64_t result = qword_26A3FA828;
  if (!qword_26A3FA828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA828);
  }
  return result;
}

unint64_t sub_259F3F22C()
{
  unint64_t result = qword_26A3FA830;
  if (!qword_26A3FA830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA830);
  }
  return result;
}

uint64_t sub_259F3F280(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000259F6A050 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73746F7669506E6FLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_259F68C70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_259F3F3C0(uint64_t *a1)
{
  uint64_t v3 = v2;
  uint64_t v89 = *MEMORY[0x263EF8340];
  uint64_t v81 = sub_259F67E70();
  uint64_t v84 = *(void *)(v81 - 8);
  MEMORY[0x270FA5388](v81);
  char v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_259F67F30();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v79 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v67 = (char *)&v63 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v63 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (unint64_t *)((char *)&v63 - v16);
  uint64_t v18 = *a1;
  uint64_t v85 = a1[2];
  uint64_t v83 = a1[4];
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v15, v1 + OBJC_IVAR____TtC12PoirotBlocks10FileLogger_directory, v19);
  uint64_t v86 = v18;
  id v87 = (id)sub_259F68C20();
  uint64_t v88 = v21;
  sub_259F686F0();
  swift_bridgeObjectRetain();
  sub_259F686F0();
  uint64_t v22 = v20;
  swift_bridgeObjectRelease();
  uint64_t v23 = v84;
  uint64_t v24 = *(void (**)(void))(v84 + 104);
  unsigned int v78 = *MEMORY[0x263F06E50];
  uint64_t v25 = v81;
  uint64_t v76 = (void (*)(char *, void, uint64_t))v24;
  uint64_t v77 = v84 + 104;
  v24(v6);
  unint64_t v75 = sub_259F2BFE0();
  sub_259F67F10();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v23 + 8);
  int64_t v80 = v6;
  uint64_t v84 = v23 + 8;
  uint64_t v74 = v26;
  v26(v6, v25);
  swift_bridgeObjectRelease();
  uint64_t v29 = *(uint64_t (**)(unint64_t *, uint64_t))(v8 + 8);
  uint64_t v28 = v8 + 8;
  char v27 = v29;
  v29((unint64_t *)v15, v22);
  id v30 = objc_msgSend(self, sel_defaultManager);
  uint64_t v31 = (void *)sub_259F67EC0();
  id v87 = 0;
  LODWORD(v6) = objc_msgSend(v30, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v31, 1, 0, &v87);

  if (!v6)
  {
    id v59 = v87;
    sub_259F67E20();

    swift_willThrow();
    return v27(v17, v22);
  }
  id v32 = v87;
  uint64_t v33 = sub_259F3FF14(v83);
  int64_t v34 = 0;
  uint64_t v35 = *(void *)(v33 + 64);
  uint64_t v64 = v33 + 64;
  uint64_t v66 = v33;
  uint64_t v36 = 1 << *(unsigned char *)(v33 + 32);
  uint64_t v37 = -1;
  if (v36 < 64) {
    uint64_t v37 = ~(-1 << v36);
  }
  unint64_t v38 = v37 & v35;
  int64_t v65 = (unint64_t)(v36 + 63) >> 6;
  uint64_t v39 = v22;
  uint64_t v82 = v17;
  uint64_t v83 = v28;
  uint64_t v40 = (uint64_t)v67;
  uint64_t v41 = (void (*)(char *, uint64_t))v27;
  uint64_t v71 = (void (*)(char *, uint64_t))v27;
  uint64_t v72 = v39;
  if (!v38) {
    goto LABEL_6;
  }
LABEL_5:
  uint64_t v69 = (v38 - 1) & v38;
  int64_t v70 = v34;
  for (unint64_t i = __clz(__rbit64(v38)) | (v34 << 6); ; unint64_t i = __clz(__rbit64(v45)) + (v44 << 6))
  {
    uint64_t v47 = *(void *)(*(void *)(v66 + 48) + 16 * i + 8);
    long long v48 = *(void **)(*(void *)(v66 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v49 = (unint64_t)v17;
    sub_259F67EE0();
    swift_bridgeObjectRelease();
    uint64_t v50 = v48[2];
    if (!v50)
    {
      uint64_t v68 = v48;
LABEL_28:
      uint64_t v40 = (uint64_t)v67;
      v41(v67, v39);
      swift_bridgeObjectRelease();
      uint64_t v17 = v82;
      goto LABEL_29;
    }
    if (v50 != 1) {
      break;
    }
    unint64_t v49 = v48[8];
    if (v49 >> 60 == 15) {
      break;
    }
    uint64_t v47 = v48[7];
    sub_259F21710(v47, v48[8]);
    swift_bridgeObjectRelease();
    sub_259F67F80();
    if (v3) {
      goto LABEL_40;
    }
    v41((char *)v40, v39);
    sub_259F4027C(v47, v49);
LABEL_29:
    unint64_t v38 = v69;
    int64_t v34 = v70;
    if (v69) {
      goto LABEL_5;
    }
LABEL_6:
    BOOL v43 = __OFADD__(v34, 1);
    int64_t v44 = v34 + 1;
    if (v43)
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v44 >= v65) {
      goto LABEL_38;
    }
    unint64_t v45 = *(void *)(v64 + 8 * v44);
    if (!v45)
    {
      int64_t v46 = v44 + 1;
      if (v44 + 1 >= v65) {
        goto LABEL_38;
      }
      unint64_t v45 = *(void *)(v64 + 8 * v46);
      if (!v45)
      {
        int64_t v46 = v44 + 2;
        if (v44 + 2 >= v65) {
          goto LABEL_38;
        }
        unint64_t v45 = *(void *)(v64 + 8 * v46);
        if (!v45)
        {
          int64_t v46 = v44 + 3;
          if (v44 + 3 >= v65)
          {
LABEL_38:
            swift_release();
            return ((uint64_t (*)(unint64_t *, uint64_t))v41)(v17, v39);
          }
          unint64_t v45 = *(void *)(v64 + 8 * v46);
          if (!v45)
          {
            while (1)
            {
              int64_t v44 = v46 + 1;
              if (__OFADD__(v46, 1)) {
                break;
              }
              if (v44 >= v65) {
                goto LABEL_38;
              }
              unint64_t v45 = *(void *)(v64 + 8 * v44);
              ++v46;
              if (v45) {
                goto LABEL_16;
              }
            }
LABEL_42:
            __break(1u);
          }
        }
      }
      int64_t v44 = v46;
    }
LABEL_16:
    uint64_t v69 = (v45 - 1) & v45;
    int64_t v70 = v44;
  }
  BOOL v51 = v48;
  uint64_t v52 = 0;
  uint64_t v68 = v51;
  uint64_t v17 = v51 + 8;
  uint64_t v73 = v50;
  while (v50 != v52)
  {
    unint64_t v53 = *v17;
    if (*v17 >> 60 != 15)
    {
      uint64_t v85 = v3;
      uint64_t v40 = *(v17 - 1);
      uint64_t v47 = *(v17 - 3);
      id v87 = (id)*(v17 - 4);
      uint64_t v88 = v47;
      uint64_t v86 = v52;
      swift_bridgeObjectRetain_n();
      sub_259F40268(v40, v53);
      sub_259F40268(v40, v53);
      sub_259F68C20();
      sub_259F686F0();
      swift_bridgeObjectRelease();
      sub_259F686F0();
      swift_bridgeObjectRelease();
      uint64_t v55 = v80;
      uint64_t v54 = v81;
      v76(v80, v78, v81);
      uint64_t v56 = v79;
      unint64_t v49 = (unint64_t)v82;
      sub_259F67F10();
      v74(v55, v54);
      swift_bridgeObjectRelease();
      uint64_t v57 = v85;
      sub_259F67F80();
      uint64_t v3 = v57;
      uint64_t v58 = v56;
      if (v57)
      {
        uint64_t v61 = v71;
        uint64_t v60 = v72;
        v71(v56, v72);
        sub_259F4027C(v40, v53);
        swift_bridgeObjectRelease();
        sub_259F4027C(v40, v53);
        swift_bridgeObjectRelease();
        v61(v67, v60);
        swift_release();
        return ((uint64_t (*)(unint64_t *, uint64_t))v61)(v82, v60);
      }
      uint64_t v41 = v71;
      uint64_t v39 = v72;
      v71(v58, v72);
      sub_259F4027C(v40, v53);
      swift_bridgeObjectRelease();
      sub_259F4027C(v40, v53);
      uint64_t v50 = v73;
    }
    ++v52;
    v17 += 5;
    if (v50 == v52) {
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_40:
  sub_259F4027C(v47, v49);
  v41((char *)v40, v39);
  swift_release();
  return ((uint64_t (*)(unint64_t *, uint64_t))v41)(v17, v39);
}

void sub_259F3FCAC(void *a1@<X8>)
{
  *a1 = MEMORY[0x263F8EE78];
}

uint64_t sub_259F3FCBC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12PoirotBlocks10FileLogger_directory;
  uint64_t v2 = sub_259F67F30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t sub_259F3FD5C()
{
  return type metadata accessor for FileLogger();
}

uint64_t type metadata accessor for FileLogger()
{
  uint64_t result = qword_26A3FA840;
  if (!qword_26A3FA840) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_259F3FDB0()
{
  uint64_t result = sub_259F67F30();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_259F3FE40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)a4;
  char v8 = *(unsigned char *)(a4 + 8);
  uint64_t v10 = *(void *)(a4 + 16);
  uint64_t v9 = *(void *)(a4 + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v13 = a1;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(ObjectType, a3);
  if (!v4)
  {
    uint64_t v13 = v7;
    char v14 = v8;
    uint64_t v15 = v10;
    uint64_t v16 = v9;
    uint64_t v17 = result;
    swift_bridgeObjectRetain();
    sub_259F3F3C0(&v13);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_259F3FF14(uint64_t a1)
{
  uint64_t v2 = (void *)sub_259F21D68(MEMORY[0x263F8EE78]);
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v5 = (unint64_t *)(a1 + 64);
    while (1)
    {
      uint64_t v6 = *(v5 - 3);
      uint64_t v7 = *(v5 - 1);
      unint64_t v8 = *v5;
      uint64_t v33 = v3;
      uint64_t v34 = *(v5 - 4);
      uint64_t v31 = v5 + 5;
      char v30 = *((unsigned char *)v5 - 16);
      swift_bridgeObjectRetain_n();
      sub_259F40268(v7, v8);
      sub_259F686F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v32 = v7;
      sub_259F40268(v7, v8);
      sub_259F40290((uint64_t)v4);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v11 = sub_259F17068(v34, v6);
      uint64_t v12 = v2[2];
      BOOL v13 = (v10 & 1) == 0;
      uint64_t v14 = v12 + v13;
      if (__OFADD__(v12, v13)) {
        break;
      }
      char v15 = v10;
      if (v2[3] >= v14)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_259F2562C();
        }
      }
      else
      {
        sub_259F19068(v14, isUniquelyReferenced_nonNull_native);
        unint64_t v16 = sub_259F17068(v34, v6);
        if ((v15 & 1) != (v17 & 1)) {
          goto LABEL_25;
        }
        unint64_t v11 = v16;
      }
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
      {
        v2[(v11 >> 6) + 8] |= 1 << v11;
        uint64_t v18 = (uint64_t *)(v2[6] + 16 * v11);
        *uint64_t v18 = v34;
        v18[1] = v6;
        *(void *)(v2[7] + 8 * v11) = MEMORY[0x263F8EE78];
        uint64_t v19 = v2[2];
        uint64_t v20 = v19 + 1;
        BOOL v21 = __OFADD__(v19, 1);
        swift_bridgeObjectRetain();
        if (v21) {
          goto LABEL_24;
        }
        v2[2] = v20;
      }
      swift_bridgeObjectRetain();
      uint64_t v22 = v2[7];
      swift_bridgeObjectRelease();
      uint64_t v23 = *(void **)(v22 + 8 * v11);
      char v24 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v22 + 8 * v11) = v23;
      if ((v24 & 1) == 0)
      {
        uint64_t v23 = sub_259F2E520(0, v23[2] + 1, 1, v23);
        *(void *)(v22 + 8 * v11) = v23;
      }
      unint64_t v26 = v23[2];
      unint64_t v25 = v23[3];
      if (v26 >= v25 >> 1)
      {
        uint64_t v23 = sub_259F2E520((void *)(v25 > 1), v26 + 1, 1, v23);
        *(void *)(v22 + 8 * v11) = v23;
      }
      uint64_t v5 = v31;
      v23[2] = v26 + 1;
      char v27 = &v23[5 * v26];
      v27[4] = v34;
      v27[5] = v6;
      *((unsigned char *)v27 + 48) = v30;
      v27[7] = v32;
      v27[8] = v8;
      swift_bridgeObjectRelease();
      sub_259F4027C(v32, v8);
      swift_bridgeObjectRelease();
      uint64_t v4 = sub_259F3FCAC;
      uint64_t v3 = v33 - 1;
      if (v33 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v28 = sub_259F3FCAC;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    uint64_t result = sub_259F68D30();
    __break(1u);
  }
  else
  {
    uint64_t v28 = 0;
LABEL_22:
    sub_259F40290((uint64_t)v28);
    return (uint64_t)v2;
  }
  return result;
}

uint64_t sub_259F40268(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_259F21710(a1, a2);
  }
  return a1;
}

uint64_t sub_259F4027C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_259F21768(a1, a2);
  }
  return a1;
}

uint64_t sub_259F40290(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_259F402A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  return a9();
}

uint64_t sub_259F402C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_259F402F0()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t type metadata accessor for DefaultActivityMonitor()
{
  return self;
}

uint64_t sub_259F40324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  return sub_259F402A0(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_259F4034C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return sub_259F402C8(a1, a2, a3, a4, a5);
}

ValueMetadata *type metadata accessor for OutputStreamToStdErr()
{
  return &type metadata for OutputStreamToStdErr;
}

ValueMetadata *type metadata accessor for OutputStreamToStdOut()
{
  return &type metadata for OutputStreamToStdOut;
}

uint64_t sub_259F4038C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_259F403C0(a1, a2, a3, a4, MEMORY[0x263F90200]);
}

uint64_t sub_259F403A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_259F403C0(a1, a2, a3, a4, MEMORY[0x263F90208]);
}

uint64_t sub_259F403C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = (FILE *)a5();
  uint64_t v6 = sub_259F686C0();
  fputs((const char *)(v6 + 32), v5);
  return swift_release();
}

PoirotBlocks::BlockActivityType_optional __swiftcall BlockActivityType.init(rawValue:)(Swift::UInt rawValue)
{
  unint64_t v2 = 0x20100030303uLL >> (8 * rawValue);
  if (rawValue >= 6) {
    LOBYTE(v2) = 3;
  }
  *unint64_t v1 = v2;
  return (PoirotBlocks::BlockActivityType_optional)rawValue;
}

uint64_t BlockActivityType.rawValue.getter()
{
  return *v0 + 3;
}

uint64_t sub_259F4045C()
{
  return sub_259F68DC0();
}

uint64_t sub_259F404A4()
{
  return sub_259F68DB0();
}

uint64_t sub_259F404D4()
{
  return sub_259F68DC0();
}

PoirotBlocks::BlockActivityType_optional sub_259F40518(Swift::UInt *a1)
{
  return BlockActivityType.init(rawValue:)(*a1);
}

void sub_259F40520(void *a1@<X8>)
{
  *a1 = *v1 + 3;
}

PoirotBlocks::EngineActivityType_optional __swiftcall EngineActivityType.init(rawValue:)(Swift::UInt rawValue)
{
  unint64_t v2 = 0x30201040004uLL >> (8 * rawValue);
  if (rawValue >= 6) {
    LOBYTE(v2) = 4;
  }
  *unint64_t v1 = v2;
  return (PoirotBlocks::EngineActivityType_optional)rawValue;
}

uint64_t EngineActivityType.rawValue.getter()
{
  return qword_259F6D328[*v0];
}

unint64_t sub_259F40570()
{
  unint64_t result = qword_26A3FA850;
  if (!qword_26A3FA850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA850);
  }
  return result;
}

BOOL sub_259F405C4(char *a1, char *a2)
{
  return qword_259F6D328[*a1] == qword_259F6D328[*a2];
}

unint64_t sub_259F405EC()
{
  unint64_t result = qword_26A3FA858;
  if (!qword_26A3FA858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA858);
  }
  return result;
}

uint64_t sub_259F40640()
{
  return sub_259F68DC0();
}

uint64_t sub_259F40690()
{
  return sub_259F68DB0();
}

uint64_t sub_259F406C8()
{
  return sub_259F68DC0();
}

PoirotBlocks::EngineActivityType_optional sub_259F40714(Swift::UInt *a1)
{
  return EngineActivityType.init(rawValue:)(*a1);
}

void sub_259F4071C(void *a1@<X8>)
{
  *a1 = qword_259F6D328[*v1];
}

unsigned char *storeEnumTagSinglePayload for BlockActivityType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259F40800);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BlockActivityType()
{
  return &type metadata for BlockActivityType;
}

unsigned char *storeEnumTagSinglePayload for EngineActivityType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259F40904);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EngineActivityType()
{
  return &type metadata for EngineActivityType;
}

uint64_t dispatch thunk of ActivityMonitoring.measure<A>(blockActivity:recipeIdentifier:recipeVersion:blockType:blockName:blockID:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a13 + 8))(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of ActivityMonitoring.measure<A>(engineActivity:recipeIdentifier:recipeVersion:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t))(a9 + 16))(a1);
}

void *sub_259F409C4(void (*a1)(_OWORD *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  void (*v34)(_OWORD *__return_ptr, char *);
  long long v35;
  long long v36;
  long long v37;
  uint64_t v38;
  _OWORD v39[3];
  uint64_t v40;
  void *v41;

  uint64_t v34 = a1;
  uint64_t v5 = sub_259F68200();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v27 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA890);
  MEMORY[0x270FA5388](v8 - 8);
  char v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a3 + 16);
  if (v11)
  {
    BOOL v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v12 = v6 + 16;
    uint64_t v33 = v13;
    uint64_t v14 = a3 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    uint64_t v28 = *(void *)(v12 + 56);
    char v30 = (void (**)(char *, char *, uint64_t))(v12 + 16);
    uint64_t v31 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v29 = (void (**)(char *, uint64_t))(v12 - 8);
    _OWORD v26[2] = a3;
    swift_bridgeObjectRetain();
    uint64_t v41 = (void *)MEMORY[0x263F8EE78];
    uint64_t v32 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 40);
    v26[1] = (v12 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    void v26[3] = v12;
    char v15 = v27;
    while (1)
    {
      v33(v10, v14, v5);
      unint64_t v16 = *v32;
      (*v32)(v10, 0, 1, v5);
      if ((*v31)(v10, 1, v5) == 1) {
        break;
      }
      (*v30)(v15, v10, v5);
      v34(v39, v15);
      if (v3)
      {
        (*v29)(v15, v5);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v41;
      }
      (*v29)(v15, v5);
      if (*((void *)&v39[0] + 1))
      {
        uint64_t v35 = v39[0];
        uint64_t v36 = v39[1];
        uint64_t v37 = v39[2];
        unint64_t v38 = v40;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v41 = sub_259F2EAD8(0, v41[2] + 1, 1, v41);
        }
        unint64_t v18 = v41[2];
        unint64_t v17 = v41[3];
        if (v18 >= v17 >> 1) {
          uint64_t v41 = sub_259F2EAD8((void *)(v17 > 1), v18 + 1, 1, v41);
        }
        uint64_t v19 = v41;
        void v41[2] = v18 + 1;
        uint64_t v20 = &v19[7 * v18];
        long long v21 = v35;
        long long v22 = v36;
        long long v23 = v37;
        v20[10] = v38;
        *((_OWORD *)v20 + 3) = v22;
        *((_OWORD *)v20 + 4) = v23;
        *((_OWORD *)v20 + 2) = v21;
        char v15 = v27;
      }
      else
      {
        sub_259F17838((uint64_t)v39, &qword_26A3FA898);
      }
      v14 += v28;
      if (!--v11)
      {
        v16(v10, 1, 1, v5);
        break;
      }
    }
  }
  else
  {
    char v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    uint64_t v41 = (void *)MEMORY[0x263F8EE78];
    v24(v10, 1, 1, v5);
  }
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_259F40D9C(void *a1, void *a2)
{
  uint64_t v3 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v4 = sub_259F37958(v3);
  uint64_t v6 = v5;
  uint64_t v7 = a2[3];
  __swift_project_boxed_opaque_existential_1(a2, v7);
  if (v4 == sub_259F37958(v7) && v6 == v8) {
    char v10 = 0;
  }
  else {
    char v10 = sub_259F68C70();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_259F40E64(void *a1, void *a2)
{
  uint64_t v3 = a2[3];
  __swift_project_boxed_opaque_existential_1(a2, v3);
  uint64_t v4 = sub_259F37958(v3);
  uint64_t v6 = v5;
  uint64_t v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  if (v4 == sub_259F37958(v7) && v6 == v8)
  {
    swift_bridgeObjectRelease_n();
    char v11 = 1;
  }
  else
  {
    char v10 = sub_259F68C70();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v11 = v10 ^ 1;
  }
  return v11 & 1;
}

uint64_t sub_259F40F3C(void *a1, void *a2)
{
  uint64_t v3 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v4 = sub_259F37958(v3);
  uint64_t v6 = v5;
  uint64_t v7 = a2[3];
  __swift_project_boxed_opaque_existential_1(a2, v7);
  if (v4 == sub_259F37958(v7) && v6 == v8)
  {
    swift_bridgeObjectRelease_n();
    char v11 = 1;
  }
  else
  {
    char v10 = sub_259F68C70();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v11 = v10 ^ 1;
  }
  return v11 & 1;
}

uint64_t sub_259F41010(void *a1, void *a2)
{
  uint64_t v3 = a2[3];
  __swift_project_boxed_opaque_existential_1(a2, v3);
  uint64_t v4 = sub_259F37958(v3);
  uint64_t v6 = v5;
  uint64_t v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  if (v4 == sub_259F37958(v7) && v6 == v8) {
    char v10 = 0;
  }
  else {
    char v10 = sub_259F68C70();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_259F410DC()
{
  uint64_t v1 = v0[3];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return sub_259F37958(v1);
}

uint64_t sub_259F4111C(void *a1, void *a2)
{
  uint64_t v3 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v4 = sub_259F37958(v3);
  uint64_t v6 = v5;
  uint64_t v7 = a2[3];
  __swift_project_boxed_opaque_existential_1(a2, v7);
  if (v4 == sub_259F37958(v7) && v6 == v8) {
    char v10 = 1;
  }
  else {
    char v10 = sub_259F68C70();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t Dataset.dataFrame(withName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_259F411EC(a1, a2, *v3, a3);
}

uint64_t sub_259F411EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v82 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA338);
  uint64_t v94 = *(void *)(v7 - 8);
  uint64_t v95 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA8A0);
  uint64_t v10 = MEMORY[0x270FA5388](v97);
  uint64_t v90 = (uint64_t)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v89 = (uint64_t *)((char *)&v82 - v13);
  MEMORY[0x270FA5388](v12);
  uint64_t v88 = (char *)&v82 - v14;
  uint64_t v87 = sub_259F68200();
  uint64_t v91 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v96 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x263F8EE88];
  uint64_t v102 = MEMORY[0x263F8EE88];
  uint64_t v17 = *(void *)(a3 + 16);
  if (v17)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v99 = 0;
    long long v93 = (void *)a3;
    unint64_t v18 = (_OWORD *)(a3 + 40);
    uint64_t v19 = (void *)MEMORY[0x263F8EE78];
    do
    {
      uint64_t v21 = *((void *)v18 - 1);
      long long v98 = *v18;
      BOOL v22 = v21 == a1 && (void)v98 == a2;
      if (v22 || (sub_259F68C70() & 1) != 0)
      {
        if (__OFADD__(v99++, 1)) {
          goto LABEL_71;
        }
        swift_bridgeObjectRetain();
        uint64_t v24 = *((void *)&v98 + 1);
        swift_bridgeObjectRetain_n();
        sub_259F4251C(v24);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v19 = sub_259F2E644(0, v19[2] + 1, 1, v19);
        }
        unint64_t v26 = v19[2];
        unint64_t v25 = v19[3];
        if (v26 >= v25 >> 1) {
          uint64_t v19 = sub_259F2E644((void *)(v25 > 1), v26 + 1, 1, v19);
        }
        void v19[2] = v26 + 1;
        uint64_t v20 = &v19[3 * v26];
        v20[4] = v21;
        *(_OWORD *)(v20 + 5) = v98;
      }
      unint64_t v18 = (_OWORD *)((char *)v18 + 24);
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v16 = v102;
  }
  else
  {
    uint64_t v99 = 0;
    uint64_t v19 = (void *)MEMORY[0x263F8EE78];
  }
  int64_t v27 = *(void *)(v16 + 16);
  uint64_t v28 = MEMORY[0x263F8EE78];
  if (!v27) {
    goto LABEL_27;
  }
  uint64_t v92 = v9;
  uint64_t v101 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_259F1CA5C(0, v27, 0);
  uint64_t v28 = v101;
  int64_t v29 = sub_259F45FF0(v16);
  int v31 = v30;
  char v33 = v32 & 1;
  *(void *)&long long v98 = v16 + 56;
  long long v93 = v19;
  uint64_t v34 = v92;
  do
  {
    if (v29 < 0 || v29 >= 1 << *(unsigned char *)(v16 + 32))
    {
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
      swift_unexpectedError();
      __break(1u);
      goto LABEL_72;
    }
    if (((*(void *)(v98 + (((unint64_t)v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v29) & 1) == 0) {
      goto LABEL_63;
    }
    if (*(_DWORD *)(v16 + 36) != v31) {
      goto LABEL_64;
    }
    uint64_t v35 = (void *)(*(void *)(v16 + 48) + 16 * v29);
    uint64_t v36 = v35[1];
    *uint64_t v34 = *v35;
    v34[1] = v36;
    swift_bridgeObjectRetain_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA6A8);
    sub_259F681C0();
    uint64_t v101 = v28;
    unint64_t v38 = *(void *)(v28 + 16);
    unint64_t v37 = *(void *)(v28 + 24);
    if (v38 >= v37 >> 1)
    {
      sub_259F1CA5C(v37 > 1, v38 + 1, 1);
      uint64_t v28 = v101;
    }
    *(void *)(v28 + 16) = v38 + 1;
    sub_259F46AFC((uint64_t)v34, v28+ ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80))+ *(void *)(v94 + 72) * v38, &qword_26A3FA338);
    int64_t v39 = sub_259F46090(v29, v31, v33 & 1, v16);
    int64_t v29 = v39;
    int v31 = v40;
    char v33 = v41 & 1;
    --v27;
    uint64_t v19 = v93;
  }
  while (v27);
  sub_259F46A78(v39, v40, v41 & 1);
  swift_bridgeObjectRelease();
LABEL_27:
  if (*(void *)(v28 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA328);
    uint64_t v42 = sub_259F68AB0();
  }
  else
  {
    uint64_t v42 = MEMORY[0x263F8EE80];
  }
  uint64_t v101 = v42;
  uint64_t v43 = swift_bridgeObjectRetain();
  uint64_t v44 = 0;
  sub_259F45048(v43, 1, &v101, &qword_26A3FA320, &qword_26A3FA338, (void (*)(void))sub_259F25AE8, (void (*)(void))sub_259F197C8);
  swift_bridgeObjectRelease();
  uint64_t v45 = v19[2];
  if (v45)
  {
    swift_bridgeObjectRetain();
    int64_t v46 = v19 + 6;
    do
    {
      uint64_t v47 = *(v46 - 2);
      uint64_t v48 = *(v46 - 1);
      uint64_t v49 = *v46;
      v46 += 3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_259F46174(v16, v47, v48, v49, (uint64_t)&v101);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v45;
    }
    while (v45);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v50 = (void *)v101;
  int64_t v51 = *(void *)(v101 + 16);
  uint64_t v52 = (void *)MEMORY[0x263F8EE78];
  if (v51)
  {
    uint64_t v100 = (void *)MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_259F1CA20(0, v51, 0);
    unint64_t v54 = sub_259F1D9B4(v50);
    uint64_t v55 = 0;
    uint64_t v56 = v50 + 8;
    uint64_t v86 = v91 + 32;
    char v57 = *((unsigned char *)v50 + 32);
    uint64_t v92 = v50;
    long long v93 = v50 + 10;
    int64_t v83 = v51;
    uint64_t v84 = v53;
    uint64_t v85 = v50 + 8;
    while (1)
    {
      if ((v54 & 0x8000000000000000) != 0 || (uint64_t)v54 >= 1 << v57) {
        goto LABEL_65;
      }
      unint64_t v60 = v54 >> 6;
      if ((v56[v54 >> 6] & (1 << v54)) == 0) {
        goto LABEL_66;
      }
      if (*((_DWORD *)v50 + 9) != v53) {
        goto LABEL_67;
      }
      uint64_t v94 = v55;
      uint64_t v95 = 1 << v54;
      uint64_t v99 = v44;
      uint64_t v61 = v88;
      unint64_t v62 = &v88[*(int *)(v97 + 48)];
      uint64_t v63 = v50[7];
      uint64_t v64 = (uint64_t *)(v50[6] + 16 * v54);
      uint64_t v65 = *v64;
      uint64_t v66 = v64[1];
      uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA320);
      uint64_t v68 = *(void *)(v67 - 8);
      uint64_t v69 = *(void (**)(char *, unint64_t, uint64_t))(v68 + 16);
      uint64_t v70 = *(void *)(v68 + 72);
      *(void *)&long long v98 = v54;
      v69(v62, v63 + v70 * v54, v67);
      *uint64_t v61 = v65;
      v61[1] = v66;
      uint64_t v71 = (uint64_t)v89;
      *uint64_t v89 = v65;
      *(void *)(v71 + 8) = v66;
      v69((char *)(v71 + *(int *)(v97 + 48)), (unint64_t)v62, v67);
      uint64_t v72 = v90;
      sub_259F46AFC(v71, v90, &qword_26A3FA8A0);
      swift_bridgeObjectRetain_n();
      sub_259F17838((uint64_t)v61, &qword_26A3FA8A0);
      sub_259F681B0();
      sub_259F17838(v72, &qword_26A3FA8A0);
      uint64_t v52 = v100;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_259F1CA20(0, v52[2] + 1, 1);
        uint64_t v52 = v100;
      }
      unint64_t v74 = v52[2];
      unint64_t v73 = v52[3];
      uint64_t v44 = v99;
      uint64_t v50 = v92;
      if (v74 >= v73 >> 1)
      {
        sub_259F1CA20(v73 > 1, v74 + 1, 1);
        uint64_t v52 = v100;
      }
      v52[2] = v74 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v91 + 32))((unint64_t)v52+ ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80))+ *(void *)(v91 + 72) * v74, v96, v87);
      uint64_t v100 = v52;
      char v57 = *((unsigned char *)v50 + 32);
      unint64_t v54 = 1 << v57;
      if ((uint64_t)v98 >= 1 << v57) {
        goto LABEL_68;
      }
      uint64_t v56 = v85;
      uint64_t v75 = v85[v60];
      if ((v75 & v95) == 0) {
        goto LABEL_69;
      }
      LODWORD(v53) = v84;
      if (*((_DWORD *)v50 + 9) != v84) {
        goto LABEL_70;
      }
      unint64_t v76 = v75 & (-2 << (v98 & 0x3F));
      if (v76)
      {
        unint64_t v54 = __clz(__rbit64(v76)) | v98 & 0xFFFFFFFFFFFFFFC0;
        int64_t v58 = v83;
      }
      else
      {
        unint64_t v77 = v60 + 1;
        unint64_t v78 = (v54 + 63) >> 6;
        int64_t v58 = v83;
        if (v60 + 1 < v78)
        {
          unint64_t v79 = v85[v77];
          if (v79)
          {
            uint64_t v59 = v94;
LABEL_58:
            unint64_t v54 = __clz(__rbit64(v79)) + (v77 << 6);
          }
          else
          {
            unint64_t v80 = v78 - 2;
            uint64_t v59 = v94;
            while (v80 != v60)
            {
              unint64_t v79 = v93[v60++];
              if (v79)
              {
                unint64_t v77 = v60 + 1;
                goto LABEL_58;
              }
            }
          }
          goto LABEL_38;
        }
      }
      uint64_t v59 = v94;
LABEL_38:
      uint64_t v55 = v59 + 1;
      if (v55 == v58)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  uint64_t v100 = v52;
  swift_bridgeObjectRetain();
  sub_259F43878(&v100);
  if (!v44)
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA868);
    sub_259F46A84();
    sub_259F68150();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
LABEL_72:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_259F41B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v82 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA2A0);
  uint64_t v94 = *(void *)(v7 - 8);
  uint64_t v95 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA860);
  uint64_t v10 = MEMORY[0x270FA5388](v97);
  uint64_t v90 = (uint64_t)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v89 = (uint64_t *)((char *)&v82 - v13);
  MEMORY[0x270FA5388](v12);
  uint64_t v88 = (char *)&v82 - v14;
  uint64_t v87 = sub_259F68200();
  uint64_t v91 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v96 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x263F8EE88];
  uint64_t v102 = MEMORY[0x263F8EE88];
  uint64_t v17 = *(void *)(a3 + 16);
  if (v17)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v99 = 0;
    long long v93 = (void *)a3;
    unint64_t v18 = (_OWORD *)(a3 + 40);
    uint64_t v19 = (void *)MEMORY[0x263F8EE78];
    do
    {
      uint64_t v21 = *((void *)v18 - 1);
      long long v98 = *v18;
      BOOL v22 = v21 == a1 && (void)v98 == a2;
      if (v22 || (sub_259F68C70() & 1) != 0)
      {
        if (__OFADD__(v99++, 1)) {
          goto LABEL_71;
        }
        swift_bridgeObjectRetain();
        uint64_t v24 = *((void *)&v98 + 1);
        swift_bridgeObjectRetain_n();
        sub_259F4251C(v24);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v19 = sub_259F2E644(0, v19[2] + 1, 1, v19);
        }
        unint64_t v26 = v19[2];
        unint64_t v25 = v19[3];
        if (v26 >= v25 >> 1) {
          uint64_t v19 = sub_259F2E644((void *)(v25 > 1), v26 + 1, 1, v19);
        }
        void v19[2] = v26 + 1;
        uint64_t v20 = &v19[3 * v26];
        v20[4] = v21;
        *(_OWORD *)(v20 + 5) = v98;
      }
      unint64_t v18 = (_OWORD *)((char *)v18 + 24);
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v16 = v102;
  }
  else
  {
    uint64_t v99 = 0;
    uint64_t v19 = (void *)MEMORY[0x263F8EE78];
  }
  int64_t v27 = *(void *)(v16 + 16);
  uint64_t v28 = MEMORY[0x263F8EE78];
  if (!v27) {
    goto LABEL_27;
  }
  uint64_t v92 = v9;
  uint64_t v101 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_259F1CA8C(0, v27, 0);
  uint64_t v28 = v101;
  int64_t v29 = sub_259F45FF0(v16);
  int v31 = v30;
  char v33 = v32 & 1;
  *(void *)&long long v98 = v16 + 56;
  long long v93 = v19;
  uint64_t v34 = v92;
  do
  {
    if (v29 < 0 || v29 >= 1 << *(unsigned char *)(v16 + 32))
    {
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
      swift_unexpectedError();
      __break(1u);
      goto LABEL_72;
    }
    if (((*(void *)(v98 + (((unint64_t)v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v29) & 1) == 0) {
      goto LABEL_63;
    }
    if (*(_DWORD *)(v16 + 36) != v31) {
      goto LABEL_64;
    }
    uint64_t v35 = (void *)(*(void *)(v16 + 48) + 16 * v29);
    uint64_t v36 = v35[1];
    *uint64_t v34 = *v35;
    v34[1] = v36;
    swift_bridgeObjectRetain_n();
    sub_259F681C0();
    uint64_t v101 = v28;
    unint64_t v38 = *(void *)(v28 + 16);
    unint64_t v37 = *(void *)(v28 + 24);
    if (v38 >= v37 >> 1)
    {
      sub_259F1CA8C(v37 > 1, v38 + 1, 1);
      uint64_t v28 = v101;
    }
    *(void *)(v28 + 16) = v38 + 1;
    sub_259F46AFC((uint64_t)v34, v28+ ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80))+ *(void *)(v94 + 72) * v38, &qword_26A3FA2A0);
    int64_t v39 = sub_259F46090(v29, v31, v33 & 1, v16);
    int64_t v29 = v39;
    int v31 = v40;
    char v33 = v41 & 1;
    --v27;
    uint64_t v19 = v93;
  }
  while (v27);
  sub_259F46A78(v39, v40, v41 & 1);
  swift_bridgeObjectRelease();
LABEL_27:
  if (*(void *)(v28 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA290);
    uint64_t v42 = sub_259F68AB0();
  }
  else
  {
    uint64_t v42 = MEMORY[0x263F8EE80];
  }
  uint64_t v101 = v42;
  uint64_t v43 = swift_bridgeObjectRetain();
  uint64_t v44 = 0;
  sub_259F45048(v43, 1, &v101, &qword_26A3FA288, &qword_26A3FA2A0, (void (*)(void))sub_259F25AFC, (void (*)(void))sub_259F197DC);
  swift_bridgeObjectRelease();
  uint64_t v45 = v19[2];
  if (v45)
  {
    swift_bridgeObjectRetain();
    int64_t v46 = v19 + 6;
    do
    {
      uint64_t v47 = *(v46 - 2);
      uint64_t v48 = *(v46 - 1);
      uint64_t v49 = *v46;
      v46 += 3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_259F4651C(v16, v47, v48, v49);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v45;
    }
    while (v45);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v50 = (void *)v101;
  int64_t v51 = *(void *)(v101 + 16);
  uint64_t v52 = (void *)MEMORY[0x263F8EE78];
  if (v51)
  {
    uint64_t v100 = (void *)MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_259F1CA20(0, v51, 0);
    unint64_t v54 = sub_259F1D9B4(v50);
    uint64_t v55 = 0;
    uint64_t v56 = v50 + 8;
    uint64_t v86 = v91 + 32;
    char v57 = *((unsigned char *)v50 + 32);
    uint64_t v92 = v50;
    long long v93 = v50 + 10;
    int64_t v83 = v51;
    uint64_t v84 = v53;
    uint64_t v85 = v50 + 8;
    while (1)
    {
      if ((v54 & 0x8000000000000000) != 0 || (uint64_t)v54 >= 1 << v57) {
        goto LABEL_65;
      }
      unint64_t v60 = v54 >> 6;
      if ((v56[v54 >> 6] & (1 << v54)) == 0) {
        goto LABEL_66;
      }
      if (*((_DWORD *)v50 + 9) != v53) {
        goto LABEL_67;
      }
      uint64_t v94 = v55;
      uint64_t v95 = 1 << v54;
      uint64_t v99 = v44;
      uint64_t v61 = v88;
      unint64_t v62 = &v88[*(int *)(v97 + 48)];
      uint64_t v63 = v50[7];
      uint64_t v64 = (uint64_t *)(v50[6] + 16 * v54);
      uint64_t v65 = *v64;
      uint64_t v66 = v64[1];
      uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA288);
      uint64_t v68 = *(void *)(v67 - 8);
      uint64_t v69 = *(void (**)(char *, unint64_t, uint64_t))(v68 + 16);
      uint64_t v70 = *(void *)(v68 + 72);
      *(void *)&long long v98 = v54;
      v69(v62, v63 + v70 * v54, v67);
      *uint64_t v61 = v65;
      v61[1] = v66;
      uint64_t v71 = (uint64_t)v89;
      *uint64_t v89 = v65;
      *(void *)(v71 + 8) = v66;
      v69((char *)(v71 + *(int *)(v97 + 48)), (unint64_t)v62, v67);
      uint64_t v72 = v90;
      sub_259F46AFC(v71, v90, &qword_26A3FA860);
      swift_bridgeObjectRetain_n();
      sub_259F17838((uint64_t)v61, &qword_26A3FA860);
      sub_259F681B0();
      sub_259F17838(v72, &qword_26A3FA860);
      uint64_t v52 = v100;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_259F1CA20(0, v52[2] + 1, 1);
        uint64_t v52 = v100;
      }
      unint64_t v74 = v52[2];
      unint64_t v73 = v52[3];
      uint64_t v44 = v99;
      uint64_t v50 = v92;
      if (v74 >= v73 >> 1)
      {
        sub_259F1CA20(v73 > 1, v74 + 1, 1);
        uint64_t v52 = v100;
      }
      v52[2] = v74 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v91 + 32))((unint64_t)v52+ ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80))+ *(void *)(v91 + 72) * v74, v96, v87);
      uint64_t v100 = v52;
      char v57 = *((unsigned char *)v50 + 32);
      unint64_t v54 = 1 << v57;
      if ((uint64_t)v98 >= 1 << v57) {
        goto LABEL_68;
      }
      uint64_t v56 = v85;
      uint64_t v75 = v85[v60];
      if ((v75 & v95) == 0) {
        goto LABEL_69;
      }
      LODWORD(v53) = v84;
      if (*((_DWORD *)v50 + 9) != v84) {
        goto LABEL_70;
      }
      unint64_t v76 = v75 & (-2 << (v98 & 0x3F));
      if (v76)
      {
        unint64_t v54 = __clz(__rbit64(v76)) | v98 & 0xFFFFFFFFFFFFFFC0;
        int64_t v58 = v83;
      }
      else
      {
        unint64_t v77 = v60 + 1;
        unint64_t v78 = (v54 + 63) >> 6;
        int64_t v58 = v83;
        if (v60 + 1 < v78)
        {
          unint64_t v79 = v85[v77];
          if (v79)
          {
            uint64_t v59 = v94;
LABEL_58:
            unint64_t v54 = __clz(__rbit64(v79)) + (v77 << 6);
          }
          else
          {
            unint64_t v80 = v78 - 2;
            uint64_t v59 = v94;
            while (v80 != v60)
            {
              unint64_t v79 = v93[v60++];
              if (v79)
              {
                unint64_t v77 = v60 + 1;
                goto LABEL_58;
              }
            }
          }
          goto LABEL_38;
        }
      }
      uint64_t v59 = v94;
LABEL_38:
      uint64_t v55 = v59 + 1;
      if (v55 == v58)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  uint64_t v100 = v52;
  swift_bridgeObjectRetain();
  sub_259F43878(&v100);
  if (!v44)
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA868);
    sub_259F46A84();
    sub_259F68150();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
LABEL_72:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_259F4251C(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    uint64_t v10 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v9);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_259F42DE8(&v16, v11, v12);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:
  return swift_release();
}

uint64_t (*sub_259F4269C(void *a1, uint64_t a2, uint64_t a3))()
{
  unint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  void v6[5] = sub_259F455D8(v6, a2, a3);
  return sub_259F4271C;
}

uint64_t (*sub_259F42720(void *a1, uint64_t a2, uint64_t a3))()
{
  unint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  void v6[5] = sub_259F45688(v6, a2, a3);
  return sub_259F4271C;
}

void sub_259F427A0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t Dataset.append(_:withName:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_259F68120();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_259F68130();
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  uint64_t v17 = a1;
  uint64_t v11 = sub_259F352CC((void (*)(uint64_t *__return_ptr, char *, void *))sub_259F42A7C, (uint64_t)v14);
  if (v3) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v13 = v11;
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  return sub_259F2CA6C(v13);
}

uint64_t sub_259F42940@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X4>, void *a5@<X8>)
{
  uint64_t v11 = sub_259F68160();
  _OWORD v17[2] = a1;
  uint64_t v12 = sub_259F409C4((void (*)(_OWORD *__return_ptr, char *))sub_259F46AE0, (uint64_t)v17, v11);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5)
  {
    *a4 = v5;
  }
  else
  {
    if (v12[2])
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA250);
      uint64_t v14 = sub_259F68AB0();
    }
    else
    {
      uint64_t v14 = MEMORY[0x263F8EE80];
    }
    uint64_t v18 = v14;
    uint64_t v15 = swift_bridgeObjectRetain();
    sub_259F67104(v15, 1, &v18);
    swift_bridgeObjectRelease();
    uint64_t v16 = v18;
    *a5 = a2;
    a5[1] = a3;
    a5[2] = v16;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_259F42A7C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  return sub_259F42940(a1, *(void *)(v3 + 16), *(void *)(v3 + 24), a2, a3);
}

uint64_t sub_259F42AA0@<X0>(uint64_t a1@<X8>)
{
  sub_259F681F0();
  sub_259F68110();
  swift_bridgeObjectRelease();
  if (v14)
  {
    sub_259F1E5EC(&v13, v15);
    sub_259F1E590((uint64_t)v15, (uint64_t)v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA6A8);
    if (swift_dynamicCast())
    {
      sub_259F13728(v10, (uint64_t)&v13);
      uint64_t v2 = sub_259F681F0();
      uint64_t v4 = v3;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
      *(void *)a1 = v2;
      *(void *)(a1 + 8) = v4;
      return sub_259F13728(&v13, a1 + 16);
    }
    else
    {
      uint64_t v11 = 0;
      memset(v10, 0, sizeof(v10));
      sub_259F17838((uint64_t)v10, &qword_26A3FA270);
      sub_259F681F0();
      sub_259F68110();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA4C0);
      uint64_t v6 = sub_259F686A0();
      uint64_t v8 = v7;
      sub_259F13868();
      swift_allocError();
      *(void *)uint64_t v9 = v6;
      *(void *)(v9 + 8) = v8;
      *(unsigned char *)(v9 + 16) = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    }
  }
  else
  {
    uint64_t result = sub_259F17838((uint64_t)&v13, &qword_26A3FA4C0);
    *(void *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

uint64_t Dataset.appendReplacing(_:withName:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v21 = sub_259F68120();
  uint64_t v9 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_bridgeObjectRetain();
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_259F468D4(v12, a2, a3);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  *uint64_t v5 = v13;
  sub_259F68130();
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a1;
  uint64_t v14 = sub_259F352CC((void (*)(uint64_t *__return_ptr, char *, void *))sub_259F46BE0, (uint64_t)v17);
  if (v4) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v21);
  }
  uint64_t v16 = v14;
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v21);
  return sub_259F2CA6C(v16);
}

uint64_t sub_259F42DE8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_259F68DA0();
  swift_bridgeObjectRetain();
  sub_259F686E0();
  uint64_t v8 = sub_259F68DC0();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_259F68C70() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_259F68C70() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_259F43278(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_259F42F98()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA878);
  uint64_t v3 = sub_259F68940();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    int v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_259F68DA0();
      sub_259F686E0();
      uint64_t result = sub_259F68DC0();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      BOOL v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *BOOL v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_259F43278(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_259F42F98();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_259F43414();
      goto LABEL_22;
    }
    sub_259F435C8();
  }
  uint64_t v11 = *v4;
  sub_259F68DA0();
  sub_259F686E0();
  uint64_t result = sub_259F68DC0();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_259F68C70(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_259F68D20();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_259F68C70();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_259F43414()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA878);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_259F68930();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    BOOL v19 = (void *)(*(void *)(v4 + 48) + v16);
    *BOOL v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_259F435C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA878);
  uint64_t v3 = sub_259F68940();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_259F68DA0();
    swift_bridgeObjectRetain();
    sub_259F686E0();
    uint64_t result = sub_259F68DC0();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_259F43878(void **a1)
{
  uint64_t v2 = *(void *)(sub_259F68200() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_259F1D92C(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_259F43920(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_259F43920(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_259F68200();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  v153 = (char *)&v145 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  v165 = (char *)&v145 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  v168 = (char *)&v145 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v167 = (char *)&v145 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  v148 = (char *)&v145 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v155 = (char *)&v145 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  v151 = (char *)&v145 - v19;
  MEMORY[0x270FA5388](v18);
  v150 = (char *)&v145 - v20;
  v170 = a1;
  uint64_t v21 = a1[1];
  uint64_t result = sub_259F68C10();
  if (result >= v21)
  {
    if (v21 < 0) {
      goto LABEL_151;
    }
    if (v21) {
      return sub_259F44634(0, v21, 1, v170);
    }
    return result;
  }
  if (v21 >= 0) {
    uint64_t v23 = v21;
  }
  else {
    uint64_t v23 = v21 + 1;
  }
  if (v21 < -1) {
    goto LABEL_159;
  }
  uint64_t v146 = result;
  if (v21 < 2)
  {
    uint64_t v26 = v5;
    uint64_t v28 = (char *)MEMORY[0x263F8EE78];
    unint64_t v156 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v145 = MEMORY[0x263F8EE78];
    if (v21 != 1)
    {
      unint64_t v30 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_117:
      if (v30 >= 2)
      {
        uint64_t v136 = *v170;
        do
        {
          unint64_t v137 = v30 - 2;
          if (v30 < 2) {
            goto LABEL_146;
          }
          if (!v136) {
            goto LABEL_158;
          }
          uint64_t v138 = v28;
          v139 = v28 + 32;
          uint64_t v140 = *(void *)&v28[16 * v137 + 32];
          uint64_t v141 = *(void *)&v28[16 * v30 + 24];
          uint64_t v142 = v26;
          sub_259F44980(v136 + *(void *)(v26 + 72) * v140, v136 + *(void *)(v26 + 72) * *(void *)&v139[16 * v30 - 16], v136 + *(void *)(v26 + 72) * v141, v156);
          if (v2) {
            break;
          }
          if (v141 < v140) {
            goto LABEL_147;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v138 = sub_259F1C894((uint64_t)v138);
          }
          if (v137 >= *((void *)v138 + 2)) {
            goto LABEL_148;
          }
          v143 = &v138[16 * v137 + 32];
          *(void *)v143 = v140;
          *((void *)v143 + 1) = v141;
          unint64_t v144 = *((void *)v138 + 2);
          if (v30 > v144) {
            goto LABEL_149;
          }
          uint64_t v28 = v138;
          memmove(&v138[16 * v30 + 16], &v138[16 * v30 + 32], 16 * (v144 - v30));
          *((void *)v138 + 2) = v144 - 1;
          unint64_t v30 = v144 - 1;
          uint64_t v26 = v142;
        }
        while (v144 > 2);
      }
LABEL_128:
      swift_bridgeObjectRelease();
      *(void *)(v145 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v24 = v23 >> 1;
    uint64_t v25 = sub_259F687C0();
    *(void *)(v25 + 16) = v24;
    uint64_t v26 = v5;
    unint64_t v27 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v145 = v25;
    unint64_t v156 = v25 + v27;
  }
  uint64_t v29 = 0;
  uint64_t v161 = v26 + 16;
  v162 = (void (**)(char *, uint64_t))(v26 + 8);
  v166 = (char **)(v26 + 32);
  uint64_t v28 = (char *)MEMORY[0x263F8EE78];
  uint64_t v157 = v26;
  uint64_t v164 = v4;
  while (1)
  {
    uint64_t v31 = v29;
    uint64_t v32 = v29 + 1;
    uint64_t v154 = v29;
    if (v29 + 1 >= v21)
    {
      uint64_t v40 = v29 + 1;
      goto LABEL_69;
    }
    uint64_t v163 = v21;
    v149 = v28;
    uint64_t v33 = *v170;
    uint64_t v34 = *(void *)(v26 + 72);
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
    v35(v150, *v170 + v34 * v32, v4);
    v158 = (char *)v33;
    uint64_t v169 = v34;
    v35(v151, v33 + v34 * v31, v4);
    uint64_t v36 = sub_259F681F0();
    uint64_t v38 = v37;
    if (v36 != sub_259F681F0()) {
      goto LABEL_20;
    }
    if (v38 == v39) {
      LODWORD(v160) = 0;
    }
    else {
LABEL_20:
    }
      LODWORD(v160) = sub_259F68C70();
    char v41 = v148;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v42 = *v162;
    uint64_t v43 = v164;
    (*v162)(v151, v164);
    v42(v150, v43);
    uint64_t v40 = v154 + 2;
    if (v154 + 2 >= v163)
    {
      uint64_t v55 = v157;
    }
    else
    {
      uint64_t v147 = v2;
      uint64_t v159 = v169 * v32;
      uint64_t v44 = v158;
      uint64_t v45 = v169 * v40;
      while (1)
      {
        uint64_t v46 = v40;
        uint64_t v47 = v164;
        v35(v155, (uint64_t)&v44[v45], v164);
        v35(v41, (uint64_t)&v44[v159], v47);
        uint64_t v48 = sub_259F681F0();
        uint64_t v50 = v49;
        if (v48 == sub_259F681F0() && v50 == v51) {
          int v52 = 0;
        }
        else {
          int v52 = sub_259F68C70();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v53 = v164;
        v42(v41, v164);
        v42(v155, v53);
        if ((v160 ^ v52)) {
          break;
        }
        uint64_t v40 = v46 + 1;
        v44 += v169;
        if (v163 == v46 + 1)
        {
          uint64_t v54 = v163;
          uint64_t v40 = v163;
          uint64_t v2 = v147;
          uint64_t v55 = v157;
          goto LABEL_33;
        }
      }
      uint64_t v2 = v147;
      uint64_t v55 = v157;
      uint64_t v40 = v46;
    }
    uint64_t v54 = v163;
LABEL_33:
    uint64_t v28 = v149;
    uint64_t v31 = v154;
    uint64_t v56 = v158;
    if ((v160 & 1) == 0) {
      break;
    }
    if (v40 < v154) {
      goto LABEL_152;
    }
    if (v154 >= v40) {
      break;
    }
    uint64_t v147 = v2;
    uint64_t v57 = 0;
    uint64_t v58 = v169 * (v40 - 1);
    uint64_t v59 = v40 * v169;
    uint64_t v60 = v154;
    uint64_t v61 = v154 * v169;
    do
    {
      if (v60 != v40 + v57 - 1)
      {
        if (!v56) {
          goto LABEL_157;
        }
        uint64_t v63 = &v56[v58];
        v160 = *v166;
        ((void (*)(char *, char *, uint64_t))v160)(v153, &v56[v61], v164);
        if (v61 < v58 || &v56[v61] >= &v56[v59])
        {
          uint64_t v62 = v164;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v62 = v164;
          if (v61 != v58) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        ((void (*)(char *, char *, uint64_t))v160)(v63, v153, v62);
        uint64_t v55 = v157;
        uint64_t v56 = v158;
      }
      ++v60;
      --v57;
      v58 -= v169;
      v59 -= v169;
      v61 += v169;
    }
    while (v60 < v40 + v57);
    uint64_t v2 = v147;
    uint64_t v54 = v163;
    uint64_t v64 = v164;
    uint64_t v28 = v149;
    uint64_t v31 = v154;
    if (v40 < v163) {
      goto LABEL_49;
    }
LABEL_69:
    if (v40 < v31) {
      goto LABEL_145;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v28 = sub_259F1C494(0, *((void *)v28 + 2) + 1, 1, v28);
    }
    unint64_t v85 = *((void *)v28 + 2);
    unint64_t v84 = *((void *)v28 + 3);
    unint64_t v30 = v85 + 1;
    uint64_t v26 = v157;
    uint64_t v163 = v40;
    if (v85 >= v84 >> 1)
    {
      unint64_t v135 = sub_259F1C494((char *)(v84 > 1), v85 + 1, 1, v28);
      uint64_t v26 = v157;
      uint64_t v28 = v135;
    }
    *((void *)v28 + 2) = v30;
    uint64_t v86 = v28 + 32;
    uint64_t v87 = &v28[16 * v85 + 32];
    uint64_t v88 = v163;
    *(void *)uint64_t v87 = v31;
    *((void *)v87 + 1) = v88;
    if (v85)
    {
      while (1)
      {
        unint64_t v89 = v30 - 1;
        if (v30 >= 4)
        {
          uint64_t v94 = &v86[16 * v30];
          uint64_t v95 = *((void *)v94 - 8);
          uint64_t v96 = *((void *)v94 - 7);
          BOOL v100 = __OFSUB__(v96, v95);
          uint64_t v97 = v96 - v95;
          if (v100) {
            goto LABEL_134;
          }
          uint64_t v99 = *((void *)v94 - 6);
          uint64_t v98 = *((void *)v94 - 5);
          BOOL v100 = __OFSUB__(v98, v99);
          uint64_t v92 = v98 - v99;
          char v93 = v100;
          if (v100) {
            goto LABEL_135;
          }
          unint64_t v101 = v30 - 2;
          uint64_t v102 = &v86[16 * v30 - 32];
          uint64_t v104 = *(void *)v102;
          uint64_t v103 = *((void *)v102 + 1);
          BOOL v100 = __OFSUB__(v103, v104);
          uint64_t v105 = v103 - v104;
          if (v100) {
            goto LABEL_137;
          }
          BOOL v100 = __OFADD__(v92, v105);
          uint64_t v106 = v92 + v105;
          if (v100) {
            goto LABEL_140;
          }
          if (v106 >= v97)
          {
            uint64_t v124 = &v86[16 * v89];
            uint64_t v126 = *(void *)v124;
            uint64_t v125 = *((void *)v124 + 1);
            BOOL v100 = __OFSUB__(v125, v126);
            uint64_t v127 = v125 - v126;
            if (v100) {
              goto LABEL_144;
            }
            BOOL v117 = v92 < v127;
            goto LABEL_106;
          }
        }
        else
        {
          if (v30 != 3)
          {
            uint64_t v118 = *((void *)v28 + 4);
            uint64_t v119 = *((void *)v28 + 5);
            BOOL v100 = __OFSUB__(v119, v118);
            uint64_t v111 = v119 - v118;
            char v112 = v100;
            goto LABEL_100;
          }
          uint64_t v91 = *((void *)v28 + 4);
          uint64_t v90 = *((void *)v28 + 5);
          BOOL v100 = __OFSUB__(v90, v91);
          uint64_t v92 = v90 - v91;
          char v93 = v100;
        }
        if (v93) {
          goto LABEL_136;
        }
        unint64_t v101 = v30 - 2;
        uint64_t v107 = &v86[16 * v30 - 32];
        uint64_t v109 = *(void *)v107;
        uint64_t v108 = *((void *)v107 + 1);
        BOOL v110 = __OFSUB__(v108, v109);
        uint64_t v111 = v108 - v109;
        char v112 = v110;
        if (v110) {
          goto LABEL_139;
        }
        uint64_t v113 = &v86[16 * v89];
        uint64_t v115 = *(void *)v113;
        uint64_t v114 = *((void *)v113 + 1);
        BOOL v100 = __OFSUB__(v114, v115);
        uint64_t v116 = v114 - v115;
        if (v100) {
          goto LABEL_142;
        }
        if (__OFADD__(v111, v116)) {
          goto LABEL_143;
        }
        if (v111 + v116 >= v92)
        {
          BOOL v117 = v92 < v116;
LABEL_106:
          if (v117) {
            unint64_t v89 = v101;
          }
          goto LABEL_108;
        }
LABEL_100:
        if (v112) {
          goto LABEL_138;
        }
        v120 = &v86[16 * v89];
        uint64_t v122 = *(void *)v120;
        uint64_t v121 = *((void *)v120 + 1);
        BOOL v100 = __OFSUB__(v121, v122);
        uint64_t v123 = v121 - v122;
        if (v100) {
          goto LABEL_141;
        }
        if (v123 < v111) {
          goto LABEL_14;
        }
LABEL_108:
        unint64_t v128 = v89 - 1;
        if (v89 - 1 >= v30)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!*v170) {
          goto LABEL_156;
        }
        v129 = v28;
        uint64_t v130 = &v86[16 * v128];
        uint64_t v131 = *(void *)v130;
        long long v132 = &v86[16 * v89];
        uint64_t v133 = *((void *)v132 + 1);
        sub_259F44980(*v170 + *(void *)(v26 + 72) * *(void *)v130, *v170 + *(void *)(v26 + 72) * *(void *)v132, *v170 + *(void *)(v26 + 72) * v133, v156);
        if (v2) {
          goto LABEL_128;
        }
        if (v133 < v131) {
          goto LABEL_131;
        }
        if (v89 > *((void *)v129 + 2)) {
          goto LABEL_132;
        }
        *(void *)uint64_t v130 = v131;
        *(void *)&v86[16 * v128 + 8] = v133;
        unint64_t v134 = *((void *)v129 + 2);
        if (v89 >= v134) {
          goto LABEL_133;
        }
        uint64_t v28 = v129;
        unint64_t v30 = v134 - 1;
        memmove(&v86[16 * v89], v132 + 16, 16 * (v134 - 1 - v89));
        *((void *)v129 + 2) = v134 - 1;
        uint64_t v26 = v157;
        if (v134 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v30 = 1;
LABEL_14:
    uint64_t v21 = v170[1];
    uint64_t v29 = v163;
    uint64_t v4 = v164;
    if (v163 >= v21) {
      goto LABEL_117;
    }
  }
  uint64_t v64 = v164;
  if (v40 >= v54) {
    goto LABEL_69;
  }
LABEL_49:
  if (__OFSUB__(v40, v31)) {
    goto LABEL_150;
  }
  if (v40 - v31 >= v146) {
    goto LABEL_69;
  }
  if (__OFADD__(v31, v146)) {
    goto LABEL_153;
  }
  if (v31 + v146 >= v54) {
    uint64_t v65 = v54;
  }
  else {
    uint64_t v65 = v31 + v146;
  }
  if (v65 >= v31)
  {
    if (v40 != v65)
    {
      v149 = v28;
      uint64_t v147 = v2;
      uint64_t v66 = *(void *)(v55 + 72);
      v158 = *(char **)(v55 + 16);
      uint64_t v159 = v66;
      uint64_t v169 = v66 * (v40 - 1);
      uint64_t v67 = (char *)(v40 * v66);
      uint64_t v152 = v65;
      do
      {
        uint64_t v70 = 0;
        uint64_t v71 = v31;
        uint64_t v163 = v40;
        v160 = v67;
        while (1)
        {
          uint64_t v72 = *v170;
          uint64_t v73 = (uint64_t)&v67[v70 + *v170];
          unint64_t v74 = v158;
          ((void (*)(char *, uint64_t, uint64_t))v158)(v167, v73, v64);
          ((void (*)(char *, uint64_t, uint64_t))v74)(v168, v169 + v70 + v72, v64);
          uint64_t v75 = sub_259F681F0();
          uint64_t v77 = v76;
          if (v75 == sub_259F681F0() && v77 == v78) {
            break;
          }
          char v79 = sub_259F68C70();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v80 = *v162;
          uint64_t v64 = v164;
          (*v162)(v168, v164);
          v80(v167, v64);
          if ((v79 & 1) == 0) {
            goto LABEL_59;
          }
          uint64_t v81 = *v170;
          uint64_t v67 = v160;
          if (!*v170) {
            goto LABEL_155;
          }
          uint64_t v82 = v81 + v169 + v70;
          int64_t v83 = *v166;
          ((void (*)(char *, char *, uint64_t))*v166)(v165, &v160[v81 + v70], v64);
          swift_arrayInitWithTakeFrontToBack();
          ((void (*)(uint64_t, char *, uint64_t))v83)(v82, v165, v64);
          v70 -= v159;
          ++v71;
          uint64_t v69 = v163;
          if (v163 == v71) {
            goto LABEL_60;
          }
        }
        swift_bridgeObjectRelease_n();
        uint64_t v68 = *v162;
        uint64_t v64 = v164;
        (*v162)(v168, v164);
        v68(v167, v64);
LABEL_59:
        uint64_t v69 = v163;
        uint64_t v67 = v160;
LABEL_60:
        uint64_t v40 = v69 + 1;
        v169 += v159;
        v67 += v159;
        uint64_t v31 = v154;
      }
      while (v40 != v152);
      uint64_t v40 = v152;
      uint64_t v2 = v147;
      uint64_t v28 = v149;
    }
    goto LABEL_69;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  uint64_t result = sub_259F68A70();
  __break(1u);
  return result;
}

uint64_t sub_259F44634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v46 = a4;
  uint64_t v34 = a1;
  uint64_t v6 = sub_259F68200();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v44 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v48 = (char *)&v32 - v10;
  uint64_t result = MEMORY[0x270FA5388](v9);
  uint64_t v47 = (char *)&v32 - v13;
  uint64_t v42 = a3;
  uint64_t v33 = a2;
  if (a3 != a2)
  {
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v38 = v12 + 16;
    uint64_t v14 = *(void *)(v12 + 72);
    uint64_t v35 = (void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v36 = v6;
    uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v15 = v14 * (v42 - 1);
    uint64_t v39 = v14;
    uint64_t v16 = v14 * v42;
LABEL_6:
    uint64_t v18 = 0;
    uint64_t v19 = v34;
    uint64_t v40 = v16;
    uint64_t v41 = v15;
    while (1)
    {
      uint64_t v20 = *v46;
      uint64_t v45 = v16 + v18;
      uint64_t v21 = v16 + v18 + v20;
      uint64_t v22 = v37;
      v37(v47, v21, v6);
      v22(v48, v15 + v18 + v20, v6);
      uint64_t v23 = sub_259F681F0();
      uint64_t v25 = v24;
      if (v23 == sub_259F681F0() && v25 == v26)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v6 = v36;
        uint64_t v17 = *v35;
        (*v35)(v48, v36);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v17)(v47, v6);
        uint64_t v16 = v40;
        uint64_t v15 = v41;
LABEL_5:
        v15 += v39;
        v16 += v39;
        if (++v42 == v33) {
          return result;
        }
        goto LABEL_6;
      }
      char v27 = sub_259F68C70();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v36;
      uint64_t v28 = *v35;
      (*v35)(v48, v36);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v47, v6);
      uint64_t v16 = v40;
      uint64_t v15 = v41;
      if ((v27 & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v29 = *v46;
      if (!*v46) {
        break;
      }
      uint64_t v30 = v29 + v41 + v18;
      uint64_t v31 = *v43;
      (*v43)(v44, v29 + v40 + v18, v6);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v31)(v30, v44, v6);
      v18 -= v39;
      if (v42 == ++v19) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_259F44980(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v66 = sub_259F68200();
  uint64_t v8 = *(void *)(v66 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v66);
  uint64_t v64 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v63 = (char *)&v58 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v62 = (char *)&v58 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v58 - v15;
  uint64_t v65 = *(void *)(v17 + 72);
  if (!v65)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v65 == -1) {
    goto LABEL_69;
  }
  int64_t v18 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v65 == -1) {
    goto LABEL_70;
  }
  uint64_t v19 = (uint64_t)(a2 - a1) / v65;
  unint64_t v69 = a1;
  unint64_t v68 = a4;
  uint64_t v20 = v18 / v65;
  if (v19 >= v18 / v65)
  {
    if ((v20 & 0x8000000000000000) == 0)
    {
      uint64_t v22 = v20 * v65;
      if (a4 < a2 || a2 + v22 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v40 = a4 + v22;
      unint64_t v67 = a4 + v22;
      unint64_t v69 = a2;
      uint64_t v62 = (char *)a1;
      if (v22 >= 1 && a1 < a2)
      {
        uint64_t v42 = -v65;
        uint64_t v65 = *(void *)(v8 + 16);
        unint64_t v60 = a4;
        uint64_t v61 = v8 + 16;
        uint64_t v59 = (void (**)(char *, uint64_t))(v8 + 8);
        do
        {
          unint64_t v43 = a3;
          uint64_t v44 = (void (*)(char *, unint64_t, uint64_t))v65;
          uint64_t v45 = v66;
          ((void (*)(char *, unint64_t, uint64_t))v65)(v63, v40 + v42, v66);
          unint64_t v46 = a2 + v42;
          v44(v64, a2 + v42, v45);
          uint64_t v47 = sub_259F681F0();
          uint64_t v49 = v48;
          if (v47 == sub_259F681F0() && v49 == v50) {
            char v51 = 0;
          }
          else {
            char v51 = sub_259F68C70();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v52 = v43 + v42;
          uint64_t v53 = *v59;
          uint64_t v54 = v66;
          (*v59)(v64, v66);
          v53(v63, v54);
          unint64_t v55 = v60;
          if (v51)
          {
            if (v43 < a2 || v52 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v43 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v69 += v42;
          }
          else
          {
            unint64_t v56 = v67;
            v67 += v42;
            if (v43 < v56 || v52 >= v56)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v43 != v56)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v46 = a2;
          }
          unint64_t v40 = v67;
          if (v67 <= v55) {
            break;
          }
          a2 = v46;
          a3 = v43 + v42;
        }
        while (v46 > (unint64_t)v62);
      }
LABEL_67:
      sub_259F1C720(&v69, &v68, (uint64_t *)&v67);
      return 1;
    }
  }
  else if ((v19 & 0x8000000000000000) == 0)
  {
    uint64_t v21 = v19 * v65;
    if (a4 < a1 || a1 + v21 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v64 = (char *)(a4 + v21);
    unint64_t v67 = a4 + v21;
    if (v21 >= 1 && a2 < a3)
    {
      uint64_t v63 = *(char **)(v8 + 16);
      uint64_t v61 = v8 + 16;
      uint64_t v24 = (void (**)(char *, uint64_t))(v8 + 8);
      while (1)
      {
        unint64_t v25 = a3;
        uint64_t v26 = v66;
        char v27 = (void (*)(char *, unint64_t, uint64_t))v63;
        ((void (*)(char *, unint64_t, uint64_t))v63)(v16, a2, v66);
        v27(v62, a4, v26);
        uint64_t v28 = sub_259F681F0();
        uint64_t v30 = v29;
        if (v28 == sub_259F681F0() && v30 == v31) {
          break;
        }
        char v34 = sub_259F68C70();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v35 = *v24;
        uint64_t v36 = v66;
        (*v24)(v62, v66);
        v35(v16, v36);
        if ((v34 & 1) == 0) {
          goto LABEL_31;
        }
        unint64_t v37 = v69;
        unint64_t v38 = a2 + v65;
        if (v69 < a2 || v69 >= v38)
        {
          swift_arrayInitWithTakeFrontToBack();
          a3 = v25;
        }
        else
        {
          a3 = v25;
          if (v69 == a2) {
            unint64_t v37 = a2;
          }
          else {
            swift_arrayInitWithTakeBackToFront();
          }
        }
LABEL_37:
        unint64_t v69 = v37 + v65;
        a4 = v68;
        if (v68 < (unint64_t)v64)
        {
          a2 = v38;
          if (v38 < a3) {
            continue;
          }
        }
        goto LABEL_67;
      }
      swift_bridgeObjectRelease_n();
      uint64_t v32 = *v24;
      uint64_t v33 = v66;
      (*v24)(v62, v66);
      v32(v16, v33);
LABEL_31:
      unint64_t v37 = v69;
      unint64_t v39 = v68 + v65;
      if (v69 < v68 || v69 >= v39)
      {
        swift_arrayInitWithTakeFrontToBack();
        a3 = v25;
      }
      else
      {
        a3 = v25;
        if (v69 != v68) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v68 = v39;
      unint64_t v38 = a2;
      goto LABEL_37;
    }
    goto LABEL_67;
  }
LABEL_71:
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

void sub_259F45048(uint64_t a1, int a2, void *a3, uint64_t *a4, uint64_t *a5, void (*a6)(void), void (*a7)(void))
{
  uint64_t v70 = a7;
  LODWORD(v71) = a2;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (uint64_t *)((char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = *(void *)(a1 + 16);
  if (!v21)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v66 = v7;
  uint64_t v67 = v21;
  uint64_t v22 = (char *)v20 + *(int *)(v17 + 48);
  unint64_t v23 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v64 = a6;
  unint64_t v65 = v23;
  uint64_t v24 = a1 + v23;
  uint64_t v74 = *(void *)(v18 + 72);
  uint64_t v69 = a1;
  swift_bridgeObjectRetain();
  uint64_t v73 = a5;
  sub_259F26A1C(v24, (uint64_t)v20, a5);
  uint64_t v68 = v13;
  unint64_t v25 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 32);
  uint64_t v27 = v20[1];
  uint64_t v80 = *v20;
  uint64_t v26 = v80;
  uint64_t v81 = v27;
  uint64_t v75 = v15;
  uint64_t v76 = v12;
  uint64_t v72 = v22;
  uint64_t v77 = v25;
  v25((uint64_t)v15, v22, v12);
  uint64_t v28 = (void *)*a3;
  unint64_t v30 = sub_259F17068(v26, v27);
  uint64_t v31 = v28[2];
  BOOL v32 = (v29 & 1) == 0;
  if (__OFADD__(v31, v32)) {
    goto LABEL_23;
  }
  char v33 = v29;
  if (v28[3] >= v31 + v32)
  {
    if (v71)
    {
      if (v29) {
        goto LABEL_10;
      }
    }
    else
    {
      v64();
      if (v33) {
        goto LABEL_10;
      }
    }
LABEL_13:
    unint64_t v38 = (void *)*a3;
    *(void *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
    unint64_t v39 = (uint64_t *)(v38[6] + 16 * v30);
    uint64_t *v39 = v26;
    v39[1] = v27;
    uint64_t v40 = v38[7];
    uint64_t v71 = *(void *)(v68 + 72);
    uint64_t v41 = v40 + v71 * v30;
    uint64_t v42 = v75;
    uint64_t v43 = v76;
    v77(v41, v75, v76);
    uint64_t v44 = v38[2];
    BOOL v45 = __OFADD__(v44, 1);
    uint64_t v46 = v44 + 1;
    if (v45)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    long long v38[2] = v46;
    uint64_t v47 = v67 - 1;
    if (v67 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v48 = v69 + v74 + v65;
    while (1)
    {
      sub_259F26A1C(v48, (uint64_t)v20, v73);
      uint64_t v49 = v42;
      uint64_t v51 = v20[1];
      uint64_t v80 = *v20;
      uint64_t v50 = v80;
      uint64_t v81 = v51;
      v77((uint64_t)v49, v72, v43);
      unint64_t v52 = (void *)*a3;
      unint64_t v53 = sub_259F17068(v50, v51);
      uint64_t v55 = v52[2];
      BOOL v56 = (v54 & 1) == 0;
      BOOL v45 = __OFADD__(v55, v56);
      uint64_t v57 = v55 + v56;
      if (v45) {
        break;
      }
      char v58 = v54;
      if (v52[3] < v57)
      {
        ((void (*)(uint64_t, uint64_t))v70)(v57, 1);
        unint64_t v53 = sub_259F17068(v50, v51);
        if ((v58 & 1) != (v59 & 1)) {
          goto LABEL_25;
        }
      }
      if (v58) {
        goto LABEL_10;
      }
      unint64_t v60 = (void *)*a3;
      *(void *)(*a3 + 8 * (v53 >> 6) + 64) |= 1 << v53;
      uint64_t v61 = (uint64_t *)(v60[6] + 16 * v53);
      *uint64_t v61 = v50;
      v61[1] = v51;
      uint64_t v42 = v75;
      uint64_t v43 = v76;
      v77(v60[7] + v71 * v53, v75, v76);
      uint64_t v62 = v60[2];
      BOOL v45 = __OFADD__(v62, 1);
      uint64_t v63 = v62 + 1;
      if (v45) {
        goto LABEL_24;
      }
      v60[2] = v63;
      v48 += v74;
      if (!--v47) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v70();
  unint64_t v34 = sub_259F17068(v26, v27);
  if ((v33 & 1) == (v35 & 1))
  {
    unint64_t v30 = v34;
    if ((v33 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v36 = (void *)swift_allocError();
    swift_willThrow();
    id v82 = v36;
    id v37 = v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA248);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v75, v76);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_259F68D30();
  __break(1u);
LABEL_26:
  uint64_t v78 = 0;
  unint64_t v79 = 0xE000000000000000;
  sub_259F68960();
  sub_259F686F0();
  sub_259F68A10();
  sub_259F686F0();
  sub_259F68A80();
  __break(1u);
}

uint64_t (*sub_259F455D8(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_259F45D40(v6);
  v6[10] = sub_259F457A8(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_259F45684;
}

uint64_t (*sub_259F45688(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_259F45D70(v6);
  v6[10] = sub_259F45A30(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_259F45684;
}

void sub_259F45734(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_259F457A8(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1, uint64_t a2)
{
  uint64_t v5 = v4;
  uint64_t v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[1] = a3;
  long long v10[2] = v4;
  *uint64_t v10 = a2;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA8A8);
  uint64_t v12 = malloc(*(void *)(*(void *)(v11 - 8) + 64));
  v10[3] = v12;
  uint64_t v13 = *v4;
  unint64_t v15 = sub_259F17068(a2, a3);
  *((unsigned char *)v10 + 40) = v14 & 1;
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    char v19 = v14;
    uint64_t v20 = *(void *)(v13 + 24);
    if (v20 >= v18 && (a4 & 1) != 0)
    {
LABEL_7:
      void v10[4] = v15;
      if (v19)
      {
LABEL_8:
        uint64_t v21 = *(void *)(*v5 + 56);
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA320);
        uint64_t v23 = *(void *)(v22 - 8);
        (*(void (**)(void *, unint64_t, uint64_t))(v23 + 32))(v12, v21 + *(void *)(v23 + 72) * v15, v22);
        uint64_t v24 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v12, v24, 1, v22);
        return sub_259F459F4;
      }
LABEL_11:
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA320);
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = 1;
      goto LABEL_12;
    }
    if (v20 >= v18 && (a4 & 1) == 0)
    {
      sub_259F25AE8();
      goto LABEL_7;
    }
    sub_259F197C8(v18, a4 & 1);
    unint64_t v25 = sub_259F17068(a2, a3);
    if ((v19 & 1) == (v26 & 1))
    {
      unint64_t v15 = v25;
      void v10[4] = v25;
      if (v19) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **, uint64_t))sub_259F68D30();
  __break(1u);
  return result;
}

void sub_259F459F4(uint64_t **a1, uint64_t a2)
{
}

void (*sub_259F45A30(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1, uint64_t a2)
{
  uint64_t v5 = v4;
  uint64_t v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[1] = a3;
  long long v10[2] = v4;
  *uint64_t v10 = a2;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA888);
  uint64_t v12 = malloc(*(void *)(*(void *)(v11 - 8) + 64));
  v10[3] = v12;
  uint64_t v13 = *v4;
  unint64_t v15 = sub_259F17068(a2, a3);
  *((unsigned char *)v10 + 40) = v14 & 1;
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    char v19 = v14;
    uint64_t v20 = *(void *)(v13 + 24);
    if (v20 >= v18 && (a4 & 1) != 0)
    {
LABEL_7:
      void v10[4] = v15;
      if (v19)
      {
LABEL_8:
        uint64_t v21 = *(void *)(*v5 + 56);
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA288);
        uint64_t v23 = *(void *)(v22 - 8);
        (*(void (**)(void *, unint64_t, uint64_t))(v23 + 32))(v12, v21 + *(void *)(v23 + 72) * v15, v22);
        uint64_t v24 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v12, v24, 1, v22);
        return sub_259F45C7C;
      }
LABEL_11:
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA288);
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = 1;
      goto LABEL_12;
    }
    if (v20 >= v18 && (a4 & 1) == 0)
    {
      sub_259F25AFC();
      goto LABEL_7;
    }
    sub_259F197DC(v18, a4 & 1);
    unint64_t v25 = sub_259F17068(a2, a3);
    if ((v19 & 1) == (v26 & 1))
    {
      unint64_t v15 = v25;
      void v10[4] = v25;
      if (v19) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **, uint64_t))sub_259F68D30();
  __break(1u);
  return result;
}

void sub_259F45C7C(uint64_t **a1, uint64_t a2)
{
}

void sub_259F45CB8(uint64_t **a1, uint64_t a2, uint64_t *a3, uint64_t *a4, void (*a5)(uint64_t, uint64_t, uint64_t, char *, uint64_t), uint64_t (*a6)(uint64_t, void))
{
  uint64_t v7 = *a1;
  uint64_t v8 = (void *)(*a1)[3];
  sub_259F45DAC((uint64_t)v8, *((unsigned char *)*a1 + 40), (void *)(*a1)[2], (*a1)[4], **a1, (*a1)[1], a3, a4, a5, a6);
  sub_259F17838((uint64_t)v8, a3);
  free(v8);
  free(v7);
}

uint64_t (*sub_259F45D40(void *a1))()
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_259F46BF8;
}

uint64_t (*sub_259F45D70(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_259F45DA0;
}

uint64_t sub_259F45DA0(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_259F45DAC(uint64_t a1, char a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t *a8, void (*a9)(uint64_t, uint64_t, uint64_t, char *, uint64_t), uint64_t (*a10)(uint64_t, void))
{
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(a7);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(a8);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  unint64_t v25 = (char *)&v29 - v24;
  sub_259F26A1C(a1, (uint64_t)v18, a7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    uint64_t result = sub_259F17838((uint64_t)v18, a7);
    if (a2)
    {
      swift_arrayDestroy();
      return a10(a4, *a3);
    }
  }
  else
  {
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v27(v25, v18, v19);
    uint64_t v28 = *a3;
    if (a2)
    {
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v27)(*(void *)(v28 + 56) + *(void *)(v20 + 72) * a4, v25, v19);
    }
    else
    {
      v27(v23, v25, v19);
      a9(a4, v29, v30, v23, v28);
      return swift_bridgeObjectRetain();
    }
  }
  return result;
}

uint64_t sub_259F45FF0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_259F46090(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_259F46174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v37 = a5;
  uint64_t v30 = a1 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 56);
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  if (v9) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v14 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    if (v14 < v31)
    {
      unint64_t v15 = *(void *)(v30 + 8 * v14);
      ++v11;
      if (v15) {
        goto LABEL_22;
      }
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v31) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v30 + 8 * v11);
      if (v15) {
        goto LABEL_22;
      }
      int64_t v11 = v14 + 2;
      if (v14 + 2 >= v31) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v30 + 8 * v11);
      if (v15) {
        goto LABEL_22;
      }
      int64_t v11 = v14 + 3;
      if (v14 + 3 >= v31) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v30 + 8 * v11);
      if (v15)
      {
LABEL_22:
        unint64_t v9 = (v15 - 1) & v15;
        for (unint64_t i = __clz(__rbit64(v15)) + (v11 << 6); ; unint64_t i = v12 | (v11 << 6))
        {
          uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
          uint64_t v19 = *v17;
          uint64_t v18 = v17[1];
          if (*(void *)(a4 + 16))
          {
            swift_bridgeObjectRetain_n();
            unint64_t v20 = sub_259F17068(v19, v18);
            if (v21)
            {
              sub_259F13740(*(void *)(a4 + 56) + 40 * v20, (uint64_t)&v32);
            }
            else
            {
              uint64_t v34 = 0;
              long long v32 = 0u;
              long long v33 = 0u;
            }
            swift_bridgeObjectRelease();
            if (*((void *)&v33 + 1))
            {
              sub_259F13728(&v32, (uint64_t)v35);
              swift_bridgeObjectRetain();
              uint64_t v22 = sub_259F4269C(&v32, v19, v18);
              uint64_t v24 = v23;
              uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA320);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v24, 1, v25))sub_259F681D0(); {
              ((void (*)(long long *, void))v22)(&v32, 0);
              }
              swift_bridgeObjectRelease();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
              uint64_t result = swift_bridgeObjectRelease();
              if (!v9) {
                goto LABEL_7;
              }
              goto LABEL_6;
            }
          }
          else
          {
            uint64_t v34 = 0;
            long long v32 = 0u;
            long long v33 = 0u;
            swift_bridgeObjectRetain();
          }
          sub_259F17838((uint64_t)&v32, &qword_26A3FA270);
          swift_bridgeObjectRetain();
          char v26 = sub_259F4269C(&v32, v19, v18);
          uint64_t v28 = v27;
          uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA320);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v28, 1, v29))
          {
            uint64_t v36 = 0;
            memset(v35, 0, sizeof(v35));
            sub_259F681E0();
            sub_259F17838((uint64_t)v35, &qword_26A3FA270);
          }
          ((void (*)(long long *, void))v26)(&v32, 0);
          uint64_t result = swift_bridgeObjectRelease_n();
          if (!v9) {
            goto LABEL_7;
          }
LABEL_6:
          unint64_t v12 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
        }
      }
      int64_t v16 = v14 + 4;
      if (v16 < v31)
      {
        unint64_t v15 = *(void *)(v30 + 8 * v16);
        if (v15)
        {
          int64_t v11 = v16;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v11 = v16 + 1;
          if (__OFADD__(v16, 1)) {
            goto LABEL_37;
          }
          if (v11 >= v31) {
            return swift_release();
          }
          unint64_t v15 = *(void *)(v30 + 8 * v11);
          ++v16;
          if (v15) {
            goto LABEL_22;
          }
        }
      }
    }
    return swift_release();
  }
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_259F4651C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 56);
  int64_t v36 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (v8) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v13 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v13 < v36)
    {
      unint64_t v14 = *(void *)(v29 + 8 * v13);
      ++v10;
      if (v14) {
        goto LABEL_22;
      }
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v36) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v29 + 8 * v10);
      if (v14) {
        goto LABEL_22;
      }
      int64_t v10 = v13 + 2;
      if (v13 + 2 >= v36) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v29 + 8 * v10);
      if (v14) {
        goto LABEL_22;
      }
      int64_t v10 = v13 + 3;
      if (v13 + 3 >= v36) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v29 + 8 * v10);
      if (v14)
      {
LABEL_22:
        unint64_t v8 = (v14 - 1) & v14;
        for (unint64_t i = __clz(__rbit64(v14)) + (v10 << 6); ; unint64_t i = v11 | (v10 << 6))
        {
          int64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
          uint64_t v17 = *v16;
          uint64_t v18 = v16[1];
          if (*(void *)(a4 + 16))
          {
            swift_bridgeObjectRetain_n();
            unint64_t v19 = sub_259F17068(v17, v18);
            if (v20)
            {
              sub_259F13740(*(void *)(a4 + 56) + 40 * v19, (uint64_t)&v31);
            }
            else
            {
              uint64_t v33 = 0;
              long long v31 = 0u;
              long long v32 = 0u;
            }
            swift_bridgeObjectRelease();
            if (*((void *)&v32 + 1))
            {
              sub_259F13728(&v31, (uint64_t)v34);
              swift_bridgeObjectRetain();
              char v21 = sub_259F42720(v30, v17, v18);
              uint64_t v23 = v22;
              uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA288);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v23, 1, v24))
              {
                sub_259F13740((uint64_t)v34, (uint64_t)&v31);
                sub_259F681D0();
                sub_259F31808((uint64_t)&v31);
              }
              ((void (*)(void *, void))v21)(v30, 0);
              swift_bridgeObjectRelease();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
              uint64_t result = swift_bridgeObjectRelease();
              if (!v8) {
                goto LABEL_7;
              }
              goto LABEL_6;
            }
          }
          else
          {
            uint64_t v33 = 0;
            long long v31 = 0u;
            long long v32 = 0u;
            swift_bridgeObjectRetain();
          }
          sub_259F17838((uint64_t)&v31, &qword_26A3FA270);
          swift_bridgeObjectRetain();
          uint64_t v25 = sub_259F42720(&v31, v17, v18);
          uint64_t v27 = v26;
          uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA288);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v27, 1, v28))
          {
            uint64_t v35 = 0;
            memset(v34, 0, sizeof(v34));
            sub_259F681E0();
            sub_259F17838((uint64_t)v34, &qword_26A3FA880);
          }
          ((void (*)(long long *, void))v25)(&v31, 0);
          uint64_t result = swift_bridgeObjectRelease_n();
          if (!v8) {
            goto LABEL_7;
          }
LABEL_6:
          unint64_t v11 = __clz(__rbit64(v8));
          v8 &= v8 - 1;
        }
      }
      int64_t v15 = v13 + 4;
      if (v15 < v36)
      {
        unint64_t v14 = *(void *)(v29 + 8 * v15);
        if (v14)
        {
          int64_t v10 = v15;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v10 = v15 + 1;
          if (__OFADD__(v15, 1)) {
            goto LABEL_37;
          }
          if (v10 >= v36) {
            return swift_release();
          }
          unint64_t v14 = *(void *)(v29 + 8 * v10);
          ++v15;
          if (v14) {
            goto LABEL_22;
          }
        }
      }
    }
    return swift_release();
  }
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_259F468D4(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v6 = 0;
  uint64_t v7 = result + 48;
  uint64_t v8 = -(uint64_t)v3;
  uint64_t v9 = MEMORY[0x263F8EE78];
  unint64_t v21 = *(void *)(result + 16);
  do
  {
    uint64_t v23 = v9;
    if (v6 <= v3) {
      unint64_t v10 = v3;
    }
    else {
      unint64_t v10 = v6;
    }
    uint64_t v11 = -(uint64_t)v10;
    for (unint64_t i = (uint64_t *)(v7 + 24 * v6++); ; i += 3)
    {
      if (v11 + v6 == 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v13 = *(i - 2);
      uint64_t v14 = *(i - 1);
      if (v13 != a2 || v14 != a3)
      {
        uint64_t v16 = *i;
        uint64_t result = sub_259F68C70();
        if ((result & 1) == 0) {
          break;
        }
      }
      ++v6;
      if (v8 + v6 == 1) {
        return v23;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = v23;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_259F1C8C8(0, *(void *)(v23 + 16) + 1, 1);
      uint64_t v9 = v23;
    }
    uint64_t v7 = v22;
    unint64_t v18 = *(void *)(v9 + 16);
    unint64_t v17 = *(void *)(v9 + 24);
    unint64_t v19 = v18 + 1;
    if (v18 >= v17 >> 1)
    {
      uint64_t result = sub_259F1C8C8(v17 > 1, v18 + 1, 1);
      unint64_t v19 = v18 + 1;
      uint64_t v7 = v22;
      uint64_t v9 = v23;
    }
    *(void *)(v9 + 16) = v19;
    char v20 = (void *)(v9 + 24 * v18);
    v20[4] = v13;
    v20[5] = v14;
    v20[6] = v16;
    unint64_t v3 = v21;
  }
  while (v8 + v6);
  return v9;
}

uint64_t sub_259F46A78(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_259F46A84()
{
  unint64_t result = qword_26A3FA870;
  if (!qword_26A3FA870)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A3FA868);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA870);
  }
  return result;
}

uint64_t sub_259F46AE0@<X0>(uint64_t a1@<X8>)
{
  return sub_259F42AA0(a1);
}

uint64_t sub_259F46AFC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t destroy for LogEntryCell(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

ValueMetadata *type metadata accessor for LogEntryCell()
{
  return &type metadata for LogEntryCell;
}

unint64_t sub_259F46B8C()
{
  unint64_t result = qword_26A3FA8B0;
  if (!qword_26A3FA8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA8B0);
  }
  return result;
}

uint64_t sub_259F46BE0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  return sub_259F42A7C(a1, a2, a3);
}

uint64_t destroy for BlockConfig(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 88);
  if (v2 >= 7) {
    unsigned int v2 = *(_DWORD *)a1 + 7;
  }
  switch(v2)
  {
    case 2u:
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 5u:
      goto LABEL_6;
    case 6u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (*(void *)(a1 + 56))
      {
        return __swift_destroy_boxed_opaque_existential_1(a1 + 32);
      }
      return result;
    default:
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();
LABEL_7:
      return swift_bridgeObjectRelease();
  }
}

uint64_t initializeWithCopy for BlockConfig(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 88);
  if (v4 >= 7) {
    unsigned int v4 = *(_DWORD *)a2 + 7;
  }
  switch(v4)
  {
    case 1u:
      uint64_t v7 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v7;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v8 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v8;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      char v9 = 1;
      goto LABEL_10;
    case 2u:
      uint64_t v10 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v10;
      uint64_t v11 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v11;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      uint64_t v12 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v12;
      uint64_t v13 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v13;
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      char v14 = 2;
      goto LABEL_8;
    case 3u:
      uint64_t v15 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v15;
      uint64_t v16 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v16;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      uint64_t v17 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v17;
      uint64_t v18 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v18;
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      char v14 = 3;
LABEL_8:
      *(unsigned char *)(a1 + 88) = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_13;
    case 4u:
      uint64_t v19 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v19;
      uint64_t v20 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v20;
      char v9 = 4;
LABEL_10:
      *(unsigned char *)(a1 + 88) = v9;
      goto LABEL_11;
    case 5u:
      uint64_t v21 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v21;
      uint64_t v22 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v22;
      *(unsigned char *)(a1 + 88) = 5;
      goto LABEL_13;
    case 6u:
      uint64_t v24 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v24;
      uint64_t v25 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v25;
      uint64_t v26 = (_OWORD *)(a2 + 32);
      uint64_t v27 = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v27)
      {
        uint64_t v28 = *(void *)(a2 + 64);
        *(void *)(a1 + 56) = v27;
        *(void *)(a1 + 64) = v28;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v27 - 8))(a1 + 32, a2 + 32, v27);
      }
      else
      {
        long long v29 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *v26;
        *(_OWORD *)(a1 + 48) = v29;
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
      }
      *(unsigned char *)(a1 + 88) = 6;
      return a1;
    default:
      uint64_t v5 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v6;
      *(unsigned char *)(a1 + 88) = 0;
LABEL_11:
      swift_bridgeObjectRetain();
LABEL_13:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
  }
}

uint64_t assignWithCopy for BlockConfig(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 88);
    if (v4 >= 7) {
      unsigned int v4 = *(_DWORD *)a1 + 7;
    }
    switch(v4)
    {
      case 2u:
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 5u:
        goto LABEL_7;
      case 6u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 56)) {
          __swift_destroy_boxed_opaque_existential_1(a1 + 32);
        }
        break;
      default:
        swift_bridgeObjectRelease();
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 88);
    if (v5 >= 7) {
      unsigned int v5 = *(_DWORD *)a2 + 7;
    }
    switch(v5)
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        char v6 = 1;
        goto LABEL_19;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        char v7 = 2;
        goto LABEL_17;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        char v7 = 3;
LABEL_17:
        *(unsigned char *)(a1 + 88) = v7;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        char v6 = 4;
LABEL_19:
        *(unsigned char *)(a1 + 88) = v6;
        goto LABEL_20;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(unsigned char *)(a1 + 88) = 5;
        goto LABEL_22;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        uint64_t v9 = *(void *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v9)
        {
          *(void *)(a1 + 56) = v9;
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(a1 + 32, a2 + 32, v9);
        }
        else
        {
          long long v10 = *(_OWORD *)(a2 + 32);
          long long v11 = *(_OWORD *)(a2 + 48);
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(_OWORD *)(a1 + 32) = v10;
          *(_OWORD *)(a1 + 48) = v11;
        }
        *(unsigned char *)(a1 + 88) = 6;
        return a1;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(unsigned char *)(a1 + 88) = 0;
LABEL_20:
        swift_bridgeObjectRetain();
LABEL_22:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
  }
  return a1;
}

__n128 __swift_memcpy89_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for BlockConfig(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 88);
    if (v4 >= 7) {
      unsigned int v4 = *(_DWORD *)a1 + 7;
    }
    switch(v4)
    {
      case 2u:
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 5u:
        goto LABEL_7;
      case 6u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 56)) {
          __swift_destroy_boxed_opaque_existential_1(a1 + 32);
        }
        break;
      default:
        swift_bridgeObjectRelease();
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 88);
    if (v5 >= 7) {
      unsigned int v5 = *(_DWORD *)a2 + 7;
    }
    switch(v5)
    {
      case 1u:
        long long v8 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v8;
        *(_OWORD *)(a1 + 32) = a2[2];
        char v6 = 1;
        break;
      case 2u:
        long long v9 = a2[3];
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v9;
        *(_OWORD *)(a1 + 64) = a2[4];
        *(void *)(a1 + 80) = *((void *)a2 + 10);
        long long v10 = *a2;
        long long v11 = a2[1];
        char v6 = 2;
        goto LABEL_18;
      case 3u:
        long long v12 = a2[3];
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v12;
        *(_OWORD *)(a1 + 64) = a2[4];
        *(void *)(a1 + 80) = *((void *)a2 + 10);
        long long v10 = *a2;
        long long v11 = a2[1];
        char v6 = 3;
LABEL_18:
        *(_OWORD *)a1 = v10;
        *(_OWORD *)(a1 + 16) = v11;
        break;
      case 4u:
        long long v13 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v13;
        char v6 = 4;
        break;
      case 5u:
        long long v14 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v14;
        char v6 = 5;
        break;
      case 6u:
        long long v15 = a2[3];
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v15;
        *(void *)(a1 + 64) = *((void *)a2 + 8);
        long long v16 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v16;
        char v6 = 6;
        break;
      default:
        char v6 = 0;
        long long v7 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v7;
        *(_OWORD *)(a1 + 32) = a2[2];
        break;
    }
    *(unsigned char *)(a1 + 88) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for BlockConfig(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA && *(unsigned char *)(a1 + 89)) {
    return (*(_DWORD *)a1 + 250);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 88);
  if (v3 >= 7) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BlockConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_OWORD *)(result + 73) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 250;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 89) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 88) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_259F47690(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 88);
  if (result >= 7) {
    return (*(_DWORD *)a1 + 7);
  }
  return result;
}

uint64_t sub_259F476AC(uint64_t result, unsigned int a2)
{
  if (a2 > 6)
  {
    unsigned int v2 = a2 - 7;
    *(void *)(result + 80) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    LOBYTE(a2) = 7;
    *(_DWORD *)uint64_t result = v2;
  }
  *(unsigned char *)(result + 88) = a2;
  return result;
}

ValueMetadata *type metadata accessor for BlockConfig()
{
  return &type metadata for BlockConfig;
}

uint64_t sub_259F476EC()
{
  sub_259F2BF28(v0, (uint64_t)v5);
  switch(v7)
  {
    case 1:
      uint64_t v1 = *(void *)&v5[0];
      goto LABEL_7;
    case 2:
    case 3:
      uint64_t v1 = *(void *)&v5[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v1;
    case 4:
      uint64_t v1 = *(void *)&v5[0];
      goto LABEL_7;
    case 5:
      uint64_t v1 = *(void *)&v5[0];
      swift_bridgeObjectRelease();
      return v1;
    case 6:
      v3[0] = v5[0];
      v3[1] = v5[1];
      v3[2] = v5[2];
      v3[3] = v5[3];
      uint64_t v4 = v6;
      uint64_t v1 = *(void *)&v5[0];
      swift_bridgeObjectRetain();
      sub_259F4A150((uint64_t)v3);
      return v1;
    default:
      uint64_t v1 = *(void *)&v5[0];
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v1;
  }
}

uint64_t sub_259F4781C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA8B8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v37[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F4925C();
  sub_259F68DF0();
  if (v2)
  {
    uint64_t v11 = (uint64_t)a1;
  }
  else
  {
    uint64_t v9 = v5;
    uint64_t v10 = v52;
    LOBYTE(v37[0]) = 0;
    sub_259F492B0();
    sub_259F68B60();
    long long v13 = v7;
    uint64_t v11 = v8;
    switch((char)v38)
    {
      case 1:
        uint64_t v24 = v10;
        sub_259F13740(v11, (uint64_t)v37);
        sub_259F4D894(v37, (uint64_t *)v46);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v4);
        long long v38 = v46[0];
        long long v39 = v46[1];
        long long v40 = v46[2];
        char v44 = 0;
        goto LABEL_15;
      case 2:
        uint64_t v24 = v10;
        sub_259F13740(v11, (uint64_t)v37);
        sub_259F14F40(v37, (uint64_t)v47);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v4);
        long long v38 = v47[0];
        long long v39 = v47[1];
        long long v40 = v47[2];
        char v25 = 1;
        goto LABEL_14;
      case 3:
        uint64_t v24 = v10;
        sub_259F13740(v11, (uint64_t)v37);
        sub_259F395BC(v37, (uint64_t)v50);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v4);
        long long v40 = v50[2];
        long long v41 = v50[3];
        long long v42 = v50[4];
        uint64_t v43 = v51;
        long long v38 = v50[0];
        long long v39 = v50[1];
        char v25 = 3;
        goto LABEL_14;
      case 4:
        uint64_t v24 = v10;
        sub_259F13740(v11, (uint64_t)v37);
        sub_259F395BC(v37, (uint64_t)v48);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v4);
        long long v40 = v48[2];
        long long v41 = v48[3];
        long long v42 = v48[4];
        uint64_t v43 = v49;
        long long v38 = v48[0];
        long long v39 = v48[1];
        char v25 = 2;
        goto LABEL_14;
      case 5:
        sub_259F13740(v8, (uint64_t)v37);
        uint64_t v26 = sub_259F3EA88(v37);
        uint64_t v28 = v27;
        long long v29 = v13;
        uint64_t v30 = v4;
        uint64_t v32 = v31;
        uint64_t v34 = v33;
        (*(void (**)(char *, uint64_t))(v9 + 8))(v29, v30);
        *(void *)&long long v38 = v26;
        *((void *)&v38 + 1) = v28;
        *(void *)&long long v39 = v32;
        *((void *)&v39 + 1) = v34;
        char v23 = 4;
        goto LABEL_13;
      case 6:
        uint64_t v24 = v10;
        sub_259F13740(v11, (uint64_t)v37);
        UserDefinedBlockConfig.init(from:)(v37, (uint64_t)&v38);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v4);
        char v25 = 6;
LABEL_14:
        char v44 = v25;
LABEL_15:
        sub_259F2BF84((uint64_t)&v38, (uint64_t)v45);
        uint64_t v35 = v24;
        break;
      default:
        sub_259F13740(v8, (uint64_t)v37);
        uint64_t v14 = sub_259F287D0(v37);
        uint64_t v16 = v15;
        uint64_t v17 = v13;
        uint64_t v18 = v4;
        uint64_t v20 = v19;
        uint64_t v22 = v21;
        (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v18);
        *(void *)&long long v38 = v14;
        *((void *)&v38 + 1) = v16;
        *(void *)&long long v39 = v20;
        *((void *)&v39 + 1) = v22;
        char v23 = 5;
LABEL_13:
        char v44 = v23;
        sub_259F2BF84((uint64_t)&v38, (uint64_t)v45);
        uint64_t v35 = v10;
        break;
    }
    sub_259F2BF84((uint64_t)v45, v35);
  }
  return __swift_destroy_boxed_opaque_existential_1(v11);
}

uint64_t sub_259F47CE0(void *a1)
{
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA8D0);
  uint64_t v17 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F4925C();
  sub_259F68E20();
  sub_259F2BF28(v1, (uint64_t)&v22);
  switch(v28)
  {
    case 1:
      long long v32 = v22;
      long long v33 = v23;
      long long v34 = v24;
      LOBYTE(v20[0]) = 2;
      char v19 = 0;
      sub_259F290E0();
      sub_259F68BF0();
      if (v2)
      {
        long long v42 = v32;
        sub_259F2C0C8((uint64_t)&v42);
        uint64_t v43 = *((void *)&v33 + 1);
        sub_259F2C0F4((uint64_t)&v43);
        sub_259F4A1A4((uint64_t)&v34, (uint64_t)v44);
        uint64_t v6 = v44;
      }
      else
      {
        sub_259F14A44(a1);
        long long v39 = v32;
        sub_259F2C0C8((uint64_t)&v39);
        uint64_t v40 = *((void *)&v33 + 1);
        sub_259F2C0F4((uint64_t)&v40);
        sub_259F4A1A4((uint64_t)&v34, (uint64_t)v41);
        uint64_t v6 = v41;
      }
      goto LABEL_23;
    case 2:
      _OWORD v35[2] = v24;
      v35[3] = v25;
      v35[4] = v26;
      uint64_t v36 = v27;
      v35[0] = v22;
      v35[1] = v23;
      LOBYTE(v20[0]) = 4;
      char v19 = 0;
      sub_259F290E0();
      uint64_t v7 = v51;
      sub_259F68BF0();
      if (!v2) {
        sub_259F388A4(a1);
      }
      sub_259F20254((uint64_t)v35);
      break;
    case 3:
      long long v37[2] = v24;
      v37[3] = v25;
      v37[4] = v26;
      uint64_t v38 = v27;
      v37[0] = v22;
      v37[1] = v23;
      LOBYTE(v20[0]) = 3;
      char v19 = 0;
      sub_259F290E0();
      uint64_t v7 = v51;
      sub_259F68BF0();
      if (!v2) {
        sub_259F388A4(a1);
      }
      sub_259F20254((uint64_t)v37);
      break;
    case 4:
      uint64_t v8 = *((void *)&v22 + 1);
      uint64_t v16 = v22;
      long long v9 = v23;
      LOBYTE(v20[0]) = 5;
      char v19 = 0;
      sub_259F290E0();
      uint64_t v7 = v51;
      sub_259F68BF0();
      if (!v2) {
        sub_259F3E5B4(a1, v16, v8, v9, *((uint64_t *)&v9 + 1));
      }
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 5:
      uint64_t v10 = *((void *)&v22 + 1);
      uint64_t v16 = v22;
      long long v11 = v23;
      LOBYTE(v20[0]) = 0;
      char v19 = 0;
      sub_259F290E0();
      uint64_t v7 = v51;
      sub_259F68BF0();
      if (!v2) {
        sub_259F28310(a1, v16, v10, v11, *((uint64_t *)&v11 + 1));
      }
LABEL_17:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 6:
      v20[2] = v24;
      v20[3] = v25;
      uint64_t v21 = v26;
      v20[0] = v22;
      v20[1] = v23;
      char v19 = 6;
      char v18 = 0;
      sub_259F290E0();
      uint64_t v7 = v51;
      sub_259F68BF0();
      if (!v2) {
        UserDefinedBlockConfig.encode(to:)(a1);
      }
      sub_259F4A150((uint64_t)v20);
      break;
    default:
      long long v29 = v22;
      long long v30 = v23;
      long long v31 = v24;
      LOBYTE(v20[0]) = 1;
      char v19 = 0;
      sub_259F290E0();
      sub_259F68BF0();
      if (v2)
      {
        long long v48 = v29;
        sub_259F2C0C8((uint64_t)&v48);
        uint64_t v49 = v30;
        sub_259F2C0F4((uint64_t)&v49);
        sub_259F4A1A4((uint64_t)&v31, (uint64_t)v50);
        uint64_t v6 = v50;
      }
      else
      {
        sub_259F4D3DC(a1);
        long long v45 = v29;
        sub_259F2C0C8((uint64_t)&v45);
        uint64_t v46 = v30;
        sub_259F2C0F4((uint64_t)&v46);
        sub_259F4A1A4((uint64_t)&v31, (uint64_t)v47);
        uint64_t v6 = v47;
      }
LABEL_23:
      sub_259F2C0C8((uint64_t)v6);
      uint64_t v7 = v51;
      break;
  }
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_259F34F80(0, 0, v12, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v5, v7);
}

uint64_t sub_259F48308(char *a1, char *a2)
{
  return sub_259F4C4E4(*a1, *a2);
}

uint64_t sub_259F48314()
{
  return sub_259F68DC0();
}

uint64_t sub_259F48394()
{
  sub_259F686E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_259F48400()
{
  return sub_259F68DC0();
}

uint64_t sub_259F4847C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_259F68AE0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_259F484DC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1701869940;
  if (*v1) {
    uint64_t v2 = 0x666E6F4372657375;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xEA00000000006769;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_259F48518()
{
  if (*v0) {
    return 0x666E6F4372657375;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_259F48550@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_259F68AE0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_259F485B4(uint64_t a1)
{
  unint64_t v2 = sub_259F4925C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_259F485F0(uint64_t a1)
{
  unint64_t v2 = sub_259F4925C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_259F4862C@<X0>(unsigned char *a1@<X8>)
{
  sub_259F2BF28(v1, (uint64_t)v4);
  switch(v4[88])
  {
    case 1:
      uint64_t result = sub_259F20200((uint64_t)v4);
      *a1 = 2;
      break;
    case 2:
      uint64_t result = sub_259F20200((uint64_t)v4);
      *a1 = 4;
      break;
    case 3:
      uint64_t result = sub_259F20200((uint64_t)v4);
      *a1 = 3;
      break;
    case 4:
      uint64_t result = sub_259F20200((uint64_t)v4);
      *a1 = 5;
      break;
    case 5:
      uint64_t result = sub_259F20200((uint64_t)v4);
      *a1 = 0;
      break;
    case 6:
      *a1 = 6;
      uint64_t result = sub_259F20200((uint64_t)v4);
      break;
    default:
      uint64_t result = sub_259F20200((uint64_t)v4);
      *a1 = 1;
      break;
  }
  return result;
}

uint64_t sub_259F48724()
{
  sub_259F2BF28(v0, (uint64_t)&v9);
  switch(v14)
  {
    case 1:
      uint64_t v1 = *((void *)&v11 + 1);
      if (*((void *)&v11 + 1)) {
        goto LABEL_4;
      }
      goto LABEL_6;
    case 2:
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    case 4:
      uint64_t v3 = v10;
      goto LABEL_8;
    case 5:
      uint64_t v4 = *((void *)&v10 + 1);
      if (!*((void *)&v10 + 1)) {
        goto LABEL_12;
      }
      uint64_t v5 = v10;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA260);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_259F6BA00;
      *(void *)(v3 + 32) = v5;
      *(void *)(v3 + 40) = v4;
      goto LABEL_11;
    case 6:
      id v7[2] = v11;
      _OWORD v7[3] = v12;
      uint64_t v8 = v13;
      v7[0] = v9;
      v7[1] = v10;
      if ((void)v10) {
        uint64_t v3 = v10;
      }
      else {
        uint64_t v3 = MEMORY[0x263F8EE78];
      }
      swift_bridgeObjectRetain();
      sub_259F4A150((uint64_t)v7);
      return v3;
    default:
      uint64_t v1 = *((void *)&v11 + 1);
      if (*((void *)&v11 + 1))
      {
LABEL_4:
        uint64_t v2 = v11;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA260);
        uint64_t v3 = swift_allocObject();
        *(_OWORD *)(v3 + 16) = xmmword_259F6BA00;
        *(void *)(v3 + 32) = v2;
        *(void *)(v3 + 40) = v1;
LABEL_8:
        swift_bridgeObjectRelease();
LABEL_11:
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_6:
        swift_bridgeObjectRelease();
LABEL_12:
        swift_bridgeObjectRelease();
        return MEMORY[0x263F8EE78];
      }
      return v3;
  }
}

uint64_t sub_259F488E8()
{
  sub_259F2BF28(v0, (uint64_t)&v5);
  switch(v10)
  {
    case 1:
      uint64_t v1 = *((void *)&v6 + 1);
      goto LABEL_5;
    case 2:
    case 3:
    case 4:
    case 5:
      sub_259F20200((uint64_t)&v5);
      uint64_t v1 = 0;
      break;
    case 6:
      v3[2] = v7;
      v3[3] = v8;
      uint64_t v4 = v9;
      v3[0] = v5;
      v3[1] = v6;
      uint64_t v1 = *((void *)&v6 + 1);
      swift_bridgeObjectRetain();
      sub_259F4A150((uint64_t)v3);
      break;
    default:
      uint64_t v1 = v6;
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  return v1;
}

uint64_t sub_259F489BC(void *a1, uint64_t a2)
{
  void (*v13)(uint64_t *__return_ptr, char *, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t (*)@<X0>(void *@<X8>), unsigned char *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  unsigned char v19[16];
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;

  uint64_t v5 = *(void *)(*__swift_project_boxed_opaque_existential_1(a1, a1[3]) + 72);
  uint64_t ObjectType = swift_getObjectType();
  long long v24 = 0;
  long long v6 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v7 = *(void *)(*v6 + 136);
  uint64_t v17 = *(void *)(*v6 + 128);
  uint64_t v8 = *(void *)(*__swift_project_boxed_opaque_existential_1(a1, a1[3]) + 144);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_259F4862C(&v23);
  uint64_t v9 = sub_259F476EC();
  uint64_t v11 = v10;
  uint64_t v20 = v2;
  uint64_t v21 = a1;
  uint64_t v12 = a2;
  long long v22 = a2;
  uint64_t v13 = *(void (**)(uint64_t *__return_ptr, char *, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t (*)@<X0>(void *@<X8>), unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 8);
  char v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA4A0);
  v13(&v25, &v24, v17, v7, v8, &v23, v9, v11, v12, sub_259F4A26C, v19, v14, ObjectType, v5);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (v18) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_259F48B34@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_259F4862C(&v11);
  uint64_t result = sub_259F48BB4(a2, a1, a3, &v10, &v11);
  if (!v4) {
    *a4 = v11;
  }
  return result;
}

uint64_t sub_259F48BB4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F2BF28(a2, (uint64_t)&v47);
  switch(v52)
  {
    case 1:
      long long v41 = a5;
      char v58 = a4;
      long long v16 = v47;
      char v17 = v48[0];
      long long v40 = *(_OWORD *)&v48[8];
      uint64_t v18 = *(void *)&v48[24];
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA2E8);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_259F6BA00;
      sub_259F13740((uint64_t)a1, (uint64_t)v45);
      v43[3] = (uint64_t)&type metadata for ExtractionBlockConfig;
      v43[4] = sub_259F4A2E8();
      uint64_t v20 = swift_allocObject();
      v43[0] = v20;
      *(_OWORD *)(v20 + 16) = v16;
      *(unsigned char *)(v20 + 32) = v17;
      *(_OWORD *)(v20 + 40) = v40;
      *(void *)(v20 + 56) = v18;
      uint64_t v21 = type metadata accessor for ExtractionBlock();
      uint64_t v22 = swift_allocObject();
      uint64_t v23 = v22 + OBJC_IVAR____TtC12PoirotBlocks15ExtractionBlock_statement;
      uint64_t v24 = sub_259F68360();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
      *(unsigned char *)(v22 + OBJC_IVAR____TtC12PoirotBlocks15ExtractionBlock_initialized) = 0;
      sub_259F13740((uint64_t)v45, (uint64_t)v44);
      sub_259F13740((uint64_t)v43, (uint64_t)v42);
      swift_retain();
      uint64_t v25 = sub_259F4A630(v44, 0, a3, v42);
      uint64_t v14 = v5;
      if (v5)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
        goto LABEL_13;
      }
      uint64_t v39 = v25;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
      *(void *)(v19 + 56) = v21;
      *(void *)(v19 + 64) = &off_2707E3708;
      *(void *)(v19 + 32) = v39;
      goto LABEL_22;
    case 2:
      v54[2] = *(_OWORD *)&v48[16];
      v54[3] = v49;
      v54[4] = v50;
      uint64_t v55 = v51;
      v54[0] = v47;
      v54[1] = *(_OWORD *)v48;
      sub_259F13740((uint64_t)a1, (uint64_t)v45);
      type metadata accessor for TemplateBlockLegacy();
      swift_allocObject();
      uint64_t result = sub_259F58760(v45, a3, (uint64_t)v54);
      uint64_t v14 = v5;
      if (!v5) {
        goto LABEL_9;
      }
      goto LABEL_17;
    case 3:
      v56[2] = *(_OWORD *)&v48[16];
      v56[3] = v49;
      v56[4] = v50;
      uint64_t v57 = v51;
      v56[0] = v47;
      v56[1] = *(_OWORD *)v48;
      sub_259F13740((uint64_t)a1, (uint64_t)v45);
      type metadata accessor for TemplateBlock();
      swift_allocObject();
      uint64_t result = sub_259F1FCF8(v45, a3, (uint64_t)v56);
      uint64_t v14 = v5;
      if (v5) {
        goto LABEL_17;
      }
LABEL_9:
      uint64_t v26 = *(void *)(result + 176);
      swift_bridgeObjectRetain();
      uint64_t result = swift_release();
      *a5 = v26;
      return result;
    case 4:
      char v58 = a4;
      long long v27 = v47;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA2E8);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_259F6BA00;
      uint64_t v29 = type metadata accessor for JoinBlock();
      swift_allocObject();
      uint64_t v30 = swift_retain_n();
      uint64_t v31 = sub_259F638CC(v30, a3, v27, *((uint64_t *)&v27 + 1));
      uint64_t v14 = v5;
      if (v5)
      {
        *(void *)(v28 + 16) = 0;
        swift_release();
        goto LABEL_14;
      }
      *(void *)(v28 + 56) = v29;
      *(void *)(v28 + 64) = &off_2707E3708;
      *(void *)(v28 + 32) = v31;
      uint64_t result = swift_release();
      *a5 = v28;
      return result;
    case 5:
      long long v41 = a5;
      char v58 = a4;
      long long v32 = v47;
      uint64_t v34 = *(void *)v48;
      uint64_t v33 = *(void *)&v48[8];
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA2E8);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_259F6BA00;
      sub_259F13740((uint64_t)a1, (uint64_t)v45);
      uint64_t v35 = type metadata accessor for MaterializedViewBlock();
      swift_allocObject();
      swift_retain();
      uint64_t v36 = sub_259F0DE48(v45, a3, v32, *((uint64_t *)&v32 + 1), v34, v33);
      uint64_t v14 = v5;
      if (!v5)
      {
        *(void *)(v19 + 56) = v35;
        *(void *)(v19 + 64) = &off_2707E3708;
        *(void *)(v19 + 32) = v36;
LABEL_22:
        uint64_t result = swift_release();
        uint64_t *v41 = v19;
        return result;
      }
LABEL_13:
      *(void *)(v19 + 16) = 0;
      swift_release();
LABEL_14:
      uint64_t result = swift_release();
      a4 = v58;
      goto LABEL_17;
    case 6:
      v45[2] = *(_OWORD *)&v48[16];
      v45[3] = v49;
      uint64_t v46 = v50;
      v45[0] = v47;
      v45[1] = *(_OWORD *)v48;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA2E8);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_259F6BA00;
      sub_259F13740((uint64_t)a1, (uint64_t)v44);
      sub_259F4A28C((uint64_t)v45, (uint64_t)v43);
      uint64_t v37 = type metadata accessor for UserDefinedBlock();
      swift_allocObject();
      swift_retain();
      uint64_t v38 = sub_259F602F4(v44, a3, v43);
      uint64_t v14 = v5;
      if (v5)
      {
        *(void *)(v11 + 16) = 0;
        swift_release();
        swift_release();
        uint64_t result = sub_259F4A150((uint64_t)v45);
        goto LABEL_17;
      }
      *(void *)(v11 + 56) = v37;
      *(void *)(v11 + 64) = &off_2707E3708;
      *(void *)(v11 + 32) = v38;
      swift_release();
      uint64_t result = sub_259F4A150((uint64_t)v45);
      goto LABEL_24;
    default:
      v53[0] = v47;
      v53[1] = *(_OWORD *)v48;
      v53[2] = *(_OWORD *)&v48[16];
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA2E8);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_259F6BA00;
      sub_259F13740((uint64_t)a1, (uint64_t)v45);
      uint64_t v12 = type metadata accessor for AggregationBlock();
      swift_allocObject();
      swift_retain();
      uint64_t v13 = sub_259F321BC((uint64_t)v45, 0, a3, v53);
      uint64_t v14 = v5;
      if (v5)
      {
        *(void *)(v11 + 16) = 0;
        swift_release();
        uint64_t result = swift_release();
LABEL_17:
        *a4 = v14;
      }
      else
      {
        *(void *)(v11 + 56) = v12;
        *(void *)(v11 + 64) = &off_2707E3708;
        *(void *)(v11 + 32) = v13;
        uint64_t result = swift_release();
LABEL_24:
        *a5 = v11;
      }
      return result;
  }
}

uint64_t sub_259F49228@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_259F4781C(a1, a2);
}

uint64_t sub_259F49240(void *a1)
{
  return sub_259F47CE0(a1);
}

unint64_t sub_259F4925C()
{
  unint64_t result = qword_26A3FA8C0;
  if (!qword_26A3FA8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA8C0);
  }
  return result;
}

unint64_t sub_259F492B0()
{
  unint64_t result = qword_26A3FA8C8;
  if (!qword_26A3FA8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA8C8);
  }
  return result;
}

uint64_t sub_259F49304(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a1 + 1;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
  }
  else if ((v3 & 0x8000000000000000) == 0)
  {
    return sub_259F489BC(a3, v3);
  }
  uint64_t result = sub_259F68A70();
  __break(1u);
  return result;
}

uint64_t sub_259F4938C(uint64_t a1, uint64_t a2)
{
  sub_259F2BF28(a1, (uint64_t)v75);
  sub_259F2BF28(a2, (uint64_t)&v76);
  switch(v75[88])
  {
    case 1:
      sub_259F2BF28((uint64_t)v75, (uint64_t)&v65);
      uint64_t v11 = (uint64_t)v67;
      uint64_t v4 = v69;
      if (v83 != 1) {
        goto LABEL_61;
      }
      int v12 = v66;
      uint64_t v6 = v68;
      int v13 = v77;
      uint64_t v14 = *((void *)&v77 + 1);
      uint64_t v9 = *((void *)&v78 + 1);
      uint64_t v10 = v78;
      if (v65 != v76 && (sub_259F68C70() & 1) == 0 || v12 != v13 || (sub_259F2D8E0(v11, v14) & 1) == 0) {
        goto LABEL_65;
      }
      if (!v4) {
        goto LABEL_93;
      }
      if (!v9) {
        goto LABEL_9;
      }
      goto LABEL_17;
    case 2:
      sub_259F2BF28((uint64_t)v75, (uint64_t)&v65);
      if (v83 != 2) {
        goto LABEL_60;
      }
      uint64_t v53 = v74;
      uint64_t v55 = v72;
      uint64_t v59 = v68;
      uint64_t v61 = v67;
      uint64_t v15 = v66;
      int v16 = v69;
      uint64_t v49 = v73;
      unint64_t v51 = v70;
      long long v17 = v77;
      uint64_t v18 = v78;
      int v19 = BYTE8(v78);
      long long v20 = v79;
      unint64_t v57 = v71;
      uint64_t v21 = v80;
      uint64_t v47 = v81;
      uint64_t v22 = v82;
      if (v65 != v76 && (sub_259F68C70() & 1) == 0
        || __PAIR128__((unint64_t)v61, (unint64_t)v15) != v17 && (sub_259F68C70() & 1) == 0
        || (sub_259F2D8E0(v59, v18) & 1) == 0
        || v16 != v19)
      {
        goto LABEL_75;
      }
      if (v57)
      {
        uint64_t v43 = v55;
        if (!*((void *)&v20 + 1)) {
          goto LABEL_106;
        }
        if (__PAIR128__(v57, v51) != v20 && (sub_259F68C70() & 1) == 0) {
          goto LABEL_75;
        }
      }
      else
      {
        uint64_t v43 = v55;
        if (*((void *)&v20 + 1)) {
          goto LABEL_106;
        }
      }
      if ((sub_259F2DA5C(v43, v21) & 1) == 0) {
        goto LABEL_106;
      }
      if (v49 == v47 && v53 == v22) {
        goto LABEL_100;
      }
      goto LABEL_108;
    case 3:
      sub_259F2BF28((uint64_t)v75, (uint64_t)&v65);
      if (v83 != 3)
      {
LABEL_60:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_61:
        swift_bridgeObjectRelease();
LABEL_62:
        swift_bridgeObjectRelease();
LABEL_63:
        swift_bridgeObjectRelease();
LABEL_64:
        sub_259F4A20C((uint64_t)v75);
        goto LABEL_78;
      }
      uint64_t v54 = v74;
      BOOL v56 = v72;
      uint64_t v60 = v68;
      uint64_t v62 = v67;
      uint64_t v23 = v66;
      int v24 = v69;
      uint64_t v50 = v73;
      unint64_t v52 = v70;
      long long v25 = v77;
      uint64_t v26 = v78;
      int v27 = BYTE8(v78);
      long long v28 = v79;
      unint64_t v58 = v71;
      uint64_t v29 = v80;
      uint64_t v48 = v81;
      uint64_t v30 = v82;
      if (v65 != v76 && (sub_259F68C70() & 1) == 0
        || __PAIR128__((unint64_t)v62, (unint64_t)v23) != v25 && (sub_259F68C70() & 1) == 0
        || (sub_259F2D8E0(v60, v26) & 1) == 0
        || v24 != v27)
      {
        goto LABEL_75;
      }
      if (!v58)
      {
        char v44 = v56;
        uint64_t v45 = v54;
        if (!*((void *)&v28 + 1)) {
          goto LABEL_102;
        }
LABEL_106:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_107:
        swift_bridgeObjectRelease();
LABEL_76:
        swift_bridgeObjectRelease();
LABEL_77:
        sub_259F20200((uint64_t)v75);
LABEL_78:
        char v40 = 0;
        return v40 & 1;
      }
      char v44 = v56;
      if (!*((void *)&v28 + 1)) {
        goto LABEL_106;
      }
      uint64_t v45 = v54;
      if (__PAIR128__(v58, v52) != v28 && (sub_259F68C70() & 1) == 0)
      {
LABEL_75:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_76;
      }
LABEL_102:
      if ((sub_259F2DA5C(v44, v29) & 1) == 0) {
        goto LABEL_106;
      }
      if (v50 == v48 && v45 == v30)
      {
LABEL_100:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_57:
        swift_bridgeObjectRelease();
        goto LABEL_109;
      }
LABEL_108:
      char v46 = sub_259F68C70();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v46 & 1) == 0) {
        goto LABEL_77;
      }
LABEL_109:
      sub_259F20200((uint64_t)v75);
      char v40 = 1;
      return v40 & 1;
    case 4:
      sub_259F2BF28((uint64_t)v75, (uint64_t)&v65);
      uint64_t v31 = v66;
      long long v32 = v67;
      if (v83 != 4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_63;
      }
      long long v33 = v77;
      BOOL v34 = (void)v65 == (void)v76 && *((void *)&v65 + 1) == *((void *)&v76 + 1);
      if (v34 || (sub_259F68C70()) && (sub_259F2D818(v31, (void *)v33))
      {
        char v35 = sub_259F2D818(v32, *((void **)&v33 + 1));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_44;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_76;
    case 5:
      sub_259F2BF28((uint64_t)v75, (uint64_t)&v65);
      uint64_t v36 = v67;
      if (v83 != 5) {
        goto LABEL_62;
      }
      uint64_t v37 = v66;
      long long v38 = v77;
      BOOL v39 = (void)v65 == (void)v76 && *((void *)&v65 + 1) == *((void *)&v76 + 1);
      if (!v39 && (sub_259F68C70() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_107;
      }
      if (!v36)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!*((void *)&v38 + 1)) {
          goto LABEL_109;
        }
        goto LABEL_76;
      }
      if (!*((void *)&v38 + 1)) {
        goto LABEL_80;
      }
      if (__PAIR128__((unint64_t)v36, (unint64_t)v37) == v38)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_56;
      }
      char v42 = sub_259F68C70();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v42 & 1) == 0) {
        goto LABEL_77;
      }
      goto LABEL_109;
    case 6:
      sub_259F2BF28((uint64_t)v75, (uint64_t)&v65);
      if (v83 == 6)
      {
        v63[2] = v78;
        v63[3] = v79;
        uint64_t v64 = v80;
        v63[0] = v76;
        v63[1] = v77;
        char v40 = _s12PoirotBlocks22UserDefinedBlockConfigV2eeoiySbAC_ACtFZ_0((uint64_t)&v65, (uint64_t)v63);
        sub_259F4A150((uint64_t)v63);
        sub_259F4A150((uint64_t)&v65);
        sub_259F20200((uint64_t)v75);
        return v40 & 1;
      }
      sub_259F4A150((uint64_t)&v65);
      goto LABEL_64;
    default:
      sub_259F2BF28((uint64_t)v75, (uint64_t)&v65);
      uint64_t v3 = (uint64_t)v66;
      uint64_t v4 = v69;
      if (v83) {
        goto LABEL_61;
      }
      int v5 = v67;
      uint64_t v6 = v68;
      uint64_t v7 = v77;
      int v8 = BYTE8(v77);
      uint64_t v9 = *((void *)&v78 + 1);
      uint64_t v10 = v78;
      if (v65 != v76 && (sub_259F68C70() & 1) == 0 || (sub_259F2D8E0(v3, v7) & 1) == 0 || v5 != v8)
      {
LABEL_65:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_76;
      }
      if (v4)
      {
        if (!v9)
        {
LABEL_9:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_80:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_76;
        }
LABEL_17:
        if (v6 == v10 && v4 == v9)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_56:
          swift_bridgeObjectRelease();
          goto LABEL_57;
        }
        char v35 = sub_259F68C70();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_44:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v35 & 1) == 0) {
          goto LABEL_77;
        }
      }
      else
      {
LABEL_93:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v9) {
          goto LABEL_76;
        }
      }
      goto LABEL_109;
  }
}

uint64_t sub_259F4A150(uint64_t a1)
{
  return a1;
}

uint64_t sub_259F4A1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA8D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_259F4A20C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA8E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_259F4A26C@<X0>(void *a1@<X8>)
{
  return sub_259F48B34(*(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_259F4A28C(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_259F4A2E8()
{
  unint64_t result = qword_26A3FA8E8;
  if (!qword_26A3FA8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA8E8);
  }
  return result;
}

uint64_t sub_259F4A33C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

unsigned char *storeEnumTagSinglePayload for BlockConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259F4A450);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BlockConfig.CodingKeys()
{
  return &type metadata for BlockConfig.CodingKeys;
}

unint64_t sub_259F4A48C()
{
  unint64_t result = qword_26A3FA8F0;
  if (!qword_26A3FA8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA8F0);
  }
  return result;
}

unint64_t sub_259F4A4E4()
{
  unint64_t result = qword_26A3FA8F8;
  if (!qword_26A3FA8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA8F8);
  }
  return result;
}

unint64_t sub_259F4A53C()
{
  unint64_t result = qword_26A3FA900;
  if (!qword_26A3FA900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA900);
  }
  return result;
}

uint64_t dispatch thunk of DatasetProcessing.done.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DatasetProcessing.process(dataset:logCollector:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))() & 1;
}

uint64_t dispatch thunk of DatasetProcessing.reset()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_259F4A5F8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t *__return_ptr))(a2 + 16))(&var1);
  return 0;
}

uint64_t sub_259F4A630(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  sub_259F13740((uint64_t)a1, (uint64_t)v36);
  sub_259F13740((uint64_t)a4, (uint64_t)v33);
  if (a2)
  {
    swift_retain();
    uint64_t v9 = a2;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v36, v37);
    uint64_t v11 = v34;
    uint64_t v10 = v35;
    __swift_project_boxed_opaque_existential_1(v33, v34);
    uint64_t v12 = *(void *)(v10 + 8);
    int v13 = *(void (**)(uint64_t, uint64_t))(v12 + 32);
    swift_retain();
    v13(v11, v12);
    uint64_t v14 = sub_259F686B0();
    uint64_t v16 = v15;
    swift_beginAccess();
    uint64_t v9 = sub_259F4AB98(v14, v16);
    swift_endAccess();
    if (!v9)
    {
      sub_259F0E9A4();
      swift_allocError();
      *(void *)uint64_t v31 = v14;
      *(void *)(v31 + 8) = v16;
      *(unsigned char *)(v31 + 16) = 3;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a4);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      type metadata accessor for QueryBlock();
      swift_deallocPartialClassInstance();
      return v14;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  *(void *)(v5 + 56) = v9;
  uint64_t v17 = a4[3];
  uint64_t v18 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v17);
  *(unsigned char *)(v5 + 88) = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18) & 1;
  uint64_t v19 = a4[3];
  uint64_t v20 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v19);
  *(void *)(v5 + 64) = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 24))(v19, v20);
  uint64_t v21 = a4[3];
  uint64_t v22 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v21);
  *(void *)(v5 + 72) = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 32))(v21, v22);
  *(void *)(v5 + 80) = v23;
  swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v24 = a4[3];
  uint64_t v25 = a4[4];
  uint64_t v26 = __swift_project_boxed_opaque_existential_1(a4, v24);
  uint64_t v37 = v24;
  uint64_t v38 = *(void *)(v25 + 8);
  uint64_t v27 = v38;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v36);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(boxed_opaque_existential_1, v26, v24);
  uint64_t v29 = swift_retain();
  uint64_t v14 = sub_259F5DA20(v29, a3, (uint64_t)boxed_opaque_existential_1, v5, v24, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v14;
}

uint64_t sub_259F4A964(uint64_t *a1)
{
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[8];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *a1;
  *a1 = 0x8000000000000000;
  sub_259F23F98(v3, v4, v5, v3, v4, isUniquelyReferenced_nonNull_native);
  *a1 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_259F4AA24(uint64_t a1)
{
  uint64_t v5 = v1[4];
  uint64_t v4 = v1[5];
  uint64_t v6 = v1[8];
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_259F5EB80(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v8 + 16);
  swift_bridgeObjectRelease();
  if (v9)
  {
    long long v13[3] = &type metadata for DatasetColumnLayout;
    v13[0] = v5;
    v13[1] = v4;
    v13[4] = sub_259F334CC();
    v13[2] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_259F68320();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    uint64_t v10 = a1;
    uint64_t v11 = sub_259F68330();
    if (!v2) {
      return v11;
    }
  }
  return v10;
}

ValueMetadata *type metadata accessor for QueryBlockError()
{
  return &type metadata for QueryBlockError;
}

void sub_259F4AB30(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_259F4AB3C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for QueryBlock()
{
  return self;
}

uint64_t sub_259F4AB98(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_259F17068(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_259F24DB0();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_259F23110(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_259F4AC68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_259F4AEFC(a1, a2, MEMORY[0x263F5F1F0], (void (*)(unint64_t, uint64_t))sub_259F232E8, (void (*)(void))sub_259F24F68, a3);
}

double sub_259F4ACA8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_259F17350(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v13 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_259F25644();
      uint64_t v9 = v13;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_259F68A60();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    sub_259F1E5EC((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_259F234EC(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_259F4ADD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_259F17068(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_259F25DCC();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 16 * v6);
  sub_259F239D8(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_259F4AEBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_259F4AEFC(a1, a2, MEMORY[0x263F5F190], (void (*)(unint64_t, uint64_t))sub_259F23BB0, (void (*)(void))sub_259F26138, a3);
}

uint64_t sub_259F4AEFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, void (*a4)(unint64_t, uint64_t)@<X3>, void (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10 = v6;
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_259F17068(a1, a2);
  LOBYTE(a2) = v15;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v10;
    uint64_t v27 = *v10;
    *uint64_t v10 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a5();
      uint64_t v17 = v27;
    }
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void *)(v17 + 56);
    uint64_t v19 = a3(0);
    uint64_t v26 = *(void *)(v19 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v26 + 32))(a6, v18 + *(void *)(v26 + 72) * v14, v19);
    a4(v14, v17);
    *uint64_t v10 = v17;
    swift_bridgeObjectRelease();
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56);
    uint64_t v21 = a6;
    uint64_t v22 = 0;
    uint64_t v23 = v19;
  }
  else
  {
    uint64_t v24 = a3(0);
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
    uint64_t v23 = v24;
    uint64_t v21 = a6;
    uint64_t v22 = 1;
  }
  return v20(v21, v22, 1, v23);
}

uint64_t sub_259F4B0C8()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA920);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v0 + 16) = 0;
  swift_bridgeObjectRetain();
  sub_259F68300();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v1)
  {
    uint64_t v6 = sub_259F68360();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 0, 1, v6);
    uint64_t v7 = v0 + OBJC_IVAR____TtC12PoirotBlocks15ExtractionBlock_statement;
    swift_beginAccess();
    sub_259F4BEA8((uint64_t)v4, v7);
    uint64_t result = swift_endAccess();
    *(unsigned char *)(v0 + OBJC_IVAR____TtC12PoirotBlocks15ExtractionBlock_initialized) = 0;
  }
  return result;
}

uint64_t sub_259F4B210()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA920);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v0 + 16) = 1;
  uint64_t v4 = sub_259F68360();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC12PoirotBlocks15ExtractionBlock_statement;
  swift_beginAccess();
  sub_259F4BEA8((uint64_t)v3, v5);
  return swift_endAccess();
}

uint64_t sub_259F4B308(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v49 = a2;
  uint64_t v50 = a3;
  unint64_t v52 = a1;
  uint64_t v4 = sub_259F68810();
  uint64_t v51 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA920);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v43 - v11;
  uint64_t v13 = sub_259F68360();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v43 - v18;
  sub_259F68820();
  if (!v3)
  {
    char v46 = v10;
    uint64_t v47 = v6;
    uint64_t v48 = v19;
    uint64_t v21 = v54;
    uint64_t v22 = v54 + OBJC_IVAR____TtC12PoirotBlocks15ExtractionBlock_statement;
    swift_beginAccess();
    sub_259F4BDE4(v22, (uint64_t)v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      sub_259F4BD84((uint64_t)v12);
LABEL_4:
      char v20 = 0;
      return v20 & 1;
    }
    uint64_t v24 = v13;
    uint64_t v25 = v21;
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    uint64_t v45 = v24;
    v26(v48, v12, v24);
    if (*(unsigned char *)(v21 + OBJC_IVAR____TtC12PoirotBlocks15ExtractionBlock_initialized))
    {
      uint64_t v27 = (void **)v52;
    }
    else
    {
      uint64_t v43 = OBJC_IVAR____TtC12PoirotBlocks15ExtractionBlock_initialized;
      uint64_t v44 = v14;
      uint64_t v29 = v21;
      uint64_t v27 = (void **)v52;
      v53[0] = *v52;
      uint64_t v30 = *(void *)(v25 + 72);
      uint64_t v31 = *(void *)(v29 + 80);
      swift_bridgeObjectRetain();
      sub_259F2C214(v30, v31);
      uint64_t v25 = v29;
      swift_bridgeObjectRelease();
      sub_259F68350();
      uint64_t v14 = v44;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v17, v45);
      swift_bridgeObjectRelease();
      *(unsigned char *)(v25 + v43) = 1;
    }
    uint64_t v28 = sub_259F4AA24((uint64_t)v48);
    uint64_t v32 = v28;
    uint64_t v33 = (uint64_t)v46;
    if (!v28)
    {
      *(unsigned char *)(v25 + 16) = 1;
      uint64_t v42 = v45;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v33, 1, 1, v45);
      swift_beginAccess();
      sub_259F4BEA8(v33, v22);
      swift_endAccess();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v48, v42);
      goto LABEL_4;
    }
    uint64_t v35 = *(void *)(v25 + 32);
    uint64_t v34 = *(void *)(v25 + 40);
    uint64_t v36 = *v27;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v44 = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v36 = sub_259F2E644(0, v36[2] + 1, 1, v36);
    }
    unint64_t v39 = v36[2];
    unint64_t v38 = v36[3];
    if (v39 >= v38 >> 1) {
      uint64_t v36 = sub_259F2E644((void *)(v38 > 1), v39 + 1, 1, v36);
    }
    long long v36[2] = v39 + 1;
    char v40 = &v36[3 * v39];
    v40[4] = v35;
    v40[5] = v34;
    v40[6] = v32;
    *unint64_t v52 = v36;
    uint64_t ObjectType = swift_getObjectType();
    v53[0] = v35;
    v53[1] = v34;
    v53[2] = v32;
    (*(void (**)(void *, uint64_t))(v50 + 16))(v53, ObjectType);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v48, v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v20 = 1;
  }
  return v20 & 1;
}

uint64_t sub_259F4B9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_259F68690();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA4F0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_259F6BA00;
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  _OWORD v17[2] = 0;
  v17[3] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_259F68960();
  sub_259F686F0();
  void v17[5] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA248);
  sub_259F68A10();
  sub_259F68680();
  uint64_t v11 = sub_259F68660();
  unint64_t v13 = v12;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v13 >> 60 == 15) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = v11;
  }
  unint64_t v15 = 0xC000000000000000;
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v10;
  *(unsigned char *)(v8 + 48) = 3;
  if (v13 >> 60 != 15) {
    unint64_t v15 = v13;
  }
  *(void *)(v8 + 56) = v14;
  *(void *)(v8 + 64) = v15;
  return v8;
}

uint64_t sub_259F4BBA4()
{
  return sub_259F4BD84(v0 + OBJC_IVAR____TtC12PoirotBlocks15ExtractionBlock_statement);
}

uint64_t sub_259F4BBB4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259F4BD84(v0 + OBJC_IVAR____TtC12PoirotBlocks15ExtractionBlock_statement);
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_259F4BC40()
{
  return type metadata accessor for ExtractionBlock();
}

uint64_t type metadata accessor for ExtractionBlock()
{
  uint64_t result = qword_26A3FA908;
  if (!qword_26A3FA908) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_259F4BC94()
{
  sub_259F4BD2C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_259F4BD2C()
{
  if (!qword_26A3FA918)
  {
    sub_259F68360();
    unint64_t v0 = sub_259F688B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A3FA918);
    }
  }
}

uint64_t sub_259F4BD84(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA920);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_259F4BDE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_259F4BE4C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_259F4BE8C()
{
  return sub_259F4B9CC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_259F4BEA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

PoirotBlocks::RecipeMetadata __swiftcall RecipeMetadata.init(name:version:)(Swift::String name, Swift::UInt version)
{
  *uint64_t v2 = name;
  v2[1]._uint64_t countAndFlagsBits = version;
  result.name = name;
  result.version = version;
  return result;
}

uint64_t sub_259F4BF1C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x8000000259F69500;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000010;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x7461676572676761;
      uint64_t v6 = 7237481;
      goto LABEL_8;
    case 2:
      unint64_t v5 = 0x6974636172747865;
      unint64_t v3 = 0xEA00000000006E6FLL;
      break;
    case 3:
      unint64_t v5 = 0x6574616C706D6574;
      unint64_t v3 = 0xEA00000000003256;
      break;
    case 4:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x6574616C706D6574;
      break;
    case 5:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1852403562;
      break;
    case 6:
      unint64_t v5 = 0x6966654472657375;
      uint64_t v6 = 6579566;
LABEL_8:
      unint64_t v3 = v6 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x8000000259F69500;
  switch(a2)
  {
    case 1:
      uint64_t v8 = 0x7461676572676761;
      uint64_t v9 = 7237481;
      goto LABEL_21;
    case 2:
      uint64_t v10 = 0x6974636172747865;
      uint64_t v11 = 28271;
      goto LABEL_13;
    case 3:
      uint64_t v10 = 0x6574616C706D6574;
      uint64_t v11 = 12886;
LABEL_13:
      unint64_t v7 = v11 & 0xFFFFFFFFFFFFLL | 0xEA00000000000000;
      if (v5 != v10) {
        goto LABEL_24;
      }
      goto LABEL_22;
    case 4:
      unint64_t v7 = 0xE800000000000000;
      if (v5 != 0x6574616C706D6574) {
        goto LABEL_24;
      }
      goto LABEL_22;
    case 5:
      unint64_t v7 = 0xE400000000000000;
      unint64_t v2 = 1852403562;
      goto LABEL_18;
    case 6:
      uint64_t v8 = 0x6966654472657375;
      uint64_t v9 = 6579566;
LABEL_21:
      unint64_t v7 = v9 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      if (v5 == v8) {
        goto LABEL_22;
      }
      goto LABEL_24;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_24;
      }
LABEL_22:
      if (v3 == v7) {
        char v12 = 1;
      }
      else {
LABEL_24:
      }
        char v12 = sub_259F68C70();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12 & 1;
  }
}

uint64_t sub_259F4C16C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701667182;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1701667182;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x656C62616C6C756ELL;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x746F766970;
      break;
    case 3:
      uint64_t v5 = 1701869940;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x656C62616C6C756ELL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x746F766970;
      goto LABEL_9;
    case 3:
      if (v5 == 1701869940) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_259F68C70();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_259F4C2CC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0x6556657069636572;
  }
  else {
    unint64_t v3 = 0xD000000000000010;
  }
  if (v2) {
    unint64_t v4 = 0x8000000259F69580;
  }
  else {
    unint64_t v4 = 0xED00006E6F697372;
  }
  if (a2) {
    unint64_t v5 = 0x6556657069636572;
  }
  else {
    unint64_t v5 = 0xD000000000000010;
  }
  if (a2) {
    unint64_t v6 = 0xED00006E6F697372;
  }
  else {
    unint64_t v6 = 0x8000000259F69580;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_259F68C70();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_259F4C384(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1852797802;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1852797802;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7762787;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x7972616E6962;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x726F727265;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE300000000000000;
      if (v5 == 7762787) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x7972616E6962;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x726F727265) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_259F68C70();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_259F4C4E4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x666E6F4372657375;
  }
  else {
    uint64_t v3 = 1701869940;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xEA00000000006769;
  }
  if (a2) {
    uint64_t v5 = 0x666E6F4372657375;
  }
  else {
    uint64_t v5 = 1701869940;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000006769;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_259F68C70();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t RecipeMetadata.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RecipeMetadata.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *BOOL v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RecipeMetadata.name.modify())()
{
  return nullsub_1;
}

uint64_t RecipeMetadata.version.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t RecipeMetadata.version.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*RecipeMetadata.version.modify())()
{
  return nullsub_1;
}

uint64_t sub_259F4C640(char *a1, char *a2)
{
  return sub_259F4C2CC(*a1, *a2);
}

uint64_t sub_259F4C64C()
{
  return sub_259F68DC0();
}

uint64_t sub_259F4C6E0()
{
  sub_259F686E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_259F4C760()
{
  return sub_259F68DC0();
}

uint64_t sub_259F4C7F0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_259F68AE0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_259F4C850(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000010;
  if (*v1) {
    unint64_t v2 = 0x6556657069636572;
  }
  unint64_t v3 = 0x8000000259F69580;
  if (*v1) {
    unint64_t v3 = 0xED00006E6F697372;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_259F4C8A0()
{
  if (*v0) {
    return 0x6556657069636572;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_259F4C8EC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_259F68AE0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_259F4C950(uint64_t a1)
{
  unint64_t v2 = sub_259F4CEFC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_259F4C98C(uint64_t a1)
{
  unint64_t v2 = sub_259F4CEFC();
  return MEMORY[0x270FA00B8](a1, v2);
}

double RecipeMetadata.init(recipeURL:)@<D0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  v21[0] = a2;
  uint64_t v3 = sub_259F67E70();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_259F67F30();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_259F67D20();
  swift_allocObject();
  sub_259F67D10();
  v21[1] = 0x6A2E657069636572;
  v21[2] = 0xEB000000006E6F73;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F06E50], v3);
  sub_259F2BFE0();
  sub_259F67F10();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_bridgeObjectRelease();
  uint64_t v11 = v24;
  uint64_t v12 = sub_259F67F40();
  if (v11)
  {
    swift_release();
    uint64_t v14 = *(void (**)(char *, uint64_t))(v8 + 8);
    v14(a1, v7);
    v14(v10, v7);
  }
  else
  {
    uint64_t v16 = v12;
    unint64_t v17 = v13;
    uint64_t v24 = a1;
    uint64_t v18 = *(void (**)(char *, uint64_t))(v8 + 8);
    v18(v10, v7);
    sub_259F4CCC8();
    sub_259F67CF0();
    v18(v24, v7);
    sub_259F21768(v16, v17);
    swift_release();
    double result = *(double *)&v22;
    uint64_t v19 = v23;
    uint64_t v20 = v21[0];
    *(_OWORD *)v21[0] = v22;
    *(void *)(v20 + 16) = v19;
  }
  return result;
}

unint64_t sub_259F4CCC8()
{
  unint64_t result = qword_26A3FA928;
  if (!qword_26A3FA928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA928);
  }
  return result;
}

uint64_t RecipeMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA930);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F4CEFC();
  sub_259F68DF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v16 = 0;
  uint64_t v9 = sub_259F68B40();
  uint64_t v11 = v10;
  char v15 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_259F68B50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_259F4CEFC()
{
  unint64_t result = qword_26A3FA938;
  if (!qword_26A3FA938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA938);
  }
  return result;
}

uint64_t sub_259F4CF50@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return RecipeMetadata.init(from:)(a1, a2);
}

void *sub_259F4CF6C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RecipeMetadata(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *assignWithTake for RecipeMetadata(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for RecipeMetadata()
{
  return &type metadata for RecipeMetadata;
}

unsigned char *storeEnumTagSinglePayload for RecipeMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259F4D118);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecipeMetadata.CodingKeys()
{
  return &type metadata for RecipeMetadata.CodingKeys;
}

unint64_t sub_259F4D154()
{
  unint64_t result = qword_26A3FA940;
  if (!qword_26A3FA940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA940);
  }
  return result;
}

unint64_t sub_259F4D1AC()
{
  unint64_t result = qword_26A3FA948;
  if (!qword_26A3FA948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA948);
  }
  return result;
}

unint64_t sub_259F4D204()
{
  unint64_t result = qword_26A3FA950;
  if (!qword_26A3FA950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA950);
  }
  return result;
}

uint64_t sub_259F4D258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v10 = a1;
  uint64_t v12 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v12 + 16))(v14, v6);
  if (a2)
  {
    uint64_t v15 = a2;
  }
  else
  {
    uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)(a4[1] + 8) + 8))(a3);
    uint64_t v15 = v16;
  }
  unint64_t v17 = *(void (**)(char *, uint64_t))(v12 + 8);
  swift_bridgeObjectRetain();
  v17(v14, a3);
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(a4[3] + 8))(a3);
  uint64_t result = (*(uint64_t (**)(uint64_t))(a4[2] + 8))(a3);
  *(void *)a5 = v10;
  *(void *)(a5 + 8) = v15;
  *(void *)(a5 + 16) = v18;
  *(unsigned char *)(a5 + 24) = 0;
  *(void *)(a5 + 32) = result;
  *(void *)(a5 + 40) = v20;
  return result;
}

uint64_t sub_259F4D3DC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA970);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F4DC04();
  sub_259F68E20();
  char v12 = 0;
  sub_259F68BB0();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + 16);
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA1A0);
    sub_259F152B8((unint64_t *)&qword_26A3FA1C0, &qword_26A3FA1C8);
    sub_259F68BF0();
    v10[14] = 2;
    sub_259F68BC0();
    v10[13] = 3;
    sub_259F68B90();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_259F4D5E8(char a1)
{
  unint64_t result = 1701667182;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_259F4D680()
{
  return sub_259F4D5E8(*v0);
}

uint64_t sub_259F4D688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_259F4E078(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_259F4D6B0(uint64_t a1)
{
  unint64_t v2 = sub_259F4DC04();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_259F4D6EC(uint64_t a1)
{
  unint64_t v2 = sub_259F4DC04();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_259F4D728()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_259F4D730()
{
  return swift_bridgeObjectRetain();
}

double sub_259F4D738@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_259F4D894(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_259F4D77C(void *a1)
{
  return sub_259F4D3DC(a1);
}

uint64_t sub_259F4D794(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  id v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_259F4D7DC((uint64_t)v7, (uint64_t)v8) & 1;
}

uint64_t sub_259F4D7DC(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (v5 = sub_259F68C70(), uint64_t result = 0, (v5 & 1) != 0))
  {
    if ((sub_259F2D8E0(*(void *)(a1 + 16), *(void *)(a2 + 16)) & 1) == 0
      || ((*(unsigned __int8 *)(a1 + 24) ^ *(unsigned __int8 *)(a2 + 24)) & 1) != 0)
    {
      return 0;
    }
    uint64_t v7 = *(void *)(a1 + 40);
    uint64_t v8 = *(void *)(a2 + 40);
    if (v7)
    {
      if (!v8 || (*(void *)(a1 + 32) != *(void *)(a2 + 32) || v7 != v8) && (sub_259F68C70() & 1) == 0) {
        return 0;
      }
    }
    else if (v8)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

uint64_t sub_259F4D894@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA958);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F4DC04();
  sub_259F68DF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v23) = 0;
  uint64_t v9 = sub_259F68B40();
  uint64_t v11 = v10;
  uint64_t v21 = v9;
  long long v22 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA1A0);
  char v25 = 1;
  sub_259F152B8(&qword_26A3FA1A8, &qword_26A3FA1B0);
  swift_bridgeObjectRetain();
  sub_259F68B60();
  uint64_t v12 = v23;
  LOBYTE(v23) = 2;
  char v13 = sub_259F68B10();
  LOBYTE(v23) = 3;
  uint64_t v14 = sub_259F68B00();
  uint64_t v16 = v15;
  int v24 = v13 & 1;
  uint64_t v17 = v14;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v19 = v22;
  *long long v22 = v21;
  v19[1] = v11;
  void v19[2] = v12;
  *((unsigned char *)v19 + 24) = v24;
  void v19[4] = v17;
  v19[5] = v16;
  return result;
}

unint64_t sub_259F4DC04()
{
  unint64_t result = qword_26A3FA960;
  if (!qword_26A3FA960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA960);
  }
  return result;
}

unint64_t sub_259F4DC58()
{
  unint64_t result = qword_26A3FA968;
  if (!qword_26A3FA968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA968);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AggregationBlockConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259F4DD78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AggregationBlockConfig.CodingKeys()
{
  return &type metadata for AggregationBlockConfig.CodingKeys;
}

ValueMetadata *type metadata accessor for AggregationBlockConfig()
{
  return &type metadata for AggregationBlockConfig;
}

unint64_t sub_259F4DDC0(void *a1)
{
  a1[1] = sub_259F4DDF8();
  a1[2] = sub_259F4DE4C();
  unint64_t result = sub_259F4DEA0();
  a1[3] = result;
  return result;
}

unint64_t sub_259F4DDF8()
{
  unint64_t result = qword_26A3FA978;
  if (!qword_26A3FA978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA978);
  }
  return result;
}

unint64_t sub_259F4DE4C()
{
  unint64_t result = qword_26A3FA980;
  if (!qword_26A3FA980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA980);
  }
  return result;
}

unint64_t sub_259F4DEA0()
{
  unint64_t result = qword_26A3FA988;
  if (!qword_26A3FA988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA988);
  }
  return result;
}

unint64_t sub_259F4DEF8()
{
  unint64_t result = qword_26A3FA990;
  if (!qword_26A3FA990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA990);
  }
  return result;
}

unint64_t sub_259F4DF4C(uint64_t a1)
{
  unint64_t result = sub_259F4DF74();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_259F4DF74()
{
  unint64_t result = qword_26A3FA998;
  if (!qword_26A3FA998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA998);
  }
  return result;
}

unint64_t sub_259F4DFCC()
{
  unint64_t result = qword_26A3FA9A0;
  if (!qword_26A3FA9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA9A0);
  }
  return result;
}

unint64_t sub_259F4E024()
{
  unint64_t result = qword_26A3FA9A8;
  if (!qword_26A3FA9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA9A8);
  }
  return result;
}

uint64_t sub_259F4E078(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000259F69680 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000259F69660 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000259F69600)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_259F68C70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t URL.queryName.getter()
{
  uint64_t v0 = sub_259F67F30();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_259F67ED0();
  uint64_t v4 = sub_259F67EB0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void *sub_259F4E2E8(uint64_t a1)
{
  unint64_t result = (void *)sub_259F1D9B4(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == (void *)(1 << *(unsigned char *)(a1 + 32))) {
    return 0;
  }
  else {
    return sub_259F5289C(&v5, (uint64_t)result, v3, 0, a1);
  }
}

unint64_t RecipeBuilderError.errorDescription.getter()
{
  switch(*(unsigned char *)(v0 + 16))
  {
    case 2:
    case 3:
      sub_259F68960();
      swift_bridgeObjectRelease();
      unint64_t v1 = 0xD000000000000010;
      break;
    case 4:
      sub_259F68960();
      swift_bridgeObjectRelease();
      unint64_t v1 = 0xD000000000000012;
      break;
    case 5:
      sub_259F68960();
      swift_bridgeObjectRelease();
      unint64_t v1 = 0xD000000000000011;
      break;
    default:
      sub_259F68960();
      swift_bridgeObjectRelease();
      unint64_t v1 = 0xD000000000000016;
      break;
  }
  unint64_t v3 = v1;
  sub_259F686F0();
  return v3;
}

uint64_t RecipeBuilder.viewQueries.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RecipeBuilder.viewQueries.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*RecipeBuilder.viewQueries.modify())()
{
  return nullsub_1;
}

uint64_t RecipeBuilder.blockQueries.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RecipeBuilder.blocksWithoutQuery.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t RecipeBuilder.init(identifier:version:viewQueries:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = MEMORY[0x263F8EE78];
  unint64_t v11 = sub_259F21A34(MEMORY[0x263F8EE78]);
  unint64_t v12 = sub_259F21E98(v10);
  unint64_t result = sub_259F21D74(v10);
  if (*(void *)(a4 + 16)) {
    uint64_t v14 = &unk_2707E1018;
  }
  else {
    uint64_t v14 = (void *)v10;
  }
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = v14;
  a5[4] = v10;
  a5[5] = v11;
  a5[6] = v12;
  a5[7] = a4;
  uint64_t v15 = MEMORY[0x263F8EE88];
  a5[8] = result;
  a5[9] = v15;
  return result;
}

uint64_t sub_259F4E658(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    for (unint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v9 = *(i - 1);
      uint64_t v8 = *i;
      uint64_t v10 = *(void *)(v3 + 16);
      swift_bridgeObjectRetain();
      if (v10)
      {
        swift_bridgeObjectRetain();
        unint64_t v11 = sub_259F17068(v9, v8);
        if (v12)
        {
          uint64_t v7 = *(void *)(*(void *)(v3 + 56) + 8 * v11);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          goto LABEL_5;
        }
        swift_bridgeObjectRelease();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA260);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_259F6BA00;
      *(void *)(v7 + 32) = v9;
      *(void *)(v7 + 40) = v8;
LABEL_5:
      sub_259F2D18C(v7);
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
  }
  return result;
}

void *sub_259F4E780(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = sub_259F21D74(MEMORY[0x263F8EE78]);
  long long v22 = (void *)sub_259F4E990(v5, a2);
  uint64_t v6 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v12 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    uint64_t v18 = (unint64_t *)(*(void *)(a1 + 48) + 16 * i);
    unint64_t v19 = v18[1];
    unint64_t v20 = *(void *)(*(void *)(a1 + 56) + 8 * i);
    v21[0] = *v18;
    v21[1] = v19;
    v21[2] = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_259F4EA84(&v22, v21, a2);
    if (v2)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (void *)swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = (void *)swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v12 >= v10) {
      goto LABEL_28;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    if (!v16) {
      break;
    }
LABEL_19:
    unint64_t v9 = (v16 - 1) & v16;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v10) {
    goto LABEL_28;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v10) {
    goto LABEL_28;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v10) {
    goto LABEL_28;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v10) {
    goto LABEL_28;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 5;
  if (v12 + 5 >= v10)
  {
LABEL_28:
    swift_release();
    return v22;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_18:
    int64_t v12 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v10) {
      goto LABEL_28;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_19;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_259F4E990(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = sub_259F68A70();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA2C0);
      char v4 = (void *)sub_259F687C0();
      unint64_t v5 = v4;
      v4[2] = a2;
      v4[4] = a1;
      if (a2 != 1)
      {
        v4[5] = a1;
        uint64_t v6 = a2 - 2;
        if (v6)
        {
          uint64_t v7 = v4 + 6;
          do
          {
            *v7++ = a1;
            swift_bridgeObjectRetain();
            --v6;
          }
          while (v6);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x263F8EE78];
    }
    return (uint64_t)v5;
  }
  return result;
}

void **sub_259F4EA84(void **result, unint64_t *a2, uint64_t a3)
{
  unint64_t v4 = *a2;
  uint64_t v3 = a2[1];
  unint64_t v30 = a2[2];
  if (*(void *)(v30 + 16) == a3)
  {
    uint64_t v5 = a3;
    if (a3)
    {
      uint64_t v6 = result;
      uint64_t v7 = *result;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_29:
      }
        uint64_t v7 = sub_259F27B14(v7);
      unint64_t v8 = 0;
      unint64_t v9 = (uint64_t *)(v30 + 40);
      uint64_t v28 = (void **)v6;
      uint64_t v29 = v5;
      while (1)
      {
        if (v5 == v8)
        {
          __break(1u);
LABEL_25:
          __break(1u);
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
        if (v8 >= *(void *)(v30 + 16)) {
          goto LABEL_25;
        }
        uint64_t v12 = *(v9 - 1);
        uint64_t v11 = *v9;
        *uint64_t v6 = v7;
        unint64_t v13 = v7[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v8 >= v13) {
          goto LABEL_26;
        }
        uint64_t v31 = v12;
        uint64_t v32 = v11;
        uint64_t v6 = &v7[v8];
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v7 = (void *)v6[4];
        v6[4] = 0x8000000000000000;
        uint64_t v15 = v4;
        uint64_t v5 = v3;
        unint64_t v4 = sub_259F17068(v4, v3);
        uint64_t v17 = v7[2];
        BOOL v18 = (v16 & 1) == 0;
        uint64_t v19 = v17 + v18;
        if (__OFADD__(v17, v18)) {
          goto LABEL_27;
        }
        uint64_t v3 = v16;
        if (v7[3] >= v19)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            if (v16) {
              goto LABEL_5;
            }
          }
          else
          {
            sub_259F25DCC();
            if (v3) {
              goto LABEL_5;
            }
          }
        }
        else
        {
          sub_259F19BDC(v19, isUniquelyReferenced_nonNull_native);
          unint64_t v20 = sub_259F17068(v15, v5);
          if ((v3 & 1) != (v21 & 1))
          {
            uint64_t result = (void **)sub_259F68D30();
            __break(1u);
            return result;
          }
          unint64_t v4 = v20;
          if (v3)
          {
LABEL_5:
            int64_t v10 = (void *)(v7[7] + 16 * v4);
            swift_bridgeObjectRelease();
            *int64_t v10 = v31;
            v10[1] = v32;
            uint64_t v3 = v5;
            unint64_t v4 = v15;
            goto LABEL_6;
          }
        }
        v7[(v4 >> 6) + 8] |= 1 << v4;
        long long v22 = (uint64_t *)(v7[6] + 16 * v4);
        *long long v22 = v15;
        v22[1] = v5;
        uint64_t v23 = (void *)(v7[7] + 16 * v4);
        *uint64_t v23 = v31;
        v23[1] = v32;
        uint64_t v24 = v7[2];
        BOOL v25 = __OFADD__(v24, 1);
        uint64_t v26 = v24 + 1;
        if (v25) {
          goto LABEL_28;
        }
        unint64_t v4 = v15;
        uint64_t v3 = v5;
        id v7[2] = v26;
        swift_bridgeObjectRetain();
LABEL_6:
        ++v8;
        v6[4] = v7;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v6 = v28;
        uint64_t v5 = v29;
        uint64_t v7 = *v28;
        v9 += 2;
        if (v29 == v8) {
          return (void **)swift_bridgeObjectRelease();
        }
      }
    }
  }
  else
  {
    sub_259F52AF0();
    swift_allocError();
    *(void *)uint64_t v27 = v4;
    *(void *)(v27 + 8) = v3;
    *(unsigned char *)(v27 + 16) = 2;
    swift_bridgeObjectRetain();
    return (void **)swift_willThrow();
  }
  return result;
}

uint64_t sub_259F4ED54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8 = v7;
  uint64_t v9 = a6;
  uint64_t v11 = a4;
  uint64_t v13 = a1;
  uint64_t v14 = a7;
  uint64_t v15 = *(void *)(a3 + 8);
  uint64_t v16 = *(void *)(a3 + 16);
  char v43 = *(unsigned char *)(a3 + 24);
  uint64_t v17 = *(void *)(a3 + 40);
  uint64_t v49 = *(void *)(a3 + 32);
  uint64_t v50 = *(void *)a3;
  uint64_t v46 = *(void *)(a6 + 16);
  if (!v46)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
LABEL_16:
    *(void *)uint64_t v14 = v13;
    *(void *)(v14 + 8) = a2;
    *(void *)(v14 + 16) = v50;
    *(void *)(v14 + 24) = v15;
    *(void *)(v14 + 32) = v16;
    *(unsigned char *)(v14 + 40) = v43 & 1;
    *(void *)(v14 + 48) = v49;
    *(void *)(v14 + 56) = v17;
    *(void *)(v14 + 64) = v9;
    *(void *)(v14 + 72) = v11;
    *(void *)(v14 + 80) = a5;
    return result;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v42 = a2;
  swift_bridgeObjectRetain();
  uint64_t v41 = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v48 = v16;
  swift_bridgeObjectRetain();
  uint64_t v47 = v17;
  swift_bridgeObjectRetain();
  uint64_t v18 = 0;
  uint64_t v44 = v15;
  uint64_t v45 = v9;
  uint64_t v19 = v17;
  while (1)
  {
    uint64_t v20 = *(void *)(v9 + 8 * v18 + 32);
    if (!*(void *)(v20 + 16))
    {
      swift_bridgeObjectRetain();
LABEL_19:
      *(void *)&v57[0] = 0;
      *((void *)&v57[0] + 1) = 0xE000000000000000;
      sub_259F68960();
      long long v51 = v57[0];
      sub_259F686F0();
      long long v34 = *(_OWORD *)(a3 + 16);
      v57[0] = *(_OWORD *)a3;
      v57[1] = v34;
      v57[2] = *(_OWORD *)(a3 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_259F686A0();
      sub_259F686F0();
      swift_bridgeObjectRelease();
      sub_259F686F0();
      sub_259F68590();
      sub_259F686F0();
      swift_bridgeObjectRelease();
      sub_259F686F0();
      long long v35 = v51;
      sub_259F52B44();
      swift_allocError();
      *(_OWORD *)uint64_t v36 = v35;
      *(unsigned char *)(v36 + 16) = 2;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_259F17068(v50, v15);
    if ((v22 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    uint64_t v23 = (uint64_t *)(*(void *)(v20 + 56) + 16 * v21);
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_259F33144(v48, v20);
    swift_bridgeObjectRelease();
    if (v19)
    {
      uint64_t v27 = *(void *)(v20 + 16);
      swift_bridgeObjectRetain();
      if (v27)
      {
        swift_bridgeObjectRetain();
        uint64_t v28 = v49;
        unint64_t v29 = sub_259F17068(v49, v19);
        uint64_t v30 = v19;
        if (v31)
        {
          uint64_t v32 = (uint64_t *)(*(void *)(v20 + 56) + 16 * v29);
          uint64_t v28 = *v32;
          uint64_t v30 = v32[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v28 = v49;
        uint64_t v30 = v19;
      }
    }
    else
    {
      uint64_t v30 = 0;
      uint64_t v28 = v49;
    }
    *(void *)&long long v51 = v24;
    *((void *)&v51 + 1) = v25;
    uint64_t v52 = v26;
    char v53 = 0;
    uint64_t v54 = v28;
    uint64_t v55 = v30;
    char v56 = 0;
    sub_259F2BF84((uint64_t)&v51, (uint64_t)v57);
    sub_259F4F1D0((uint64_t)v57, 0, 0);
    if (v8) {
      break;
    }
    ++v18;
    sub_259F20200((uint64_t)v57);
    swift_bridgeObjectRelease();
    uint64_t v9 = v45;
    uint64_t v15 = v44;
    if (v46 == v18)
    {
      uint64_t result = swift_bridgeObjectRelease();
      a5 = v41;
      a2 = v42;
      uint64_t v17 = v47;
      uint64_t v16 = v48;
      uint64_t v14 = a7;
      uint64_t v11 = a4;
      uint64_t v13 = a1;
      goto LABEL_16;
    }
  }
  sub_259F20200((uint64_t)v57);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_21:
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_259F4F1D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v6 = sub_259F476EC();
  uint64_t v8 = v7;
  sub_259F4862C(&v40);
  int v9 = v40;
  uint64_t v10 = sub_259F48724();
  uint64_t v11 = sub_259F488E8();
  swift_bridgeObjectRetain();
  sub_259F4ADD4(v6, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v3[8] + 16))
  {
    swift_bridgeObjectRetain();
    sub_259F17068(v6, v8);
    if (v12)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v40 = 0;
      unint64_t v41 = 0xE000000000000000;
      sub_259F68960();
      sub_259F686F0();
      char v43 = v9;
      sub_259F68A10();
      sub_259F686F0();
      sub_259F686F0();
      swift_bridgeObjectRelease();
LABEL_7:
      sub_259F686F0();
      uint64_t v15 = v40;
      unint64_t v16 = v41;
      sub_259F52B44();
      swift_allocError();
      *(void *)uint64_t v17 = v15;
      *(void *)(v17 + 8) = v16;
      *(unsigned char *)(v17 + 16) = 0;
      return swift_willThrow();
    }
    swift_bridgeObjectRelease();
  }
  unint64_t v39 = (void *)v10;
  int v42 = v9;
  uint64_t v13 = v3[9];
  swift_bridgeObjectRetain();
  char v14 = sub_259F63534(v6, v8, v13);
  swift_bridgeObjectRelease();
  if (v14)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    sub_259F68960();
    sub_259F686F0();
    char v43 = v42;
    sub_259F68A10();
    sub_259F686F0();
    sub_259F686F0();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v19 = v39;
  if (a3)
  {
    if (*(void *)(v3[8] + 16))
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v20 = (void *)v3[3];
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_38:
      }
        uint64_t v20 = sub_259F2E9C8(0, v20[2] + 1, 1, v20);
      unint64_t v22 = v20[2];
      unint64_t v21 = v20[3];
      if (v22 >= v21 >> 1) {
        uint64_t v20 = sub_259F2E9C8((void *)(v21 > 1), v22 + 1, 1, v20);
      }
      v20[2] = v22 + 1;
      uint64_t v23 = &v20[2 * v22];
      v23[4] = 0x736B636F6C62;
      v23[5] = 0xE600000000000000;
      long long v4[3] = v20;
      uint64_t v19 = v39;
    }
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v40 = v4[8];
    v4[8] = 0x8000000000000000;
    sub_259F24310(a2, a3, v6, v8, isUniquelyReferenced_nonNull_native);
    v4[8] = v40;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_259F42DE8(&v40, v6, v8);
  }
  swift_bridgeObjectRelease();
  a2 = v19[2];
  if (!a2)
  {
    swift_bridgeObjectRelease();
    if (!v11) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_24;
  }
  uint64_t v25 = v19[4];
  a3 = v19[5];
  uint64_t v20 = (void *)v4[5];
  uint64_t v26 = v20[2];
  swift_bridgeObjectRetain();
  if (!v26)
  {
    swift_bridgeObjectRetain();
LABEL_35:
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    sub_259F68960();
    sub_259F686F0();
    sub_259F686F0();
    sub_259F686F0();
    char v43 = v42;
    sub_259F68A10();
    sub_259F686F0();
    sub_259F686F0();
    sub_259F686F0();
    uint64_t v34 = v40;
    unint64_t v35 = v41;
    sub_259F52B44();
    swift_allocError();
    *(void *)uint64_t v36 = v34;
    *(void *)(v36 + 8) = v35;
    *(unsigned char *)(v36 + 16) = 1;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_259F17068(v25, a3);
  if ((v27 & 1) == 0)
  {
LABEL_34:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if (a2 != 1)
  {
    uint64_t v37 = v11;
    unint64_t v29 = v19 + 7;
    uint64_t v30 = 1;
    do
    {
      uint64_t v11 = v30 + 1;
      if (__OFADD__(v30, 1))
      {
        __break(1u);
        goto LABEL_38;
      }
      uint64_t v31 = *(v29 - 1);
      a3 = *v29;
      uint64_t v20 = (void *)v4[5];
      uint64_t v32 = v20[2];
      swift_bridgeObjectRetain();
      if (!v32) {
        goto LABEL_35;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_259F17068(v31, a3);
      if ((v33 & 1) == 0) {
        goto LABEL_34;
      }
      v29 += 2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      ++v30;
    }
    while (v11 != a2);
    swift_bridgeObjectRelease_n();
    uint64_t v11 = v37;
    if (v37) {
      goto LABEL_24;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease_n();
  if (v11)
  {
LABEL_24:
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    char v28 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v40 = v4[5];
    v4[5] = 0x8000000000000000;
    sub_259F23F98(v6, v8, v11, v6, v8, v28);
    v4[5] = v40;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  return swift_bridgeObjectRelease();
}

uint64_t RecipeBuilder.append(_:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v6 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)(v5 + 48) + 8))(v6);
  if (v7)
  {
    uint64_t v8 = v7;
    int v9 = sub_259F4E2E8(v7);
    if (v10)
    {
      uint64_t v12 = (uint64_t)v9;
      uint64_t v13 = v10;
      uint64_t v14 = v11;
      uint64_t v16 = a1[3];
      uint64_t v15 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v16);
      uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v15 + 8) + 8) + 8))(v16);
      uint64_t v19 = v18;
      unint64_t v20 = *(void *)(v8 + 16);
      if (v20 > 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_259F52AF0();
        swift_allocError();
        *(_OWORD *)uint64_t v21 = xmmword_259F6DB00;
        *(unsigned char *)(v21 + 16) = 0;
        return swift_willThrow();
      }
      if (v20)
      {
        uint64_t v50 = v17;
        swift_bridgeObjectRetain();
        unint64_t v32 = sub_259F17068(v12, v13);
        if (v33)
        {
          uint64_t v34 = *(void *)(*(void *)(v8 + 56) + 8 * v32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if (*(void *)(v34 + 16))
          {
            uint64_t v48 = v34;
            if (*(void *)(v8 + 16))
            {
              swift_bridgeObjectRetain();
              sub_259F17068(v12, v13);
              char v36 = v35;
              swift_bridgeObjectRelease();
              if (v36)
              {
                uint64_t v46 = *(void *)(v48 + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v49 = sub_259F4E780(v8, v46);
                if (v2)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  return swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v40 = a1[3];
                uint64_t v39 = a1[4];
                __swift_project_boxed_opaque_existential_1(a1, v40);
                uint64_t v47 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v39 + 8) + 8) + 8))(v40);
                uint64_t v42 = v41;
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                *(void *)&v52[0] = *(void *)(v3 + 48);
                *(void *)(v3 + 48) = 0x8000000000000000;
                sub_259F24498(v14, v47, v42, isUniquelyReferenced_nonNull_native);
                *(void *)(v3 + 48) = *(void *)&v52[0];
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v44 = a1[3];
                uint64_t v45 = (void *)a1[4];
                __swift_project_boxed_opaque_existential_1(a1, v44);
                sub_259F4D258(v12, v13, v44, v45, (uint64_t)&v55);
                swift_bridgeObjectRelease();
                sub_259F4ED54(v50, v19, (uint64_t)&v55, v50, v19, (uint64_t)v49, (uint64_t)v58);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                long long v62 = v55;
                sub_259F2C0C8((uint64_t)&v62);
                uint64_t v61 = v56;
                sub_259F2C0F4((uint64_t)&v61);
                sub_259F4A1A4((uint64_t)&v57, (uint64_t)v60);
                sub_259F2C0C8((uint64_t)v60);
                v52[2] = v58[2];
                v52[3] = v58[3];
                v52[4] = v58[4];
                uint64_t v53 = v59;
                v52[0] = v58[0];
                v52[1] = v58[1];
                char v54 = 3;
                goto LABEL_7;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(void *)&v52[0] = 0;
            *((void *)&v52[0] + 1) = 0xE000000000000000;
            sub_259F68960();
            sub_259F686F0();
            sub_259F686F0();
            swift_bridgeObjectRelease();
            sub_259F52AF0();
            swift_allocError();
            *(_OWORD *)uint64_t v37 = v52[0];
            char v38 = 3;
LABEL_26:
            *(unsigned char *)(v37 + 16) = v38;
            return swift_willThrow();
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_259F52AF0();
      swift_allocError();
      *(void *)uint64_t v37 = v12;
      *(void *)(v37 + 8) = v13;
      char v38 = 1;
      goto LABEL_26;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = a1[3];
  uint64_t v23 = (void *)a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_259F4D258(0, 0, v22, v23, (uint64_t)v52);
  char v54 = 0;
LABEL_7:
  uint64_t v25 = a1[3];
  uint64_t v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(*(void *)(v24 + 32) + 8))(v25);
  if (v2) {
    return sub_259F20200((uint64_t)v52);
  }
  sub_259F4F1D0((uint64_t)v52, v26, v27);
  sub_259F2BF28((uint64_t)v52, (uint64_t)v51);
  unint64_t v29 = *(void **)(v3 + 32);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v29 = sub_259F2ED34(0, v29[2] + 1, 1, v29);
  }
  unint64_t v31 = v29[2];
  unint64_t v30 = v29[3];
  if (v31 >= v30 >> 1) {
    unint64_t v29 = sub_259F2ED34((void *)(v30 > 1), v31 + 1, 1, v29);
  }
  v29[2] = v31 + 1;
  sub_259F2BF84((uint64_t)v51, (uint64_t)&v29[12 * v31 + 4]);
  *(void *)(v3 + 32) = v29;
  sub_259F20200((uint64_t)v52);
  return swift_bridgeObjectRelease();
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  unsigned char v17[96];
  unsigned char v18[96];

  uint64_t v3 = v1;
  uint64_t v5 = a1[3];
  uint64_t v6 = (void *)a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  sub_259F14DDC(v5, v6, (uint64_t)v18);
  v18[88] = 1;
  uint64_t v8 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  int v9 = (*(uint64_t (**)(uint64_t))(*(void *)(v7 + 32) + 8))(v8);
  if (v2) {
    return sub_259F20200((uint64_t)v18);
  }
  sub_259F4F1D0((uint64_t)v18, v9, v10);
  sub_259F2BF28((uint64_t)v18, (uint64_t)v17);
  uint64_t v12 = *(void **)(v3 + 32);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v12 = sub_259F2ED34(0, v12[2] + 1, 1, v12);
  }
  uint64_t v14 = v12[2];
  uint64_t v13 = v12[3];
  uint64_t v15 = v14 + 1;
  if (v14 >= v13 >> 1)
  {
    uint64_t v16 = sub_259F2ED34((void *)(v13 > 1), v14 + 1, 1, v12);
    uint64_t v15 = v14 + 1;
    uint64_t v12 = v16;
  }
  void v12[2] = v15;
  sub_259F2BF84((uint64_t)v17, (uint64_t)&v12[12 * v14 + 4]);
  *(void *)(v3 + 32) = v12;
  sub_259F20200((uint64_t)v18);
  return swift_bridgeObjectRelease();
}

{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  void *v83;
  uint64_t v84[12];
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;

  uint64_t v3 = v1;
  uint64_t v6 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  uint64_t v7 = *(void *)((*(uint64_t (**)(uint64_t))(*(void *)(v5 + 16) + 8))(v6) + 16);
  swift_bridgeObjectRelease();
  if (v7 < 2)
  {
    unint64_t v85 = 0;
    uint64_t v86 = 0xE000000000000000;
    sub_259F68960();
    sub_259F686F0();
    unint64_t v30 = a1[3];
    unint64_t v29 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v30);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v29 + 8) + 8) + 8))(v30);
    sub_259F686F0();
    swift_bridgeObjectRelease();
    sub_259F686F0();
    unint64_t v32 = a1[3];
    unint64_t v31 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v32);
    char v33 = *(void *)((*(uint64_t (**)(uint64_t))(*(void *)(v31 + 16) + 8))(v32) + 16);
    swift_bridgeObjectRelease();
    v84[0] = v33;
    sub_259F68C20();
    sub_259F686F0();
    swift_bridgeObjectRelease();
    sub_259F52B44();
    swift_allocError();
    *(void *)uint64_t v34 = 0;
    *(void *)(v34 + 8) = 0xE000000000000000;
    char v35 = 1;
LABEL_7:
    *(unsigned char *)(v34 + 16) = v35;
    return swift_willThrow();
  }
  int v9 = a1[3];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  uint64_t v10 = *(void *)((*(uint64_t (**)(uint64_t))(*(void *)(v8 + 24) + 8))(v9) + 16);
  swift_bridgeObjectRelease();
  if (!v10)
  {
    sub_259F68960();
    swift_bridgeObjectRelease();
    unint64_t v85 = 0x6F6C42206E696F4ALL;
    uint64_t v86 = 0xEB00000000206B63;
    uint64_t v37 = a1[3];
    char v36 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v37);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v36 + 8) + 8) + 8))(v37);
    sub_259F686F0();
    swift_bridgeObjectRelease();
    sub_259F686F0();
    uint64_t v39 = a1[3];
    char v38 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v39);
    uint64_t v40 = *(void *)((*(uint64_t (**)(uint64_t))(*(void *)(v38 + 24) + 8))(v39) + 16);
    swift_bridgeObjectRelease();
    v84[0] = v40;
    sub_259F68C20();
    sub_259F686F0();
    swift_bridgeObjectRelease();
    sub_259F52B44();
    swift_allocError();
    *(void *)uint64_t v34 = 0x6F6C42206E696F4ALL;
    *(void *)(v34 + 8) = 0xEB00000000206B63;
    char v35 = 3;
    goto LABEL_7;
  }
  uint64_t v80 = a1[3];
  uint64_t v81 = (void *)a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v80);
  uint64_t v11 = v3[1];
  long long v79 = *v3;
  long long v78 = v3[2];
  char v83 = v3;
  uint64_t v12 = v3[3];
  uint64_t v13 = v3[4];
  uint64_t v14 = v3[5];
  uint64_t v15 = v3[6];
  uint64_t v16 = v3[7];
  uint64_t v17 = v83[8];
  uint64_t v18 = v83[9];
  v84[3] = (uint64_t)&type metadata for RecipeBuilder;
  v84[4] = (uint64_t)&off_2707E2D78;
  uint64_t v19 = (void *)swift_allocObject();
  v84[0] = (uint64_t)v19;
  void v19[2] = v79;
  void v19[3] = v11;
  void v19[4] = v78;
  v19[5] = v12;
  v19[6] = v13;
  v19[7] = v14;
  v19[8] = v15;
  v19[9] = v16;
  v19[10] = v17;
  v19[11] = v18;
  swift_bridgeObjectRetain();
  unint64_t v20 = (uint64_t)v83;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_259F3E984(v84, v80, v81);
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v84);
  unint64_t v85 = v21;
  uint64_t v86 = v23;
  uint64_t v87 = v25;
  uint64_t v88 = v27;
  unint64_t v89 = 4;
  sub_259F4F1D0((uint64_t)&v85, 0, 0);
  if (v2) {
    return sub_259F20200((uint64_t)&v85);
  }
  sub_259F2BF28((uint64_t)&v85, (uint64_t)v84);
  uint64_t v41 = (void *)v83[4];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v41 = sub_259F2ED34(0, v41[2] + 1, 1, v41);
  }
  char v43 = v41[2];
  uint64_t v42 = v41[3];
  if (v43 >= v42 >> 1) {
    uint64_t v41 = sub_259F2ED34((void *)(v42 > 1), v43 + 1, 1, v41);
  }
  void v41[2] = v43 + 1;
  sub_259F2BF84((uint64_t)v84, (uint64_t)&v41[12 * v43 + 4]);
  v83[4] = v41;
  sub_259F20200((uint64_t)&v85);
  v84[0] = 0;
  uint64_t v44 = v83[6];
  uint64_t v45 = a1[4];
  uint64_t v82 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v82);
  uint64_t v46 = *(void *)(v45 + 16);
  long long v77 = *(uint64_t (**)(uint64_t, uint64_t))(v46 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v47 = v77(v82, v46);
  uint64_t v48 = MEMORY[0x263F8EE78];
  unint64_t v85 = MEMORY[0x263F8EE78];
  uint64_t v49 = *(void *)(v47 + 16);
  if (v49)
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = (uint64_t *)(v47 + 40);
    while (1)
    {
      uint64_t v53 = *(v50 - 1);
      uint64_t v52 = *v50;
      char v54 = *(void *)(v44 + 16);
      swift_bridgeObjectRetain();
      if (v54)
      {
        swift_bridgeObjectRetain();
        long long v55 = sub_259F17068(v53, v52);
        if (v56)
        {
          long long v51 = *(void *)(*(void *)(v44 + 56) + 8 * v55);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          goto LABEL_16;
        }
        swift_bridgeObjectRelease();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA260);
      long long v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = xmmword_259F6BA00;
      *(void *)(v51 + 32) = v53;
      *(void *)(v51 + 40) = v52;
LABEL_16:
      v50 += 2;
      sub_259F2D18C(v51);
      if (!--v49)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v57 = v85;
        unint64_t v20 = (uint64_t)v83;
        uint64_t v48 = MEMORY[0x263F8EE78];
        goto LABEL_22;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v57 = MEMORY[0x263F8EE78];
LABEL_22:
  uint64_t v90 = v48;
  unint64_t v58 = *(void *)(v57 + 16);
  if (!v58)
  {
    swift_bridgeObjectRelease();
LABEL_28:
    swift_bridgeObjectRelease();
    unint64_t v85 = 0;
    uint64_t v86 = 0xE000000000000000;
    sub_259F68960();
    swift_bridgeObjectRelease();
    unint64_t v85 = 0xD000000000000028;
    uint64_t v86 = 0x8000000259F6A300;
    uint64_t v73 = a1[3];
    uint64_t v72 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v73);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v72 + 8) + 8) + 8))(v73);
    sub_259F686F0();
    swift_bridgeObjectRelease();
    uint64_t v74 = v85;
    uint64_t v75 = v86;
    sub_259F52B44();
    swift_allocError();
    *(void *)long long v76 = v74;
    *(void *)(v76 + 8) = v75;
    *(unsigned char *)(v76 + 16) = 3;
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v59 = (unint64_t *)(v57 + 40);
  do
  {
    uint64_t v60 = *v59;
    unint64_t v85 = *(v59 - 1);
    uint64_t v86 = v60;
    swift_bridgeObjectRetain();
    sub_259F50B48((uint64_t)&v90, &v85, v20, (uint64_t)a1, v84);
    v59 += 2;
    swift_bridgeObjectRelease();
    --v58;
  }
  while (v58);
  swift_bridgeObjectRelease_n();
  uint64_t v61 = v90;
  long long v62 = v84[0];
  if (!v84[0]) {
    goto LABEL_28;
  }
  uint64_t v63 = a1[3];
  uint64_t v64 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v63);
  long long v65 = *(void *)(*(void *)(v64 + 8) + 8);
  uint64_t v66 = *(uint64_t (**)(uint64_t, uint64_t))(v65 + 8);
  swift_bridgeObjectRetain();
  uint64_t v67 = v66(v63, v65);
  uint64_t v69 = v68;
  unint64_t v85 = v62;
  sub_259F2D2E0(v61);
  unint64_t v70 = v85;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v85 = *(void *)(v20 + 40);
  *(void *)(v20 + 40) = 0x8000000000000000;
  sub_259F23F98(v67, v69, v70, v67, v69, isUniquelyReferenced_nonNull_native);
  *(void *)(v20 + 40) = v85;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  unsigned char v20[96];
  void v21[11];
  char v22;

  uint64_t v3 = v1;
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  v21[0] = sub_259F285C8(v5, v6);
  v21[1] = v7;
  v21[2] = v8;
  unint64_t v21[3] = v9;
  uint64_t v22 = 5;
  uint64_t v11 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)(v10 + 24) + 8))(v11);
  if (v2) {
    return sub_259F20200((uint64_t)v21);
  }
  sub_259F4F1D0((uint64_t)v21, v12, v13);
  sub_259F2BF28((uint64_t)v21, (uint64_t)v20);
  uint64_t v15 = *(void **)(v3 + 32);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v15 = sub_259F2ED34(0, v15[2] + 1, 1, v15);
  }
  uint64_t v17 = v15[2];
  uint64_t v16 = v15[3];
  uint64_t v18 = v17 + 1;
  if (v17 >= v16 >> 1)
  {
    uint64_t v19 = sub_259F2ED34((void *)(v16 > 1), v17 + 1, 1, v15);
    uint64_t v18 = v17 + 1;
    uint64_t v15 = v19;
  }
  _OWORD v15[2] = v18;
  sub_259F2BF84((uint64_t)v20, (uint64_t)&v15[12 * v17 + 4]);
  *(void *)(v3 + 32) = v15;
  sub_259F20200((uint64_t)v21);
  return swift_bridgeObjectRelease();
}

{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t result;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void v21[12];
  unsigned char v22[104];
  uint64_t v23;

  uint64_t v2 = v1;
  uint64_t v19 = a1[3];
  unint64_t v20 = (void *)a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  uint64_t v3 = v1[1];
  uint64_t v18 = *v1;
  unint64_t v4 = v1[3];
  uint64_t v17 = v1[2];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = v1[8];
  int v9 = v1[9];
  unint64_t v21[3] = &type metadata for RecipeBuilder;
  v21[4] = &off_2707E2D78;
  uint64_t v11 = (void *)swift_allocObject();
  v21[0] = v11;
  _OWORD v11[2] = v18;
  v11[3] = v3;
  void v11[4] = v17;
  v11[5] = v4;
  v11[6] = v5;
  v11[7] = v6;
  v11[8] = v7;
  v11[9] = v8;
  v11[10] = v10;
  v11[11] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = v23;
  sub_259F5C7F4(v21, v19, v20, (uint64_t)v22);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  if (!v12)
  {
    v22[88] = 6;
    sub_259F4F1D0((uint64_t)v22, 0, 0);
    sub_259F2BF28((uint64_t)v22, (uint64_t)v21);
    uint64_t v14 = (void *)v2[4];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = sub_259F2ED34(0, v14[2] + 1, 1, v14);
    }
    uint64_t v16 = v14[2];
    uint64_t v15 = v14[3];
    if (v16 >= v15 >> 1) {
      uint64_t v14 = sub_259F2ED34((void *)(v15 > 1), v16 + 1, 1, v14);
    }
    v14[2] = v16 + 1;
    sub_259F2BF84((uint64_t)v21, (uint64_t)&v14[12 * v16 + 4]);
    v2[4] = v14;
    return sub_259F20200((uint64_t)v22);
  }
  return result;
}

uint64_t sub_259F50B48(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  if (!*(void *)(*(void *)(a3 + 40) + 16)) {
    goto LABEL_12;
  }
  uint64_t v6 = v5;
  uint64_t v9 = *a2;
  uint64_t v10 = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_259F17068(v9, v10);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_12:
    uint64_t result = sub_259F68A80();
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = swift_bridgeObjectRelease();
  MEMORY[0x270FA5388](v12);
  _OWORD v27[2] = a4;
  uint64_t v28 = MEMORY[0x263F8EE78];
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_259F537C4(v13, (uint64_t (*)(char *))sub_259F537A4, (uint64_t)v27, (unint64_t *)&v28);
  if (v6)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v16 = v14;
  swift_bridgeObjectRelease();
  uint64_t v17 = v28;
  uint64_t v18 = *a5;
  if (!*a5)
  {
    *a5 = v16;
    return sub_259F2D2E0(v17);
  }
  uint64_t v19 = swift_bridgeObjectRetain();
  if (sub_259F2D8E0(v19, v16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_259F2D2E0(v17);
  }
  swift_bridgeObjectRelease();
  uint64_t v28 = 0;
  unint64_t v29 = 0xE000000000000000;
  sub_259F68960();
  uint64_t v20 = type metadata accessor for DatasetColumnDescription(0);
  uint64_t v21 = MEMORY[0x25A2EFD90](v18, v20);
  unint64_t v23 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = v21;
  unint64_t v29 = v23;
  sub_259F686F0();
  MEMORY[0x25A2EFD90](v16, v20);
  sub_259F686F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v24 = v28;
  unint64_t v25 = v29;
  sub_259F52B44();
  swift_allocError();
  *(void *)uint64_t v26 = v24;
  *(void *)(v26 + 8) = v25;
  *(unsigned char *)(v26 + 16) = 4;
  return swift_willThrow();
}

uint64_t sub_259F50E04(uint64_t *a1, void *a2)
{
  uint64_t v4 = a2[3];
  uint64_t v3 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v4);
  uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v3 + 24) + 8))(v4);
  uint64_t v6 = v5;
  uint64_t v7 = v5[2];
  if (!v7) {
    goto LABEL_17;
  }
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  BOOL v10 = v5[4] == v8 && v5[5] == v9;
  if (v10 || (uint64_t result = sub_259F68C70(), (result & 1) != 0))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v7 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    uint64_t v12 = v6 + 7;
    uint64_t v13 = 1;
    while (1)
    {
      uint64_t v14 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        break;
      }
      if (*(v12 - 1) == v8 && *v12 == v9) {
        goto LABEL_7;
      }
      uint64_t result = sub_259F68C70();
      if (result) {
        goto LABEL_7;
      }
      v12 += 2;
      ++v13;
      if (v14 == v7) {
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  return result;
}

double RecipeBuilder.appending(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_259F51354(a1, (void (*)(uint64_t))RecipeBuilder.append(_:), a2);
}

{
  return sub_259F51354(a1, (void (*)(uint64_t))RecipeBuilder.append(_:), a2);
}

{
  return sub_259F51354(a1, (void (*)(uint64_t))RecipeBuilder.append(_:), a2);
}

{
  return sub_259F51354(a1, (void (*)(uint64_t))RecipeBuilder.append(_:), a2);
}

{
  return sub_259F51354(a1, (void (*)(uint64_t))RecipeBuilder.append(_:), a2);
}

double sub_259F51354@<D0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  long long v8 = *v3;
  uint64_t v9 = *((void *)v3 + 2);
  long long v10 = *(long long *)((char *)v3 + 24);
  long long v11 = *(long long *)((char *)v3 + 40);
  long long v12 = *(long long *)((char *)v3 + 56);
  uint64_t v13 = *((void *)v3 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a2(a1);
  if (v4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)a3 = v8;
    *(void *)(a3 + 16) = v9;
    *(_OWORD *)(a3 + 24) = v10;
    *(_OWORD *)(a3 + 40) = v11;
    double result = *(double *)&v12;
    *(_OWORD *)(a3 + 56) = v12;
    *(void *)(a3 + 72) = v13;
  }
  return result;
}

uint64_t sub_259F514AC()
{
  return MEMORY[0x263F8EE78];
}

uint64_t sub_259F514B8()
{
  return 0;
}

BOOL static RecipeBuilder.BuildRecipeError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t RecipeBuilder.BuildRecipeError.hash(into:)()
{
  return sub_259F68DB0();
}

uint64_t RecipeBuilder.BuildRecipeError.hashValue.getter()
{
  return sub_259F68DC0();
}

void RecipeBuilder.buildRecipe(at:overwrite:)(uint64_t a1, int a2)
{
  LODWORD(v93) = a2;
  uint64_t v104 = *MEMORY[0x263EF8340];
  uint64_t v77 = sub_259F67D50();
  uint64_t v75 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  long long v76 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_259F67E70();
  uint64_t v88 = *(void *)(v4 - 8);
  uint64_t v89 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_259F67F30();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v91 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v92 = (uint64_t)&v70 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v70 - v13;
  uint64_t v85 = *v2;
  unint64_t v83 = v2[1];
  uint64_t v86 = v2[2];
  uint64_t v82 = v2[3];
  uint64_t v15 = v2[5];
  uint64_t v87 = v2[4];
  uint64_t v80 = v2[6];
  uint64_t v79 = v2[7];
  uint64_t v84 = v2[8];
  uint64_t v78 = v2[9];
  id v16 = objc_msgSend(self, sel_defaultManager);
  sub_259F67E60();
  sub_259F67F00();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  uint64_t v17 = v8 + 8;
  uint64_t v19 = v14;
  uint64_t v20 = v16;
  uint64_t v90 = v18;
  v18((uint64_t)v19, v7);
  uint64_t v21 = (void *)sub_259F68620();
  swift_bridgeObjectRelease();
  unsigned int v22 = objc_msgSend(v16, sel_fileExistsAtPath_, v21);

  if (v22)
  {
    if ((v93 & 1) == 0)
    {
      sub_259F52D10();
      swift_allocError();
      unsigned char *v50 = 0;
      goto LABEL_11;
    }
    unint64_t v23 = (void *)sub_259F67EC0();
    uint64_t v94 = 0;
    unsigned int v24 = objc_msgSend(v16, sel_removeItemAtURL_error_, v23, &v94);

    if (!v24)
    {
      id v54 = (id)v94;
      long long v55 = (void *)sub_259F67E20();

      swift_willThrow();
      sub_259F52D10();
      swift_allocError();
      unsigned char *v56 = 1;
      swift_willThrow();

      goto LABEL_12;
    }
    id v25 = (id)v94;
  }
  uint64_t v26 = (void *)sub_259F67EC0();
  uint64_t v94 = 0;
  unsigned int v27 = objc_msgSend(v16, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v26, 1, 0, &v94);

  id v28 = (id)v94;
  if (!v27)
  {
    id v49 = (id)v94;
    sub_259F67E20();

LABEL_11:
    swift_willThrow();
LABEL_12:

    return;
  }
  uint64_t v70 = v15;
  uint64_t v73 = v7;
  uint64_t v74 = v17;
  uint64_t v94 = 0x73656972657551;
  unint64_t v95 = 0xE700000000000000;
  unsigned int v72 = *MEMORY[0x263F06E50];
  uint64_t v29 = v88;
  unint64_t v71 = *(void (**)(char *))(v88 + 104);
  uint64_t v30 = v89;
  v71(v6);
  sub_259F2BFE0();
  id v31 = v28;
  id v93 = v20;
  uint64_t v32 = v92;
  sub_259F67F20();
  char v33 = *(void (**)(char *, uint64_t))(v29 + 8);
  v33(v6, v30);
  swift_bridgeObjectRelease();
  uint64_t v94 = 0x6A2E657069636572;
  unint64_t v95 = 0xEB000000006E6F73;
  ((void (*)(char *, void, uint64_t))v71)(v6, v72, v30);
  uint64_t v34 = v91;
  sub_259F67F20();
  v33(v6, v30);
  id v35 = v93;
  swift_bridgeObjectRelease();
  char v36 = (void *)sub_259F67EC0();
  uint64_t v94 = 0;
  LODWORD(v29) = objc_msgSend(v35, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v36, 0, 0, &v94);

  id v37 = (id)v94;
  if (v29)
  {
    unint64_t v38 = v83;
    uint64_t v94 = v85;
    unint64_t v95 = v83;
    uint64_t v39 = v82;
    uint64_t v96 = v86;
    uint64_t v97 = v82;
    uint64_t v40 = v70;
    uint64_t v98 = v87;
    uint64_t v99 = v70;
    uint64_t v41 = v32;
    uint64_t v42 = v80;
    uint64_t v43 = v79;
    uint64_t v100 = v80;
    uint64_t v101 = v79;
    uint64_t v44 = v78;
    uint64_t v102 = v84;
    uint64_t v103 = v78;
    id v45 = v37;
    uint64_t v46 = v81;
    sub_259F51F08(v43, (void *)0x7377656976, (void *)0xE500000000000000, v41);
    if (v46)
    {

      uint64_t v47 = v90;
      uint64_t v48 = v73;
      v90((uint64_t)v91, v73);
      v47(v92, v48);
    }
    else
    {
      uint64_t v57 = v85;
      uint64_t v94 = v85;
      unint64_t v95 = v38;
      uint64_t v96 = v86;
      uint64_t v97 = v39;
      uint64_t v98 = v87;
      uint64_t v99 = v40;
      uint64_t v100 = v42;
      uint64_t v101 = v43;
      uint64_t v102 = v84;
      uint64_t v103 = v44;
      uint64_t v58 = v92;
      sub_259F51F08(v84, (void *)0x736B636F6C62, (void *)0xE600000000000000, v92);
      sub_259F67D90();
      swift_allocObject();
      sub_259F67D80();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA9C0);
      uint64_t v59 = (_OWORD *)swift_allocObject();
      v59[1] = xmmword_259F6DB10;
      sub_259F67D40();
      unint64_t v60 = v83;
      sub_259F67D30();
      uint64_t v94 = (uint64_t)v59;
      sub_259F52C08();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA9D0);
      sub_259F52C60();
      uint64_t v61 = v87;
      uint64_t v62 = v82;
      sub_259F68910();
      sub_259F67D60();
      uint64_t v94 = v57;
      unint64_t v95 = v60;
      uint64_t v96 = v86;
      uint64_t v97 = v62;
      uint64_t v98 = v61;
      sub_259F52CBC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v63 = sub_259F67D70();
      unint64_t v65 = v64;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v66 = v91;
      sub_259F67F80();

      sub_259F21768(v63, v65);
      swift_release();
      uint64_t v67 = v66;
      uint64_t v68 = v73;
      uint64_t v69 = v90;
      v90((uint64_t)v67, v73);
      v69(v58, v68);
    }
  }
  else
  {
    id v51 = (id)v94;
    sub_259F67E20();

    swift_willThrow();
    uint64_t v52 = v73;
    uint64_t v53 = v90;
    v90((uint64_t)v34, v73);
    v53(v32, v52);
  }
}

void sub_259F51F08(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v24 = a4;
  _OWORD v27[2] = *(id *)MEMORY[0x263EF8340];
  uint64_t v7 = sub_259F67E70();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_259F67F30();
  uint64_t v25 = *(void *)(v11 - 8);
  uint64_t v26 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_msgSend(self, sel_defaultManager);
  uint64_t v15 = v14;
  uint64_t v23 = a1;
  if (*(void *)(a1 + 16))
  {
    v27[0] = a2;
    v27[1] = a3;
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F06E50], v7);
    sub_259F2BFE0();
    sub_259F67F20();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    id v16 = (void *)sub_259F67EC0();
    v27[0] = 0;
    unsigned int v17 = objc_msgSend(v15, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v16, 0, 0, v27);

    id v19 = v27[0];
    if (v17)
    {
      MEMORY[0x270FA5388](v18);
      *(&v22 - 2) = (uint64_t)v13;
      id v20 = v19;
      sub_259F53590(v23, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_259F53574);
    }
    else
    {
      id v21 = v27[0];
      sub_259F67E20();

      swift_willThrow();
    }

    (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v26);
  }
  else
  {
  }
}

uint64_t static RecipeBuilder.buildRecipe(at:with:viewQueries:overwrite:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, int a5)
{
  LODWORD(v34) = a5;
  char v36 = a2;
  uint64_t v8 = sub_259F67F30();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = a1;
  sub_259F67ED0();
  uint64_t v12 = sub_259F67EB0();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = MEMORY[0x263F8EE78];
  unint64_t v16 = sub_259F21A34(MEMORY[0x263F8EE78]);
  unint64_t v17 = sub_259F21E98(v15);
  unint64_t v18 = sub_259F21D74(v15);
  if (*(void *)(a4 + 16)) {
    id v19 = &unk_2707E1048;
  }
  else {
    id v19 = (void *)v15;
  }
  _OWORD v47[3] = &type metadata for AdHocBlock;
  v47[4] = &off_2707E30B8;
  id v20 = (void *)swift_allocObject();
  v47[0] = v20;
  v20[2] = v12;
  v20[3] = v14;
  _OWORD v20[4] = v36;
  v20[5] = a3;
  uint64_t v37 = v12;
  uint64_t v38 = v14;
  uint64_t v39 = 1;
  uint64_t v40 = v19;
  uint64_t v41 = v15;
  unint64_t v42 = v16;
  unint64_t v43 = v17;
  uint64_t v44 = a4;
  unint64_t v45 = v18;
  uint64_t v46 = MEMORY[0x263F8EE88];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = v48;
  RecipeBuilder.append(_:)(v47);
  if (v21)
  {
    uint64_t v48 = v38;
    uint64_t v35 = v41;
    char v36 = v40;
    uint64_t v33 = v43;
    unint64_t v34 = v42;
    v32[1] = v44;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = v37;
    uint64_t v24 = v38;
    uint64_t v48 = v38;
    uint64_t v25 = v40;
    uint64_t v33 = v39;
    char v36 = 0;
    uint64_t v26 = v41;
    unint64_t v27 = v42;
    unint64_t v28 = v43;
    uint64_t v29 = v44;
    unint64_t v31 = v45;
    uint64_t v30 = v46;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    uint64_t v37 = v23;
    uint64_t v38 = v24;
    uint64_t v39 = v33;
    uint64_t v40 = v25;
    uint64_t v41 = v26;
    unint64_t v42 = v27;
    unint64_t v43 = v28;
    uint64_t v44 = v29;
    unint64_t v45 = v31;
    uint64_t v46 = v30;
    RecipeBuilder.buildRecipe(at:overwrite:)(v35, v34 & 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_259F525B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v26 = a5;
  uint64_t v24 = a4;
  uint64_t v25 = a2;
  uint64_t v32 = sub_259F68690();
  uint64_t v27 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_259F67E70();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_259F67F30();
  uint64_t v13 = *(void *)(v23 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v23);
  unint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  unint64_t v18 = (char *)&v23 - v17;
  uint64_t v30 = a3;
  uint64_t v31 = v24;
  uint64_t v28 = a1;
  uint64_t v29 = v25;
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F06E50], v9);
  sub_259F2BFE0();
  sub_259F67F20();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_259F67EF0();
  id v19 = *(void (**)(char *, uint64_t))(v13 + 8);
  id v20 = v16;
  uint64_t v21 = v23;
  v19(v20, v23);
  sub_259F68680();
  sub_259F68900();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v32);
  return ((uint64_t (*)(char *, uint64_t))v19)(v18, v21);
}

void *sub_259F5289C(void *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v5 = *(void *)(*(void *)(a5 + 48) + 16 * a2);
    *double result = *(void *)(*(void *)(a5 + 56) + 8 * a2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (void *)v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t _s12PoirotBlocks18RecipeBuilderErrorO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  switch(v4)
  {
    case 1u:
      if (v7 != 1) {
        goto LABEL_43;
      }
      if (v2 != v5 || v3 != v6) {
        goto LABEL_42;
      }
      LOBYTE(v7) = 1;
      unsigned __int8 v4 = 1;
      char v9 = 1;
      break;
    case 2u:
      if (v7 != 2) {
        goto LABEL_43;
      }
      if (v2 != v5 || v3 != v6) {
        goto LABEL_42;
      }
      char v9 = 1;
      LOBYTE(v7) = 2;
      unsigned __int8 v4 = 2;
      break;
    case 3u:
      if (v7 != 3) {
        goto LABEL_43;
      }
      if (v2 != v5 || v3 != v6) {
        goto LABEL_42;
      }
      char v9 = 1;
      LOBYTE(v7) = 3;
      unsigned __int8 v4 = 3;
      break;
    case 4u:
      if (v7 != 4) {
        goto LABEL_43;
      }
      if (v2 != v5 || v3 != v6) {
        goto LABEL_42;
      }
      char v9 = 1;
      LOBYTE(v7) = 4;
      unsigned __int8 v4 = 4;
      break;
    case 5u:
      if (v7 != 5) {
        goto LABEL_43;
      }
      if (v2 != v5 || v3 != v6) {
        goto LABEL_42;
      }
      char v9 = 1;
      LOBYTE(v7) = 5;
      unsigned __int8 v4 = 5;
      break;
    default:
      if (*(unsigned char *)(a2 + 16))
      {
LABEL_43:
        char v9 = 0;
      }
      else if (v2 == v5 && v3 == v6)
      {
        LOBYTE(v7) = 0;
        unsigned __int8 v4 = 0;
        char v9 = 1;
      }
      else
      {
LABEL_42:
        char v9 = sub_259F68C70();
        LOBYTE(v7) = v4;
      }
      break;
  }
  sub_259F52E18(v5, v6, v7);
  sub_259F52E18(v2, v3, v4);
  sub_259F52E40(v2, v3, v4);
  sub_259F52E40(v5, v6, v7);
  return v9 & 1;
}

unint64_t sub_259F52AF0()
{
  unint64_t result = qword_26A3FA9B0;
  if (!qword_26A3FA9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA9B0);
  }
  return result;
}

unint64_t sub_259F52B44()
{
  unint64_t result = qword_26A3FA9B8;
  if (!qword_26A3FA9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA9B8);
  }
  return result;
}

uint64_t sub_259F52B98()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 96, 7);
}

unint64_t sub_259F52C08()
{
  unint64_t result = qword_26A3FA9C8;
  if (!qword_26A3FA9C8)
  {
    sub_259F67D50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA9C8);
  }
  return result;
}

unint64_t sub_259F52C60()
{
  unint64_t result = qword_26A3FA9D8;
  if (!qword_26A3FA9D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A3FA9D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA9D8);
  }
  return result;
}

unint64_t sub_259F52CBC()
{
  unint64_t result = qword_26A3FA9E0;
  if (!qword_26A3FA9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA9E0);
  }
  return result;
}

unint64_t sub_259F52D10()
{
  unint64_t result = qword_26A3FA9E8;
  if (!qword_26A3FA9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA9E8);
  }
  return result;
}

uint64_t sub_259F52D64()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

unint64_t sub_259F52DAC()
{
  unint64_t result = qword_26A3FA9F0;
  if (!qword_26A3FA9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA9F0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for RecipeBuilderError(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_259F53278(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_259F52E18);
}

uint64_t sub_259F52E18(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 5u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for RecipeBuilderError(uint64_t a1)
{
  return sub_259F52E40(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_259F52E40(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 5u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *assignWithCopy for RecipeBuilderError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_259F532F4(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_259F52E18, (void (*)(uint64_t, uint64_t, uint64_t))sub_259F52E40);
}

uint64_t *assignWithTake for RecipeBuilderError(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_259F53378(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_259F52E40);
}

ValueMetadata *type metadata accessor for RecipeBuilderError()
{
  return &type metadata for RecipeBuilderError;
}

uint64_t destroy for RecipeBuilder()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for RecipeBuilder(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RecipeBuilder(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for RecipeBuilder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RecipeBuilder(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RecipeBuilder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecipeBuilder()
{
  return &type metadata for RecipeBuilder;
}

uint64_t initializeBufferWithCopyOfBuffer for RecipeBuilder.TokenError(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_259F53278(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_259F53230);
}

uint64_t sub_259F53230(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 - 1 <= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for RecipeBuilder.TokenError(uint64_t a1)
{
  return sub_259F5325C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_259F5325C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 - 1 <= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_259F53278(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  return a1;
}

uint64_t *assignWithCopy for RecipeBuilder.TokenError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_259F532F4(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_259F53230, (void (*)(uint64_t, uint64_t, uint64_t))sub_259F5325C);
}

uint64_t *sub_259F532F4(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  uint64_t v12 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for RecipeBuilder.TokenError(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_259F53378(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_259F5325C);
}

uint64_t *sub_259F53378(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v8 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for RecipeBuilder.TokenError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RecipeBuilder.TokenError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecipeBuilder.TokenError()
{
  return &type metadata for RecipeBuilder.TokenError;
}

unsigned char *storeEnumTagSinglePayload for RecipeBuilder.BuildRecipeError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259F5352CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecipeBuilder.BuildRecipeError()
{
  return &type metadata for RecipeBuilder.BuildRecipeError;
}

ValueMetadata *type metadata accessor for AdHocBlock()
{
  return &type metadata for AdHocBlock;
}

uint64_t sub_259F53574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_259F525B0(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_259F53590(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = v2;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v25 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = 16 * i;
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + v16);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    id v20 = (uint64_t *)(*(void *)(a1 + 56) + v16);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v18, v19, v22, v21);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v10++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v10 >= v25) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v24 + 8 * v10);
    if (!v14)
    {
      int64_t v15 = v10 + 1;
      if (v10 + 1 >= v25) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v24 + 8 * v15);
      if (v14) {
        goto LABEL_14;
      }
      int64_t v15 = v10 + 2;
      if (v10 + 2 >= v25) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v24 + 8 * v15);
      if (v14) {
        goto LABEL_14;
      }
      int64_t v15 = v10 + 3;
      if (v10 + 3 >= v25) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v24 + 8 * v15);
      if (v14)
      {
LABEL_14:
        int64_t v10 = v15;
        goto LABEL_15;
      }
      int64_t v23 = v10 + 4;
      if (v10 + 4 >= v25) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v24 + 8 * v23);
      v10 += 4;
      if (!v14) {
        break;
      }
    }
LABEL_15:
    unint64_t v8 = (v14 - 1) & v14;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v25) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v24 + 8 * v10);
    ++v23;
    if (v14) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_259F537A4(uint64_t *a1)
{
  return sub_259F50E04(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t sub_259F537C4(uint64_t a1, uint64_t (*a2)(char *), uint64_t a3, unint64_t *a4)
{
  uint64_t v29 = a4;
  unint64_t v34 = a2;
  uint64_t v35 = a3;
  uint64_t v6 = type metadata accessor for DatasetColumnDescription(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v33 = (uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v32 = (uint64_t)&v28 - v11;
  uint64_t result = MEMORY[0x270FA5388](v10);
  unint64_t v14 = (char *)&v28 - v13;
  uint64_t v15 = MEMORY[0x263F8EE78];
  uint64_t v36 = MEMORY[0x263F8EE78];
  uint64_t v31 = *(void *)(a1 + 16);
  if (v31)
  {
    unint64_t v16 = 0;
    uint64_t v30 = a1;
    while (v16 < *(void *)(a1 + 16))
    {
      unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v20 = *(void *)(v7 + 72);
      sub_259F138BC(a1 + v19 + v20 * v16, (uint64_t)v14);
      uint64_t v15 = v35;
      char v21 = v34(v14);
      if (v4)
      {
        sub_259F26B8C((uint64_t)v14);
        swift_bridgeObjectRelease();
        swift_release();
        return v15;
      }
      if (v21)
      {
        sub_259F1E52C((uint64_t)v14, v33);
        uint64_t v27 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_259F1C918(0, *(void *)(v27 + 16) + 1, 1);
          uint64_t v27 = v36;
        }
        unint64_t v18 = *(void *)(v27 + 16);
        unint64_t v17 = *(void *)(v27 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_259F1C918(v17 > 1, v18 + 1, 1);
          uint64_t v27 = v36;
        }
        *(void *)(v27 + 16) = v18 + 1;
        uint64_t result = sub_259F1E52C(v33, v27 + v19 + v18 * v20);
      }
      else
      {
        sub_259F138BC((uint64_t)v14, v32);
        uint64_t v22 = v29;
        unint64_t v23 = *v29;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v22 = v23;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v23 = sub_259F2EE58(0, *(void *)(v23 + 16) + 1, 1, v23);
          *uint64_t v29 = v23;
        }
        unint64_t v26 = *(void *)(v23 + 16);
        unint64_t v25 = *(void *)(v23 + 24);
        if (v26 >= v25 >> 1)
        {
          unint64_t v23 = sub_259F2EE58(v25 > 1, v26 + 1, 1, v23);
          *uint64_t v29 = v23;
        }
        *(void *)(v23 + 16) = v26 + 1;
        sub_259F1E52C(v32, v23 + v19 + v26 * v20);
        uint64_t result = sub_259F26B8C((uint64_t)v14);
      }
      ++v16;
      a1 = v30;
      if (v31 == v16)
      {
        uint64_t v15 = v36;
        goto LABEL_19;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_19:
    swift_bridgeObjectRelease();
    return v15;
  }
  return result;
}

uint64_t sub_259F53AB0(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = (void **)(v1 + 24);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *(void **)(v1 + 24);
  *(void *)(v2 + 24) = 0x8000000000000000;
  unint64_t v10 = sub_259F17068(v4, v3);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    uint64_t v8 = sub_259F2E76C(0, v8[2] + 1, 1, v8);
    v6[v10] = v8;
    goto LABEL_10;
  }
  char v14 = v9;
  if (v8[3] >= v13)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_259F25638();
    }
  }
  else
  {
    sub_259F19074(v13, isUniquelyReferenced_nonNull_native);
    unint64_t v15 = sub_259F17068(v4, v3);
    if ((v14 & 1) != (v16 & 1))
    {
      uint64_t result = sub_259F68D30();
      __break(1u);
      return result;
    }
    unint64_t v10 = v15;
  }
  *uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  uint64_t v17 = (uint64_t)*v6;
  if ((v14 & 1) == 0)
  {
    sub_259F24AB8(v10, v4, v3, MEMORY[0x263F8EE78], *v6);
    swift_bridgeObjectRetain();
  }
  uint64_t v6 = *(void ***)(v17 + 56);
  uint64_t v8 = v6[v10];
  char v18 = swift_isUniquelyReferenced_nonNull_native();
  v6[v10] = v8;
  if ((v18 & 1) == 0) {
    goto LABEL_14;
  }
LABEL_10:
  unint64_t v20 = v8[2];
  unint64_t v19 = v8[3];
  if (v20 >= v19 >> 1)
  {
    uint64_t v8 = sub_259F2E76C((void *)(v19 > 1), v20 + 1, 1, v8);
    v6[v10] = v8;
  }
  v8[2] = v20 + 1;
  v8[v20 + 4] = v5;
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_259F53C94(uint64_t result)
{
  uint64_t v1 = *(void *)result;
  uint64_t v2 = *(void *)(*(void *)result + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (uint64_t *)(v1 + 48);
    do
    {
      uint64_t v4 = *(v3 - 2);
      uint64_t v5 = *(v3 - 1);
      uint64_t v6 = *v3;
      v3 += 3;
      v7[0] = v4;
      v7[1] = v5;
      id v7[2] = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_259F53AB0(v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_259F53D4C(uint64_t a1, uint64_t a2, void *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA4F0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_259F6BA00;
  swift_bridgeObjectRetain();
  id v7 = a3;
  BlockLogEntry.init(useCase:error:)(a1, a2, a3, v6 + 32);
  return v6;
}

uint64_t sub_259F53DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = (void *)(v2 + 16);
  swift_beginAccess();
  id v7 = *(void **)(v2 + 16);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v2 + 16) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    id v7 = sub_259F2E410(0, v7[2] + 1, 1, v7);
    *uint64_t v6 = v7;
  }
  unint64_t v10 = v7[2];
  unint64_t v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    id v7 = sub_259F2E410((void *)(v9 > 1), v10 + 1, 1, v7);
    *uint64_t v6 = v7;
  }
  id v7[2] = v10 + 1;
  uint64_t v11 = &v7[2 * v10];
  void v11[4] = sub_259F54794;
  v11[5] = v5;
  return swift_endAccess();
}

uint64_t sub_259F53EE8@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_259F53F1C()
{
  void (*v20)(uint64_t *__return_ptr, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  int64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  void **v36;
  uint64_t v37;

  uint64_t v2 = v1;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA9F8);
  uint64_t v3 = sub_259F685A0();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v35 = v0;
    uint64_t v36 = (void **)(v0 + 16);
    swift_bridgeObjectRetain();
    uint64_t v5 = (uint64_t *)(v3 + 48);
    do
    {
      uint64_t v6 = *(v5 - 2);
      uint64_t v7 = *(v5 - 1);
      uint64_t v8 = *v5;
      unint64_t v9 = (void *)swift_allocObject();
      _OWORD v9[2] = v6;
      void v9[3] = v7;
      v9[4] = v8;
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = sub_259F5473C;
      *(void *)(v10 + 24) = v9;
      swift_beginAccess();
      uint64_t v11 = *v36;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v36 = v11;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v11 = sub_259F2E410(0, v11[2] + 1, 1, v11);
        *uint64_t v36 = v11;
      }
      unint64_t v14 = v11[2];
      unint64_t v13 = v11[3];
      if (v14 >= v13 >> 1)
      {
        uint64_t v11 = sub_259F2E410((void *)(v13 > 1), v14 + 1, 1, v11);
        *uint64_t v36 = v11;
      }
      _OWORD v11[2] = v14 + 1;
      unint64_t v15 = &v11[2 * v14];
      void v15[4] = sub_259F54794;
      v15[5] = v10;
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v5 += 3;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    uint64_t v0 = v35;
    uint64_t v2 = v1;
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v16 = *(void *)(v0 + 16);
  uint64_t v17 = *(void *)(v16 + 16);
  if (!v17) {
    return MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain_n();
  uint64_t v18 = v16 + 40;
  unint64_t v19 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    unint64_t v20 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v18 - 8);
    char v21 = swift_retain();
    v20(&v37, v21);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_release();
      return (uint64_t)v19;
    }
    swift_release();
    uint64_t v22 = v37;
    unint64_t v23 = *(void *)(v37 + 16);
    uint64_t v24 = v19[2];
    unint64_t v25 = v24 + v23;
    if (__OFADD__(v24, v23)) {
      break;
    }
    unint64_t v26 = swift_isUniquelyReferenced_nonNull_native();
    if ((v26 & 1) != 0 && v25 <= v19[3] >> 1)
    {
      if (*(void *)(v22 + 16)) {
        goto LABEL_23;
      }
    }
    else
    {
      if (v24 <= v25) {
        uint64_t v27 = v24 + v23;
      }
      else {
        uint64_t v27 = v24;
      }
      unint64_t v19 = sub_259F2E520((void *)v26, v27, 1, v19);
      if (*(void *)(v22 + 16))
      {
LABEL_23:
        uint64_t v28 = v19[2];
        if ((v19[3] >> 1) - v28 < v23) {
          goto LABEL_38;
        }
        uint64_t v29 = (unint64_t)&v19[5 * v28 + 4];
        if (v22 + 32 < v29 + 40 * v23 && v29 < v22 + 32 + 40 * v23) {
          goto LABEL_40;
        }
        swift_arrayInitWithCopy();
        if (v23)
        {
          uint64_t v31 = v19[2];
          uint64_t v32 = __OFADD__(v31, v23);
          uint64_t v33 = v31 + v23;
          if (v32) {
            goto LABEL_39;
          }
          void v19[2] = v33;
        }
        goto LABEL_12;
      }
    }
    if (v23) {
      goto LABEL_37;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    v18 += 16;
    if (!--v17)
    {
      swift_bridgeObjectRelease_n();
      return (uint64_t)v19;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

uint64_t sub_259F54328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_259F67D50();
  MEMORY[0x270FA5388](v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  sub_259F37B08(a1, a2, a3, (uint64_t)&v23);
  uint64_t v7 = v24;
  uint64_t v21 = v23;
  uint64_t v8 = v25;
  uint64_t v27 = v26;
  sub_259F67D90();
  swift_allocObject();
  sub_259F67D80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA9C0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_259F6DB10;
  sub_259F67D40();
  sub_259F67D30();
  uint64_t v23 = v9;
  sub_259F52C08();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA9D0);
  sub_259F52C60();
  uint64_t v10 = v7;
  sub_259F68910();
  sub_259F67D60();
  uint64_t v23 = v21;
  uint64_t v24 = v7;
  uint64_t v25 = v8;
  sub_259F547AC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_259F67D70();
  if (v22)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v13 = v11;
    uint64_t v14 = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = v21;
    uint64_t v24 = v7;
    uint64_t v25 = v8;
    uint64_t v26 = v27;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_259F37E94();
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA4F0);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_259F6DB10;
    *(void *)(v10 + 32) = v19;
    *(void *)(v10 + 40) = v20;
    *(unsigned char *)(v10 + 48) = 0;
    *(void *)(v10 + 56) = v13;
    *(void *)(v10 + 64) = v14;
    *(void *)(v10 + 72) = v19;
    *(void *)(v10 + 80) = v20;
    *(unsigned char *)(v10 + 88) = 1;
    *(void *)(v10 + 96) = v16;
    *(void *)(v10 + 104) = v18;
    swift_bridgeObjectRetain();
  }
  swift_release();
  return v10;
}

uint64_t sub_259F54668()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 32, 7);
}

uint64_t type metadata accessor for BlockLogEntryCollector()
{
  return self;
}

uint64_t sub_259F546D8()
{
  return sub_259F53F1C();
}

uint64_t sub_259F546FC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_259F5473C()
{
  return sub_259F54328(v0[2], v0[3], v0[4]);
}

uint64_t sub_259F5475C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_259F54794@<X0>(uint64_t *a1@<X8>)
{
  return sub_259F54800(a1);
}

unint64_t sub_259F547AC()
{
  unint64_t result = qword_26A3FAA00;
  if (!qword_26A3FAA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAA00);
  }
  return result;
}

uint64_t sub_259F54800@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t _s12PoirotBlocks12DatasetErrorO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  switch(v4)
  {
    case 1u:
      if (v7 != 1) {
        goto LABEL_43;
      }
      if (v2 != v5 || v3 != v6) {
        goto LABEL_42;
      }
      LOBYTE(v7) = 1;
      unsigned __int8 v4 = 1;
      char v9 = 1;
      break;
    case 2u:
      if (v7 != 2) {
        goto LABEL_43;
      }
      if (v2 != v5 || v3 != v6) {
        goto LABEL_42;
      }
      char v9 = 1;
      LOBYTE(v7) = 2;
      unsigned __int8 v4 = 2;
      break;
    case 3u:
      if (v7 != 3) {
        goto LABEL_43;
      }
      if (v2 != v5 || v3 != v6) {
        goto LABEL_42;
      }
      char v9 = 1;
      LOBYTE(v7) = 3;
      unsigned __int8 v4 = 3;
      break;
    case 4u:
      if (v7 != 4) {
        goto LABEL_43;
      }
      if (v2 != v5 || v3 != v6) {
        goto LABEL_42;
      }
      char v9 = 1;
      LOBYTE(v7) = 4;
      unsigned __int8 v4 = 4;
      break;
    case 5u:
      if (v7 != 5) {
        goto LABEL_43;
      }
      if (v2 != v5 || v3 != v6) {
        goto LABEL_42;
      }
      char v9 = 1;
      LOBYTE(v7) = 5;
      unsigned __int8 v4 = 5;
      break;
    default:
      if (*(unsigned char *)(a2 + 16))
      {
LABEL_43:
        char v9 = 0;
      }
      else if (v2 == v5 && v3 == v6)
      {
        LOBYTE(v7) = 0;
        unsigned __int8 v4 = 0;
        char v9 = 1;
      }
      else
      {
LABEL_42:
        char v9 = sub_259F68C70();
        LOBYTE(v7) = v4;
      }
      break;
  }
  sub_259F52E18(v5, v6, v7);
  sub_259F52E18(v2, v3, v4);
  sub_259F52E40(v2, v3, v4);
  sub_259F52E40(v5, v6, v7);
  return v9 & 1;
}

uint64_t sub_259F54A04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_259F52E18(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DatasetError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_259F52E18(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_259F52E40(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DatasetError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_259F52E40(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for DatasetError()
{
  return &type metadata for DatasetError;
}

uint64_t sub_259F54B00()
{
  uint64_t v1 = sub_259F68690();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v33 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_259F67D50();
  unint64_t v35 = *(void *)(v3 - 8);
  uint64_t v36 = v3;
  MEMORY[0x270FA5388](v3);
  long long v4 = *v0;
  long long v5 = v0[1];
  unint64_t v34 = v0;
  long long v42 = v4;
  long long v43 = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FAA08);
  uint64_t v7 = swift_allocObject();
  long long v39 = xmmword_259F6BA00;
  *(_OWORD *)(v7 + 16) = xmmword_259F6BA00;
  uint64_t v8 = MEMORY[0x263F8D310];
  *(void *)(v7 + 56) = MEMORY[0x263F8D310];
  *(void *)(v7 + 32) = 0xD000000000000022;
  *(void *)(v7 + 40) = 0x8000000259F6A4E0;
  unint64_t v9 = sub_259F559EC();
  sub_259F68D80();
  swift_bridgeObjectRelease();
  uint64_t v38 = v6;
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = v39;
  *(void *)(v10 + 56) = v8;
  *(void *)(v10 + 32) = 0xD00000000000001BLL;
  *(void *)(v10 + 40) = 0x8000000259F6A510;
  sub_259F68D80();
  swift_bridgeObjectRelease();
  sub_259F67D90();
  swift_allocObject();
  sub_259F67D80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA9C0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_259F6DB10;
  sub_259F67D40();
  sub_259F67D30();
  *(void *)&long long v40 = v11;
  sub_259F52C08();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA9D0);
  sub_259F52C60();
  sub_259F68910();
  sub_259F67D60();
  long long v40 = v42;
  long long v41 = v43;
  sub_259F55A40((uint64_t)&v42);
  sub_259F55A6C();
  unint64_t v12 = v37;
  uint64_t v13 = sub_259F67D70();
  if (v12)
  {
    sub_259F55AC0((uint64_t)&v42);
    swift_release();
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = v39;
    *(void *)(v15 + 56) = MEMORY[0x263F8D310];
    *(void *)(v15 + 32) = 0xD000000000000020;
    *(void *)(v15 + 40) = 0x8000000259F6A530;
LABEL_10:
    sub_259F68D80();
    return swift_bridgeObjectRelease();
  }
  uint64_t v16 = v13;
  unint64_t v17 = v14;
  uint64_t v18 = v34;
  unint64_t v37 = v9;
  sub_259F55AC0((uint64_t)&v42);
  sub_259F68680();
  unint64_t v35 = v17;
  uint64_t v36 = v16;
  uint64_t v19 = sub_259F68670();
  if (v20)
  {
    uint64_t v21 = v19;
    uint64_t v22 = v20;
    uint64_t v46 = *((void *)v18 + 4);
    uint64_t v23 = v46;
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = v39;
    *(void *)(v24 + 56) = MEMORY[0x263F8D310];
    *(void *)(v24 + 32) = v21;
    *(void *)(v24 + 40) = v22;
    sub_259F68D80();
    swift_bridgeObjectRelease();
    uint64_t v25 = MEMORY[0x263F8D310];
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = v39;
    *(void *)(v26 + 56) = v25;
    *(void *)(v26 + 32) = 0xD000000000000019;
    *(void *)(v26 + 40) = 0x8000000259F6A5A0;
    sub_259F68D80();
    swift_bridgeObjectRelease();
    uint64_t v27 = *(void *)(v23 + 16);
    if (v27)
    {
      uint64_t v28 = (long long *)(v23 + 32);
      swift_bridgeObjectRetain();
      do
      {
        long long v29 = *v28;
        long long v30 = v28[1];
        uint64_t v45 = *((void *)v28 + 4);
        v44[0] = v29;
        v44[1] = v30;
        sub_259F55AEC((uint64_t)v44);
        sub_259F550E4((uint64_t)v44);
        sub_259F55B30((uint64_t)v44);
        uint64_t v28 = (long long *)((char *)v28 + 40);
        --v27;
      }
      while (v27);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    sub_259F21768(v36, v35);
    swift_release();
    sub_259F2C0F4((uint64_t)&v46);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = v39;
    *(void *)(v31 + 56) = v25;
    *(void *)(v31 + 32) = 0xD000000000000020;
    *(void *)(v31 + 40) = 0x8000000259F6A530;
    goto LABEL_10;
  }
  uint64_t result = sub_259F68A80();
  __break(1u);
  return result;
}

uint64_t sub_259F550E4(uint64_t a1)
{
  uint64_t v2 = sub_259F68690();
  MEMORY[0x270FA5388](v2 - 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FAA08);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_259F6BA00;
  sub_259F68960();
  sub_259F686F0();
  swift_bridgeObjectRetain();
  sub_259F686F0();
  swift_bridgeObjectRelease();
  sub_259F686F0();
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  sub_259F68A10();
  sub_259F686F0();
  uint64_t v5 = MEMORY[0x263F8D310];
  *(void *)(v3 + 56) = MEMORY[0x263F8D310];
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0xE000000000000000;
  sub_259F559EC();
  sub_259F68D80();
  swift_bridgeObjectRelease();
  unint64_t v6 = *(void *)(a1 + 32);
  if (v6 >> 60 == 15)
  {
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_259F6BA00;
    *(void *)(v7 + 56) = v5;
    *(void *)(v7 + 32) = 0x3E4C4C554E3CLL;
    *(void *)(v7 + 40) = 0xE600000000000000;
    sub_259F68D80();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)(a1 + 24);
    switch(v4)
    {
      case 1:
        sub_259F21710(v8, v6);
        sub_259F68680();
        uint64_t v26 = v8;
        unint64_t v27 = v6;
        sub_259F68670();
        if (!v14) {
          goto LABEL_15;
        }
        sub_259F2BFE0();
        uint64_t v15 = sub_259F688D0();
        swift_bridgeObjectRelease();
        uint64_t v16 = *(void *)(v15 + 16);
        if (v16)
        {
          unint64_t v17 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
          do
          {
            uint64_t v19 = *(v17 - 1);
            uint64_t v18 = *v17;
            uint64_t v20 = swift_allocObject();
            *(_OWORD *)(v20 + 16) = xmmword_259F6BA00;
            *(void *)(v20 + 56) = v5;
            *(void *)(v20 + 32) = v19;
            *(void *)(v20 + 40) = v18;
            swift_bridgeObjectRetain_n();
            sub_259F68D80();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v17 += 2;
            --v16;
          }
          while (v16);
          swift_bridgeObjectRelease();
          sub_259F4027C(v26, v27);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_259F4027C(v8, v27);
          swift_bridgeObjectRelease();
        }
        break;
      case 2:
        sub_259F21710(v8, v6);
        uint64_t v21 = sub_259F67F60();
        uint64_t v23 = v22;
        uint64_t v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = xmmword_259F6BA00;
        *(void *)(v24 + 56) = v5;
        *(void *)(v24 + 32) = v21;
        *(void *)(v24 + 40) = v23;
        goto LABEL_12;
      default:
        sub_259F21710(v8, v6);
        sub_259F68680();
        uint64_t v9 = sub_259F68670();
        if (!v10)
        {
LABEL_15:
          sub_259F68A80();
          __break(1u);
          JUMPOUT(0x259F55618);
        }
        uint64_t v11 = v9;
        uint64_t v12 = v10;
        uint64_t v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = xmmword_259F6BA00;
        *(void *)(v13 + 56) = v5;
        *(void *)(v13 + 32) = v11;
        *(void *)(v13 + 40) = v12;
LABEL_12:
        sub_259F68D80();
        sub_259F4027C(v8, v6);
        swift_bridgeObjectRelease();
        break;
    }
  }
  return sub_259F55628(a1);
}

uint64_t sub_259F55628(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FAA08);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_259F6BA00;
  BYTE8(v4) = 0;
  sub_259F68960();
  sub_259F686F0();
  swift_bridgeObjectRetain();
  sub_259F686F0();
  swift_bridgeObjectRelease();
  sub_259F686F0();
  *(void *)&long long v4 = *(unsigned __int8 *)(a1 + 16);
  sub_259F68A10();
  sub_259F686F0();
  *(void *)(v2 + 56) = MEMORY[0x263F8D310];
  *(void *)(v2 + 32) = *(void *)((char *)&v4 + 1);
  *(void *)(v2 + 40) = 0xE000000000000000;
  sub_259F559EC();
  sub_259F68D80();
  return swift_bridgeObjectRelease();
}

void sub_259F557A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a3 + 8))(ObjectType, a3);
  if (!v3)
  {
    swift_bridgeObjectRetain();
    sub_259F54B00();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t type metadata accessor for ConsoleLogger()
{
  return self;
}

void sub_259F55980(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

unint64_t sub_259F55998()
{
  unint64_t result = qword_26A3FAA10;
  if (!qword_26A3FAA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAA10);
  }
  return result;
}

unint64_t sub_259F559EC()
{
  unint64_t result = qword_26A3FAA18;
  if (!qword_26A3FAA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAA18);
  }
  return result;
}

uint64_t sub_259F55A40(uint64_t a1)
{
  return a1;
}

unint64_t sub_259F55A6C()
{
  unint64_t result = qword_26A3FAA20;
  if (!qword_26A3FAA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAA20);
  }
  return result;
}

uint64_t sub_259F55AC0(uint64_t a1)
{
  return a1;
}

uint64_t sub_259F55AEC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_259F40268(v2, v3);
  return a1;
}

uint64_t sub_259F55B30(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a1 + 32);
  swift_bridgeObjectRelease();
  sub_259F4027C(v2, v3);
  return a1;
}

uint64_t dispatch thunk of SupportsIgnoreSQLFailure.ignoreSQLFailure.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id BiomeUDFContext.biomeDatabase.getter()
{
  uint64_t v1 = *(void **)(v0 + qword_26A3FAA28);
  if (v1)
  {
    return v1;
  }
  else
  {
    id result = (id)sub_259F68A80();
    __break(1u);
  }
  return result;
}

id sub_259F55C10@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(*a1 + qword_26A3FAA28);
  if (v2)
  {
    *a2 = v2;
    return v2;
  }
  else
  {
    id result = (id)sub_259F68A80();
    __break(1u);
  }
  return result;
}

void sub_259F55CA0(void *a1)
{
  objc_msgSend(a1, sel_db);
  sub_259F68310();
  swift_allocObject();
  sub_259F682E0();
  sub_259F68000();
  unint64_t v3 = *(void **)(v1 + qword_26A3FAA28);
  *(void *)(v1 + qword_26A3FAA28) = a1;
}

uint64_t sub_259F55DDC()
{
  *(void *)(swift_allocObject() + qword_26A3FAA28) = 0;
  return sub_259F68020();
}

void static BiomeUDFContext.makeUDFContext(withSQLiteConnection:)()
{
}

uint64_t static BiomeUDFContext.makeUDFContext(withStreamTables:manifest:)(uint64_t a1, uint64_t a2)
{
  uint64_t v59 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A3FA550);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v51 - v8;
  uint64_t v10 = sub_259F684E0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v51 - v15;
  *(void *)(swift_allocObject() + qword_26A3FAA28) = 0;
  uint64_t v58 = sub_259F68020();
  if (v2) {
    return v58;
  }
  uint64_t v57 = v14;
  sub_259F31408(v59, (uint64_t)v9);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v56 = v11 + 48;
  long long v55 = v19;
  if (v19(v9, 1, v10) == 1)
  {
    uint64_t v59 = 0;
    sub_259F31494((uint64_t)v9);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    sub_259F68010();
    uint64_t v59 = 0;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  uint64_t v20 = *(void *)(a1 + 16);
  if (!v20) {
    goto LABEL_26;
  }
  uint64_t v21 = a1 + 32;
  uint64_t v53 = (void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v52 = (void (**)(char *, uint64_t))(v11 + 8);
  id v54 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v51 = a1;
  swift_bridgeObjectRetain();
  uint64_t v22 = a1 + 32;
  uint64_t v23 = v20;
  do
  {
    sub_259F566FC(v22, (uint64_t)&aBlock);
    sub_259F13728(&aBlock, (uint64_t)&v65);
    sub_259F13728(&v65, (uint64_t)v70);
    uint64_t v24 = v71;
    uint64_t v25 = v72;
    __swift_project_boxed_opaque_existential_1(v70, v71);
    if (!(*(uint64_t (**)(uint64_t, uint64_t))(v25 + 32))(v24, v25))
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
      (*v54)(v7, 1, 1, v10);
LABEL_10:
      sub_259F31494((uint64_t)v7);
      goto LABEL_11;
    }
    sub_259F68070();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
    int v26 = v55(v7, 1, v10);
    unint64_t v27 = v57;
    if (v26 == 1) {
      goto LABEL_10;
    }
    (*v53)(v57, v7, v10);
    uint64_t v28 = v59;
    sub_259F68010();
    uint64_t v59 = v28;
    if (v28)
    {
      (*v52)(v27, v10);
LABEL_29:
      swift_release();
      swift_bridgeObjectRelease();
      return v58;
    }
    (*v52)(v27, v10);
LABEL_11:
    v22 += 48;
    --v23;
  }
  while (v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v29 = v21;
  uint64_t v30 = v20;
  do
  {
    sub_259F566FC(v29, (uint64_t)&aBlock);
    sub_259F13728(&aBlock, (uint64_t)&v65);
    sub_259F13728(&v65, (uint64_t)v70);
    uint64_t v31 = v71;
    uint64_t v32 = v72;
    __swift_project_boxed_opaque_existential_1(v70, v71);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v32 + 32))(v31, v32))
    {
      uint64_t v33 = v59;
      sub_259F68090();
      swift_release();
      uint64_t v59 = v33;
      if (v33)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
        goto LABEL_29;
      }
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
    v29 += 48;
    --v30;
  }
  while (v30);
  swift_bridgeObjectRelease();
  uint64_t v73 = MEMORY[0x263F8EE78];
  sub_259F689B0();
  do
  {
    sub_259F56758(v21, (uint64_t)v70);
    sub_259F566FC((uint64_t)v70, (uint64_t)&aBlock);
    sub_259F13728(&aBlock, (uint64_t)&v65);
    sub_259F13728(&v65, (uint64_t)&aBlock);
    uint64_t v38 = v62;
    long long v39 = v63;
    __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v62);
    LOBYTE(v38) = (*((uint64_t (**)(void *, id (*)(uint64_t)))v39 + 6))(v38, v39);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
    sub_259F566FC((uint64_t)v70, (uint64_t)&aBlock);
    sub_259F13728(&aBlock, (uint64_t)&v65);
    if (v38)
    {
      sub_259F13728(&v65, (uint64_t)v67);
      uint64_t v40 = v68;
      uint64_t v41 = v69;
      __swift_project_boxed_opaque_existential_1(v67, v68);
      long long v42 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v41 + 24))(v40, v41);
      sub_259F56758((uint64_t)v70, (uint64_t)&v65);
      long long v43 = (_OWORD *)swift_allocObject();
      long long v44 = v66[0];
      v43[1] = v65;
      v43[2] = v44;
      *(_OWORD *)((char *)v43 + 41) = *(_OWORD *)((char *)v66 + 9);
      id v45 = objc_allocWithZone(MEMORY[0x263F2A9B0]);
      uint64_t v63 = sub_259F5691C;
      unint64_t v64 = v43;
      *(void *)&long long aBlock = MEMORY[0x263EF8330];
      *((void *)&aBlock + 1) = 1107296256;
      uint64_t v61 = sub_259F56A1C;
      uint64_t v62 = &block_descriptor_0;
      uint64_t v46 = _Block_copy(&aBlock);
      objc_msgSend(v45, sel_initWithSchema_publisherBlockWithOptions_acceptPublisherOptions_, v42, v46, 1);

      _Block_release(v46);
      swift_release();
      p_long long aBlock = (long long *)v67;
    }
    else
    {
      sub_259F13728(&v65, (uint64_t)&aBlock);
      unint64_t v34 = v62;
      unint64_t v35 = v63;
      __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v62);
      uint64_t v36 = (void *)(*((uint64_t (**)(void *, id (*)(uint64_t)))v35 + 2))(v34, v35);
      objc_msgSend(objc_allocWithZone(MEMORY[0x263F2A9B0]), sel_initWithStream_, v36);

      p_long long aBlock = &aBlock;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)p_aBlock);
    sub_259F567B4((uint64_t)v70);
    sub_259F68980();
    sub_259F689C0();
    sub_259F689D0();
    sub_259F68990();
    v21 += 48;
    --v20;
  }
  while (v20);
LABEL_26:
  id v47 = objc_allocWithZone(MEMORY[0x263F2A8E0]);
  sub_259F56808();
  uint64_t v48 = (void *)sub_259F68780();
  swift_bridgeObjectRelease();
  id v49 = objc_msgSend(v47, sel_initWithVirtualTables_privileges_isColumnAccessLoggingEnabled_enableAuthorizer_error_, v48, 0, 0, 0, 0);

  uint64_t v17 = v58;
  sub_259F55CA0(v49);
  uint64_t v50 = v59;
  sub_259F67FE0();
  if (v50)
  {
    swift_release();
    return v58;
  }
  return v17;
}

uint64_t sub_259F566FC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_259F56758(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_259F567B4(uint64_t a1)
{
  return a1;
}

unint64_t sub_259F56808()
{
  unint64_t result = qword_26A3FAA30;
  if (!qword_26A3FAA30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A3FAA30);
  }
  return result;
}

id sub_259F56848(uint64_t a1, uint64_t a2)
{
  sub_259F566FC(a2, (uint64_t)&v7);
  sub_259F13728(&v7, (uint64_t)v10);
  sub_259F13728(v10, (uint64_t)&v7);
  uint64_t v3 = v8;
  uint64_t v4 = v9;
  __swift_project_boxed_opaque_existential_1(&v7, v8);
  id v5 = sub_259F30208(a1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
  return v5;
}

uint64_t sub_259F568D8()
{
  if (*(unsigned __int8 *)(v0 + 56) <= 2u) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  }
  return MEMORY[0x270FA0238](v0, 57, 7);
}

id sub_259F5691C(uint64_t a1)
{
  return sub_259F56848(a1, v1 + 16);
}

void BiomeUDFContext.__allocating_init(databaseConnection:ownsConnection:)()
{
}

void BiomeUDFContext.init(databaseConnection:ownsConnection:)()
{
}

void sub_259F56984()
{
}

uint64_t BiomeUDFContext.deinit()
{
  uint64_t v0 = sub_259F68030();

  return v0;
}

uint64_t BiomeUDFContext.__deallocating_deinit()
{
  uint64_t v0 = sub_259F68030();

  return MEMORY[0x270FA0228](v0, 24, 7);
}

id sub_259F56A1C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  id v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

void sub_259F56AA0(id *a1)
{
}

uint64_t type metadata accessor for BiomeUDFContext()
{
  uint64_t result = qword_26A3FAA38;
  if (!qword_26A3FAA38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_259F56B18()
{
  return swift_initClassMetadata2();
}

uint64_t sub_259F56B64()
{
  return type metadata accessor for BiomeUDFContext();
}

uint64_t sub_259F56B6C@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, unsigned char *a5@<X8>)
{
  uint64_t v45 = a4;
  uint64_t v40 = a5;
  uint64_t v9 = sub_259F68530();
  uint64_t v43 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v41 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  HIDWORD(v39) = *a1;
  uint64_t v12 = *a2;
  uint64_t v11 = a2[1];
  uint64_t v13 = a2[2];
  uint64_t v14 = *(void *)(a3 + 16);
  uint64_t v44 = *a2;
  if (v14)
  {
    swift_bridgeObjectRetain();
    unint64_t v15 = sub_259F17068(v12, v11);
    if (v16)
    {
      uint64_t v17 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v15);
      uint64_t v12 = *v17;
      uint64_t v18 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v17[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v11;
LABEL_6:
  swift_bridgeObjectRetain();
  long long v42 = (uint64_t (*)(unsigned char *, uint64_t))sub_259F684B0();
  uint64_t v20 = v19;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v48 = (void *)*v20;
  uint64_t v22 = v48;
  *uint64_t v20 = 0x8000000000000000;
  unint64_t v24 = sub_259F17068(v12, (uint64_t)v18);
  uint64_t v25 = v22[2];
  BOOL v26 = (v23 & 1) == 0;
  uint64_t v27 = v25 + v26;
  if (__OFADD__(v25, v26))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v5 = v23;
  if (v22[3] >= v27)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_11;
    }
LABEL_18:
    sub_259F25AC8();
    goto LABEL_11;
  }
  sub_259F197A8(v27, isUniquelyReferenced_nonNull_native);
  unint64_t v28 = sub_259F17068(v12, (uint64_t)v18);
  if ((v5 & 1) != (v29 & 1))
  {
    uint64_t result = sub_259F68D30();
    __break(1u);
    return result;
  }
  unint64_t v24 = v28;
LABEL_11:
  uint64_t v30 = v46;
  *uint64_t v20 = v48;
  swift_bridgeObjectRelease();
  uint64_t v31 = (void *)*v20;
  swift_bridgeObjectRetain();
  if ((v5 & 1) == 0)
  {
    uint64_t v32 = (uint64_t)v41;
    sub_259F68500();
    sub_259F24BC0(v24, v12, (uint64_t)v18, v32, v31);
    swift_bridgeObjectRetain();
  }
  uint64_t v33 = v31[7];
  swift_bridgeObjectRelease();
  uint64_t v34 = v33 + *(void *)(v43 + 72) * v24;
  int64_t v35 = *(void *)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v36 = sub_259F581C8(0, 0, v35, v44, v11, v13, v12, v18, v34);
  if (v30)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return v42(v47, 1);
  }
  else
  {
    char v38 = v36;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t result = v42(v47, 0);
    unsigned char *v40 = (v38 | BYTE4(v39)) & 1;
  }
  return result;
}

uint64_t sub_259F56EC0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = v4;
  uint64_t v7 = v3;
  int v43 = a3;
  uint64_t v10 = sub_259F68530();
  uint64_t v41 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))a1;
  unint64_t v13 = *(void *)(a1 + 8);
  v40[1] = *(void *)(a1 + 16);
  uint64_t v46 = MEMORY[0x263F8EE88];
  if (*(void *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v15 = sub_259F17068((uint64_t)v14, v13);
    if (v16)
    {
      uint64_t v17 = *(void *)(a2 + 56) + 16 * v15;
      uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v17;
      unint64_t v18 = *(void *)(v17 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      unint64_t v13 = v18;
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
LABEL_6:
  swift_bridgeObjectRetain();
  v40[0] = v7;
  long long v42 = (void (*)(unsigned char *, uint64_t))sub_259F684B0();
  uint64_t v20 = v19;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v44 = (void *)*v20;
  uint64_t v22 = v44;
  *uint64_t v20 = 0x8000000000000000;
  unint64_t v24 = sub_259F17068((uint64_t)v14, v13);
  uint64_t v25 = v22[2];
  BOOL v26 = (v23 & 1) == 0;
  uint64_t v27 = v25 + v26;
  if (__OFADD__(v25, v26))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v5 = v23;
  if (v22[3] >= v27)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_11;
    }
LABEL_18:
    sub_259F25AC8();
    goto LABEL_11;
  }
  sub_259F197A8(v27, isUniquelyReferenced_nonNull_native);
  unint64_t v28 = sub_259F17068((uint64_t)v14, v13);
  if ((v5 & 1) != (v29 & 1))
  {
    uint64_t result = sub_259F68D30();
    __break(1u);
    return result;
  }
  unint64_t v24 = v28;
LABEL_11:
  *uint64_t v20 = v44;
  swift_bridgeObjectRelease();
  uint64_t v30 = (void *)*v20;
  swift_bridgeObjectRetain();
  if ((v5 & 1) == 0)
  {
    sub_259F68500();
    sub_259F24BC0(v24, (uint64_t)v14, v13, (uint64_t)v12, v30);
    swift_bridgeObjectRetain();
  }
  uint64_t v31 = v30[7];
  swift_bridgeObjectRelease();
  uint64_t v32 = v31 + *(void *)(v41 + 72) * v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA6A8);
  uint64_t v33 = sub_259F685A0();
  int64_t v34 = *(void *)(v33 + 16);
  swift_bridgeObjectRetain();
  char v35 = sub_259F5829C(0, 0, v34, v33, v43 & 1, v14, v13, v32, (uint64_t)&v46);
  if (v6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v42(v45, 1);
  }
  else
  {
    char v37 = v35;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v42(v45, 0);
    char v38 = sub_259F61974(0, v46, v40[0]);
    swift_bridgeObjectRelease();
    char v36 = v38 | v37;
  }
  return v36 & 1;
}

uint64_t sub_259F5725C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FAA48);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_259F68530();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  v26[0] = a1[2];
  if (!*(void *)(a2 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_259F17068(v11, v12);
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRetain();
    uint64_t v16 = v11;
    uint64_t v17 = v12;
    goto LABEL_6;
  }
  unint64_t v15 = (uint64_t *)(*(void *)(a2 + 56) + 16 * v13);
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_6:
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_259F684C0();
  if (*(void *)(v18 + 16) && (unint64_t v19 = sub_259F17068(v16, v17), (v20 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, *(void *)(v18 + 56) + *(void *)(v8 + 72) * v19, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    swift_bridgeObjectRelease();
    sub_259F17838((uint64_t)v6, &qword_26A3FAA48);
    LOBYTE(v16) = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    uint64_t v21 = sub_259F68520();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = v26[0];
    swift_bridgeObjectRetain();
    uint64_t v23 = v26[1];
    char v24 = sub_259F5846C(0, v21, v11, v12, v22, v16, v17, v26[3]);
    if (!v23) {
      LOBYTE(v16) = v24;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v16 & 1;
}

uint64_t sub_259F575BC@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, unsigned char *a7@<X8>)
{
  uint64_t v77 = a6;
  uint64_t v76 = a5;
  uint64_t v75 = a4;
  uint64_t v97 = a3;
  uint64_t v86 = a7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA4C8);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v72 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v84 = (uint64_t)&v70 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v73 = (char *)&v70 - v14;
  uint64_t v79 = sub_259F683E0();
  uint64_t v78 = *(void *)(v79 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v79);
  uint64_t v71 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v74 = (char *)&v70 - v17;
  uint64_t v81 = (void *)sub_259F68400();
  uint64_t v80 = *(v81 - 1);
  MEMORY[0x270FA5388](v81);
  unint64_t v83 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_259F68440();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v90 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FAA50);
  uint64_t v23 = v22 - 8;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v85) = *a1;
  uint64_t v26 = *(int *)(v23 + 56);
  uint64_t v27 = &v25[v26];
  uint64_t v89 = (char *)a2 + v26;
  uint64_t v28 = a2[1];
  uint64_t v82 = *a2;
  *(void *)uint64_t v25 = v82;
  *((void *)v25 + 1) = v28;
  char v29 = *(void (**)(char *))(v20 + 16);
  v29(&v25[v26]);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v20 + 8);
  swift_bridgeObjectRetain();
  uint64_t v87 = v30;
  uint64_t v88 = v20 + 8;
  v30(v27, v19);
  uint64_t v31 = &v25[*(int *)(v23 + 56)];
  uint64_t v32 = v90;
  ((void (*)(char *, char *, uint64_t))v29)(v31, v89, v19);
  uint64_t v33 = v97;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v32, v31, v19);
  if (!*(void *)(v33 + 16))
  {
    uint64_t v95 = 0;
    long long v93 = 0u;
    long long v94 = 0u;
LABEL_13:
    v87(v32, v19);
    swift_bridgeObjectRelease();
    uint64_t result = sub_259F17838((uint64_t)&v93, &qword_26A3FA270);
LABEL_27:
    *uint64_t v86 = v85;
    return result;
  }
  swift_bridgeObjectRetain();
  unint64_t v34 = sub_259F17068(v82, v28);
  if (v35)
  {
    sub_259F13740(*(void *)(v33 + 56) + 40 * v34, (uint64_t)&v93);
  }
  else
  {
    uint64_t v95 = 0;
    long long v93 = 0u;
    long long v94 = 0u;
  }
  uint64_t v36 = v84;
  char v37 = v83;
  swift_bridgeObjectRelease();
  if (!*((void *)&v94 + 1)) {
    goto LABEL_13;
  }
  sub_259F13728(&v93, (uint64_t)v96);
  sub_259F68420();
  uint64_t v38 = v80;
  uint64_t v39 = v81;
  if ((*(unsigned int (**)(char *, void *))(v80 + 88))(v37, v81) != *MEMORY[0x263F5F1A0])
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
    v87(v32, v19);
    uint64_t result = (*(uint64_t (**)(char *, void *))(v38 + 8))(v37, v39);
    goto LABEL_27;
  }
  (*(void (**)(char *, void *))(v38 + 8))(v37, v39);
  uint64_t v40 = sub_259F68430();
  if (!v41)
  {
    swift_bridgeObjectRelease();
LABEL_26:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v87)(v32, v19);
    goto LABEL_27;
  }
  uint64_t v42 = v40;
  uint64_t v43 = v41;
  sub_259F13740((uint64_t)v96, (uint64_t)&v93);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA6A8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    *(void *)&long long v93 = 0;
    *((void *)&v93 + 1) = 0xE000000000000000;
    sub_259F68960();
    sub_259F686F0();
    __swift_project_boxed_opaque_existential_1(v96, v96[3]);
    swift_getDynamicType();
    sub_259F68E50();
    sub_259F686F0();
    swift_bridgeObjectRelease();
    sub_259F686F0();
    sub_259F686F0();
    swift_bridgeObjectRelease();
    sub_259F686F0();
    sub_259F686F0();
    sub_259F686F0();
    long long v54 = v93;
    sub_259F13868();
    swift_allocError();
    *(_OWORD *)uint64_t v55 = v54;
    *(unsigned char *)(v55 + 16) = 5;
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
    return ((uint64_t (*)(char *, uint64_t))v87)(v32, v19);
  }
  swift_bridgeObjectRelease();
  uint64_t v44 = v92;
  uint64_t v97 = v91;
  swift_bridgeObjectRetain();
  uint64_t v45 = sub_259F684A0();
  uint64_t v46 = *(void *)(v45 + 16);
  uint64_t v84 = v42;
  uint64_t v89 = v44;
  if (v46)
  {
    unint64_t v47 = sub_259F17068(v42, v43);
    uint64_t v48 = v79;
    uint64_t v49 = v78;
    uint64_t v50 = (uint64_t)v73;
    if (v51)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v78 + 16))(v73, *(void *)(v45 + 56) + *(void *)(v78 + 72) * v47, v79);
      uint64_t v52 = *(char **)(v49 + 56);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v52)(v50, 0, 1, v48);
    }
    else
    {
      uint64_t v52 = *(char **)(v78 + 56);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v52)(v73, 1, 1, v79);
    }
  }
  else
  {
    uint64_t v49 = v78;
    uint64_t v52 = *(char **)(v78 + 56);
    uint64_t v50 = (uint64_t)v73;
    uint64_t v48 = v79;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v52)(v73, 1, 1, v79);
  }
  sub_259F46AFC(v50, v36, &qword_26A3FA4C8);
  int v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v36, 1, v48);
  unint64_t v83 = v52;
  if (v56 == 1)
  {
    uint64_t v57 = (void *)MEMORY[0x263F8EE78];
    sub_259F21FBC(MEMORY[0x263F8EE78]);
    sub_259F58368(v57);
    uint64_t v58 = v74;
    sub_259F683B0();
    sub_259F17838(v36, &qword_26A3FA4C8);
  }
  else
  {
    uint64_t v58 = v74;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v74, v36, v48);
  }
  uint64_t v59 = (uint64_t)v89;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if (*(void *)(sub_259F683D0() + 16))
  {
    sub_259F17068(v97, v59);
    if (v60)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v58, v79);
      goto LABEL_26;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v61 = v78;
  uint64_t v85 = v43;
  uint64_t v80 = *(void *)(v78 + 16);
  uint64_t v62 = v71;
  uint64_t v63 = v79;
  ((void (*)(char *, char *, uint64_t))v80)(v71, v58, v79);
  uint64_t v64 = sub_259F683A0();
  uint64_t v81 = *(void **)(v61 + 8);
  ((void (*)(char *, uint64_t))v81)(v62, v63);
  uint64_t v78 = sub_259F683C0();
  uint64_t v82 = v19;
  uint64_t v66 = v65;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v91 = *v66;
  uint64_t *v66 = 0x8000000000000000;
  sub_259F247C0(v64, v97, v59, isUniquelyReferenced_nonNull_native);
  uint64_t *v66 = v91;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  ((void (*)(long long *, void))v78)(&v93, 0);
  uint64_t v68 = (uint64_t)v72;
  ((void (*)(char *, char *, uint64_t))v80)(v72, v58, v63);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v83)(v68, 0, 1, v63);
  uint64_t v69 = (void (*)(long long *, void))sub_259F68490();
  sub_259F297C8(v68, v84, v85);
  v69(&v93, 0);
  ((void (*)(char *, uint64_t))v81)(v58, v63);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v87)(v32, v82);
  *uint64_t v86 = 1;
  return result;
}

unint64_t sub_259F580B8(uint64_t a1)
{
  uint64_t v2 = sub_259F68D90();
  return sub_259F580FC(a1, v2);
}

unint64_t sub_259F580FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      unint64_t result = (result + 1) & v8;
      if (((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0
        && *(void *)(v7 + 8 * result) != a1)
      {
        for (unint64_t result = (result + 1) & v8;
              ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
              unint64_t result = (result + 1) & v8)
        {
          if (*(void *)(v7 + 8 * result) == a1) {
            break;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_259F581C8(uint64_t result, int64_t a2, int64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(char *, uint64_t, uint64_t, uint64_t), uint64_t a9)
{
  unsigned __int8 v17 = result;
  if (a2 == a3) {
    return result & 1;
  }
  int64_t v11 = a2;
  if (a3 >= a2)
  {
    while (v11 < a3)
    {
      int64_t v15 = v11;
      LOBYTE(result) = sub_259F11F50(&v17, (unint64_t *)&v15, a6, a7, a8, a9, (char *)&v16);
      if (!v9)
      {
        ++v11;
        unint64_t result = v16;
        unsigned __int8 v17 = v16;
        if (a3 != v11) {
          continue;
        }
      }
      return result & 1;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_259F5829C(uint64_t result, int64_t a2, int64_t a3, uint64_t a4, char a5, void (*a6)(char *, uint64_t, uint64_t, uint64_t), unint64_t a7, uint64_t a8, uint64_t a9)
{
  unsigned __int8 v19 = result;
  if (a2 == a3) {
    return result & 1;
  }
  int64_t v11 = a2;
  if (a3 >= a2)
  {
    char v16 = a5 & 1;
    while (v11 < a3)
    {
      unint64_t v18 = v11;
      LOBYTE(result) = sub_259F12B30(&v19, &v18, a4, v16, a6, a7, a8, a9, &v17);
      if (!v9)
      {
        ++v11;
        unint64_t result = v17;
        unsigned __int8 v19 = v17;
        if (a3 != v11) {
          continue;
        }
      }
      return result & 1;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_259F58368(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FAA58);
  uint64_t v3 = (void *)sub_259F68AB0();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t v6 = a1[6];
  unint64_t result = sub_259F580B8(v5);
  if (v8)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x263F8EE80];
  }
  uint64_t v9 = a1 + 9;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v5;
    uint64_t v10 = (uint64_t *)(v3[7] + 16 * result);
    *uint64_t v10 = v4;
    v10[1] = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    sub_259F21710(v4, v6);
    if (!--v1) {
      return (unint64_t)v3;
    }
    uint64_t v5 = *(v9 - 2);
    uint64_t v4 = *(v9 - 1);
    unint64_t v6 = *v9;
    unint64_t result = sub_259F580B8(v5);
    v9 += 3;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_259F5846C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v39 = a7;
  uint64_t v40 = a8;
  uint64_t v37 = a5;
  uint64_t v38 = a6;
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FAA50);
  uint64_t v11 = MEMORY[0x270FA5388](v34);
  uint64_t v13 = (uint64_t *)((char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  int64_t v15 = (char *)&v32 - v14;
  unsigned __int8 v44 = a1;
  uint64_t v16 = *(void *)(a2 + 64);
  uint64_t v32 = a2 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v33 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v41 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v21 = 0;
  int v42 = a1;
  if (!v19) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (unint64_t i = v22 | (v21 << 6); ; unint64_t i = __clz(__rbit64(v25)) + (v21 << 6))
  {
    uint64_t v27 = *(void *)(v41 + 56);
    uint64_t v28 = (uint64_t *)(*(void *)(v41 + 48) + 16 * i);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = sub_259F68440();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(&v15[*(int *)(v34 + 48)], v27 + *(void *)(*(void *)(v31 - 8) + 72) * i, v31);
    *(void *)int64_t v15 = v29;
    *((void *)v15 + 1) = v30;
    sub_259F46AFC((uint64_t)v15, (uint64_t)v13, &qword_26A3FAA50);
    swift_bridgeObjectRetain();
    sub_259F575BC(&v44, v13, v37, v38, v39, v40, &v43);
    uint64_t result = sub_259F17838((uint64_t)v13, &qword_26A3FAA50);
    if (v8)
    {
      swift_release();
      LOBYTE(a1) = v42;
      return a1 & 1;
    }
    LOBYTE(a1) = v43;
    unsigned __int8 v44 = v43;
    int v42 = v43;
    if (v19) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v21++, 1)) {
      break;
    }
    if (v21 >= v33) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v32 + 8 * v21);
    if (!v25)
    {
      int64_t v26 = v21 + 1;
      if (v21 + 1 >= v33) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v32 + 8 * v26);
      if (v25) {
        goto LABEL_16;
      }
      int64_t v26 = v21 + 2;
      if (v21 + 2 >= v33) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v32 + 8 * v26);
      if (v25) {
        goto LABEL_16;
      }
      int64_t v26 = v21 + 3;
      if (v21 + 3 >= v33) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v32 + 8 * v26);
      if (v25)
      {
LABEL_16:
        int64_t v21 = v26;
        goto LABEL_17;
      }
      int64_t v26 = v21 + 4;
      if (v21 + 4 < v33)
      {
        unint64_t v25 = *(void *)(v32 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v21 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_29;
            }
            if (v21 >= v33) {
              goto LABEL_26;
            }
            unint64_t v25 = *(void *)(v32 + 8 * v21);
            ++v26;
            if (v25) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_26:
      swift_release();
      return a1 & 1;
    }
LABEL_17:
    unint64_t v19 = (v25 - 1) & v25;
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_259F58760(void *a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 184) = 0;
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void *)(a3 + 32);
  char v10 = *(unsigned char *)(a3 + 40);
  uint64_t v12 = *(void *)(a3 + 48);
  uint64_t v11 = *(void *)(a3 + 56);
  *(void *)(v3 + 56) = *(void *)(a3 + 16);
  *(void *)(v3 + 64) = v8;
  *(void *)(v3 + 72) = v9;
  *(unsigned char *)(v3 + 80) = v10;
  *(void *)(v3 + 88) = v12;
  *(void *)(v3 + 96) = v11;
  *(unsigned char *)(v3 + 144) = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_259F1FF18(a3, a1, a2, v21);
  if (v4)
  {
    sub_259F20254(a3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_259F20200(v3 + 56);
    swift_release();
    type metadata accessor for TemplateBlockLegacy();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v20 = (uint64_t)&v20;
    uint64_t v14 = *(void *)(a3 + 64);
    *(void *)(v3 + 152) = v14;
    MEMORY[0x270FA5388](v13);
    void v19[2] = v21;
    void v19[3] = a1;
    swift_bridgeObjectRetain_n();
    uint64_t v16 = sub_259F35038((void (*)(long long *__return_ptr, uint64_t *, uint64_t *))sub_259F58A18, (uint64_t)v19, v14);
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void *)(a3 + 80);
    *(void *)(v3 + 160) = *(void *)(a3 + 72);
    *(void *)(v3 + 168) = v17;
    *(void *)(v3 + 176) = v16;
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v18 = *(void *)(*__swift_project_boxed_opaque_existential_1(a1, a1[3]) + 120);
    *(unsigned char *)(v3 + 16) = 0;
    *(void *)(v3 + 24) = v18;
    long long v22 = *(_OWORD *)a3;
    *(_OWORD *)(v3 + 32) = v22;
    *(void *)(v3 + 48) = a2;
    swift_retain();
    sub_259F202E4((uint64_t)&v22);
    sub_259F20254(a3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_259F58980@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t result = sub_259F32E54(a3, v9, a5);
  if (v5) {
    *a4 = v5;
  }
  return result;
}

uint64_t type metadata accessor for TemplateBlockLegacy()
{
  return self;
}

uint64_t sub_259F58A18@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_259F58980(a1, *(void **)(v3 + 16), *(void *)(v3 + 24), a2, a3);
}

uint64_t sub_259F58A38()
{
  uint64_t v2 = sub_259F68360();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(unsigned char *)(v0 + 48))
  {
    unint64_t v8 = 0;
    unint64_t v9 = 0xE000000000000000;
    sub_259F68960();
    sub_259F686F0();
    v7[15] = *(unsigned char *)(v0 + 48);
    sub_259F68A10();
    uint64_t result = sub_259F68A80();
    __break(1u);
  }
  else
  {
    unint64_t v8 = 0;
    unint64_t v9 = 0xE000000000000000;
    sub_259F68960();
    swift_bridgeObjectRelease();
    unint64_t v8 = 0xD000000000000011;
    unint64_t v9 = 0x8000000259F6A8C0;
    swift_bridgeObjectRetain();
    sub_259F686F0();
    swift_bridgeObjectRelease();
    sub_259F686F0();
    swift_bridgeObjectRetain();
    sub_259F686F0();
    swift_bridgeObjectRelease();
    sub_259F68300();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v1)
    {
      sub_259F68340();
      uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
      *(unsigned char *)(v0 + 48) = 2;
    }
  }
  return result;
}

uint64_t sub_259F58CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_259F68360();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  char v10 = (char *)&v13 - v9;
  if (*(unsigned __int8 *)(v2 + 48) - 1 > 1 || (uint64_t result = sub_259F58F0C(), !v3))
  {
    unint64_t v13 = 0;
    unint64_t v14 = 0xE000000000000000;
    sub_259F68960();
    swift_bridgeObjectRelease();
    unint64_t v13 = 0xD000000000000012;
    unint64_t v14 = 0x8000000259F6A830;
    swift_bridgeObjectRetain();
    sub_259F686F0();
    swift_bridgeObjectRelease();
    sub_259F686F0();
    swift_bridgeObjectRetain();
    sub_259F686F0();
    swift_bridgeObjectRelease();
    sub_259F68300();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v3)
    {
      sub_259F68350();
      uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
      v12(v8, v4);
      sub_259F68340();
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v12)(v10, v4);
      *(unsigned char *)(v2 + 48) = 1;
    }
  }
  return result;
}

uint64_t sub_259F58F0C()
{
  uint64_t v2 = sub_259F68360();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v10 - v8;
  if (*(unsigned char *)(v0 + 48))
  {
    if (*(unsigned char *)(v0 + 48) == 1)
    {
      unint64_t v10 = 0;
      unint64_t v11 = 0xE000000000000000;
      sub_259F68960();
      swift_bridgeObjectRelease();
      unint64_t v10 = 0xD00000000000001ALL;
      unint64_t v11 = 0x8000000259F6A810;
      swift_bridgeObjectRetain();
      sub_259F686F0();
      swift_bridgeObjectRelease();
      sub_259F68300();
      uint64_t result = swift_bridgeObjectRelease();
      if (v1) {
        return result;
      }
      sub_259F68340();
    }
    else
    {
      unint64_t v10 = 0;
      unint64_t v11 = 0xE000000000000000;
      sub_259F68960();
      swift_bridgeObjectRelease();
      unint64_t v10 = 0xD000000000000019;
      unint64_t v11 = 0x8000000259F6A7F0;
      swift_bridgeObjectRetain();
      sub_259F686F0();
      swift_bridgeObjectRelease();
      sub_259F68300();
      uint64_t result = swift_bridgeObjectRelease();
      if (v1) {
        return result;
      }
      sub_259F68340();
      uint64_t v9 = v6;
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
    *(unsigned char *)(v0 + 48) = 0;
  }
  return result;
}

uint64_t sub_259F59170()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 49, 7);
}

uint64_t type metadata accessor for Query()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for Query.UsageState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259F592A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Query.UsageState()
{
  return &type metadata for Query.UsageState;
}

unint64_t sub_259F592DC()
{
  unint64_t result = qword_26A3FAA60;
  if (!qword_26A3FAA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAA60);
  }
  return result;
}

uint64_t dispatch thunk of ProvidesQueryString.getQueryString()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of UserBlockImplConfiguring.isEqual(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of UserBlockFactory.decodeConfiguration(forBlockName:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of UserBlockFactory.makeBlock(withName:config:recipeMetadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t sub_259F593BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v6 = sub_259F68240();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DatasetColumnType(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_259F68400();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DatasetColumnDescription(0);
  sub_259F59DE4(a1 + *(int *)(v17 + 24), (uint64_t)v12);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v18 != *MEMORY[0x263F5EFD0])
  {
    if (v18 != *MEMORY[0x263F5EFC0])
    {
      if (v18 == *MEMORY[0x263F5EFE0])
      {
        long long v22 = (unsigned int *)MEMORY[0x263F5F1B8];
        goto LABEL_18;
      }
      if (v18 == *MEMORY[0x263F5EFE8])
      {
        long long v22 = (unsigned int *)MEMORY[0x263F5F1C0];
        goto LABEL_18;
      }
      if (v18 == *MEMORY[0x263F5EFF8])
      {
        long long v22 = (unsigned int *)MEMORY[0x263F5F1D8];
        goto LABEL_18;
      }
      if (v18 == *MEMORY[0x263F5F000])
      {
        long long v22 = (unsigned int *)MEMORY[0x263F5F1E0];
        goto LABEL_18;
      }
      if (v18 == *MEMORY[0x263F5EFD8])
      {
        long long v22 = (unsigned int *)MEMORY[0x263F5F1B0];
        goto LABEL_18;
      }
      long long v22 = (unsigned int *)MEMORY[0x263F5F1C8];
      if (v18 == *MEMORY[0x263F5EFF0] || v18 == *MEMORY[0x263F5F008]) {
        goto LABEL_18;
      }
      if (v18 == *MEMORY[0x263F5EFC8])
      {
        long long v22 = (unsigned int *)MEMORY[0x263F5F198];
        goto LABEL_18;
      }
      if (v18 != *MEMORY[0x263F5EFB8])
      {
        uint64_t result = sub_259F68A80();
        __break(1u);
        return result;
      }
    }
    long long v22 = (unsigned int *)MEMORY[0x263F5F1A8];
LABEL_18:
    sub_259F26B8C(a1);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *v22, v13);
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a4, v16, v13);
    uint64_t result = type metadata accessor for InferredProtobufType();
    unint64_t v25 = (void *)(a4 + *(int *)(result + 20));
    void *v25 = 0;
    v25[1] = 0;
    return result;
  }
  if (*(unsigned char *)(a1 + *(int *)(v17 + 28)) == 1)
  {
    (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(a4, *MEMORY[0x263F5F1A0], v13);
    uint64_t v28 = v26;
    uint64_t v29 = v27;
    swift_bridgeObjectRetain();
    sub_259F686F0();
    sub_259F686F0();
    swift_bridgeObjectRelease();
    uint64_t v19 = v28;
    uint64_t v20 = v29;
    int64_t v21 = (void *)(a4 + *(int *)(type metadata accessor for InferredProtobufType() + 20));
    *int64_t v21 = v19;
    v21[1] = v20;
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(a4, *MEMORY[0x263F5F1D0], v13);
    uint64_t v23 = (void *)(a4 + *(int *)(type metadata accessor for InferredProtobufType() + 20));
    *uint64_t v23 = 0;
    v23[1] = 0;
  }
  return sub_259F26B8C(a1);
}

uint64_t sub_259F5984C@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v31 = a4;
  uint64_t v32 = a6;
  uint64_t v29 = a3;
  uint64_t v30 = a5;
  uint64_t v33 = a7;
  uint64_t v9 = sub_259F68240();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_259F68400();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_getDynamicType();
  sub_259F68290();
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v17 != *MEMORY[0x263F5EFD0])
  {
    if (v17 != *MEMORY[0x263F5EFC0])
    {
      if (v17 == *MEMORY[0x263F5EFE0])
      {
        long long v22 = (unsigned int *)MEMORY[0x263F5F1B8];
        goto LABEL_18;
      }
      if (v17 == *MEMORY[0x263F5EFE8])
      {
        long long v22 = (unsigned int *)MEMORY[0x263F5F1C0];
        goto LABEL_18;
      }
      if (v17 == *MEMORY[0x263F5EFF8])
      {
        long long v22 = (unsigned int *)MEMORY[0x263F5F1D8];
        goto LABEL_18;
      }
      if (v17 == *MEMORY[0x263F5F000])
      {
        long long v22 = (unsigned int *)MEMORY[0x263F5F1E0];
        goto LABEL_18;
      }
      if (v17 == *MEMORY[0x263F5EFD8])
      {
        long long v22 = (unsigned int *)MEMORY[0x263F5F1B0];
        goto LABEL_18;
      }
      long long v22 = (unsigned int *)MEMORY[0x263F5F1C8];
      if (v17 == *MEMORY[0x263F5EFF0] || v17 == *MEMORY[0x263F5F008]) {
        goto LABEL_18;
      }
      if (v17 == *MEMORY[0x263F5EFC8])
      {
        long long v22 = (unsigned int *)MEMORY[0x263F5F198];
        goto LABEL_18;
      }
      if (v17 != *MEMORY[0x263F5EFB8])
      {
        uint64_t result = sub_259F68A80();
        __break(1u);
        return result;
      }
    }
    long long v22 = (unsigned int *)MEMORY[0x263F5F1A8];
LABEL_18:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *v22, v13);
    uint64_t v26 = v33;
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v33, v16, v13);
    uint64_t result = type metadata accessor for InferredProtobufType();
    uint64_t v27 = (void *)(v26 + *(int *)(result + 20));
    *uint64_t v27 = 0;
    v27[1] = 0;
    return result;
  }
  if (a2)
  {
    uint64_t v18 = v33;
    (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v33, *MEMORY[0x263F5F1A0], v13);
    uint64_t v34 = v29;
    uint64_t v35 = v31;
    sub_259F686F0();
    sub_259F686F0();
    swift_bridgeObjectRelease();
    uint64_t v19 = v34;
    uint64_t v20 = v35;
    int64_t v21 = (void *)(v18 + *(int *)(type metadata accessor for InferredProtobufType() + 20));
    *int64_t v21 = v19;
    v21[1] = v20;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = v33;
    (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v33, *MEMORY[0x263F5F1D0], v13);
    uint64_t v24 = (void *)(v23 + *(int *)(type metadata accessor for InferredProtobufType() + 20));
    *uint64_t v24 = 0;
    v24[1] = 0;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for InferredProtobufType()
{
  uint64_t result = qword_26A3FAA68;
  if (!qword_26A3FAA68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_259F59CEC()
{
  if (*(void *)(v0 + *(int *)(type metadata accessor for InferredProtobufType() + 20) + 8))
  {
    sub_259F686F0();
    sub_259F686F0();
  }
  sub_259F68400();
  sub_259F68A10();
  sub_259F686F0();
  return 0;
}

uint64_t sub_259F59DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DatasetColumnType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_259F59E48(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_259F68400();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_259F59F20(uint64_t a1)
{
  uint64_t v2 = sub_259F68400();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_259F59F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_259F68400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_259F5A020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_259F68400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_259F5A0BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_259F68400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_259F5A138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_259F68400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_259F5A1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_259F5A1D8);
}

uint64_t sub_259F5A1D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_259F68400();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_259F5A2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_259F5A2BC);
}

uint64_t sub_259F5A2BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_259F68400();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t sub_259F5A37C()
{
  uint64_t result = sub_259F68400();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_259F5A410(uint64_t a1, uint64_t a2)
{
  if (sub_259F683F0())
  {
    uint64_t v4 = *(int *)(type metadata accessor for InferredProtobufType() + 20);
    int v5 = (void *)(a1 + v4);
    uint64_t v6 = *(void *)(a1 + v4 + 8);
    uint64_t v7 = (void *)(a2 + v4);
    uint64_t v8 = v7[1];
    if (v6)
    {
      if (v8)
      {
        BOOL v9 = *v5 == *v7 && v6 == v8;
        if (v9 || (sub_259F68C70() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v8)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t BlocksController.deinit()
{
  sub_259F682F0();

  swift_unknownObjectRelease();
  swift_release();
  sub_259F5A4E4(v0 + 48);
  swift_release();
  return v0;
}

uint64_t sub_259F5A4E4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA498);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t BlocksController.__deallocating_deinit()
{
  sub_259F682F0();

  swift_unknownObjectRelease();
  swift_release();
  sub_259F5A4E4(v0 + 48);
  swift_release();
  return MEMORY[0x270FA0228](v0, 96, 7);
}

void *BlocksController.__allocating_init(_:userBlockFactory:activityMonitor:)(uint64_t a1, uint64_t a2, uint64_t a3, _UNKNOWN **a4)
{
  id v8 = objc_msgSend(self, sel_defaultManager);
  sub_259F2C034(a2, (uint64_t)v13);
  if (a3)
  {
    uint64_t v9 = a3;
  }
  else
  {
    type metadata accessor for DefaultActivityMonitor();
    uint64_t v9 = swift_allocObject();
    a4 = &off_2707E26B8;
  }
  type metadata accessor for BlocksController();
  unint64_t v10 = (void *)swift_allocObject();
  sub_259F68310();
  swift_allocObject();
  swift_unknownObjectRetain();
  uint64_t v11 = sub_259F682E0();
  if (v4)
  {

    swift_unknownObjectRelease();
    sub_259F5A4E4((uint64_t)v13);
    swift_deallocPartialClassInstance();
  }
  else
  {
    long long v10[2] = v8;
    v10[3] = v9;
    void v10[4] = a4;
    void v10[5] = v11;
    sub_259F2C158((uint64_t)v13, (uint64_t)(v10 + 6));
    v10[11] = 0;
  }
  swift_unknownObjectRelease();
  sub_259F5A4E4(a2);
  return v10;
}

{
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unsigned char v13[40];

  id v8 = objc_msgSend(self, sel_defaultManager);
  sub_259F2C034(a2, (uint64_t)v13);
  if (a3)
  {
    uint64_t v9 = a3;
  }
  else
  {
    type metadata accessor for DefaultActivityMonitor();
    uint64_t v9 = swift_allocObject();
    a4 = &off_2707E26B8;
  }
  type metadata accessor for BlocksController();
  unint64_t v10 = (void *)swift_allocObject();
  swift_unknownObjectRetain();
  uint64_t v11 = sub_259F67FF0();
  long long v10[2] = v8;
  v10[3] = v9;
  void v10[4] = a4;
  void v10[5] = v11;
  sub_259F2C158((uint64_t)v13, (uint64_t)(v10 + 6));
  swift_unknownObjectRelease();
  v10[11] = a1;
  sub_259F5A4E4(a2);
  return v10;
}

uint64_t type metadata accessor for BlocksController()
{
  return self;
}

uint64_t sub_259F5A830()
{
  if (*(void *)(v0 + 88))
  {
    swift_retain();
    sub_259F67FD0();
    if (v1)
    {
      return swift_release();
    }
    else
    {
      swift_getObjectType();
      sub_259F68540();
      swift_release();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t result = sub_259F68A80();
    __break(1u);
  }
  return result;
}

uint64_t sub_259F5A90C(uint64_t a1)
{
  BlockLoggingType.makeLogHandler()(v3);
  sub_259F5A974(a1, (uint64_t)v3);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

void *sub_259F5A974(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_259F67F30();
  MEMORY[0x270FA5388](v6);
  id v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(unsigned char *, uint64_t))(v9 + 16))(v8, a1);
  sub_259F2C034(v2 + 48, (uint64_t)v22);
  sub_259F13740(a2, (uint64_t)v21);
  uint64_t v10 = swift_retain();
  uint64_t result = (void *)sub_259F2BA1C(v10, (uint64_t)v8, (uint64_t)v22, (uint64_t)v21);
  if (!v3)
  {
    uint64_t v12 = result;
    uint64_t v13 = result[16];
    uint64_t v14 = result[17];
    uint64_t v15 = result[18];
    uint64_t v16 = result[9];
    uint64_t ObjectType = swift_getObjectType();
    v22[0] = 0;
    MEMORY[0x270FA5388](ObjectType);
    v21[-4] = v12;
    v21[-3] = v13;
    uint64_t v19 = v14;
    uint64_t v20 = v15;
    uint64_t v18 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, void *(*)()))(v16 + 16);
    uint64_t v19 = v16;
    v18(v22, v13, v14, v15, sub_259F5AB3C);
    return (void *)swift_release();
  }
  return result;
}

void *sub_259F5AB3C()
{
  return sub_259F2AFC4(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t method lookup function for BlocksController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for BlocksController);
}

uint64_t dispatch thunk of BlocksController.getSchemaStore()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of BlocksController.executeRecipe(at:loggingType:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of BlocksController.executeRecipe(at:logHandler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t BlockLogEntry.init(name:type:data:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v6 = *a3;
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(unsigned char *)(a6 + 16) = v6;
  *(void *)(a6 + 24) = a4;
  *(void *)(a6 + 32) = a5;
  return result;
}

void BlockLogEntry.init(useCase:error:)(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_259F68690();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  _OWORD v17[2] = 0;
  v17[3] = 0xE000000000000000;
  v17[1] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA248);
  sub_259F68A10();
  sub_259F68680();
  uint64_t v12 = sub_259F68660();
  unint64_t v14 = v13;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v14 >> 60 == 15) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = v12;
  }
  if (v14 >> 60 == 15) {
    unint64_t v16 = 0xC000000000000000;
  }
  else {
    unint64_t v16 = v14;
  }

  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = 3;
  *(void *)(a4 + 24) = v15;
  *(void *)(a4 + 32) = v16;
}

PoirotBlocks::BlockLogEntry::EntryType_optional __swiftcall BlockLogEntry.EntryType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_259F68AE0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t BlockLogEntry.EntryType.rawValue.getter()
{
  uint64_t result = 1852797802;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7762787;
      break;
    case 2:
      uint64_t result = 0x7972616E6962;
      break;
    case 3:
      uint64_t result = 0x726F727265;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_259F5AE7C(unsigned __int8 *a1, char *a2)
{
  return sub_259F4C384(*a1, *a2);
}

uint64_t sub_259F5AE88()
{
  return sub_259F68DC0();
}

uint64_t sub_259F5AF4C()
{
  sub_259F686E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_259F5AFF8()
{
  return sub_259F68DC0();
}

PoirotBlocks::BlockLogEntry::EntryType_optional sub_259F5B0B8(Swift::String *a1)
{
  return BlockLogEntry.EntryType.init(rawValue:)(*a1);
}

void sub_259F5B0C4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1852797802;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE300000000000000;
      uint64_t v3 = 7762787;
      goto LABEL_3;
    case 2:
      *a1 = 0x7972616E6962;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x726F727265;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_259F5B148()
{
  return sub_259F68750();
}

uint64_t BlockLogEntry.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void BlockLogEntry.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t BlockLogEntry.data.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_259F40268(v1, *(void *)(v0 + 32));
  return v1;
}

uint64_t sub_259F5B208()
{
  return *(void *)&aName_15[8 * *v0];
}

uint64_t sub_259F5B220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_259F5BB60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_259F5B248(uint64_t a1)
{
  unint64_t v2 = sub_259F5B49C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_259F5B284(uint64_t a1)
{
  unint64_t v2 = sub_259F5B49C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BlockLogEntry.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FAA78);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v20 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v16 = *(void *)(v1 + 32);
  uint64_t v17 = v8;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1;
  uint64_t v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_259F5B49C();
  sub_259F68E20();
  LOBYTE(v18) = 0;
  sub_259F68BB0();
  if (!v2)
  {
    uint64_t v14 = v16;
    uint64_t v13 = v17;
    LOBYTE(v18) = v20;
    char v21 = 1;
    sub_259F5B4F0();
    sub_259F68BF0();
    uint64_t v18 = v13;
    uint64_t v19 = v14;
    char v21 = 2;
    sub_259F36B1C();
    sub_259F68BA0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

unint64_t sub_259F5B49C()
{
  unint64_t result = qword_26A3FAA80;
  if (!qword_26A3FAA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAA80);
  }
  return result;
}

unint64_t sub_259F5B4F0()
{
  unint64_t result = qword_26A3FAA88;
  if (!qword_26A3FAA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAA88);
  }
  return result;
}

unint64_t sub_259F5B548()
{
  unint64_t result = qword_26A3FAA90;
  if (!qword_26A3FAA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAA90);
  }
  return result;
}

uint64_t sub_259F5B59C(void *a1)
{
  return BlockLogEntry.encode(to:)(a1);
}

uint64_t destroy for BlockLogEntry(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 24);
    return sub_259F21768(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for BlockLogEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = (_OWORD *)(a2 + 24);
  unint64_t v5 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *v4;
  }
  else
  {
    uint64_t v6 = *(void *)v4;
    sub_259F21710(v6, v5);
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v5;
  }
  return a1;
}

uint64_t assignWithCopy for BlockLogEntry(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = (uint64_t *)(a2 + 24);
  unint64_t v5 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_259F21710(*v4, v5);
      uint64_t v8 = *(void *)(a1 + 24);
      unint64_t v9 = *(void *)(a1 + 32);
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = v5;
      sub_259F21768(v8, v9);
      return a1;
    }
    sub_259F5B758(a1 + 24);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v4;
    return a1;
  }
  uint64_t v6 = *v4;
  sub_259F21710(*v4, v5);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v5;
  return a1;
}

uint64_t sub_259F5B758(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for BlockLogEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  unint64_t v5 = (void *)(a2 + 24);
  unint64_t v6 = *(void *)(a1 + 32);
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = *(void *)(a2 + 32);
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *(void *)(a1 + 24);
      *(void *)(a1 + 24) = *v5;
      *(void *)(a1 + 32) = v7;
      sub_259F21768(v8, v6);
      return a1;
    }
    sub_259F5B758(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v5;
  return a1;
}

ValueMetadata *type metadata accessor for BlockLogEntry()
{
  return &type metadata for BlockLogEntry;
}

unsigned char *storeEnumTagSinglePayload for BlockLogEntry.EntryType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259F5B91CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BlockLogEntry.EntryType()
{
  return &type metadata for BlockLogEntry.EntryType;
}

unsigned char *storeEnumTagSinglePayload for BlockLogEntry.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259F5BA20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BlockLogEntry.CodingKeys()
{
  return &type metadata for BlockLogEntry.CodingKeys;
}

unint64_t sub_259F5BA5C()
{
  unint64_t result = qword_26A3FAA98;
  if (!qword_26A3FAA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAA98);
  }
  return result;
}

unint64_t sub_259F5BAB4()
{
  unint64_t result = qword_26A3FAAA0;
  if (!qword_26A3FAAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAAA0);
  }
  return result;
}

unint64_t sub_259F5BB0C()
{
  unint64_t result = qword_26A3FAAA8;
  if (!qword_26A3FAAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAAA8);
  }
  return result;
}

uint64_t sub_259F5BB60(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_259F68C70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_259F5BC88()
{
  unint64_t result = qword_26A3FAAB0;
  if (!qword_26A3FAAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAAB0);
  }
  return result;
}

uint64_t UserDefinedBlockConfig.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  void (*v22)(void *__return_ptr, uint64_t, uint64_t, long long *, ValueMetadata *, unint64_t);
  ValueMetadata *v23;
  uint64_t v24;
  void v25[5];
  long long v26;
  uint64_t v27;
  uint64_t v28;
  ValueMetadata *v29;
  unint64_t v30;
  void v31[2];
  long long v32;
  unsigned char v33[32];
  uint64_t v34;
  unsigned char *v35;

  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FAAB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = v33;
  uint64_t v34 = 0;
  memset(v33, 0, sizeof(v33));
  uint64_t v32 = 0u;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F5C2A0();
  sub_259F68DF0();
  if (v2)
  {
    uint64_t v9 = (uint64_t)v35;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_259F17838(v9, &qword_26A3FAAC8);
  }
  else
  {
    LOBYTE(v28) = 0;
    uint64_t v11 = sub_259F68B40();
    uint64_t v13 = v12;
    v31[0] = v11;
    v31[1] = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA130);
    LOBYTE(v26) = 1;
    sub_259F145E8(&qword_26A3FA160);
    sub_259F68B30();
    uint64_t v24 = v13;
    *(void *)&uint64_t v32 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA1A0);
    LOBYTE(v26) = 2;
    sub_259F152B8(&qword_26A3FA1A8, &qword_26A3FA1B0);
    sub_259F68B30();
    *((void *)&v32 + 1) = v28;
    uint64_t v14 = sub_259F68B70();
    BOOL v15 = sub_259F5C5D8(3, v14);
    swift_bridgeObjectRelease();
    if (v15)
    {
      uint64_t v16 = a1[3];
      uint64_t v17 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v16);
      sub_259F34D38(v16, v17, (uint64_t)&v26);
      if (v27)
      {
        sub_259F13728(&v26, (uint64_t)&v28);
        LOBYTE(v25[0]) = 3;
        sub_259F68AF0();
        unint64_t v18 = v30;
        uint64_t v23 = v29;
        unint64_t v21 = v30;
        __swift_project_boxed_opaque_existential_1(&v28, (uint64_t)v29);
        long long v22 = *(void (**)(void *__return_ptr, uint64_t, uint64_t, long long *, ValueMetadata *, unint64_t))(v18 + 8);
        uint64_t v19 = v24;
        swift_bridgeObjectRetain();
        v22(v25, v11, v19, &v26, v23, v21);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        sub_259F5C6E0((uint64_t)v25, (uint64_t)v35);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
      }
      else
      {
        sub_259F17838((uint64_t)&v26, &qword_26A3FA498);
        LOBYTE(v26) = 3;
        uint64_t v29 = &type metadata for AnyCodable;
        uint64_t v30 = sub_259F5C638();
        sub_259F369B4();
        sub_259F68B60();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        sub_259F5C6E0((uint64_t)&v28, (uint64_t)v35);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    sub_259F4A28C((uint64_t)v31, a2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_259F4A150((uint64_t)v31);
  }
}

unint64_t sub_259F5C2A0()
{
  unint64_t result = qword_26A3FAAC0;
  if (!qword_26A3FAAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAAC0);
  }
  return result;
}

uint64_t UserDefinedBlockConfig.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FAAD8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F5C2A0();
  sub_259F68E20();
  LOBYTE(v13[0]) = 0;
  sub_259F68BB0();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v13[0] = *(void *)(v3 + 16);
  LOBYTE(v11) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA130);
  sub_259F145E8(&qword_26A3FA138);
  sub_259F68BA0();
  uint64_t v10 = *(void *)(v3 + 24);
  if (v10 && *(void *)(v10 + 16))
  {
    v13[0] = *(void *)(v3 + 24);
    LOBYTE(v11) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA1A0);
    sub_259F152B8((unint64_t *)&qword_26A3FA1C0, &qword_26A3FA1C8);
    sub_259F68BF0();
  }
  sub_259F5C78C(v3 + 32, (uint64_t)&v11);
  if (v12)
  {
    sub_259F13728(&v11, (uint64_t)v13);
    __swift_project_boxed_opaque_existential_1(v13, v13[3]);
    LOBYTE(v11) = 3;
    sub_259F68BF0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return sub_259F17838((uint64_t)&v11, &qword_26A3FAAC8);
  }
}

BOOL sub_259F5C5D8(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = result;
  if (*(unsigned char *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 33; ; ++i)
  {
    uint64_t v5 = i - 31;
    if (__OFADD__(i - 32, 1)) {
      break;
    }
    int v6 = *(unsigned __int8 *)(a2 + i);
    unint64_t result = v6 == v3;
    if (v6 == v3 || v5 == v2) {
      return result;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_259F5C638()
{
  unint64_t result = qword_26A3FAAD0;
  if (!qword_26A3FAAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAAD0);
  }
  return result;
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x25A2F0A40);
  }
  return result;
}

uint64_t sub_259F5C6E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FAAC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_259F5C748(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_259F5C78C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FAAC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_259F5C7F4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)(a3[1] + 8) + 8))(a2);
  uint64_t v23 = v8;
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  (*(void (**)(uint64_t))(a3[3] + 8))(a2);
  uint64_t v10 = (*(uint64_t (**)(void))(v9 + 8))();
  swift_bridgeObjectRelease();
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(a3[4] + 8))(a2);
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(a3[2] + 8))(a2);
  if (v13 >> 60 == 15)
  {
    unint64_t v22 = 0;
    long long v20 = 0u;
    long long v21 = 0u;
  }
  else
  {
    uint64_t v14 = v12;
    unint64_t v15 = v13;
    sub_259F67D20();
    swift_allocObject();
    sub_259F67D10();
    *((void *)&v21 + 1) = &type metadata for AnyCodable;
    unint64_t v22 = sub_259F5C638();
    sub_259F369B4();
    sub_259F67CF0();
    if (v19)
    {
      swift_release();
      __swift_deallocate_boxed_opaque_existential_1((uint64_t)&v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_259F4027C(v14, v15);
    }
    swift_release();
    sub_259F4027C(v14, v15);
  }
  *(void *)(a4 + 64) = 0;
  *(_OWORD *)(a4 + 48) = 0u;
  *(_OWORD *)(a4 + 32) = 0u;
  uint64_t v17 = v23;
  *(void *)a4 = v18;
  *(void *)(a4 + 8) = v17;
  *(void *)(a4 + 16) = v10;
  *(void *)(a4 + 24) = v11;
  return sub_259F5C6E0((uint64_t)&v20, a4 + 32);
}

uint64_t AnyCodable.isEqual(_:)(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  char v4 = *((unsigned char *)v1 + 16);
  sub_259F13740(a1, (uint64_t)v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FAAE0);
  if (swift_dynamicCast())
  {
    uint64_t v5 = v10[0];
    uint64_t v6 = v10[1];
    unsigned __int8 v7 = v11;
    v12[0] = v2;
    v12[1] = v3;
    char v13 = v4;
    char v8 = _s12PoirotBlocks10AnyCodableO2eeoiySbAC_ACtFZ_0((uint64_t)v12, (uint64_t)v10);
    sub_259F26A80(v5, v6, v7);
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

unint64_t sub_259F5CAD0()
{
  unint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7461447475706E69;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x666E6F4372657375;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_259F5CB6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_259F5D628(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_259F5CB94(uint64_t a1)
{
  unint64_t v2 = sub_259F5C2A0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_259F5CBD0(uint64_t a1)
{
  unint64_t v2 = sub_259F5C2A0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t UserDefinedBlockConfig.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserDefinedBlockConfig.inputDatasets.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UserDefinedBlockConfig.outputDescription.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UserDefinedBlockConfig.implConfig.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_259F5C78C(v1 + 32, a1);
}

uint64_t UserDefinedBlockConfig.init(name:inputDatasets:outputDescription:implConfig:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)(a6 + 64) = 0;
  *(_OWORD *)(a6 + 48) = 0u;
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  *(_OWORD *)(a6 + 32) = 0u;
  return sub_259F5C6E0(a5, a6 + 32);
}

uint64_t sub_259F5CC80@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return UserDefinedBlockConfig.init(from:)(a1, a2);
}

uint64_t sub_259F5CC98(void *a1)
{
  return UserDefinedBlockConfig.encode(to:)(a1);
}

uint64_t _s12PoirotBlocks22UserDefinedBlockConfigV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4 = *(void **)(a1 + 16);
  uint64_t v5 = *(void **)(a2 + 16);
  if (!v4)
  {
    if (!v5)
    {
      sub_259F4A28C(a1, (uint64_t)v26);
      sub_259F4A28C(a2, (uint64_t)v24);
      goto LABEL_12;
    }
    goto LABEL_6;
  }
  if (!v5)
  {
LABEL_6:
    sub_259F4A28C(a1, (uint64_t)v26);
    sub_259F4A28C(a2, (uint64_t)v24);
    goto LABEL_7;
  }
  char v6 = sub_259F2D818(v4, v5);
  sub_259F4A28C(a1, (uint64_t)v26);
  sub_259F4A28C(a2, (uint64_t)v24);
  if ((v6 & 1) == 0)
  {
LABEL_7:
    sub_259F4A150((uint64_t)v24);
    unsigned __int8 v7 = v26;
LABEL_8:
    sub_259F4A150((uint64_t)v7);
    goto LABEL_9;
  }
LABEL_12:
  uint64_t v10 = v25;
  if (!v27)
  {
    swift_bridgeObjectRetain();
    sub_259F4A150((uint64_t)v24);
    sub_259F4A150((uint64_t)v26);
    if (v10)
    {
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    goto LABEL_18;
  }
  if (!v25)
  {
    swift_bridgeObjectRetain();
    sub_259F4A150((uint64_t)v24);
    sub_259F4A150((uint64_t)v26);
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = swift_bridgeObjectRetain();
  char v12 = sub_259F2D8E0(v11, v10);
  swift_bridgeObjectRelease();
  sub_259F4A150((uint64_t)v24);
  sub_259F4A150((uint64_t)v26);
  swift_bridgeObjectRelease();
  if (v12)
  {
LABEL_18:
    uint64_t v13 = a1 + 32;
    sub_259F5C78C(v13, (uint64_t)&v22);
    if (v23)
    {
      sub_259F13728(&v22, (uint64_t)v19);
      sub_259F5C78C(a2 + 32, (uint64_t)&v17);
      if (v18)
      {
        sub_259F13728(&v17, (uint64_t)&v22);
        uint64_t v14 = v20;
        uint64_t v15 = v21[0];
        __swift_project_boxed_opaque_existential_1(v19, v20);
        char v8 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v15 + 24))(&v22, v14, v15);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return v8 & 1;
      }
      sub_259F17838((uint64_t)&v17, &qword_26A3FAAC8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    }
    else
    {
      sub_259F17838((uint64_t)&v22, &qword_26A3FAAC8);
    }
    sub_259F5C78C(v13, (uint64_t)v19);
    uint64_t v16 = v20;
    sub_259F17838((uint64_t)v19, &qword_26A3FAAC8);
    sub_259F4A28C(a2, (uint64_t)v19);
    if (!v16)
    {
      sub_259F5C78C((uint64_t)v21, (uint64_t)&v22);
      sub_259F4A150((uint64_t)v19);
      char v8 = v23 == 0;
      sub_259F17838((uint64_t)&v22, &qword_26A3FAAC8);
      return v8 & 1;
    }
    unsigned __int8 v7 = v19;
    goto LABEL_8;
  }
LABEL_9:
  char v8 = 0;
  return v8 & 1;
}

unint64_t sub_259F5CF40(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_259F369B4();
  unint64_t result = sub_259F36A28();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_259F5CF70(void *a1)
{
  a1[1] = sub_259F5CFA8();
  a1[2] = sub_259F5CFFC();
  unint64_t result = sub_259F5D050();
  a1[3] = result;
  return result;
}

unint64_t sub_259F5CFA8()
{
  unint64_t result = qword_26A3FAAE8;
  if (!qword_26A3FAAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAAE8);
  }
  return result;
}

unint64_t sub_259F5CFFC()
{
  unint64_t result = qword_26A3FAAF0;
  if (!qword_26A3FAAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAAF0);
  }
  return result;
}

unint64_t sub_259F5D050()
{
  unint64_t result = qword_26A3FAAF8;
  if (!qword_26A3FAAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAAF8);
  }
  return result;
}

uint64_t destroy for UserDefinedBlockConfig(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56))
  {
    return __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  }
  return result;
}

uint64_t initializeWithCopy for UserDefinedBlockConfig(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v5;
  char v6 = a2 + 4;
  uint64_t v7 = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    uint64_t v8 = a2[8];
    *(void *)(a1 + 56) = v7;
    *(void *)(a1 + 64) = v8;
    (**(void (***)(uint64_t, void *, uint64_t))(v7 - 8))(a1 + 32, v6, v7);
  }
  else
  {
    long long v9 = *((_OWORD *)v6 + 1);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 48) = v9;
    *(void *)(a1 + 64) = v6[4];
  }
  return a1;
}

uint64_t assignWithCopy for UserDefinedBlockConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 56);
  if (!*(void *)(a1 + 56))
  {
    if (v4)
    {
      *(void *)(a1 + 56) = v4;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 32, a2 + 32);
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 32);
    long long v6 = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v5;
    *(_OWORD *)(a1 + 48) = v6;
    return a1;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for UserDefinedBlockConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  }
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserDefinedBlockConfig(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UserDefinedBlockConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserDefinedBlockConfig()
{
  return &type metadata for UserDefinedBlockConfig;
}

unsigned char *storeEnumTagSinglePayload for UserDefinedBlockConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259F5D4E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserDefinedBlockConfig.CodingKeys()
{
  return &type metadata for UserDefinedBlockConfig.CodingKeys;
}

unint64_t sub_259F5D524()
{
  unint64_t result = qword_26A3FAB00;
  if (!qword_26A3FAB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAB00);
  }
  return result;
}

unint64_t sub_259F5D57C()
{
  unint64_t result = qword_26A3FAB08;
  if (!qword_26A3FAB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAB08);
  }
  return result;
}

unint64_t sub_259F5D5D4()
{
  unint64_t result = qword_26A3FAB10;
  if (!qword_26A3FAB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAB10);
  }
  return result;
}

uint64_t sub_259F5D628(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461447475706E69 && a2 == 0xED00007374657361 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000259F69680 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x666E6F4372657375 && a2 == 0xEA00000000006769)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_259F68C70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

void sub_259F5D7FC()
{
  *(unsigned char *)(v0 + 16) = 0;
}

void sub_259F5D804()
{
  *(unsigned char *)(v0 + 16) = 1;
}

uint64_t sub_259F5D810()
{
  (*(void (**)(void))(*(void *)v0 + 168))();
  return 1;
}

ValueMetadata *type metadata accessor for ProcessingError()
{
  return &type metadata for ProcessingError;
}

uint64_t sub_259F5D85C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 56, 7);
}

uint64_t type metadata accessor for BaseBlock()
{
  return self;
}

uint64_t sub_259F5D8C0()
{
  return *(unsigned __int8 *)(*(void *)v0 + 16);
}

uint64_t sub_259F5D8CC()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 184))() & 1;
}

uint64_t sub_259F5D914()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 176))();
}

uint64_t sub_259F5D958()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 160))();
}

uint64_t sub_259F5D99C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_259F5D9D0()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 136))();
}

uint64_t sub_259F5DA14()
{
  return *(void *)(*(void *)v0 + 48);
}

uint64_t sub_259F5DA20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(unsigned char *)(a4 + 16) = 0;
  *(void *)(a4 + 24) = a1;
  *(void *)(a4 + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 32))(a5, a6);
  *(void *)(a4 + 40) = v8;
  *(void *)(a4 + 48) = a2;
  return a4;
}

uint64_t Sequence<>.existingNames.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _OWORD v11[2] = a1;
  v11[3] = a2;
  void v11[4] = a3;
  uint64_t v8 = sub_259F5DB94((void (*)(char *, char *))sub_259F5DB10, (uint64_t)v11, a1, MEMORY[0x263F8D310], MEMORY[0x263F8E628], a2, MEMORY[0x263F8E658], a8);
  uint64_t v9 = sub_259F26A9C(v8);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_259F5DB10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 32);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t result = v4(AssociatedTypeWitness, v3);
  *a1 = result;
  a1[1] = v7;
  return result;
}

uint64_t sub_259F5DB94(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  uint64_t v59 = a4;
  uint64_t v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  uint64_t v55 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v53 = (char *)&v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v41 = (char *)&v40 - v17;
  uint64_t v18 = sub_259F688B0();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  char v51 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v40 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v40 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v50 = *((void *)v15 - 1);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  uint64_t v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v30 = (char *)&v40 - v29;
  uint64_t v31 = sub_259F68710();
  uint64_t v61 = sub_259F68570();
  uint64_t v56 = sub_259F68A00();
  sub_259F689A0();
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  uint64_t v59 = v30;
  uint64_t result = sub_259F68700();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    uint64_t v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_259F688C0();
      uint64_t result = (*v33)(v23, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v23, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v23, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v23, AssociatedTypeWitness);
      sub_259F689E0();
      if (!--v31)
      {
        uint64_t v35 = v54;
        uint64_t v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  uint64_t v36 = v51;
LABEL_9:
  sub_259F688C0();
  uint64_t v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    uint64_t v38 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v39 = v41;
    uint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_259F689E0();
      sub_259F688C0();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

uint64_t dispatch thunk of ProvidesName.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_259F5E2A4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_259F1C984(0, v1, 0);
    uint64_t v2 = v13;
    uint64_t v4 = *(void *)(type metadata accessor for DatasetColumnDescription(0) - 8);
    uint64_t v5 = *(void *)(v4 + 72);
    char v6 = (uint64_t *)(((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + a1 + 8);
    do
    {
      uint64_t v8 = *(v6 - 1);
      uint64_t v7 = *v6;
      unint64_t v10 = *(void *)(v13 + 16);
      unint64_t v9 = *(void *)(v13 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v9 >> 1) {
        sub_259F1C984(v9 > 1, v10 + 1, 1);
      }
      char v6 = (uint64_t *)((char *)v6 + v5);
      *(void *)(v13 + 16) = v10 + 1;
      uint64_t v11 = v13 + 16 * v10;
      *(void *)(v11 + 32) = v8;
      *(void *)(v11 + 40) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t DatasetColumnLayout.pivotColumns.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_259F5EED4(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t Array.partition(on:)()
{
  sub_259F68570();
  sub_259F68800();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t result = sub_259F68970();
  if (v0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

PoirotBlocks::DatasetColumnLayout __swiftcall DatasetColumnLayout.init(name:columnDescriptions:)(Swift::String name, Swift::OpaquePointer columnDescriptions)
{
  *(Swift::String *)uint64_t v2 = name;
  *(Swift::OpaquePointer *)(v2 + 16) = columnDescriptions;
  result.name = name;
  result.columnDescriptions = columnDescriptions;
  return result;
}

uint64_t DatasetColumnLayout.columns.getter()
{
  return sub_259F5EB80(*(void *)(v0 + 16));
}

uint64_t sub_259F5E514()
{
  if (*v0) {
    return 0x736E6D756C6F63;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_259F5E548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_259F5F398(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_259F5E570(uint64_t a1)
{
  unint64_t v2 = sub_259F5F0D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_259F5E5AC(uint64_t a1)
{
  unint64_t v2 = sub_259F5F0D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DatasetColumnLayout.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DatasetColumnLayout.columnDescriptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DatasetColumnLayout.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FAB18);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F5F0D0();
  sub_259F68DF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v17[0] = a2;
  char v19 = 0;
  uint64_t v9 = sub_259F68B00();
  uint64_t v12 = v9;
  unint64_t v13 = v10;
  if (v10) {
    unint64_t v14 = v10;
  }
  else {
    unint64_t v14 = 0xE000000000000000;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA1A0);
  char v18 = 1;
  sub_259F152B8(&qword_26A3FA1A8, &qword_26A3FA1B0);
  swift_bridgeObjectRetain();
  sub_259F68B60();
  if (!v13) {
    uint64_t v12 = 0;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v17[0];
  uint64_t v16 = v17[1];
  *(void *)v17[0] = v12;
  *(void *)(v15 + 8) = v14;
  *(void *)(v15 + 16) = v16;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t DatasetColumnLayout.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FAB28);
  uint64_t v10 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F5F0D0();
  sub_259F68E20();
  char v13 = 0;
  sub_259F68BB0();
  if (!v2)
  {
    uint64_t v11 = v9;
    char v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA1A0);
    sub_259F152B8((unint64_t *)&qword_26A3FA1C0, &qword_26A3FA1C8);
    sub_259F68BF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t static DatasetColumnLayout.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_259F68C70() & 1) == 0) {
    return 0;
  }
  return sub_259F2D8E0(v2, v3);
}

uint64_t sub_259F5EADC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DatasetColumnLayout.init(from:)(a1, a2);
}

uint64_t sub_259F5EAF4(void *a1)
{
  return DatasetColumnLayout.encode(to:)(a1);
}

uint64_t sub_259F5EB0C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_259F68C70() & 1) == 0) {
    return 0;
  }
  return sub_259F2D8E0(v2, v3);
}

uint64_t sub_259F5EB80(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DatasetColumnDescription(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_259F1C954(0, v6, 0);
    uint64_t v7 = v17;
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_259F138BC(v8, (uint64_t)v5);
      uint64_t v17 = v7;
      unint64_t v11 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_259F1C954(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v17;
      }
      uint64_t v15 = v2;
      uint64_t v16 = sub_259F15338((unint64_t *)&qword_26A3FA5D0);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v14);
      sub_259F138BC((uint64_t)v5, (uint64_t)boxed_opaque_existential_1);
      *(void *)(v7 + 16) = v11 + 1;
      sub_259F13728(&v14, v7 + 40 * v11 + 32);
      sub_259F26B8C((uint64_t)v5);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_259F5ED34()
{
  return sub_259F5EB80(*(void *)(v0 + 16));
}

uint64_t sub_259F5ED3C()
{
  return sub_259F68280();
}

uint64_t DatasetColumnLayout.columnNames.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_259F5E2A4(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_259F5EDC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void *)(a5 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](a1);
  unint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = v12(v9);
  char v14 = v13;
  if (!v5 && (v13 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, a5);
    sub_259F68800();
    sub_259F687F0();
  }
  return v14 & 1;
}

uint64_t sub_259F5EED4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DatasetColumnDescription(0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  int64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v19 = MEMORY[0x263F8EE78];
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v17 = v1;
    uint64_t v12 = *(void *)(v7 + 72);
    unint64_t v18 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v13 = a1 + v18;
    uint64_t v14 = MEMORY[0x263F8EE78];
    do
    {
      sub_259F138BC(v13, (uint64_t)v9);
      if (v9[*(int *)(v3 + 28)] == 1)
      {
        sub_259F1E52C((uint64_t)v9, (uint64_t)v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_259F1C918(0, *(void *)(v14 + 16) + 1, 1);
        }
        uint64_t v14 = v19;
        unint64_t v16 = *(void *)(v19 + 16);
        unint64_t v15 = *(void *)(v19 + 24);
        if (v16 >= v15 >> 1)
        {
          sub_259F1C918(v15 > 1, v16 + 1, 1);
          uint64_t v14 = v19;
        }
        *(void *)(v14 + 16) = v16 + 1;
        sub_259F1E52C((uint64_t)v6, v14 + v18 + v16 * v12);
      }
      else
      {
        sub_259F26B8C((uint64_t)v9);
      }
      v13 += v12;
      --v11;
    }
    while (v11);
    return v19;
  }
  return result;
}

uint64_t sub_259F5F0AC(uint64_t a1)
{
  return sub_259F5EDC8(a1, v1[3], v1[4], v1[5], v1[2]) & 1;
}

unint64_t sub_259F5F0D0()
{
  unint64_t result = qword_26A3FAB20;
  if (!qword_26A3FAB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAB20);
  }
  return result;
}

unint64_t sub_259F5F128()
{
  unint64_t result = qword_26A3FAB30;
  if (!qword_26A3FAB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAB30);
  }
  return result;
}

ValueMetadata *type metadata accessor for DatasetColumnLayout()
{
  return &type metadata for DatasetColumnLayout;
}

unsigned char *storeEnumTagSinglePayload for DatasetColumnLayout.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259F5F258);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DatasetColumnLayout.CodingKeys()
{
  return &type metadata for DatasetColumnLayout.CodingKeys;
}

unint64_t sub_259F5F294()
{
  unint64_t result = qword_26A3FAB38;
  if (!qword_26A3FAB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAB38);
  }
  return result;
}

unint64_t sub_259F5F2EC()
{
  unint64_t result = qword_26A3FAB40;
  if (!qword_26A3FAB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAB40);
  }
  return result;
}

unint64_t sub_259F5F344()
{
  unint64_t result = qword_26A3FAB48;
  if (!qword_26A3FAB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAB48);
  }
  return result;
}

uint64_t sub_259F5F398(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_259F68C70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736E6D756C6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_259F68C70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t BlockLoggingType.makeLogHandler()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v44 = a1;
  uint64_t v3 = sub_259F67E70();
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_259F67FB0();
  uint64_t v41 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_259F67F30();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  unint64_t v16 = (char *)v36 - v15;
  MEMORY[0x270FA5388](v14);
  unint64_t v18 = (char *)v36 - v17;
  uint64_t v19 = type metadata accessor for BlockLoggingType();
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_259F5F8F4(v2, (uint64_t)v21);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v21, 2, v9);
  if (result)
  {
    if (result == 1)
    {
      uint64_t v23 = v44;
      v44[3] = (uint64_t)&type metadata for VoidLogger;
      v23[4] = (uint64_t)&off_2707E1678;
    }
    else
    {
      uint64_t v34 = type metadata accessor for ConsoleLogger();
      uint64_t result = swift_allocObject();
      uint64_t v35 = v44;
      v44[3] = v34;
      v35[4] = (uint64_t)&off_2707E3228;
      *uint64_t v35 = result;
    }
  }
  else
  {
    uint64_t v37 = v6;
    uint64_t v24 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
    uint64_t v39 = v10 + 32;
    uint64_t v40 = v24;
    v24((uint64_t)v18, v21, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v18, v9);
    uint64_t v25 = type metadata accessor for FileLogger();
    uint64_t v38 = swift_allocObject();
    sub_259F67FA0();
    uint64_t v26 = sub_259F67F90();
    uint64_t v28 = v27;
    v36[1] = v27;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v37);
    uint64_t v45 = v26;
    uint64_t v46 = v28;
    uint64_t v30 = v42;
    uint64_t v29 = v43;
    (*(void (**)(char *, void, uint64_t))(v42 + 104))(v5, *MEMORY[0x263F06E50], v43);
    sub_259F2BFE0();
    sub_259F67F20();
    uint64_t v31 = *(void (**)(char *, uint64_t))(v10 + 8);
    v31(v16, v9);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v29);
    swift_bridgeObjectRelease();
    uint64_t v32 = v38;
    v40(v38 + OBJC_IVAR____TtC12PoirotBlocks10FileLogger_directory, v13, v9);
    uint64_t v33 = v44;
    v44[3] = v25;
    v33[4] = (uint64_t)&off_2707E26A8;
    *uint64_t v33 = v32;
    return ((uint64_t (*)(char *, uint64_t))v31)(v18, v9);
  }
  return result;
}

uint64_t type metadata accessor for BlockLoggingType()
{
  uint64_t result = qword_26A3FAB50;
  if (!qword_26A3FAB50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_259F5F8F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BlockLoggingType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for BlockLoggingType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_259F67F30();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t destroy for BlockLoggingType(uint64_t a1)
{
  uint64_t v2 = sub_259F67F30();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *initializeWithCopy for BlockLoggingType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_259F67F30();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithCopy for BlockLoggingType(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_259F67F30();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *initializeWithTake for BlockLoggingType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_259F67F30();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithTake for BlockLoggingType(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_259F67F30();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for BlockLoggingType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_259F60090);
}

uint64_t sub_259F60090(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_259F67F30();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BlockLoggingType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_259F60110);
}

uint64_t sub_259F60110(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_259F67F30();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_259F60194(uint64_t a1)
{
  uint64_t v2 = sub_259F67F30();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 2, v2);
}

uint64_t sub_259F601FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_259F67F30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 2, v4);
}

uint64_t sub_259F6026C()
{
  uint64_t result = sub_259F67F30();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for UserDefinedBlockError()
{
  return &type metadata for UserDefinedBlockError;
}

uint64_t sub_259F602F4(void *a1, uint64_t a2, uint64_t *a3)
{
  void (*v14)(long long *__return_ptr, uint64_t, uint64_t, uint64_t *, void *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  long long v17;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  long long v22;
  uint64_t v23;
  void v24[3];
  void v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  uint64_t v4 = v3;
  uint64_t v7 = a3[3];
  *(void *)(v4 + 56) = a3[2];
  *(void *)(v4 + 64) = v7;
  sub_259F26A1C((uint64_t)(a3 + 4), v4 + 72, &qword_26A3FAAC8);
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_259F26A1C(*v8 + 80, (uint64_t)&v22, &qword_26A3FA498);
  if (v23)
  {
    sub_259F13728(&v22, (uint64_t)v25);
    uint64_t v9 = v26;
    uint64_t v10 = v27;
    __swift_project_boxed_opaque_existential_1(v25, v26);
    uint64_t v21 = *a3;
    uint64_t v20 = a3[1];
    uint64_t v11 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v12 = *(void *)(*v11 + 136);
    uint64_t v13 = *(void *)(*v11 + 144);
    v24[0] = *(void *)(*v11 + 128);
    v24[1] = v12;
    v24[2] = v13;
    uint64_t v14 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t *, void *, uint64_t, uint64_t))(v10 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v15 = v28;
    v14(&v22, v21, v20, a3, v24, v9, v10);
    swift_bridgeObjectRelease();
    if (v15)
    {
      sub_259F4A150((uint64_t)a3);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_259F17838(v4 + 72, &qword_26A3FAAC8);
      swift_release();
      type metadata accessor for UserDefinedBlock();
      swift_deallocPartialClassInstance();
    }
    else
    {
      sub_259F13728(&v22, v4 + 112);
      swift_release();
      unint64_t v16 = *(void *)(*__swift_project_boxed_opaque_existential_1(a1, a1[3]) + 120);
      sub_259F4A28C((uint64_t)a3, (uint64_t)&v22);
      *(unsigned char *)(v4 + 16) = 0;
      uint64_t v17 = v22;
      *(void *)(v4 + 24) = v16;
      *(_OWORD *)(v4 + 32) = v17;
      *(void *)(v4 + 48) = a2;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_259F4A150((uint64_t)&v22);
      sub_259F4A150((uint64_t)a3);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    }
    return v4;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_259F17838((uint64_t)&v22, &qword_26A3FA498);
    uint64_t result = sub_259F68A80();
    __break(1u);
  }
  return result;
}

uint64_t sub_259F605A0(uint64_t result)
{
  uint64_t v2 = v1;
  uint64_t v3 = (uint64_t *)result;
  if (v1[7])
  {
    uint64_t v4 = swift_bridgeObjectRetain();
    uint64_t v5 = sub_259F26A9C(v4);
    swift_bridgeObjectRelease();
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = sub_259F220D0(v6);
    if (*(void *)(v7 + 16) <= *(void *)(v5 + 16) >> 3)
    {
      sub_259F609DC(v7);
      swift_bridgeObjectRelease();
      if (*(void *)(v5 + 16)) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v8 = sub_259F60B84(v7, v5);
      swift_bridgeObjectRelease();
      if (*(void *)(v8 + 16))
      {
LABEL_4:
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FAB60);
        sub_259F618C4();
        sub_259F2BFE0();
        uint64_t v9 = sub_259F68730();
        uint64_t v11 = v10;
        swift_bridgeObjectRelease();
        sub_259F61920();
        swift_allocError();
        *(void *)uint64_t v12 = v9;
        *(void *)(v12 + 8) = v11;
        *(unsigned char *)(v12 + 16) = 1;
        return swift_willThrow();
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
  }
  uint64_t v13 = v2[8];
  if (v13)
  {
    uint64_t v15 = v2[4];
    uint64_t v14 = v2[5];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_259F23F98(v15, v14, v13, v15, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_259F60778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = *(void *)(v5 + 136);
  uint64_t v10 = *(void *)(v5 + 144);
  __swift_project_boxed_opaque_existential_1((void *)(v5 + 112), v9);
  char v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 16))(a1, a2, a3, v9, v10);
  if (!v4)
  {
    uint64_t v12 = *(void *)(v5 + 136);
    uint64_t v13 = *(void *)(v5 + 144);
    __swift_project_boxed_opaque_existential_1((void *)(v5 + 112), v12);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13)) {
      *(unsigned char *)(v5 + 16) = 1;
    }
  }
  return v11 & 1;
}

uint64_t sub_259F60858()
{
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 144);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 112), v2);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  if (!v1)
  {
    uint64_t v5 = *(void *)(v0 + 136);
    uint64_t v6 = *(void *)(v0 + 144);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 112), v5);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
    *(unsigned char *)(v0 + 16) = result & 1;
  }
  return result;
}

uint64_t sub_259F60908()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259F17838(v0 + 72, &qword_26A3FAAC8);
  return __swift_destroy_boxed_opaque_existential_1(v0 + 112);
}

uint64_t sub_259F60950()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259F17838(v0 + 72, &qword_26A3FAAC8);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  return MEMORY[0x270FA0228](v0, 152, 7);
}

uint64_t type metadata accessor for UserDefinedBlock()
{
  return self;
}

uint64_t sub_259F609DC(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    char v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_259F60FF4(v12, v13);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:
  return swift_release();
}

uint64_t sub_259F60B84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v43 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v37 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v35 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v36 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v37 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v36) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v37 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v36) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v37 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v36) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v37 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_259F1E4B8();
                  return v2;
                }
                unint64_t v13 = *(void *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v36) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v37 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      int64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_259F68DA0();
      swift_bridgeObjectRetain();
      sub_259F686E0();
      uint64_t v19 = sub_259F68DC0();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    uint64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_259F68C70() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        uint64_t v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_259F68C70() & 1) == 0);
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v29 = *(unsigned char *)(v2 + 32);
    unint64_t v30 = (unint64_t)((1 << v29) + 63) >> 6;
    size_t v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      MEMORY[0x270FA5388](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_259F61184((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_259F1E4B8();
    }
    else
    {
      uint64_t v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_259F61184((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_259F1E4B8();
      MEMORY[0x25A2F0A40](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
}

uint64_t sub_259F60FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_259F68DA0();
  swift_bridgeObjectRetain();
  sub_259F686E0();
  uint64_t v6 = sub_259F68DC0();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  unint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_259F68C70() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      int64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_259F68C70() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_259F43414();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_259F616FC(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_259F61184(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v38 = (unint64_t *)result;
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v39 = a3 + 56;
  while (2)
  {
    uint64_t v37 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
        }
        else
        {
          int64_t v13 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_45;
          }
          int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
          int64_t v15 = a5[3];
          if (v13 >= v14) {
            goto LABEL_43;
          }
          uint64_t v16 = a5[1];
          unint64_t v17 = *(void *)(v16 + 8 * v13);
          if (!v17)
          {
            int64_t v15 = v9 + 1;
            if (v9 + 2 >= v14) {
              goto LABEL_43;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 2));
            if (v17)
            {
              int64_t v13 = v9 + 2;
            }
            else
            {
              int64_t v15 = v9 + 2;
              if (v9 + 3 >= v14) {
                goto LABEL_43;
              }
              unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
              if (v17)
              {
                int64_t v13 = v9 + 3;
              }
              else
              {
                int64_t v13 = v9 + 4;
                int64_t v15 = v9 + 3;
                if (v9 + 4 >= v14) {
                  goto LABEL_43;
                }
                unint64_t v17 = *(void *)(v16 + 8 * v13);
                if (!v17)
                {
                  int64_t v15 = v14 - 1;
                  int64_t v18 = v9 + 5;
                  while (v14 != v18)
                  {
                    unint64_t v17 = *(void *)(v16 + 8 * v18++);
                    if (v17)
                    {
                      int64_t v13 = v18 - 1;
                      goto LABEL_21;
                    }
                  }
LABEL_43:
                  a5[3] = v15;
                  a5[4] = 0;
                  swift_retain();
                  return sub_259F61464(v38, a2, v37, a3);
                }
              }
            }
          }
LABEL_21:
          uint64_t v11 = (v17 - 1) & v17;
          unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
          int64_t v9 = v13;
        }
        uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_259F68DA0();
        swift_bridgeObjectRetain();
        sub_259F686E0();
        uint64_t v22 = sub_259F68DC0();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v39 + 8 * (v24 >> 6))) != 0) {
          break;
        }
LABEL_3:
        uint64_t result = swift_bridgeObjectRelease();
      }
      uint64_t v27 = *(void *)(a3 + 48);
      uint64_t v28 = (void *)(v27 + 16 * v24);
      BOOL v29 = *v28 == v21 && v28[1] == v20;
      if (!v29 && (sub_259F68C70() & 1) == 0)
      {
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v39 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          uint64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_259F68C70() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_29;
          }
        }
        goto LABEL_3;
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_29:
      unint64_t v30 = v38[v25];
      v38[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v37 - 1;
    if (__OFSUB__(v37, 1))
    {
LABEL_45:
      __break(1u);
      return result;
    }
    if (v37 != 1) {
      continue;
    }
    return MEMORY[0x263F8EE88];
  }
}

uint64_t sub_259F61464(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x263F8EE88];
LABEL_36:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA878);
  uint64_t result = sub_259F68950();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    unint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_259F68DA0();
    swift_bridgeObjectRetain();
    sub_259F686E0();
    uint64_t result = sub_259F68DC0();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    void *v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

unint64_t sub_259F616FC(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_259F68920();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_259F68DA0();
        swift_bridgeObjectRetain();
        sub_259F686E0();
        uint64_t v10 = sub_259F68DC0();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          unint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *unint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_259F618C4()
{
  unint64_t result = qword_26A3FAB68;
  if (!qword_26A3FAB68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A3FAB60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAB68);
  }
  return result;
}

unint64_t sub_259F61920()
{
  unint64_t result = qword_26A3FAB70;
  if (!qword_26A3FAB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAB70);
  }
  return result;
}

uint64_t sub_259F61974(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v82 = a3;
  LODWORD(v80) = a1;
  uint64_t v83 = sub_259F683E0();
  uint64_t v4 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  uint64_t v74 = (char *)v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA4C8);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v70 = (char *)v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v76 = (char *)v69 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v69 - v11;
  uint64_t v13 = *(void *)(a2 + 56);
  uint64_t v77 = a2 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v78 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v79 = v4;
  uint64_t v84 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  uint64_t v71 = v4 + 16;
  uint64_t v81 = (unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  uint64_t v75 = (void (**)(char *, uint64_t, uint64_t))(v4 + 32);
  uint64_t v17 = v4 + 40;
  uint64_t v18 = a2;
  v69[2] = v17;
  swift_bridgeObjectRetain();
  int64_t v19 = 0;
  uint64_t v72 = a2;
  uint64_t v73 = v12;
  while (v16)
  {
    unint64_t v22 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    unint64_t v23 = v22 | (v19 << 6);
LABEL_26:
    uint64_t v27 = v18;
    uint64_t v28 = (uint64_t *)(*(void *)(v18 + 48) + 16 * v23);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    swift_bridgeObjectRetain_n();
    uint64_t v31 = sub_259F684A0();
    uint64_t v32 = *(void *)(v31 + 16);
    int64_t v85 = v19;
    if (v32 && (unint64_t v33 = sub_259F17068(v29, v30), (v34 & 1) != 0))
    {
      uint64_t v35 = v79;
      uint64_t v36 = v83;
      (*(void (**)(char *, unint64_t, uint64_t))(v79 + 16))(v12, *(void *)(v31 + 56) + *(void *)(v79 + 72) * v33, v83);
      uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
      v37(v12, 0, 1, v36);
    }
    else
    {
      uint64_t v36 = v83;
      uint64_t v37 = *v84;
      (*v84)(v12, 1, 1, v83);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v38 = *v81;
    unsigned int v39 = (*v81)(v12, 1, v36);
    sub_259F634D4((uint64_t)v12);
    BOOL v40 = v39 == 1;
    uint64_t v18 = v27;
    if (v40)
    {
      swift_bridgeObjectRetain();
      sub_259F21FBC(MEMORY[0x263F8EE78]);
      uint64_t v41 = (uint64_t)v76;
      sub_259F683B0();
      uint64_t v42 = v83;
      v37((char *)v41, 0, 1, v83);
      uint64_t v80 = sub_259F68490();
      uint64_t v44 = v43;
      if (v38((char *)v41, 1, v42) == 1)
      {
        sub_259F634D4(v41);
        swift_bridgeObjectRetain();
        unint64_t v45 = sub_259F17068(v29, v30);
        char v47 = v46;
        swift_bridgeObjectRelease();
        uint64_t v48 = (uint64_t)v70;
        if (v47)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v87 = (void *)*v44;
          *uint64_t v44 = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_259F26138();
          }
          uint64_t v50 = (uint64_t)v87;
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v79 + 32))(v48, *(void *)(v50 + 56) + *(void *)(v79 + 72) * v45, v42);
          sub_259F23BB0(v45, v50);
          *uint64_t v44 = v50;
          swift_bridgeObjectRelease();
          uint64_t v20 = 0;
        }
        else
        {
          uint64_t v20 = 1;
        }
        uint64_t v18 = v72;
        unint64_t v21 = (void (*)(unsigned char *, void))v80;
        v37((char *)v48, v20, 1, v42);
        swift_bridgeObjectRelease();
        sub_259F634D4(v48);
        uint64_t v12 = v73;
        v21(v86, 0);
      }
      else
      {
        char v51 = *v75;
        (*v75)(v74, v41, v42);
        int v52 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v87 = (void *)*v44;
        uint64_t v53 = v87;
        *uint64_t v44 = 0x8000000000000000;
        unint64_t v55 = sub_259F17068(v29, v30);
        uint64_t v56 = v53[2];
        BOOL v57 = (v54 & 1) == 0;
        uint64_t v58 = v56 + v57;
        if (__OFADD__(v56, v57)) {
          goto LABEL_50;
        }
        char v59 = v54;
        if (v53[3] >= v58)
        {
          if ((v52 & 1) == 0) {
            sub_259F26138();
          }
        }
        else
        {
          sub_259F1A224(v58, v52);
          unint64_t v60 = sub_259F17068(v29, v30);
          if ((v59 & 1) != (v61 & 1)) {
            goto LABEL_53;
          }
          unint64_t v55 = v60;
        }
        uint64_t v62 = v83;
        uint64_t v12 = v73;
        uint64_t v63 = v87;
        if (v59)
        {
          (*(void (**)(unint64_t, char *, uint64_t))(v79 + 40))(v87[7] + *(void *)(v79 + 72) * v55, v74, v83);
        }
        else
        {
          v87[(v55 >> 6) + 8] |= 1 << v55;
          uint64_t v64 = (uint64_t *)(v63[6] + 16 * v55);
          *uint64_t v64 = v29;
          v64[1] = v30;
          v51((char *)(v63[7] + *(void *)(v79 + 72) * v55), (uint64_t)v74, v62);
          uint64_t v65 = v63[2];
          BOOL v66 = __OFADD__(v65, 1);
          uint64_t v67 = v65 + 1;
          if (v66) {
            goto LABEL_51;
          }
          v63[2] = v67;
          swift_bridgeObjectRetain();
        }
        *uint64_t v44 = (uint64_t)v87;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v18 = v72;
        ((void (*)(unsigned char *, void))v80)(v86, 0);
      }
      LODWORD(v80) = 1;
    }
    swift_bridgeObjectRelease();
    int64_t v19 = v85;
  }
  int64_t v24 = v19 + 1;
  if (__OFADD__(v19, 1))
  {
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  if (v24 >= v78) {
    goto LABEL_48;
  }
  unint64_t v25 = *(void *)(v77 + 8 * v24);
  ++v19;
  if (v25) {
    goto LABEL_25;
  }
  int64_t v19 = v24 + 1;
  if (v24 + 1 >= v78) {
    goto LABEL_48;
  }
  unint64_t v25 = *(void *)(v77 + 8 * v19);
  if (v25) {
    goto LABEL_25;
  }
  int64_t v19 = v24 + 2;
  if (v24 + 2 >= v78) {
    goto LABEL_48;
  }
  unint64_t v25 = *(void *)(v77 + 8 * v19);
  if (v25) {
    goto LABEL_25;
  }
  int64_t v19 = v24 + 3;
  if (v24 + 3 >= v78) {
    goto LABEL_48;
  }
  unint64_t v25 = *(void *)(v77 + 8 * v19);
  if (v25)
  {
LABEL_25:
    unint64_t v16 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v19 << 6);
    goto LABEL_26;
  }
  int64_t v26 = v24 + 4;
  if (v26 >= v78)
  {
LABEL_48:
    swift_release();
    return v80 & 1;
  }
  unint64_t v25 = *(void *)(v77 + 8 * v26);
  if (v25)
  {
    int64_t v19 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v19 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v19 >= v78) {
      goto LABEL_48;
    }
    unint64_t v25 = *(void *)(v77 + 8 * v19);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_52:
  __break(1u);
LABEL_53:
  uint64_t result = sub_259F68D30();
  __break(1u);
  return result;
}

uint64_t AutomaticProtobufFactory.init(manifest:messageNameMap:columnsLayout:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA208);
  MEMORY[0x270FA5388](v7 - 8);
  BOOL v40 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_259F684E0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unsigned int v39 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v37 - v13;
  uint64_t v41 = v10;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v38((char *)v37 - v13, a1, v9);
  uint64_t v15 = MEMORY[0x263F8EE88];
  uint64_t v48 = MEMORY[0x263F8EE88];
  unsigned __int8 v47 = 0;
  uint64_t v16 = *(void *)(a3 + 16);
  uint64_t v42 = a1;
  uint64_t v44 = v9;
  if (v16)
  {
    swift_bridgeObjectRetain();
    v37[1] = a3;
    uint64_t v17 = (uint64_t *)(a3 + 48);
    while (1)
    {
      uint64_t v19 = *(v17 - 1);
      uint64_t v18 = *v17;
      v46[0] = *(v17 - 2);
      v46[1] = v19;
      v46[2] = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_259F56B6C(&v47, v46, a2, (uint64_t)&v48, &v45);
      if (v3) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unsigned __int8 v20 = v45;
      unsigned __int8 v47 = v45;
      v17 += 3;
      if (!--v16)
      {
        swift_bridgeObjectRelease();
        uint64_t v15 = v48;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v34 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
    uint64_t v35 = v44;
    v34(v42, v44);
    v34((uint64_t)v14, v35);
    type metadata accessor for AutomaticProtobufFactory();
    uint64_t v30 = v43;
    swift_deallocPartialClassInstance();
  }
  else
  {
    unsigned __int8 v20 = 0;
LABEL_7:
    uint64_t v21 = v43;
    swift_bridgeObjectRetain();
    char v22 = sub_259F61974(0, v15, (uint64_t)v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(unsigned char *)(v21 + 24) = (v22 | v20) & 1;
    *(unsigned char *)(v21 + 25) = 2;
    unint64_t v23 = v39;
    v38(v39, (uint64_t)v14, v44);
    type metadata accessor for ProtobufFactory();
    uint64_t v24 = swift_allocObject();
    uint64_t v25 = v24 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store;
    uint64_t v26 = sub_259F68390();
    uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
    v27(v25, 1, 1, v26);
    uint64_t v28 = v41;
    (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v24 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest, v23, v44);
    *(void *)(v24 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_messageNameMap) = a2;
    uint64_t v29 = (uint64_t)v40;
    v27((uint64_t)v40, 1, 1, v26);
    uint64_t v30 = v43;
    uint64_t v31 = v24 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store;
    swift_beginAccess();
    sub_259F16078(v29, v31);
    swift_endAccess();
    uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    uint64_t v33 = v44;
    v32(v42, v44);
    v32((uint64_t)v14, v33);
    *(void *)(v30 + 16) = v24;
  }
  return v30;
}

uint64_t AutomaticProtobufFactory.init(manifest:messageNameMap:allColumnsArePivots:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v21 = a2;
  uint64_t v19 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA208);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_259F684E0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v3;
  *(unsigned char *)(v3 + 24) = 0;
  *(unsigned char *)(v3 + 25) = a3;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  type metadata accessor for ProtobufFactory();
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = v13 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store;
  uint64_t v15 = sub_259F68390();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  v16(v14, 1, 1, v15);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v13 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest, v12, v9);
  *(void *)(v13 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_messageNameMap) = v21;
  v16((uint64_t)v8, 1, 1, v15);
  uint64_t v17 = v13 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store;
  swift_beginAccess();
  sub_259F16078((uint64_t)v8, v17);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v19, v9);
  uint64_t result = v20;
  *(void *)(v20 + 16) = v13;
  return result;
}

uint64_t sub_259F62740(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v8 = *a1;
  uint64_t v9 = v4;
  uint64_t v10 = v5;
  uint64_t v6 = *(void *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_messageNameMap);
  swift_bridgeObjectRetain();
  sub_259F628E0(&v8, v6);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t v8 = v3;
    uint64_t v9 = v4;
    uint64_t v10 = v5;
    return sub_259F165B8(&v8);
  }
  return result;
}

uint64_t AutomaticProtobufFactory.deinit()
{
  swift_release();
  return v0;
}

uint64_t sub_259F62808@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16) + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
  swift_beginAccess();
  uint64_t v4 = sub_259F684E0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_259F62894()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_259F628AC()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_259F628E0(uint64_t *a1, uint64_t a2)
{
  uint64_t v41 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA208);
  MEMORY[0x270FA5388](v4 - 8);
  char v34 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_259F684E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v32 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v13 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v14 = a1[2];
  uint64_t v33 = *(void *)(v2 + 16);
  uint64_t v15 = (char *)(v33 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest);
  swift_beginAccess();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v36 = v6;
  uint64_t v31 = v16;
  v16(v11, v15, v6);
  uint64_t v35 = v2;
  int v17 = *(unsigned __int8 *)(v2 + 25);
  if (v17 == 2)
  {
    uint64_t v18 = v41;
    uint64_t v19 = v37;
    int v20 = 0;
  }
  else
  {
    uint64_t v38 = v13;
    uint64_t v39 = v12;
    uint64_t v40 = v14;
    uint64_t v19 = v37;
    int v21 = sub_259F56EC0((uint64_t)&v38, v41, v17 & 1);
    if (v19) {
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v11, v36);
    }
    int v20 = v21;
    uint64_t v18 = v41;
  }
  uint64_t v38 = v13;
  uint64_t v39 = v12;
  uint64_t v40 = v14;
  int v22 = sub_259F5725C(&v38, v18);
  if (!v19)
  {
    uint64_t v23 = v36;
    if ((v22 | v20))
    {
      uint64_t v24 = v32;
      v31(v32, v11, v36);
      swift_beginAccess();
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v15, v24, v23);
      swift_endAccess();
      uint64_t v25 = sub_259F68390();
      uint64_t v26 = (uint64_t)v34;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v34, 1, 1, v25);
      uint64_t v27 = v33 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store;
      swift_beginAccess();
      sub_259F16078(v26, v27);
      swift_endAccess();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v23);
      uint64_t v28 = v35;
      uint64_t result = swift_beginAccess();
      *(unsigned char *)(v28 + 24) = 1;
      return result;
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v11, v36);
}

uint64_t sub_259F62C30(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v27 = sub_259F68390();
  uint64_t v25 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_259F68460();
  uint64_t v22 = *(void *)(v10 - 8);
  uint64_t v23 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v24 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  BOOL v15 = *a1 == a2 && v13 == a3;
  if (v15 || (sub_259F68C70() & 1) != 0)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FAB78);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_259F6BA00;
    *(void *)(inited + 32) = v12;
    *(void *)(inited + 40) = v13;
    *(void *)(inited + 48) = a2;
    *(void *)(inited + 56) = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = inited;
  }
  unint64_t v18 = sub_259F21D74(v16);
  v26[0] = v12;
  v26[1] = v13;
  _OWORD v26[2] = v14;
  sub_259F628E0(v26, v18);
  swift_bridgeObjectRelease();
  if (!v4)
  {
    sub_259F160E0((uint64_t)v9);
    uint64_t v19 = v24;
    sub_259F68380();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v27);
    uint64_t v12 = sub_259F68450();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v23);
  }
  return v12;
}

uint64_t sub_259F62EEC()
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v0 + 24) = 0;
  return result;
}

uint64_t type metadata accessor for AutomaticProtobufFactory()
{
  return self;
}

uint64_t AutomaticProtobufFactory.__allocating_init(manifest:messageNameMap:allColumnsArePivots:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  AutomaticProtobufFactory.init(manifest:messageNameMap:allColumnsArePivots:)(a1, a2, a3);
  return v6;
}

uint64_t AutomaticProtobufFactory.__allocating_init(manifest:messageNameMap:columnsLayout:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  AutomaticProtobufFactory.init(manifest:messageNameMap:columnsLayout:)(a1, a2, a3);
  return v6;
}

uint64_t AutomaticProtobufFactory.__deallocating_deinit()
{
  swift_release();
  return MEMORY[0x270FA0228](v0, 26, 7);
}

uint64_t sub_259F6304C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_259F63068()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 176))();
}

uint64_t sub_259F630AC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_259F62C30(a1, a2, a3);
}

uint64_t sub_259F630D0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 24);
  return result;
}

uint64_t sub_259F63118(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 24) = v2;
  return result;
}

uint64_t method lookup function for AutomaticProtobufFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AutomaticProtobufFactory);
}

uint64_t dispatch thunk of AutomaticProtobufFactory.manifest.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of AutomaticProtobufFactory.messageNameMap.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of AutomaticProtobufFactory.manifestUpdated.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of AutomaticProtobufFactory.__allocating_init(manifest:messageNameMap:allColumnsArePivots:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of AutomaticProtobufFactory.__allocating_init(manifest:messageNameMap:columnsLayout:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of AutomaticProtobufFactory.makeFlatMessagePayload(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of AutomaticProtobufFactory.makeFlatMessagePayload(with:messageName:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of AutomaticProtobufFactory.resetUpdatedState()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t getEnumTagSinglePayload for AutomaticProtobufFactory.DrivenBy(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 2;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x259F63380);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 2;
  unsigned int v9 = (v7 + 2147483646) & 0x7FFFFFFF;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for AutomaticProtobufFactory.DrivenBy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v7 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x259F63468);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_259F63490(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

unsigned char *sub_259F634AC(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for AutomaticProtobufFactory.DrivenBy()
{
  return &type metadata for AutomaticProtobufFactory.DrivenBy;
}

uint64_t sub_259F634D4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA4C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_259F63534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_259F68DA0();
    sub_259F686E0();
    uint64_t v6 = sub_259F68DC0();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_259F68C70() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_259F68C70() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

id sub_259F63670(id result, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      uint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 5:
    case 6:
      uint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for JoinBlockError(uint64_t a1)
{
}

void sub_259F636DC(void *a1, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      swift_bridgeObjectRelease();
      break;
    case 5:
    case 6:

      break;
    default:
      return;
  }
}

uint64_t _s12PoirotBlocks14JoinBlockErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  int v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_259F63670(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for JoinBlockError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  int v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_259F63670(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_259F636DC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for JoinBlockError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  int v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_259F636DC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for JoinBlockError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 250);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 6) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JoinBlockError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 250;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JoinBlockError()
{
  return &type metadata for JoinBlockError;
}

void sub_259F638C0(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_259F638CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  *(void *)(v5 + 72) = 0;
  *(void *)(v5 + 80) = 0;
  *(void *)(v5 + 88) = 0;
  swift_retain();
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_259F26A9C(v9);
  swift_bridgeObjectRelease();
  *(void *)(v5 + 56) = v10;
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_259F26A9C(v11);
  swift_bridgeObjectRelease();
  *(void *)(v5 + 64) = v12;
  if (*(void *)(v10 + 16) < 2uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259F68960();
    swift_bridgeObjectRelease();
    strcpy((char *)v18, "Configured: ");
    BYTE5(v18[1]) = 0;
    HIWORD(v18[1]) = -5120;
    uint64_t v19 = *(void *)(*(void *)(v5 + 56) + 16);
    sub_259F68C20();
    sub_259F686F0();
    swift_bridgeObjectRelease();
    sub_259F686F0();
    uint64_t v13 = v18[1];
    sub_259F65D78();
    swift_allocError();
    char v15 = 0;
    *(void *)uint64_t v14 = v18[0];
LABEL_6:
    *(void *)(v14 + 8) = v13;
    *(unsigned char *)(v14 + 16) = v15;
    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259F5C748(*(void *)(v5 + 72), *(void *)(v5 + 80));
    swift_release();
    type metadata accessor for JoinBlock();
    swift_deallocPartialClassInstance();
    return v5;
  }
  if (!*(void *)(v12 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_259F68960();
    swift_bridgeObjectRelease();
    strcpy((char *)v18, "Configured: ");
    BYTE5(v18[1]) = 0;
    HIWORD(v18[1]) = -5120;
    uint64_t v19 = *(void *)(*(void *)(v5 + 64) + 16);
    sub_259F68C20();
    sub_259F686F0();
    swift_bridgeObjectRelease();
    sub_259F686F0();
    uint64_t v13 = v18[1];
    sub_259F65D78();
    swift_allocError();
    *(void *)uint64_t v14 = v18[0];
    char v15 = 1;
    goto LABEL_6;
  }
  swift_release();
  *(unsigned char *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = a1;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

void sub_259F63BC8(unint64_t *a1)
{
  sub_259F63C7C(a1);
  if (v1)
  {
    id v2 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA248);
    if (swift_dynamicCast())
    {
      sub_259F636DC(v4, v5, v6);
    }
    else
    {
      sub_259F65D78();
      swift_allocError();
      *(void *)uint64_t v3 = v1;
      *(void *)(v3 + 8) = 0;
      *(unsigned char *)(v3 + 16) = 5;
      swift_willThrow();
    }
  }
}

uint64_t sub_259F63C7C(unint64_t *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A3FAB90);
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v144 = &v123[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v141 = type metadata accessor for DatasetColumnDescription(0);
  uint64_t v5 = *(void *)(v141 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v141 - 8);
  v143 = &v123[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  unint64_t v135 = &v123[-v9];
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v145 = &v123[-v11];
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v123[-v13];
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v133 = &v123[-v16];
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  long long v132 = &v123[-v18];
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v140 = &v123[-v20];
  MEMORY[0x270FA5388](v19);
  uint64_t v142 = (uint64_t *)&v123[-v21];
  uint64_t v22 = (void *)sub_259F21B80(MEMORY[0x263F8EE78]);
  unint64_t v137 = v1;
  uint64_t v23 = v1[7];
  uint64_t v24 = *(void *)(v23 + 56);
  uint64_t v127 = v23 + 56;
  uint64_t v25 = 1 << *(unsigned char *)(v23 + 32);
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  else {
    uint64_t v26 = -1;
  }
  unint64_t v27 = v26 & v24;
  int64_t v128 = (unint64_t)(v25 + 63) >> 6;
  uint64_t v136 = (void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v125 = v5;
  unint64_t v134 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48);
  swift_bridgeObjectRetain();
  int64_t v28 = 0;
  uint64_t v124 = v23;
  uint64_t v126 = a1;
  while (1)
  {
    if (v27)
    {
      uint64_t v130 = (v27 - 1) & v27;
      int64_t v131 = v28;
      unint64_t v29 = __clz(__rbit64(v27)) | (v28 << 6);
    }
    else
    {
      int64_t v30 = v28 + 1;
      if (__OFADD__(v28, 1)) {
        goto LABEL_99;
      }
      if (v30 >= v128) {
        goto LABEL_96;
      }
      unint64_t v31 = *(void *)(v127 + 8 * v30);
      int64_t v32 = v28 + 1;
      if (!v31)
      {
        int64_t v32 = v28 + 2;
        if (v28 + 2 >= v128) {
          goto LABEL_96;
        }
        unint64_t v31 = *(void *)(v127 + 8 * v32);
        if (!v31)
        {
          int64_t v32 = v28 + 3;
          if (v28 + 3 >= v128) {
            goto LABEL_96;
          }
          unint64_t v31 = *(void *)(v127 + 8 * v32);
          if (!v31)
          {
            uint64_t v33 = v28 + 4;
            if (v28 + 4 >= v128) {
              goto LABEL_96;
            }
            unint64_t v31 = *(void *)(v127 + 8 * v33);
            if (!v31)
            {
              while (1)
              {
                int64_t v32 = v33 + 1;
                if (__OFADD__(v33, 1)) {
                  goto LABEL_100;
                }
                if (v32 >= v128) {
                  break;
                }
                unint64_t v31 = *(void *)(v127 + 8 * v32);
                ++v33;
                if (v31) {
                  goto LABEL_22;
                }
              }
LABEL_96:
              uint64_t v115 = a1;
              swift_release();
              uint64_t v116 = v137;
              uint64_t v118 = v137[4];
              uint64_t v117 = v137[5];
              swift_bridgeObjectRetain();
              size_t v119 = sub_259F33D50((uint64_t)v22);
              swift_bridgeObjectRelease();
              uint64_t v121 = v116[9];
              uint64_t v120 = v116[10];
              v116[9] = v118;
              v116[10] = v117;
              v116[11] = v119;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_259F5C748(v121, v120);
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              unint64_t v148 = *v115;
              *uint64_t v115 = 0x8000000000000000;
              sub_259F23F98(v118, v117, v119, v118, v117, isUniquelyReferenced_nonNull_native);
              *uint64_t v115 = v148;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              return swift_bridgeObjectRelease();
            }
            int64_t v32 = v28 + 4;
          }
        }
      }
LABEL_22:
      uint64_t v130 = (v31 - 1) & v31;
      int64_t v131 = v32;
      unint64_t v29 = __clz(__rbit64(v31)) + (v32 << 6);
    }
    char v34 = (uint64_t *)(*(void *)(v23 + 48) + 16 * v29);
    uint64_t v36 = *v34;
    uint64_t v35 = v34[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v37 = sub_259F17068(v36, v35);
    uint64_t v38 = (uint64_t *)a1;
    char v40 = v39;
    swift_bridgeObjectRelease();
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      unint64_t v148 = 0;
      unint64_t v149 = 0xE000000000000000;
      sub_259F68960();
      swift_bridgeObjectRelease();
      unint64_t v148 = 0xD000000000000015;
      unint64_t v149 = 0x8000000259F6AB80;
      sub_259F686F0();
      swift_bridgeObjectRelease();
      sub_259F686F0();
      unint64_t v112 = v148;
      unint64_t v113 = v149;
      sub_259F65D78();
      swift_allocError();
      *(void *)uint64_t v114 = v112;
      *(void *)(v114 + 8) = v113;
      *(unsigned char *)(v114 + 16) = 2;
      swift_willThrow();
      return swift_release();
    }
    int v41 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v42 = *v38;
    unint64_t v148 = *v38;
    *uint64_t v38 = 0x8000000000000000;
    if (!v41)
    {
      sub_259F25194();
      uint64_t v42 = v148;
    }
    swift_bridgeObjectRelease();
    uint64_t v43 = *(void *)(*(void *)(v42 + 56) + 24 * v37 + 16);
    sub_259F23300(v37, v42);
    *uint64_t v38 = v42;
    uint64_t v44 = v43;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v45 = *(void *)(v43 + 16);
    uint64_t v46 = (uint64_t)v140;
    uint64_t v139 = v45;
    if (v45) {
      break;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    a1 = v126;
    int64_t v28 = v131;
    unint64_t v27 = v130;
  }
  uint64_t v47 = v125;
  uint64_t v138 = v44 + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
  uint64_t v129 = v44;
  swift_bridgeObjectRetain();
  uint64_t v48 = 0;
  uint64_t v150 = *(void *)(v47 + 72);
  uint64_t v50 = v141;
  uint64_t v49 = v142;
  char v51 = v144;
  while (1)
  {
    sub_259F67C40(v138 + v150 * v48, (uint64_t)v49, type metadata accessor for DatasetColumnDescription);
    if (!v22[2]) {
      break;
    }
    uint64_t v54 = *v49;
    uint64_t v53 = v49[1];
    swift_bridgeObjectRetain();
    unint64_t v55 = sub_259F17068(v54, v53);
    if (v56)
    {
      char v51 = v144;
      sub_259F67C40(v22[7] + v55 * v150, (uint64_t)v144, type metadata accessor for DatasetColumnDescription);
      uint64_t v57 = 0;
    }
    else
    {
      uint64_t v57 = 1;
      char v51 = v144;
    }
    (*v136)(v51, v57, 1, v50);
    swift_bridgeObjectRelease();
    if ((*v134)(v51, 1, v50) == 1) {
      goto LABEL_37;
    }
    sub_259F1E52C((uint64_t)v51, v46);
    uint64_t v72 = v137[8];
    if (!*(void *)(v72 + 16)) {
      goto LABEL_92;
    }
    sub_259F68DA0();
    swift_bridgeObjectRetain();
    sub_259F686E0();
    uint64_t v73 = sub_259F68DC0();
    uint64_t v74 = -1 << *(unsigned char *)(v72 + 32);
    unint64_t v75 = v73 & ~v74;
    uint64_t v76 = v72 + 56;
    if (((*(void *)(v72 + 56 + ((v75 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v75) & 1) == 0) {
      goto LABEL_91;
    }
    uint64_t v77 = *(void *)(v72 + 48);
    int64_t v78 = (void *)(v77 + 16 * v75);
    BOOL v79 = *v78 == v54 && v78[1] == v53;
    if (!v79 && (sub_259F68C70() & 1) == 0)
    {
      uint64_t v80 = ~v74;
      while (1)
      {
        unint64_t v75 = (v75 + 1) & v80;
        if (((*(void *)(v76 + ((v75 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v75) & 1) == 0) {
          break;
        }
        uint64_t v81 = (void *)(v77 + 16 * v75);
        BOOL v82 = *v81 == v54 && v81[1] == v53;
        if (v82 || (sub_259F68C70() & 1) != 0) {
          goto LABEL_59;
        }
      }
LABEL_91:
      swift_bridgeObjectRelease();
      uint64_t v46 = (uint64_t)v140;
LABEL_92:
      unint64_t v148 = 0;
      unint64_t v149 = 0xE000000000000000;
      sub_259F68960();
      sub_259F686F0();
      sub_259F67C40(v46, (uint64_t)v14, type metadata accessor for DatasetColumnDescription);
      sub_259F686A0();
      sub_259F686F0();
      swift_bridgeObjectRelease();
      sub_259F686F0();
      uint64_t v105 = v142;
      sub_259F67C40((uint64_t)v142, (uint64_t)v14, type metadata accessor for DatasetColumnDescription);
      sub_259F686A0();
      sub_259F686F0();
      swift_bridgeObjectRelease();
      unint64_t v107 = v148;
      unint64_t v106 = v149;
      sub_259F65D78();
      swift_allocError();
      *(void *)uint64_t v108 = v107;
      char v109 = 4;
LABEL_94:
      *(void *)(v108 + 8) = v106;
      *(unsigned char *)(v108 + 16) = v109;
      swift_willThrow();
      sub_259F26B8C(v46);
      swift_bridgeObjectRelease();
      sub_259F26B8C((uint64_t)v105);
      swift_release();
      return swift_bridgeObjectRelease_n();
    }
LABEL_59:
    swift_bridgeObjectRelease();
    uint64_t v46 = (uint64_t)v140;
    if (v54 == *v140 && v53 == v140[1])
    {
      sub_259F67C40((uint64_t)v142, (uint64_t)v132, type metadata accessor for DatasetColumnDescription);
      sub_259F67C40(v46, (uint64_t)v133, type metadata accessor for DatasetColumnDescription);
    }
    else
    {
      char v84 = sub_259F68C70();
      int64_t v85 = v132;
      sub_259F67C40((uint64_t)v142, (uint64_t)v132, type metadata accessor for DatasetColumnDescription);
      uint64_t v86 = v133;
      uint64_t v87 = v85;
      sub_259F67C40(v46, (uint64_t)v133, type metadata accessor for DatasetColumnDescription);
      if ((v84 & 1) == 0) {
        goto LABEL_93;
      }
    }
    sub_259F68240();
    sub_259F67CA8(&qword_26A3FA758, MEMORY[0x263F5F010]);
    sub_259F68740();
    sub_259F68740();
    if (v148 == v146 && v149 == v147)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v50 = v141;
      uint64_t v86 = v133;
      uint64_t v87 = v132;
    }
    else
    {
      char v88 = sub_259F68C70();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v50 = v141;
      uint64_t v86 = v133;
      uint64_t v87 = v132;
      if ((v88 & 1) == 0)
      {
LABEL_93:
        sub_259F26B8C((uint64_t)v87);
        sub_259F26B8C((uint64_t)v86);
        unint64_t v148 = 0;
        unint64_t v149 = 0xE000000000000000;
        sub_259F68960();
        sub_259F686F0();
        sub_259F67C40(v46, (uint64_t)v14, type metadata accessor for DatasetColumnDescription);
        sub_259F686A0();
        sub_259F686F0();
        swift_bridgeObjectRelease();
        sub_259F686F0();
        uint64_t v105 = v142;
        sub_259F67C40((uint64_t)v142, (uint64_t)v14, type metadata accessor for DatasetColumnDescription);
        sub_259F686A0();
        sub_259F686F0();
        swift_bridgeObjectRelease();
        unint64_t v110 = v148;
        unint64_t v106 = v149;
        sub_259F65D78();
        swift_allocError();
        *(void *)uint64_t v108 = v110;
        char v109 = 3;
        goto LABEL_94;
      }
    }
    sub_259F26B8C((uint64_t)v87);
    sub_259F26B8C((uint64_t)v86);
    int v52 = (unsigned char *)v46;
    uint64_t v49 = v142;
    char v51 = v144;
LABEL_30:
    ++v48;
    sub_259F26B8C((uint64_t)v52);
    sub_259F26B8C((uint64_t)v49);
    if (v48 == v139)
    {
      swift_bridgeObjectRelease();
      uint64_t v23 = v124;
      goto LABEL_6;
    }
  }
  (*v136)(v51, 1, 1, v50);
LABEL_37:
  sub_259F17838((uint64_t)v51, (uint64_t *)&unk_26A3FAB90);
  sub_259F67C40((uint64_t)v49, (uint64_t)v14, type metadata accessor for DatasetColumnDescription);
  uint64_t v58 = *((void *)v14 + 1);
  uint64_t v59 = (uint64_t)v135;
  *unint64_t v135 = *(void *)v14;
  *(void *)(v59 + 8) = v58;
  *(unsigned char *)(v59 + 16) = v14[16];
  sub_259F67C40((uint64_t)&v14[*(int *)(v50 + 24)], v59 + *(int *)(v50 + 24), type metadata accessor for DatasetColumnType);
  char v60 = v14[*(int *)(v50 + 28)];
  swift_bridgeObjectRetain();
  sub_259F26B8C((uint64_t)v14);
  *(unsigned char *)(v59 + *(int *)(v50 + 28)) = v60;
  char v61 = v145;
  sub_259F1E52C(v59, (uint64_t)v145);
  uint64_t v62 = v137[8];
  uint64_t v63 = *(void *)v61;
  uint64_t v64 = *((void *)v61 + 1);
  if (*(void *)(v62 + 16))
  {
    sub_259F68DA0();
    swift_bridgeObjectRetain();
    sub_259F686E0();
    uint64_t v65 = sub_259F68DC0();
    uint64_t v66 = -1 << *(unsigned char *)(v62 + 32);
    unint64_t v67 = v65 & ~v66;
    uint64_t v68 = v62 + 56;
    if ((*(void *)(v62 + 56 + ((v67 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v67))
    {
      uint64_t v69 = *(void *)(v62 + 48);
      uint64_t v70 = (void *)(v69 + 16 * v67);
      BOOL v71 = *v70 == v63 && v70[1] == v64;
      if (v71 || (sub_259F68C70() & 1) != 0)
      {
LABEL_44:
        swift_bridgeObjectRelease();
        char v61 = v145;
        goto LABEL_81;
      }
      uint64_t v89 = ~v66;
      while (1)
      {
        unint64_t v67 = (v67 + 1) & v89;
        if (((*(void *)(v68 + ((v67 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v67) & 1) == 0) {
          break;
        }
        uint64_t v90 = (void *)(v69 + 16 * v67);
        BOOL v91 = *v90 == v63 && v90[1] == v64;
        if (v91 || (sub_259F68C70() & 1) != 0) {
          goto LABEL_44;
        }
      }
    }
    swift_bridgeObjectRelease();
    char v61 = v145;
  }
  v61[16] = 1;
LABEL_81:
  sub_259F67C40((uint64_t)v61, (uint64_t)v143, type metadata accessor for DatasetColumnDescription);
  swift_bridgeObjectRetain();
  int v92 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v148 = (unint64_t)v22;
  unint64_t v94 = sub_259F17068(v63, v64);
  uint64_t v95 = v22[2];
  BOOL v96 = (v93 & 1) == 0;
  uint64_t v97 = v95 + v96;
  if (!__OFADD__(v95, v96))
  {
    char v98 = v93;
    if (v22[3] >= v97)
    {
      char v51 = v144;
      if ((v92 & 1) == 0)
      {
        sub_259F253C0();
        char v51 = v144;
      }
      uint64_t v49 = v142;
      uint64_t v22 = (void *)v148;
      if ((v98 & 1) == 0)
      {
LABEL_89:
        v22[(v94 >> 6) + 8] |= 1 << v94;
        uint64_t v101 = (uint64_t *)(v22[6] + 16 * v94);
        uint64_t *v101 = v63;
        v101[1] = v64;
        sub_259F1E52C((uint64_t)v143, v22[7] + v94 * v150);
        uint64_t v102 = v22[2];
        BOOL v103 = __OFADD__(v102, 1);
        uint64_t v104 = v102 + 1;
        if (v103) {
          goto LABEL_98;
        }
        v22[2] = v104;
        swift_bridgeObjectRetain();
        goto LABEL_29;
      }
    }
    else
    {
      sub_259F18CC4(v97, v92);
      unint64_t v99 = sub_259F17068(v63, v64);
      if ((v98 & 1) != (v100 & 1)) {
        goto LABEL_101;
      }
      unint64_t v94 = v99;
      uint64_t v49 = v142;
      char v51 = v144;
      uint64_t v22 = (void *)v148;
      if ((v98 & 1) == 0) {
        goto LABEL_89;
      }
    }
    sub_259F38570((uint64_t)v143, v22[7] + v94 * v150);
LABEL_29:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v52 = v145;
    uint64_t v46 = (uint64_t)v140;
    uint64_t v50 = v141;
    goto LABEL_30;
  }
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  uint64_t result = sub_259F68D30();
  __break(1u);
  return result;
}

uint64_t sub_259F64C74(void **a1, uint64_t a2, uint64_t a3)
{
  sub_259F68820();
  if (!v3) {
    sub_259F655E4(a1, a2, a3);
  }
  return 1;
}

uint64_t sub_259F64D68()
{
  id v2 = v0;
  uint64_t v3 = sub_259F67D50();
  MEMORY[0x270FA5388](v3);
  sub_259F67D90();
  swift_allocObject();
  sub_259F67D80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA9C0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_259F6DB10;
  sub_259F67D40();
  sub_259F67D30();
  uint64_t v17 = (void *)v4;
  sub_259F67CA8((unint64_t *)&qword_26A3FA9C8, MEMORY[0x263F06130]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA9D0);
  sub_259F52C60();
  sub_259F68910();
  sub_259F67D60();
  uint64_t v5 = v2[10];
  if (!v5)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    goto LABEL_5;
  }
  uint64_t v6 = v2[9];
  uint64_t v7 = (void *)v2[11];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA4F0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_259F6BA00;
  uint64_t v9 = v2[4];
  uint64_t v10 = v2[5];
  uint64_t v15 = v9;
  uint64_t v17 = v7;
  swift_bridgeObjectRetain_n();
  uint64_t v16 = v6;
  sub_259F67B58(v6, v5);
  swift_bridgeObjectRetain();
  sub_259F65DEC(&v17);
  if (!v1)
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA1A0);
    sub_259F67B9C();
    uint64_t v11 = sub_259F67D70();
    uint64_t v13 = v12;
    swift_release();
    *(void *)(v8 + 32) = v15;
    *(void *)(v8 + 40) = v10;
    *(unsigned char *)(v8 + 48) = 0;
    *(void *)(v8 + 56) = v11;
    *(void *)(v8 + 64) = v13;
    sub_259F5C748(v16, v5);
LABEL_5:
    swift_release();
    return v8;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_259F6506C(uint64_t a1)
{
  uint64_t v3 = v1;
  v51[10] = *MEMORY[0x263EF8340];
  uint64_t v40 = sub_259F68190();
  uint64_t v39 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v38 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_259F681A0();
  uint64_t v49 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_259F68170();
  uint64_t v8 = *(void *)(v48 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v48);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v46 = v3;
  uint64_t v47 = (char *)&v35 - v12;
  uint64_t v14 = v3[4];
  uint64_t v13 = v3[5];
  uint64_t v15 = v3[8];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_259F33EA4(v15);
  swift_bridgeObjectRelease();
  v51[0] = (uint64_t)v16;
  sub_259F33CE0(v51);
  if (v2)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v17 = 0;
    swift_bridgeObjectRelease();
    uint64_t v37 = v13;
    uint64_t v18 = v13;
    uint64_t v19 = v51[0];
    sub_259F41B88(v14, v18, a1, (uint64_t)v11);
    uint64_t v20 = *(void *)(v19 + 16);
    uint64_t v21 = v48;
    uint64_t v36 = v14;
    if (v20)
    {
      uint64_t v42 = 0;
      uint64_t v43 = a1;
      uint64_t v44 = v8;
      LODWORD(v50) = *MEMORY[0x263F1BF08];
      uint64_t v22 = v49 + 104;
      uint64_t v49 = *(void *)(v49 + 104);
      uint64_t v41 = swift_retain();
      uint64_t v23 = v41 + 16 * v20 + 24;
      uint64_t v24 = v45;
      do
      {
        --v20;
        ((void (*)(char *, void, uint64_t))v49)(v7, v50, v24);
        sub_259F67B04();
        swift_bridgeObjectRetain();
        sub_259F68140();
        (*(void (**)(char *, uint64_t))(v22 - 96))(v7, v24);
        swift_bridgeObjectRelease();
        v23 -= 16;
      }
      while (v20);
      swift_release();
      uint64_t v21 = v48;
      uint64_t v8 = v44;
      uint64_t v17 = v42;
    }
    uint64_t v25 = v47;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v47, v11, v21);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v26 = sub_259F64D68();
    if (v17)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v25, v21);
    }
    else
    {
      uint64_t v50 = v26;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA4F0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_259F6BA00;
      uint64_t v28 = v37;
      swift_bridgeObjectRetain();
      unint64_t v29 = v38;
      sub_259F68180();
      uint64_t v30 = v21;
      uint64_t v32 = sub_259F680F0();
      uint64_t v34 = v33;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v40);
      *(void *)(inited + 32) = v36;
      *(void *)(inited + 40) = v28;
      *(unsigned char *)(inited + 48) = 1;
      *(void *)(inited + 56) = v32;
      *(void *)(inited + 64) = v34;
      v51[0] = v50;
      sub_259F2C90C(inited);
      uint64_t v21 = v51[0];
      (*(void (**)(char *, uint64_t))(v8 + 8))(v25, v30);
    }
    return v21;
  }
  return result;
}

uint64_t sub_259F655E4(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = v3;
  uint64_t v9 = *a1;
  v29[0] = (void *)MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_259F67818((uint64_t)v9, sub_259F65DCC, v6, v29);
  if (v4) {
    goto LABEL_2;
  }
  uint64_t v12 = v10;
  swift_bridgeObjectRelease();
  uint64_t v13 = v29[0];
  unint64_t v14 = *(void *)(v12 + 16);
  if (v14 > 1)
  {
    uint64_t v27 = a3;
    uint64_t v28 = v29[0];
    uint64_t v30 = MEMORY[0x263F8EE80];
    swift_bridgeObjectRetain_n();
    uint64_t v15 = (void **)(v12 + 48);
    do
    {
      uint64_t v16 = *(v15 - 1);
      uint64_t v17 = *v15;
      v29[0] = *(v15 - 2);
      v29[1] = v16;
      v29[2] = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_259F65994(&v30, (uint64_t)v29, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 += 3;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease_n();
    uint64_t v18 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29[0] = v28;
    uint64_t v19 = swift_bridgeObjectRetain();
    sub_259F2CBC8(v19);
    *a1 = v29[0];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v6;
    *(void *)(v21 + 24) = v18;
    uint64_t v22 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v27 + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    v22(sub_259F67AE8, v21, ObjectType, v27);
    swift_release();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v6 + 16) = 1;
    return 1;
  }
  *(unsigned char *)(v6 + 16) = 1;
  if (!*(void *)(v12 + 16))
  {
LABEL_2:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v12 + 16))
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)(v6 + 32);
  uint64_t v6 = *(void *)(v6 + 40);
  a3 = *(void *)(v12 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v23 = v13;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_16:
  }
    uint64_t v23 = sub_259F2E644(0, v13[2] + 1, 1, v13);
  unint64_t v25 = v23[2];
  unint64_t v24 = v23[3];
  if (v25 >= v24 >> 1) {
    uint64_t v23 = sub_259F2E644((void *)(v24 > 1), v25 + 1, 1, v23);
  }
  v23[2] = v25 + 1;
  uint64_t v26 = &v23[3 * v25];
  void v26[4] = v5;
  v26[5] = v6;
  v26[6] = a3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a1 = v23;
  return 1;
}

uint64_t sub_259F65938(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  LOBYTE(v4) = sub_259F63534(v3, v2, v4);
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_259F65994(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a3 + 40);
  uint64_t v26 = *(void *)(a3 + 32);
  uint64_t v7 = v26;
  uint64_t v27 = v6;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_259F674CC(v8, v26, v6, v5, 0);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v11 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v11 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA250);
    uint64_t v12 = sub_259F68AB0();
  }
  else
  {
    uint64_t v12 = MEMORY[0x263F8EE80];
  }
  v25[0] = v12;
  uint64_t v13 = swift_bridgeObjectRetain();
  sub_259F67104(v13, 1, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v25[0];
  uint64_t v15 = *a1;
  if (!*(void *)(*a1 + 16)) {
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_259F173B4(v7, v6, v14);
  if ((v17 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_10:
    uint64_t v23 = v6;
    uint64_t v24 = v7;
    goto LABEL_11;
  }
  uint64_t v18 = (uint64_t *)(*(void *)(v15 + 56) + 24 * v16);
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  uint64_t v21 = v18[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25[0] = v19;
  v25[1] = v20;
  void v25[2] = v21;
  sub_259F17EA0(v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = v26;
  uint64_t v23 = v27;
  uint64_t v5 = v28;
LABEL_11:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25[0] = *a1;
  *a1 = 0x8000000000000000;
  sub_259F24924(v24, v23, v5, v7, v6, v14, isUniquelyReferenced_nonNull_native);
  *a1 = v25[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_259F65C48(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_259F34074(a2);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_259F6506C((uint64_t)v3);
  swift_release();
  return v4;
}

uint64_t sub_259F65CBC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  return sub_259F5C748(v1, v2);
}

uint64_t sub_259F65CF8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259F5C748(*(void *)(v0 + 72), *(void *)(v0 + 80));
  return MEMORY[0x270FA0228](v0, 96, 7);
}

uint64_t type metadata accessor for JoinBlock()
{
  return self;
}

unint64_t sub_259F65D78()
{
  unint64_t result = qword_26A3FAB80;
  if (!qword_26A3FAB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAB80);
  }
  return result;
}

uint64_t sub_259F65DCC(uint64_t *a1)
{
  return sub_259F65938(a1, v1) & 1;
}

uint64_t sub_259F65DEC(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for DatasetColumnDescription(0) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_259F1D970(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_259F65E94(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_259F65E94(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DatasetColumnDescription(0);
  uint64_t v140 = *(void *)(v4 - 8);
  uint64_t v141 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v136 = (uint64_t)&v127 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v145 = (uint64_t)&v127 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v127 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v127 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  char v17 = (uint64_t *)((char *)&v127 - v16);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v138 = (uint64_t *)((char *)&v127 - v19);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v133 = (uint64_t *)((char *)&v127 - v21);
  MEMORY[0x270FA5388](v20);
  long long v132 = (uint64_t *)((char *)&v127 - v22);
  uint64_t v147 = a1;
  uint64_t v23 = a1[1];
  uint64_t result = sub_259F68C10();
  if (result >= v23)
  {
    if (v23 < 0) {
      goto LABEL_155;
    }
    if (v23) {
      return sub_259F66960(0, v23, 1, v147);
    }
    return result;
  }
  if (v23 >= 0) {
    uint64_t v25 = v23;
  }
  else {
    uint64_t v25 = v23 + 1;
  }
  if (v23 < -1) {
    goto LABEL_163;
  }
  v143 = v14;
  uint64_t v130 = result;
  if (v23 < 2)
  {
    unint64_t v29 = (char *)MEMORY[0x263F8EE78];
    unint64_t v139 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v140 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80));
    uint64_t v129 = MEMORY[0x263F8EE78];
    if (v23 != 1)
    {
      unint64_t v31 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_121:
      if (v31 >= 2)
      {
        uint64_t v120 = *v147;
        do
        {
          unint64_t v121 = v31 - 2;
          if (v31 < 2) {
            goto LABEL_150;
          }
          if (!v120) {
            goto LABEL_162;
          }
          uint64_t v122 = v29;
          uint64_t v123 = *(void *)&v29[16 * v121 + 32];
          uint64_t v124 = *(void *)&v29[16 * v31 + 24];
          sub_259F66BE4(v120 + *(void *)(v140 + 72) * v123, v120 + *(void *)(v140 + 72) * *(void *)&v29[16 * v31 + 16], v120 + *(void *)(v140 + 72) * v124, v139);
          if (v2) {
            break;
          }
          if (v124 < v123) {
            goto LABEL_151;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v122 = sub_259F1C894((uint64_t)v29);
          }
          if (v121 >= *((void *)v122 + 2)) {
            goto LABEL_152;
          }
          uint64_t v125 = &v122[16 * v121 + 32];
          *(void *)uint64_t v125 = v123;
          *((void *)v125 + 1) = v124;
          unint64_t v126 = *((void *)v122 + 2);
          if (v31 > v126) {
            goto LABEL_153;
          }
          memmove(&v122[16 * v31 + 16], &v122[16 * v31 + 32], 16 * (v126 - v31));
          *((void *)v122 + 2) = v126 - 1;
          unint64_t v31 = v126 - 1;
          unint64_t v29 = v122;
        }
        while (v126 > 2);
      }
LABEL_132:
      swift_bridgeObjectRelease();
      *(void *)(v129 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v26 = v25 >> 1;
    uint64_t v27 = sub_259F687C0();
    *(void *)(v27 + 16) = v26;
    uint64_t v28 = *(unsigned __int8 *)(v140 + 80);
    uint64_t v129 = v27;
    unint64_t v139 = v27 + ((v28 + 32) & ~v28);
  }
  uint64_t v30 = 0;
  unint64_t v29 = (char *)MEMORY[0x263F8EE78];
  uint64_t v142 = v11;
  int64_t v131 = v17;
  while (1)
  {
    uint64_t v32 = v30;
    if (v30 + 1 >= v23)
    {
      uint64_t v39 = v30 + 1;
    }
    else
    {
      uint64_t v33 = *v147;
      uint64_t v34 = *(void *)(v140 + 72);
      uint64_t v135 = v30 + 1;
      uint64_t v35 = v132;
      sub_259F67C40(v33 + v34 * (v30 + 1), (uint64_t)v132, type metadata accessor for DatasetColumnDescription);
      uint64_t v137 = v32;
      uint64_t v134 = v33;
      uint64_t v146 = v34;
      uint64_t v36 = v33 + v34 * v32;
      uint64_t v37 = v133;
      sub_259F67C40(v36, (uint64_t)v133, type metadata accessor for DatasetColumnDescription);
      if (*v35 == *v37 && v35[1] == v37[1]) {
        LODWORD(v144) = 0;
      }
      else {
        LODWORD(v144) = sub_259F68C70();
      }
      sub_259F26B8C((uint64_t)v133);
      sub_259F26B8C((uint64_t)v132);
      uint64_t v32 = v137;
      uint64_t v39 = v137 + 2;
      if (v137 + 2 < v23)
      {
        uint64_t v40 = v134;
        v135 *= v146;
        uint64_t v41 = v146 * v39;
        while (1)
        {
          uint64_t v42 = v23;
          uint64_t v43 = v39;
          uint64_t v44 = v138;
          sub_259F67C40(v40 + v41, (uint64_t)v138, type metadata accessor for DatasetColumnDescription);
          sub_259F67C40(v40 + v135, (uint64_t)v17, type metadata accessor for DatasetColumnDescription);
          BOOL v45 = *v44 == *v17 && v44[1] == v17[1];
          int v46 = v45 ? 0 : sub_259F68C70();
          sub_259F26B8C((uint64_t)v17);
          sub_259F26B8C((uint64_t)v138);
          uint64_t v23 = v42;
          if ((v144 ^ v46)) {
            break;
          }
          uint64_t v39 = v43 + 1;
          v40 += v146;
          if (v42 == v43 + 1)
          {
            uint64_t v39 = v42;
            goto LABEL_35;
          }
        }
        uint64_t v39 = v43;
LABEL_35:
        uint64_t v32 = v137;
      }
      uint64_t v47 = v134;
      if (v144)
      {
        if (v39 < v32) {
          goto LABEL_156;
        }
        if (v32 < v39)
        {
          uint64_t v135 = v23;
          int64_t v128 = v29;
          uint64_t v48 = 0;
          uint64_t v49 = v32;
          uint64_t v50 = v146 * (v39 - 1);
          uint64_t v51 = v39 * v146;
          uint64_t v52 = v49;
          uint64_t v53 = v49 * v146;
          do
          {
            if (v52 != v39 + v48 - 1)
            {
              if (!v47) {
                goto LABEL_161;
              }
              uint64_t v144 = v47 + v50;
              sub_259F1E52C(v47 + v53, v136);
              if (v53 < v50 || v47 + v53 >= (unint64_t)(v47 + v51))
              {
                uint64_t v54 = v144;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v54 = v144;
                if (v53 != v50) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_259F1E52C(v136, v54);
              uint64_t v47 = v134;
            }
            ++v52;
            --v48;
            v50 -= v146;
            v51 -= v146;
            v53 += v146;
          }
          while (v52 < v39 + v48);
          unint64_t v29 = v128;
          uint64_t v32 = v137;
          uint64_t v23 = v135;
        }
      }
    }
    if (v39 < v23)
    {
      if (__OFSUB__(v39, v32)) {
        goto LABEL_154;
      }
      if (v39 - v32 < v130) {
        break;
      }
    }
LABEL_73:
    if (v39 < v32) {
      goto LABEL_149;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v29 = sub_259F1C494(0, *((void *)v29 + 2) + 1, 1, v29);
    }
    unint64_t v70 = *((void *)v29 + 2);
    unint64_t v69 = *((void *)v29 + 3);
    unint64_t v31 = v70 + 1;
    uint64_t v146 = v39;
    if (v70 >= v69 >> 1) {
      unint64_t v29 = sub_259F1C494((char *)(v69 > 1), v70 + 1, 1, v29);
    }
    *((void *)v29 + 2) = v31;
    BOOL v71 = v29 + 32;
    uint64_t v72 = &v29[16 * v70 + 32];
    uint64_t v73 = v146;
    *(void *)uint64_t v72 = v32;
    *((void *)v72 + 1) = v73;
    if (v70)
    {
      while (1)
      {
        unint64_t v74 = v31 - 1;
        if (v31 >= 4)
        {
          BOOL v79 = &v71[16 * v31];
          uint64_t v80 = *((void *)v79 - 8);
          uint64_t v81 = *((void *)v79 - 7);
          BOOL v85 = __OFSUB__(v81, v80);
          uint64_t v82 = v81 - v80;
          if (v85) {
            goto LABEL_138;
          }
          uint64_t v84 = *((void *)v79 - 6);
          uint64_t v83 = *((void *)v79 - 5);
          BOOL v85 = __OFSUB__(v83, v84);
          uint64_t v77 = v83 - v84;
          char v78 = v85;
          if (v85) {
            goto LABEL_139;
          }
          unint64_t v86 = v31 - 2;
          uint64_t v87 = &v71[16 * v31 - 32];
          uint64_t v89 = *(void *)v87;
          uint64_t v88 = *((void *)v87 + 1);
          BOOL v85 = __OFSUB__(v88, v89);
          uint64_t v90 = v88 - v89;
          if (v85) {
            goto LABEL_141;
          }
          BOOL v85 = __OFADD__(v77, v90);
          uint64_t v91 = v77 + v90;
          if (v85) {
            goto LABEL_144;
          }
          if (v91 >= v82)
          {
            char v109 = &v71[16 * v74];
            uint64_t v111 = *(void *)v109;
            uint64_t v110 = *((void *)v109 + 1);
            BOOL v85 = __OFSUB__(v110, v111);
            uint64_t v112 = v110 - v111;
            if (v85) {
              goto LABEL_148;
            }
            BOOL v102 = v77 < v112;
            goto LABEL_110;
          }
        }
        else
        {
          if (v31 != 3)
          {
            uint64_t v103 = *((void *)v29 + 4);
            uint64_t v104 = *((void *)v29 + 5);
            BOOL v85 = __OFSUB__(v104, v103);
            uint64_t v96 = v104 - v103;
            char v97 = v85;
            goto LABEL_104;
          }
          uint64_t v76 = *((void *)v29 + 4);
          uint64_t v75 = *((void *)v29 + 5);
          BOOL v85 = __OFSUB__(v75, v76);
          uint64_t v77 = v75 - v76;
          char v78 = v85;
        }
        if (v78) {
          goto LABEL_140;
        }
        unint64_t v86 = v31 - 2;
        int v92 = &v71[16 * v31 - 32];
        uint64_t v94 = *(void *)v92;
        uint64_t v93 = *((void *)v92 + 1);
        BOOL v95 = __OFSUB__(v93, v94);
        uint64_t v96 = v93 - v94;
        char v97 = v95;
        if (v95) {
          goto LABEL_143;
        }
        char v98 = &v71[16 * v74];
        uint64_t v100 = *(void *)v98;
        uint64_t v99 = *((void *)v98 + 1);
        BOOL v85 = __OFSUB__(v99, v100);
        uint64_t v101 = v99 - v100;
        if (v85) {
          goto LABEL_146;
        }
        if (__OFADD__(v96, v101)) {
          goto LABEL_147;
        }
        if (v96 + v101 >= v77)
        {
          BOOL v102 = v77 < v101;
LABEL_110:
          if (v102) {
            unint64_t v74 = v86;
          }
          goto LABEL_112;
        }
LABEL_104:
        if (v97) {
          goto LABEL_142;
        }
        uint64_t v105 = &v71[16 * v74];
        uint64_t v107 = *(void *)v105;
        uint64_t v106 = *((void *)v105 + 1);
        BOOL v85 = __OFSUB__(v106, v107);
        uint64_t v108 = v106 - v107;
        if (v85) {
          goto LABEL_145;
        }
        if (v108 < v96) {
          goto LABEL_14;
        }
LABEL_112:
        unint64_t v113 = v74 - 1;
        if (v74 - 1 >= v31)
        {
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
          goto LABEL_158;
        }
        if (!*v147) {
          goto LABEL_160;
        }
        uint64_t v114 = v29;
        uint64_t v115 = &v71[16 * v113];
        uint64_t v116 = *(void *)v115;
        uint64_t v117 = &v71[16 * v74];
        uint64_t v118 = *((void *)v117 + 1);
        sub_259F66BE4(*v147 + *(void *)(v140 + 72) * *(void *)v115, *v147 + *(void *)(v140 + 72) * *(void *)v117, *v147 + *(void *)(v140 + 72) * v118, v139);
        if (v2) {
          goto LABEL_132;
        }
        if (v118 < v116) {
          goto LABEL_135;
        }
        if (v74 > *((void *)v114 + 2)) {
          goto LABEL_136;
        }
        *(void *)uint64_t v115 = v116;
        *(void *)&v71[16 * v113 + 8] = v118;
        unint64_t v119 = *((void *)v114 + 2);
        if (v74 >= v119) {
          goto LABEL_137;
        }
        unint64_t v29 = v114;
        unint64_t v31 = v119 - 1;
        memmove(&v71[16 * v74], v117 + 16, 16 * (v119 - 1 - v74));
        *((void *)v114 + 2) = v119 - 1;
        if (v119 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v31 = 1;
LABEL_14:
    uint64_t v23 = v147[1];
    uint64_t v30 = v146;
    char v17 = v131;
    if (v146 >= v23) {
      goto LABEL_121;
    }
  }
  if (__OFADD__(v32, v130)) {
    goto LABEL_157;
  }
  if (v32 + v130 >= v23) {
    uint64_t v55 = v23;
  }
  else {
    uint64_t v55 = v32 + v130;
  }
  if (v55 >= v32)
  {
    if (v39 != v55)
    {
      uint64_t v137 = v32;
      int64_t v128 = v29;
      uint64_t v134 = v2;
      uint64_t v135 = v55;
      uint64_t v56 = *(void *)(v140 + 72);
      uint64_t v146 = v56 * (v39 - 1);
      uint64_t v144 = v56;
      uint64_t v57 = v39 * v56;
      do
      {
        uint64_t v58 = 0;
        uint64_t v59 = v137;
        while (1)
        {
          uint64_t v60 = v39;
          uint64_t v61 = *v147;
          uint64_t v62 = v143;
          sub_259F67C40(v57 + v58 + *v147, (uint64_t)v143, type metadata accessor for DatasetColumnDescription);
          uint64_t v63 = v146 + v58 + v61;
          uint64_t v64 = v142;
          sub_259F67C40(v63, (uint64_t)v142, type metadata accessor for DatasetColumnDescription);
          if (*v62 == *v64 && v62[1] == v64[1]) {
            break;
          }
          char v66 = sub_259F68C70();
          sub_259F26B8C((uint64_t)v64);
          sub_259F26B8C((uint64_t)v62);
          if ((v66 & 1) == 0) {
            goto LABEL_61;
          }
          uint64_t v67 = *v147;
          if (!*v147) {
            goto LABEL_159;
          }
          uint64_t v39 = v60;
          uint64_t v68 = v67 + v146 + v58;
          sub_259F1E52C(v67 + v57 + v58, v145);
          swift_arrayInitWithTakeFrontToBack();
          sub_259F1E52C(v145, v68);
          v58 -= v144;
          if (v60 == ++v59) {
            goto LABEL_62;
          }
        }
        sub_259F26B8C((uint64_t)v64);
        sub_259F26B8C((uint64_t)v62);
LABEL_61:
        uint64_t v39 = v60;
LABEL_62:
        ++v39;
        v146 += v144;
        v57 += v144;
      }
      while (v39 != v135);
      uint64_t v39 = v135;
      uint64_t v2 = v134;
      unint64_t v29 = v128;
      uint64_t v32 = v137;
    }
    goto LABEL_73;
  }
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  uint64_t result = sub_259F68A70();
  __break(1u);
  return result;
}

uint64_t sub_259F66960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v31 = a4;
  uint64_t v26 = a1;
  uint64_t v27 = type metadata accessor for DatasetColumnDescription(0);
  uint64_t v6 = MEMORY[0x270FA5388](v27);
  uint64_t v30 = (uint64_t)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (uint64_t *)((char *)&v24 - v9);
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v14 = (uint64_t *)((char *)&v24 - v13);
  uint64_t v29 = a3;
  uint64_t v25 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v32 = v15 * (v29 - 1);
    uint64_t v28 = v15;
    uint64_t v16 = v15 * v29;
LABEL_6:
    uint64_t v17 = 0;
    uint64_t v18 = v26;
    while (1)
    {
      uint64_t v19 = *v31;
      sub_259F67C40(v16 + v17 + *v31, (uint64_t)v14, type metadata accessor for DatasetColumnDescription);
      sub_259F67C40(v32 + v17 + v19, (uint64_t)v10, type metadata accessor for DatasetColumnDescription);
      if (*v14 == *v10 && v14[1] == v10[1])
      {
        sub_259F26B8C((uint64_t)v10);
        uint64_t result = sub_259F26B8C((uint64_t)v14);
LABEL_5:
        v32 += v28;
        v16 += v28;
        if (++v29 == v25) {
          return result;
        }
        goto LABEL_6;
      }
      char v21 = sub_259F68C70();
      sub_259F26B8C((uint64_t)v10);
      uint64_t result = sub_259F26B8C((uint64_t)v14);
      if ((v21 & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v22 = *v31;
      if (!*v31) {
        break;
      }
      uint64_t v23 = v22 + v32 + v17;
      sub_259F1E52C(v22 + v16 + v17, v30);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_259F1E52C(v30, v23);
      v17 -= v28;
      if (v29 == ++v18) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_259F66BE4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v45 = type metadata accessor for DatasetColumnDescription(0);
  uint64_t v8 = MEMORY[0x270FA5388](v45);
  uint64_t v10 = (uint64_t *)((char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (uint64_t *)((char *)&v43 - v12);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (uint64_t *)((char *)&v43 - v15);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (uint64_t *)((char *)&v43 - v17);
  uint64_t v20 = *(void *)(v19 + 72);
  if (!v20)
  {
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  unint64_t v21 = a1;
  if (a2 - a1 == 0x8000000000000000 && v20 == -1) {
    goto LABEL_72;
  }
  int64_t v22 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v20 == -1) {
    goto LABEL_73;
  }
  uint64_t v23 = (uint64_t)(a2 - a1) / v20;
  unint64_t v48 = a1;
  unint64_t v47 = a4;
  uint64_t v24 = v22 / v20;
  if (v23 >= v22 / v20)
  {
    if ((v24 & 0x8000000000000000) == 0)
    {
      unint64_t v44 = a1;
      uint64_t v26 = v24 * v20;
      if (a4 < a2 || a2 + v26 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v34 = a4 + v26;
      unint64_t v46 = a4 + v26;
      unint64_t v48 = a2;
      if (v26 >= 1 && v44 < a2)
      {
        uint64_t v36 = -v20;
        do
        {
          sub_259F67C40(v34 + v36, (uint64_t)v13, type metadata accessor for DatasetColumnDescription);
          unint64_t v37 = a2 + v36;
          sub_259F67C40(a2 + v36, (uint64_t)v10, type metadata accessor for DatasetColumnDescription);
          if (*v13 == *v10 && v13[1] == v10[1]) {
            char v39 = 0;
          }
          else {
            char v39 = sub_259F68C70();
          }
          unint64_t v40 = a3 + v36;
          sub_259F26B8C((uint64_t)v10);
          sub_259F26B8C((uint64_t)v13);
          if (v39)
          {
            if (a3 < a2 || v40 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v48 += v36;
          }
          else
          {
            unint64_t v41 = v46;
            v46 += v36;
            if (a3 < v41 || v40 >= v41)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v41)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v37 = a2;
          }
          unint64_t v34 = v46;
          if (v46 <= a4) {
            break;
          }
          a2 = v37;
          a3 += v36;
        }
        while (v37 > v44);
      }
LABEL_70:
      sub_259F1C738(&v48, &v47, (uint64_t *)&v46);
      return 1;
    }
  }
  else if ((v23 & 0x8000000000000000) == 0)
  {
    uint64_t v25 = v23 * v20;
    if (a4 < v21 || v21 + v25 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v21)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v27 = a4 + v25;
    unint64_t v46 = a4 + v25;
    if (v25 >= 1 && a2 < a3)
    {
      while (1)
      {
        sub_259F67C40(a2, (uint64_t)v18, type metadata accessor for DatasetColumnDescription);
        sub_259F67C40(a4, (uint64_t)v16, type metadata accessor for DatasetColumnDescription);
        if (*v18 == *v16 && v18[1] == v16[1]) {
          break;
        }
        char v30 = sub_259F68C70();
        sub_259F26B8C((uint64_t)v16);
        sub_259F26B8C((uint64_t)v18);
        if ((v30 & 1) == 0) {
          goto LABEL_32;
        }
        unint64_t v31 = v48;
        unint64_t v32 = a2 + v20;
        if (v48 < a2 || v48 >= v32)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v48 == a2)
        {
          unint64_t v31 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_38:
        unint64_t v48 = v31 + v20;
        a4 = v47;
        if (v47 < v27)
        {
          a2 = v32;
          if (v32 < a3) {
            continue;
          }
        }
        goto LABEL_70;
      }
      sub_259F26B8C((uint64_t)v16);
      sub_259F26B8C((uint64_t)v18);
LABEL_32:
      unint64_t v31 = v48;
      unint64_t v33 = v47 + v20;
      if (v48 < v47 || v48 >= v33)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v48 != v47)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v47 = v33;
      unint64_t v32 = a2;
      goto LABEL_38;
    }
    goto LABEL_70;
  }
LABEL_74:
  uint64_t result = sub_259F68AC0();
  __break(1u);
  return result;
}

void sub_259F67104(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  sub_259F136C0(a1 + 32, (uint64_t)&v44);
  uint64_t v7 = v44;
  uint64_t v8 = v45;
  uint64_t v42 = v44;
  uint64_t v43 = v45;
  sub_259F13728(v46, (uint64_t)v41);
  uint64_t v9 = (void *)*a3;
  unint64_t v11 = sub_259F17068(v7, v8);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_23;
  }
  char v15 = v10;
  if (v9[3] >= v14)
  {
    if (a2)
    {
      if (v10) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_259F24F88();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v20 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    unint64_t v21 = (uint64_t *)(v20[6] + 16 * v11);
    *unint64_t v21 = v7;
    v21[1] = v8;
    sub_259F13728(v41, v20[7] + 40 * v11);
    uint64_t v22 = v20[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v20[2] = v24;
    uint64_t v25 = v4 - 1;
    if (!v25)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v26 = a1 + 88;
    while (1)
    {
      sub_259F136C0(v26, (uint64_t)&v44);
      uint64_t v27 = v44;
      uint64_t v28 = v45;
      uint64_t v42 = v44;
      uint64_t v43 = v45;
      sub_259F13728(v46, (uint64_t)v41);
      uint64_t v29 = (void *)*a3;
      unint64_t v30 = sub_259F17068(v27, v28);
      uint64_t v32 = v29[2];
      BOOL v33 = (v31 & 1) == 0;
      BOOL v23 = __OFADD__(v32, v33);
      uint64_t v34 = v32 + v33;
      if (v23) {
        break;
      }
      char v35 = v31;
      if (v29[3] < v34)
      {
        sub_259F18638(v34, 1);
        unint64_t v30 = sub_259F17068(v27, v28);
        if ((v35 & 1) != (v36 & 1)) {
          goto LABEL_25;
        }
      }
      if (v35) {
        goto LABEL_10;
      }
      unint64_t v37 = (void *)*a3;
      *(void *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
      uint64_t v38 = (uint64_t *)(v37[6] + 16 * v30);
      *uint64_t v38 = v27;
      v38[1] = v28;
      sub_259F13728(v41, v37[7] + 40 * v30);
      uint64_t v39 = v37[2];
      BOOL v23 = __OFADD__(v39, 1);
      uint64_t v40 = v39 + 1;
      if (v23) {
        goto LABEL_24;
      }
      void v37[2] = v40;
      v26 += 56;
      if (!--v25) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_259F18638(v14, a2 & 1);
  unint64_t v16 = sub_259F17068(v7, v8);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v18 = (void *)swift_allocError();
    swift_willThrow();
    id v47 = v18;
    id v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A3FA248);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_259F68D30();
  __break(1u);
LABEL_26:
  sub_259F68960();
  sub_259F686F0();
  sub_259F68A10();
  sub_259F686F0();
  sub_259F68A80();
  __break(1u);
}

uint64_t sub_259F674CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v8 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a1 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v45 = &v42;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  BOOL v33 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v14 << 6);
      goto LABEL_21;
    }
    int64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v12) {
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v14;
    if (!v18)
    {
      int64_t v14 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_37;
      }
      unint64_t v18 = *(void *)(v8 + 8 * v14);
      if (!v18)
      {
        int64_t v14 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_37;
        }
        unint64_t v18 = *(void *)(v8 + 8 * v14);
        if (!v18)
        {
          int64_t v14 = v17 + 3;
          if (v17 + 3 >= v12) {
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v8 + 8 * v14);
          if (!v18)
          {
            int64_t v19 = v17 + 4;
            if (v19 >= v12)
            {
LABEL_37:
              swift_release();
              return (uint64_t)v33;
            }
            unint64_t v18 = *(void *)(v8 + 8 * v19);
            int64_t v14 = v19;
            if (!v18) {
              break;
            }
          }
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_21:
    uint64_t v20 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    if (!*(void *)(a4 + 16))
    {
      uint64_t v40 = 0;
      long long v38 = 0u;
      long long v39 = 0u;
      swift_bridgeObjectRetain();
      goto LABEL_33;
    }
    swift_bridgeObjectRetain_n();
    unint64_t v23 = sub_259F17068(v21, v22);
    if (v24)
    {
      sub_259F13740(*(void *)(a4 + 56) + 40 * v23, (uint64_t)&v38);
    }
    else
    {
      uint64_t v40 = 0;
      long long v38 = 0u;
      long long v39 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v39 + 1))
    {
      sub_259F13728(&v38, (uint64_t)&v34);
      *(void *)&long long v41 = v21;
      *((void *)&v41 + 1) = v22;
      sub_259F13728(&v34, (uint64_t)v45);
      if (*((void *)&v41 + 1)) {
        goto LABEL_28;
      }
LABEL_35:
      uint64_t result = sub_259F17838((uint64_t)&v41, &qword_26A3FA898);
    }
    else
    {
LABEL_33:
      sub_259F17838((uint64_t)&v38, &qword_26A3FA270);
      if ((a5 & 1) == 0)
      {
        sub_259F13868();
        swift_allocError();
        *(void *)uint64_t v32 = v21;
        *(void *)(v32 + 8) = v22;
        *(unsigned char *)(v32 + 16) = 0;
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_release();
        return (uint64_t)v33;
      }
      uint64_t v44 = 0;
      long long v42 = 0u;
      long long v43 = 0u;
      long long v41 = 0u;
      swift_bridgeObjectRelease();
      if (!*((void *)&v41 + 1)) {
        goto LABEL_35;
      }
LABEL_28:
      long long v34 = v41;
      long long v35 = v42;
      long long v36 = v43;
      uint64_t v37 = v44;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if (result)
      {
        uint64_t v25 = v33;
      }
      else
      {
        uint64_t result = (uint64_t)sub_259F2EAD8(0, v33[2] + 1, 1, v33);
        uint64_t v25 = (void *)result;
      }
      unint64_t v27 = v25[2];
      unint64_t v26 = v25[3];
      if (v27 >= v26 >> 1)
      {
        uint64_t result = (uint64_t)sub_259F2EAD8((void *)(v26 > 1), v27 + 1, 1, v25);
        uint64_t v25 = (void *)result;
      }
      void v25[2] = v27 + 1;
      BOOL v33 = v25;
      uint64_t v28 = &v25[7 * v27];
      long long v29 = v34;
      long long v30 = v35;
      long long v31 = v36;
      v28[10] = v37;
      *((_OWORD *)v28 + 3) = v30;
      *((_OWORD *)v28 + 4) = v31;
      *((_OWORD *)v28 + 2) = v29;
    }
  }
  while (1)
  {
    int64_t v14 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v14 >= v12) {
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_20;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_259F67818(uint64_t result, uint64_t (*a2)(uint64_t *), uint64_t a3, void **a4)
{
  uint64_t v5 = result;
  uint64_t v6 = *(void *)(result + 16);
  if (v6)
  {
    unint64_t v7 = 0;
    uint64_t v8 = result + 40;
    uint64_t v9 = MEMORY[0x263F8EE78];
    uint64_t v24 = *(void *)(result + 16);
    uint64_t v25 = result;
    uint64_t v22 = result + 40;
    do
    {
      uint64_t v23 = v9;
      uint64_t v10 = (_OWORD *)(v8 + 24 * v7);
      unint64_t v11 = v7;
      while (1)
      {
        if (v11 >= *(void *)(v5 + 16))
        {
          __break(1u);
          return result;
        }
        uint64_t v12 = *((void *)v10 - 1);
        long long v28 = *v10;
        uint64_t v29 = v12;
        long long v30 = v28;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v13 = a2(&v29);
        if (v4)
        {
          uint64_t v9 = v23;
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_21;
        }
        if (v13) {
          break;
        }
        int64_t v14 = *a4;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a4 = v14;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          int64_t v14 = sub_259F2E644(0, v14[2] + 1, 1, v14);
          *a4 = v14;
        }
        unint64_t v17 = v14[2];
        unint64_t v16 = v14[3];
        if (v17 >= v16 >> 1)
        {
          int64_t v14 = sub_259F2E644((void *)(v16 > 1), v17 + 1, 1, v14);
          *a4 = v14;
        }
        ++v11;
        v14[2] = v17 + 1;
        unint64_t v18 = &v14[3 * v17];
        void v18[4] = v12;
        *(_OWORD *)(v18 + 5) = v28;
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v10 = (_OWORD *)((char *)v10 + 24);
        uint64_t v5 = v25;
        if (v24 == v11)
        {
          uint64_t v9 = v23;
          goto LABEL_21;
        }
      }
      uint64_t v9 = v23;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v31 = v23;
      if ((result & 1) == 0)
      {
        uint64_t result = sub_259F1C8C8(0, *(void *)(v23 + 16) + 1, 1);
        uint64_t v9 = v31;
      }
      unint64_t v20 = *(void *)(v9 + 16);
      unint64_t v19 = *(void *)(v9 + 24);
      if (v20 >= v19 >> 1)
      {
        uint64_t result = sub_259F1C8C8(v19 > 1, v20 + 1, 1);
        uint64_t v9 = v31;
      }
      unint64_t v7 = v11 + 1;
      *(void *)(v9 + 16) = v20 + 1;
      uint64_t v21 = v9 + 24 * v20;
      *(void *)(v21 + 32) = v12;
      *(_OWORD *)(v21 + 40) = v28;
      uint64_t v8 = v22;
    }
    while (v6 - 1 != v11);
  }
  else
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
  }
LABEL_21:
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_259F67AA8()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_259F67AE8()
{
  return sub_259F65C48(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_259F67B04()
{
  unint64_t result = qword_26A3FAB88;
  if (!qword_26A3FAB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FAB88);
  }
  return result;
}

uint64_t sub_259F67B58(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_259F67B9C()
{
  unint64_t result = qword_26A3FA1C0;
  if (!qword_26A3FA1C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A3FA1A0);
    sub_259F67CA8(&qword_26A3FA1C8, (void (*)(uint64_t))type metadata accessor for DatasetColumnDescription);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A3FA1C0);
  }
  return result;
}

uint64_t sub_259F67C40(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_259F67CA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_259F67CF0()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_259F67D00()
{
  return MEMORY[0x270EEDDE8]();
}

uint64_t sub_259F67D10()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_259F67D20()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_259F67D30()
{
  return MEMORY[0x270EEDE28]();
}

uint64_t sub_259F67D40()
{
  return MEMORY[0x270EEDE38]();
}

uint64_t sub_259F67D50()
{
  return MEMORY[0x270EEDE58]();
}

uint64_t sub_259F67D60()
{
  return MEMORY[0x270EEDE70]();
}

uint64_t sub_259F67D70()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_259F67D80()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_259F67D90()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_259F67DA0()
{
  return MEMORY[0x270EEE188]();
}

uint64_t sub_259F67DB0()
{
  return MEMORY[0x270EEE258]();
}

uint64_t sub_259F67DC0()
{
  return MEMORY[0x270EEE920]();
}

uint64_t sub_259F67DD0()
{
  return MEMORY[0x270EEE930]();
}

uint64_t sub_259F67DE0()
{
  return MEMORY[0x270EEE950]();
}

uint64_t sub_259F67DF0()
{
  return MEMORY[0x270EEEEF0]();
}

uint64_t sub_259F67E00()
{
  return MEMORY[0x270EEEFF8]();
}

uint64_t sub_259F67E10()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_259F67E20()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_259F67E30()
{
  return MEMORY[0x270EEFA18]();
}

uint64_t sub_259F67E40()
{
  return MEMORY[0x270EEFBB0]();
}

uint64_t sub_259F67E50()
{
  return MEMORY[0x270EEFBC0]();
}

uint64_t sub_259F67E60()
{
  return MEMORY[0x270EEFBD0]();
}

uint64_t sub_259F67E70()
{
  return MEMORY[0x270EEFC10]();
}

uint64_t sub_259F67E80()
{
  return MEMORY[0x270EEFC48]();
}

uint64_t sub_259F67E90()
{
  return MEMORY[0x270EEFC58]();
}

uint64_t sub_259F67EA0()
{
  return MEMORY[0x270EEFC88]();
}

uint64_t sub_259F67EB0()
{
  return MEMORY[0x270EEFCE0]();
}

uint64_t sub_259F67EC0()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_259F67ED0()
{
  return MEMORY[0x270EEFD58]();
}

uint64_t sub_259F67EE0()
{
  return MEMORY[0x270EEFD78]();
}

uint64_t sub_259F67EF0()
{
  return MEMORY[0x270EEFD90]();
}

uint64_t sub_259F67F00()
{
  return MEMORY[0x270EEFE68]();
}

uint64_t sub_259F67F10()
{
  return MEMORY[0x270EEFF40]();
}

uint64_t sub_259F67F20()
{
  return MEMORY[0x270EEFF58]();
}

uint64_t sub_259F67F30()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_259F67F40()
{
  return MEMORY[0x270EEFFC8]();
}

uint64_t sub_259F67F50()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_259F67F60()
{
  return MEMORY[0x270EF0130]();
}

uint64_t sub_259F67F70()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_259F67F80()
{
  return MEMORY[0x270EF01C0]();
}

uint64_t sub_259F67F90()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_259F67FA0()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_259F67FB0()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_259F67FC0()
{
  return MEMORY[0x270F54FC0]();
}

uint64_t sub_259F67FD0()
{
  return MEMORY[0x270F54FD0]();
}

uint64_t sub_259F67FE0()
{
  return MEMORY[0x270F54FD8]();
}

uint64_t sub_259F67FF0()
{
  return MEMORY[0x270F54FE0]();
}

uint64_t sub_259F68000()
{
  return MEMORY[0x270F54FE8]();
}

uint64_t sub_259F68010()
{
  return MEMORY[0x270F54FF8]();
}

uint64_t sub_259F68020()
{
  return MEMORY[0x270F55000]();
}

uint64_t sub_259F68030()
{
  return MEMORY[0x270F55010]();
}

uint64_t sub_259F68040()
{
  return MEMORY[0x270F55020]();
}

uint64_t sub_259F68050()
{
  return MEMORY[0x270F55030]();
}

uint64_t sub_259F68060()
{
  return MEMORY[0x270F55038]();
}

uint64_t sub_259F68070()
{
  return MEMORY[0x270F55050]();
}

uint64_t sub_259F68080()
{
  return MEMORY[0x270F55058]();
}

uint64_t sub_259F68090()
{
  return MEMORY[0x270F55068]();
}

uint64_t sub_259F680A0()
{
  return MEMORY[0x270F55078]();
}

uint64_t sub_259F680B0()
{
  return MEMORY[0x270F55080]();
}

uint64_t sub_259F680C0()
{
  return MEMORY[0x270F55090]();
}

uint64_t sub_259F680D0()
{
  return MEMORY[0x270F55098]();
}

uint64_t sub_259F680E0()
{
  return MEMORY[0x270F550A0]();
}

uint64_t sub_259F680F0()
{
  return MEMORY[0x270F05818]();
}

uint64_t sub_259F68100()
{
  return MEMORY[0x270F058A0]();
}

uint64_t sub_259F68110()
{
  return MEMORY[0x270F058A8]();
}

uint64_t sub_259F68120()
{
  return MEMORY[0x270F058C8]();
}

uint64_t sub_259F68130()
{
  return MEMORY[0x270F058D8]();
}

uint64_t sub_259F68140()
{
  return MEMORY[0x270F058E8]();
}

uint64_t sub_259F68150()
{
  return MEMORY[0x270F05960]();
}

uint64_t sub_259F68160()
{
  return MEMORY[0x270F05968]();
}

uint64_t sub_259F68170()
{
  return MEMORY[0x270F05988]();
}

uint64_t sub_259F68180()
{
  return MEMORY[0x270F05A08]();
}

uint64_t sub_259F68190()
{
  return MEMORY[0x270F05A10]();
}

uint64_t sub_259F681A0()
{
  return MEMORY[0x270F05A48]();
}

uint64_t sub_259F681B0()
{
  return MEMORY[0x270F05A50]();
}

uint64_t sub_259F681C0()
{
  return MEMORY[0x270F05A60]();
}

uint64_t sub_259F681D0()
{
  return MEMORY[0x270F05A98]();
}

uint64_t sub_259F681E0()
{
  return MEMORY[0x270F05AA0]();
}

uint64_t sub_259F681F0()
{
  return MEMORY[0x270F05B18]();
}

uint64_t sub_259F68200()
{
  return MEMORY[0x270F05B28]();
}

uint64_t sub_259F68210()
{
  return MEMORY[0x270F549A8]();
}

uint64_t sub_259F68220()
{
  return MEMORY[0x270F549B0]();
}

uint64_t _s12PoirotBlocks17DatasetColumnTypeV11descriptionSSvg_0()
{
  return MEMORY[0x270F549B8]();
}

uint64_t sub_259F68240()
{
  return MEMORY[0x270F549C0]();
}

uint64_t sub_259F68250()
{
  return MEMORY[0x270F54A00]();
}

uint64_t sub_259F68270()
{
  return MEMORY[0x270F54A10]();
}

uint64_t sub_259F68280()
{
  return MEMORY[0x270F54A38]();
}

uint64_t sub_259F68290()
{
  return MEMORY[0x270F54A70]();
}

uint64_t sub_259F682A0()
{
  return MEMORY[0x270F54A78]();
}

uint64_t sub_259F682B0()
{
  return MEMORY[0x270F54A80]();
}

uint64_t sub_259F682C0()
{
  return MEMORY[0x270F54A98]();
}

uint64_t sub_259F682D0()
{
  return MEMORY[0x270F54AA0]();
}

uint64_t sub_259F682E0()
{
  return MEMORY[0x270F54BC0]();
}

uint64_t sub_259F682F0()
{
  return MEMORY[0x270F54BD0]();
}

uint64_t sub_259F68300()
{
  return MEMORY[0x270F54BF8]();
}

uint64_t sub_259F68310()
{
  return MEMORY[0x270F54C00]();
}

uint64_t sub_259F68320()
{
  return MEMORY[0x270F54C78]();
}

uint64_t sub_259F68330()
{
  return MEMORY[0x270F54C80]();
}

uint64_t sub_259F68340()
{
  return MEMORY[0x270F54CB0]();
}

uint64_t sub_259F68350()
{
  return MEMORY[0x270F54CB8]();
}

uint64_t sub_259F68360()
{
  return MEMORY[0x270F54CC8]();
}

uint64_t sub_259F68370()
{
  return MEMORY[0x270F54D00]();
}

uint64_t sub_259F68380()
{
  return MEMORY[0x270F54D38]();
}

uint64_t sub_259F68390()
{
  return MEMORY[0x270F54D48]();
}

uint64_t sub_259F683A0()
{
  return MEMORY[0x270F54D50]();
}

uint64_t sub_259F683B0()
{
  return MEMORY[0x270F54D58]();
}

uint64_t sub_259F683C0()
{
  return MEMORY[0x270F54D60]();
}

uint64_t sub_259F683D0()
{
  return MEMORY[0x270F54D68]();
}

uint64_t sub_259F683E0()
{
  return MEMORY[0x270F54D70]();
}

uint64_t sub_259F683F0()
{
  return MEMORY[0x270F54D78]();
}

uint64_t sub_259F68400()
{
  return MEMORY[0x270F54D80]();
}

uint64_t sub_259F68410()
{
  return MEMORY[0x270F54DA0]();
}

uint64_t sub_259F68420()
{
  return MEMORY[0x270F54DA8]();
}

uint64_t sub_259F68430()
{
  return MEMORY[0x270F54DB0]();
}

uint64_t sub_259F68440()
{
  return MEMORY[0x270F54DB8]();
}

uint64_t sub_259F68450()
{
  return MEMORY[0x270F54DC0]();
}

uint64_t sub_259F68460()
{
  return MEMORY[0x270F54DD8]();
}

uint64_t sub_259F68470()
{
  return MEMORY[0x270F54DE0]();
}

uint64_t sub_259F68480()
{
  return MEMORY[0x270F54DE8]();
}

uint64_t sub_259F68490()
{
  return MEMORY[0x270F54DF0]();
}

uint64_t sub_259F684A0()
{
  return MEMORY[0x270F54DF8]();
}

uint64_t sub_259F684B0()
{
  return MEMORY[0x270F54E08]();
}

uint64_t sub_259F684C0()
{
  return MEMORY[0x270F54E10]();
}

uint64_t sub_259F684D0()
{
  return MEMORY[0x270F54E20]();
}

uint64_t sub_259F684E0()
{
  return MEMORY[0x270F54E28]();
}

uint64_t sub_259F684F0()
{
  return MEMORY[0x270F54E40]();
}

uint64_t sub_259F68500()
{
  return MEMORY[0x270F54E48]();
}

uint64_t sub_259F68510()
{
  return MEMORY[0x270F54E50]();
}

uint64_t sub_259F68520()
{
  return MEMORY[0x270F54E58]();
}

uint64_t sub_259F68530()
{
  return MEMORY[0x270F54E60]();
}

uint64_t sub_259F68540()
{
  return MEMORY[0x270F54F10]();
}

uint64_t sub_259F68550()
{
  return MEMORY[0x270FA2A68]();
}

uint64_t sub_259F68560()
{
  return MEMORY[0x270FA2AA0]();
}

uint64_t sub_259F68570()
{
  return MEMORY[0x270F9CFC0]();
}

uint64_t sub_259F68580()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_259F68590()
{
  return MEMORY[0x270F9D060]();
}

uint64_t sub_259F685A0()
{
  return MEMORY[0x270F54FB8]();
}

uint64_t sub_259F685B0()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_259F685C0()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_259F685D0()
{
  return MEMORY[0x270FA2B38]();
}

uint64_t sub_259F685E0()
{
  return MEMORY[0x270FA2B78]();
}

uint64_t sub_259F685F0()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_259F68600()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_259F68610()
{
  return MEMORY[0x270EF1870]();
}

uint64_t sub_259F68620()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_259F68630()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_259F68640()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_259F68650()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_259F68660()
{
  return MEMORY[0x270EF19F8]();
}

uint64_t sub_259F68670()
{
  return MEMORY[0x270EF1A10]();
}

uint64_t sub_259F68680()
{
  return MEMORY[0x270EF1AA8]();
}

uint64_t sub_259F68690()
{
  return MEMORY[0x270EF1AD0]();
}

uint64_t sub_259F686A0()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_259F686B0()
{
  return MEMORY[0x270F9D5F8]();
}

uint64_t sub_259F686C0()
{
  return MEMORY[0x270F9D620]();
}

uint64_t sub_259F686D0()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_259F686E0()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_259F686F0()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_259F68700()
{
  return MEMORY[0x270F9D8F8]();
}

uint64_t sub_259F68710()
{
  return MEMORY[0x270F9D908]();
}

uint64_t sub_259F68720()
{
  return MEMORY[0x270F9D968]();
}

uint64_t sub_259F68730()
{
  return MEMORY[0x270F9DA28]();
}

uint64_t sub_259F68740()
{
  return MEMORY[0x270F9DA70]();
}

uint64_t sub_259F68750()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_259F68760()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_259F68770()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_259F68780()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_259F68790()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_259F687A0()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_259F687B0()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_259F687C0()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_259F687D0()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_259F687E0()
{
  return MEMORY[0x270F9DC80]();
}

uint64_t sub_259F687F0()
{
  return MEMORY[0x270F9DC88]();
}

uint64_t sub_259F68800()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_259F68810()
{
  return MEMORY[0x270FA1E30]();
}

uint64_t sub_259F68820()
{
  return MEMORY[0x270FA1FE8]();
}

uint64_t sub_259F68830()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_259F68840()
{
  return MEMORY[0x270F9E080]();
}

uint64_t sub_259F68850()
{
  return MEMORY[0x270F9E0A0]();
}

uint64_t sub_259F68860()
{
  return MEMORY[0x270F9E0E0]();
}

uint64_t sub_259F68870()
{
  return MEMORY[0x270F9E1E0]();
}

uint64_t sub_259F68880()
{
  return MEMORY[0x270F9E270]();
}

uint64_t sub_259F68890()
{
  return MEMORY[0x270EF1E08]();
}

uint64_t sub_259F688A0()
{
  return MEMORY[0x270EF1EE8]();
}

uint64_t sub_259F688B0()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_259F688C0()
{
  return MEMORY[0x270F9E518]();
}

uint64_t sub_259F688D0()
{
  return MEMORY[0x270EF23E8]();
}

uint64_t sub_259F688E0()
{
  return MEMORY[0x270EF2478]();
}

uint64_t sub_259F688F0()
{
  return MEMORY[0x270EF24A0]();
}

uint64_t sub_259F68900()
{
  return MEMORY[0x270EF2568]();
}

uint64_t sub_259F68910()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_259F68920()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_259F68930()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_259F68940()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_259F68950()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_259F68960()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_259F68970()
{
  return MEMORY[0x270F9EB80]();
}

uint64_t sub_259F68980()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_259F68990()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_259F689A0()
{
  return MEMORY[0x270F9EBD8]();
}

uint64_t sub_259F689B0()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_259F689C0()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_259F689D0()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_259F689E0()
{
  return MEMORY[0x270F9EC48]();
}

uint64_t sub_259F689F0()
{
  return MEMORY[0x270F9EC88]();
}

uint64_t sub_259F68A00()
{
  return MEMORY[0x270F9EC90]();
}

uint64_t sub_259F68A10()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_259F68A20()
{
  return MEMORY[0x270F9EDC0]();
}

uint64_t sub_259F68A30()
{
  return MEMORY[0x270F9EDC8]();
}

uint64_t sub_259F68A40()
{
  return MEMORY[0x270F9EDD0]();
}

uint64_t sub_259F68A50()
{
  return MEMORY[0x270F9EDE8]();
}

uint64_t sub_259F68A60()
{
  return MEMORY[0x270F9EDF8]();
}

uint64_t sub_259F68A70()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_259F68A80()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_259F68A90()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_259F68AA0()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_259F68AB0()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_259F68AC0()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_259F68AE0()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_259F68AF0()
{
  return MEMORY[0x270F9F260]();
}

uint64_t sub_259F68B00()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_259F68B10()
{
  return MEMORY[0x270F9F278]();
}

uint64_t sub_259F68B20()
{
  return MEMORY[0x270F9F298]();
}

uint64_t sub_259F68B30()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_259F68B40()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_259F68B50()
{
  return MEMORY[0x270F9F310]();
}

uint64_t sub_259F68B60()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_259F68B70()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_259F68B80()
{
  return MEMORY[0x270F9F378]();
}

uint64_t sub_259F68B90()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_259F68BA0()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_259F68BB0()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_259F68BC0()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_259F68BD0()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_259F68BE0()
{
  return MEMORY[0x270F9F450]();
}

uint64_t sub_259F68BF0()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_259F68C00()
{
  return MEMORY[0x270F9F4A8]();
}

uint64_t sub_259F68C10()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_259F68C20()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_259F68C30()
{
  return MEMORY[0x270F9F578]();
}

uint64_t sub_259F68C40()
{
  return MEMORY[0x270F9F5A0]();
}

uint64_t sub_259F68C50()
{
  return MEMORY[0x270F9F658]();
}

uint64_t sub_259F68C60()
{
  return MEMORY[0x270F9F7C0]();
}

uint64_t sub_259F68C70()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_259F68C80()
{
  return MEMORY[0x270F9F7E8]();
}

uint64_t sub_259F68C90()
{
  return MEMORY[0x270F9F7F0]();
}

uint64_t sub_259F68CA0()
{
  return MEMORY[0x270F9F7F8]();
}

uint64_t sub_259F68CB0()
{
  return MEMORY[0x270F9F818]();
}

uint64_t sub_259F68CC0()
{
  return MEMORY[0x270F9F838]();
}

uint64_t sub_259F68CD0()
{
  return MEMORY[0x270F9F878]();
}

uint64_t sub_259F68CE0()
{
  return MEMORY[0x270F9F880]();
}

uint64_t sub_259F68CF0()
{
  return MEMORY[0x270F9F888]();
}

uint64_t sub_259F68D00()
{
  return MEMORY[0x270F9F8A8]();
}

uint64_t sub_259F68D10()
{
  return MEMORY[0x270F9F8C8]();
}

uint64_t sub_259F68D20()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_259F68D30()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_259F68D40()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_259F68D50()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_259F68D60()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_259F68D70()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_259F68D80()
{
  return MEMORY[0x270F9FC20]();
}

uint64_t sub_259F68D90()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_259F68DA0()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_259F68DB0()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_259F68DC0()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_259F68DD0()
{
  return MEMORY[0x270F9FD58]();
}

uint64_t sub_259F68DE0()
{
  return MEMORY[0x270F9FD60]();
}

uint64_t sub_259F68DF0()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_259F68E00()
{
  return MEMORY[0x270F9FD80]();
}

uint64_t sub_259F68E10()
{
  return MEMORY[0x270F9FD88]();
}

uint64_t sub_259F68E20()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_259F68E50()
{
  return MEMORY[0x270FA0128]();
}

uint64_t BMEventTimestampSQLColumn()
{
  return MEMORY[0x270F10C18]();
}

uint64_t BiomeLibrary()
{
  return MEMORY[0x270F10AF0]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

{
  return MEMORY[0x270F9A3C0]();
}

{
  return MEMORY[0x270F9A3C8]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

void bzero(void *a1, size_t a2)
{
}

int fputs(const char *a1, FILE *a2)
{
  return MEMORY[0x270ED9A20](a1, a2);
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x270F9A568](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x270FA0330]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x270FA0470]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x270FA0588]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}