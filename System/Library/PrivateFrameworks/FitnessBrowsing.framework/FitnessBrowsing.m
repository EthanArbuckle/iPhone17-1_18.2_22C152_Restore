unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *result = *a2;
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24EB5F96C(uint64_t a1, char a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269945EC8);
  MEMORY[0x270FA5388](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269945ED0);
  MEMORY[0x270FA5388](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v13 = sub_24EC22390();
    char v14 = sub_24EC22580();
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269945ED8);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v9, a1, v15);
    v16 = &v9[*(int *)(v7 + 36)];
    *(void *)v16 = v13;
    v16[8] = v14;
  }
  else
  {
    char v10 = sub_24EC22570();
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269945ED8);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, a1, v11);
    v12 = &v9[*(int *)(v7 + 36)];
    *(void *)v12 = 0;
    v12[8] = v10;
  }
  sub_24EB5FE7C((uint64_t)v9, (uint64_t)v6);
  swift_storeEnumTagMultiPayload();
  sub_24EB5FEE4();
  sub_24EC224E0();
  return sub_24EB60004((uint64_t)v9);
}

uint64_t sub_24EB5FB74()
{
  return sub_24EC22320();
}

uint64_t sub_24EB5FB90(uint64_t a1)
{
  return sub_24EB5F96C(a1, *v1);
}

uint64_t View.ignoreSafeArea(insetBehavior:)(char a1, uint64_t a2, uint64_t a3)
{
  char v4 = a1 & 1;
  return MEMORY[0x25334A2E0](&v4, a2, &type metadata for BrowseInsetBehaviorModifier, a3);
}

uint64_t sub_24EB5FBD0()
{
  return swift_getWitnessTable();
}

unint64_t sub_24EB5FC34()
{
  unint64_t result = qword_269945EC0;
  if (!qword_269945EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269945EC0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BrowseInsetBehaviorModifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BrowseInsetBehaviorModifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB5FDE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseInsetBehaviorModifier()
{
  return &type metadata for BrowseInsetBehaviorModifier;
}

uint64_t sub_24EB5FE1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_24EB5FE7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269945ED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24EB5FEE4()
{
  unint64_t result = qword_269945EE0;
  if (!qword_269945EE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269945ED0);
    sub_24EB5FFA8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269945EE0);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_24EB5FFA8()
{
  unint64_t result = qword_269945EE8;
  if (!qword_269945EE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269945ED8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269945EE8);
  }
  return result;
}

uint64_t sub_24EB60004(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269945ED0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24EB60068()
{
  unint64_t result = qword_269945EF0;
  if (!qword_269945EF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269945EF8);
    sub_24EB5FEE4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269945EF0);
  }
  return result;
}

uint64_t BrowseEditorialGroup.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BrowseEditorialGroup.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

FitnessBrowsing::BrowseEditorialGroup __swiftcall BrowseEditorialGroup.init(items:title:)(Swift::OpaquePointer items, Swift::String title)
{
  *(Swift::OpaquePointer *)uint64_t v2 = items;
  *(Swift::String *)(v2 + 8) = title;
  result.title = title;
  result.items = items;
  return result;
}

uint64_t sub_24EB60120(char a1)
{
  if (a1) {
    return 0x656C746974;
  }
  else {
    return 0x736D657469;
  }
}

BOOL sub_24EB60148(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_24EB60160()
{
  return sub_24EC23030();
}

uint64_t sub_24EB601A8()
{
  return sub_24EC23000();
}

uint64_t sub_24EB601D4()
{
  return sub_24EC23030();
}

uint64_t sub_24EB60218()
{
  return sub_24EB60120(*v0);
}

uint64_t sub_24EB60220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB626DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB60248()
{
  return 0;
}

void sub_24EB60254(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_24EB60260(uint64_t a1)
{
  unint64_t v2 = sub_24EB604E4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB6029C(uint64_t a1)
{
  unint64_t v2 = sub_24EB604E4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseEditorialGroup.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269945F00);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  v11[1] = v1[2];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB604E4();
  sub_24EC23050();
  uint64_t v14 = v9;
  char v13 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269945F10);
  sub_24EB607E0(&qword_269945F18, &qword_269945F20);
  sub_24EC22F40();
  if (!v2)
  {
    char v12 = 1;
    sub_24EC22F00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_24EB604E4()
{
  unint64_t result = qword_269945F08;
  if (!qword_269945F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269945F08);
  }
  return result;
}

uint64_t BrowseEditorialGroup.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269945F28);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB604E4();
  sub_24EC23040();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269945F10);
  v14[15] = 0;
  sub_24EB607E0(&qword_269945F30, &qword_269945F38);
  sub_24EC22E90();
  uint64_t v9 = v15;
  v14[14] = 1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_24EC22E50();
  uint64_t v12 = v11;
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v9;
  a2[1] = v10;
  a2[2] = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_24EB607E0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269945F10);
    sub_24EB60860(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EB60860(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for BrowseLazyItem();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EB608A4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return BrowseEditorialGroup.init(from:)(a1, a2);
}

uint64_t sub_24EB608BC(void *a1)
{
  return BrowseEditorialGroup.encode(to:)(a1);
}

uint64_t BrowseEditorialGroup.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_24EB61EF4(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  return swift_bridgeObjectRelease();
}

uint64_t static BrowseEditorialGroup.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  if ((sub_24EB61540(*a1, *a2) & 1) == 0) {
    return 0;
  }
  if (v2 == v4 && v3 == v5) {
    return 1;
  }
  return sub_24EC22F70();
}

uint64_t sub_24EB609DC(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_24EC22F70(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_24EC22F70() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_24EB60AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseItem();
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_269945F60);
  MEMORY[0x270FA5388](v98);
  uint64_t v102 = (uint64_t)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for BrowseLazyItem();
  uint64_t v8 = MEMORY[0x270FA5388](v97);
  uint64_t v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v68 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v18 = (char *)&v68 - v17;
  uint64_t v19 = *(void *)(a1 + 16);
  if (v19 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v19 || a1 == a2) {
    return 1;
  }
  uint64_t v79 = v16;
  uint64_t v71 = v15;
  v73 = v6;
  uint64_t v20 = 0;
  uint64_t v21 = a1 + 32;
  uint64_t v22 = a2 + 32;
  uint64_t v70 = v19;
  uint64_t v69 = a1 + 32;
  uint64_t v68 = a2 + 32;
  v78 = v14;
  v77 = v18;
  v72 = v10;
  do
  {
    v23 = (uint64_t *)(v21 + 24 * v20);
    v24 = (uint64_t *)(v22 + 24 * v20);
    uint64_t v25 = *v24;
    uint64_t v101 = *v23;
    uint64_t v26 = *(void *)(v101 + 16);
    if (v26 != *(void *)(v25 + 16)) {
      return 0;
    }
    uint64_t v27 = v25;
    uint64_t v28 = v23[1];
    uint64_t v29 = v23[2];
    uint64_t v30 = v24[1];
    uint64_t v82 = v24[2];
    uint64_t v81 = v29;
    uint64_t v74 = v20;
    uint64_t v76 = v28;
    uint64_t v75 = v30;
    if (v26)
    {
      uint64_t v31 = *(unsigned __int8 *)(v71 + 80);
      uint64_t v32 = v101;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v32 != v27)
      {
        uint64_t v33 = (v31 + 32) & ~v31;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v34 = 0;
        uint64_t v95 = *(void *)(v71 + 72);
        uint64_t v96 = v26;
        uint64_t v35 = v27;
        uint64_t v80 = v27;
        while (1)
        {
          uint64_t result = sub_24EB627B8(v101 + v33, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
          if (v34 >= *(void *)(v35 + 16))
          {
            __break(1u);
            return result;
          }
          sub_24EB627B8(v35 + v33, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
          uint64_t v38 = v102 + *(int *)(v98 + 48);
          sub_24EB627B8((uint64_t)v18, v102, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
          sub_24EB627B8((uint64_t)v14, v38, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
          if (swift_getEnumCaseMultiPayload() == 1) {
            break;
          }
          v59 = v18;
          v60 = v14;
          uint64_t v61 = v79;
          sub_24EB627B8(v102, v79, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_24EB62880(v61, (uint64_t (*)(void))type metadata accessor for BrowseItem);
            uint64_t v14 = v60;
            uint64_t v18 = v59;
            goto LABEL_58;
          }
          uint64_t v62 = (uint64_t)v73;
          sub_24EB628E0(v38, (uint64_t)v73);
          BOOL v63 = static BrowseItem.== infix(_:_:)(v61, v62);
          sub_24EB62880(v61, (uint64_t (*)(void))type metadata accessor for BrowseItem);
          uint64_t v64 = v62;
          uint64_t v10 = v72;
          sub_24EB62880(v64, (uint64_t (*)(void))type metadata accessor for BrowseItem);
          uint64_t v14 = v60;
          uint64_t v18 = v59;
          if (!v63) {
            goto LABEL_65;
          }
LABEL_11:
          ++v34;
          sub_24EB62880(v102, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
          sub_24EB62880((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
          sub_24EB62880((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
          v33 += v95;
          if (v96 == v34) {
            goto LABEL_46;
          }
        }
        sub_24EB627B8(v102, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
        uint64_t v39 = *((void *)v10 + 1);
        uint64_t v100 = *((void *)v10 + 2);
        uint64_t v41 = *((void *)v10 + 3);
        uint64_t v40 = *((void *)v10 + 4);
        uint64_t v42 = *((void *)v10 + 5);
        uint64_t v43 = *((void *)v10 + 6);
        uint64_t v44 = *((void *)v10 + 8);
        uint64_t v89 = *((void *)v10 + 7);
        uint64_t v90 = v42;
        int v88 = v10[72];
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v14 = v78;
          uint64_t v18 = v77;
LABEL_58:
          sub_24EB62820(v102);
          goto LABEL_66;
        }
        uint64_t v45 = *(void *)(v38 + 8);
        uint64_t v99 = *(void *)(v38 + 16);
        uint64_t v83 = *(void *)(v38 + 24);
        uint64_t v84 = v45;
        uint64_t v46 = *(void *)(v38 + 32);
        uint64_t v93 = v43;
        uint64_t v94 = v46;
        uint64_t v47 = *(void *)(v38 + 40);
        uint64_t v48 = *(void *)(v38 + 48);
        uint64_t v86 = *(void *)(v38 + 56);
        uint64_t v87 = v47;
        uint64_t v91 = *(void *)(v38 + 64);
        uint64_t v92 = v48;
        int v85 = *(unsigned __int8 *)(v38 + 72);
        char v49 = *(unsigned char *)v38;
        uint64_t v50 = BrowseDisplayStyle.rawValue.getter(*v10);
        uint64_t v52 = v51;
        if (v50 == BrowseDisplayStyle.rawValue.getter(v49) && v52 == v53)
        {
          swift_bridgeObjectRelease_n();
          if (v100) {
            goto LABEL_21;
          }
        }
        else
        {
          char v55 = sub_24EC22F70();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v55 & 1) == 0) {
            goto LABEL_25;
          }
          if (v100)
          {
LABEL_21:
            uint64_t v56 = v40;
            uint64_t v57 = v93;
            if (!v99) {
              goto LABEL_25;
            }
            uint64_t v58 = v94;
            if ((v39 != v84 || v100 != v99) && (sub_24EC22F70() & 1) == 0) {
              goto LABEL_25;
            }
            goto LABEL_31;
          }
        }
        uint64_t v56 = v40;
        uint64_t v57 = v93;
        uint64_t v58 = v94;
        if (v99) {
          goto LABEL_25;
        }
LABEL_31:
        if (v56)
        {
          if (!v58) {
            goto LABEL_25;
          }
          uint64_t v65 = v44;
          if ((v41 != v83 || v56 != v58) && (sub_24EC22F70() & 1) == 0) {
            goto LABEL_25;
          }
        }
        else
        {
          uint64_t v65 = v44;
          if (v58) {
            goto LABEL_25;
          }
        }
        if ((v90 != v87 || v57 != v92) && (sub_24EC22F70() & 1) == 0
          || (v89 != v86 || v65 != v91) && (sub_24EC22F70() & 1) == 0)
        {
LABEL_25:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v14 = v78;
          uint64_t v18 = v77;
LABEL_65:
          sub_24EB62880(v102, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
LABEL_66:
          sub_24EB62880((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
          sub_24EB62880((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
        char v36 = sub_24EC04AA8(v88, v85);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v14 = v78;
        uint64_t v18 = v77;
        uint64_t v35 = v80;
        if ((v36 & 1) == 0) {
          goto LABEL_65;
        }
        goto LABEL_11;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_46:
    if (v76 == v75 && v81 == v82)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v67 = sub_24EC22F70();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v67 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v20 = v74 + 1;
    uint64_t result = 1;
    uint64_t v21 = v69;
    uint64_t v22 = v68;
  }
  while (v74 + 1 != v70);
  return result;
}

uint64_t sub_24EB61540(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseItem();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v54 = (uint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269945F60);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for BrowseLazyItem();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v49 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v21 = (char *)&v49 - v19;
  uint64_t v22 = *(void *)(a1 + 16);
  uint64_t v61 = a2;
  if (v22 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v22 || a1 == v61) {
    return 1;
  }
  uint64_t v53 = v20;
  uint64_t v59 = v17;
  unint64_t v23 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v57 = *(void *)(v18 + 72);
  uint64_t v58 = v16;
  uint64_t v52 = a1;
  uint64_t v51 = v6;
  v60 = (char *)&v49 - v19;
  uint64_t v50 = v8;
  while (1)
  {
    sub_24EB627B8(a1 + v23, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
    sub_24EB627B8(v61 + v23, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
    uint64_t v24 = (uint64_t)v21;
    uint64_t v25 = (uint64_t)&v8[*(int *)(v6 + 48)];
    sub_24EB627B8(v24, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
    sub_24EB627B8((uint64_t)v16, v25, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    sub_24EB627B8((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
    uint64_t v26 = *((void *)v12 + 2);
    uint64_t v27 = *((void *)v12 + 4);
    uint64_t v28 = v8;
    uint64_t v29 = *((void *)v12 + 6);
    uint64_t v30 = *((void *)v12 + 8);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = v28;
      uint64_t v16 = v58;
      goto LABEL_16;
    }
    char v31 = v12[72];
    uint64_t v32 = *((void *)v12 + 7);
    uint64_t v33 = *((void *)v12 + 5);
    uint64_t v34 = *((void *)v12 + 3);
    uint64_t v35 = *((void *)v12 + 1);
    char v36 = *(unsigned char *)v25;
    uint64_t v37 = *(void *)(v25 + 8);
    uint64_t v39 = *(void *)(v25 + 48);
    uint64_t v38 = *(void *)(v25 + 56);
    uint64_t v40 = *(void *)(v25 + 64);
    char v41 = *(unsigned char *)(v25 + 72);
    v70[0] = *v12;
    uint64_t v71 = v35;
    uint64_t v72 = v26;
    uint64_t v73 = v34;
    uint64_t v74 = v27;
    uint64_t v75 = v33;
    uint64_t v76 = v29;
    uint64_t v77 = v32;
    uint64_t v78 = v30;
    char v79 = v31;
    v62[0] = v36;
    uint64_t v63 = v37;
    long long v42 = *(_OWORD *)(v25 + 32);
    long long v55 = *(_OWORD *)(v25 + 16);
    long long v56 = v42;
    long long v64 = v55;
    long long v65 = v42;
    uint64_t v66 = v39;
    uint64_t v67 = v38;
    uint64_t v68 = v40;
    char v69 = v41;
    char v43 = _s15FitnessBrowsing21BrowseItemPlaceholderV2eeoiySbAC_ACtFZ_0((uint64_t)v70, (uint64_t)v62);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = v52;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v50;
    sub_24EB62880((uint64_t)v50, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
    uint64_t v6 = v51;
    uint64_t v16 = v58;
    if ((v43 & 1) == 0) {
      goto LABEL_17;
    }
LABEL_5:
    sub_24EB62880((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
    uint64_t v21 = v60;
    sub_24EB62880((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
    v23 += v57;
    if (!--v22) {
      return 1;
    }
  }
  uint64_t v44 = v53;
  sub_24EB627B8((uint64_t)v8, v53, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v45 = v54;
    sub_24EB628E0(v25, v54);
    BOOL v46 = _s15FitnessBrowsing10BrowseItemV2eeoiySbAC_ACtFZ_0(v44, v45);
    uint64_t v47 = v45;
    uint64_t v16 = v58;
    sub_24EB62880(v47, (uint64_t (*)(void))type metadata accessor for BrowseItem);
    sub_24EB62880(v44, (uint64_t (*)(void))type metadata accessor for BrowseItem);
    sub_24EB62880((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
    if (!v46) {
      goto LABEL_17;
    }
    goto LABEL_5;
  }
  sub_24EB62880(v44, (uint64_t (*)(void))type metadata accessor for BrowseItem);
LABEL_16:
  sub_24EB62820((uint64_t)v8);
LABEL_17:
  sub_24EB62880((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
  sub_24EB62880((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
  return 0;
}

uint64_t sub_24EB61AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseSectionDescriptor() - 8;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_24EB627B8(a1 + v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BrowseSectionDescriptor);
        sub_24EB627B8(a2 + v12, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for BrowseSectionDescriptor);
        char v15 = static BrowseSectionDescriptor.== infix(_:_:)(v10, v7);
        sub_24EB62880((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for BrowseSectionDescriptor);
        sub_24EB62880((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BrowseSectionDescriptor);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

BOOL sub_24EB61C80(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  uint64_t v3 = a1 + 5;
  uint64_t v4 = a2 + 5;
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    uint64_t v8 = *v3++;
    uint64_t v7 = v8;
    uint64_t v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t BrowseEditorialGroup.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_24EC22FF0();
  sub_24EB61EF4((uint64_t)v3, v1);
  sub_24EC22AB0();
  return sub_24EC23030();
}

uint64_t sub_24EB61D50()
{
  uint64_t v1 = *v0;
  sub_24EC22FF0();
  sub_24EB61EF4((uint64_t)v3, v1);
  sub_24EC22AB0();
  return sub_24EC23030();
}

uint64_t sub_24EB61DB4(uint64_t a1)
{
  sub_24EB61EF4(a1, *v1);
  return sub_24EC22AB0();
}

uint64_t sub_24EB61E04()
{
  uint64_t v1 = *v0;
  sub_24EC22FF0();
  sub_24EB61EF4((uint64_t)v3, v1);
  sub_24EC22AB0();
  return sub_24EC23030();
}

uint64_t sub_24EB61E64(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  if ((sub_24EB61540(*a1, *a2) & 1) == 0) {
    return 0;
  }
  if (v2 == v4 && v3 == v5) {
    return 1;
  }
  return sub_24EC22F70();
}

uint64_t sub_24EB61EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseItem();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v26 = (uint64_t)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for BrowseLazyItem();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  unint64_t v12 = (char *)v23 - v11;
  uint64_t v13 = *(void *)(a2 + 16);
  uint64_t result = sub_24EC23000();
  if (v13)
  {
    uint64_t v15 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v16 = *(void *)(v7 + 72);
    v23[1] = v6;
    uint64_t v24 = v16;
    uint64_t v25 = v12;
    while (1)
    {
      sub_24EB627B8(v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
      sub_24EB627B8((uint64_t)v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
      if (swift_getEnumCaseMultiPayload() == 1) {
        break;
      }
      uint64_t v17 = v26;
      sub_24EB628E0((uint64_t)v10, v26);
      sub_24EC23000();
      BrowseItem.hash(into:)(a1);
      sub_24EB62880(v17, (uint64_t (*)(void))type metadata accessor for BrowseItem);
LABEL_4:
      uint64_t result = sub_24EB62880((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
      v15 += v16;
      if (!--v13) {
        return result;
      }
    }
    uint64_t v18 = *((void *)v10 + 2);
    uint64_t v19 = *((void *)v10 + 3);
    uint64_t v20 = *((void *)v10 + 4);
    uint64_t v27 = *((void *)v10 + 1);
    uint64_t v28 = v19;
    uint64_t v21 = *((void *)v10 + 7);
    uint64_t v30 = *((void *)v10 + 5);
    uint64_t v31 = v21;
    uint64_t v29 = v10[72];
    char v22 = *v10;
    sub_24EC23000();
    BrowseDisplayStyle.rawValue.getter(v22);
    sub_24EC22AB0();
    swift_bridgeObjectRelease();
    if (v18)
    {
      sub_24EC23010();
      swift_bridgeObjectRetain();
      sub_24EC22AB0();
      swift_bridgeObjectRelease();
      if (v20)
      {
LABEL_8:
        sub_24EC23010();
        swift_bridgeObjectRetain();
        sub_24EC22AB0();
        swift_bridgeObjectRelease();
LABEL_11:
        swift_bridgeObjectRetain();
        sub_24EC22AB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_24EC22AB0();
        swift_bridgeObjectRelease();
        sub_24EC22AB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v16 = v24;
        unint64_t v12 = v25;
        goto LABEL_4;
      }
    }
    else
    {
      sub_24EC23010();
      if (v20) {
        goto LABEL_8;
      }
    }
    sub_24EC23010();
    goto LABEL_11;
  }
  return result;
}

unint64_t sub_24EB62288()
{
  unint64_t result = qword_269945F40;
  if (!qword_269945F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269945F40);
  }
  return result;
}

uint64_t destroy for BrowseEditorialGroup()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s15FitnessBrowsing20BrowseEditorialGroupVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for BrowseEditorialGroup(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *assignWithTake for BrowseEditorialGroup(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BrowseEditorialGroup(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BrowseEditorialGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseEditorialGroup()
{
  return &type metadata for BrowseEditorialGroup;
}

unsigned char *storeEnumTagSinglePayload for BrowseEditorialGroup.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB62584);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_24EB625AC(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_24EB625B8(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for BrowseEditorialGroup.CodingKeys()
{
  return &type metadata for BrowseEditorialGroup.CodingKeys;
}

unint64_t sub_24EB625D8()
{
  unint64_t result = qword_269945F48;
  if (!qword_269945F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269945F48);
  }
  return result;
}

unint64_t sub_24EB62630()
{
  unint64_t result = qword_269945F50;
  if (!qword_269945F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269945F50);
  }
  return result;
}

unint64_t sub_24EB62688()
{
  unint64_t result = qword_269945F58;
  if (!qword_269945F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269945F58);
  }
  return result;
}

uint64_t sub_24EB626DC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x736D657469 && a2 == 0xE500000000000000;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EB627B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EB62820(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269945F60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EB62880(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24EB628E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL static BrowseItemAssetLoadStatus.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_24EB62954(char a1)
{
  uint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unsigned int v3 = 1684107116;
      goto LABEL_6;
    case 2:
      uint64_t result = 0x50676E69646E6570;
      break;
    case 3:
      unsigned int v3 = 1937072496;
LABEL_6:
      uint64_t result = v3 | 0x676E6900000000;
      break;
    case 4:
      uint64_t result = 0x646573756170;
      break;
    case 5:
      uint64_t result = 0x6574656C706D6F63;
      break;
    case 6:
      uint64_t result = 0x64656C696166;
      break;
    case 7:
      return result;
    case 8:
      uint64_t result = 0x696C6C65636E6163;
      break;
    default:
      uint64_t result = 0x4C676E69646E6570;
      break;
  }
  return result;
}

uint64_t sub_24EB62A80()
{
  return 0;
}

void sub_24EB62A8C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24EB62A98(uint64_t a1)
{
  unint64_t v2 = sub_24EB638A8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB62AD4(uint64_t a1)
{
  unint64_t v2 = sub_24EB638A8();
  return MEMORY[0x270FA00B8](a1, v2);
}

BOOL sub_24EB62B10(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24EB62B2C()
{
  return sub_24EB62954(*v0);
}

uint64_t sub_24EB62B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB63C6C(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EB62B5C(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_24EB62B68(uint64_t a1)
{
  unint64_t v2 = sub_24EB63854();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB62BA4(uint64_t a1)
{
  unint64_t v2 = sub_24EB63854();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB62BE0(uint64_t a1)
{
  unint64_t v2 = sub_24EB639A4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB62C1C(uint64_t a1)
{
  unint64_t v2 = sub_24EB639A4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB62C58(uint64_t a1)
{
  unint64_t v2 = sub_24EB63950();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB62C94(uint64_t a1)
{
  unint64_t v2 = sub_24EB63950();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB62CD0(uint64_t a1)
{
  unint64_t v2 = sub_24EB63AF4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB62D0C(uint64_t a1)
{
  unint64_t v2 = sub_24EB63AF4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB62D48(uint64_t a1)
{
  unint64_t v2 = sub_24EB639F8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB62D84(uint64_t a1)
{
  unint64_t v2 = sub_24EB639F8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB62DC0(uint64_t a1)
{
  unint64_t v2 = sub_24EB63A4C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB62DFC(uint64_t a1)
{
  unint64_t v2 = sub_24EB63A4C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB62E38(uint64_t a1)
{
  unint64_t v2 = sub_24EB638FC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB62E74(uint64_t a1)
{
  unint64_t v2 = sub_24EB638FC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB62EB0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_24EB62EE0(uint64_t a1)
{
  unint64_t v2 = sub_24EB63B48();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB62F1C(uint64_t a1)
{
  unint64_t v2 = sub_24EB63B48();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB62F58(uint64_t a1)
{
  unint64_t v2 = sub_24EB63AA0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB62F94(uint64_t a1)
{
  unint64_t v2 = sub_24EB63AA0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseItemAssetLoadStatus.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v55 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269945F68);
  uint64_t v53 = *(void *)(v3 - 8);
  uint64_t v54 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v52 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269945F70);
  uint64_t v50 = *(void *)(v5 - 8);
  uint64_t v51 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v49 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269945F78);
  uint64_t v47 = *(void *)(v7 - 8);
  uint64_t v48 = v7;
  MEMORY[0x270FA5388](v7);
  BOOL v46 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269945F80);
  uint64_t v44 = *(void *)(v9 - 8);
  uint64_t v45 = v9;
  MEMORY[0x270FA5388](v9);
  char v43 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269945F88);
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t v42 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v40 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269945F90);
  uint64_t v38 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v37 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269945F98);
  uint64_t v35 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269945FA0);
  uint64_t v34 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269945FA8);
  uint64_t v33 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269945FB0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v56 = v22;
  uint64_t v57 = v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v33 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB63854();
  sub_24EC23050();
  switch((char)v55)
  {
    case 1:
      char v59 = 1;
      sub_24EB63AF4();
      uint64_t v28 = v56;
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v16);
      goto LABEL_12;
    case 2:
      char v60 = 2;
      sub_24EB63AA0();
      uint64_t v28 = v56;
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v36);
      goto LABEL_12;
    case 3:
      char v61 = 3;
      sub_24EB63A4C();
      uint64_t v29 = v37;
      uint64_t v28 = v56;
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v29, v39);
      goto LABEL_12;
    case 4:
      char v62 = 4;
      sub_24EB639F8();
      uint64_t v30 = v40;
      uint64_t v28 = v56;
      sub_24EC22EC0();
      uint64_t v32 = v41;
      uint64_t v31 = v42;
      goto LABEL_11;
    case 5:
      char v63 = 5;
      sub_24EB639A4();
      uint64_t v30 = v43;
      uint64_t v28 = v56;
      sub_24EC22EC0();
      uint64_t v32 = v44;
      uint64_t v31 = v45;
      goto LABEL_11;
    case 6:
      char v64 = 6;
      sub_24EB63950();
      uint64_t v30 = v46;
      uint64_t v28 = v56;
      sub_24EC22EC0();
      uint64_t v32 = v47;
      uint64_t v31 = v48;
      goto LABEL_11;
    case 7:
      char v65 = 7;
      sub_24EB638FC();
      uint64_t v30 = v49;
      uint64_t v28 = v56;
      sub_24EC22EC0();
      uint64_t v32 = v50;
      uint64_t v31 = v51;
      goto LABEL_11;
    case 8:
      char v66 = 8;
      sub_24EB638A8();
      uint64_t v30 = v52;
      uint64_t v28 = v56;
      sub_24EC22EC0();
      uint64_t v32 = v53;
      uint64_t v31 = v54;
LABEL_11:
      (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v31);
LABEL_12:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v25, v28);
      break;
    default:
      char v58 = 0;
      sub_24EB63B48();
      uint64_t v26 = v56;
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v19);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v25, v26);
      break;
  }
  return result;
}

unint64_t sub_24EB63854()
{
  unint64_t result = qword_269945FB8;
  if (!qword_269945FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269945FB8);
  }
  return result;
}

unint64_t sub_24EB638A8()
{
  unint64_t result = qword_269945FC0;
  if (!qword_269945FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269945FC0);
  }
  return result;
}

unint64_t sub_24EB638FC()
{
  unint64_t result = qword_269945FC8;
  if (!qword_269945FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269945FC8);
  }
  return result;
}

unint64_t sub_24EB63950()
{
  unint64_t result = qword_269945FD0;
  if (!qword_269945FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269945FD0);
  }
  return result;
}

unint64_t sub_24EB639A4()
{
  unint64_t result = qword_269945FD8;
  if (!qword_269945FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269945FD8);
  }
  return result;
}

unint64_t sub_24EB639F8()
{
  unint64_t result = qword_269945FE0;
  if (!qword_269945FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269945FE0);
  }
  return result;
}

unint64_t sub_24EB63A4C()
{
  unint64_t result = qword_269945FE8;
  if (!qword_269945FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269945FE8);
  }
  return result;
}

unint64_t sub_24EB63AA0()
{
  unint64_t result = qword_269945FF0;
  if (!qword_269945FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269945FF0);
  }
  return result;
}

unint64_t sub_24EB63AF4()
{
  unint64_t result = qword_269945FF8;
  if (!qword_269945FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269945FF8);
  }
  return result;
}

unint64_t sub_24EB63B48()
{
  unint64_t result = qword_269946000;
  if (!qword_269946000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946000);
  }
  return result;
}

char *BrowseItemAssetLoadStatus.init(from:)(void *a1)
{
  return sub_24EB63FFC(a1);
}

char *sub_24EB63BB4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_24EB63FFC(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_24EB63BE0(void *a1)
{
  return BrowseItemAssetLoadStatus.encode(to:)(a1, *v1);
}

uint64_t BrowseItemAssetLoadStatus.hash(into:)()
{
  return sub_24EC23000();
}

uint64_t BrowseItemAssetLoadStatus.hashValue.getter()
{
  return sub_24EC23030();
}

uint64_t sub_24EB63C6C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x4C676E69646E6570 && a2 == 0xEB0000000064616FLL;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E6964616F6CLL && a2 == 0xE700000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x50676E69646E6570 && a2 == 0xEC00000065737561 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x676E6973756170 && a2 == 0xE700000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646573756170 && a2 == 0xE600000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6574656C706D6F63 && a2 == 0xE900000000000064 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x64656C696166 && a2 == 0xE600000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024EC30C20 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x696C6C65636E6163 && a2 == 0xEA0000000000676ELL)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

char *sub_24EB63FFC(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699460B8);
  uint64_t v64 = *(void *)(v2 - 8);
  uint64_t v65 = v2;
  MEMORY[0x270FA5388](v2);
  char v69 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699460C0);
  uint64_t v62 = *(void *)(v4 - 8);
  uint64_t v63 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v72 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699460C8);
  uint64_t v60 = *(void *)(v6 - 8);
  uint64_t v61 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v68 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699460D0);
  uint64_t v58 = *(void *)(v8 - 8);
  uint64_t v59 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v71 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699460D8);
  uint64_t v56 = *(void *)(v10 - 8);
  uint64_t v57 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v70 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699460E0);
  uint64_t v55 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v67 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699460E8);
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  char v66 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699460F0);
  uint64_t v51 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699460F8);
  uint64_t v49 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946100);
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a1[3];
  uint64_t v73 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v23);
  sub_24EB63854();
  uint64_t v24 = v74;
  sub_24EC23040();
  if (!v24)
  {
    uint64_t v48 = v18;
    uint64_t v47 = v16;
    uint64_t v26 = v70;
    uint64_t v25 = v71;
    uint64_t v27 = v72;
    uint64_t v74 = v20;
    uint64_t v28 = v22;
    uint64_t v29 = sub_24EC22EA0();
    if (*(void *)(v29 + 16) == 1)
    {
      uint64_t v22 = (char *)*(unsigned __int8 *)(v29 + 32);
      switch(*(unsigned char *)(v29 + 32))
      {
        case 1:
          uint64_t v30 = v74;
          char v76 = 1;
          sub_24EB63AF4();
          sub_24EC22E00();
          uint64_t v32 = *(void (**)(char *, uint64_t))(v51 + 8);
          uint64_t v33 = v15;
          uint64_t v34 = &v86;
          goto LABEL_9;
        case 2:
          uint64_t v30 = v74;
          char v77 = 2;
          sub_24EB63AA0();
          uint64_t v39 = v66;
          sub_24EC22E00();
          uint64_t v32 = *(void (**)(char *, uint64_t))(v53 + 8);
          uint64_t v33 = v39;
          uint64_t v34 = &v87;
          goto LABEL_9;
        case 3:
          uint64_t v30 = v74;
          char v78 = 3;
          sub_24EB63A4C();
          uint64_t v40 = v67;
          sub_24EC22E00();
          uint64_t v32 = *(void (**)(char *, uint64_t))(v55 + 8);
          uint64_t v33 = v40;
          uint64_t v34 = &v85;
          goto LABEL_9;
        case 4:
          uint64_t v30 = v74;
          char v79 = 4;
          sub_24EB639F8();
          uint64_t v25 = v26;
          sub_24EC22E00();
          uint64_t v42 = v56;
          uint64_t v41 = v57;
          goto LABEL_16;
        case 5:
          uint64_t v30 = v74;
          char v80 = 5;
          sub_24EB639A4();
          sub_24EC22E00();
          uint64_t v42 = v58;
          uint64_t v41 = v59;
          goto LABEL_16;
        case 6:
          uint64_t v30 = v74;
          char v81 = 6;
          sub_24EB63950();
          uint64_t v25 = v68;
          sub_24EC22E00();
          uint64_t v42 = v60;
          uint64_t v41 = v61;
LABEL_16:
          uint64_t v32 = *(void (**)(char *, uint64_t))(v42 + 8);
          uint64_t v33 = v25;
          goto LABEL_17;
        case 7:
          uint64_t v44 = v74;
          char v82 = 7;
          sub_24EB638FC();
          sub_24EC22E00();
          (*(void (**)(char *, uint64_t))(v62 + 8))(v27, v63);
          swift_bridgeObjectRelease();
          uint64_t v30 = v44;
          goto LABEL_18;
        case 8:
          uint64_t v45 = v74;
          char v83 = 8;
          sub_24EB638A8();
          BOOL v46 = v69;
          sub_24EC22E00();
          (*(void (**)(char *, uint64_t))(v64 + 8))(v46, v65);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v28, v19);
          break;
        default:
          uint64_t v30 = v74;
          char v75 = 0;
          sub_24EB63B48();
          uint64_t v31 = v48;
          sub_24EC22E00();
          uint64_t v32 = *(void (**)(char *, uint64_t))(v49 + 8);
          uint64_t v33 = v31;
          uint64_t v34 = &v84;
LABEL_9:
          uint64_t v41 = *(v34 - 32);
LABEL_17:
          v32(v33, v41);
          swift_bridgeObjectRelease();
LABEL_18:
          (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v19);
          break;
      }
    }
    else
    {
      uint64_t v35 = v19;
      uint64_t v36 = sub_24EC22D50();
      swift_allocError();
      uint64_t v38 = v37;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269946108);
      *uint64_t v38 = &type metadata for BrowseItemAssetLoadStatus;
      sub_24EC22E10();
      sub_24EC22D40();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v36 - 8) + 104))(v38, *MEMORY[0x263F8DCB0], v36);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v22, v35);
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
  return v22;
}

unint64_t sub_24EB64AB0()
{
  unint64_t result = qword_269946008;
  if (!qword_269946008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946008);
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseItemAssetLoadStatus()
{
  return &type metadata for BrowseItemAssetLoadStatus;
}

uint64_t getEnumTagSinglePayload for BrowseItemReferenceType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s15FitnessBrowsing25BrowseItemAssetLoadStatusOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB64C78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

unsigned char *sub_24EB64CA0(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for BrowseItemAssetLoadStatus.CodingKeys()
{
  return &type metadata for BrowseItemAssetLoadStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for BrowseItemAssetLoadStatus.PendingLoadCodingKeys()
{
  return &type metadata for BrowseItemAssetLoadStatus.PendingLoadCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseItemAssetLoadStatus.LoadingCodingKeys()
{
  return &type metadata for BrowseItemAssetLoadStatus.LoadingCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseItemAssetLoadStatus.PendingPauseCodingKeys()
{
  return &type metadata for BrowseItemAssetLoadStatus.PendingPauseCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseItemAssetLoadStatus.PausingCodingKeys()
{
  return &type metadata for BrowseItemAssetLoadStatus.PausingCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseItemAssetLoadStatus.PausedCodingKeys()
{
  return &type metadata for BrowseItemAssetLoadStatus.PausedCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseItemAssetLoadStatus.CompletedCodingKeys()
{
  return &type metadata for BrowseItemAssetLoadStatus.CompletedCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseItemAssetLoadStatus.FailedCodingKeys()
{
  return &type metadata for BrowseItemAssetLoadStatus.FailedCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseItemAssetLoadStatus.PendingCancellationCodingKeys()
{
  return &type metadata for BrowseItemAssetLoadStatus.PendingCancellationCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseItemAssetLoadStatus.CancellingCodingKeys()
{
  return &type metadata for BrowseItemAssetLoadStatus.CancellingCodingKeys;
}

unint64_t sub_24EB64D4C()
{
  unint64_t result = qword_269946010;
  if (!qword_269946010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946010);
  }
  return result;
}

unint64_t sub_24EB64DA4()
{
  unint64_t result = qword_269946018;
  if (!qword_269946018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946018);
  }
  return result;
}

unint64_t sub_24EB64DFC()
{
  unint64_t result = qword_269946020;
  if (!qword_269946020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946020);
  }
  return result;
}

unint64_t sub_24EB64E54()
{
  unint64_t result = qword_269946028;
  if (!qword_269946028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946028);
  }
  return result;
}

unint64_t sub_24EB64EAC()
{
  unint64_t result = qword_269946030;
  if (!qword_269946030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946030);
  }
  return result;
}

unint64_t sub_24EB64F04()
{
  unint64_t result = qword_269946038;
  if (!qword_269946038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946038);
  }
  return result;
}

unint64_t sub_24EB64F5C()
{
  unint64_t result = qword_269946040;
  if (!qword_269946040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946040);
  }
  return result;
}

unint64_t sub_24EB64FB4()
{
  unint64_t result = qword_269946048;
  if (!qword_269946048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946048);
  }
  return result;
}

unint64_t sub_24EB6500C()
{
  unint64_t result = qword_269946050;
  if (!qword_269946050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946050);
  }
  return result;
}

unint64_t sub_24EB65064()
{
  unint64_t result = qword_269946058;
  if (!qword_269946058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946058);
  }
  return result;
}

unint64_t sub_24EB650BC()
{
  unint64_t result = qword_269946060;
  if (!qword_269946060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946060);
  }
  return result;
}

unint64_t sub_24EB65114()
{
  unint64_t result = qword_269946068;
  if (!qword_269946068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946068);
  }
  return result;
}

unint64_t sub_24EB6516C()
{
  unint64_t result = qword_269946070;
  if (!qword_269946070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946070);
  }
  return result;
}

unint64_t sub_24EB651C4()
{
  unint64_t result = qword_269946078;
  if (!qword_269946078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946078);
  }
  return result;
}

unint64_t sub_24EB6521C()
{
  unint64_t result = qword_269946080;
  if (!qword_269946080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946080);
  }
  return result;
}

unint64_t sub_24EB65274()
{
  unint64_t result = qword_269946088;
  if (!qword_269946088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946088);
  }
  return result;
}

unint64_t sub_24EB652CC()
{
  unint64_t result = qword_269946090;
  if (!qword_269946090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946090);
  }
  return result;
}

unint64_t sub_24EB65324()
{
  unint64_t result = qword_269946098;
  if (!qword_269946098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946098);
  }
  return result;
}

unint64_t sub_24EB6537C()
{
  unint64_t result = qword_2699460A0;
  if (!qword_2699460A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699460A0);
  }
  return result;
}

unint64_t sub_24EB653D4()
{
  unint64_t result = qword_2699460A8;
  if (!qword_2699460A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699460A8);
  }
  return result;
}

unint64_t sub_24EB6542C()
{
  unint64_t result = qword_2699460B0;
  if (!qword_2699460B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699460B0);
  }
  return result;
}

uint64_t sub_24EB65494()
{
  return swift_deallocClassInstance();
}

id static NSBundle.browse.getter()
{
  type metadata accessor for BrowseBundle();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  return v1;
}

uint64_t type metadata accessor for BrowseBundle()
{
  return self;
}

void *static BrowseFontTextStyle.allCases.getter()
{
  return &unk_270083540;
}

unint64_t BrowseFontTextStyle.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x72614C6172747865;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x31656C746974;
      break;
    case 4:
      unint64_t result = 0x32656C746974;
      break;
    case 5:
      unint64_t result = 0x33656C746974;
      break;
    case 6:
      unint64_t result = 0x656E696C64616568;
      break;
    case 7:
      unint64_t result = 0x6C64616568627573;
      break;
    case 8:
      unint64_t result = 2036625250;
      break;
    case 9:
      unint64_t result = 0x74756F6C6C6163;
      break;
    case 10:
      unint64_t result = 0x65746F6E746F6F66;
      break;
    case 11:
      unint64_t result = 0x316E6F6974706163;
      break;
    case 12:
      unint64_t result = 0x326E6F6974706163;
      break;
    case 13:
      unint64_t result = 0x336E6F6974706163;
      break;
    default:
      unint64_t result = 0x746954656772616CLL;
      break;
  }
  return result;
}

uint64_t sub_24EB656E4(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = BrowseFontTextStyle.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == BrowseFontTextStyle.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_24EC22F70();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24EB65770@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s15FitnessBrowsing19BrowseFontTextStyleO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_24EB657A0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = BrowseFontTextStyle.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_24EB657CC(void *a1@<X8>)
{
  *a1 = &unk_270083540;
}

uint64_t sub_24EB657DC()
{
  return sub_24EC22B00();
}

uint64_t sub_24EB6583C()
{
  return sub_24EC22AF0();
}

uint64_t sub_24EB6588C()
{
  char v1 = *v0;
  sub_24EC22FF0();
  BrowseFontTextStyle.rawValue.getter(v1);
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  return sub_24EC23030();
}

uint64_t sub_24EB658F0()
{
  BrowseFontTextStyle.rawValue.getter(*v0);
  sub_24EC22AB0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EB65944()
{
  char v1 = *v0;
  sub_24EC22FF0();
  BrowseFontTextStyle.rawValue.getter(v1);
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  return sub_24EC23030();
}

uint64_t _s15FitnessBrowsing19BrowseFontTextStyleO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_24EC22DF0();
  swift_bridgeObjectRelease();
  if (v0 >= 0xE) {
    return 14;
  }
  else {
    return v0;
  }
}

unint64_t sub_24EB659F4()
{
  unint64_t result = qword_269946110;
  if (!qword_269946110)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946118);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946110);
  }
  return result;
}

unint64_t sub_24EB65A54()
{
  unint64_t result = qword_269946120;
  if (!qword_269946120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946120);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BrowseFontTextStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BrowseFontTextStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB65C04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseFontTextStyle()
{
  return &type metadata for BrowseFontTextStyle;
}

unint64_t sub_24EB65C3C()
{
  unint64_t result = qword_269946128;
  if (!qword_269946128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946128);
  }
  return result;
}

uint64_t EditorialCollection.footnote.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EditorialCollection.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EditorialCollection.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EditorialCollection.recencyTag.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EditorialCollection.sharingURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EditorialCollection() + 32);
  uint64_t v4 = sub_24EC21D30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for EditorialCollection()
{
  uint64_t result = qword_26B1D87D8;
  if (!qword_26B1D87D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t EditorialCollection.init(footnote:identifier:name:recencyTag:sharingURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  uint64_t v10 = (char *)a9 + *(int *)(type metadata accessor for EditorialCollection() + 32);
  uint64_t v11 = sub_24EC21D30();
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  return v12(v10, a10, v11);
}

uint64_t sub_24EB65EA0(char a1)
{
  return *(void *)&aFootnoteidenti[8 * a1];
}

uint64_t sub_24EB65EC0()
{
  return sub_24EB65EA0(*v0);
}

uint64_t sub_24EB65EC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB674C4(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EB65EF0(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_24EB65EFC(uint64_t a1)
{
  unint64_t v2 = sub_24EB661A4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB65F38(uint64_t a1)
{
  unint64_t v2 = sub_24EB661A4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EditorialCollection.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946130);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB661A4();
  sub_24EC23050();
  v8[15] = 0;
  sub_24EC22ED0();
  if (!v1)
  {
    v8[14] = 1;
    sub_24EC22F00();
    v8[13] = 2;
    sub_24EC22ED0();
    v8[12] = 3;
    sub_24EC22ED0();
    type metadata accessor for EditorialCollection();
    v8[11] = 4;
    sub_24EC21D30();
    sub_24EB66B00(&qword_269946140, MEMORY[0x263F06EA8]);
    sub_24EC22F40();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24EB661A4()
{
  unint64_t result = qword_269946138;
  if (!qword_269946138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946138);
  }
  return result;
}

uint64_t EditorialCollection.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = sub_24EC21D30();
  uint64_t v22 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946148);
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  MEMORY[0x270FA5388](v6);
  int v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for EditorialCollection();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (void *)((char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB661A4();
  uint64_t v26 = v8;
  uint64_t v12 = v27;
  sub_24EC23040();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v13 = (uint64_t)a1;
  uint64_t v27 = v5;
  uint64_t v14 = v24;
  uint64_t v15 = v25;
  char v32 = 0;
  *uint64_t v11 = sub_24EC22E20();
  v11[1] = v16;
  char v31 = 1;
  v11[2] = sub_24EC22E50();
  void v11[3] = v17;
  char v30 = 2;
  v21[1] = 0;
  v11[4] = sub_24EC22E20();
  v11[5] = v18;
  char v29 = 3;
  v11[6] = sub_24EC22E20();
  v11[7] = v19;
  char v28 = 4;
  sub_24EB66B00(&qword_269946150, MEMORY[0x263F06EA8]);
  sub_24EC22E90();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v26, v15);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))((char *)v11 + *(int *)(v9 + 32), v27, v3);
  sub_24EB66648((uint64_t)v11, v23);
  __swift_destroy_boxed_opaque_existential_1(v13);
  return sub_24EB666AC((uint64_t)v11);
}

uint64_t sub_24EB66648(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EditorialCollection();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EB666AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EditorialCollection();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EB66708@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EditorialCollection.init(from:)(a1, a2);
}

uint64_t sub_24EB66720(void *a1)
{
  return EditorialCollection.encode(to:)(a1);
}

uint64_t EditorialCollection.hash(into:)()
{
  if (v0[1])
  {
    sub_24EC23010();
    swift_bridgeObjectRetain();
    sub_24EC22AB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24EC23010();
  }
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  if (!v0[5])
  {
    sub_24EC23010();
    if (v0[7]) {
      goto LABEL_6;
    }
LABEL_8:
    sub_24EC23010();
    goto LABEL_9;
  }
  sub_24EC23010();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  if (!v0[7]) {
    goto LABEL_8;
  }
LABEL_6:
  sub_24EC23010();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
LABEL_9:
  type metadata accessor for EditorialCollection();
  sub_24EC21D30();
  sub_24EB66B00(&qword_269946158, MEMORY[0x263F06EA8]);
  return sub_24EC22A20();
}

uint64_t EditorialCollection.hashValue.getter()
{
  return sub_24EC23030();
}

uint64_t sub_24EB66910()
{
  return sub_24EC23030();
}

uint64_t sub_24EB66954()
{
  return sub_24EC23030();
}

uint64_t _s15FitnessBrowsing19EditorialCollectionV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a2[1];
  if (v4)
  {
    if (!v5) {
      return 0;
    }
    BOOL v6 = *a1 == *a2 && v4 == v5;
    if (!v6 && (sub_24EC22F70() & 1) == 0) {
      return 0;
    }
  }
  else if (v5)
  {
    return 0;
  }
  BOOL v7 = a1[2] == a2[2] && a1[3] == a2[3];
  if (v7 || (sub_24EC22F70() & 1) != 0)
  {
    uint64_t v8 = a1[5];
    uint64_t v9 = a2[5];
    if (v8)
    {
      if (!v9 || (a1[4] != a2[4] || v8 != v9) && (sub_24EC22F70() & 1) == 0) {
        return 0;
      }
    }
    else if (v9)
    {
      return 0;
    }
    uint64_t v10 = a1[7];
    uint64_t v11 = a2[7];
    if (v10)
    {
      if (!v11 || (a1[6] != a2[6] || v10 != v11) && (sub_24EC22F70() & 1) == 0) {
        return 0;
      }
    }
    else if (v11)
    {
      return 0;
    }
    type metadata accessor for EditorialCollection();
    JUMPOUT(0x2533498A0);
  }
  return 0;
}

uint64_t sub_24EB66AB8()
{
  return sub_24EB66B00(&qword_269946160, (void (*)(uint64_t))type metadata accessor for EditorialCollection);
}

uint64_t sub_24EB66B00(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for EditorialCollection(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    uint64_t v9 = *(int *)(a3 + 32);
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = (char *)a1 + v9;
    a1[6] = a2[6];
    a1[7] = v8;
    uint64_t v12 = sub_24EC21D30();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v11, v10, v12);
  }
  return v3;
}

uint64_t destroy for EditorialCollection(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_24EC21D30();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for EditorialCollection(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = (char *)a1 + v8;
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v11 = sub_24EC21D30();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v10, v9, v11);
  return a1;
}

void *assignWithCopy for EditorialCollection(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24EC21D30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for EditorialCollection(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24EC21D30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

void *assignWithTake for EditorialCollection(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_24EC21D30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for EditorialCollection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EB67018);
}

uint64_t sub_24EB67018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24EC21D30();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for EditorialCollection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EB670DC);
}

uint64_t sub_24EB670DC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24EC21D30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24EB67184()
{
  uint64_t result = sub_24EC21D30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BrowseTextAlignment(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EditorialCollection.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB67384);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EditorialCollection.CodingKeys()
{
  return &type metadata for EditorialCollection.CodingKeys;
}

unint64_t sub_24EB673C0()
{
  unint64_t result = qword_269946168;
  if (!qword_269946168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946168);
  }
  return result;
}

unint64_t sub_24EB67418()
{
  unint64_t result = qword_269946170;
  if (!qword_269946170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946170);
  }
  return result;
}

unint64_t sub_24EB67470()
{
  unint64_t result = qword_269946178;
  if (!qword_269946178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946178);
  }
  return result;
}

uint64_t sub_24EB674C4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x65746F6E746F6F66 && a2 == 0xE800000000000000;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5479636E65636572 && a2 == 0xEA00000000006761 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x55676E6972616873 && a2 == 0xEA00000000004C52)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

BOOL static MediaType.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_24EB676D8(char a1)
{
  if (a1) {
    return 0x74756F6B726F77;
  }
  else {
    return 0x697461746964656DLL;
  }
}

uint64_t sub_24EB67714()
{
  return sub_24EB676D8(*v0);
}

uint64_t sub_24EB6771C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB67D30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB67744(uint64_t a1)
{
  unint64_t v2 = sub_24EB67B5C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB67780(uint64_t a1)
{
  unint64_t v2 = sub_24EB67B5C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB677BC(uint64_t a1)
{
  unint64_t v2 = sub_24EB67C04();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB677F8(uint64_t a1)
{
  unint64_t v2 = sub_24EB67C04();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB67834(uint64_t a1)
{
  unint64_t v2 = sub_24EB67BB0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB67870(uint64_t a1)
{
  unint64_t v2 = sub_24EB67BB0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MediaType.encode(to:)(void *a1, int a2)
{
  int v18 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946180);
  uint64_t v16 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946188);
  uint64_t v6 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  int v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946190);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB67B5C();
  sub_24EC23050();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  if (v18)
  {
    char v20 = 1;
    sub_24EB67BB0();
    sub_24EC22EC0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    char v19 = 0;
    sub_24EB67C04();
    sub_24EC22EC0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  }
  return (*v13)(v12, v9);
}

unint64_t sub_24EB67B5C()
{
  unint64_t result = qword_269946198;
  if (!qword_269946198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946198);
  }
  return result;
}

unint64_t sub_24EB67BB0()
{
  unint64_t result = qword_2699461A0;
  if (!qword_2699461A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699461A0);
  }
  return result;
}

unint64_t sub_24EB67C04()
{
  unint64_t result = qword_2699461A8;
  if (!qword_2699461A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699461A8);
  }
  return result;
}

uint64_t MediaType.init(from:)(uint64_t a1)
{
  return sub_24EB67E24(a1) & 1;
}

uint64_t sub_24EB67C74@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_24EB67E24(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_24EB67CA4(void *a1)
{
  return MediaType.encode(to:)(a1, *v1);
}

uint64_t MediaType.hash(into:)()
{
  return sub_24EC23000();
}

uint64_t MediaType.hashValue.getter()
{
  return sub_24EC23030();
}

uint64_t sub_24EB67D30(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x697461746964656DLL && a2 == 0xEA00000000006E6FLL;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74756F6B726F77 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EB67E24(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699461F0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699461F8);
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946200);
  uint64_t v24 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)a1, *(void *)(a1 + 24));
  sub_24EB67B5C();
  uint64_t v12 = v26;
  sub_24EC23040();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v13 = v25;
  uint64_t v21 = v6;
  uint64_t v26 = a1;
  uint64_t v14 = sub_24EC22EA0();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v16 = sub_24EC22D50();
    swift_allocError();
    int v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269946108);
    *int v18 = &type metadata for MediaType;
    sub_24EC22E10();
    sub_24EC22D40();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x263F8DCB0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
    a1 = v26;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1(a1);
    return a1;
  }
  a1 = *(unsigned __int8 *)(v14 + 32);
  if (a1)
  {
    LODWORD(v25) = *(unsigned __int8 *)(v14 + 32);
    char v28 = 1;
    sub_24EB67BB0();
    sub_24EC22E00();
    uint64_t v15 = v24;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v9);
    a1 = v25;
  }
  else
  {
    char v27 = 0;
    sub_24EB67C04();
    sub_24EC22E00();
    uint64_t v19 = v24;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
  }
  __swift_destroy_boxed_opaque_existential_1(v26);
  return a1;
}

unint64_t sub_24EB68278()
{
  unint64_t result = qword_2699461B0;
  if (!qword_2699461B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699461B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaType()
{
  return &type metadata for MediaType;
}

unsigned char *_s15FitnessBrowsing9MediaTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB683B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaType.CodingKeys()
{
  return &type metadata for MediaType.CodingKeys;
}

ValueMetadata *type metadata accessor for MediaType.MeditationCodingKeys()
{
  return &type metadata for MediaType.MeditationCodingKeys;
}

ValueMetadata *type metadata accessor for MediaType.WorkoutCodingKeys()
{
  return &type metadata for MediaType.WorkoutCodingKeys;
}

unint64_t sub_24EB6840C()
{
  unint64_t result = qword_2699461B8;
  if (!qword_2699461B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699461B8);
  }
  return result;
}

unint64_t sub_24EB68464()
{
  unint64_t result = qword_2699461C0;
  if (!qword_2699461C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699461C0);
  }
  return result;
}

unint64_t sub_24EB684BC()
{
  unint64_t result = qword_2699461C8;
  if (!qword_2699461C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699461C8);
  }
  return result;
}

unint64_t sub_24EB68514()
{
  unint64_t result = qword_2699461D0;
  if (!qword_2699461D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699461D0);
  }
  return result;
}

unint64_t sub_24EB6856C()
{
  unint64_t result = qword_2699461D8;
  if (!qword_2699461D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699461D8);
  }
  return result;
}

unint64_t sub_24EB685C4()
{
  unint64_t result = qword_2699461E0;
  if (!qword_2699461E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699461E0);
  }
  return result;
}

unint64_t sub_24EB6861C()
{
  unint64_t result = qword_2699461E8;
  if (!qword_2699461E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699461E8);
  }
  return result;
}

uint64_t sub_24EB6867C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t sub_24EB686B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EC224D0();
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_24EC224E0();
}

uint64_t sub_24EB687AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_24EC224D0();
  MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_24EC224E0();
}

uint64_t sub_24EB688A4@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24EC227B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24EC225F0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1)
  {
    if (*a1 == 1)
    {
      unint64_t v12 = 0xD000000000000017;
      uint64_t v13 = sub_24EC225B0();
      uint64_t v14 = sub_24EC22800();
      sub_24EC225D0();
      (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F1A680], v8);
      sub_24EC22600();
      swift_release();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      uint64_t v15 = sub_24EC225C0();
      swift_release();
      long long v26 = xmmword_24EC248C0;
      long long v23 = xmmword_24EC248D0;
      long long v25 = xmmword_24EC248E0;
      long long v24 = xmmword_24EC248F0;
      unint64_t v16 = 0x800000024EC30CC0;
      uint64_t result = sub_24EC227F0();
      long long v19 = v23;
      long long v18 = v24;
      long long v21 = v25;
      long long v20 = v26;
      long long v22 = v23;
    }
    else
    {
      uint64_t v13 = sub_24EC225B0();
      uint64_t v14 = sub_24EC22800();
      sub_24EC225E0();
      uint64_t v15 = sub_24EC225C0();
      swift_release();
      (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F1B388], v4);
      uint64_t result = MEMORY[0x25334A390](v7, 0.650980392, 1.0, 0.0, 1.0);
      long long v20 = xmmword_24EC24870;
      long long v22 = xmmword_24EC24880;
      long long v19 = xmmword_24EC24890;
      long long v21 = xmmword_24EC248A0;
      long long v18 = xmmword_24EC248B0;
      unint64_t v12 = 0xD000000000000014;
      unint64_t v16 = 0x800000024EC30CA0;
    }
  }
  else
  {
    unint64_t v12 = 0xD000000000000017;
    uint64_t v13 = sub_24EC225A0();
    uint64_t v14 = sub_24EC22800();
    sub_24EC225E0();
    uint64_t v15 = sub_24EC225C0();
    swift_release();
    long long v26 = xmmword_24EC24900;
    long long v23 = xmmword_24EC24910;
    long long v25 = xmmword_24EC24920;
    long long v24 = xmmword_24EC24930;
    unint64_t v16 = 0x800000024EC30CE0;
    uint64_t result = sub_24EC227F0();
    long long v22 = v23;
    long long v18 = v24;
    long long v21 = v25;
    long long v20 = v26;
    long long v19 = v24;
  }
  *(_OWORD *)a2 = v18;
  *(_OWORD *)(a2 + 16) = v21;
  *(void *)(a2 + 32) = v12;
  *(void *)(a2 + 40) = v16;
  *(_OWORD *)(a2 + 48) = v19;
  *(_OWORD *)(a2 + 64) = v22;
  *(_OWORD *)(a2 + 80) = v20;
  *(void *)(a2 + 96) = v13;
  *(void *)(a2 + 104) = v14;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = result;
  return result;
}

uint64_t sub_24EB68C18()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269946408);
  sub_24EB74350(&qword_269946410, &qword_269946408);
  return sub_24EC222E0();
}

uint64_t CreatePlanBannerView.init(store:createWorkoutPlanButtonViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_24EC22890();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)a5 = v11;
  *(void *)(a5 + 8) = v12;
  *(void *)(a5 + 16) = sub_24EB68D8C;
  *(void *)(a5 + 24) = result;
  *(unsigned char *)(a5 + 32) = 0;
  *(void *)(a5 + 40) = a3;
  *(void *)(a5 + 48) = a4;
  return result;
}

uint64_t sub_24EB68D54()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24EB68D8C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_24EB68DB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946300);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699462F8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = v2[1];
  long long v27 = *v2;
  long long v28 = v12;
  long long v14 = *v2;
  long long v13 = v2[1];
  long long v29 = v2[2];
  uint64_t v30 = *((void *)v2 + 6);
  long long v23 = v14;
  long long v24 = v13;
  long long v25 = v2[2];
  uint64_t v26 = *((void *)v2 + 6);
  sub_24EB68C18();
  swift_getKeyPath();
  sub_24EC229E0();
  swift_release();
  swift_release();
  uint64_t v15 = *((void *)&v23 + 1);
  if (*((void *)&v23 + 1))
  {
    uint64_t v16 = v23;
    uint64_t v17 = swift_allocObject();
    v22[1] = a2;
    long long v18 = v27;
    long long v19 = v28;
    *(_OWORD *)(v17 + 16) = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v17 + 32) = v18;
    long long v20 = v29;
    *(_OWORD *)(v17 + 48) = v19;
    *(_OWORD *)(v17 + 64) = v20;
    *(void *)(v17 + 80) = v30;
    MEMORY[0x270FA5388](v17);
    v22[-2] = v16;
    v22[-1] = v15;
    sub_24EB7245C((uint64_t)&v27);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269946308);
    sub_24EB73524();
    sub_24EC228C0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v7, v11, v8);
    swift_storeEnumTagMultiPayload();
    sub_24EB74350(&qword_2699462F0, &qword_2699462F8);
    sub_24EC224E0();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_24EB74350(&qword_2699462F0, &qword_2699462F8);
    return sub_24EC224E0();
  }
}

uint64_t sub_24EB690FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946350) - 8;
  MEMORY[0x270FA5388](v33);
  char v32 = (uint64_t *)((char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = sub_24EC22620();
  uint64_t v35 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v30 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24EC22450();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946320) - 8;
  MEMORY[0x270FA5388](v29);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EC22440();
  sub_24EC22430();
  sub_24EC22420();
  sub_24EC22430();
  sub_24EC22850();
  sub_24EC22410();
  swift_release();
  sub_24EC22430();
  sub_24EC22470();
  uint64_t v6 = sub_24EC22650();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  sub_24EC225B0();
  uint64_t v11 = sub_24EC22640();
  uint64_t v13 = v12;
  char v15 = v14;
  uint64_t v28 = v16;
  swift_release();
  char v17 = v15 & 1;
  sub_24EB733FC(v6, v8, v10);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v19 = v35;
  long long v21 = v30;
  uint64_t v20 = v31;
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v30, *MEMORY[0x263F1A7A8], v31);
  uint64_t v22 = swift_getKeyPath();
  long long v23 = v32;
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))((char *)v32 + *(int *)(v33 + 36), v21, v20);
  uint64_t *v23 = v22;
  sub_24EB741CC((uint64_t)v23, (uint64_t)&v5[*(int *)(v29 + 44)], &qword_269946350);
  *(void *)uint64_t v5 = v11;
  *((void *)v5 + 1) = v13;
  v5[16] = v17;
  *((void *)v5 + 3) = v28;
  *((void *)v5 + 4) = KeyPath;
  *((void *)v5 + 5) = 1;
  v5[48] = 0;
  sub_24EB734D8(v11, v13, v17);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24EB742F4((uint64_t)v23, &qword_269946350);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v21, v20);
  sub_24EB733FC(v11, v13, v17);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v24 = MEMORY[0x25334A3A0](objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.650980392, 1.0, 0.0, 1.0));
  uint64_t v25 = v34;
  sub_24EB741CC((uint64_t)v5, v34, &qword_269946320);
  *(void *)(v25 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269946308) + 36)) = v24;
  return sub_24EB742F4((uint64_t)v5, &qword_269946320);
}

uint64_t sub_24EB69548@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v15 - v10;
  (*(void (**)(uint64_t))(v2 + 40))(v9);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v12(v11, v8, v4);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, v4);
  v12(a2, v11, v4);
  return ((uint64_t (*)(char *, uint64_t))v13)(v11, v4);
}

uint64_t sub_24EB69688@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946210);
  uint64_t v5 = *(void *)(a1 + 16);
  sub_24EC224F0();
  uint64_t v6 = sub_24EC22840();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v19[-v11];
  long long v13 = *(_OWORD *)(v2 + 16);
  v26[0] = *(_OWORD *)v2;
  v26[1] = v13;
  v26[2] = *(_OWORD *)(v2 + 32);
  uint64_t v27 = *(void *)(v2 + 48);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v20 = v5;
  uint64_t v21 = v14;
  uint64_t v22 = v26;
  unint64_t v24 = sub_24EB73438();
  uint64_t v25 = v14;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24EC22830();
  uint64_t v23 = WitnessTable;
  swift_getWitnessTable();
  uint64_t v16 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 16);
  v16(v12, v10, v6);
  char v17 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
  v17(v10, v6);
  v16(a2, v12, v6);
  return ((uint64_t (*)(unsigned char *, uint64_t))v17)(v12, v6);
}

uint64_t sub_24EB69898@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v33 = a4;
  uint64_t v30 = *(void *)(a2 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v29 = (char *)&v28 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946210);
  MEMORY[0x270FA5388](v11);
  long long v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = v14;
  uint64_t v15 = sub_24EC224F0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  long long v18 = (char *)&v28 - v17;
  long long v19 = a1[1];
  long long v36 = *a1;
  long long v37 = v19;
  long long v38 = a1[2];
  uint64_t v39 = *((void *)a1 + 6);
  uint64_t v32 = a3;
  uint64_t PlanBannerView = type metadata accessor for CreatePlanBannerView();
  sub_24EB68C18();
  swift_getKeyPath();
  sub_24EC229E0();
  swift_release();
  swift_release();
  if (v36 > 1u)
  {
    sub_24EB69548(PlanBannerView, v9);
    unint64_t v24 = v29;
    uint64_t v23 = v30;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
    v25(v29, v9, a2);
    uint64_t v26 = *(void (**)(char *, uint64_t))(v23 + 8);
    v26(v9, a2);
    v25(v9, v24, a2);
    sub_24EB73438();
    uint64_t v22 = v32;
    sub_24EB687AC((uint64_t)v9, v31, a2);
    v26(v9, a2);
    v26(v24, a2);
  }
  else
  {
    long long v21 = a1[1];
    long long v36 = *a1;
    long long v37 = v21;
    long long v38 = a1[2];
    uint64_t v39 = *((void *)a1 + 6);
    sub_24EB68DB4(PlanBannerView, (uint64_t)v13);
    sub_24EB73438();
    uint64_t v22 = v32;
    sub_24EB686B4((uint64_t)v13, v31);
    sub_24EB742F4((uint64_t)v13, &qword_269946210);
  }
  unint64_t v34 = sub_24EB73438();
  uint64_t v35 = v22;
  swift_getWitnessTable();
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v33, v18, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t sub_24EB69C20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946210);
  uint64_t v25 = *(void *)(a2 + 16);
  sub_24EC224F0();
  sub_24EC22840();
  swift_getTupleTypeMetadata3();
  sub_24EC22970();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = sub_24EC22900();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&WitnessTable - v9;
  uint64_t v11 = sub_24EC22380();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&WitnessTable - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&WitnessTable - v16;
  long long v18 = *(_OWORD *)(v4 + 16);
  v34[0] = *(_OWORD *)v4;
  v34[1] = v18;
  v34[2] = *(_OWORD *)(v4 + 32);
  uint64_t v35 = *(void *)(v4 + 48);
  sub_24EC224C0();
  uint64_t v19 = *(void *)(v26 + 24);
  uint64_t v28 = v25;
  uint64_t v29 = v19;
  uint64_t v30 = v34;
  uint64_t v31 = a1;
  sub_24EC228F0();
  uint64_t v20 = swift_getWitnessTable();
  sub_24EC22750();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v32 = v20;
  uint64_t v33 = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  long long v21 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v21(v17, v15, v11);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v12 + 8);
  v22(v15, v11);
  v21(v27, v17, v11);
  return ((uint64_t (*)(char *, uint64_t))v22)(v17, v11);
}

uint64_t sub_24EB69F84(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)TupleTypeMetadata;
  uint64_t v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    MEMORY[0x270FA5388](TupleTypeMetadata);
    uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v10 = (long long *)(v5 + 2);
      uint64_t v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *uint64_t v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        uint64_t v16 = &v8[8 * v9];
        uint64_t v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)uint64_t v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  MEMORY[0x270FA5388](TupleTypeMetadata);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    long long v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return sub_24EC22980();
}

uint64_t sub_24EB6A148@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v41 = a3;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946210);
  uint64_t v7 = *(void *)(a2 + 16);
  sub_24EC224F0();
  sub_24EC22840();
  swift_getTupleTypeMetadata3();
  uint64_t v36 = sub_24EC22970();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = sub_24EC22900();
  uint64_t v37 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v32 - v9;
  uint64_t v11 = sub_24EC22380();
  uint64_t v40 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v32 = (char *)&v32 - v12;
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v47 = MEMORY[0x263F18C10];
  uint64_t v38 = v11;
  uint64_t v39 = swift_getWitnessTable();
  *(void *)&v48[0] = v11;
  *((void *)&v48[0] + 1) = v39;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v14 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v33 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  unint64_t v34 = (char *)&v32 - v17;
  long long v18 = *(_OWORD *)(v4 + 16);
  v48[0] = *(_OWORD *)v4;
  v48[1] = v18;
  v48[2] = *(_OWORD *)(v4 + 32);
  uint64_t v49 = *(void *)(v4 + 48);
  sub_24EC224C0();
  uint64_t v19 = *(void *)(a2 + 24);
  uint64_t v42 = v7;
  uint64_t v43 = v19;
  uint64_t v44 = v48;
  uint64_t v45 = a1;
  sub_24EC228F0();
  uint64_t v20 = v32;
  sub_24EC22750();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v8);
  sub_24EC22560();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v7;
  *(void *)(v21 + 24) = v19;
  long long v22 = a1[5];
  *(_OWORD *)(v21 + 96) = a1[4];
  *(_OWORD *)(v21 + 112) = v22;
  long long v23 = a1[7];
  *(_OWORD *)(v21 + 128) = a1[6];
  *(_OWORD *)(v21 + 144) = v23;
  long long v24 = a1[1];
  *(_OWORD *)(v21 + 32) = *a1;
  *(_OWORD *)(v21 + 48) = v24;
  long long v25 = a1[3];
  *(_OWORD *)(v21 + 64) = a1[2];
  *(_OWORD *)(v21 + 80) = v25;
  sub_24EB738AC((uint64_t)a1);
  sub_24EC22930();
  uint64_t v26 = v33;
  uint64_t v27 = v38;
  sub_24EC22710();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v27);
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  uint64_t v29 = v34;
  v28(v34, v26, OpaqueTypeMetadata2);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v14 + 8);
  v30(v26, OpaqueTypeMetadata2);
  v28(v41, v29, OpaqueTypeMetadata2);
  return ((uint64_t (*)(char *, uint64_t))v30)(v29, OpaqueTypeMetadata2);
}

uint64_t sub_24EB6A604@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, char *, uint64_t)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v57 = a3;
  uint64_t v59 = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946210);
  uint64_t WitnessTable = sub_24EC224F0();
  uint64_t v65 = sub_24EC22840();
  uint64_t v66 = *(void *)(v65 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v65);
  uint64_t v63 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v64 = (char *)&v51 - v8;
  long long v9 = a1[1];
  long long v75 = *a1;
  long long v76 = v9;
  long long v77 = a1[2];
  uint64_t v78 = *((void *)a1 + 6);
  uint64_t PlanBannerView = (void (*)(unsigned char *, uint64_t))type metadata accessor for CreatePlanBannerView();
  sub_24EB68C18();
  swift_getKeyPath();
  sub_24EC229E0();
  swift_release();
  swift_release();
  long long v71 = v75;
  unint64_t v60 = sub_24EB733A8();
  uint64_t v10 = sub_24EC22660();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  uint64_t v15 = sub_24EC22640();
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  sub_24EB733FC(v10, v12, v14);
  swift_bridgeObjectRelease();
  uint64_t v80 = *(void *)(a2 + 120);
  *(void *)&long long v75 = v80;
  swift_retain();
  uint64_t v55 = sub_24EC22630();
  uint64_t v54 = v20;
  uint64_t v56 = v21;
  int v62 = v22 & 1;
  sub_24EB733FC(v15, v17, v19);
  swift_bridgeObjectRelease();
  sub_24EB7340C((uint64_t)&v80);
  long long v23 = a1[1];
  long long v75 = *a1;
  long long v76 = v23;
  long long v77 = a1[2];
  uint64_t v78 = *((void *)a1 + 6);
  sub_24EB68C18();
  swift_getKeyPath();
  sub_24EC229E0();
  swift_release();
  swift_release();
  long long v71 = v75;
  uint64_t v24 = sub_24EC22660();
  uint64_t v26 = v25;
  LOBYTE(v15) = v27 & 1;
  uint64_t v28 = sub_24EC22640();
  uint64_t v30 = v29;
  char v32 = v31 & 1;
  sub_24EB733FC(v24, v26, v15);
  swift_bridgeObjectRelease();
  uint64_t v79 = *(void *)(a2 + 104);
  *(void *)&long long v75 = v79;
  swift_retain();
  uint64_t v52 = sub_24EC22630();
  uint64_t v51 = v33;
  uint64_t v53 = v34;
  LODWORD(v60) = v35 & 1;
  sub_24EB733FC(v28, v30, v32);
  swift_bridgeObjectRelease();
  sub_24EB7340C((uint64_t)&v79);
  uint64_t v36 = v63;
  sub_24EB69688((uint64_t)PlanBannerView, v63);
  v74[4] = sub_24EB73438();
  v74[5] = v57;
  v74[3] = swift_getWitnessTable();
  uint64_t v37 = v65;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v38 = v66;
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  uint64_t v39 = v64;
  v57(v64, v36, v37);
  uint64_t v40 = *(void (**)(unsigned char *, uint64_t))(v38 + 8);
  uint64_t v66 = v38 + 8;
  uint64_t PlanBannerView = v40;
  v40(v36, v37);
  uint64_t v41 = v55;
  uint64_t v42 = v54;
  *(void *)&long long v75 = v55;
  *((void *)&v75 + 1) = v54;
  LOBYTE(v38) = v62;
  LOBYTE(v76) = v62;
  *((void *)&v76 + 1) = v56;
  uint64_t v43 = v52;
  *(void *)&long long v71 = v52;
  uint64_t v44 = v51;
  *((void *)&v71 + 1) = v51;
  char v72 = v60;
  uint64_t v73 = v53;
  v74[0] = &v75;
  v74[1] = &v71;
  uint64_t v45 = v39;
  uint64_t v46 = v65;
  v57(v36, v45, v65);
  v74[2] = v36;
  sub_24EB734D8(v41, v42, v38);
  swift_bridgeObjectRetain();
  LOBYTE(v36) = v60;
  sub_24EB734D8(v43, v44, v60);
  swift_bridgeObjectRetain();
  v70[0] = MEMORY[0x263F1A830];
  v70[1] = MEMORY[0x263F1A830];
  v70[2] = v46;
  uint64_t v67 = MEMORY[0x263F1A820];
  uint64_t v68 = MEMORY[0x263F1A820];
  uint64_t v69 = WitnessTable;
  sub_24EB69F84((uint64_t)v74, 3uLL, (uint64_t)v70);
  uint64_t v47 = v46;
  uint64_t v48 = v46;
  uint64_t v49 = PlanBannerView;
  PlanBannerView(v64, v47);
  sub_24EB733FC(v43, v44, (char)v36);
  swift_bridgeObjectRelease();
  sub_24EB733FC(v41, v42, v62);
  swift_bridgeObjectRelease();
  v49(v63, v48);
  sub_24EB733FC(v71, *((uint64_t *)&v71 + 1), v72);
  swift_bridgeObjectRelease();
  sub_24EB733FC(v75, *((uint64_t *)&v75 + 1), v76);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EB6ACCC@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v41 = a3;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946218);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946210);
  uint64_t v7 = *(void *)(a2 + 16);
  sub_24EC224F0();
  sub_24EC22840();
  sub_24EC22380();
  swift_getTupleTypeMetadata2();
  uint64_t v36 = sub_24EC22970();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = sub_24EC22900();
  uint64_t v37 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v32 - v9;
  uint64_t v11 = sub_24EC22380();
  uint64_t v40 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v33 = (char *)&v32 - v12;
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v47 = MEMORY[0x263F18C10];
  uint64_t v38 = v11;
  uint64_t v39 = swift_getWitnessTable();
  *(void *)&v48[0] = v11;
  *((void *)&v48[0] + 1) = v39;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v14 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v34 = (char *)&v32 - v18;
  long long v19 = *(_OWORD *)(v4 + 16);
  v48[0] = *(_OWORD *)v4;
  v48[1] = v19;
  v48[2] = *(_OWORD *)(v4 + 32);
  uint64_t v49 = *(void *)(v4 + 48);
  sub_24EC224C0();
  uint64_t v20 = *(void *)(a2 + 24);
  uint64_t v42 = v7;
  uint64_t v43 = v20;
  uint64_t v44 = v48;
  uint64_t v45 = a1;
  sub_24EC228F0();
  uint64_t v21 = v33;
  sub_24EC22750();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v8);
  sub_24EC22560();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v7;
  *(void *)(v22 + 24) = v20;
  long long v23 = a1[5];
  *(_OWORD *)(v22 + 96) = a1[4];
  *(_OWORD *)(v22 + 112) = v23;
  long long v24 = a1[7];
  *(_OWORD *)(v22 + 128) = a1[6];
  *(_OWORD *)(v22 + 144) = v24;
  long long v25 = a1[1];
  *(_OWORD *)(v22 + 32) = *a1;
  *(_OWORD *)(v22 + 48) = v25;
  long long v26 = a1[3];
  *(_OWORD *)(v22 + 64) = a1[2];
  *(_OWORD *)(v22 + 80) = v26;
  sub_24EB738AC((uint64_t)a1);
  sub_24EC22930();
  uint64_t v27 = v38;
  sub_24EC22710();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v21, v27);
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  uint64_t v29 = v34;
  v28(v34, v17, OpaqueTypeMetadata2);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v14 + 8);
  v30(v17, OpaqueTypeMetadata2);
  v28(v41, v29, OpaqueTypeMetadata2);
  return ((uint64_t (*)(char *, uint64_t))v30)(v29, OpaqueTypeMetadata2);
}

uint64_t sub_24EB6B198@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v32 = a4;
  uint64_t v34 = a1;
  uint64_t v43 = a5;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946210);
  uint64_t v33 = a3;
  uint64_t v38 = sub_24EC224F0();
  uint64_t v37 = sub_24EC22840();
  uint64_t v42 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  char v35 = (char *)v31 - v8;
  uint64_t v9 = sub_24EC22380();
  uint64_t v40 = *(void *)(v9 - 8);
  uint64_t v41 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v36 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v39 = (char *)v31 - v12;
  uint64_t v13 = sub_24EC224C0();
  sub_24EB6B6F4(a1, a2, (uint64_t)&v83);
  long long v14 = v83;
  LOBYTE(a3) = v84;
  uint64_t v15 = *((void *)&v86 + 1);
  uint64_t v16 = v87;
  char v17 = BYTE8(v87);
  v31[0] = *((void *)&v88 + 1);
  v31[1] = v88;
  char v80 = 0;
  char v79 = v84;
  char v78 = v86;
  char v77 = BYTE8(v87);
  char v76 = BYTE8(v89);
  v63[7] = v13;
  v63[8] = 0x4024000000000000;
  char v64 = 0;
  long long v65 = v83;
  char v66 = v84;
  uint64_t v67 = *((void *)&v84 + 1);
  long long v68 = v85;
  char v69 = v86;
  uint64_t v70 = *((void *)&v86 + 1);
  uint64_t v71 = v87;
  char v72 = BYTE8(v87);
  long long v73 = v88;
  uint64_t v74 = v89;
  char v75 = BYTE8(v89);
  sub_24EC22930();
  sub_24EBA5F10(0.0, 1, 0.0, 1, 760.0, 0, 0.0, 1, (uint64_t)v81, 0.0, 1, 0.0, 1);
  sub_24EB733FC(v14, *((uint64_t *)&v14 + 1), a3);
  swift_release();
  swift_bridgeObjectRelease();
  sub_24EB733FC(v15, v16, v17);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v18 = v32;
  uint64_t PlanBannerView = type metadata accessor for CreatePlanBannerView();
  uint64_t v20 = v35;
  sub_24EB69688(PlanBannerView, v35);
  sub_24EC22930();
  v63[5] = sub_24EB73438();
  v63[6] = v18;
  v63[4] = swift_getWitnessTable();
  uint64_t v21 = v37;
  uint64_t WitnessTable = swift_getWitnessTable();
  long long v23 = v36;
  sub_24EC22720();
  (*(void (**)(unsigned char *, uint64_t))(v42 + 8))(v20, v21);
  v63[2] = WitnessTable;
  v63[3] = MEMORY[0x263F18860];
  uint64_t v24 = v41;
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v27 = v39;
  uint64_t v26 = v40;
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  v28(v39, v23, v24);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v26 + 8);
  v29(v23, v24);
  long long v59 = v81[12];
  long long v60 = v81[13];
  long long v61 = v81[14];
  uint64_t v62 = v82;
  long long v55 = v81[8];
  long long v56 = v81[9];
  long long v57 = v81[10];
  long long v58 = v81[11];
  long long v51 = v81[4];
  long long v52 = v81[5];
  long long v53 = v81[6];
  long long v54 = v81[7];
  long long v47 = v81[0];
  long long v48 = v81[1];
  long long v49 = v81[2];
  long long v50 = v81[3];
  v63[0] = &v47;
  v28(v23, v27, v24);
  v63[1] = v23;
  sub_24EB73978((uint64_t)v81);
  v46[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_269946218);
  v46[1] = v24;
  unint64_t v44 = sub_24EB73A04();
  uint64_t v45 = v25;
  sub_24EB69F84((uint64_t)v63, 2uLL, (uint64_t)v46);
  v29(v27, v24);
  sub_24EB73AA4((uint64_t)v81);
  v29(v23, v24);
  long long v95 = v59;
  long long v96 = v60;
  long long v97 = v61;
  uint64_t v98 = v62;
  long long v91 = v55;
  long long v92 = v56;
  long long v93 = v57;
  long long v94 = v58;
  long long v87 = v51;
  long long v88 = v52;
  long long v89 = v53;
  long long v90 = v54;
  long long v83 = v47;
  long long v84 = v48;
  long long v85 = v49;
  long long v86 = v50;
  return sub_24EB73AA4((uint64_t)&v83);
}

uint64_t sub_24EB6B6F4@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a1;
  long long v6 = a1[1];
  long long v44 = *a1;
  long long v45 = v6;
  long long v46 = a1[2];
  uint64_t v47 = *((void *)a1 + 6);
  type metadata accessor for CreatePlanBannerView();
  sub_24EB68C18();
  swift_getKeyPath();
  sub_24EC229E0();
  swift_release();
  swift_release();
  sub_24EB733A8();
  uint64_t v7 = sub_24EC22660();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  uint64_t v12 = sub_24EC22640();
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  sub_24EB733FC(v7, v9, v11);
  swift_bridgeObjectRelease();
  uint64_t v48 = *(void *)(a2 + 120);
  *(void *)&long long v44 = v48;
  swift_retain();
  uint64_t v17 = sub_24EC22630();
  uint64_t v41 = v18;
  uint64_t v42 = v17;
  uint64_t v43 = v19;
  char v40 = v20 & 1;
  sub_24EB733FC(v12, v14, v16);
  swift_bridgeObjectRelease();
  sub_24EB7340C((uint64_t)&v48);
  uint64_t KeyPath = swift_getKeyPath();
  long long v21 = v4[1];
  long long v44 = *v4;
  long long v45 = v21;
  long long v46 = v4[2];
  uint64_t v47 = *((void *)v4 + 6);
  sub_24EB68C18();
  swift_getKeyPath();
  sub_24EC229E0();
  swift_release();
  swift_release();
  uint64_t v22 = sub_24EC22660();
  uint64_t v24 = v23;
  char v26 = v25 & 1;
  uint64_t v27 = sub_24EC22640();
  uint64_t v29 = v28;
  LOBYTE(v9) = v30 & 1;
  sub_24EB733FC(v22, v24, v26);
  swift_bridgeObjectRelease();
  *(void *)&long long v44 = *(void *)(a2 + 104);
  swift_retain();
  uint64_t v31 = sub_24EC22630();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  LOBYTE(v4) = v36 & 1;
  sub_24EB733FC(v27, v29, v9);
  swift_bridgeObjectRelease();
  sub_24EB7340C((uint64_t)&v44);
  uint64_t v37 = swift_getKeyPath();
  *(void *)a3 = v42;
  *(void *)(a3 + 8) = v41;
  *(unsigned char *)(a3 + 16) = v40;
  *(void *)(a3 + 24) = v43;
  *(void *)(a3 + 32) = KeyPath;
  *(void *)(a3 + 40) = 2;
  *(unsigned char *)(a3 + 48) = 0;
  *(void *)(a3 + 56) = v31;
  *(void *)(a3 + 64) = v33;
  *(unsigned char *)(a3 + 72) = (_BYTE)v4;
  *(void *)(a3 + 80) = v35;
  *(void *)(a3 + 88) = v37;
  *(void *)(a3 + 96) = 3;
  *(unsigned char *)(a3 + 104) = 0;
  sub_24EB734D8(v42, v41, v40);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24EB734D8(v31, v33, (char)v4);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24EB733FC(v31, v33, (char)v4);
  swift_release();
  swift_bridgeObjectRelease();
  sub_24EB733FC(v42, v41, v40);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EB6BA90@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v28 = a2;
  uint64_t v31 = a1;
  uint64_t v32 = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946210);
  uint64_t v27 = *(void *)(a3 + 16);
  sub_24EC224F0();
  sub_24EC22840();
  swift_getTupleTypeMetadata3();
  sub_24EC22970();
  swift_getWitnessTable();
  sub_24EC22900();
  uint64_t v5 = sub_24EC22380();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v48 = MEMORY[0x263F18C10];
  uint64_t v6 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v26[1] = sub_24EC224F0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946218);
  sub_24EC22380();
  swift_getTupleTypeMetadata2();
  sub_24EC22970();
  swift_getWitnessTable();
  sub_24EC22900();
  uint64_t v7 = sub_24EC22380();
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v46 = MEMORY[0x263F18C10];
  uint64_t v8 = swift_getWitnessTable();
  *(void *)&v49[0] = v7;
  *((void *)&v49[0] + 1) = v8;
  swift_getOpaqueTypeMetadata2();
  sub_24EC224F0();
  uint64_t v9 = sub_24EC22840();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  char v15 = (char *)v26 - v14;
  char v16 = *v28;
  long long v17 = *(_OWORD *)(v30 + 16);
  v49[0] = *(_OWORD *)v30;
  v49[1] = v17;
  v49[2] = *(_OWORD *)(v30 + 32);
  uint64_t v50 = *(void *)(v30 + 48);
  uint64_t v18 = *(void *)(v29 + 24);
  uint64_t v33 = v27;
  uint64_t v34 = v18;
  char v35 = v16;
  char v36 = v49;
  uint64_t v37 = v31;
  uint64_t v43 = v5;
  uint64_t v44 = v6;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v41 = v6;
  uint64_t v42 = OpaqueTypeConformance2;
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v43 = v7;
  uint64_t v44 = v8;
  uint64_t v21 = swift_getOpaqueTypeConformance2();
  uint64_t v39 = v20;
  uint64_t v40 = v21;
  uint64_t v22 = swift_getWitnessTable();
  sub_24EC22830();
  uint64_t v38 = v22;
  swift_getWitnessTable();
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v23(v15, v13, v9);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v13, v9);
  v23(v32, v15, v9);
  return ((uint64_t (*)(char *, uint64_t))v24)(v15, v9);
}

uint64_t sub_24EB6BF54@<X0>(int a1@<W0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v75 = a5;
  char v76 = a3;
  uint64_t v77 = a2;
  int v73 = a1;
  uint64_t v83 = a6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946218);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946210);
  uint64_t v74 = a4;
  sub_24EC224F0();
  sub_24EC22840();
  sub_24EC22380();
  swift_getTupleTypeMetadata2();
  sub_24EC22970();
  swift_getWitnessTable();
  sub_24EC22900();
  uint64_t v7 = sub_24EC22380();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = MEMORY[0x263F18C10];
  uint64_t v100 = WitnessTable;
  uint64_t v101 = MEMORY[0x263F18C10];
  uint64_t v82 = v7;
  uint64_t v98 = v7;
  uint64_t v99 = swift_getWitnessTable();
  uint64_t v84 = v99;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v69 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  long long v68 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v67 = (char *)&v67 - v13;
  swift_getTupleTypeMetadata3();
  sub_24EC22970();
  swift_getWitnessTable();
  sub_24EC22900();
  uint64_t v14 = sub_24EC22380();
  uint64_t v96 = swift_getWitnessTable();
  uint64_t v97 = v9;
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v98 = v14;
  uint64_t v99 = v15;
  uint64_t v85 = v15;
  uint64_t v16 = swift_getOpaqueTypeMetadata2();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  char v72 = (char *)&v67 - v21;
  uint64_t v22 = sub_24EC224F0();
  uint64_t v71 = *(void *)(v22 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v70 = (char *)&v67 - v24;
  uint64_t v25 = *(void *)(v14 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)&v67 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v67 - v29;
  uint64_t v81 = OpaqueTypeMetadata2;
  uint64_t v80 = sub_24EC224F0();
  uint64_t v79 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  char v78 = (char *)&v67 - v31;
  if ((_BYTE)v73)
  {
    if (v73 == 1)
    {
      uint64_t PlanBannerView = type metadata accessor for CreatePlanBannerView();
      sub_24EB6A148(v76, PlanBannerView, v20);
      uint64_t v33 = v85;
      uint64_t v98 = v14;
      uint64_t v99 = v85;
      uint64_t v77 = MEMORY[0x263F1AF48];
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      char v35 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
      v35(v72, v20, v16);
      char v36 = *(void (**)(char *, uint64_t))(v17 + 8);
      v36(v20, v16);
      v35(v20, v72, v16);
      uint64_t v37 = (uint64_t)v70;
      sub_24EB687AC((uint64_t)v20, v14, v16);
      v36(v20, v16);
      uint64_t v88 = v33;
      uint64_t v89 = OpaqueTypeConformance2;
      swift_getWitnessTable();
      uint64_t v38 = v82;
      uint64_t v39 = v84;
      uint64_t v98 = v82;
      uint64_t v99 = v84;
      swift_getOpaqueTypeConformance2();
      uint64_t v40 = v78;
      sub_24EB686B4(v37, v22);
      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v37, v22);
      uint64_t v41 = v16;
      uint64_t v42 = v40;
      v36(v72, v41);
      uint64_t v43 = v39;
    }
    else
    {
      uint64_t v52 = type metadata accessor for CreatePlanBannerView();
      long long v53 = v68;
      sub_24EB6ACCC(v76, v52, v68);
      uint64_t v38 = v82;
      uint64_t v98 = v82;
      uint64_t v99 = v84;
      char v76 = (_OWORD *)swift_getOpaqueTypeConformance2();
      uint64_t v77 = v22;
      uint64_t v54 = v69;
      long long v55 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
      long long v56 = v67;
      uint64_t v57 = v81;
      v55(v67, v53, v81);
      long long v58 = *(void (**)(char *, uint64_t))(v54 + 8);
      v58(v53, v57);
      v55(v53, v56, v57);
      uint64_t v98 = v14;
      uint64_t v99 = v85;
      uint64_t v59 = swift_getOpaqueTypeConformance2();
      uint64_t v94 = v85;
      uint64_t v95 = v59;
      swift_getWitnessTable();
      uint64_t v42 = v78;
      sub_24EB687AC((uint64_t)v53, v77, v57);
      v58(v53, v57);
      v58(v56, v57);
      uint64_t v43 = v84;
    }
  }
  else
  {
    uint64_t v44 = type metadata accessor for CreatePlanBannerView();
    sub_24EB69C20((uint64_t)v76, v44, v28);
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
    v45(v30, v28, v14);
    uint64_t v46 = *(void (**)(char *, uint64_t))(v25 + 8);
    v46(v28, v14);
    v45(v28, v30, v14);
    uint64_t v47 = v85;
    uint64_t v98 = v14;
    uint64_t v99 = v85;
    uint64_t v77 = MEMORY[0x263F1AF48];
    uint64_t v48 = swift_getOpaqueTypeConformance2();
    uint64_t v49 = (uint64_t)v70;
    sub_24EB686B4((uint64_t)v28, v14);
    v46(v28, v14);
    uint64_t v86 = v47;
    uint64_t v87 = v48;
    swift_getWitnessTable();
    uint64_t v50 = v82;
    uint64_t v43 = v84;
    uint64_t v98 = v82;
    uint64_t v99 = v84;
    swift_getOpaqueTypeConformance2();
    long long v51 = v78;
    sub_24EB686B4(v49, v22);
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v49, v22);
    v46(v30, v14);
    uint64_t v38 = v50;
    uint64_t v42 = v51;
  }
  uint64_t v60 = v85;
  uint64_t v98 = v14;
  uint64_t v99 = v85;
  uint64_t v61 = swift_getOpaqueTypeConformance2();
  uint64_t v92 = v60;
  uint64_t v93 = v61;
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v98 = v38;
  uint64_t v99 = v43;
  uint64_t v63 = swift_getOpaqueTypeConformance2();
  uint64_t v90 = v62;
  uint64_t v91 = v63;
  uint64_t v64 = v80;
  swift_getWitnessTable();
  uint64_t v65 = v79;
  (*(void (**)(uint64_t, char *, uint64_t))(v79 + 16))(v83, v42, v64);
  return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v42, v64);
}

uint64_t sub_24EB6CA3C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v23 = a3;
  uint64_t v24 = a2;
  uint64_t v25 = a1;
  uint64_t v26 = a4;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946228);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946210);
  uint64_t v22 = *(void *)(a3 + 16);
  sub_24EC224F0();
  sub_24EC22840();
  swift_getTupleTypeMetadata3();
  sub_24EC22970();
  swift_getWitnessTable();
  sub_24EC22900();
  sub_24EC22380();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F18C10];
  uint64_t v34 = WitnessTable;
  uint64_t v35 = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_24EC224F0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946218);
  sub_24EC22380();
  swift_getTupleTypeMetadata2();
  sub_24EC22970();
  swift_getWitnessTable();
  sub_24EC22900();
  uint64_t v8 = sub_24EC22380();
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v7;
  *(void *)&v36[0] = v8;
  *((void *)&v36[0] + 1) = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_24EC224F0();
  sub_24EC22840();
  sub_24EC22380();
  sub_24EC22380();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946230);
  sub_24EC22380();
  swift_getTupleTypeMetadata2();
  sub_24EC22970();
  swift_getWitnessTable();
  uint64_t v9 = sub_24EC228E0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v21 - v14;
  LOBYTE(v8) = *v24;
  long long v16 = *(_OWORD *)(v4 + 16);
  v36[0] = *(_OWORD *)v4;
  v36[1] = v16;
  v36[2] = *(_OWORD *)(v4 + 32);
  uint64_t v37 = *(void *)(v4 + 48);
  sub_24EC22400();
  uint64_t v17 = *(void *)(v23 + 24);
  uint64_t v27 = v22;
  uint64_t v28 = v17;
  uint64_t v29 = v25;
  uint64_t v30 = v36;
  char v31 = v8;
  sub_24EC228D0();
  swift_getWitnessTable();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v18(v15, v13, v9);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19(v13, v9);
  v18(v26, v15, v9);
  return ((uint64_t (*)(char *, uint64_t))v19)(v15, v9);
}

uint64_t sub_24EB6CEE8@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v95 = a5;
  uint64_t v96 = a4;
  int v90 = a3;
  uint64_t v91 = a6;
  uint64_t v92 = a2;
  long long v68 = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946210);
  sub_24EC224F0();
  sub_24EC22840();
  swift_getTupleTypeMetadata3();
  sub_24EC22970();
  swift_getWitnessTable();
  sub_24EC22900();
  uint64_t v6 = sub_24EC22380();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = MEMORY[0x263F18C10];
  uint64_t v111 = WitnessTable;
  uint64_t v112 = MEMORY[0x263F18C10];
  uint64_t v86 = MEMORY[0x263F18E48];
  uint64_t v84 = swift_getWitnessTable();
  uint64_t v82 = v6;
  uint64_t v70 = MEMORY[0x263F1AF48];
  swift_getOpaqueTypeMetadata2();
  uint64_t v72 = sub_24EC224F0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946218);
  sub_24EC22380();
  swift_getTupleTypeMetadata2();
  sub_24EC22970();
  swift_getWitnessTable();
  sub_24EC22900();
  uint64_t v9 = sub_24EC22380();
  uint64_t v109 = swift_getWitnessTable();
  uint64_t v110 = v8;
  uint64_t v76 = v9;
  uint64_t v75 = swift_getWitnessTable();
  *(void *)&long long v104 = v9;
  *((void *)&v104 + 1) = v75;
  swift_getOpaqueTypeMetadata2();
  uint64_t v74 = sub_24EC224F0();
  uint64_t v73 = sub_24EC22840();
  uint64_t v79 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  uint64_t v69 = (char *)&v64 - v10;
  uint64_t v78 = sub_24EC22380();
  uint64_t v83 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v71 = (char *)&v64 - v11;
  uint64_t v80 = sub_24EC22380();
  uint64_t v89 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v77 = (char *)&v64 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946230);
  uint64_t v13 = sub_24EC22380();
  uint64_t v87 = *(void *)(v13 - 8);
  uint64_t v88 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v81 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v85 = (char *)&v64 - v16;
  uint64_t v17 = sub_24EC22860();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946380);
  uint64_t v66 = *(void *)(v21 - 8);
  uint64_t v67 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946228);
  uint64_t v24 = MEMORY[0x270FA5388](v94);
  uint64_t v97 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v93 = (uint64_t)&v64 - v26;
  uint64_t v27 = v68;
  type metadata accessor for BrowseBundle();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v29 = self;
  swift_bridgeObjectRetain();
  id v30 = objc_msgSend(v29, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_24EC22880();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x263F1B4B8], v17);
  uint64_t v31 = sub_24EC22870();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t v32 = *v27;
  uint64_t v33 = v92;
  uint64_t v34 = *v92;
  uint64_t v35 = v92[1];
  uint64_t PlanBannerView = type metadata accessor for CreatePlanBannerView();
  *(void *)&long long v104 = v34;
  *((void *)&v104 + 1) = v35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699463E0);
  sub_24EC228A0();
  sub_24EC22930();
  sub_24EC22330();
  *(void *)&long long v104 = v31;
  *((void *)&v104 + 1) = v32;
  LOWORD(v105) = 256;
  *((void *)&v105 + 1) = v113;
  LOBYTE(v106) = v114;
  *((void *)&v106 + 1) = v115;
  LOBYTE(v107) = v116;
  long long v108 = v117;
  sub_24EC22560();
  sub_24EC22950();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269946388);
  sub_24EB73B60();
  sub_24EC22710();
  swift_release();
  uint64_t v37 = v66;
  uint64_t v36 = v67;
  uint64_t v38 = v97;
  (*(void (**)(uint64_t, char *, uint64_t))(v66 + 16))(v97, v23, v67);
  *(_WORD *)(v38 + *(int *)(v94 + 36)) = 0;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v36);
  sub_24EB73BFC(v38, v93);
  long long v39 = *((_OWORD *)v33 + 1);
  long long v104 = *(_OWORD *)v33;
  long long v105 = v39;
  long long v106 = *((_OWORD *)v33 + 2);
  uint64_t v107 = v33[6];
  LOBYTE(v103[0]) = v90;
  uint64_t v40 = v69;
  sub_24EB6BA90((uint64_t)v27, (char *)v103, PlanBannerView, v69);
  sub_24EC22930();
  uint64_t v41 = v84;
  *(void *)&long long v104 = v82;
  *((void *)&v104 + 1) = v84;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v103[11] = v41;
  v103[12] = OpaqueTypeConformance2;
  uint64_t v43 = swift_getWitnessTable();
  *(void *)&long long v104 = v76;
  *((void *)&v104 + 1) = v75;
  uint64_t v44 = swift_getOpaqueTypeConformance2();
  v103[9] = v43;
  v103[10] = v44;
  v103[8] = swift_getWitnessTable();
  uint64_t v45 = v73;
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v47 = v71;
  sub_24EC22730();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v40, v45);
  sub_24EC22930();
  uint64_t v48 = MEMORY[0x263F19100];
  v103[6] = v46;
  v103[7] = MEMORY[0x263F19100];
  uint64_t v62 = v78;
  uint64_t v63 = swift_getWitnessTable();
  uint64_t v49 = v77;
  sub_24EC22730();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v47, v62);
  uint64_t v98 = v96;
  uint64_t v99 = v95;
  uint64_t v100 = v92;
  sub_24EC22930();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269946398);
  v103[4] = v63;
  v103[5] = v48;
  uint64_t v50 = v80;
  uint64_t v51 = swift_getWitnessTable();
  sub_24EB74350(&qword_2699463A0, &qword_269946398);
  uint64_t v52 = v81;
  sub_24EC226A0();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v49, v50);
  uint64_t v53 = sub_24EB74350(&qword_2699463A8, &qword_269946230);
  v103[2] = v51;
  v103[3] = v53;
  uint64_t v54 = v88;
  uint64_t v96 = swift_getWitnessTable();
  uint64_t v55 = v87;
  long long v56 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
  uint64_t v57 = v85;
  v56(v85, v52, v54);
  long long v58 = *(void (**)(char *, uint64_t))(v55 + 8);
  v58(v52, v54);
  uint64_t v59 = v93;
  uint64_t v60 = v97;
  sub_24EB741CC(v93, v97, &qword_269946228);
  *(void *)&long long v104 = v60;
  v56(v52, v57, v54);
  *((void *)&v104 + 1) = v52;
  v103[0] = v94;
  v103[1] = v54;
  unint64_t v101 = sub_24EB73CEC();
  uint64_t v102 = v96;
  sub_24EB69F84((uint64_t)&v104, 2uLL, (uint64_t)v103);
  v58(v57, v54);
  sub_24EB742F4(v59, &qword_269946228);
  v58(v52, v54);
  return sub_24EB742F4(v97, &qword_269946228);
}

double sub_24EB6DB40(double a1)
{
  return a1 * 0.5;
}

uint64_t sub_24EB6DB4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v21[1] = a5;
  uint64_t v9 = sub_24EC22350();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24EC227C0();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a3;
  *(void *)(v15 + 24) = a4;
  long long v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v15 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v15 + 48) = v16;
  *(_OWORD *)(v15 + 64) = *(_OWORD *)(a2 + 32);
  *(void *)(v15 + 80) = *(void *)(a2 + 48);
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15 + v14, v12, v9);
  v21[3] = v13;
  uint64_t v22 = sub_24EB73EB0;
  uint64_t v23 = v15;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  sub_24EB7245C(a2);
  sub_24EC22340();
  void v21[2] = v17;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a3;
  *(void *)(v18 + 24) = a4;
  long long v19 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v18 + 48) = v19;
  *(_OWORD *)(v18 + 64) = *(_OWORD *)(a2 + 32);
  *(void *)(v18 + 80) = *(void *)(a2 + 48);
  sub_24EB7245C(a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699463C8);
  sub_24EB73FD4(&qword_2699463D0, &qword_2699463C8);
  sub_24EB74044();
  sub_24EC22780();
  swift_release();
  swift_release();
  sub_24EB72640((uint64_t)v22);
  return sub_24EB72640(v24);
}

uint64_t sub_24EB6DDA4(uint64_t a1)
{
  return sub_24EB74098(a1);
}

uint64_t sub_24EB6DE1C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v24 = a3;
  uint64_t v25 = a2;
  uint64_t v26 = a1;
  uint64_t v27 = a4;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946208);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946210);
  uint64_t v23 = *(void *)(a3 + 16);
  sub_24EC224F0();
  sub_24EC22840();
  swift_getTupleTypeMetadata3();
  sub_24EC22970();
  swift_getWitnessTable();
  sub_24EC22900();
  sub_24EC22380();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F18C10];
  uint64_t v35 = WitnessTable;
  uint64_t v36 = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_24EC224F0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946218);
  sub_24EC22380();
  swift_getTupleTypeMetadata2();
  sub_24EC22970();
  swift_getWitnessTable();
  sub_24EC22900();
  uint64_t v8 = sub_24EC22380();
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v34 = v7;
  *(void *)&v37[0] = v8;
  *((void *)&v37[0] + 1) = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_24EC224F0();
  sub_24EC22840();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946220);
  sub_24EC22380();
  swift_getTupleTypeMetadata2();
  sub_24EC22970();
  swift_getWitnessTable();
  uint64_t v9 = sub_24EC22900();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v22 - v14;
  char v16 = *v25;
  long long v17 = *(_OWORD *)(v4 + 16);
  v37[0] = *(_OWORD *)v4;
  v37[1] = v17;
  v37[2] = *(_OWORD *)(v4 + 32);
  uint64_t v38 = *(void *)(v4 + 48);
  sub_24EC224C0();
  uint64_t v18 = *(void *)(v24 + 24);
  uint64_t v28 = v23;
  uint64_t v29 = v18;
  uint64_t v30 = v26;
  uint64_t v31 = v37;
  char v32 = v16;
  sub_24EC228F0();
  swift_getWitnessTable();
  long long v19 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v19(v15, v13, v9);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v10 + 8);
  v20(v13, v9);
  v19(v27, v15, v9);
  return ((uint64_t (*)(char *, uint64_t))v20)(v15, v9);
}

uint64_t sub_24EB6E290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v56 = a5;
  uint64_t v54 = a4;
  int v55 = a3;
  uint64_t v57 = a2;
  uint64_t v58 = a6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946210);
  sub_24EC224F0();
  sub_24EC22840();
  swift_getTupleTypeMetadata3();
  sub_24EC22970();
  swift_getWitnessTable();
  sub_24EC22900();
  uint64_t v7 = sub_24EC22380();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = MEMORY[0x263F18C10];
  v65[11] = WitnessTable;
  v65[12] = MEMORY[0x263F18C10];
  uint64_t v53 = MEMORY[0x263F18E48];
  uint64_t v52 = swift_getWitnessTable();
  uint64_t v51 = v7;
  uint64_t v43 = MEMORY[0x263F1AF48];
  swift_getOpaqueTypeMetadata2();
  uint64_t v44 = sub_24EC224F0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946218);
  sub_24EC22380();
  swift_getTupleTypeMetadata2();
  sub_24EC22970();
  swift_getWitnessTable();
  sub_24EC22900();
  uint64_t v10 = sub_24EC22380();
  v65[9] = swift_getWitnessTable();
  v65[10] = v9;
  uint64_t v48 = v10;
  uint64_t v47 = swift_getWitnessTable();
  uint64_t v62 = v10;
  uint64_t v63 = v47;
  swift_getOpaqueTypeMetadata2();
  uint64_t v46 = sub_24EC224F0();
  uint64_t v11 = sub_24EC22840();
  uint64_t v50 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v42 = (char *)&v40 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946220);
  uint64_t v13 = sub_24EC22380();
  uint64_t v49 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  char v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v45 = (char *)&v40 - v17;
  uint64_t v18 = sub_24EC22860();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = a1;
  type metadata accessor for BrowseBundle();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v23 = self;
  swift_bridgeObjectRetain();
  id v24 = objc_msgSend(v23, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_24EC22880();
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v21, *MEMORY[0x263F1B4B8], v18);
  uint64_t v25 = sub_24EC22870();
  swift_release();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  LOBYTE(v62) = v55;
  uint64_t PlanBannerView = type metadata accessor for CreatePlanBannerView();
  uint64_t v27 = v42;
  sub_24EB6BA90(v41, (char *)&v62, PlanBannerView, v42);
  uint64_t v28 = v52;
  uint64_t v62 = v51;
  uint64_t v63 = v52;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v65[7] = v28;
  v65[8] = OpaqueTypeConformance2;
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v62 = v48;
  uint64_t v63 = v47;
  uint64_t v31 = swift_getOpaqueTypeConformance2();
  v65[5] = v30;
  v65[6] = v31;
  v65[4] = swift_getWitnessTable();
  uint64_t v32 = swift_getWitnessTable();
  sub_24EC226E0();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v27, v11);
  uint64_t v33 = sub_24EB74350(&qword_2699462D0, &qword_269946220);
  v65[2] = v32;
  v65[3] = v33;
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v35 = v49;
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
  uint64_t v37 = v45;
  v36(v45, v16, v13);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v35 + 8);
  v38(v16, v13);
  uint64_t v62 = v25;
  uint64_t v63 = 0x4007878787878787;
  __int16 v64 = 256;
  v65[0] = &v62;
  v36(v16, v37, v13);
  v65[1] = v16;
  swift_retain();
  v61[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_269946208);
  v61[1] = v13;
  uint64_t v59 = sub_24EB73FD4(&qword_2699462D8, &qword_269946208);
  uint64_t v60 = v34;
  sub_24EB69F84((uint64_t)v65, 2uLL, (uint64_t)v61);
  v38(v37, v13);
  swift_release();
  v38(v16, v13);
  return swift_release();
}

uint64_t sub_24EB6EA5C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v94 = a3;
  uint64_t v79 = a2;
  uint64_t v95 = a1;
  uint64_t v93 = a4;
  uint64_t v88 = sub_24EC223A0() - 8;
  MEMORY[0x270FA5388](v88);
  uint64_t v87 = (char *)v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699463E8) - 8;
  MEMORY[0x270FA5388](v90);
  uint64_t v89 = (uint64_t)v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699463F0);
  MEMORY[0x270FA5388](v92);
  uint64_t v91 = (uint64_t)v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_24EC22370();
  uint64_t v84 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v83 = (char *)v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946210);
  uint64_t v86 = *(void *)(a3 + 16);
  sub_24EC224F0();
  sub_24EC22840();
  swift_getTupleTypeMetadata3();
  sub_24EC22970();
  swift_getWitnessTable();
  sub_24EC22900();
  uint64_t v10 = sub_24EC22380();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v12 = MEMORY[0x263F18C10];
  uint64_t v118 = WitnessTable;
  uint64_t v119 = MEMORY[0x263F18C10];
  uint64_t v74 = MEMORY[0x263F18E48];
  uint64_t v73 = swift_getWitnessTable();
  *(void *)uint64_t v113 = v10;
  *(void *)&v113[8] = v73;
  swift_getOpaqueTypeMetadata2();
  sub_24EC224F0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946218);
  sub_24EC22380();
  swift_getTupleTypeMetadata2();
  sub_24EC22970();
  swift_getWitnessTable();
  sub_24EC22900();
  uint64_t v13 = sub_24EC22380();
  uint64_t v116 = swift_getWitnessTable();
  uint64_t v117 = v12;
  uint64_t v68 = v13;
  uint64_t v67 = swift_getWitnessTable();
  *(void *)uint64_t v113 = v13;
  *(void *)&v113[8] = v67;
  swift_getOpaqueTypeMetadata2();
  v65[1] = sub_24EC224F0();
  uint64_t v14 = sub_24EC22840();
  uint64_t v69 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  char v16 = (char *)v65 - v15;
  uint64_t v17 = sub_24EC22380();
  uint64_t v72 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)v65 - v18;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946238);
  uint64_t v70 = sub_24EC22380();
  uint64_t v75 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v66 = (char *)v65 - v20;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946240);
  uint64_t v77 = sub_24EC22380();
  uint64_t v82 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  uint64_t v71 = (char *)v65 - v21;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946248);
  uint64_t v81 = sub_24EC22380();
  uint64_t v80 = *(void *)(v81 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v81);
  uint64_t v76 = (char *)v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v78 = (char *)v65 - v24;
  char v25 = *v79;
  uint64_t v26 = *(void *)(v4 + 24);
  char v27 = *(unsigned char *)(v4 + 32);
  *(void *)uint64_t v113 = *(void *)v4;
  *(_OWORD *)&v113[8] = *(_OWORD *)(v4 + 8);
  *(void *)&v113[24] = v26;
  LOBYTE(v114) = v27;
  long long v115 = *(_OWORD *)(v4 + 40);
  char v112 = v25;
  sub_24EB6BA90(v95, &v112, v94, v16);
  sub_24EC22940();
  *(void *)uint64_t v113 = v10;
  uint64_t v28 = v73;
  *(void *)&v113[8] = v73;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v110 = v28;
  uint64_t v111 = OpaqueTypeConformance2;
  uint64_t v30 = swift_getWitnessTable();
  *(void *)uint64_t v113 = v68;
  *(void *)&v113[8] = v67;
  uint64_t v31 = swift_getOpaqueTypeConformance2();
  uint64_t v108 = v30;
  uint64_t v109 = v31;
  uint64_t v107 = swift_getWitnessTable();
  uint64_t v64 = swift_getWitnessTable();
  sub_24EC22730();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v16, v14);
  swift_getKeyPath();
  uint64_t v32 = v84;
  uint64_t v33 = v83;
  uint64_t v34 = v85;
  (*(void (**)(char *, void, uint64_t))(v84 + 104))(v83, *MEMORY[0x263F18DC8], v85);
  uint64_t v105 = v64;
  uint64_t v106 = MEMORY[0x263F19100];
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v36 = v66;
  sub_24EC226C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v19, v17);
  sub_24EC22940();
  uint64_t v37 = *(void *)(v94 + 24);
  uint64_t v96 = v86;
  uint64_t v97 = v37;
  uint64_t v38 = v95;
  uint64_t v98 = v95;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269946208);
  uint64_t v39 = sub_24EB74350(&qword_269946260, &qword_269946238);
  uint64_t v103 = v35;
  uint64_t v104 = v39;
  uint64_t v40 = v70;
  uint64_t v41 = swift_getWitnessTable();
  sub_24EB73FD4(&qword_2699462D8, &qword_269946208);
  uint64_t v42 = v71;
  sub_24EC226A0();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v36, v40);
  uint64_t v43 = *(void *)(v38 + 88);
  uint64_t v44 = v87;
  uint64_t v45 = &v87[*(int *)(v88 + 28)];
  uint64_t v46 = *MEMORY[0x263F19860];
  uint64_t v47 = sub_24EC22480();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 104))(v45, v46, v47);
  *uint64_t v44 = v43;
  v44[1] = v43;
  sub_24EC222F0();
  uint64_t v48 = v89;
  sub_24EB74168((uint64_t)v44, v89);
  uint64_t v49 = v48 + *(int *)(v90 + 44);
  long long v50 = *(_OWORD *)&v113[16];
  *(_OWORD *)uint64_t v49 = *(_OWORD *)v113;
  *(_OWORD *)(v49 + 16) = v50;
  *(void *)(v49 + 32) = v114;
  sub_24EB726B0((uint64_t)v44);
  sub_24EC227D0();
  uint64_t v51 = sub_24EC227E0();
  swift_release();
  uint64_t v52 = v91;
  sub_24EB741CC(v48, v91, &qword_2699463E8);
  *(void *)(v52 + *(int *)(v92 + 36)) = v51;
  sub_24EB742F4(v48, &qword_2699463E8);
  sub_24EC22930();
  uint64_t v53 = sub_24EB74350(&qword_269946268, &qword_269946240);
  uint64_t v101 = v41;
  uint64_t v102 = v53;
  uint64_t v54 = v77;
  uint64_t v55 = swift_getWitnessTable();
  sub_24EB74230();
  uint64_t v56 = v76;
  sub_24EC22740();
  sub_24EB742F4(v52, &qword_2699463F0);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v42, v54);
  uint64_t v57 = sub_24EB74350(&qword_269946270, &qword_269946248);
  uint64_t v99 = v55;
  uint64_t v100 = v57;
  uint64_t v58 = v81;
  swift_getWitnessTable();
  uint64_t v59 = v80;
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
  uint64_t v61 = v78;
  v60(v78, v56, v58);
  uint64_t v62 = *(void (**)(char *, uint64_t))(v59 + 8);
  v62(v56, v58);
  v60(v93, v61, v58);
  return ((uint64_t (*)(char *, uint64_t))v62)(v61, v58);
}

uint64_t sub_24EB6F7DC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24EC22860();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for BrowseBundle();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v9 = self;
  swift_bridgeObjectRetain();
  id v10 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_24EC22880();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F1B4B8], v4);
  uint64_t v11 = sub_24EC22870();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v13 = *a1;
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = v13;
  *(_WORD *)(a2 + 16) = 256;
  return result;
}

uint64_t CreatePlanBannerView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v143 = a1;
  uint64_t v147 = a2;
  uint64_t v3 = sub_24EC224B0();
  uint64_t v128 = *(void *)(v3 - 8);
  uint64_t v129 = v3;
  MEMORY[0x270FA5388](v3);
  v127 = (char *)&v112 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24EC22530();
  uint64_t v125 = *(void *)(v5 - 8);
  uint64_t v126 = v5;
  MEMORY[0x270FA5388](v5);
  v124 = (char *)&v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_24EC223A0();
  MEMORY[0x270FA5388](v123);
  v122 = (char *)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946208);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946210);
  uint64_t v146 = *(void *)(a1 + 16);
  sub_24EC224F0();
  sub_24EC22840();
  swift_getTupleTypeMetadata3();
  sub_24EC22970();
  swift_getWitnessTable();
  sub_24EC22900();
  uint64_t v8 = sub_24EC22380();
  uint64_t v136 = MEMORY[0x263F1B6E0];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v10 = MEMORY[0x263F18C10];
  uint64_t v190 = WitnessTable;
  uint64_t v191 = MEMORY[0x263F18C10];
  uint64_t v149 = swift_getWitnessTable();
  *(void *)&long long v192 = v8;
  uint64_t v145 = v8;
  *((void *)&v192 + 1) = v149;
  uint64_t v138 = MEMORY[0x263F1AF48];
  swift_getOpaqueTypeMetadata2();
  v139 = (char *)sub_24EC224F0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946218);
  sub_24EC22380();
  swift_getTupleTypeMetadata2();
  sub_24EC22970();
  swift_getWitnessTable();
  sub_24EC22900();
  uint64_t v11 = sub_24EC22380();
  uint64_t v188 = swift_getWitnessTable();
  uint64_t v189 = v10;
  uint64_t v142 = v11;
  uint64_t v141 = swift_getWitnessTable();
  *(void *)&long long v192 = v11;
  *((void *)&v192 + 1) = v141;
  swift_getOpaqueTypeMetadata2();
  uint64_t v140 = sub_24EC224F0();
  uint64_t v12 = sub_24EC22840();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946220);
  uint64_t v137 = v12;
  sub_24EC22380();
  swift_getTupleTypeMetadata2();
  sub_24EC22970();
  swift_getWitnessTable();
  sub_24EC22900();
  uint64_t v131 = sub_24EC22380();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946228);
  uint64_t v132 = sub_24EC22380();
  sub_24EC22380();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946230);
  sub_24EC22380();
  swift_getTupleTypeMetadata2();
  sub_24EC22970();
  swift_getWitnessTable();
  sub_24EC228E0();
  sub_24EC22380();
  uint64_t v130 = sub_24EC224F0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946238);
  uint64_t v133 = sub_24EC22380();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946240);
  uint64_t v134 = sub_24EC22380();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946248);
  uint64_t v135 = sub_24EC22380();
  uint64_t v148 = sub_24EC224F0();
  uint64_t v13 = sub_24EC22840();
  uint64_t v115 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v114 = (char *)&v112 - v14;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946250);
  uint64_t v15 = sub_24EC22380();
  uint64_t v117 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v116 = (char *)&v112 - v16;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946258);
  uint64_t v17 = sub_24EC22380();
  uint64_t v120 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v118 = (char *)&v112 - v18;
  uint64_t v19 = sub_24EC22380();
  uint64_t v121 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v119 = (char *)&v112 - v20;
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v22 = MEMORY[0x263F19100];
  uint64_t v186 = v21;
  uint64_t v187 = MEMORY[0x263F19100];
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v184 = swift_getWitnessTable();
  uint64_t v185 = v22;
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v182 = v23;
  uint64_t v183 = v24;
  uint64_t v136 = swift_getWitnessTable();
  *(void *)&long long v192 = v145;
  uint64_t v25 = v149;
  *((void *)&v192 + 1) = v149;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v180 = v25;
  uint64_t v181 = OpaqueTypeConformance2;
  uint64_t v27 = swift_getWitnessTable();
  *(void *)&long long v192 = v142;
  *((void *)&v192 + 1) = v141;
  uint64_t v28 = swift_getOpaqueTypeConformance2();
  uint64_t v178 = v27;
  uint64_t v179 = v28;
  uint64_t v177 = swift_getWitnessTable();
  uint64_t v175 = swift_getWitnessTable();
  uint64_t v176 = v22;
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v30 = sub_24EB74350(&qword_269946260, &qword_269946238);
  uint64_t v173 = v29;
  uint64_t v174 = v30;
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v32 = sub_24EB74350(&qword_269946268, &qword_269946240);
  uint64_t v171 = v31;
  uint64_t v172 = v32;
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v34 = sub_24EB74350(&qword_269946270, &qword_269946248);
  uint64_t v169 = v33;
  uint64_t v170 = v34;
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v167 = v136;
  uint64_t v168 = v35;
  uint64_t v131 = swift_getWitnessTable();
  uint64_t v166 = v131;
  uint64_t v135 = v13;
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v37 = sub_24EB74350(&qword_269946278, &qword_269946250);
  uint64_t v132 = v36;
  uint64_t v164 = v36;
  uint64_t v165 = v37;
  uint64_t v136 = v15;
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v39 = sub_24EB74350(&qword_269946280, &qword_269946258);
  uint64_t v133 = v38;
  uint64_t v162 = v38;
  uint64_t v163 = v39;
  uint64_t v137 = v17;
  uint64_t v134 = swift_getWitnessTable();
  uint64_t v160 = v134;
  uint64_t v161 = MEMORY[0x263F1A240];
  uint64_t v40 = swift_getWitnessTable();
  uint64_t v145 = v19;
  *(void *)&long long v192 = v19;
  uint64_t v149 = v40;
  *((void *)&v192 + 1) = v40;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v42 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v44 = (char *)&v112 - v43;
  sub_24EC22540();
  uint64_t v45 = sub_24EC22380();
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  uint64_t v49 = (char *)&v112 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v47);
  uint64_t v51 = (char *)&v112 - v50;
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946288);
  uint64_t v141 = v45;
  uint64_t v138 = v52;
  uint64_t v142 = sub_24EC224F0();
  uint64_t v140 = *(void *)(v142 - 8);
  MEMORY[0x270FA5388](v142);
  v139 = (char *)&v112 - v53;
  long long v54 = *((_OWORD *)v144 + 1);
  long long v207 = *(_OWORD *)v144;
  long long v208 = v54;
  long long v56 = *(_OWORD *)v144;
  long long v55 = *((_OWORD *)v144 + 1);
  long long v209 = *((_OWORD *)v144 + 2);
  uint64_t v210 = *((void *)v144 + 6);
  long long v192 = v56;
  long long v193 = v55;
  long long v194 = *((_OWORD *)v144 + 2);
  uint64_t v195 = *((void *)v144 + 6);
  uint64_t v57 = v143;
  sub_24EB68C18();
  swift_getKeyPath();
  sub_24EC229E0();
  swift_release();
  swift_release();
  if (v192 == 2)
  {
    long long v192 = v207;
    long long v193 = v208;
    long long v194 = v209;
    uint64_t v195 = v210;
    v144 = v51;
    sub_24EB68C18();
    swift_getKeyPath();
    uint64_t v130 = v46;
    sub_24EC229E0();
    swift_release();
    swift_release();
    char v58 = v192;
    LOBYTE(v201) = v192;
    uint64_t v59 = *(void *)(v57 + 24);
    uint64_t v113 = v59;
    uint64_t v60 = sub_24EB688A4(&v201, (uint64_t)&v192);
    MEMORY[0x270FA5388](v60);
    uint64_t v143 = v42;
    uint64_t v61 = v146;
    *(&v112 - 6) = v146;
    *(&v112 - 5) = v59;
    *((unsigned char *)&v112 - 32) = v58;
    *(&v112 - 3) = (uint64_t)&v207;
    *(&v112 - 2) = (uint64_t)&v192;
    uint64_t v62 = v114;
    sub_24EC22830();
    uint64_t v201 = MEMORY[0x25334A3A0](objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.109803922, 0.109803922, 0.117647059, 1.0));
    sub_24EC22570();
    uint64_t v63 = v116;
    uint64_t v64 = v135;
    sub_24EC226B0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v115 + 8))(v62, v64);
    uint64_t v65 = v200;
    uint64_t v66 = *(int *)(v123 + 20);
    uint64_t v148 = OpaqueTypeMetadata2;
    uint64_t v67 = v122;
    uint64_t v68 = &v122[v66];
    uint64_t v69 = *MEMORY[0x263F19860];
    uint64_t v70 = sub_24EC22480();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v70 - 8) + 104))(v68, v69, v70);
    *uint64_t v67 = v65;
    v67[1] = v65;
    sub_24EB72668(&qword_2699462C8, MEMORY[0x263F19048]);
    uint64_t v71 = v118;
    uint64_t v72 = v136;
    sub_24EC227A0();
    sub_24EB726B0((uint64_t)v67);
    (*(void (**)(char *, uint64_t))(v117 + 8))(v63, v72);
    uint64_t v73 = swift_allocObject();
    uint64_t v74 = v113;
    *(void *)(v73 + 16) = v61;
    *(void *)(v73 + 24) = v74;
    long long v75 = v208;
    *(_OWORD *)(v73 + 32) = v207;
    *(_OWORD *)(v73 + 48) = v75;
    *(_OWORD *)(v73 + 64) = v209;
    *(void *)(v73 + 80) = v210;
    sub_24EB7245C((uint64_t)&v207);
    uint64_t v76 = v119;
    uint64_t v77 = v137;
    sub_24EC22770();
    swift_release();
    (*(void (**)(char *, uint64_t))(v120 + 8))(v71, v77);
    uint64_t v78 = v124;
    sub_24EC22520();
    uint64_t v79 = v145;
    uint64_t v80 = v149;
    sub_24EC226F0();
    (*(void (**)(char *, uint64_t))(v125 + 8))(v78, v126);
    (*(void (**)(char *, uint64_t))(v121 + 8))(v76, v79);
    uint64_t v81 = v127;
    sub_24EC22490();
    uint64_t v201 = v79;
    uint64_t v202 = v80;
    uint64_t v82 = swift_getOpaqueTypeConformance2();
    uint64_t v83 = v148;
    sub_24EC22700();
    (*(void (**)(char *, uint64_t))(v128 + 8))(v81, v129);
    (*(void (**)(char *, uint64_t))(v143 + 8))(v44, v83);
    uint64_t v84 = sub_24EB72668(&qword_269946290, MEMORY[0x263F1A470]);
    uint64_t v150 = v82;
    uint64_t v151 = v84;
    uint64_t v85 = v141;
    uint64_t v148 = swift_getWitnessTable();
    uint64_t v86 = v130;
    uint64_t v87 = *(void (**)(char *, char *, uint64_t))(v130 + 16);
    uint64_t v88 = v144;
    v87(v144, v49, v85);
    uint64_t v89 = *(void (**)(char *, uint64_t))(v86 + 8);
    v89(v49, v85);
    v87(v49, v88, v85);
    sub_24EB724F4(&qword_269946298, &qword_269946288, (void (*)(void))sub_24EB724C4);
    uint64_t v90 = v139;
    sub_24EB686B4((uint64_t)v49, v85);
    sub_24EB72734((uint64_t)&v192);
    v89(v49, v85);
    v89(v88, v85);
    uint64_t v91 = v149;
  }
  else
  {
    uint64_t v92 = sub_24EC227C0();
    sub_24EC22930();
    sub_24EC22330();
    uint64_t v93 = v201;
    char v94 = v202;
    uint64_t v95 = v203;
    char v96 = v204;
    uint64_t v97 = v205;
    uint64_t v98 = v206;
    uint64_t v99 = swift_allocObject();
    uint64_t v100 = *(void *)(v57 + 24);
    *(void *)(v99 + 16) = v146;
    *(void *)(v99 + 24) = v100;
    long long v101 = v208;
    *(_OWORD *)(v99 + 32) = v207;
    *(_OWORD *)(v99 + 48) = v101;
    *(_OWORD *)(v99 + 64) = v209;
    *(void *)(v99 + 80) = v210;
    *(void *)&long long v192 = v92;
    *((void *)&v192 + 1) = v93;
    LOBYTE(v193) = v94;
    *((void *)&v193 + 1) = v95;
    LOBYTE(v194) = v96;
    *((void *)&v194 + 1) = v97;
    uint64_t v195 = v98;
    v196 = sub_24EB74398;
    uint64_t v197 = v99;
    uint64_t v199 = 0;
    uint64_t v198 = 0;
    sub_24EB7245C((uint64_t)&v207);
    uint64_t v79 = v145;
    uint64_t v91 = v149;
    uint64_t v158 = v145;
    uint64_t v159 = v149;
    uint64_t v102 = swift_getOpaqueTypeConformance2();
    uint64_t v103 = sub_24EB72668(&qword_269946290, MEMORY[0x263F1A470]);
    uint64_t v156 = v102;
    uint64_t v157 = v103;
    uint64_t v104 = v141;
    swift_getWitnessTable();
    sub_24EB724F4(&qword_269946298, &qword_269946288, (void (*)(void))sub_24EB724C4);
    uint64_t v90 = v139;
    sub_24EB687AC((uint64_t)&v192, v104, v138);
    swift_release();
    sub_24EB72640((uint64_t)sub_24EB74398);
    sub_24EB72640(0);
  }
  uint64_t v158 = v79;
  uint64_t v159 = v91;
  uint64_t v105 = swift_getOpaqueTypeConformance2();
  uint64_t v106 = sub_24EB72668(&qword_269946290, MEMORY[0x263F1A470]);
  uint64_t v154 = v105;
  uint64_t v155 = v106;
  uint64_t v107 = swift_getWitnessTable();
  uint64_t v108 = sub_24EB724F4(&qword_269946298, &qword_269946288, (void (*)(void))sub_24EB724C4);
  uint64_t v152 = v107;
  uint64_t v153 = v108;
  uint64_t v109 = v142;
  swift_getWitnessTable();
  uint64_t v110 = v140;
  (*(void (**)(uint64_t, char *, uint64_t))(v140 + 16))(v147, v90, v109);
  return (*(uint64_t (**)(char *, uint64_t))(v110 + 8))(v90, v109);
}

uint64_t sub_24EB70E80@<X0>(int a1@<W0>, void (*a2)(char *, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v144 = a5;
  uint64_t v145 = a3;
  uint64_t v146 = a2;
  int v142 = a1;
  uint64_t v152 = a6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946210);
  uint64_t v143 = a4;
  sub_24EC224F0();
  sub_24EC22840();
  swift_getTupleTypeMetadata3();
  sub_24EC22970();
  swift_getWitnessTable();
  sub_24EC22900();
  uint64_t v7 = sub_24EC22380();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = MEMORY[0x263F18C10];
  uint64_t v250 = WitnessTable;
  uint64_t v251 = MEMORY[0x263F18C10];
  uint64_t v157 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  uint64_t v167 = v7;
  uint64_t v10 = sub_24EC224F0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946218);
  sub_24EC22380();
  swift_getTupleTypeMetadata2();
  sub_24EC22970();
  swift_getWitnessTable();
  sub_24EC22900();
  uint64_t v11 = sub_24EC22380();
  uint64_t v246 = swift_getWitnessTable();
  uint64_t v247 = v9;
  uint64_t v165 = v11;
  uint64_t v248 = v11;
  uint64_t v249 = swift_getWitnessTable();
  uint64_t v160 = v249;
  swift_getOpaqueTypeMetadata2();
  uint64_t v166 = v10;
  uint64_t v159 = sub_24EC224F0();
  uint64_t v12 = sub_24EC22840();
  uint64_t v13 = sub_24EC22380();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946238);
  uint64_t v14 = sub_24EC22380();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946240);
  uint64_t v163 = v14;
  uint64_t v15 = sub_24EC22380();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946248);
  uint64_t v164 = v15;
  uint64_t v16 = sub_24EC22380();
  uint64_t v138 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v137 = (char *)&v133 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v140 = (char *)&v133 - v19;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946228);
  uint64_t v161 = v13;
  sub_24EC22380();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946230);
  sub_24EC22380();
  swift_getTupleTypeMetadata2();
  sub_24EC22970();
  swift_getWitnessTable();
  uint64_t v20 = sub_24EC228E0();
  uint64_t v135 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v133 - v21;
  uint64_t v156 = v23;
  uint64_t v24 = sub_24EC22380();
  uint64_t v136 = *(void *)(v24 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v133 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  v139 = (char *)&v133 - v28;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946208);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946220);
  uint64_t v162 = v12;
  sub_24EC22380();
  swift_getTupleTypeMetadata2();
  sub_24EC22970();
  swift_getWitnessTable();
  uint64_t v29 = sub_24EC22900();
  uint64_t v30 = sub_24EC22380();
  uint64_t v154 = v24;
  uint64_t v31 = sub_24EC224F0();
  uint64_t v141 = *(void *)(v31 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  uint64_t v153 = (uint64_t)&v133 - v33;
  uint64_t v34 = *(void *)(v29 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](v32);
  uint64_t v37 = (char *)&v133 - v36;
  uint64_t v147 = v30;
  uint64_t v38 = *(void *)(v30 - 8);
  uint64_t v39 = MEMORY[0x270FA5388](v35);
  uint64_t v41 = (char *)&v133 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  uint64_t v43 = (char *)&v133 - v42;
  uint64_t v148 = v44;
  uint64_t v151 = v16;
  uint64_t v45 = sub_24EC224F0();
  uint64_t v149 = *(void *)(v45 - 8);
  uint64_t v150 = v45;
  MEMORY[0x270FA5388](v45);
  uint64_t v158 = (char *)&v133 - v46;
  uint64_t v155 = v29;
  if ((_BYTE)v142)
  {
    if (v142 == 1)
    {
      LOBYTE(v248) = 1;
      uint64_t PlanBannerView = type metadata accessor for CreatePlanBannerView();
      sub_24EB6CA3C(v145, &v248, PlanBannerView, v22);
      sub_24EC22930();
      uint64_t v130 = v156;
      uint64_t v131 = swift_getWitnessTable();
      sub_24EC22730();
      (*(void (**)(char *, uint64_t))(v135 + 8))(v22, v130);
      uint64_t v204 = v131;
      uint64_t v205 = MEMORY[0x263F19100];
      uint64_t v48 = v154;
      uint64_t v49 = swift_getWitnessTable();
      uint64_t v50 = v136;
      uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v136 + 16);
      uint64_t v52 = v139;
      v51(v139, v27, v48);
      uint64_t v53 = *(void (**)(char *, uint64_t))(v50 + 8);
      v53(v27, v48);
      uint64_t v146 = v53;
      v51(v27, v52, v48);
      uint64_t v202 = swift_getWitnessTable();
      uint64_t v203 = MEMORY[0x263F19100];
      uint64_t v54 = v147;
      uint64_t v55 = swift_getWitnessTable();
      sub_24EB687AC((uint64_t)v27, v54, v48);
      v53(v27, v48);
      uint64_t v200 = v55;
      uint64_t v201 = v49;
      uint64_t v56 = v148;
      uint64_t v145 = swift_getWitnessTable();
      uint64_t v248 = v167;
      uint64_t v249 = v157;
      uint64_t v57 = v157;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v198 = v57;
      uint64_t v199 = OpaqueTypeConformance2;
      uint64_t v59 = swift_getWitnessTable();
      uint64_t v248 = v165;
      uint64_t v249 = v160;
      uint64_t v60 = swift_getOpaqueTypeConformance2();
      uint64_t v196 = v59;
      uint64_t v197 = v60;
      uint64_t v195 = swift_getWitnessTable();
      uint64_t v193 = swift_getWitnessTable();
      uint64_t v61 = MEMORY[0x263F19100];
      uint64_t v194 = MEMORY[0x263F19100];
      uint64_t v62 = swift_getWitnessTable();
      uint64_t v63 = sub_24EB74350(&qword_269946260, &qword_269946238);
      uint64_t v191 = v62;
      uint64_t v192 = v63;
      uint64_t v64 = swift_getWitnessTable();
      uint64_t v65 = sub_24EB74350(&qword_269946268, &qword_269946240);
      uint64_t v189 = v64;
      uint64_t v190 = v65;
      uint64_t v66 = swift_getWitnessTable();
      uint64_t v67 = sub_24EB74350(&qword_269946270, &qword_269946248);
      uint64_t v187 = v66;
      uint64_t v188 = v67;
      swift_getWitnessTable();
      uint64_t v68 = v153;
      uint64_t v69 = v61;
      sub_24EB686B4(v153, v56);
      (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v68, v56);
      v146(v139, v48);
    }
    else
    {
      LOBYTE(v248) = 2;
      uint64_t v91 = type metadata accessor for CreatePlanBannerView();
      uint64_t v92 = v137;
      sub_24EB6EA5C(v145, (char *)&v248, v91, v137);
      uint64_t v248 = v167;
      uint64_t v249 = v157;
      uint64_t v93 = v157;
      uint64_t v94 = swift_getOpaqueTypeConformance2();
      uint64_t v244 = v93;
      uint64_t v245 = v94;
      uint64_t v153 = MEMORY[0x263F19B40];
      uint64_t v95 = swift_getWitnessTable();
      uint64_t v248 = v165;
      uint64_t v249 = v160;
      uint64_t v96 = swift_getOpaqueTypeConformance2();
      uint64_t v242 = v95;
      uint64_t v243 = v96;
      uint64_t v241 = swift_getWitnessTable();
      uint64_t v239 = swift_getWitnessTable();
      uint64_t v240 = MEMORY[0x263F19100];
      uint64_t v97 = swift_getWitnessTable();
      uint64_t v98 = sub_24EB74350(&qword_269946260, &qword_269946238);
      uint64_t v237 = v97;
      uint64_t v238 = v98;
      uint64_t v99 = swift_getWitnessTable();
      uint64_t v100 = sub_24EB74350(&qword_269946268, &qword_269946240);
      uint64_t v235 = v99;
      uint64_t v236 = v100;
      uint64_t v101 = swift_getWitnessTable();
      uint64_t v102 = sub_24EB74350(&qword_269946270, &qword_269946248);
      uint64_t v233 = v101;
      uint64_t v234 = v102;
      uint64_t v103 = v151;
      uint64_t v146 = (void (*)(char *, uint64_t))swift_getWitnessTable();
      uint64_t v104 = v138;
      uint64_t v105 = *(void (**)(char *, char *, uint64_t))(v138 + 16);
      uint64_t v106 = v140;
      v105(v140, v92, v103);
      uint64_t v107 = *(void (**)(char *, uint64_t))(v104 + 8);
      v107(v92, v103);
      v105(v92, v106, v103);
      uint64_t v231 = swift_getWitnessTable();
      uint64_t v108 = MEMORY[0x263F19100];
      uint64_t v232 = MEMORY[0x263F19100];
      uint64_t v109 = swift_getWitnessTable();
      uint64_t v229 = swift_getWitnessTable();
      uint64_t v230 = v108;
      uint64_t v110 = swift_getWitnessTable();
      uint64_t v227 = v109;
      uint64_t v111 = v103;
      uint64_t v69 = v108;
      uint64_t v228 = v110;
      uint64_t v112 = v148;
      swift_getWitnessTable();
      sub_24EB687AC((uint64_t)v92, v112, v111);
      v107(v92, v111);
      v107(v140, v111);
    }
    uint64_t v70 = v157;
  }
  else
  {
    LOBYTE(v248) = 0;
    uint64_t v71 = type metadata accessor for CreatePlanBannerView();
    sub_24EB6DE1C(v145, (char *)&v248, v71, v37);
    sub_24EC22930();
    uint64_t v132 = swift_getWitnessTable();
    sub_24EC22730();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v29);
    uint64_t v185 = v132;
    uint64_t v186 = MEMORY[0x263F19100];
    uint64_t v72 = v147;
    uint64_t v73 = swift_getWitnessTable();
    uint64_t v74 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
    uint64_t v134 = v43;
    v74(v43, v41, v72);
    long long v75 = *(void (**)(char *, uint64_t))(v38 + 8);
    uint64_t v144 = v38 + 8;
    v75(v41, v72);
    uint64_t v146 = v75;
    v74(v41, v43, v72);
    uint64_t v183 = swift_getWitnessTable();
    uint64_t v76 = MEMORY[0x263F19100];
    uint64_t v184 = MEMORY[0x263F19100];
    uint64_t v77 = swift_getWitnessTable();
    sub_24EB686B4((uint64_t)v41, v72);
    v75(v41, v72);
    uint64_t v181 = v73;
    uint64_t v182 = v77;
    uint64_t v78 = v148;
    uint64_t v145 = swift_getWitnessTable();
    uint64_t v248 = v167;
    uint64_t v249 = v157;
    uint64_t v79 = v157;
    uint64_t v80 = swift_getOpaqueTypeConformance2();
    uint64_t v179 = v79;
    uint64_t v180 = v80;
    uint64_t v81 = v76;
    uint64_t v82 = swift_getWitnessTable();
    uint64_t v248 = v165;
    uint64_t v249 = v160;
    uint64_t v83 = swift_getOpaqueTypeConformance2();
    uint64_t v177 = v82;
    uint64_t v178 = v83;
    uint64_t v69 = v81;
    uint64_t v176 = swift_getWitnessTable();
    uint64_t v174 = swift_getWitnessTable();
    uint64_t v175 = v81;
    uint64_t v84 = swift_getWitnessTable();
    uint64_t v85 = sub_24EB74350(&qword_269946260, &qword_269946238);
    uint64_t v172 = v84;
    uint64_t v173 = v85;
    uint64_t v86 = swift_getWitnessTable();
    uint64_t v87 = sub_24EB74350(&qword_269946268, &qword_269946240);
    uint64_t v170 = v86;
    uint64_t v171 = v87;
    uint64_t v88 = swift_getWitnessTable();
    uint64_t v89 = sub_24EB74350(&qword_269946270, &qword_269946248);
    uint64_t v168 = v88;
    uint64_t v169 = v89;
    swift_getWitnessTable();
    uint64_t v90 = v153;
    sub_24EB686B4(v153, v78);
    (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v90, v78);
    v146(v134, v72);
    uint64_t v70 = v157;
  }
  uint64_t v225 = swift_getWitnessTable();
  uint64_t v226 = v69;
  uint64_t v113 = swift_getWitnessTable();
  uint64_t v223 = swift_getWitnessTable();
  uint64_t v224 = v69;
  uint64_t v114 = swift_getWitnessTable();
  uint64_t v221 = v113;
  uint64_t v222 = v114;
  uint64_t v115 = swift_getWitnessTable();
  uint64_t v248 = v167;
  uint64_t v249 = v70;
  uint64_t v116 = swift_getOpaqueTypeConformance2();
  uint64_t v219 = v70;
  uint64_t v220 = v116;
  uint64_t v117 = swift_getWitnessTable();
  uint64_t v248 = v165;
  uint64_t v249 = v160;
  uint64_t v118 = swift_getOpaqueTypeConformance2();
  uint64_t v217 = v117;
  uint64_t v218 = v118;
  uint64_t v216 = swift_getWitnessTable();
  uint64_t v214 = swift_getWitnessTable();
  uint64_t v215 = v69;
  uint64_t v119 = swift_getWitnessTable();
  uint64_t v120 = sub_24EB74350(&qword_269946260, &qword_269946238);
  uint64_t v212 = v119;
  uint64_t v213 = v120;
  uint64_t v121 = swift_getWitnessTable();
  uint64_t v122 = sub_24EB74350(&qword_269946268, &qword_269946240);
  uint64_t v210 = v121;
  uint64_t v211 = v122;
  uint64_t v123 = swift_getWitnessTable();
  uint64_t v124 = sub_24EB74350(&qword_269946270, &qword_269946248);
  uint64_t v208 = v123;
  uint64_t v209 = v124;
  uint64_t v125 = swift_getWitnessTable();
  uint64_t v206 = v115;
  uint64_t v207 = v125;
  uint64_t v126 = v150;
  swift_getWitnessTable();
  uint64_t v127 = v149;
  uint64_t v128 = v158;
  (*(void (**)(uint64_t, char *, uint64_t))(v149 + 16))(v152, v158, v126);
  return (*(uint64_t (**)(char *, uint64_t))(v127 + 8))(v128, v126);
}

uint64_t sub_24EB723E8()
{
  return swift_release();
}

uint64_t sub_24EB72454()
{
  return swift_release();
}

uint64_t sub_24EB7245C(uint64_t a1)
{
  return a1;
}

uint64_t sub_24EB724BC()
{
  return swift_retain();
}

uint64_t sub_24EB724C4()
{
  return sub_24EB724F4(&qword_2699462A0, &qword_2699462A8, (void (*)(void))sub_24EB72570);
}

uint64_t sub_24EB724F4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EB72570()
{
  unint64_t result = qword_2699462B0;
  if (!qword_2699462B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699462B8);
    sub_24EB725EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699462B0);
  }
  return result;
}

unint64_t sub_24EB725EC()
{
  unint64_t result = qword_2699462C0;
  if (!qword_2699462C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699462C0);
  }
  return result;
}

uint64_t sub_24EB72640(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_24EB72650()
{
  return sub_24EB73370((uint64_t (*)(void, void, void, void, void))sub_24EB70E80);
}

uint64_t sub_24EB72668(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EB726B0(uint64_t a1)
{
  uint64_t v2 = sub_24EC223A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EB72710()
{
  return sub_24EB723E8();
}

uint64_t sub_24EB72734(uint64_t a1)
{
  return a1;
}

uint64_t sub_24EB72798()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EB727E4()
{
  return sub_24EC226D0();
}

uint64_t sub_24EB72804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t initializeBufferWithCopyOfBuffer for BrowseFontDescriptor(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_24EB72840()
{
  swift_release();
  sub_24EB72454();
  return swift_release();
}

uint64_t sub_24EB72888(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  swift_retain();
  sub_24EB724BC();
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_retain();
  return a1;
}

uint64_t sub_24EB728F8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  char v6 = *(unsigned char *)(a2 + 32);
  sub_24EB724BC();
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  sub_24EB72454();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_24EB729B0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  char v4 = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = v4;
  sub_24EB72454();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t sub_24EB72A1C(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24EB72A64(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for CreatePlanBannerView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24EB72AC8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EB73340()
{
  return sub_24EB73B48((uint64_t (*)(void, void, void, void, void))sub_24EB6E290);
}

uint64_t sub_24EB73358()
{
  return sub_24EB73370((uint64_t (*)(void, void, void, void, void))sub_24EB6BF54);
}

uint64_t sub_24EB73370(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(*(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24EB73388@<X0>(uint64_t a1@<X8>)
{
  return sub_24EB6A604(*(long long **)(v1 + 32), *(void *)(v1 + 40), *(void (**)(char *, char *, uint64_t))(v1 + 24), a1);
}

unint64_t sub_24EB733A8()
{
  unint64_t result = qword_2699462E0;
  if (!qword_2699462E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699462E0);
  }
  return result;
}

uint64_t sub_24EB733FC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24EB7340C(uint64_t a1)
{
  return a1;
}

unint64_t sub_24EB73438()
{
  unint64_t result = qword_2699462E8;
  if (!qword_2699462E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946210);
    sub_24EB74350(&qword_2699462F0, &qword_2699462F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699462E8);
  }
  return result;
}

uint64_t sub_24EB734D8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_24EB734E8@<X0>(uint64_t a1@<X8>)
{
  return sub_24EB69898(*(long long **)(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_24EB734F8()
{
  return sub_24EB723E8();
}

uint64_t sub_24EB7351C@<X0>(uint64_t a1@<X8>)
{
  return sub_24EB690FC(a1);
}

unint64_t sub_24EB73524()
{
  unint64_t result = qword_269946310;
  if (!qword_269946310)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946308);
    sub_24EB735C4();
    sub_24EB74350(&qword_269946358, &qword_269946360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946310);
  }
  return result;
}

unint64_t sub_24EB735C4()
{
  unint64_t result = qword_269946318;
  if (!qword_269946318)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946320);
    sub_24EB73664();
    sub_24EB74350(&qword_269946348, &qword_269946350);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946318);
  }
  return result;
}

unint64_t sub_24EB73664()
{
  unint64_t result = qword_269946328;
  if (!qword_269946328)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946330);
    sub_24EB74350(&qword_269946338, &qword_269946340);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946328);
  }
  return result;
}

uint64_t sub_24EB73704@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_24EC223E0();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_24EB73738()
{
  return sub_24EC223F0();
}

uint64_t sub_24EB73768()
{
  return sub_24EC223C0();
}

uint64_t sub_24EB7378C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(char *))
{
  uint64_t v8 = a5(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

uint64_t sub_24EB7385C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24EB7378C(a1, a2, a3, a4, MEMORY[0x263F1A7B0], MEMORY[0x263F192F0]);
}

double sub_24EB738A0(double a1)
{
  return *(double *)(v1 + 56) * a1;
}

uint64_t sub_24EB738AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_24EB73910@<X0>(uint64_t a1@<X8>)
{
  return sub_24EB6B198(*(long long **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t objectdestroy_28Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24EB73978(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 88);
  char v4 = *(unsigned char *)(a1 + 96);
  sub_24EB734D8(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24EB734D8(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

unint64_t sub_24EB73A04()
{
  unint64_t result = qword_269946368;
  if (!qword_269946368)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946218);
    sub_24EB74350(&qword_269946370, &qword_269946378);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946368);
  }
  return result;
}

uint64_t sub_24EB73AA4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 88);
  char v4 = *(unsigned char *)(a1 + 96);
  sub_24EB733FC(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_release();
  swift_bridgeObjectRelease();
  sub_24EB733FC(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24EB73B30()
{
  return sub_24EB73B48((uint64_t (*)(void, void, void, void, void))sub_24EB6CEE8);
}

uint64_t sub_24EB73B48(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(*(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_24EB73B60()
{
  unint64_t result = qword_269946390;
  if (!qword_269946390)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946388);
    sub_24EB73FD4(&qword_2699462D8, &qword_269946208);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946390);
  }
  return result;
}

uint64_t sub_24EB73BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946228);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EB73C64@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v1 + 16);
  long long v5 = *(_OWORD *)v3;
  long long v6 = *(_OWORD *)(v3 + 16);
  long long v7 = *(_OWORD *)(v3 + 32);
  *(void *)(v4 + 80) = *(void *)(v3 + 48);
  *(_OWORD *)(v4 + 48) = v6;
  *(_OWORD *)(v4 + 64) = v7;
  *(_OWORD *)(v4 + 32) = v5;
  *a1 = sub_24EB73DC4;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v4;
  return sub_24EB7245C(v3);
}

unint64_t sub_24EB73CEC()
{
  unint64_t result = qword_2699463B0;
  if (!qword_2699463B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946228);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946388);
    sub_24EB73B60();
    swift_getOpaqueTypeConformance2();
    sub_24EB74350(&qword_2699463B8, &qword_2699463C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699463B0);
  }
  return result;
}

uint64_t sub_24EB73DC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24EB6DB4C(a1, v2 + 32, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_24EB73DD0()
{
  uint64_t v1 = sub_24EC22350();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  sub_24EB72454();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_24EB73EB0()
{
  sub_24EC22350();
  return sub_24EB6DDA4(v0 + 32);
}

uint64_t objectdestroy_3Tm()
{
  swift_release();
  sub_24EB72454();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24EB73F80()
{
  return sub_24EC228B0();
}

uint64_t sub_24EB73FD4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EB74044()
{
  unint64_t result = qword_2699463D8;
  if (!qword_2699463D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699463D8);
  }
  return result;
}

uint64_t sub_24EB74098(uint64_t a1)
{
  return a1;
}

uint64_t sub_24EB740F8()
{
  return sub_24EC223D0();
}

uint64_t sub_24EB7411C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24EB7378C(a1, a2, a3, a4, MEMORY[0x263F18DD8], MEMORY[0x263F19340]);
}

uint64_t sub_24EB7415C@<X0>(uint64_t a1@<X8>)
{
  return sub_24EB6F7DC(*(uint64_t **)(v1 + 32), a1);
}

uint64_t sub_24EB74168(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EC223A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EB741CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_24EB74230()
{
  unint64_t result = qword_2699463F8;
  if (!qword_2699463F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699463F0);
    sub_24EB74350(&qword_269946400, &qword_2699463E8);
    sub_24EB74350(&qword_269946358, &qword_269946360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699463F8);
  }
  return result;
}

uint64_t sub_24EB742F4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24EB74350(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL static BrowseInsetBehavior.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_24EB743B0(char a1)
{
  if (a1) {
    return 0x6F5465726F6E6769;
  }
  else {
    return 0x746C7561666564;
  }
}

uint64_t sub_24EB743EC()
{
  return sub_24EB743B0(*v0);
}

uint64_t sub_24EB743F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB74A08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB7441C(uint64_t a1)
{
  unint64_t v2 = sub_24EB74834();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB74458(uint64_t a1)
{
  unint64_t v2 = sub_24EB74834();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB74494(uint64_t a1)
{
  unint64_t v2 = sub_24EB748DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB744D0(uint64_t a1)
{
  unint64_t v2 = sub_24EB748DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB7450C(uint64_t a1)
{
  unint64_t v2 = sub_24EB74888();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB74548(uint64_t a1)
{
  unint64_t v2 = sub_24EB74888();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseInsetBehavior.encode(to:)(void *a1, int a2)
{
  int v18 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946418);
  uint64_t v16 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946420);
  uint64_t v6 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946428);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB74834();
  sub_24EC23050();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  if (v18)
  {
    char v20 = 1;
    sub_24EB74888();
    sub_24EC22EC0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    char v19 = 0;
    sub_24EB748DC();
    sub_24EC22EC0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  }
  return (*v13)(v12, v9);
}

unint64_t sub_24EB74834()
{
  unint64_t result = qword_269946430;
  if (!qword_269946430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946430);
  }
  return result;
}

unint64_t sub_24EB74888()
{
  unint64_t result = qword_269946438;
  if (!qword_269946438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946438);
  }
  return result;
}

unint64_t sub_24EB748DC()
{
  unint64_t result = qword_269946440;
  if (!qword_269946440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946440);
  }
  return result;
}

uint64_t BrowseInsetBehavior.init(from:)(uint64_t a1)
{
  return sub_24EB74AFC(a1) & 1;
}

uint64_t sub_24EB7494C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_24EB74AFC(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_24EB7497C(void *a1)
{
  return BrowseInsetBehavior.encode(to:)(a1, *v1);
}

uint64_t BrowseInsetBehavior.hash(into:)()
{
  return sub_24EC23000();
}

uint64_t BrowseInsetBehavior.hashValue.getter()
{
  return sub_24EC23030();
}

uint64_t sub_24EB74A08(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x746C7561666564 && a2 == 0xE700000000000000;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F5465726F6E6769 && a2 == 0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EB74AFC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946488);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946490);
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946498);
  uint64_t v24 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)a1, *(void *)(a1 + 24));
  sub_24EB74834();
  uint64_t v12 = v26;
  sub_24EC23040();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v13 = v25;
  uint64_t v21 = v6;
  uint64_t v26 = a1;
  uint64_t v14 = sub_24EC22EA0();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v16 = sub_24EC22D50();
    swift_allocError();
    int v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269946108);
    *int v18 = &type metadata for BrowseInsetBehavior;
    sub_24EC22E10();
    sub_24EC22D40();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x263F8DCB0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
    a1 = v26;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1(a1);
    return a1;
  }
  a1 = *(unsigned __int8 *)(v14 + 32);
  if (a1)
  {
    LODWORD(v25) = *(unsigned __int8 *)(v14 + 32);
    char v28 = 1;
    sub_24EB74888();
    sub_24EC22E00();
    uint64_t v15 = v24;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v9);
    a1 = v25;
  }
  else
  {
    char v27 = 0;
    sub_24EB748DC();
    sub_24EC22E00();
    uint64_t v19 = v24;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
  }
  __swift_destroy_boxed_opaque_existential_1(v26);
  return a1;
}

unint64_t sub_24EB74F50()
{
  unint64_t result = qword_269946448;
  if (!qword_269946448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946448);
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseInsetBehavior()
{
  return &type metadata for BrowseInsetBehavior;
}

unsigned char *_s15FitnessBrowsing19BrowseInsetBehaviorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB75084);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseInsetBehavior.CodingKeys()
{
  return &type metadata for BrowseInsetBehavior.CodingKeys;
}

ValueMetadata *type metadata accessor for BrowseInsetBehavior.DefaultCodingKeys()
{
  return &type metadata for BrowseInsetBehavior.DefaultCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseInsetBehavior.IgnoreTopCodingKeys()
{
  return &type metadata for BrowseInsetBehavior.IgnoreTopCodingKeys;
}

unint64_t sub_24EB750E0()
{
  unint64_t result = qword_269946450;
  if (!qword_269946450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946450);
  }
  return result;
}

unint64_t sub_24EB75138()
{
  unint64_t result = qword_269946458;
  if (!qword_269946458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946458);
  }
  return result;
}

unint64_t sub_24EB75190()
{
  unint64_t result = qword_269946460;
  if (!qword_269946460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946460);
  }
  return result;
}

unint64_t sub_24EB751E8()
{
  unint64_t result = qword_269946468;
  if (!qword_269946468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946468);
  }
  return result;
}

unint64_t sub_24EB75240()
{
  unint64_t result = qword_269946470;
  if (!qword_269946470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946470);
  }
  return result;
}

unint64_t sub_24EB75298()
{
  unint64_t result = qword_269946478;
  if (!qword_269946478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946478);
  }
  return result;
}

unint64_t sub_24EB752F0()
{
  unint64_t result = qword_269946480;
  if (!qword_269946480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946480);
  }
  return result;
}

uint64_t NewAndFeaturedState.contentMargins.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24EC220E0();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t NewAndFeaturedState.densityFactor.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 196);
  uint64_t v5 = sub_24EC22020();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t NewAndFeaturedState.dynamicTypeSize.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 200));
}

uint64_t NewAndFeaturedState.layout.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 204);
  uint64_t v5 = sub_24EC21F70();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t NewAndFeaturedState.lazyCanvasItemContent.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24EB754C0(v2 + *(int *)(a1 + 208), a2);
}

uint64_t sub_24EB754C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EC21EA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t NewAndFeaturedState.loadState.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 212);
  uint64_t State = type metadata accessor for NewAndFeaturedLoadState();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 16))(a2, v4, State);
}

uint64_t NewAndFeaturedState.loadState.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 212);
  uint64_t State = type metadata accessor for NewAndFeaturedLoadState();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 40))(v4, a1, State);
}

uint64_t (*NewAndFeaturedState.loadState.modify())()
{
  return nullsub_1;
}

uint64_t NewAndFeaturedState.locale.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 216);
  uint64_t v5 = sub_24EC21DC0();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t NewAndFeaturedState.sectionMetrics.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 72) - 8) + 16))(a2, v2 + *(int *)(a1 + 220));
}

uint64_t NewAndFeaturedState.sizeClass.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 80) - 8) + 16))(a2, v2 + *(int *)(a1 + 224));
}

uint64_t NewAndFeaturedState.init(contentMargins:densityFactor:dynamicTypeSize:layout:lazyCanvasItemContent:loadState:locale:sectionMetrics:sizeClass:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v20 = sub_24EC220E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(a9, a1, v20);
  uint64_t v21 = (int *)type metadata accessor for NewAndFeaturedState();
  uint64_t v22 = a9 + v21[49];
  uint64_t v23 = sub_24EC22020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v22, a2, v23);
  *(unsigned char *)(a9 + v21[50]) = a3;
  uint64_t v24 = a9 + v21[51];
  uint64_t v25 = sub_24EC21F70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v24, a4, v25);
  sub_24EB75B60(a5, a9 + v21[52]);
  uint64_t v26 = a9 + v21[53];
  uint64_t State = type metadata accessor for NewAndFeaturedLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 32))(v26, a6, State);
  uint64_t v28 = a9 + v21[54];
  uint64_t v29 = sub_24EC21DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v28, a7, v29);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a18 - 8) + 32))(a9 + v21[55], a8, a18);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a19 - 8) + 32))(a9 + v21[56], a10);
}

uint64_t type metadata accessor for NewAndFeaturedState()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24EB75B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EC21EA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_24EB75BC4(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_24EB75BD4()
{
  return sub_24EC23000();
}

uint64_t sub_24EB75BFC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x4D746E65746E6F63 && a2 == 0xEE00736E69677261;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x46797469736E6564 && a2 == 0xED0000726F746361 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5463696D616E7964 && a2 == 0xEF657A6953657079 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74756F79616CLL && a2 == 0xE600000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024EC30D00 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x4D6E6F6974636573 && a2 == 0xEE00736369727465 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x73616C43657A6973 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_24EB75FC8()
{
  return sub_24EC23030();
}

unint64_t sub_24EB76010(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x46797469736E6564;
      break;
    case 2:
      unint64_t result = 0x5463696D616E7964;
      break;
    case 3:
      unint64_t result = 0x74756F79616CLL;
      break;
    case 4:
      return result;
    case 5:
      unint64_t result = 0x7461745364616F6CLL;
      break;
    case 6:
      unint64_t result = 0x656C61636F6CLL;
      break;
    case 7:
      unint64_t result = 0x4D6E6F6974636573;
      break;
    case 8:
      unint64_t result = 0x73616C43657A6973;
      break;
    default:
      unint64_t result = 0x4D746E65746E6F63;
      break;
  }
  return result;
}

BOOL sub_24EB76168(char *a1, char *a2)
{
  return sub_24EB75BC4(*a1, *a2);
}

uint64_t sub_24EB761CC()
{
  return sub_24EB75FC8();
}

uint64_t sub_24EB76234()
{
  return sub_24EB75BD4();
}

uint64_t sub_24EB7628C()
{
  return sub_24EC23030();
}

unint64_t sub_24EB76304()
{
  return sub_24EB76010(*v0);
}

uint64_t sub_24EB7636C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB75BFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB763D4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24EB7C100();
  *a1 = result;
  return result;
}

uint64_t sub_24EB76438(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24EB7648C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t NewAndFeaturedState.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 72);
  uint64_t v12 = *(void *)(a2 + 80);
  uint64_t v13 = *(void *)(a2 + 88);
  uint64_t v14 = *(void *)(a2 + 96);
  uint64_t v15 = *(void *)(a2 + 104);
  uint64_t v16 = *(void *)(a2 + 112);
  uint64_t v17 = *(void *)(a2 + 120);
  uint64_t v18 = *(void *)(a2 + 128);
  uint64_t v19 = *(void *)(a2 + 136);
  uint64_t v20 = *(void *)(a2 + 144);
  uint64_t v21 = *(void *)(a2 + 152);
  uint64_t v22 = *(void *)(a2 + 160);
  uint64_t v23 = *(void *)(a2 + 168);
  uint64_t v24 = *(void *)(a2 + 176);
  uint64_t v25 = *(void *)(a2 + 184);
  uint64_t v46 = v4;
  uint64_t v60 = v4;
  uint64_t v51 = v5;
  uint64_t v61 = v5;
  uint64_t v62 = v6;
  uint64_t v50 = v6;
  uint64_t v49 = v7;
  uint64_t v63 = v7;
  uint64_t v64 = v8;
  uint64_t v48 = v8;
  uint64_t v57 = v9;
  uint64_t v65 = v9;
  uint64_t v66 = v10;
  uint64_t v47 = v10;
  uint64_t v52 = v11;
  uint64_t v67 = v11;
  uint64_t v68 = v12;
  v37[2] = v12;
  uint64_t v55 = v13;
  uint64_t v69 = v13;
  uint64_t v70 = v14;
  uint64_t v45 = v14;
  uint64_t v44 = v15;
  uint64_t v71 = v15;
  uint64_t v72 = v16;
  uint64_t v43 = v16;
  uint64_t v42 = v17;
  uint64_t v73 = v17;
  uint64_t v74 = v18;
  uint64_t v41 = v18;
  uint64_t v40 = v19;
  uint64_t v75 = v19;
  uint64_t v39 = v20;
  uint64_t v76 = v20;
  uint64_t v77 = v21;
  uint64_t v54 = v21;
  uint64_t v38 = v22;
  uint64_t v78 = v22;
  uint64_t v79 = v23;
  uint64_t v53 = v23;
  v37[1] = v24;
  uint64_t v80 = v24;
  uint64_t v81 = v25;
  uint64_t v56 = v25;
  type metadata accessor for NewAndFeaturedState.CodingKeys();
  swift_getWitnessTable();
  uint64_t v26 = sub_24EC22F50();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)v37 - v28;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v30 = v58;
  sub_24EC23050();
  LOBYTE(v60) = 0;
  sub_24EC220E0();
  sub_24EB77E2C(&qword_2699464A0, MEMORY[0x263F3DF60]);
  uint64_t v31 = v82;
  sub_24EC22F40();
  if (v31) {
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  }
  uint64_t v32 = v57;
  LOBYTE(v60) = 1;
  sub_24EC22020();
  sub_24EB77E2C(&qword_2699464A8, MEMORY[0x263F3DEE8]);
  sub_24EC22F40();
  LOBYTE(v60) = *(unsigned char *)(v30 + *(int *)(a2 + 200));
  char v59 = 2;
  sub_24EB76BEC();
  uint64_t v82 = v29;
  sub_24EC22F40();
  uint64_t v34 = v27;
  char v59 = 3;
  uint64_t v60 = v32;
  uint64_t v35 = v55;
  uint64_t v61 = v55;
  uint64_t v62 = v54;
  uint64_t v36 = v56;
  uint64_t v63 = v56;
  sub_24EC21F70();
  swift_getWitnessTable();
  sub_24EC22F40();
  LOBYTE(v60) = 4;
  sub_24EC21EA0();
  sub_24EB77E2C(&qword_2699464B8, MEMORY[0x263F3DDD8]);
  sub_24EC22F40();
  char v59 = 5;
  uint64_t v60 = v46;
  uint64_t v61 = v51;
  uint64_t v62 = v50;
  uint64_t v63 = v49;
  uint64_t v64 = v48;
  uint64_t v65 = v47;
  uint64_t v66 = v52;
  uint64_t v67 = v35;
  uint64_t v68 = v45;
  uint64_t v69 = v44;
  uint64_t v70 = v43;
  uint64_t v71 = v42;
  uint64_t v72 = v41;
  uint64_t v73 = v40;
  uint64_t v74 = v39;
  uint64_t v75 = v38;
  uint64_t v76 = v53;
  uint64_t v77 = v36;
  type metadata accessor for NewAndFeaturedLoadState();
  swift_getWitnessTable();
  sub_24EC22F40();
  LOBYTE(v60) = 6;
  sub_24EC21DC0();
  sub_24EB77E2C(&qword_2699464C0, MEMORY[0x263F07690]);
  sub_24EC22F40();
  LOBYTE(v60) = 7;
  sub_24EC22F40();
  LOBYTE(v60) = 8;
  sub_24EC22F40();
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v82, v26);
}

uint64_t type metadata accessor for NewAndFeaturedState.CodingKeys()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24EB76BEC()
{
  unint64_t result = qword_2699464B0;
  if (!qword_2699464B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699464B0);
  }
  return result;
}

uint64_t NewAndFeaturedState.init(from:)@<X0>(uint64_t a1@<X0>, int *a2@<X1>, int *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, int *a7@<X6>, int *a8@<X7>, uint64_t a9@<X8>, int *a10, uint64_t a11, int *a12, uint64_t a13, int *a14, uint64_t a15, int *a16, uint64_t a17, int *a18, uint64_t a19, uint64_t a20,int *a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v142 = a8;
  uint64_t v109 = a7;
  uint64_t v118 = a6;
  uint64_t v96 = a5;
  uint64_t v117 = a4;
  uint64_t v111 = a3;
  uint64_t v110 = a2;
  uint64_t v105 = (void *)a1;
  uint64_t v72 = a9;
  uint64_t v100 = a23;
  uint64_t v114 = a22;
  uint64_t v101 = a11;
  uint64_t v107 = a24;
  uint64_t v108 = a20;
  uint64_t v116 = a21;
  uint64_t v115 = a19;
  uint64_t v106 = a18;
  uint64_t v98 = a17;
  uint64_t v113 = a15;
  uint64_t v97 = a14;
  uint64_t v71 = *(void *)(a11 - 8);
  uint64_t v112 = a13;
  uint64_t v26 = MEMORY[0x270FA5388](a1);
  uint64_t v73 = (char *)&v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *((void *)a10 - 1);
  MEMORY[0x270FA5388](v26);
  uint64_t v74 = (char *)&v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_24EC21DC0();
  uint64_t v83 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  uint64_t v75 = (char *)&v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = a2;
  uint64_t v121 = a3;
  uint64_t v122 = v117;
  uint64_t v30 = v96;
  uint64_t v123 = v96;
  uint64_t v124 = v118;
  uint64_t v125 = v142;
  uint64_t v126 = a10;
  uint64_t v104 = a10;
  uint64_t v127 = a12;
  uint64_t v128 = a13;
  uint64_t v129 = a14;
  uint64_t v130 = a15;
  uint64_t v131 = a16;
  uint64_t v132 = a17;
  uint64_t v94 = a16;
  uint64_t v31 = v106;
  uint64_t v133 = v106;
  uint64_t v134 = v115;
  uint64_t v135 = v116;
  uint64_t v32 = v107;
  uint64_t v136 = v114;
  uint64_t v137 = v107;
  uint64_t State = type metadata accessor for NewAndFeaturedLoadState();
  uint64_t v84 = *(void *)(State - 8);
  MEMORY[0x270FA5388](State);
  uint64_t v76 = (char *)&v71 - v33;
  uint64_t v77 = sub_24EC21EA0();
  MEMORY[0x270FA5388](v77);
  uint64_t v81 = (char *)&v71 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = v109;
  uint64_t v120 = v109;
  uint64_t v93 = a12;
  uint64_t v36 = v108;
  uint64_t v121 = a12;
  uint64_t v122 = v108;
  uint64_t v123 = v32;
  uint64_t v87 = sub_24EC21F70();
  uint64_t v85 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v80 = (char *)&v71 - v37;
  uint64_t v89 = sub_24EC22020();
  uint64_t v88 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v79 = (char *)&v71 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_24EC220E0();
  uint64_t v90 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v86 = (char *)&v71 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = v110;
  uint64_t v121 = v111;
  uint64_t v122 = v117;
  uint64_t v123 = v30;
  uint64_t v124 = v118;
  uint64_t v125 = v35;
  uint64_t v126 = v142;
  uint64_t v127 = a10;
  uint64_t v40 = v101;
  uint64_t v128 = v101;
  uint64_t v129 = a12;
  uint64_t v41 = v97;
  uint64_t v130 = v112;
  uint64_t v131 = v97;
  uint64_t v132 = v113;
  uint64_t v133 = a16;
  uint64_t v42 = v98;
  uint64_t v134 = v98;
  uint64_t v135 = v31;
  uint64_t v136 = v115;
  uint64_t v137 = v36;
  uint64_t v43 = v114;
  uint64_t v138 = v116;
  uint64_t v139 = v114;
  uint64_t v44 = v100;
  uint64_t v140 = v100;
  uint64_t v141 = v32;
  type metadata accessor for NewAndFeaturedState.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v92 = sub_24EC22EB0();
  uint64_t v78 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  uint64_t v46 = (char *)&v71 - v45;
  uint64_t v120 = v110;
  uint64_t v121 = v111;
  uint64_t v122 = v117;
  uint64_t v123 = v30;
  uint64_t v124 = v118;
  uint64_t v125 = v109;
  uint64_t v126 = v142;
  uint64_t v127 = v104;
  uint64_t v128 = v40;
  uint64_t v129 = v93;
  uint64_t v130 = v112;
  uint64_t v131 = v41;
  uint64_t v132 = v113;
  uint64_t v47 = v105;
  uint64_t v133 = v94;
  uint64_t v134 = v42;
  uint64_t v135 = v106;
  uint64_t v136 = v115;
  uint64_t v137 = v108;
  uint64_t v138 = v116;
  uint64_t v139 = v43;
  uint64_t v140 = v44;
  uint64_t v141 = v107;
  int v142 = (int *)type metadata accessor for NewAndFeaturedState();
  uint64_t v48 = *((void *)v142 - 1);
  MEMORY[0x270FA5388](v142);
  uint64_t v50 = (char *)&v71 - v49;
  __swift_project_boxed_opaque_existential_1(v47, v47[3]);
  uint64_t v118 = v46;
  uint64_t v51 = v99;
  sub_24EC23040();
  if (v51) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v105);
  }
  uint64_t v52 = v79;
  uint64_t v53 = v80;
  uint64_t v54 = (uint64_t)v81;
  uint64_t v117 = v48;
  uint64_t v55 = v78;
  LOBYTE(v120) = 0;
  sub_24EB77E2C((unint64_t *)&qword_2699464C8, MEMORY[0x263F3DF60]);
  uint64_t v56 = v91;
  sub_24EC22E90();
  uint64_t v57 = v50;
  (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v50, v86, v56);
  LOBYTE(v120) = 1;
  sub_24EB77E2C((unint64_t *)&qword_2699464D0, MEMORY[0x263F3DEE8]);
  uint64_t v58 = v52;
  uint64_t v59 = v89;
  sub_24EC22E90();
  (*(void (**)(char *, char *, uint64_t))(v88 + 32))(&v57[v142[49]], v58, v59);
  char v119 = 2;
  sub_24EB77DD8();
  sub_24EC22E90();
  v57[v142[50]] = (char)v120;
  LOBYTE(v120) = 3;
  uint64_t v60 = v87;
  swift_getWitnessTable();
  sub_24EC22E90();
  (*(void (**)(char *, char *, uint64_t))(v85 + 32))(&v57[v142[51]], v53, v60);
  LOBYTE(v120) = 4;
  sub_24EB77E2C((unint64_t *)&qword_2699464E0, MEMORY[0x263F3DDD8]);
  sub_24EC22E90();
  sub_24EB75B60(v54, (uint64_t)&v57[v142[52]]);
  LOBYTE(v120) = 5;
  uint64_t v61 = State;
  swift_getWitnessTable();
  uint64_t v62 = v76;
  sub_24EC22E90();
  (*(void (**)(char *, char *, uint64_t))(v84 + 32))(&v57[v142[53]], v62, v61);
  LOBYTE(v120) = 6;
  sub_24EB77E2C((unint64_t *)&qword_2699464E8, MEMORY[0x263F07690]);
  uint64_t v63 = v75;
  uint64_t v64 = v102;
  sub_24EC22E90();
  (*(void (**)(char *, char *, uint64_t))(v83 + 32))(&v57[v142[54]], v63, v64);
  LOBYTE(v120) = 7;
  uint64_t v65 = v74;
  sub_24EC22E90();
  (*(void (**)(char *, char *, int *))(v82 + 32))(&v57[v142[55]], v65, v104);
  LOBYTE(v120) = 8;
  uint64_t v66 = v73;
  uint64_t v67 = v101;
  sub_24EC22E90();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v118, v92);
  uint64_t v68 = v142;
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(&v57[v142[56]], v66, v67);
  uint64_t v69 = v117;
  (*(void (**)(uint64_t, char *, int *))(v117 + 16))(v72, v57, v68);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v105);
  return (*(uint64_t (**)(char *, int *))(v69 + 8))(v57, v68);
}

uint64_t sub_24EB77D7C(uint64_t a1)
{
  uint64_t v2 = sub_24EC21EA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24EB77DD8()
{
  unint64_t result = qword_2699464D8;
  if (!qword_2699464D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699464D8);
  }
  return result;
}

uint64_t sub_24EB77E2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EB77E74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return NewAndFeaturedState.init(from:)(a1, *(int **)(a2 + 16), *(int **)(a2 + 24), *(void *)(a2 + 32), *(void *)(a2 + 40), *(char **)(a2 + 48), *(int **)(a2 + 56), *(int **)(a2 + 64), a3, *(int **)(a2 + 72), *(void *)(a2 + 80), *(int **)(a2 + 88), *(void *)(a2 + 96), *(int **)(a2 + 104), *(void *)(a2 + 112), *(int **)(a2 + 120), *(void *)(a2 + 128), *(int **)(a2 + 136), *(void *)(a2 + 144),
           *(void *)(a2 + 152),
           *(int **)(a2 + 160),
           *(void *)(a2 + 168),
           *(void *)(a2 + 176),
           *(void *)(a2 + 184));
}

uint64_t sub_24EB77EDC(void *a1, uint64_t a2)
{
  return NewAndFeaturedState.encode(to:)(a1, a2);
}

uint64_t static NewAndFeaturedState.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  if ((MEMORY[0x253349C50]() & 1) != 0
    && (uint64_t v31 = (int *)type metadata accessor for NewAndFeaturedState(), (sub_24EC22010() & 1) != 0)
    && (sub_24EC22120() & 1) != 0
    && (sub_24EC21F60() & 1) != 0
    && (MEMORY[0x253349A10](a1 + v31[52], a2 + v31[52]) & 1) != 0
    && (static NewAndFeaturedLoadState.== infix(_:_:)(a1 + v31[53], a2 + v31[53], a3, a4, a5, a6, a7, a9, a10, a12, a13, a14, a15, a16, a17, a18, a19, a21, a22,
          a24) & 1) != 0
    && (MEMORY[0x253349930](a1 + v31[54], a2 + v31[54]) & 1) != 0
    && (sub_24EC22A30() & 1) != 0)
  {
    char v32 = sub_24EC22A30();
  }
  else
  {
    char v32 = 0;
  }
  return v32 & 1;
}

uint64_t sub_24EB78138(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return static NewAndFeaturedState.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7], a3[8], a3[9], a3[10], a3[11], a3[12], a3[13], a3[14], a3[15], a3[16], a3[17], a3[18],
           a3[19],
           a3[20],
           a3[21],
           a3[22],
           a3[23]) & 1;
}

uint64_t sub_24EB78194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 216);
}

uint64_t sub_24EB7819C()
{
  uint64_t result = sub_24EC220E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24EC22020();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_24EC21F70();
      if (v3 <= 0x3F)
      {
        uint64_t result = sub_24EC21EA0();
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for NewAndFeaturedLoadState();
          if (v5 <= 0x3F)
          {
            uint64_t result = sub_24EC21DC0();
            if (v6 <= 0x3F)
            {
              uint64_t result = swift_checkMetadataState();
              if (v7 <= 0x3F)
              {
                uint64_t result = swift_checkMetadataState();
                if (v8 <= 0x3F)
                {
                  swift_initStructMetadata();
                  return 0;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void *sub_24EB78448(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24EC220E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 196);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24EC22020();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 204);
    *((unsigned char *)a1 + *(int *)(a3 + 200)) = *((unsigned char *)a2 + *(int *)(a3 + 200));
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = *(void *)(a3 + 56);
    uint64_t v16 = *(void *)(a3 + 88);
    uint64_t v17 = sub_24EC21F70();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
        goto LABEL_11;
      case 3u:
        sub_24EC220B0();
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v19 = sub_24EC22000();
        }
        else {
          uint64_t v19 = sub_24EC21FD0();
        }
        (*(void (**)(char *, char *))(*(void *)(v19 - 8) + 16))(v13, v14);
        swift_storeEnumTagMultiPayload();
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v13, v14, v16);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
        break;
    }
    uint64_t v20 = *(int *)(a3 + 208);
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_24EC21EA0();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v24 = sub_24EC22190();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v21, v22, v24);
        goto LABEL_24;
      case 1u:
        uint64_t v25 = sub_24EC221D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v21, v22, v25);
        goto LABEL_24;
      case 2u:
        uint64_t v26 = sub_24EC221E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v21, v22, v26);
        goto LABEL_24;
      case 3u:
      case 5u:
        uint64_t v27 = sub_24EC221A0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v21, v22, v27);
        goto LABEL_24;
      case 4u:
        uint64_t v28 = sub_24EC22220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v21, v22, v28);
        goto LABEL_24;
      case 6u:
        uint64_t v29 = sub_24EC221B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v21, v22, v29);
        goto LABEL_24;
      case 7u:
        uint64_t v30 = sub_24EC22240();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v21, v22, v30);
        goto LABEL_24;
      case 8u:
        uint64_t v31 = sub_24EC22230();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v21, v22, v31);
        goto LABEL_24;
      case 9u:
        uint64_t v32 = sub_24EC22170();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v21, v22, v32);
        goto LABEL_24;
      case 0xAu:
        uint64_t v33 = sub_24EC221C0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v21, v22, v33);
LABEL_24:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
        break;
    }
    uint64_t v34 = *(int *)(a3 + 212);
    uint64_t v46 = (char *)a1 + v34;
    uint64_t v35 = (char *)a2 + v34;
    uint64_t v47 = *(void *)(a3 + 72);
    uint64_t v36 = sub_24EC22080();
    uint64_t v37 = *(void *)(v36 - 8);
    uint64_t v45 = v35;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 2, v36))
    {
      uint64_t v38 = v47;
      uint64_t State = type metadata accessor for NewAndFeaturedLoadState();
      memcpy(v46, v45, *(void *)(*(void *)(State - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v46, v35, v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v46, 0, 2, v36);
      uint64_t v38 = v47;
    }
    uint64_t v40 = *(int *)(a3 + 216);
    uint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    uint64_t v43 = sub_24EC21DC0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))((char *)a1 + *(int *)(a3 + 220), (char *)a2 + *(int *)(a3 + 220), v38);
    (*(void (**)(char *, char *))(*(void *)(*(void *)(a3 + 80) - 8) + 16))((char *)a1 + *(int *)(a3 + 224), (char *)a2 + *(int *)(a3 + 224));
  }
  return a1;
}

uint64_t sub_24EB78DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EC220E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 196);
  uint64_t v6 = sub_24EC22020();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 204);
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 88);
  sub_24EC21F70();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 1) >= 2)
  {
    if (EnumCaseMultiPayload == 4)
    {
      uint64_t v8 = v9;
    }
    else
    {
      if (EnumCaseMultiPayload != 3) {
        goto LABEL_10;
      }
      sub_24EC220B0();
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v11 = sub_24EC22000();
      }
      else {
        uint64_t v11 = sub_24EC21FD0();
      }
      uint64_t v8 = v11;
    }
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
LABEL_10:
  uint64_t v12 = a1 + *(int *)(a2 + 208);
  sub_24EC21EA0();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v13 = sub_24EC22190();
      goto LABEL_21;
    case 1u:
      uint64_t v13 = sub_24EC221D0();
      goto LABEL_21;
    case 2u:
      uint64_t v13 = sub_24EC221E0();
      goto LABEL_21;
    case 3u:
    case 5u:
      uint64_t v13 = sub_24EC221A0();
      goto LABEL_21;
    case 4u:
      uint64_t v13 = sub_24EC22220();
      goto LABEL_21;
    case 6u:
      uint64_t v13 = sub_24EC221B0();
      goto LABEL_21;
    case 7u:
      uint64_t v13 = sub_24EC22240();
      goto LABEL_21;
    case 8u:
      uint64_t v13 = sub_24EC22230();
      goto LABEL_21;
    case 9u:
      uint64_t v13 = sub_24EC22170();
      goto LABEL_21;
    case 0xAu:
      uint64_t v13 = sub_24EC221C0();
LABEL_21:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      break;
    default:
      break;
  }
  uint64_t v14 = a1 + *(int *)(a2 + 212);
  uint64_t v15 = *(void *)(a2 + 72);
  uint64_t v16 = sub_24EC22080();
  uint64_t v17 = *(void *)(v16 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 2, v16)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }
  uint64_t v18 = a1 + *(int *)(a2 + 216);
  uint64_t v19 = sub_24EC21DC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1 + *(int *)(a2 + 220), v15);
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a2 + 80) - 8) + 8))(a1 + *(int *)(a2 + 224));
}

uint64_t sub_24EB79200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EC220E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 196);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24EC22020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 204);
  *(unsigned char *)(a1 + *(int *)(a3 + 200)) = *(unsigned char *)(a2 + *(int *)(a3 + 200));
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = *(void *)(a3 + 56);
  uint64_t v15 = *(void *)(a3 + 88);
  uint64_t v16 = sub_24EC21F70();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      goto LABEL_9;
    case 3u:
      sub_24EC220B0();
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v17 = sub_24EC22000();
      }
      else {
        uint64_t v17 = sub_24EC21FD0();
      }
      (*(void (**)(void *, const void *))(*(void *)(v17 - 8) + 16))(v12, v13);
      swift_storeEnumTagMultiPayload();
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    case 4u:
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 16))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      break;
  }
  uint64_t v18 = *(int *)(a3 + 208);
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (const void *)(a2 + v18);
  uint64_t v21 = sub_24EC21EA0();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v22 = sub_24EC22190();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 16))(v19, v20, v22);
      goto LABEL_22;
    case 1u:
      uint64_t v23 = sub_24EC221D0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 16))(v19, v20, v23);
      goto LABEL_22;
    case 2u:
      uint64_t v24 = sub_24EC221E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 16))(v19, v20, v24);
      goto LABEL_22;
    case 3u:
    case 5u:
      uint64_t v25 = sub_24EC221A0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 16))(v19, v20, v25);
      goto LABEL_22;
    case 4u:
      uint64_t v26 = sub_24EC22220();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 16))(v19, v20, v26);
      goto LABEL_22;
    case 6u:
      uint64_t v27 = sub_24EC221B0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 16))(v19, v20, v27);
      goto LABEL_22;
    case 7u:
      uint64_t v28 = sub_24EC22240();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v28 - 8) + 16))(v19, v20, v28);
      goto LABEL_22;
    case 8u:
      uint64_t v29 = sub_24EC22230();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 16))(v19, v20, v29);
      goto LABEL_22;
    case 9u:
      uint64_t v30 = sub_24EC22170();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v30 - 8) + 16))(v19, v20, v30);
      goto LABEL_22;
    case 0xAu:
      uint64_t v31 = sub_24EC221C0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v31 - 8) + 16))(v19, v20, v31);
LABEL_22:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      break;
  }
  uint64_t v32 = *(int *)(a3 + 212);
  uint64_t v44 = (void *)(a1 + v32);
  uint64_t v33 = (const void *)(a2 + v32);
  uint64_t v45 = *(void *)(a3 + 72);
  uint64_t v34 = sub_24EC22080();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v43 = v33;
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48))(v33, 2, v34))
  {
    uint64_t v36 = v45;
    uint64_t State = type metadata accessor for NewAndFeaturedLoadState();
    memcpy(v44, v43, *(void *)(*(void *)(State - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v35 + 16))(v44, v33, v34);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v44, 0, 2, v34);
    uint64_t v36 = v45;
  }
  uint64_t v38 = *(int *)(a3 + 216);
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  uint64_t v41 = sub_24EC21DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(a1 + *(int *)(a3 + 220), a2 + *(int *)(a3 + 220), v36);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a3 + 80) - 8) + 16))(a1 + *(int *)(a3 + 224), a2 + *(int *)(a3 + 224));
  return a1;
}

uint64_t sub_24EB79B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EC220E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 196);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24EC22020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 200)) = *(unsigned char *)(a2 + *(int *)(a3 + 200));
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(a3 + 204);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (const void *)(a2 + v11);
    uint64_t v14 = *(void *)(a3 + 56);
    uint64_t v15 = *(void *)(a3 + 88);
    uint64_t v16 = sub_24EC21F70();
    uint64_t v17 = *(void *)(v16 - 8);
    (*(void (**)(void *, uint64_t))(v17 + 8))(v12, v16);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
        goto LABEL_10;
      case 3u:
        sub_24EC220B0();
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v18 = sub_24EC22000();
        }
        else {
          uint64_t v18 = sub_24EC21FD0();
        }
        (*(void (**)(void *, const void *))(*(void *)(v18 - 8) + 16))(v12, v13);
        swift_storeEnumTagMultiPayload();
        goto LABEL_10;
      case 4u:
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 16))(v12, v13, v15);
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v12, v13, *(void *)(v17 + 64));
        break;
    }
    uint64_t v19 = *(int *)(a3 + 208);
    uint64_t v20 = (void *)(a1 + v19);
    uint64_t v21 = (const void *)(a2 + v19);
    sub_24EB77D7C(a1 + v19);
    uint64_t v22 = sub_24EC21EA0();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v23 = sub_24EC22190();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 16))(v20, v21, v23);
        goto LABEL_23;
      case 1u:
        uint64_t v24 = sub_24EC221D0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 16))(v20, v21, v24);
        goto LABEL_23;
      case 2u:
        uint64_t v25 = sub_24EC221E0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 16))(v20, v21, v25);
        goto LABEL_23;
      case 3u:
      case 5u:
        uint64_t v26 = sub_24EC221A0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 16))(v20, v21, v26);
        goto LABEL_23;
      case 4u:
        uint64_t v27 = sub_24EC22220();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 16))(v20, v21, v27);
        goto LABEL_23;
      case 6u:
        uint64_t v28 = sub_24EC221B0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v28 - 8) + 16))(v20, v21, v28);
        goto LABEL_23;
      case 7u:
        uint64_t v29 = sub_24EC22240();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 16))(v20, v21, v29);
        goto LABEL_23;
      case 8u:
        uint64_t v30 = sub_24EC22230();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v30 - 8) + 16))(v20, v21, v30);
        goto LABEL_23;
      case 9u:
        uint64_t v31 = sub_24EC22170();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v31 - 8) + 16))(v20, v21, v31);
        goto LABEL_23;
      case 0xAu:
        uint64_t v32 = sub_24EC221C0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v32 - 8) + 16))(v20, v21, v32);
LABEL_23:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
        break;
    }
  }
  uint64_t v33 = *(int *)(a3 + 212);
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  uint64_t v48 = *(void *)(a3 + 72);
  uint64_t v36 = sub_24EC22080();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v37 + 48);
  uint64_t v39 = v34;
  LODWORD(v34) = v38(v34, 2, v36);
  int v40 = v38(v35, 2, v36);
  if (!v34)
  {
    if (!v40)
    {
      (*(void (**)(void *, void *, uint64_t))(v37 + 24))(v39, v35, v36);
      uint64_t v41 = v48;
      goto LABEL_30;
    }
    (*(void (**)(void *, uint64_t))(v37 + 8))(v39, v36);
    goto LABEL_29;
  }
  if (v40)
  {
LABEL_29:
    uint64_t v41 = v48;
    uint64_t State = type metadata accessor for NewAndFeaturedLoadState();
    memcpy(v39, v35, *(void *)(*(void *)(State - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(void *, void *, uint64_t))(v37 + 16))(v39, v35, v36);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v39, 0, 2, v36);
  uint64_t v41 = v48;
LABEL_30:
  uint64_t v43 = *(int *)(a3 + 216);
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_24EC21DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 24))(a1 + *(int *)(a3 + 220), a2 + *(int *)(a3 + 220), v41);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a3 + 80) - 8) + 24))(a1 + *(int *)(a3 + 224), a2 + *(int *)(a3 + 224));
  return a1;
}

uint64_t sub_24EB7A558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EC220E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 196);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24EC22020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 204);
  *(unsigned char *)(a1 + *(int *)(a3 + 200)) = *(unsigned char *)(a2 + *(int *)(a3 + 200));
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = *(void *)(a3 + 56);
  uint64_t v15 = *(void *)(a3 + 88);
  uint64_t v16 = sub_24EC21F70();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      goto LABEL_9;
    case 3u:
      sub_24EC220B0();
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v17 = sub_24EC22000();
      }
      else {
        uint64_t v17 = sub_24EC21FD0();
      }
      (*(void (**)(void *, const void *))(*(void *)(v17 - 8) + 32))(v12, v13);
      swift_storeEnumTagMultiPayload();
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    case 4u:
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      break;
  }
  uint64_t v18 = *(int *)(a3 + 208);
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (const void *)(a2 + v18);
  uint64_t v21 = sub_24EC21EA0();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v22 = sub_24EC22190();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
      goto LABEL_22;
    case 1u:
      uint64_t v23 = sub_24EC221D0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(v19, v20, v23);
      goto LABEL_22;
    case 2u:
      uint64_t v24 = sub_24EC221E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v19, v20, v24);
      goto LABEL_22;
    case 3u:
    case 5u:
      uint64_t v25 = sub_24EC221A0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 32))(v19, v20, v25);
      goto LABEL_22;
    case 4u:
      uint64_t v26 = sub_24EC22220();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 32))(v19, v20, v26);
      goto LABEL_22;
    case 6u:
      uint64_t v27 = sub_24EC221B0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 32))(v19, v20, v27);
      goto LABEL_22;
    case 7u:
      uint64_t v28 = sub_24EC22240();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v28 - 8) + 32))(v19, v20, v28);
      goto LABEL_22;
    case 8u:
      uint64_t v29 = sub_24EC22230();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 32))(v19, v20, v29);
      goto LABEL_22;
    case 9u:
      uint64_t v30 = sub_24EC22170();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v30 - 8) + 32))(v19, v20, v30);
      goto LABEL_22;
    case 0xAu:
      uint64_t v31 = sub_24EC221C0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v31 - 8) + 32))(v19, v20, v31);
LABEL_22:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      break;
  }
  uint64_t v32 = *(int *)(a3 + 212);
  uint64_t v44 = (void *)(a1 + v32);
  uint64_t v33 = (const void *)(a2 + v32);
  uint64_t v45 = *(void *)(a3 + 72);
  uint64_t v34 = sub_24EC22080();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v43 = v33;
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48))(v33, 2, v34))
  {
    uint64_t v36 = v45;
    uint64_t State = type metadata accessor for NewAndFeaturedLoadState();
    memcpy(v44, v43, *(void *)(*(void *)(State - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v35 + 32))(v44, v33, v34);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v44, 0, 2, v34);
    uint64_t v36 = v45;
  }
  uint64_t v38 = *(int *)(a3 + 216);
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  uint64_t v41 = sub_24EC21DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 32))(a1 + *(int *)(a3 + 220), a2 + *(int *)(a3 + 220), v36);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a3 + 80) - 8) + 32))(a1 + *(int *)(a3 + 224), a2 + *(int *)(a3 + 224));
  return a1;
}

uint64_t sub_24EB7AEAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EC220E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 196);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24EC22020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 200)) = *(unsigned char *)(a2 + *(int *)(a3 + 200));
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(a3 + 204);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (const void *)(a2 + v11);
    uint64_t v14 = *(void *)(a3 + 56);
    uint64_t v15 = *(void *)(a3 + 88);
    uint64_t v16 = sub_24EC21F70();
    uint64_t v17 = *(void *)(v16 - 8);
    (*(void (**)(void *, uint64_t))(v17 + 8))(v12, v16);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
        goto LABEL_10;
      case 3u:
        sub_24EC220B0();
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v18 = sub_24EC22000();
        }
        else {
          uint64_t v18 = sub_24EC21FD0();
        }
        (*(void (**)(void *, const void *))(*(void *)(v18 - 8) + 32))(v12, v13);
        swift_storeEnumTagMultiPayload();
        goto LABEL_10;
      case 4u:
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v12, v13, *(void *)(v17 + 64));
        break;
    }
    uint64_t v19 = *(int *)(a3 + 208);
    uint64_t v20 = (void *)(a1 + v19);
    uint64_t v21 = (const void *)(a2 + v19);
    sub_24EB77D7C(a1 + v19);
    uint64_t v22 = sub_24EC21EA0();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v23 = sub_24EC22190();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(v20, v21, v23);
        goto LABEL_23;
      case 1u:
        uint64_t v24 = sub_24EC221D0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v20, v21, v24);
        goto LABEL_23;
      case 2u:
        uint64_t v25 = sub_24EC221E0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 32))(v20, v21, v25);
        goto LABEL_23;
      case 3u:
      case 5u:
        uint64_t v26 = sub_24EC221A0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 32))(v20, v21, v26);
        goto LABEL_23;
      case 4u:
        uint64_t v27 = sub_24EC22220();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 32))(v20, v21, v27);
        goto LABEL_23;
      case 6u:
        uint64_t v28 = sub_24EC221B0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v28 - 8) + 32))(v20, v21, v28);
        goto LABEL_23;
      case 7u:
        uint64_t v29 = sub_24EC22240();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 32))(v20, v21, v29);
        goto LABEL_23;
      case 8u:
        uint64_t v30 = sub_24EC22230();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v30 - 8) + 32))(v20, v21, v30);
        goto LABEL_23;
      case 9u:
        uint64_t v31 = sub_24EC22170();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v31 - 8) + 32))(v20, v21, v31);
        goto LABEL_23;
      case 0xAu:
        uint64_t v32 = sub_24EC221C0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v32 - 8) + 32))(v20, v21, v32);
LABEL_23:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
        break;
    }
  }
  uint64_t v33 = *(int *)(a3 + 212);
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  uint64_t v48 = *(void *)(a3 + 72);
  uint64_t v36 = sub_24EC22080();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v37 + 48);
  uint64_t v39 = v34;
  LODWORD(v34) = v38(v34, 2, v36);
  int v40 = v38(v35, 2, v36);
  if (!v34)
  {
    if (!v40)
    {
      (*(void (**)(void *, void *, uint64_t))(v37 + 40))(v39, v35, v36);
      uint64_t v41 = v48;
      goto LABEL_30;
    }
    (*(void (**)(void *, uint64_t))(v37 + 8))(v39, v36);
    goto LABEL_29;
  }
  if (v40)
  {
LABEL_29:
    uint64_t v41 = v48;
    uint64_t State = type metadata accessor for NewAndFeaturedLoadState();
    memcpy(v39, v35, *(void *)(*(void *)(State - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(void *, void *, uint64_t))(v37 + 32))(v39, v35, v36);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v39, 0, 2, v36);
  uint64_t v41 = v48;
LABEL_30:
  uint64_t v43 = *(int *)(a3 + 216);
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_24EC21DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 40))(a1 + *(int *)(a3 + 220), a2 + *(int *)(a3 + 220), v41);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a3 + 80) - 8) + 40))(a1 + *(int *)(a3 + 224), a2 + *(int *)(a3 + 224));
  return a1;
}

uint64_t sub_24EB7B8B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EB7B8C4);
}

uint64_t sub_24EB7B8C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EC220E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_24EC22020();
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      if (a2 == 244)
      {
        unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 200));
        if (v14 >= 0xC) {
          return v14 - 11;
        }
        else {
          return 0;
        }
      }
      uint64_t v15 = sub_24EC21F70();
      if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
      {
        uint64_t v16 = v15;
        uint64_t v17 = *(void *)(v15 - 8);
        uint64_t v18 = *(int *)(a3 + 204);
      }
      else
      {
        uint64_t v19 = sub_24EC21EA0();
        if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
        {
          uint64_t v16 = v19;
          uint64_t v17 = *(void *)(v19 - 8);
          uint64_t v18 = *(int *)(a3 + 208);
        }
        else
        {
          uint64_t v20 = *(void *)(a3 + 72);
          uint64_t State = type metadata accessor for NewAndFeaturedLoadState();
          if (*(_DWORD *)(*(void *)(State - 8) + 84) == a2)
          {
            uint64_t v16 = State;
            uint64_t v17 = *(void *)(State - 8);
            uint64_t v18 = *(int *)(a3 + 212);
          }
          else
          {
            uint64_t v22 = sub_24EC21DC0();
            if (*(_DWORD *)(*(void *)(v22 - 8) + 84) != a2)
            {
              uint64_t v23 = *(void *)(v20 - 8);
              if (*(_DWORD *)(v23 + 84) == a2) {
                return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(a1 + *(int *)(a3 + 220), a2, v20);
              }
              else {
                return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a3 + 80) - 8) + 48))(a1 + *(int *)(a3 + 224), a2);
              }
            }
            uint64_t v16 = v22;
            uint64_t v17 = *(void *)(v22 - 8);
            uint64_t v18 = *(int *)(a3 + 216);
          }
        }
      }
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(a1 + v18, a2, v16);
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 196);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_24EB7BC24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EB7BC38);
}

uint64_t sub_24EB7BC38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_24EC220E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_24EC22020();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      if (a3 == 244)
      {
        *(unsigned char *)(a1 + *(int *)(a4 + 200)) = a2 + 11;
        return result;
      }
      uint64_t v15 = sub_24EC21F70();
      if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a3)
      {
        uint64_t v16 = v15;
        uint64_t v17 = *(void *)(v15 - 8);
        uint64_t v18 = *(int *)(a4 + 204);
      }
      else
      {
        uint64_t v19 = sub_24EC21EA0();
        if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
        {
          uint64_t v16 = v19;
          uint64_t v17 = *(void *)(v19 - 8);
          uint64_t v18 = *(int *)(a4 + 208);
        }
        else
        {
          uint64_t v20 = *(void *)(a4 + 72);
          uint64_t State = type metadata accessor for NewAndFeaturedLoadState();
          if (*(_DWORD *)(*(void *)(State - 8) + 84) == a3)
          {
            uint64_t v16 = State;
            uint64_t v17 = *(void *)(State - 8);
            uint64_t v18 = *(int *)(a4 + 212);
          }
          else
          {
            uint64_t v22 = sub_24EC21DC0();
            if (*(_DWORD *)(*(void *)(v22 - 8) + 84) != a3)
            {
              uint64_t v23 = *(void *)(v20 - 8);
              if (*(_DWORD *)(v23 + 84) == a3) {
                return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(a1 + *(int *)(a4 + 220), a2, a2, v20);
              }
              else {
                return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a4 + 80) - 8)
              }
                                                                            + 56))(a1 + *(int *)(a4 + 224), a2, a2);
            }
            uint64_t v16 = v22;
            uint64_t v17 = *(void *)(v22 - 8);
            uint64_t v18 = *(int *)(a4 + 216);
          }
        }
      }
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(a1 + v18, a2, a2, v16);
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 196);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_24EB7BFB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 176);
}

unsigned char *sub_24EB7BFB8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB7C084);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

uint64_t sub_24EB7C0AC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EB7C0C8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EB7C0E4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EB7C100()
{
  return 9;
}

uint64_t NewAndFeaturedLocalState.placeholders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t NewAndFeaturedLocalState.placeholders.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*NewAndFeaturedLocalState.placeholders.modify())()
{
  return nullsub_1;
}

FitnessBrowsing::NewAndFeaturedLocalState __swiftcall NewAndFeaturedLocalState.init(placeholders:)(FitnessBrowsing::NewAndFeaturedLocalState placeholders)
{
  v1->placeholders._rawValue = placeholders.placeholders._rawValue;
  return placeholders;
}

uint64_t sub_24EB7C164()
{
  return 1;
}

uint64_t sub_24EB7C16C()
{
  return sub_24EC23030();
}

uint64_t sub_24EB7C1B0()
{
  return sub_24EC23000();
}

uint64_t sub_24EB7C1D8()
{
  return sub_24EC23030();
}

uint64_t sub_24EB7C21C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB7C918(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EB7C248(uint64_t a1)
{
  unint64_t v2 = sub_24EB7C438();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB7C284(uint64_t a1)
{
  unint64_t v2 = sub_24EB7C438();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t NewAndFeaturedLocalState.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946570);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB7C438();
  sub_24EC23050();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269946580);
  sub_24EB7C624(&qword_269946588);
  sub_24EC22F40();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24EB7C438()
{
  unint64_t result = qword_269946578;
  if (!qword_269946578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946578);
  }
  return result;
}

uint64_t NewAndFeaturedLocalState.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946590);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB7C438();
  sub_24EC23040();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269946580);
    sub_24EB7C624(&qword_269946598);
    sub_24EC22E90();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24EB7C624(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946580);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EB7C688@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return NewAndFeaturedLocalState.init(from:)(a1, a2);
}

uint64_t sub_24EB7C6A0(void *a1)
{
  return NewAndFeaturedLocalState.encode(to:)(a1);
}

uint64_t static NewAndFeaturedLocalState.== infix(_:_:)(void **a1, void **a2)
{
  return sub_24EB609DC(*a1, *a2);
}

uint64_t sub_24EB7C6C4(void **a1, void **a2)
{
  return sub_24EB609DC(*a1, *a2);
}

ValueMetadata *type metadata accessor for NewAndFeaturedLocalState()
{
  return &type metadata for NewAndFeaturedLocalState;
}

uint64_t getEnumTagSinglePayload for NewAndFeaturedLocalState.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for NewAndFeaturedLocalState.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EB7C7D0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EB7C7F8()
{
  return 0;
}

ValueMetadata *type metadata accessor for NewAndFeaturedLocalState.CodingKeys()
{
  return &type metadata for NewAndFeaturedLocalState.CodingKeys;
}

unint64_t sub_24EB7C814()
{
  unint64_t result = qword_2699465A0;
  if (!qword_2699465A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699465A0);
  }
  return result;
}

unint64_t sub_24EB7C86C()
{
  unint64_t result = qword_2699465A8;
  if (!qword_2699465A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699465A8);
  }
  return result;
}

unint64_t sub_24EB7C8C4()
{
  unint64_t result = qword_2699465B0;
  if (!qword_2699465B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699465B0);
  }
  return result;
}

uint64_t sub_24EB7C918(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6C6F686563616C70 && a2 == 0xEC00000073726564)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24EB7C9B0()
{
  return 0x6C6F686563616C70;
}

uint64_t BrowseItem.actionTitle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24EB741CC(v1, a1, &qword_2699465B8);
}

uint64_t BrowseItem.artworkDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for BrowseItem();
  return sub_24EB741CC(v1 + *(int *)(v3 + 20), a1, &qword_2699465C0);
}

uint64_t type metadata accessor for BrowseItem()
{
  uint64_t result = qword_26B1D8630;
  if (!qword_26B1D8630) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t BrowseItem.artworkOverlayTags.getter()
{
  type metadata accessor for BrowseItem();
  return swift_bridgeObjectRetain();
}

uint64_t BrowseItem.assetLoadStatus.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for BrowseItem() + 28));
}

uint64_t BrowseItem.bookmarked.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for BrowseItem() + 32));
}

uint64_t BrowseItem.caption.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for BrowseItem();
  return sub_24EB741CC(v1 + *(int *)(v3 + 36), a1, &qword_2699465B8);
}

uint64_t BrowseItem.displayStyle.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for BrowseItem() + 40));
}

uint64_t BrowseItem.dynamicBrickDisplayStyle.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for BrowseItem() + 44));
}

uint64_t BrowseItem.healthKitActivityTypes.getter()
{
  type metadata accessor for BrowseItem();
  return swift_bridgeObjectRetain();
}

uint64_t BrowseItem.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for BrowseItem() + 52));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BrowseItem.link.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for BrowseItem();
  return sub_24EB741CC(v1 + *(int *)(v3 + 56), a1, &qword_2699465C8);
}

uint64_t BrowseItem.mediaType.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for BrowseItem() + 60));
}

uint64_t BrowseItem.referenceIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for BrowseItem() + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BrowseItem.referenceType.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for BrowseItem() + 68));
}

uint64_t BrowseItem.subtitle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for BrowseItem();
  return sub_24EB741CC(v1 + *(int *)(v3 + 72), a1, &qword_2699465B8);
}

uint64_t BrowseItem.subtitleTextAttribute.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrowseItem() + 76);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  uint64_t v9 = *(void *)(v3 + 40);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(v3 + 48);
  return sub_24EB7CD64(v4, v5, v6, v7, v8, v9);
}

uint64_t sub_24EB7CD64(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6)
{
  if (a6 != 1)
  {
    sub_24EB7CDA8(result, a2, a3, a4);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24EB7CDA8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 0xFF) {
    return sub_24EB7CDBC(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t sub_24EB7CDBC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t BrowseItem.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for BrowseItem();
  return sub_24EB741CC(v1 + *(int *)(v3 + 80), a1, &qword_2699465B8);
}

uint64_t BrowseItem.titleTextAttribute.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrowseItem() + 84);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  uint64_t v9 = *(void *)(v3 + 40);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(v3 + 48);
  return sub_24EB7CD64(v4, v5, v6, v7, v8, v9);
}

__n128 BrowseItem.init(actionTitle:artworkDescriptor:artworkOverlayTags:assetLoadStatus:bookmarked:caption:displayStyle:dynamicBrickDisplayStyle:healthKitActivityTypes:identifier:link:mediaType:referenceIdentifier:referenceType:subtitle:subtitleTextAttribute:title:titleTextAttribute:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, long long *a19, uint64_t a20,long long *a21)
{
  long long v38 = a19[1];
  long long v39 = *a19;
  uint64_t v36 = *((void *)a19 + 5);
  uint64_t v37 = *((void *)a19 + 4);
  char v35 = *((unsigned char *)a19 + 48);
  __n128 v43 = (__n128)a21[1];
  long long v44 = *a21;
  uint64_t v41 = *((void *)a21 + 5);
  uint64_t v42 = *((void *)a21 + 4);
  char v40 = *((unsigned char *)a21 + 48);
  sub_24EB7D0B0(a1, a9, &qword_2699465B8);
  uint64_t v27 = (int *)type metadata accessor for BrowseItem();
  sub_24EB7D0B0(a2, a9 + v27[5], &qword_2699465C0);
  *(void *)(a9 + v27[6]) = a3;
  *(unsigned char *)(a9 + v27[7]) = a4;
  *(unsigned char *)(a9 + v27[8]) = a5;
  sub_24EB7D0B0(a6, a9 + v27[9], &qword_2699465B8);
  *(unsigned char *)(a9 + v27[10]) = a7;
  *(unsigned char *)(a9 + v27[11]) = a8;
  *(void *)(a9 + v27[12]) = a10;
  uint64_t v28 = (void *)(a9 + v27[13]);
  *uint64_t v28 = a11;
  v28[1] = a12;
  sub_24EB7D0B0(a13, a9 + v27[14], &qword_2699465C8);
  *(unsigned char *)(a9 + v27[15]) = a14;
  uint64_t v29 = (void *)(a9 + v27[16]);
  *uint64_t v29 = a15;
  v29[1] = a16;
  *(unsigned char *)(a9 + v27[17]) = a17;
  sub_24EB7D0B0(a18, a9 + v27[18], &qword_2699465B8);
  uint64_t v30 = a9 + v27[19];
  *(_OWORD *)uint64_t v30 = v39;
  *(_OWORD *)(v30 + 16) = v38;
  *(void *)(v30 + 32) = v37;
  *(void *)(v30 + 40) = v36;
  *(unsigned char *)(v30 + 48) = v35;
  sub_24EB7D0B0(a20, a9 + v27[20], &qword_2699465B8);
  uint64_t v31 = a9 + v27[21];
  __n128 result = v43;
  *(_OWORD *)uint64_t v31 = v44;
  *(__n128 *)(v31 + 16) = v43;
  *(void *)(v31 + 32) = v42;
  *(void *)(v31 + 40) = v41;
  *(unsigned char *)(v31 + 48) = v40;
  return result;
}

uint64_t sub_24EB7D0B0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_24EB7D114(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
    case 17:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x616F4C7465737361;
      break;
    case 4:
      unint64_t result = 0x6B72616D6B6F6F62;
      break;
    case 5:
      unint64_t result = 0x6E6F6974706163;
      break;
    case 6:
      unint64_t result = 0x5379616C70736964;
      break;
    case 7:
      unint64_t result = 0xD000000000000018;
      break;
    case 8:
      unint64_t result = 0xD000000000000016;
      break;
    case 9:
      unint64_t result = 0x696669746E656469;
      break;
    case 10:
      unint64_t result = 1802398060;
      break;
    case 11:
      unint64_t result = 0x707954616964656DLL;
      break;
    case 12:
      unint64_t result = 0xD000000000000013;
      break;
    case 13:
      unint64_t result = 0x636E657265666572;
      break;
    case 14:
      unint64_t result = 0x656C746974627573;
      break;
    case 15:
      unint64_t result = 0xD000000000000015;
      break;
    case 16:
      unint64_t result = 0x656C746974;
      break;
    default:
      unint64_t result = 0x69546E6F69746361;
      break;
  }
  return result;
}

unint64_t sub_24EB7D344()
{
  return sub_24EB7D114(*v0);
}

uint64_t sub_24EB7D34C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB84C24(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EB7D374(unsigned char *a1@<X8>)
{
  *a1 = 18;
}

uint64_t sub_24EB7D380(uint64_t a1)
{
  unint64_t v2 = sub_24EB7DAB0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB7D3BC(uint64_t a1)
{
  unint64_t v2 = sub_24EB7DAB0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseItem.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465D0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB7DAB0();
  sub_24EC23050();
  LOBYTE(v19) = 0;
  sub_24EC21D10();
  sub_24EB852FC(&qword_2699465E0, MEMORY[0x263F06828]);
  sub_24EC22EF0();
  if (!v2)
  {
    uint64_t v18 = (int *)type metadata accessor for BrowseItem();
    LOBYTE(v19) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
    sub_24EB7EA6C(&qword_2699465E8);
    sub_24EC22F40();
    uint64_t v9 = v18;
    *(void *)&long long v19 = *(void *)(v3 + v18[6]);
    char v23 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699465F0);
    sub_24EB7EAB4(&qword_2699465F8, (void (*)(void))sub_24EB7DB04);
    sub_24EC22F40();
    LOBYTE(v19) = *(unsigned char *)(v3 + v9[7]);
    char v23 = 3;
    sub_24EB7DB58();
    sub_24EC22EF0();
    LOBYTE(v19) = 4;
    sub_24EC22EE0();
    LOBYTE(v19) = 5;
    sub_24EC22EF0();
    LOBYTE(v19) = *(unsigned char *)(v3 + v9[10]);
    char v23 = 6;
    sub_24EB7DBAC();
    sub_24EC22F40();
    LOBYTE(v19) = *(unsigned char *)(v3 + v9[11]);
    char v23 = 7;
    sub_24EB7DC00();
    sub_24EC22EF0();
    *(void *)&long long v19 = *(void *)(v3 + v9[12]);
    char v23 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269946620);
    sub_24EB7EC74(&qword_269946628);
    sub_24EC22F40();
    LOBYTE(v19) = 9;
    sub_24EC22F00();
    LOBYTE(v19) = 10;
    type metadata accessor for EditorialLink();
    sub_24EB852FC(&qword_269946630, (void (*)(uint64_t))type metadata accessor for EditorialLink);
    sub_24EC22EF0();
    LOBYTE(v19) = *(unsigned char *)(v3 + v18[15]);
    char v23 = 11;
    sub_24EB7DC54();
    sub_24EC22EF0();
    LOBYTE(v19) = 12;
    sub_24EC22F00();
    LOBYTE(v19) = *(unsigned char *)(v3 + v18[17]);
    char v23 = 13;
    sub_24EB7DCA8();
    sub_24EC22F40();
    LOBYTE(v19) = 14;
    sub_24EC22EF0();
    uint64_t v10 = (long long *)(v3 + v18[19]);
    char v11 = *((unsigned char *)v10 + 48);
    long long v12 = v10[1];
    long long v19 = *v10;
    long long v20 = v12;
    long long v21 = v10[2];
    char v22 = v11;
    char v23 = 15;
    sub_24EB7DCFC();
    sub_24EC22EF0();
    LOBYTE(v19) = 16;
    sub_24EC22EF0();
    uint64_t v13 = (long long *)(v3 + v18[21]);
    char v14 = *((unsigned char *)v13 + 48);
    long long v15 = v13[1];
    long long v19 = *v13;
    long long v20 = v15;
    long long v21 = v13[2];
    char v22 = v14;
    char v23 = 17;
    sub_24EC22EF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_24EB7DAB0()
{
  unint64_t result = qword_2699465D8;
  if (!qword_2699465D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699465D8);
  }
  return result;
}

unint64_t sub_24EB7DB04()
{
  unint64_t result = qword_269946600;
  if (!qword_269946600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946600);
  }
  return result;
}

unint64_t sub_24EB7DB58()
{
  unint64_t result = qword_269946608;
  if (!qword_269946608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946608);
  }
  return result;
}

unint64_t sub_24EB7DBAC()
{
  unint64_t result = qword_269946610;
  if (!qword_269946610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946610);
  }
  return result;
}

unint64_t sub_24EB7DC00()
{
  unint64_t result = qword_269946618;
  if (!qword_269946618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946618);
  }
  return result;
}

unint64_t sub_24EB7DC54()
{
  unint64_t result = qword_269946638;
  if (!qword_269946638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946638);
  }
  return result;
}

unint64_t sub_24EB7DCA8()
{
  unint64_t result = qword_269946640;
  if (!qword_269946640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946640);
  }
  return result;
}

unint64_t sub_24EB7DCFC()
{
  unint64_t result = qword_269946648;
  if (!qword_269946648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946648);
  }
  return result;
}

uint64_t BrowseItem.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v47 = (uint64_t)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
  MEMORY[0x270FA5388](v49);
  uint64_t v6 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)v43 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)v43 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v43 - v17;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946650);
  uint64_t v48 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  long long v20 = (char *)v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = (int *)type metadata accessor for BrowseItem();
  MEMORY[0x270FA5388](v55);
  uint64_t v53 = a1;
  uint64_t v54 = (uint64_t)v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB7DAB0();
  uint64_t v50 = v20;
  char v22 = v52;
  sub_24EC23040();
  if (v22) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  }
  uint64_t v52 = v16;
  long long v44 = v10;
  uint64_t v45 = v13;
  uint64_t v23 = v48;
  uint64_t v24 = sub_24EC21D10();
  LOBYTE(v56) = 0;
  uint64_t v25 = sub_24EB852FC(&qword_269946658, MEMORY[0x263F06828]);
  sub_24EC22E40();
  v43[1] = v25;
  uint64_t v26 = v54;
  sub_24EB7D0B0((uint64_t)v18, v54, &qword_2699465B8);
  LOBYTE(v56) = 1;
  sub_24EB7EA6C(&qword_269946660);
  sub_24EC22E90();
  uint64_t v49 = v24;
  uint64_t v27 = v55;
  sub_24EB7D0B0((uint64_t)v6, v26 + v55[5], &qword_2699465C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699465F0);
  char v60 = 2;
  sub_24EB7EAB4(&qword_269946668, (void (*)(void))sub_24EB7EB24);
  sub_24EC22E90();
  *(void *)(v26 + v27[6]) = v56;
  char v60 = 3;
  sub_24EB7EB78();
  sub_24EC22E40();
  *(unsigned char *)(v26 + v27[7]) = v56;
  LOBYTE(v56) = 4;
  *(unsigned char *)(v26 + v27[8]) = sub_24EC22E30();
  LOBYTE(v56) = 5;
  uint64_t v28 = (uint64_t)v52;
  sub_24EC22E40();
  sub_24EB7D0B0(v28, v26 + v27[9], &qword_2699465B8);
  char v60 = 6;
  sub_24EB7EBCC();
  sub_24EC22E90();
  *(unsigned char *)(v26 + v27[10]) = v56;
  char v60 = 7;
  sub_24EB7EC20();
  sub_24EC22E40();
  *(unsigned char *)(v26 + v27[11]) = v56;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269946620);
  char v60 = 8;
  sub_24EB7EC74(&qword_269946690);
  sub_24EC22E90();
  *(void *)(v26 + v27[12]) = v56;
  LOBYTE(v56) = 9;
  uint64_t v29 = sub_24EC22E50();
  uint64_t v30 = (uint64_t *)(v54 + v55[13]);
  *uint64_t v30 = v29;
  v30[1] = v31;
  type metadata accessor for EditorialLink();
  LOBYTE(v56) = 10;
  sub_24EB852FC(&qword_269946698, (void (*)(uint64_t))type metadata accessor for EditorialLink);
  sub_24EC22E40();
  sub_24EB7D0B0(v47, v54 + v55[14], &qword_2699465C8);
  char v60 = 11;
  sub_24EB7ECD8();
  sub_24EC22E40();
  *(unsigned char *)(v54 + v55[15]) = v56;
  LOBYTE(v56) = 12;
  uint64_t v32 = sub_24EC22E50();
  uint64_t v33 = (uint64_t *)(v54 + v55[16]);
  *uint64_t v33 = v32;
  v33[1] = v34;
  char v60 = 13;
  sub_24EB7ED2C();
  sub_24EC22E90();
  *(unsigned char *)(v54 + v55[17]) = v56;
  LOBYTE(v56) = 14;
  sub_24EC22E40();
  sub_24EB7D0B0((uint64_t)v45, v54 + v55[18], &qword_2699465B8);
  char v60 = 15;
  sub_24EB7ED80();
  sub_24EC22E40();
  char v35 = v59;
  uint64_t v36 = v54 + v55[19];
  long long v37 = v57;
  *(_OWORD *)uint64_t v36 = v56;
  *(_OWORD *)(v36 + 16) = v37;
  *(_OWORD *)(v36 + 32) = v58;
  *(unsigned char *)(v36 + 48) = v35;
  LOBYTE(v56) = 16;
  sub_24EC22E40();
  sub_24EB7D0B0((uint64_t)v44, v54 + v55[20], &qword_2699465B8);
  char v60 = 17;
  sub_24EC22E40();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v50, v51);
  char v38 = v59;
  uint64_t v39 = v54;
  uint64_t v40 = v54 + v55[21];
  long long v41 = v57;
  *(_OWORD *)uint64_t v40 = v56;
  *(_OWORD *)(v40 + 16) = v41;
  *(_OWORD *)(v40 + 32) = v58;
  *(unsigned char *)(v40 + 48) = v38;
  sub_24EB7EDD4(v39, v46);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  return sub_24EB7FF4C(v39, (uint64_t (*)(void))type metadata accessor for BrowseItem);
}

uint64_t sub_24EB7E9F4(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6)
{
  if (a6 != 1)
  {
    sub_24EB7EA38(result, a2, a3, a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24EB7EA38(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 0xFF) {
    return sub_24EB7EA4C(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t sub_24EB7EA4C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24EB7EA6C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699465C0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EB7EAB4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699465F0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EB7EB24()
{
  unint64_t result = qword_269946670;
  if (!qword_269946670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946670);
  }
  return result;
}

unint64_t sub_24EB7EB78()
{
  unint64_t result = qword_269946678;
  if (!qword_269946678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946678);
  }
  return result;
}

unint64_t sub_24EB7EBCC()
{
  unint64_t result = qword_269946680;
  if (!qword_269946680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946680);
  }
  return result;
}

unint64_t sub_24EB7EC20()
{
  unint64_t result = qword_269946688;
  if (!qword_269946688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946688);
  }
  return result;
}

uint64_t sub_24EB7EC74(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946620);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EB7ECD8()
{
  unint64_t result = qword_2699466A0;
  if (!qword_2699466A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699466A0);
  }
  return result;
}

unint64_t sub_24EB7ED2C()
{
  unint64_t result = qword_2699466A8;
  if (!qword_2699466A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699466A8);
  }
  return result;
}

unint64_t sub_24EB7ED80()
{
  unint64_t result = qword_2699466B0;
  if (!qword_2699466B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699466B0);
  }
  return result;
}

uint64_t sub_24EB7EDD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EB7EE38@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BrowseItem.init(from:)(a1, a2);
}

uint64_t sub_24EB7EE50(void *a1)
{
  return BrowseItem.encode(to:)(a1);
}

uint64_t BrowseItem.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for EditorialLink();
  uint64_t v49 = *(void *)(v4 - 8);
  uint64_t v50 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v48 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24EC21D10();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v52 = (uint64_t)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v51 = (uint64_t)&v47 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  long long v20 = (char *)&v47 - v19;
  MEMORY[0x270FA5388](v18);
  char v22 = (char *)&v47 - v21;
  sub_24EB741CC(v2, (uint64_t)&v47 - v21, &qword_2699465B8);
  uint64_t v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v23 = v54(v22, 1, v9);
  uint64_t v53 = v10;
  if (v23 == 1)
  {
    sub_24EC23010();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v22, v9);
    sub_24EC23010();
    sub_24EB852FC(&qword_2699466B8, MEMORY[0x263F06828]);
    sub_24EC22A20();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v24 = (int *)type metadata accessor for BrowseItem();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
  sub_24EC21E20();
  uint64_t v25 = *(void *)(v2 + v24[6]);
  swift_bridgeObjectRetain();
  sub_24EB7FD7C(a1, v25);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v2 + v24[7]) == 9)
  {
    sub_24EC23010();
  }
  else
  {
    sub_24EC23010();
    sub_24EC23000();
  }
  if (*(unsigned char *)(v2 + v24[8]) != 2) {
    sub_24EC23010();
  }
  sub_24EC23010();
  sub_24EB741CC(v2 + v24[9], (uint64_t)v20, &qword_2699465B8);
  if (v54(v20, 1, v9) == 1)
  {
    sub_24EC23010();
  }
  else
  {
    uint64_t v26 = v53;
    (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v12, v20, v9);
    sub_24EC23010();
    sub_24EB852FC(&qword_2699466B8, MEMORY[0x263F06828]);
    sub_24EC22A20();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v9);
  }
  BrowseDisplayStyle.rawValue.getter(*(unsigned char *)(v2 + v24[10]));
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v2 + v24[11]) == 4)
  {
    sub_24EC23010();
  }
  else
  {
    sub_24EC23010();
    sub_24EC23000();
  }
  uint64_t v27 = *(void *)(v2 + v24[12]);
  sub_24EC23000();
  uint64_t v28 = *(void *)(v27 + 16);
  if (v28)
  {
    uint64_t v29 = v27 + 32;
    do
    {
      v29 += 8;
      sub_24EC23000();
      --v28;
    }
    while (v28);
  }
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  sub_24EB741CC(v2 + v24[14], (uint64_t)v8, &qword_2699465C8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v8, 1, v50) == 1)
  {
    sub_24EC23010();
  }
  else
  {
    uint64_t v30 = v48;
    sub_24EB7FEE8((uint64_t)v8, v48);
    sub_24EC23010();
    EditorialLink.hash(into:)();
    sub_24EB7FF4C(v30, (uint64_t (*)(void))type metadata accessor for EditorialLink);
  }
  uint64_t v31 = v53;
  if (*(unsigned char *)(v2 + v24[15]) == 4)
  {
    sub_24EC23010();
  }
  else
  {
    sub_24EC23010();
    sub_24EC23000();
  }
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  uint64_t v32 = v51;
  sub_24EB741CC(v2 + v24[18], v51, &qword_2699465B8);
  if (v54((char *)v32, 1, v9) == 1)
  {
    sub_24EC23010();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v12, v32, v9);
    sub_24EC23010();
    sub_24EB852FC(&qword_2699466B8, MEMORY[0x263F06828]);
    sub_24EC22A20();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v9);
  }
  uint64_t v33 = v2 + v24[19];
  uint64_t v34 = *(void *)(v33 + 40);
  if (v34 == 1)
  {
    sub_24EC23010();
  }
  else
  {
    char v35 = *(unsigned char *)(v33 + 48);
    uint64_t v37 = *(void *)(v33 + 24);
    uint64_t v36 = *(void *)(v33 + 32);
    uint64_t v38 = *(void *)(v33 + 16);
    long long v55 = *(_OWORD *)v33;
    uint64_t v56 = v38;
    char v57 = v37;
    uint64_t v58 = v36;
    uint64_t v59 = v34;
    char v60 = v35;
    sub_24EC23010();
    BrowseTextAttributes.hash(into:)(a1);
  }
  uint64_t v39 = v52;
  sub_24EB741CC(v2 + v24[20], v52, &qword_2699465B8);
  if (v54((char *)v39, 1, v9) == 1)
  {
    sub_24EC23010();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v12, v39, v9);
    sub_24EC23010();
    sub_24EB852FC(&qword_2699466B8, MEMORY[0x263F06828]);
    sub_24EC22A20();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v9);
  }
  uint64_t v40 = v2 + v24[21];
  uint64_t v41 = *(void *)(v40 + 40);
  if (v41 == 1) {
    return sub_24EC23010();
  }
  char v43 = *(unsigned char *)(v40 + 48);
  uint64_t v45 = *(void *)(v40 + 24);
  uint64_t v44 = *(void *)(v40 + 32);
  uint64_t v46 = *(void *)(v40 + 16);
  long long v55 = *(_OWORD *)v40;
  uint64_t v56 = v46;
  char v57 = v45;
  uint64_t v58 = v44;
  uint64_t v59 = v41;
  char v60 = v43;
  sub_24EC23010();
  return BrowseTextAttributes.hash(into:)(a1);
}

uint64_t BrowseItem.hashValue.getter()
{
  sub_24EC22FF0();
  BrowseItem.hash(into:)((uint64_t)v1);
  return sub_24EC23030();
}

uint64_t sub_24EB7F7C4()
{
  sub_24EC22FF0();
  BrowseItem.hash(into:)((uint64_t)v1);
  return sub_24EC23030();
}

uint64_t sub_24EB7F808()
{
  sub_24EC22FF0();
  BrowseItem.hash(into:)((uint64_t)v1);
  return sub_24EC23030();
}

uint64_t sub_24EB7F848(uint64_t a1, uint64_t a2)
{
  sub_24EC23030();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_16;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_19;
    }
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_24EC23000();
    }
    uint64_t v12 = *(void *)(v3 + 8 * v10);
    if (!v12) {
      break;
    }
LABEL_15:
    uint64_t v6 = (v12 - 1) & v12;
LABEL_16:
    sub_24EC22FF0();
    sub_24EC22AB0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_24EC23030();
    v9 ^= result;
  }
  int64_t v13 = v10 + 1;
  if (v10 + 1 >= v7) {
    goto LABEL_17;
  }
  uint64_t v12 = *(void *)(v3 + 8 * v13);
  if (v12)
  {
    ++v10;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v10 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_17;
    }
    uint64_t v12 = *(void *)(v3 + 8 * v10);
    ++v13;
    if (v12) {
      goto LABEL_15;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_24EB7FA1C(long long *a1, uint64_t a2)
{
  uint64_t v4 = sub_24EC21DF0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699466F0);
  MEMORY[0x270FA5388](v8 - 8);
  int64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *((void *)a1 + 8);
  long long v12 = a1[1];
  long long v37 = *a1;
  long long v38 = v12;
  long long v13 = a1[2];
  long long v14 = a1[3];
  uint64_t v29 = a1;
  long long v39 = v13;
  long long v40 = v14;
  uint64_t v41 = v11;
  uint64_t v15 = sub_24EC23030();
  uint64_t v16 = *(void *)(a2 + 56);
  uint64_t v31 = a2 + 56;
  uint64_t v32 = v15;
  uint64_t v17 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v30 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v34 = v5 + 16;
  char v35 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v33 = v5 + 48;
  uint64_t v36 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  int64_t v22 = 0;
  if (!v19) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v23 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (unint64_t i = v23 | (v22 << 6); ; unint64_t i = __clz(__rbit64(v26)) + (v22 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v10, *(void *)(v36 + 48) + *(void *)(v5 + 72) * i, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1) {
      goto LABEL_19;
    }
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_24EB852FC(&qword_2699466F8, MEMORY[0x263F07A30]);
    uint64_t v28 = sub_24EC22A10();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v21 ^= v28;
    if (v19) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v22++, 1)) {
      goto LABEL_21;
    }
    if (v22 >= v30) {
      goto LABEL_18;
    }
    unint64_t v26 = *(void *)(v31 + 8 * v22);
    if (!v26) {
      break;
    }
LABEL_14:
    unint64_t v19 = (v26 - 1) & v26;
  }
  int64_t v27 = v22 + 1;
  if (v22 + 1 >= v30)
  {
LABEL_18:
    (*v35)(v10, 1, 1, v4);
LABEL_19:
    swift_release();
    return sub_24EC23000();
  }
  unint64_t v26 = *(void *)(v31 + 8 * v27);
  if (v26)
  {
    ++v22;
    goto LABEL_14;
  }
  while (1)
  {
    int64_t v22 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v22 >= v30) {
      goto LABEL_18;
    }
    unint64_t v26 = *(void *)(v31 + 8 * v22);
    ++v27;
    if (v26) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_24EB7FD7C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_24EC23030();
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  uint64_t v9 = v8 & *(void *)(a2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v9 &= v9 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v5++, 1)) {
      goto LABEL_19;
    }
    if (v5 >= v10) {
      return sub_24EC23000();
    }
    uint64_t v12 = *(void *)(v6 + 8 * v5);
    if (!v12) {
      break;
    }
LABEL_16:
    uint64_t v9 = (v12 - 1) & v12;
LABEL_5:
    sub_24EC22FF0();
    sub_24EC23000();
    uint64_t result = sub_24EC23030();
    v4 ^= result;
  }
  int64_t v13 = v5 + 1;
  if (v5 + 1 >= v10) {
    return sub_24EC23000();
  }
  uint64_t v12 = *(void *)(v6 + 8 * v13);
  if (v12)
  {
    ++v5;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v5 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v5 >= v10) {
      return sub_24EC23000();
    }
    uint64_t v12 = *(void *)(v6 + 8 * v5);
    ++v13;
    if (v12) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_24EB7FEE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EditorialLink();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EB7FF4C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

BOOL _s15FitnessBrowsing10BrowseItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v214 = type metadata accessor for EditorialLink();
  uint64_t v213 = *(void *)(v214 - 8);
  MEMORY[0x270FA5388](v214);
  uint64_t v210 = (uint64_t)&v197 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v211 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946700);
  MEMORY[0x270FA5388](v211);
  uint64_t v216 = (uint64_t)&v197 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C8);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v212 = (uint64_t)&v197 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v215 = (uint64_t)&v197 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v217 = (uint64_t)&v197 - v11;
  uint64_t v12 = sub_24EC21D10();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v223 = (char *)&v197 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946708);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v205 = (uint64_t)&v197 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v209 = (uint64_t)&v197 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v220 = (uint64_t)&v197 - v21;
  MEMORY[0x270FA5388](v20);
  unint64_t v23 = (char *)&v197 - v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
  uint64_t v25 = MEMORY[0x270FA5388](v24 - 8);
  uint64_t v202 = (uint64_t)&v197 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v203 = (uint64_t)&v197 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v204 = (uint64_t)&v197 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v206 = (uint64_t)&v197 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v207 = (uint64_t)&v197 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v208 = (uint64_t)&v197 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v218 = (uint64_t)&v197 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v222 = (uint64_t)&v197 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v221 = (int *)((char *)&v197 - v42);
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v45 = (char *)&v197 - v44;
  uint64_t v46 = MEMORY[0x270FA5388](v43);
  uint64_t v48 = (char *)&v197 - v47;
  MEMORY[0x270FA5388](v46);
  uint64_t v50 = (char *)&v197 - v49;
  uint64_t v225 = a1;
  sub_24EB741CC(a1, (uint64_t)&v197 - v49, &qword_2699465B8);
  uint64_t v51 = a2;
  sub_24EB741CC(a2, (uint64_t)v48, &qword_2699465B8);
  uint64_t v219 = v15;
  uint64_t v52 = (uint64_t)&v23[*(int *)(v15 + 48)];
  sub_24EB741CC((uint64_t)v50, (uint64_t)v23, &qword_2699465B8);
  sub_24EB741CC((uint64_t)v48, v52, &qword_2699465B8);
  uint64_t v224 = v13;
  uint64_t v53 = v13;
  uint64_t v54 = v12;
  char v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
  uint64_t v55 = v53 + 48;
  uint64_t v56 = v57;
  if (v57((uint64_t)v23, 1, v12) == 1)
  {
    sub_24EB742F4((uint64_t)v48, &qword_2699465B8);
    sub_24EB742F4((uint64_t)v50, &qword_2699465B8);
    if (v56(v52, 1, v12) == 1)
    {
      sub_24EB742F4((uint64_t)v23, &qword_2699465B8);
      uint64_t v58 = v51;
      uint64_t v59 = v225;
      goto LABEL_9;
    }
LABEL_6:
    uint64_t v61 = &qword_269946708;
    uint64_t v62 = (uint64_t)v23;
    goto LABEL_7;
  }
  sub_24EB741CC((uint64_t)v23, (uint64_t)v45, &qword_2699465B8);
  uint64_t v201 = v56;
  if (v56(v52, 1, v12) == 1)
  {
    uint64_t v60 = v224;
    sub_24EB742F4((uint64_t)v48, &qword_2699465B8);
    sub_24EB742F4((uint64_t)v50, &qword_2699465B8);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v45, v12);
    goto LABEL_6;
  }
  uint64_t v63 = v224;
  uint64_t v64 = *(void (**)(char *, uint64_t, uint64_t))(v224 + 32);
  uint64_t v200 = v55;
  uint64_t v65 = v223;
  v64(v223, v52, v12);
  sub_24EB852FC(&qword_269946710, MEMORY[0x263F06828]);
  char v66 = sub_24EC22A30();
  uint64_t v67 = *(void (**)(char *, uint64_t))(v63 + 8);
  v67(v65, v54);
  sub_24EB742F4((uint64_t)v48, &qword_2699465B8);
  sub_24EB742F4((uint64_t)v50, &qword_2699465B8);
  v67(v45, v54);
  uint64_t v58 = v51;
  uint64_t v59 = v225;
  uint64_t v55 = v200;
  sub_24EB742F4((uint64_t)v23, &qword_2699465B8);
  uint64_t v56 = v201;
  if ((v66 & 1) == 0) {
    return 0;
  }
LABEL_9:
  uint64_t v68 = (int *)type metadata accessor for BrowseItem();
  type metadata accessor for BrowseArtwork();
  sub_24EB852FC(&qword_26B1D86D0, (void (*)(uint64_t))type metadata accessor for BrowseArtwork);
  if ((sub_24EC21E10() & 1) == 0 || (sub_24EC1C4C4(*(void *)(v59 + v68[6]), *(void *)(v58 + v68[6])) & 1) == 0) {
    return 0;
  }
  uint64_t v69 = v68[7];
  int v70 = *(unsigned __int8 *)(v59 + v69);
  int v71 = *(unsigned __int8 *)(v58 + v69);
  uint64_t v199 = v58;
  if (v70 == 9)
  {
    uint64_t v73 = (uint64_t)v221;
    uint64_t v72 = v222;
    if (v71 != 9) {
      return 0;
    }
  }
  else
  {
    BOOL result = 0;
    uint64_t v73 = (uint64_t)v221;
    uint64_t v72 = v222;
    if (v71 == 9 || v70 != v71) {
      return result;
    }
  }
  uint64_t v75 = v68[8];
  int v76 = *(unsigned __int8 *)(v59 + v75);
  int v77 = *(unsigned __int8 *)(v199 + v75);
  if (v76 == 2)
  {
    if (v77 != 2) {
      return 0;
    }
  }
  else
  {
    BOOL result = 0;
    BOOL v78 = (v76 & 1) == 0;
    if (v77 == 2 || ((v78 ^ v77) & 1) == 0) {
      return result;
    }
  }
  sub_24EB741CC(v59 + v68[9], v73, &qword_2699465B8);
  uint64_t v79 = v199;
  sub_24EB741CC(v199 + v68[9], v72, &qword_2699465B8);
  uint64_t v80 = v72;
  uint64_t v81 = v220;
  uint64_t v82 = v220 + *(int *)(v219 + 48);
  sub_24EB741CC(v73, v220, &qword_2699465B8);
  sub_24EB741CC(v80, v82, &qword_2699465B8);
  if (v56(v81, 1, v54) == 1)
  {
    sub_24EB742F4(v80, &qword_2699465B8);
    uint64_t v81 = v220;
    sub_24EB742F4(v73, &qword_2699465B8);
    if (v56(v82, 1, v54) == 1)
    {
      sub_24EB742F4(v81, &qword_2699465B8);
      goto LABEL_29;
    }
LABEL_27:
    uint64_t v61 = &qword_269946708;
    uint64_t v62 = v81;
    goto LABEL_7;
  }
  uint64_t v83 = v218;
  sub_24EB741CC(v81, v218, &qword_2699465B8);
  if (v56(v82, 1, v54) == 1)
  {
    sub_24EB742F4(v222, &qword_2699465B8);
    sub_24EB742F4(v73, &qword_2699465B8);
    (*(void (**)(uint64_t, uint64_t))(v224 + 8))(v83, v54);
    goto LABEL_27;
  }
  uint64_t v84 = v224;
  uint64_t v85 = *(void (**)(char *, uint64_t, uint64_t))(v224 + 32);
  uint64_t v221 = v68;
  uint64_t v86 = v56;
  uint64_t v87 = v55;
  uint64_t v88 = v223;
  v85(v223, v82, v54);
  sub_24EB852FC(&qword_269946710, MEMORY[0x263F06828]);
  uint64_t v89 = v54;
  int v198 = sub_24EC22A30();
  uint64_t v90 = v84;
  uint64_t v91 = v73;
  uint64_t v92 = *(void (**)(char *, uint64_t))(v90 + 8);
  uint64_t v93 = v88;
  uint64_t v55 = v87;
  uint64_t v56 = v86;
  uint64_t v68 = v221;
  uint64_t v79 = v199;
  v92(v93, v89);
  sub_24EB742F4(v222, &qword_2699465B8);
  sub_24EB742F4(v91, &qword_2699465B8);
  v92((char *)v83, v89);
  uint64_t v54 = v89;
  sub_24EB742F4(v220, &qword_2699465B8);
  if ((v198 & 1) == 0) {
    return 0;
  }
LABEL_29:
  uint64_t v94 = v68[10];
  char v95 = *(unsigned char *)(v79 + v94);
  uint64_t v96 = BrowseDisplayStyle.rawValue.getter(*(unsigned char *)(v225 + v94));
  uint64_t v98 = v97;
  if (v96 == BrowseDisplayStyle.rawValue.getter(v95) && v98 == v99)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v100 = v225;
  }
  else
  {
    char v101 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    uint64_t v100 = v225;
    if ((v101 & 1) == 0) {
      return result;
    }
  }
  uint64_t v102 = v68[11];
  int v103 = *(unsigned __int8 *)(v100 + v102);
  int v104 = *(unsigned __int8 *)(v199 + v102);
  if (v103 == 4)
  {
    if (v104 != 4) {
      return 0;
    }
  }
  else
  {
    BOOL result = 0;
    if (v104 == 4 || v103 != v104) {
      return result;
    }
  }
  uint64_t v105 = v199;
  if (!sub_24EB61C80(*(void **)(v100 + v68[12]), *(void **)(v199 + v68[12]))) {
    return 0;
  }
  uint64_t v106 = v68[13];
  uint64_t v107 = *(void *)(v100 + v106);
  uint64_t v108 = *(void *)(v100 + v106 + 8);
  uint64_t v109 = (void *)(v105 + v106);
  uint64_t v110 = v217;
  if (v107 == *v109 && v108 == v109[1] || (v111 = sub_24EC22F70(), BOOL result = 0, (v111 & 1) != 0))
  {
    sub_24EB741CC(v100 + v68[14], v110, &qword_2699465C8);
    uint64_t v112 = v215;
    sub_24EB741CC(v199 + v68[14], v215, &qword_2699465C8);
    uint64_t v113 = v216;
    uint64_t v114 = v216 + *(int *)(v211 + 48);
    sub_24EB741CC(v110, v216, &qword_2699465C8);
    uint64_t v222 = v114;
    uint64_t v115 = v113;
    sub_24EB741CC(v112, v114, &qword_2699465C8);
    uint64_t v116 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v213 + 48);
    uint64_t v117 = v214;
    if (v116(v115, 1, v214) == 1)
    {
      sub_24EB742F4(v112, &qword_2699465C8);
      uint64_t v115 = v216;
      sub_24EB742F4(v217, &qword_2699465C8);
      if (v116(v222, 1, v117) == 1)
      {
        sub_24EB742F4(v115, &qword_2699465C8);
LABEL_49:
        uint64_t v121 = v68[15];
        int v122 = *(unsigned __int8 *)(v100 + v121);
        int v123 = *(unsigned __int8 *)(v199 + v121);
        if (v122 == 4)
        {
          if (v123 != 4) {
            return 0;
          }
        }
        else
        {
          BOOL result = 0;
          if (v123 == 4 || v122 != v123) {
            return result;
          }
        }
        uint64_t v124 = v68[16];
        uint64_t v125 = *(void *)(v100 + v124);
        uint64_t v126 = *(void *)(v100 + v124 + 8);
        uint64_t v127 = (void *)(v199 + v124);
        if (v125 == *v127 && v126 == v127[1] || (v128 = sub_24EC22F70(), BOOL result = 0, (v128 & 1) != 0))
        {
          uint64_t v129 = v199;
          if ((sub_24EC04AA8(*(unsigned char *)(v100 + v68[17]), *(unsigned char *)(v199 + v68[17])) & 1) == 0) {
            return 0;
          }
          uint64_t v130 = v100 + v68[18];
          uint64_t v131 = v208;
          sub_24EB741CC(v130, v208, &qword_2699465B8);
          uint64_t v221 = v68;
          uint64_t v132 = v129 + v68[18];
          uint64_t v133 = v207;
          sub_24EB741CC(v132, v207, &qword_2699465B8);
          uint64_t v134 = v209;
          uint64_t v135 = v209 + *(int *)(v219 + 48);
          sub_24EB741CC(v131, v209, &qword_2699465B8);
          sub_24EB741CC(v133, v135, &qword_2699465B8);
          unsigned int v136 = v56(v134, 1, v54);
          uint64_t v200 = v55;
          uint64_t v201 = v56;
          uint64_t v197 = v54;
          if (v136 == 1)
          {
            sub_24EB742F4(v207, &qword_2699465B8);
            sub_24EB742F4(v208, &qword_2699465B8);
            if (v56(v135, 1, v54) == 1)
            {
              sub_24EB742F4(v209, &qword_2699465B8);
              goto LABEL_66;
            }
          }
          else
          {
            sub_24EB741CC(v209, v206, &qword_2699465B8);
            if (v56(v135, 1, v54) != 1)
            {
              uint64_t v139 = v223;
              uint64_t v138 = v224;
              uint64_t v140 = v197;
              (*(void (**)(char *, uint64_t, uint64_t))(v224 + 32))(v223, v135, v197);
              sub_24EB852FC(&qword_269946710, MEMORY[0x263F06828]);
              uint64_t v141 = v206;
              char v142 = sub_24EC22A30();
              uint64_t v143 = *(void (**)(char *, uint64_t))(v138 + 8);
              v143(v139, v140);
              sub_24EB742F4(v207, &qword_2699465B8);
              sub_24EB742F4(v208, &qword_2699465B8);
              v143((char *)v141, v140);
              sub_24EB742F4(v209, &qword_2699465B8);
              if ((v142 & 1) == 0) {
                return 0;
              }
LABEL_66:
              uint64_t v144 = v221[19];
              uint64_t v146 = *(void *)(v225 + v144);
              uint64_t v145 = *(void *)(v225 + v144 + 8);
              uint64_t v220 = *(void *)(v225 + v144 + 16);
              uint64_t v222 = *(void *)(v225 + v144 + 24);
              uint64_t v147 = *(void *)(v225 + v144 + 40);
              uint64_t v217 = *(void *)(v225 + v144 + 32);
              LODWORD(v218) = *(unsigned __int8 *)(v225 + v144 + 48);
              uint64_t v148 = v199 + v144;
              uint64_t v149 = *(void *)v148;
              uint64_t v150 = *(void *)(v148 + 8);
              uint64_t v151 = *(void *)(v148 + 16);
              uint64_t v152 = *(void *)(v148 + 24);
              uint64_t v153 = *(void *)(v148 + 40);
              uint64_t v215 = *(void *)(v148 + 32);
              LODWORD(v216) = *(unsigned __int8 *)(v148 + 48);
              if (v147 == 1)
              {
                if (v153 == 1)
                {
LABEL_74:
                  uint64_t v167 = v221;
                  uint64_t v168 = v204;
                  sub_24EB741CC(v225 + v221[20], v204, &qword_2699465B8);
                  uint64_t v169 = v203;
                  sub_24EB741CC(v199 + v167[20], v203, &qword_2699465B8);
                  uint64_t v170 = v205;
                  uint64_t v171 = v205 + *(int *)(v219 + 48);
                  sub_24EB741CC(v168, v205, &qword_2699465B8);
                  sub_24EB741CC(v169, v171, &qword_2699465B8);
                  if (v201(v170, 1, v197) == 1)
                  {
                    sub_24EB742F4(v203, &qword_2699465B8);
                    sub_24EB742F4(v204, &qword_2699465B8);
                    if (v201(v171, 1, v197) == 1)
                    {
                      sub_24EB742F4(v205, &qword_2699465B8);
LABEL_81:
                      uint64_t v178 = v221[21];
                      uint64_t v179 = v225 + v178;
                      uint64_t v181 = *(void *)(v225 + v178);
                      uint64_t v180 = *(void *)(v225 + v178 + 8);
                      uint64_t v182 = *(void *)(v225 + v178 + 24);
                      uint64_t v224 = *(void *)(v225 + v178 + 16);
                      uint64_t v225 = v182;
                      uint64_t v183 = *(void *)(v179 + 40);
                      uint64_t v222 = *(void *)(v179 + 32);
                      LODWORD(v223) = *(unsigned __int8 *)(v179 + 48);
                      uint64_t v184 = v199 + v178;
                      uint64_t v186 = *(void *)v184;
                      uint64_t v185 = *(void *)(v184 + 8);
                      uint64_t v187 = *(void *)(v184 + 16);
                      uint64_t v220 = *(void *)(v184 + 24);
                      uint64_t v189 = *(void *)(v184 + 32);
                      uint64_t v188 = *(void *)(v184 + 40);
                      LODWORD(v221) = *(unsigned __int8 *)(v184 + 48);
                      if (v183 == 1)
                      {
                        if (v188 == 1) {
                          return 1;
                        }
                      }
                      else
                      {
                        uint64_t v233 = v181;
                        uint64_t v234 = v180;
                        uint64_t v235 = v224;
                        uint64_t v236 = v225;
                        uint64_t v237 = v222;
                        uint64_t v238 = v183;
                        char v239 = (char)v223;
                        if (v188 != 1)
                        {
                          uint64_t v226 = v186;
                          uint64_t v227 = v185;
                          uint64_t v228 = v187;
                          char v229 = v220;
                          uint64_t v230 = v189;
                          uint64_t v231 = v188;
                          char v232 = (char)v221;
                          uint64_t v194 = v224;
                          unsigned __int8 v193 = v225;
                          uint64_t v195 = v222;
                          sub_24EB7CD64(v181, v180, v224, v225, v222, v183);
                          sub_24EB7CDA8(v181, v180, v194, v193);
                          swift_bridgeObjectRetain();
                          char v196 = _s15FitnessBrowsing20BrowseTextAttributesV2eeoiySbAC_ACtFZ_0((uint64_t)&v233, (uint64_t)&v226);
                          sub_24EB7EA38(v233, v234, v235, v236);
                          swift_bridgeObjectRelease();
                          sub_24EB7E9F4(v181, v180, v194, v193, v195, v183);
                          return (v196 & 1) != 0;
                        }
                        uint64_t v190 = v224;
                        unsigned __int8 v191 = v225;
                        sub_24EB7CDA8(v181, v180, v224, v225);
                        swift_bridgeObjectRetain();
                        sub_24EB7CDA8(v181, v180, v190, v191);
                        swift_bridgeObjectRetain();
                        sub_24EB7EA38(v181, v180, v190, v191);
                        swift_bridgeObjectRelease();
                      }
                      unsigned __int8 v192 = v220;
                      sub_24EB7CD64(v186, v185, v187, v220, v189, v188);
                      sub_24EB7E9F4(v181, v180, v224, v225, v222, v183);
                      uint64_t v157 = v186;
                      uint64_t v158 = v185;
                      uint64_t v159 = v187;
                      unsigned __int8 v160 = v192;
                      uint64_t v161 = v189;
                      uint64_t v162 = v188;
LABEL_72:
                      sub_24EB7E9F4(v157, v158, v159, v160, v161, v162);
                      return 0;
                    }
                  }
                  else
                  {
                    sub_24EB741CC(v205, v202, &qword_2699465B8);
                    if (v201(v171, 1, v197) != 1)
                    {
                      uint64_t v172 = v223;
                      uint64_t v173 = v224;
                      uint64_t v174 = v197;
                      (*(void (**)(char *, uint64_t, uint64_t))(v224 + 32))(v223, v171, v197);
                      sub_24EB852FC(&qword_269946710, MEMORY[0x263F06828]);
                      uint64_t v175 = v202;
                      char v176 = sub_24EC22A30();
                      uint64_t v177 = *(void (**)(char *, uint64_t))(v173 + 8);
                      v177(v172, v174);
                      sub_24EB742F4(v203, &qword_2699465B8);
                      sub_24EB742F4(v204, &qword_2699465B8);
                      v177((char *)v175, v174);
                      sub_24EB742F4(v205, &qword_2699465B8);
                      if ((v176 & 1) == 0) {
                        return 0;
                      }
                      goto LABEL_81;
                    }
                    sub_24EB742F4(v203, &qword_2699465B8);
                    sub_24EB742F4(v204, &qword_2699465B8);
                    (*(void (**)(uint64_t, uint64_t))(v224 + 8))(v202, v197);
                  }
                  uint64_t v61 = &qword_269946708;
                  uint64_t v137 = &v237;
                  goto LABEL_64;
                }
              }
              else
              {
                uint64_t v233 = v146;
                uint64_t v234 = v145;
                uint64_t v235 = v220;
                uint64_t v236 = v222;
                uint64_t v237 = v217;
                uint64_t v238 = v147;
                char v239 = v218;
                if (v153 != 1)
                {
                  uint64_t v226 = v149;
                  uint64_t v227 = v150;
                  uint64_t v228 = v151;
                  char v229 = v152;
                  uint64_t v230 = v215;
                  uint64_t v231 = v153;
                  char v232 = v216;
                  uint64_t v163 = v220;
                  unsigned __int8 v164 = v222;
                  uint64_t v165 = v217;
                  sub_24EB7CD64(v146, v145, v220, v222, v217, v147);
                  sub_24EB7CDA8(v146, v145, v163, v164);
                  swift_bridgeObjectRetain();
                  char v166 = _s15FitnessBrowsing20BrowseTextAttributesV2eeoiySbAC_ACtFZ_0((uint64_t)&v233, (uint64_t)&v226);
                  sub_24EB7EA38(v233, v234, v235, v236);
                  swift_bridgeObjectRelease();
                  sub_24EB7E9F4(v146, v145, v163, v164, v165, v147);
                  if ((v166 & 1) == 0) {
                    return 0;
                  }
                  goto LABEL_74;
                }
                uint64_t v154 = v220;
                unsigned __int8 v155 = v222;
                sub_24EB7CDA8(v146, v145, v220, v222);
                swift_bridgeObjectRetain();
                sub_24EB7CDA8(v146, v145, v154, v155);
                swift_bridgeObjectRetain();
                sub_24EB7EA38(v146, v145, v154, v155);
                swift_bridgeObjectRelease();
              }
              uint64_t v156 = v215;
              sub_24EB7CD64(v149, v150, v151, v152, v215, v153);
              sub_24EB7E9F4(v146, v145, v220, v222, v217, v147);
              uint64_t v157 = v149;
              uint64_t v158 = v150;
              uint64_t v159 = v151;
              unsigned __int8 v160 = v152;
              uint64_t v161 = v156;
              uint64_t v162 = v153;
              goto LABEL_72;
            }
            sub_24EB742F4(v207, &qword_2699465B8);
            sub_24EB742F4(v208, &qword_2699465B8);
            (*(void (**)(uint64_t, uint64_t))(v224 + 8))(v206, v197);
          }
          uint64_t v61 = &qword_269946708;
          uint64_t v137 = &v240;
LABEL_64:
          uint64_t v62 = *(v137 - 32);
          goto LABEL_7;
        }
        return result;
      }
    }
    else
    {
      sub_24EB741CC(v115, v212, &qword_2699465C8);
      uint64_t v118 = v222;
      if (v116(v222, 1, v117) != 1)
      {
        uint64_t v119 = v210;
        sub_24EB7FEE8(v118, v210);
        uint64_t v120 = v212;
        LODWORD(v222) = _s15FitnessBrowsing13EditorialLinkO2eeoiySbAC_ACtFZ_0(v212, v119);
        sub_24EB7FF4C(v119, (uint64_t (*)(void))type metadata accessor for EditorialLink);
        sub_24EB742F4(v215, &qword_2699465C8);
        sub_24EB742F4(v217, &qword_2699465C8);
        sub_24EB7FF4C(v120, (uint64_t (*)(void))type metadata accessor for EditorialLink);
        sub_24EB742F4(v115, &qword_2699465C8);
        if ((v222 & 1) == 0) {
          return 0;
        }
        goto LABEL_49;
      }
      sub_24EB742F4(v215, &qword_2699465C8);
      sub_24EB742F4(v217, &qword_2699465C8);
      sub_24EB7FF4C(v212, (uint64_t (*)(void))type metadata accessor for EditorialLink);
    }
    uint64_t v61 = &qword_269946700;
    uint64_t v62 = v115;
LABEL_7:
    sub_24EB742F4(v62, v61);
    return 0;
  }
  return result;
}

uint64_t sub_24EB8181C()
{
  return sub_24EB852FC(&qword_2699466C0, (void (*)(uint64_t))type metadata accessor for BrowseItem);
}

uint64_t *initializeBufferWithCopyOfBuffer for BrowseItem(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24EC21D10();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    if (v9((char *)a2, 1, v7))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = a3[5];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v15 = (uint64_t *)&unk_2699466D0;
    }
    else {
      uint64_t v15 = (uint64_t *)&unk_2699466C8;
    }
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(v15);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v13, v14, v16);
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *((unsigned char *)a1 + v17) = *((unsigned char *)a2 + v17);
    uint64_t v18 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    swift_bridgeObjectRetain();
    uint64_t v71 = v7;
    uint64_t v72 = v9;
    uint64_t v69 = v8;
    if (v9(v20, 1, v7))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v19, v20, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v19, 0, 1, v7);
    }
    uint64_t v22 = a3[11];
    *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    *((unsigned char *)a1 + v22) = *((unsigned char *)a2 + v22);
    uint64_t v23 = a3[13];
    *(uint64_t *)((char *)a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    uint64_t v24 = (uint64_t *)((char *)a1 + v23);
    uint64_t v25 = (uint64_t *)((char *)a2 + v23);
    uint64_t v26 = v25[1];
    void *v24 = *v25;
    v24[1] = v26;
    uint64_t v27 = a3[14];
    __dst = (uint64_t *)((char *)a1 + v27);
    uint64_t v28 = (uint64_t *)((char *)a2 + v27);
    uint64_t v29 = type metadata accessor for EditorialLink();
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v31 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v30 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31(v28, 1, v29))
    {
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C8);
      memcpy(__dst, v28, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      *(_OWORD *)__dst = *(_OWORD *)v28;
      __dst[2] = v28[2];
      uint64_t v33 = *(int *)(type metadata accessor for EditorialVideoLink() + 24);
      uint64_t v67 = (char *)v28 + v33;
      uint64_t v68 = (char *)__dst + v33;
      uint64_t v34 = sub_24EC21D30();
      uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
      swift_bridgeObjectRetain();
      v35(v68, v67, v34);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v29);
    }
    uint64_t v36 = a3[16];
    *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
    uint64_t v37 = (uint64_t *)((char *)a1 + v36);
    uint64_t v38 = (uint64_t *)((char *)a2 + v36);
    uint64_t v39 = v38[1];
    *uint64_t v37 = *v38;
    v37[1] = v39;
    uint64_t v40 = a3[18];
    *((unsigned char *)a1 + a3[17]) = *((unsigned char *)a2 + a3[17]);
    uint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    swift_bridgeObjectRetain();
    if (v72(v42, 1, v71))
    {
      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v41, v42, v71);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v41, 0, 1, v71);
    }
    uint64_t v44 = a3[19];
    uint64_t v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    uint64_t v47 = *(uint64_t *)((char *)a2 + v44 + 40);
    if (v47 == 1)
    {
      long long v48 = *((_OWORD *)v46 + 1);
      *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
      *((_OWORD *)v45 + 1) = v48;
      *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
      v45[48] = v46[48];
    }
    else
    {
      int v49 = v46[24];
      if (v49 == 255)
      {
        *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
        *(_OWORD *)(v45 + 9) = *(_OWORD *)(v46 + 9);
      }
      else
      {
        uint64_t v50 = *(void *)v46;
        uint64_t v51 = *((void *)v46 + 1);
        uint64_t v52 = *((void *)v46 + 2);
        sub_24EB7CDBC(*(void *)v46, v51, v52, v46[24]);
        *(void *)uint64_t v45 = v50;
        *((void *)v45 + 1) = v51;
        *((void *)v45 + 2) = v52;
        v45[24] = v49;
        uint64_t v47 = *((void *)v46 + 5);
      }
      *((void *)v45 + 4) = *((void *)v46 + 4);
      *((void *)v45 + 5) = v47;
      v45[48] = v46[48];
      swift_bridgeObjectRetain();
    }
    uint64_t v53 = a3[20];
    uint64_t v54 = (char *)a1 + v53;
    uint64_t v55 = (char *)a2 + v53;
    if (v72((char *)a2 + v53, 1, v71))
    {
      uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v54, v55, v71);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v54, 0, 1, v71);
    }
    uint64_t v57 = a3[21];
    uint64_t v58 = (char *)a1 + v57;
    uint64_t v59 = (char *)a2 + v57;
    uint64_t v60 = *(uint64_t *)((char *)a2 + v57 + 40);
    if (v60 == 1)
    {
      long long v61 = *((_OWORD *)v59 + 1);
      *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
      *((_OWORD *)v58 + 1) = v61;
      *((_OWORD *)v58 + 2) = *((_OWORD *)v59 + 2);
      v58[48] = v59[48];
    }
    else
    {
      int v62 = v59[24];
      if (v62 == 255)
      {
        *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
        *(_OWORD *)(v58 + 9) = *(_OWORD *)(v59 + 9);
      }
      else
      {
        uint64_t v63 = *(void *)v59;
        uint64_t v64 = *((void *)v59 + 1);
        uint64_t v65 = *((void *)v59 + 2);
        sub_24EB7CDBC(*(void *)v59, v64, v65, v59[24]);
        *(void *)uint64_t v58 = v63;
        *((void *)v58 + 1) = v64;
        *((void *)v58 + 2) = v65;
        v58[24] = v62;
        uint64_t v60 = *((void *)v59 + 5);
      }
      *((void *)v58 + 4) = *((void *)v59 + 4);
      *((void *)v58 + 5) = v60;
      v58[48] = v59[48];
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t destroy for BrowseItem(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_24EC21D10();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v7 = a1 + a2[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v8 = (uint64_t *)&unk_2699466D0;
  }
  else {
    uint64_t v8 = (uint64_t *)&unk_2699466C8;
  }
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(v8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + a2[9];
  if (!v6(v10, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v10, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = a1 + a2[14];
  uint64_t v12 = type metadata accessor for EditorialLink();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = v11 + *(int *)(type metadata accessor for EditorialVideoLink() + 24);
    uint64_t v14 = sub_24EC21D30();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = a1 + a2[18];
  if (!v6(v15, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v4);
  }
  uint64_t v16 = a1 + a2[19];
  if (*(void *)(v16 + 40) != 1)
  {
    int v17 = *(unsigned __int8 *)(v16 + 24);
    if (v17 != 255) {
      sub_24EB7EA4C(*(void *)v16, *(void *)(v16 + 8), *(void *)(v16 + 16), v17);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = a1 + a2[20];
  if (!v6(v18, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v18, v4);
  }
  uint64_t v19 = a1 + a2[21];
  uint64_t result = *(void *)(v19 + 40);
  if (result != 1)
  {
    int v21 = *(unsigned __int8 *)(v19 + 24);
    if (v21 != 255) {
      sub_24EB7EA4C(*(void *)v19, *(void *)(v19 + 8), *(void *)(v19 + 16), v21);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for BrowseItem(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24EC21D10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v13 = (uint64_t *)&unk_2699466D0;
  }
  else {
    uint64_t v13 = (uint64_t *)&unk_2699466C8;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(v13);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v11, v12, v14);
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  a1[v15] = a2[v15];
  uint64_t v16 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  int v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  swift_bridgeObjectRetain();
  uint64_t v69 = v6;
  int v70 = v8;
  uint64_t v67 = v7;
  if (v8(v18, 1, v6))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v17, v18, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
  }
  uint64_t v20 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v20] = a2[v20];
  uint64_t v21 = a3[13];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = v24;
  uint64_t v25 = a3[14];
  __dst = &a1[v25];
  uint64_t v26 = &a2[v25];
  uint64_t v27 = type metadata accessor for EditorialLink();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29(v26, 1, v27))
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C8);
    memcpy(__dst, v26, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)v26;
    *((void *)__dst + 2) = *((void *)v26 + 2);
    uint64_t v31 = *(int *)(type metadata accessor for EditorialVideoLink() + 24);
    uint64_t v65 = &v26[v31];
    char v66 = &__dst[v31];
    uint64_t v32 = sub_24EC21D30();
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
    swift_bridgeObjectRetain();
    v33(v66, v65, v32);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
  }
  uint64_t v34 = a3[16];
  a1[a3[15]] = a2[a3[15]];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  uint64_t v37 = *((void *)v36 + 1);
  *(void *)uint64_t v35 = *(void *)v36;
  *((void *)v35 + 1) = v37;
  uint64_t v38 = a3[18];
  a1[a3[17]] = a2[a3[17]];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  swift_bridgeObjectRetain();
  if (v70(v40, 1, v69))
  {
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v39, v40, v69);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v39, 0, 1, v69);
  }
  uint64_t v42 = a3[19];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  uint64_t v45 = *(void *)&a2[v42 + 40];
  if (v45 == 1)
  {
    long long v46 = *((_OWORD *)v44 + 1);
    *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
    *((_OWORD *)v43 + 1) = v46;
    *((_OWORD *)v43 + 2) = *((_OWORD *)v44 + 2);
    v43[48] = v44[48];
  }
  else
  {
    int v47 = v44[24];
    if (v47 == 255)
    {
      *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
      *(_OWORD *)(v43 + 9) = *(_OWORD *)(v44 + 9);
    }
    else
    {
      uint64_t v48 = *(void *)v44;
      uint64_t v49 = *((void *)v44 + 1);
      uint64_t v50 = *((void *)v44 + 2);
      sub_24EB7CDBC(*(void *)v44, v49, v50, v44[24]);
      *(void *)uint64_t v43 = v48;
      *((void *)v43 + 1) = v49;
      *((void *)v43 + 2) = v50;
      v43[24] = v47;
      uint64_t v45 = *((void *)v44 + 5);
    }
    *((void *)v43 + 4) = *((void *)v44 + 4);
    *((void *)v43 + 5) = v45;
    v43[48] = v44[48];
    swift_bridgeObjectRetain();
  }
  uint64_t v51 = a3[20];
  uint64_t v52 = &a1[v51];
  uint64_t v53 = &a2[v51];
  if (v70(&a2[v51], 1, v69))
  {
    uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v52, v53, v69);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v52, 0, 1, v69);
  }
  uint64_t v55 = a3[21];
  uint64_t v56 = &a1[v55];
  uint64_t v57 = &a2[v55];
  uint64_t v58 = *(void *)&a2[v55 + 40];
  if (v58 == 1)
  {
    long long v59 = *((_OWORD *)v57 + 1);
    *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
    *((_OWORD *)v56 + 1) = v59;
    *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
    v56[48] = v57[48];
  }
  else
  {
    int v60 = v57[24];
    if (v60 == 255)
    {
      *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
      *(_OWORD *)(v56 + 9) = *(_OWORD *)(v57 + 9);
    }
    else
    {
      uint64_t v61 = *(void *)v57;
      uint64_t v62 = *((void *)v57 + 1);
      uint64_t v63 = *((void *)v57 + 2);
      sub_24EB7CDBC(*(void *)v57, v62, v63, v57[24]);
      *(void *)uint64_t v56 = v61;
      *((void *)v56 + 1) = v62;
      *((void *)v56 + 2) = v63;
      v56[24] = v60;
      uint64_t v58 = *((void *)v57 + 5);
    }
    *((void *)v56 + 4) = *((void *)v57 + 4);
    *((void *)v56 + 5) = v58;
    v56[48] = v57[48];
    swift_bridgeObjectRetain();
  }
  return a1;
}

char *assignWithCopy for BrowseItem(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24EC21D10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  uint64_t v121 = v8;
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      if (a1 == a2) {
        goto LABEL_12;
      }
      goto LABEL_8;
    }
  }
  else
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      if (a1 == a2) {
        goto LABEL_12;
      }
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
  memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
  if (a1 == a2) {
    goto LABEL_12;
  }
LABEL_8:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a2[v12];
  uint64_t v14 = &a1[v12];
  sub_24EB742F4((uint64_t)&a1[v12], &qword_2699465C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v15 = (uint64_t *)&unk_2699466D0;
  }
  else {
    uint64_t v15 = (uint64_t *)&unk_2699466C8;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(v15);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v13, v16);
  swift_storeEnumTagMultiPayload();
LABEL_12:
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[7]] = a2[a3[7]];
  a1[a3[8]] = a2[a3[8]];
  uint64_t v17 = a3[9];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  int v20 = v121(&a1[v17], 1, v6);
  int v21 = v121(v19, 1, v6);
  uint64_t v119 = v6;
  uint64_t v120 = v7;
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v18, v19, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v18, v6);
LABEL_17:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v18, v19, v6);
LABEL_18:
  a1[a3[10]] = a2[a3[10]];
  a1[a3[11]] = a2[a3[11]];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[13];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  *(void *)uint64_t v24 = *(void *)v25;
  *((void *)v24 + 1) = *((void *)v25 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[14];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v29 = type metadata accessor for EditorialLink();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  int v32 = v31(v27, 1, v29);
  int v33 = v31(v28, 1, v29);
  if (v32)
  {
    if (!v33)
    {
      *(void *)uint64_t v27 = *(void *)v28;
      *((void *)v27 + 1) = *((void *)v28 + 1);
      *((void *)v27 + 2) = *((void *)v28 + 2);
      uint64_t v34 = *(int *)(type metadata accessor for EditorialVideoLink() + 24);
      uint64_t v117 = &v28[v34];
      uint64_t v118 = &v27[v34];
      uint64_t v35 = sub_24EC21D30();
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
      swift_bridgeObjectRetain();
      v36(v118, v117, v35);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v33)
  {
    sub_24EB7FF4C((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for EditorialLink);
LABEL_23:
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C8);
    memcpy(v27, v28, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_24;
  }
  *(void *)uint64_t v27 = *(void *)v28;
  *((void *)v27 + 1) = *((void *)v28 + 1);
  *((void *)v27 + 2) = *((void *)v28 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v71 = *(int *)(type metadata accessor for EditorialVideoLink() + 24);
  uint64_t v72 = &v27[v71];
  uint64_t v73 = &v28[v71];
  uint64_t v74 = sub_24EC21D30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 24))(v72, v73, v74);
LABEL_24:
  uint64_t v38 = v120;
  a1[a3[15]] = a2[a3[15]];
  uint64_t v39 = a3[16];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  *(void *)uint64_t v40 = *(void *)v41;
  *((void *)v40 + 1) = *((void *)v41 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[17]] = a2[a3[17]];
  uint64_t v42 = a3[18];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  int v45 = v121(&a1[v42], 1, v119);
  int v46 = v121(v44, 1, v119);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v43, v44, v119);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v43, 0, 1, v119);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v43, v119);
LABEL_29:
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(char *, char *, uint64_t))(v120 + 24))(v43, v44, v119);
LABEL_30:
  uint64_t v48 = a3[19];
  uint64_t v49 = (uint64_t)&a1[v48];
  uint64_t v50 = &a2[v48];
  uint64_t v51 = *(void *)&a1[v48 + 40];
  uint64_t v52 = *(void *)&a2[v48 + 40];
  if (v51 == 1)
  {
    if (v52 == 1)
    {
      long long v53 = *(_OWORD *)v50;
      long long v54 = *((_OWORD *)v50 + 1);
      long long v55 = *((_OWORD *)v50 + 2);
      *(unsigned char *)(v49 + 48) = v50[48];
      *(_OWORD *)(v49 + 16) = v54;
      *(_OWORD *)(v49 + 32) = v55;
      *(_OWORD *)uint64_t v49 = v53;
    }
    else
    {
      int v59 = v50[24];
      if (v59 == 255)
      {
        long long v75 = *(_OWORD *)v50;
        *(_OWORD *)(v49 + 9) = *(_OWORD *)(v50 + 9);
        *(_OWORD *)uint64_t v49 = v75;
      }
      else
      {
        uint64_t v60 = *(void *)v50;
        uint64_t v61 = *((void *)v50 + 1);
        uint64_t v62 = *((void *)v50 + 2);
        sub_24EB7CDBC(*(void *)v50, v61, v62, v50[24]);
        *(void *)uint64_t v49 = v60;
        *(void *)(v49 + 8) = v61;
        *(void *)(v49 + 16) = v62;
        uint64_t v38 = v120;
        *(unsigned char *)(v49 + 24) = v59;
      }
      *(void *)(v49 + 32) = *((void *)v50 + 4);
      *(void *)(v49 + 40) = *((void *)v50 + 5);
      *(unsigned char *)(v49 + 48) = v50[48];
      swift_bridgeObjectRetain();
    }
  }
  else if (v52 == 1)
  {
    sub_24EB834F8(v49);
    long long v57 = *((_OWORD *)v50 + 1);
    long long v56 = *((_OWORD *)v50 + 2);
    long long v58 = *(_OWORD *)v50;
    *(unsigned char *)(v49 + 48) = v50[48];
    *(_OWORD *)(v49 + 16) = v57;
    *(_OWORD *)(v49 + 32) = v56;
    *(_OWORD *)uint64_t v49 = v58;
  }
  else
  {
    int v63 = v50[24];
    if (*(unsigned __int8 *)(v49 + 24) == 255)
    {
      if (v63 == 255)
      {
        long long v80 = *(_OWORD *)v50;
        *(_OWORD *)(v49 + 9) = *(_OWORD *)(v50 + 9);
        *(_OWORD *)uint64_t v49 = v80;
      }
      else
      {
        uint64_t v76 = *(void *)v50;
        uint64_t v77 = *((void *)v50 + 1);
        uint64_t v78 = *((void *)v50 + 2);
        sub_24EB7CDBC(*(void *)v50, v77, v78, v50[24]);
        *(void *)uint64_t v49 = v76;
        *(void *)(v49 + 8) = v77;
        *(void *)(v49 + 16) = v78;
        uint64_t v38 = v120;
        *(unsigned char *)(v49 + 24) = v63;
      }
    }
    else if (v63 == 255)
    {
      sub_24EB834A4(v49);
      long long v79 = *(_OWORD *)(v50 + 9);
      *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
      *(_OWORD *)(v49 + 9) = v79;
    }
    else
    {
      uint64_t v64 = *(void *)v50;
      uint64_t v65 = *((void *)v50 + 1);
      uint64_t v66 = *((void *)v50 + 2);
      sub_24EB7CDBC(*(void *)v50, v65, v66, v50[24]);
      uint64_t v67 = *(void *)v49;
      uint64_t v68 = *(void *)(v49 + 8);
      uint64_t v69 = *(void *)(v49 + 16);
      *(void *)uint64_t v49 = v64;
      *(void *)(v49 + 8) = v65;
      *(void *)(v49 + 16) = v66;
      uint64_t v38 = v120;
      unsigned __int8 v70 = *(unsigned char *)(v49 + 24);
      *(unsigned char *)(v49 + 24) = v63;
      sub_24EB7EA4C(v67, v68, v69, v70);
    }
    *(void *)(v49 + 32) = *((void *)v50 + 4);
    *(void *)(v49 + 40) = *((void *)v50 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v49 + 48) = v50[48];
  }
  uint64_t v81 = a3[20];
  uint64_t v82 = &a1[v81];
  uint64_t v83 = &a2[v81];
  int v84 = v121(&a1[v81], 1, v119);
  int v85 = v121(v83, 1, v119);
  if (v84)
  {
    if (!v85)
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v82, v83, v119);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v82, 0, 1, v119);
      goto LABEL_58;
    }
    goto LABEL_57;
  }
  if (v85)
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v82, v119);
LABEL_57:
    uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(v82, v83, *(void *)(*(void *)(v86 - 8) + 64));
    goto LABEL_58;
  }
  (*(void (**)(char *, char *, uint64_t))(v38 + 24))(v82, v83, v119);
LABEL_58:
  uint64_t v87 = a3[21];
  uint64_t v88 = (uint64_t)&a1[v87];
  uint64_t v89 = &a2[v87];
  uint64_t v90 = *(void *)&a1[v87 + 40];
  uint64_t v91 = *(void *)&a2[v87 + 40];
  if (v90 == 1)
  {
    if (v91 == 1)
    {
      long long v92 = *(_OWORD *)v89;
      long long v93 = *((_OWORD *)v89 + 1);
      long long v94 = *((_OWORD *)v89 + 2);
      *(unsigned char *)(v88 + 48) = v89[48];
      *(_OWORD *)(v88 + 16) = v93;
      *(_OWORD *)(v88 + 32) = v94;
      *(_OWORD *)uint64_t v88 = v92;
    }
    else
    {
      int v98 = v89[24];
      if (v98 == 255)
      {
        long long v110 = *(_OWORD *)v89;
        *(_OWORD *)(v88 + 9) = *(_OWORD *)(v89 + 9);
        *(_OWORD *)uint64_t v88 = v110;
      }
      else
      {
        uint64_t v99 = *(void *)v89;
        uint64_t v100 = *((void *)v89 + 1);
        uint64_t v101 = *((void *)v89 + 2);
        sub_24EB7CDBC(*(void *)v89, v100, v101, v89[24]);
        *(void *)uint64_t v88 = v99;
        *(void *)(v88 + 8) = v100;
        *(void *)(v88 + 16) = v101;
        *(unsigned char *)(v88 + 24) = v98;
      }
      *(void *)(v88 + 32) = *((void *)v89 + 4);
      *(void *)(v88 + 40) = *((void *)v89 + 5);
      *(unsigned char *)(v88 + 48) = v89[48];
      swift_bridgeObjectRetain();
    }
  }
  else if (v91 == 1)
  {
    sub_24EB834F8(v88);
    long long v96 = *((_OWORD *)v89 + 1);
    long long v95 = *((_OWORD *)v89 + 2);
    long long v97 = *(_OWORD *)v89;
    *(unsigned char *)(v88 + 48) = v89[48];
    *(_OWORD *)(v88 + 16) = v96;
    *(_OWORD *)(v88 + 32) = v95;
    *(_OWORD *)uint64_t v88 = v97;
  }
  else
  {
    int v102 = v89[24];
    if (*(unsigned __int8 *)(v88 + 24) == 255)
    {
      if (v102 == 255)
      {
        long long v115 = *(_OWORD *)v89;
        *(_OWORD *)(v88 + 9) = *(_OWORD *)(v89 + 9);
        *(_OWORD *)uint64_t v88 = v115;
      }
      else
      {
        uint64_t v111 = *(void *)v89;
        uint64_t v112 = *((void *)v89 + 1);
        uint64_t v113 = *((void *)v89 + 2);
        sub_24EB7CDBC(*(void *)v89, v112, v113, v89[24]);
        *(void *)uint64_t v88 = v111;
        *(void *)(v88 + 8) = v112;
        *(void *)(v88 + 16) = v113;
        *(unsigned char *)(v88 + 24) = v102;
      }
    }
    else if (v102 == 255)
    {
      sub_24EB834A4(v88);
      long long v114 = *(_OWORD *)(v89 + 9);
      *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
      *(_OWORD *)(v88 + 9) = v114;
    }
    else
    {
      uint64_t v103 = *(void *)v89;
      uint64_t v104 = *((void *)v89 + 1);
      uint64_t v105 = *((void *)v89 + 2);
      sub_24EB7CDBC(*(void *)v89, v104, v105, v89[24]);
      uint64_t v106 = *(void *)v88;
      uint64_t v107 = *(void *)(v88 + 8);
      uint64_t v108 = *(void *)(v88 + 16);
      *(void *)uint64_t v88 = v103;
      *(void *)(v88 + 8) = v104;
      *(void *)(v88 + 16) = v105;
      unsigned __int8 v109 = *(unsigned char *)(v88 + 24);
      *(unsigned char *)(v88 + 24) = v102;
      sub_24EB7EA4C(v106, v107, v108, v109);
    }
    *(void *)(v88 + 32) = *((void *)v89 + 4);
    *(void *)(v88 + 40) = *((void *)v89 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v88 + 48) = v89[48];
  }
  return a1;
}

uint64_t sub_24EB834A4(uint64_t a1)
{
  return a1;
}

uint64_t sub_24EB834F8(uint64_t a1)
{
  return a1;
}

char *initializeWithTake for BrowseItem(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24EC21D10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v52(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v12 = (uint64_t *)&unk_2699466D0;
  }
  else {
    uint64_t v12 = (uint64_t *)&unk_2699466C8;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(v12);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  a1[v14] = a2[v14];
  uint64_t v15 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = v52;
  uint64_t v51 = v7;
  if (v52(&a2[v15], 1, v6))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v16, v17, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
  }
  uint64_t v20 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v20] = a2[v20];
  uint64_t v21 = a3[13];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  *(_OWORD *)&a1[v21] = *(_OWORD *)&a2[v21];
  uint64_t v22 = a3[14];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = type metadata accessor for EditorialLink();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C8);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v23 = *(void *)v24;
    *(_OWORD *)(v23 + 8) = *(_OWORD *)(v24 + 8);
    uint64_t v28 = *(int *)(type metadata accessor for EditorialVideoLink() + 24);
    uint64_t v29 = &v23[v28];
    uint64_t v30 = &v24[v28];
    uint64_t v31 = sub_24EC21D30();
    int v32 = v29;
    uint64_t v18 = v52;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v32, v30, v31);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  uint64_t v33 = a3[16];
  a1[a3[15]] = a2[a3[15]];
  *(_OWORD *)&a1[v33] = *(_OWORD *)&a2[v33];
  uint64_t v34 = a3[18];
  a1[a3[17]] = a2[a3[17]];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  if (v18(&a2[v34], 1, v6))
  {
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v35, v36, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v35, 0, 1, v6);
  }
  uint64_t v38 = a3[19];
  uint64_t v39 = a3[20];
  uint64_t v40 = &a1[v38];
  uint64_t v41 = &a2[v38];
  long long v42 = *((_OWORD *)v41 + 1);
  *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
  *((_OWORD *)v40 + 1) = v42;
  *((_OWORD *)v40 + 2) = *((_OWORD *)v41 + 2);
  v40[48] = v41[48];
  uint64_t v43 = &a1[v39];
  uint64_t v44 = &a2[v39];
  if (v18(&a2[v39], 1, v6))
  {
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v43, v44, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v43, 0, 1, v6);
  }
  uint64_t v46 = a3[21];
  uint64_t v47 = &a1[v46];
  uint64_t v48 = &a2[v46];
  long long v49 = *((_OWORD *)v48 + 1);
  *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
  *((_OWORD *)v47 + 1) = v49;
  *((_OWORD *)v47 + 2) = *((_OWORD *)v48 + 2);
  v47[48] = v48[48];
  return a1;
}

char *assignWithTake for BrowseItem(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24EC21D10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      if (a1 == a2) {
        goto LABEL_12;
      }
      goto LABEL_8;
    }
  }
  else
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      if (a1 == a2) {
        goto LABEL_12;
      }
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
  memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
  if (a1 == a2) {
    goto LABEL_12;
  }
LABEL_8:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a2[v12];
  uint64_t v14 = &a1[v12];
  sub_24EB742F4((uint64_t)&a1[v12], &qword_2699465C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v15 = (uint64_t *)&unk_2699466D0;
  }
  else {
    uint64_t v15 = (uint64_t *)&unk_2699466C8;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(v15);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v13, v16);
  swift_storeEnumTagMultiPayload();
LABEL_12:
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v17] = a2[v17];
  uint64_t v18 = a3[9];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1, v6);
  int v22 = v8(v20, 1, v6);
  uint64_t v88 = v7;
  uint64_t v89 = v6;
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_17:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v19, v20, v6);
LABEL_18:
  uint64_t v24 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v24] = a2[v24];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[13];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v29 = *(void *)v27;
  uint64_t v28 = *((void *)v27 + 1);
  *(void *)uint64_t v26 = v29;
  *((void *)v26 + 1) = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[14];
  uint64_t v31 = &a1[v30];
  int v32 = &a2[v30];
  uint64_t v33 = type metadata accessor for EditorialLink();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v31, 1, v33);
  int v37 = v35(v32, 1, v33);
  if (v36)
  {
    if (!v37)
    {
      *(void *)uint64_t v31 = *(void *)v32;
      *(_OWORD *)(v31 + 8) = *(_OWORD *)(v32 + 8);
      uint64_t v38 = *(int *)(type metadata accessor for EditorialVideoLink() + 24);
      uint64_t v39 = &v31[v38];
      uint64_t v40 = &v32[v38];
      uint64_t v41 = sub_24EC21D30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v37)
  {
    sub_24EB7FF4C((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for EditorialLink);
LABEL_23:
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C8);
    memcpy(v31, v32, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_24;
  }
  *(void *)uint64_t v31 = *(void *)v32;
  uint64_t v64 = *((void *)v32 + 2);
  *((void *)v31 + 1) = *((void *)v32 + 1);
  *((void *)v31 + 2) = v64;
  swift_bridgeObjectRelease();
  uint64_t v65 = *(int *)(type metadata accessor for EditorialVideoLink() + 24);
  uint64_t v66 = &v31[v65];
  uint64_t v67 = &v32[v65];
  uint64_t v68 = sub_24EC21D30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 40))(v66, v67, v68);
LABEL_24:
  uint64_t v43 = a3[16];
  a1[a3[15]] = a2[a3[15]];
  uint64_t v44 = &a1[v43];
  uint64_t v45 = &a2[v43];
  uint64_t v47 = *(void *)v45;
  uint64_t v46 = *((void *)v45 + 1);
  *(void *)uint64_t v44 = v47;
  *((void *)v44 + 1) = v46;
  swift_bridgeObjectRelease();
  uint64_t v48 = a3[18];
  a1[a3[17]] = a2[a3[17]];
  long long v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  int v51 = v8(&a1[v48], 1, v89);
  int v52 = v8(v50, 1, v89);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v49, v50, v89);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v49, 0, 1, v89);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v52)
  {
    (*(void (**)(char *, uint64_t))(v88 + 8))(v49, v89);
LABEL_29:
    uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(char *, char *, uint64_t))(v88 + 40))(v49, v50, v89);
LABEL_30:
  uint64_t v54 = a3[19];
  uint64_t v55 = (uint64_t)&a1[v54];
  long long v56 = &a2[v54];
  if (*(void *)&a1[v54 + 40] == 1)
  {
LABEL_33:
    long long v57 = *((_OWORD *)v56 + 1);
    *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
    *(_OWORD *)(v55 + 16) = v57;
    *(_OWORD *)(v55 + 32) = *((_OWORD *)v56 + 2);
    goto LABEL_45;
  }
  if (*((void *)v56 + 5) == 1)
  {
    sub_24EB834F8(v55);
    goto LABEL_33;
  }
  int v58 = *(unsigned __int8 *)(v55 + 24);
  if (v58 == 255) {
    goto LABEL_43;
  }
  int v59 = v56[24];
  if (v59 == 255)
  {
    sub_24EB834A4(v55);
LABEL_43:
    *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
    *(_OWORD *)(v55 + 9) = *(_OWORD *)(v56 + 9);
    goto LABEL_44;
  }
  uint64_t v60 = *((void *)v56 + 2);
  uint64_t v61 = *(void *)v55;
  uint64_t v62 = *(void *)(v55 + 8);
  uint64_t v63 = *(void *)(v55 + 16);
  *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
  *(void *)(v55 + 16) = v60;
  *(unsigned char *)(v55 + 24) = v59;
  sub_24EB7EA4C(v61, v62, v63, v58);
LABEL_44:
  uint64_t v69 = *((void *)v56 + 5);
  *(void *)(v55 + 32) = *((void *)v56 + 4);
  *(void *)(v55 + 40) = v69;
  swift_bridgeObjectRelease();
LABEL_45:
  *(unsigned char *)(v55 + 48) = v56[48];
  uint64_t v70 = a3[20];
  uint64_t v71 = &a1[v70];
  uint64_t v72 = &a2[v70];
  int v73 = v8(&a1[v70], 1, v89);
  int v74 = v8(v72, 1, v89);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v71, v72, v89);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v71, 0, 1, v89);
      goto LABEL_51;
    }
    goto LABEL_50;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v88 + 8))(v71, v89);
LABEL_50:
    uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_51;
  }
  (*(void (**)(char *, char *, uint64_t))(v88 + 40))(v71, v72, v89);
LABEL_51:
  uint64_t v76 = a3[21];
  uint64_t v77 = (uint64_t)&a1[v76];
  uint64_t v78 = &a2[v76];
  if (*(void *)&a1[v76 + 40] != 1)
  {
    if (*((void *)v78 + 5) == 1)
    {
      sub_24EB834F8(v77);
      goto LABEL_54;
    }
    int v80 = *(unsigned __int8 *)(v77 + 24);
    if (v80 != 255)
    {
      int v81 = v78[24];
      if (v81 != 255)
      {
        uint64_t v82 = *((void *)v78 + 2);
        uint64_t v83 = *(void *)v77;
        uint64_t v84 = *(void *)(v77 + 8);
        uint64_t v85 = *(void *)(v77 + 16);
        *(_OWORD *)uint64_t v77 = *(_OWORD *)v78;
        *(void *)(v77 + 16) = v82;
        *(unsigned char *)(v77 + 24) = v81;
        sub_24EB7EA4C(v83, v84, v85, v80);
LABEL_61:
        uint64_t v86 = *((void *)v78 + 5);
        *(void *)(v77 + 32) = *((void *)v78 + 4);
        *(void *)(v77 + 40) = v86;
        swift_bridgeObjectRelease();
        goto LABEL_62;
      }
      sub_24EB834A4(v77);
    }
    *(_OWORD *)uint64_t v77 = *(_OWORD *)v78;
    *(_OWORD *)(v77 + 9) = *(_OWORD *)(v78 + 9);
    goto LABEL_61;
  }
LABEL_54:
  long long v79 = *((_OWORD *)v78 + 1);
  *(_OWORD *)uint64_t v77 = *(_OWORD *)v78;
  *(_OWORD *)(v77 + 16) = v79;
  *(_OWORD *)(v77 + 32) = *((_OWORD *)v78 + 2);
LABEL_62:
  *(unsigned char *)(v77 + 48) = v78[48];
  return a1;
}

uint64_t getEnumTagSinglePayload for BrowseItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EB843D0);
}

uint64_t sub_24EB843D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[6]);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C8);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[14];
    return v16(v18, a2, v17);
  }
}

uint64_t storeEnumTagSinglePayload for BrowseItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EB84570);
}

uint64_t sub_24EB84570(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6]) = (a2 - 1);
  }
  else
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C8);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[14];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

void sub_24EB846FC()
{
  sub_24EB84934(319, (unint64_t *)&qword_26B1D8608, MEMORY[0x263F06828]);
  if (v0 <= 0x3F)
  {
    sub_24EB848A0();
    if (v1 <= 0x3F)
    {
      sub_24EB84934(319, &qword_26B1D8730, (void (*)(uint64_t))type metadata accessor for EditorialLink);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_24EB848A0()
{
  if (!qword_26B1D8628)
  {
    type metadata accessor for BrowseArtwork();
    sub_24EB852FC(&qword_26B1D86D0, (void (*)(uint64_t))type metadata accessor for BrowseArtwork);
    unint64_t v0 = sub_24EC21E30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B1D8628);
    }
  }
}

void sub_24EB84934(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24EC22C90();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for BrowseItem.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BrowseItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *uint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB84AE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseItem.CodingKeys()
{
  return &type metadata for BrowseItem.CodingKeys;
}

unint64_t sub_24EB84B20()
{
  unint64_t result = qword_2699466D8;
  if (!qword_2699466D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699466D8);
  }
  return result;
}

unint64_t sub_24EB84B78()
{
  unint64_t result = qword_2699466E0;
  if (!qword_2699466E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699466E0);
  }
  return result;
}

unint64_t sub_24EB84BD0()
{
  unint64_t result = qword_2699466E8;
  if (!qword_2699466E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699466E8);
  }
  return result;
}

uint64_t sub_24EB84C24(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x69546E6F69746361 && a2 == 0xEB00000000656C74;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024EC30D20 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024EC30D40 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x616F4C7465737361 && a2 == 0xEF73757461745364 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6B72616D6B6F6F62 && a2 == 0xEA00000000006465 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F6974706163 && a2 == 0xE700000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x5379616C70736964 && a2 == 0xEC000000656C7974 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000024EC30D60 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024EC30D80 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 1802398060 && a2 == 0xE400000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x707954616964656DLL && a2 == 0xE900000000000065 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024EC30DA0 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x636E657265666572 && a2 == 0xED00006570795465 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024EC30DC0 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024EC30DE0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 17;
    }
    else {
      return 18;
    }
  }
}

uint64_t sub_24EB852FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t BrowseState.activeStorefrontLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24EC21DC0();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t BrowseState.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for BrowseState();
  return sub_24EB8667C(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))type metadata accessor for BrowseIdentifier);
}

uint64_t type metadata accessor for BrowseState()
{
  uint64_t result = qword_26B1D7D90;
  if (!qword_26B1D7D90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t BrowseState.identifier.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for BrowseState();
  return sub_24EB85744(a1, v1 + *(int *)(v3 + 20), (uint64_t (*)(void))type metadata accessor for BrowseIdentifier);
}

uint64_t (*BrowseState.identifier.modify())(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void)
{
  return nullsub_1;
}

uint64_t BrowseState.isInternalBuild.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for BrowseState() + 24));
}

uint64_t BrowseState.isInternalBuild.setter(char a1)
{
  uint64_t result = type metadata accessor for BrowseState();
  *(unsigned char *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*BrowseState.isInternalBuild.modify())(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void)
{
  return nullsub_1;
}

uint64_t BrowseState.isShowingCreatePlanAlert.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for BrowseState() + 28));
}

uint64_t BrowseState.isShowingCreatePlanAlert.setter(char a1)
{
  uint64_t result = type metadata accessor for BrowseState();
  *(unsigned char *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*BrowseState.isShowingCreatePlanAlert.modify())(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void)
{
  return nullsub_1;
}

uint64_t BrowseState.isSubscribed.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for BrowseState() + 32));
}

uint64_t BrowseState.isSubscribed.setter(char a1)
{
  uint64_t result = type metadata accessor for BrowseState();
  *(unsigned char *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*BrowseState.isSubscribed.modify())(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void)
{
  return nullsub_1;
}

uint64_t BrowseState.loadState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for BrowseState();
  return sub_24EB8667C(v1 + *(int *)(v3 + 36), a1, (uint64_t (*)(void))type metadata accessor for BrowseLoadState);
}

uint64_t BrowseState.loadState.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for BrowseState();
  return sub_24EB85744(a1, v1 + *(int *)(v3 + 36), (uint64_t (*)(void))type metadata accessor for BrowseLoadState);
}

uint64_t sub_24EB85744(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t (*BrowseState.loadState.modify())(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void)
{
  return nullsub_1;
}

uint64_t BrowseState.platform.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for BrowseState() + 40));
}

uint64_t BrowseState.platform.setter(char a1)
{
  uint64_t result = type metadata accessor for BrowseState();
  *(unsigned char *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*BrowseState.platform.modify())(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void)
{
  return nullsub_1;
}

uint64_t BrowseState.init(activeStorefrontLocale:identifier:isInternalBuild:isShowingCreatePlanAlert:isSubscribed:loadState:platform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v16 = sub_24EC21DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(a8, a1, v16);
  uint64_t v17 = (int *)type metadata accessor for BrowseState();
  sub_24EB85994(a2, a8 + v17[5], (uint64_t (*)(void))type metadata accessor for BrowseIdentifier);
  *(unsigned char *)(a8 + v17[6]) = a3;
  *(unsigned char *)(a8 + v17[7]) = a4;
  *(unsigned char *)(a8 + v17[8]) = a5;
  uint64_t result = sub_24EB85994(a6, a8 + v17[9], (uint64_t (*)(void))type metadata accessor for BrowseLoadState);
  *(unsigned char *)(a8 + v17[10]) = a7;
  return result;
}

uint64_t sub_24EB85994(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_24EB859FC(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696669746E656469;
      break;
    case 2:
      unint64_t result = 0x6E7265746E497369;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    case 4:
      unint64_t result = 0x7263736275537369;
      break;
    case 5:
      unint64_t result = 0x7461745364616F6CLL;
      break;
    case 6:
      unint64_t result = 0x6D726F6674616C70;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24EB85B04()
{
  return sub_24EB859FC(*v0);
}

uint64_t sub_24EB85B0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB8936C(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EB85B34(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_24EB85B40(uint64_t a1)
{
  unint64_t v2 = sub_24EB85EFC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB85B7C(uint64_t a1)
{
  unint64_t v2 = sub_24EB85EFC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseState.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946718);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB85EFC();
  sub_24EC23050();
  v11[15] = 0;
  sub_24EC21DC0();
  sub_24EB865E0(&qword_2699464C0, MEMORY[0x263F07690]);
  sub_24EC22F40();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for BrowseState();
    v11[14] = 1;
    type metadata accessor for BrowseIdentifier();
    sub_24EB865E0(&qword_269946728, (void (*)(uint64_t))type metadata accessor for BrowseIdentifier);
    sub_24EC22F40();
    v11[13] = 2;
    sub_24EC22F10();
    v11[12] = 3;
    sub_24EC22F10();
    v11[11] = 4;
    sub_24EC22F10();
    v11[10] = 5;
    type metadata accessor for BrowseLoadState();
    sub_24EB865E0(&qword_269946730, (void (*)(uint64_t))type metadata accessor for BrowseLoadState);
    sub_24EC22F40();
    v11[9] = *(unsigned char *)(v3 + *(int *)(v9 + 40));
    v11[8] = 6;
    sub_24EB85F50();
    sub_24EC22F40();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_24EB85EFC()
{
  unint64_t result = qword_269946720;
  if (!qword_269946720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946720);
  }
  return result;
}

unint64_t sub_24EB85F50()
{
  unint64_t result = qword_269946738;
  if (!qword_269946738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946738);
  }
  return result;
}

uint64_t BrowseState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t State = type metadata accessor for BrowseLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v20 = (uint64_t)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for BrowseIdentifier();
  MEMORY[0x270FA5388](v21);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24EC21DC0();
  uint64_t v23 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v24 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946740);
  uint64_t v22 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for BrowseState();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB85EFC();
  uint64_t v25 = v9;
  uint64_t v13 = v27;
  sub_24EC23040();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v14 = v23;
  char v35 = 0;
  sub_24EB865E0(qword_2699464E8, MEMORY[0x263F07690]);
  sub_24EC22E90();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v24, v6);
  char v34 = 1;
  sub_24EB865E0(&qword_269946748, (void (*)(uint64_t))type metadata accessor for BrowseIdentifier);
  sub_24EC22E90();
  sub_24EB85994((uint64_t)v5, (uint64_t)&v12[v10[5]], (uint64_t (*)(void))type metadata accessor for BrowseIdentifier);
  char v33 = 2;
  char v15 = sub_24EC22E60();
  uint64_t v16 = v22;
  v12[v10[6]] = v15 & 1;
  char v32 = 3;
  v12[v10[7]] = sub_24EC22E60() & 1;
  char v31 = 4;
  v12[v10[8]] = sub_24EC22E60() & 1;
  char v30 = 5;
  sub_24EB865E0(&qword_269946750, (void (*)(uint64_t))type metadata accessor for BrowseLoadState);
  sub_24EC22E90();
  sub_24EB85994(v20, (uint64_t)&v12[v10[9]], (uint64_t (*)(void))type metadata accessor for BrowseLoadState);
  char v28 = 6;
  sub_24EB86628();
  sub_24EC22E90();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v25, v26);
  v12[v10[10]] = v29;
  sub_24EB8667C((uint64_t)v12, v18, (uint64_t (*)(void))type metadata accessor for BrowseState);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_24EB866E4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for BrowseState);
}

uint64_t sub_24EB865E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EB86628()
{
  unint64_t result = qword_269946758;
  if (!qword_269946758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946758);
  }
  return result;
}

uint64_t sub_24EB8667C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EB866E4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24EB86744@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BrowseState.init(from:)(a1, a2);
}

uint64_t sub_24EB8675C(void *a1)
{
  return BrowseState.encode(to:)(a1);
}

BOOL _s15FitnessBrowsing11BrowseStateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((MEMORY[0x253349930]() & 1) != 0
    && (uint64_t v4 = (int *)type metadata accessor for BrowseState(),
        (_s15FitnessBrowsing16BrowseIdentifierO2eeoiySbAC_ACtFZ_0(a1 + v4[5], a2 + v4[5]) & 1) != 0)
    && *(unsigned __int8 *)(a1 + v4[6]) == *(unsigned __int8 *)(a2 + v4[6])
    && *(unsigned __int8 *)(a1 + v4[7]) == *(unsigned __int8 *)(a2 + v4[7])
    && *(unsigned __int8 *)(a1 + v4[8]) == *(unsigned __int8 *)(a2 + v4[8])
    && (_s15FitnessBrowsing15BrowseLoadStateO2eeoiySbAC_ACtFZ_0(a1 + v4[9], a2 + v4[9]) & 1) != 0)
  {
    return *(unsigned __int8 *)(a1 + v4[10]) == *(unsigned __int8 *)(a2 + v4[10]);
  }
  else
  {
    return 0;
  }
}

void *initializeBufferWithCopyOfBuffer for BrowseState(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = sub_24EC21DC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    type metadata accessor for BrowseIdentifier();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = *((void *)v10 + 1);
      *(void *)uint64_t v9 = *(void *)v10;
      *((void *)v9 + 1) = v11;
      v9[16] = v10[16];
      swift_bridgeObjectRetain();
      uint64_t v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269946760) + 64);
      uint64_t v13 = &v9[v12];
      uint64_t v14 = &v10[v12];
      uint64_t v15 = sub_24EC21D10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      uint64_t v17 = *((void *)v10 + 1);
      *(void *)uint64_t v9 = *(void *)v10;
      *((void *)v9 + 1) = v17;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)a1 + v18) = *((unsigned char *)a2 + v18);
    uint64_t v19 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v20 = (void *)((char *)a1 + v19);
    uint64_t v21 = (void *)((char *)a2 + v19);
    uint64_t State = type metadata accessor for BrowseLoadState();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for BrowseContent();
      int v25 = swift_getEnumCaseMultiPayload();
      if (v25 == 2)
      {
        *uint64_t v20 = *v21;
        swift_bridgeObjectRetain();
      }
      else if (v25 == 1)
      {
        *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
        uint64_t v26 = v21[2];
        v20[1] = v21[1];
        v20[2] = v26;
        v20[3] = v21[3];
        *((unsigned char *)v20 + 32) = *((unsigned char *)v21 + 32);
        uint64_t v27 = *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
        long long v57 = (char *)v21 + v27;
        int v58 = (char *)v20 + v27;
        uint64_t v28 = sub_24EC21D10();
        uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v55(v58, v57, v28);
      }
      else
      {
        uint64_t v29 = type metadata accessor for BrowseArtwork();
        uint64_t v30 = *(void *)(v29 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v30 + 48))(v21, 1, v29))
        {
          uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946778);
          memcpy(v20, v21, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          uint64_t v32 = sub_24EC21E00();
          uint64_t v33 = *(void *)(v32 - 8);
          uint64_t v56 = v30;
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v33 + 48))(v21, 1, v32))
          {
            uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
            memcpy(v20, v21, *(void *)(*(void *)(v34 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(v33 + 16))(v20, v21, v32);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v20, 0, 1, v32);
          }
          uint64_t v35 = *(int *)(v29 + 20);
          int v59 = (char *)v20 + v35;
          int v36 = (char *)v21 + v35;
          uint64_t v37 = sub_24EC21D30();
          uint64_t v38 = *(void *)(v37 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
          {
            uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
            memcpy(v59, v36, *(void *)(*(void *)(v39 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v59, v36, v37);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v59, 0, 1, v37);
          }
          (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v20, 0, 1, v29);
        }
        uint64_t v40 = type metadata accessor for EditorialCollectionDetail();
        uint64_t v41 = *(int *)(v40 + 20);
        uint64_t v42 = (void *)((char *)v20 + v41);
        uint64_t v43 = (char *)v21 + v41;
        uint64_t v44 = *(void *)((char *)v21 + v41 + 8);
        *uint64_t v42 = *(void *)((char *)v21 + v41);
        v42[1] = v44;
        uint64_t v45 = *(void *)((char *)v21 + v41 + 24);
        uint64_t v60 = v40;
        v42[2] = *(void *)((char *)v21 + v41 + 16);
        v42[3] = v45;
        uint64_t v46 = *(void *)((char *)v21 + v41 + 40);
        v42[4] = *(void *)((char *)v21 + v41 + 32);
        v42[5] = v46;
        uint64_t v47 = *(void *)((char *)v21 + v41 + 56);
        v42[6] = *(void *)((char *)v21 + v41 + 48);
        v42[7] = v47;
        uint64_t v48 = *(int *)(type metadata accessor for EditorialCollection() + 32);
        uint64_t v53 = &v43[v48];
        uint64_t v54 = (char *)v42 + v48;
        uint64_t v49 = sub_24EC21D30();
        int v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v52(v54, v53, v49);
        *(void *)((char *)v20 + *(int *)(v60 + 24)) = *(void *)((char *)v21 + *(int *)(v60 + 24));
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946780);
      *((unsigned char *)v20 + *(int *)(v50 + 48)) = *((unsigned char *)v21 + *(int *)(v50 + 48));
      *(void *)((char *)v20 + *(int *)(v50 + 64)) = *(void *)((char *)v21 + *(int *)(v50 + 64));
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v20, v21, *(void *)(*(void *)(State - 8) + 64));
LABEL_26:
        *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
        return a1;
      }
      uint64_t v24 = v21[1];
      *uint64_t v20 = *v21;
      v20[1] = v24;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_26;
  }
  uint64_t v16 = *a2;
  *a1 = *a2;
  a1 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for BrowseState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EC21DC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  type metadata accessor for BrowseIdentifier();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
LABEL_4:
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_6;
    }
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269946760) + 64);
  uint64_t v8 = sub_24EC21D10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
LABEL_6:
  uint64_t v9 = a1 + *(int *)(a2 + 36);
  type metadata accessor for BrowseLoadState();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 1)
  {
    if (result) {
      return result;
    }
    goto LABEL_22;
  }
  type metadata accessor for BrowseContent();
  int v11 = swift_getEnumCaseMultiPayload();
  switch(v11)
  {
    case 2:
      goto LABEL_19;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = v9 + *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
      uint64_t v22 = sub_24EC21D10();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
      break;
    case 0:
      uint64_t v12 = type metadata accessor for BrowseArtwork();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v9, 1, v12))
      {
        uint64_t v13 = sub_24EC21E00();
        uint64_t v14 = *(void *)(v13 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13)) {
          (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v9, v13);
        }
        uint64_t v15 = v9 + *(int *)(v12 + 20);
        uint64_t v16 = sub_24EC21D30();
        uint64_t v17 = *(void *)(v16 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
          (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
        }
      }
      uint64_t v18 = v9 + *(int *)(type metadata accessor for EditorialCollectionDetail() + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = v18 + *(int *)(type metadata accessor for EditorialCollection() + 32);
      uint64_t v20 = sub_24EC21D30();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
LABEL_19:
      swift_bridgeObjectRelease();
      break;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269946780);
LABEL_22:
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BrowseState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24EC21DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  type metadata accessor for BrowseIdentifier();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = *(void *)(v9 + 8);
    *(void *)uint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = v10;
    *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
    swift_bridgeObjectRetain();
    uint64_t v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269946760) + 64);
    uint64_t v12 = v8 + v11;
    uint64_t v13 = v9 + v11;
    uint64_t v14 = sub_24EC21D10();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    uint64_t v15 = *(void *)(v9 + 8);
    *(void *)uint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = v15;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  uint64_t v17 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t State = type metadata accessor for BrowseLoadState();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for BrowseContent();
    int v23 = swift_getEnumCaseMultiPayload();
    if (v23 == 2)
    {
      *uint64_t v18 = *v19;
      swift_bridgeObjectRetain();
    }
    else if (v23 == 1)
    {
      *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
      uint64_t v24 = v19[2];
      v18[1] = v19[1];
      v18[2] = v24;
      v18[3] = v19[3];
      *((unsigned char *)v18 + 32) = *((unsigned char *)v19 + 32);
      uint64_t v25 = *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
      uint64_t v55 = (char *)v19 + v25;
      uint64_t v56 = (char *)v18 + v25;
      uint64_t v26 = sub_24EC21D10();
      uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v53(v56, v55, v26);
    }
    else
    {
      uint64_t v27 = type metadata accessor for BrowseArtwork();
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v28 + 48))(v19, 1, v27))
      {
        uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946778);
        memcpy(v18, v19, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        uint64_t v30 = sub_24EC21E00();
        uint64_t v31 = *(void *)(v30 - 8);
        uint64_t v54 = v28;
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v31 + 48))(v19, 1, v30))
        {
          uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
          memcpy(v18, v19, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v31 + 16))(v18, v19, v30);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v18, 0, 1, v30);
        }
        uint64_t v33 = *(int *)(v27 + 20);
        long long v57 = (char *)v18 + v33;
        uint64_t v34 = (char *)v19 + v33;
        uint64_t v35 = sub_24EC21D30();
        uint64_t v36 = *(void *)(v35 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
        {
          uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
          memcpy(v57, v34, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v57, v34, v35);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v57, 0, 1, v35);
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v18, 0, 1, v27);
      }
      uint64_t v38 = type metadata accessor for EditorialCollectionDetail();
      uint64_t v39 = *(int *)(v38 + 20);
      uint64_t v40 = (void *)((char *)v18 + v39);
      uint64_t v41 = (char *)v19 + v39;
      uint64_t v42 = *(void *)((char *)v19 + v39 + 8);
      *uint64_t v40 = *(void *)((char *)v19 + v39);
      v40[1] = v42;
      uint64_t v43 = *(void *)((char *)v19 + v39 + 24);
      uint64_t v58 = v38;
      v40[2] = *(void *)((char *)v19 + v39 + 16);
      v40[3] = v43;
      uint64_t v44 = *(void *)((char *)v19 + v39 + 40);
      v40[4] = *(void *)((char *)v19 + v39 + 32);
      v40[5] = v44;
      uint64_t v45 = *(void *)((char *)v19 + v39 + 56);
      v40[6] = *(void *)((char *)v19 + v39 + 48);
      v40[7] = v45;
      uint64_t v46 = *(int *)(type metadata accessor for EditorialCollection() + 32);
      int v51 = &v41[v46];
      int v52 = (char *)v40 + v46;
      uint64_t v47 = sub_24EC21D30();
      uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v50(v52, v51, v47);
      *(void *)((char *)v18 + *(int *)(v58 + 24)) = *(void *)((char *)v19 + *(int *)(v58 + 24));
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946780);
    *((unsigned char *)v18 + *(int *)(v48 + 48)) = *((unsigned char *)v19 + *(int *)(v48 + 48));
    *(void *)((char *)v18 + *(int *)(v48 + 64)) = *(void *)((char *)v19 + *(int *)(v48 + 64));
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v22 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v22;
    swift_bridgeObjectRetain();
LABEL_23:
    swift_storeEnumTagMultiPayload();
    goto LABEL_24;
  }
  memcpy(v18, v19, *(void *)(*(void *)(State - 8) + 64));
LABEL_24:
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t assignWithCopy for BrowseState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24EC21DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = a2 + v7;
    sub_24EB866E4(a1 + v7, (uint64_t (*)(void))type metadata accessor for BrowseIdentifier);
    type metadata accessor for BrowseIdentifier();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *(void *)(v8 + 8) = *(void *)(v9 + 8);
      *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
      swift_bridgeObjectRetain();
      uint64_t v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269946760) + 64);
      uint64_t v11 = v8 + v10;
      uint64_t v12 = v9 + v10;
      uint64_t v13 = sub_24EC21D10();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *(void *)(v8 + 8) = *(void *)(v9 + 8);
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  if (a1 != a2)
  {
    uint64_t v14 = a3[9];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_24EB866E4(a1 + v14, (uint64_t (*)(void))type metadata accessor for BrowseLoadState);
    uint64_t State = type metadata accessor for BrowseLoadState();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for BrowseContent();
      int v19 = swift_getEnumCaseMultiPayload();
      if (v19 == 2)
      {
        *uint64_t v15 = *v16;
        swift_bridgeObjectRetain();
      }
      else if (v19 == 1)
      {
        *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
        v15[1] = v16[1];
        v15[2] = v16[2];
        v15[3] = v16[3];
        *((unsigned char *)v15 + 32) = *((unsigned char *)v16 + 32);
        uint64_t v20 = *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
        uint64_t v44 = (char *)v16 + v20;
        uint64_t v46 = (char *)v15 + v20;
        uint64_t v21 = sub_24EC21D10();
        uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v43(v46, v44, v21);
      }
      else
      {
        uint64_t v22 = type metadata accessor for BrowseArtwork();
        uint64_t v47 = *(void *)(v22 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v47 + 48))(v16, 1, v22))
        {
          uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946778);
          memcpy(v15, v16, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          uint64_t v24 = sub_24EC21E00();
          uint64_t v25 = *(void *)(v24 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v25 + 48))(v16, 1, v24))
          {
            uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
            memcpy(v15, v16, *(void *)(*(void *)(v26 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(v25 + 16))(v15, v16, v24);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v15, 0, 1, v24);
          }
          uint64_t v27 = *(int *)(v22 + 20);
          uint64_t v45 = (char *)v15 + v27;
          uint64_t v28 = (char *)v16 + v27;
          uint64_t v29 = sub_24EC21D30();
          uint64_t v30 = *(void *)(v29 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
          {
            uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
            memcpy(v45, v28, *(void *)(*(void *)(v31 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v45, v28, v29);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v45, 0, 1, v29);
          }
          (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v15, 0, 1, v22);
        }
        uint64_t v32 = type metadata accessor for EditorialCollectionDetail();
        uint64_t v33 = *(int *)(v32 + 20);
        uint64_t v34 = (void *)((char *)v15 + v33);
        uint64_t v35 = (char *)v16 + v33;
        *uint64_t v34 = *(void *)((char *)v16 + v33);
        v34[1] = *(void *)((char *)v16 + v33 + 8);
        v34[2] = *(void *)((char *)v16 + v33 + 16);
        uint64_t v48 = v32;
        _OWORD v34[3] = *(void *)((char *)v16 + v33 + 24);
        v34[4] = *(void *)((char *)v16 + v33 + 32);
        v34[5] = *(void *)((char *)v16 + v33 + 40);
        v34[6] = *(void *)((char *)v16 + v33 + 48);
        v34[7] = *(void *)((char *)v16 + v33 + 56);
        uint64_t v36 = *(int *)(type metadata accessor for EditorialCollection() + 32);
        uint64_t v41 = &v35[v36];
        uint64_t v42 = (char *)v34 + v36;
        uint64_t v37 = sub_24EC21D30();
        uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v40(v42, v41, v37);
        *(void *)((char *)v15 + *(int *)(v48 + 24)) = *(void *)((char *)v16 + *(int *)(v48 + 24));
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946780);
      *((unsigned char *)v15 + *(int *)(v38 + 48)) = *((unsigned char *)v16 + *(int *)(v38 + 48));
      *(void *)((char *)v15 + *(int *)(v38 + 64)) = *(void *)((char *)v16 + *(int *)(v38 + 64));
      swift_bridgeObjectRetain();
      goto LABEL_26;
    }
    if (!EnumCaseMultiPayload)
    {
      *uint64_t v15 = *v16;
      v15[1] = v16[1];
      swift_bridgeObjectRetain();
LABEL_26:
      swift_storeEnumTagMultiPayload();
      goto LABEL_27;
    }
    memcpy(v15, v16, *(void *)(*(void *)(State - 8) + 64));
  }
LABEL_27:
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t initializeWithTake for BrowseState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24EC21DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for BrowseIdentifier();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    unsigned char v8[16] = v9[16];
    uint64_t v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269946760) + 64);
    uint64_t v12 = &v8[v11];
    uint64_t v13 = &v9[v11];
    uint64_t v14 = sub_24EC21D10();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v15 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  uint64_t v16 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t State = type metadata accessor for BrowseLoadState();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = type metadata accessor for BrowseContent();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *uint64_t v17 = *v18;
      *(_OWORD *)(v17 + 8) = *(_OWORD *)(v18 + 8);
      *((void *)v17 + 3) = *((void *)v18 + 3);
      v17[32] = v18[32];
      uint64_t v25 = *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
      uint64_t v26 = &v17[v25];
      uint64_t v27 = &v18[v25];
      uint64_t v28 = sub_24EC21D10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
LABEL_21:
        uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946780);
        v17[*(int *)(v46 + 48)] = v18[*(int *)(v46 + 48)];
        *(void *)&v17[*(int *)(v46 + 64)] = *(void *)&v18[*(int *)(v46 + 64)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_22;
      }
      uint64_t v22 = type metadata accessor for BrowseArtwork();
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946778);
        memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        uint64_t v49 = v23;
        uint64_t v29 = sub_24EC21E00();
        uint64_t v30 = *(void *)(v29 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v18, 1, v29))
        {
          uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
          memcpy(v17, v18, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v17, v18, v29);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v17, 0, 1, v29);
        }
        uint64_t v32 = *(int *)(v22 + 20);
        __dst = &v17[v32];
        uint64_t v33 = &v18[v32];
        uint64_t v34 = sub_24EC21D30();
        uint64_t v48 = *(void *)(v34 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v33, 1, v34))
        {
          uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
          memcpy(__dst, v33, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v48 + 32))(__dst, v33, v34);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(__dst, 0, 1, v34);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v17, 0, 1, v22);
      }
      uint64_t v36 = type metadata accessor for EditorialCollectionDetail();
      uint64_t v37 = *(int *)(v36 + 20);
      uint64_t v38 = &v17[v37];
      uint64_t v39 = &v18[v37];
      long long v40 = *(_OWORD *)&v18[v37 + 16];
      *(_OWORD *)uint64_t v38 = *(_OWORD *)&v18[v37];
      *((_OWORD *)v38 + 1) = v40;
      long long v41 = *(_OWORD *)&v18[v37 + 48];
      *((_OWORD *)v38 + 2) = *(_OWORD *)&v18[v37 + 32];
      *((_OWORD *)v38 + 3) = v41;
      uint64_t v42 = *(int *)(type metadata accessor for EditorialCollection() + 32);
      uint64_t v43 = &v38[v42];
      uint64_t v44 = &v39[v42];
      uint64_t v45 = sub_24EC21D30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
      *(void *)&v17[*(int *)(v36 + 24)] = *(void *)&v18[*(int *)(v36 + 24)];
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_21;
  }
  memcpy(v17, v18, *(void *)(*(void *)(State - 8) + 64));
LABEL_22:
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t assignWithTake for BrowseState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24EC21DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)(a1 + v7);
    uint64_t v9 = (char *)(a2 + v7);
    sub_24EB866E4(a1 + v7, (uint64_t (*)(void))type metadata accessor for BrowseIdentifier);
    uint64_t v10 = type metadata accessor for BrowseIdentifier();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      unsigned char v8[16] = v9[16];
      uint64_t v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269946760) + 64);
      uint64_t v12 = &v8[v11];
      uint64_t v13 = &v9[v11];
      uint64_t v14 = sub_24EC21D10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v15 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  if (a1 != a2)
  {
    uint64_t v16 = a3[9];
    uint64_t v17 = (char *)(a1 + v16);
    uint64_t v18 = (char *)(a2 + v16);
    sub_24EB866E4(a1 + v16, (uint64_t (*)(void))type metadata accessor for BrowseLoadState);
    uint64_t State = type metadata accessor for BrowseLoadState();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = type metadata accessor for BrowseContent();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        *uint64_t v17 = *v18;
        *(_OWORD *)(v17 + 8) = *(_OWORD *)(v18 + 8);
        *((void *)v17 + 3) = *((void *)v18 + 3);
        v17[32] = v18[32];
        uint64_t v25 = *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
        uint64_t v26 = &v17[v25];
        uint64_t v27 = &v18[v25];
        uint64_t v28 = sub_24EC21D10();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
LABEL_23:
          uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946780);
          v17[*(int *)(v46 + 48)] = v18[*(int *)(v46 + 48)];
          *(void *)&v17[*(int *)(v46 + 64)] = *(void *)&v18[*(int *)(v46 + 64)];
          swift_storeEnumTagMultiPayload();
          goto LABEL_24;
        }
        uint64_t v22 = type metadata accessor for BrowseArtwork();
        uint64_t v23 = *(void *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22))
        {
          uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946778);
          memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          uint64_t v49 = v23;
          uint64_t v29 = sub_24EC21E00();
          uint64_t v30 = *(void *)(v29 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v18, 1, v29))
          {
            uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
            memcpy(v17, v18, *(void *)(*(void *)(v31 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v17, v18, v29);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v17, 0, 1, v29);
          }
          uint64_t v32 = *(int *)(v22 + 20);
          __dst = &v17[v32];
          uint64_t v33 = &v18[v32];
          uint64_t v34 = sub_24EC21D30();
          uint64_t v48 = *(void *)(v34 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v33, 1, v34))
          {
            uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
            memcpy(__dst, v33, *(void *)(*(void *)(v35 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v48 + 32))(__dst, v33, v34);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(__dst, 0, 1, v34);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v17, 0, 1, v22);
        }
        uint64_t v36 = type metadata accessor for EditorialCollectionDetail();
        uint64_t v37 = *(int *)(v36 + 20);
        uint64_t v38 = &v17[v37];
        uint64_t v39 = &v18[v37];
        long long v40 = *(_OWORD *)&v18[v37 + 16];
        *(_OWORD *)uint64_t v38 = *(_OWORD *)&v18[v37];
        *((_OWORD *)v38 + 1) = v40;
        long long v41 = *(_OWORD *)&v18[v37 + 48];
        *((_OWORD *)v38 + 2) = *(_OWORD *)&v18[v37 + 32];
        *((_OWORD *)v38 + 3) = v41;
        uint64_t v42 = *(int *)(type metadata accessor for EditorialCollection() + 32);
        uint64_t v43 = &v38[v42];
        uint64_t v44 = &v39[v42];
        uint64_t v45 = sub_24EC21D30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
        *(void *)&v17[*(int *)(v36 + 24)] = *(void *)&v18[*(int *)(v36 + 24)];
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
    }
    memcpy(v17, v18, *(void *)(*(void *)(State - 8) + 64));
  }
LABEL_24:
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t getEnumTagSinglePayload for BrowseState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EB88C9C);
}

uint64_t sub_24EB88C9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24EC21DC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for BrowseIdentifier();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 254)
  {
    unsigned int v14 = *(unsigned __int8 *)(a1 + a3[6]);
    if (v14 >= 2) {
      return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t State = type metadata accessor for BrowseLoadState();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 48);
    uint64_t v17 = State;
    uint64_t v18 = a1 + a3[9];
    return v16(v18, a2, v17);
  }
}

uint64_t storeEnumTagSinglePayload for BrowseState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EB88E3C);
}

uint64_t sub_24EB88E3C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_24EC21DC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = type metadata accessor for BrowseIdentifier();
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[6]) = a2 + 1;
  }
  else
  {
    uint64_t State = type metadata accessor for BrowseLoadState();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 56);
    uint64_t v17 = State;
    uint64_t v18 = a1 + a4[9];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

uint64_t sub_24EB88FB8()
{
  uint64_t result = sub_24EC21DC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for BrowseIdentifier();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for BrowseLoadState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BrowseState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BrowseState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB8922CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseState.CodingKeys()
{
  return &type metadata for BrowseState.CodingKeys;
}

unint64_t sub_24EB89268()
{
  unint64_t result = qword_269946788;
  if (!qword_269946788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946788);
  }
  return result;
}

unint64_t sub_24EB892C0()
{
  unint64_t result = qword_269946790;
  if (!qword_269946790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946790);
  }
  return result;
}

unint64_t sub_24EB89318()
{
  unint64_t result = qword_269946798;
  if (!qword_269946798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946798);
  }
  return result;
}

uint64_t sub_24EB8936C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x800000024EC30E00 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E7265746E497369 && a2 == 0xEF646C6975426C61 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000024EC30E20 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7263736275537369 && a2 == 0xEC00000064656269 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6D726F6674616C70 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v5 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v5) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_24EB89670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB8ADEC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EB8969C(uint64_t a1)
{
  unint64_t v2 = sub_24EB89AF8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB896D8(uint64_t a1)
{
  unint64_t v2 = sub_24EB89AF8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB89718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB8AE80(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EB89744(uint64_t a1)
{
  unint64_t v2 = sub_24EB89BB0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB89780(uint64_t a1)
{
  unint64_t v2 = sub_24EB89BB0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EditorialLink.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699467A0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v19 = v2;
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for EditorialVideoLink();
  MEMORY[0x270FA5388](v18);
  BOOL v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for EditorialLink();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699467A8);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB89AF8();
  sub_24EC23050();
  sub_24EB89B4C(v17, (uint64_t)v10);
  sub_24EB8A044((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for EditorialVideoLink);
  sub_24EB89BB0();
  sub_24EC22EC0();
  sub_24EB8A524(&qword_2699467C0, (void (*)(uint64_t))type metadata accessor for EditorialVideoLink);
  uint64_t v15 = v19;
  sub_24EC22F40();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v15);
  sub_24EB89C04((uint64_t)v7);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t type metadata accessor for EditorialLink()
{
  uint64_t result = qword_26B1D8720;
  if (!qword_26B1D8720) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24EB89AF8()
{
  unint64_t result = qword_2699467B0;
  if (!qword_2699467B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699467B0);
  }
  return result;
}

uint64_t sub_24EB89B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EditorialLink();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24EB89BB0()
{
  unint64_t result = qword_2699467B8;
  if (!qword_2699467B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699467B8);
  }
  return result;
}

uint64_t sub_24EB89C04(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EditorialVideoLink();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t EditorialLink.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = type metadata accessor for EditorialLink();
  MEMORY[0x270FA5388](v3);
  char v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699467C8);
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699467D0);
  uint64_t v24 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB89AF8();
  uint64_t v28 = v10;
  uint64_t v11 = v27;
  sub_24EC23040();
  if (!v11)
  {
    uint64_t v27 = a1;
    uint64_t v12 = v25;
    uint64_t v13 = v26;
    uint64_t v14 = sub_24EC22EA0();
    uint64_t v15 = *(void *)(v14 + 16);
    uint64_t v22 = v14;
    if (v15 == 1)
    {
      sub_24EB89BB0();
      sub_24EC22E00();
      uint64_t v16 = v24;
      type metadata accessor for EditorialVideoLink();
      sub_24EB8A524(&qword_2699467D8, (void (*)(uint64_t))type metadata accessor for EditorialVideoLink);
      sub_24EC22E90();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v6);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v28, v13);
      a1 = v27;
      sub_24EB8A044((uint64_t)v5, v23, (uint64_t (*)(void))type metadata accessor for EditorialLink);
    }
    else
    {
      uint64_t v17 = sub_24EC22D50();
      swift_allocError();
      uint64_t v19 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269946108);
      *uint64_t v19 = v3;
      sub_24EC22E10();
      sub_24EC22D40();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x263F8DCB0], v17);
      swift_willThrow();
      uint64_t v20 = v24;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v28, v13);
      a1 = v27;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24EB8A044(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EB8A0AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EditorialLink.init(from:)(a1, a2);
}

uint64_t sub_24EB8A0C4(void *a1)
{
  return EditorialLink.encode(to:)(a1);
}

uint64_t EditorialLink.hash(into:)()
{
  uint64_t v1 = type metadata accessor for EditorialVideoLink();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for EditorialLink();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EB89B4C(v0, (uint64_t)v6);
  sub_24EB8A044((uint64_t)v6, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for EditorialVideoLink);
  sub_24EC23000();
  sub_24EC23020();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  sub_24EC21D30();
  sub_24EB8A524(&qword_269946158, MEMORY[0x263F06EA8]);
  sub_24EC22A20();
  return sub_24EB89C04((uint64_t)v3);
}

uint64_t EditorialLink.hashValue.getter()
{
  return sub_24EC23030();
}

uint64_t sub_24EB8A2AC()
{
  return sub_24EC23030();
}

uint64_t sub_24EB8A2F0()
{
  return sub_24EC23030();
}

BOOL _s15FitnessBrowsing13EditorialLinkO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EditorialVideoLink();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946820);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t)&v13[*(int *)(v11 + 56)];
  sub_24EB89B4C(a1, (uint64_t)v13);
  sub_24EB89B4C(a2, v14);
  sub_24EB8A044((uint64_t)v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for EditorialVideoLink);
  sub_24EB8A044(v14, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for EditorialVideoLink);
  BOOL v16 = 0;
  if (*(double *)v9 == *(double *)v7)
  {
    BOOL v15 = *((void *)v9 + 1) == *((void *)v7 + 1) && *((void *)v9 + 2) == *((void *)v7 + 2);
    if (v15 || (sub_24EC22F70())
      && (MEMORY[0x2533498A0](&v9[*(int *)(v4 + 24)], &v7[*(int *)(v4 + 24)]) & 1) != 0)
    {
      BOOL v16 = 1;
    }
  }
  sub_24EB89C04((uint64_t)v7);
  sub_24EB89C04((uint64_t)v9);
  return v16;
}

uint64_t sub_24EB8A4DC()
{
  return sub_24EB8A524(&qword_2699467E0, (void (*)(uint64_t))type metadata accessor for EditorialLink);
}

uint64_t sub_24EB8A524(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for EditorialLink(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v6 = *(int *)(type metadata accessor for EditorialVideoLink() + 24);
    uint64_t v7 = (char *)v4 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_24EC21D30();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v4;
}

uint64_t destroy for EditorialLink(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for EditorialVideoLink() + 24);
  uint64_t v3 = sub_24EC21D30();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

uint64_t initializeWithCopy for EditorialLink(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(type metadata accessor for EditorialVideoLink() + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_24EC21D30();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *assignWithCopy for EditorialLink(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(int *)(type metadata accessor for EditorialVideoLink() + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24EC21D30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for EditorialLink(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(int *)(type metadata accessor for EditorialVideoLink() + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_24EC21D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for EditorialLink(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(int *)(type metadata accessor for EditorialVideoLink() + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_24EC21D30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for EditorialLink(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699467E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for EditorialLink(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699467E8);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, a2, a3, v6);
}

uint64_t sub_24EB8AA4C(uint64_t a1)
{
  uint64_t result = type metadata accessor for EditorialVideoLink();
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

ValueMetadata *type metadata accessor for EditorialLink.CodingKeys()
{
  return &type metadata for EditorialLink.CodingKeys;
}

unsigned char *_s15FitnessBrowsing13EditorialLinkO10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EB8ABA4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EditorialLink.VideoCodingKeys()
{
  return &type metadata for EditorialLink.VideoCodingKeys;
}

unint64_t sub_24EB8ABE0()
{
  unint64_t result = qword_2699467F0;
  if (!qword_2699467F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699467F0);
  }
  return result;
}

unint64_t sub_24EB8AC38()
{
  unint64_t result = qword_2699467F8;
  if (!qword_2699467F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699467F8);
  }
  return result;
}

unint64_t sub_24EB8AC90()
{
  unint64_t result = qword_269946800;
  if (!qword_269946800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946800);
  }
  return result;
}

unint64_t sub_24EB8ACE8()
{
  unint64_t result = qword_269946808;
  if (!qword_269946808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946808);
  }
  return result;
}

unint64_t sub_24EB8AD40()
{
  unint64_t result = qword_269946810;
  if (!qword_269946810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946810);
  }
  return result;
}

unint64_t sub_24EB8AD98()
{
  unint64_t result = qword_269946818;
  if (!qword_269946818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946818);
  }
  return result;
}

uint64_t sub_24EB8ADEC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6F65646976 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24EB8AE6C()
{
  return 0x6F65646976;
}

uint64_t sub_24EB8AE80(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E694C6F65646976 && a2 == 0xE90000000000006BLL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24EB8AF10()
{
  return 0x6E694C6F65646976;
}

uint64_t CreatePlanBannerState.actionTitle.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void CreatePlanBannerState.sizeClass.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t CreatePlanBannerState.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CreatePlanBannerState.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

void CreatePlanBannerState.visibility.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 56);
}

unsigned char *CreatePlanBannerState.visibility.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 56) = *result;
  return result;
}

uint64_t (*CreatePlanBannerState.visibility.modify())()
{
  return nullsub_1;
}

void __swiftcall CreatePlanBannerState.init(actionTitle:sizeClass:subtitle:title:visibility:)(FitnessBrowsing::CreatePlanBannerState *__return_ptr retstr, Swift::String_optional actionTitle, FitnessBrowsing::BrowseSizeClass sizeClass, Swift::String subtitle, Swift::String title, FitnessBrowsing::CreatePlanBannerVisibility visibility)
{
  FitnessBrowsing::BrowseSizeClass v6 = *(unsigned char *)sizeClass;
  FitnessBrowsing::CreatePlanBannerVisibility v7 = *(unsigned char *)visibility;
  retstr->actionTitle = actionTitle;
  retstr->sizeClass = v6;
  retstr->subtitle = subtitle;
  retstr->title = title;
  retstr->visibility = v7;
}

uint64_t sub_24EB8B024(char a1)
{
  return *(void *)&aActiontisizecl[8 * a1];
}

uint64_t sub_24EB8B044()
{
  return sub_24EB8B024(*v0);
}

uint64_t sub_24EB8B04C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB8C1A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB8B074(uint64_t a1)
{
  unint64_t v2 = sub_24EB8B338();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB8B0B0(uint64_t a1)
{
  unint64_t v2 = sub_24EB8B338();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CreatePlanBannerState.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946828);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  FitnessBrowsing::BrowseSizeClass v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v17 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v15 = *(void *)(v1 + 32);
  uint64_t v16 = v7;
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v13 = *(void *)(v1 + 48);
  uint64_t v14 = v8;
  int v12 = *(unsigned __int8 *)(v1 + 56);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB8B338();
  sub_24EC23050();
  char v25 = 0;
  uint64_t v9 = v18;
  sub_24EC22ED0();
  if (!v9)
  {
    char v24 = v17;
    char v23 = 1;
    sub_24EB8B38C();
    sub_24EC22F40();
    char v22 = 2;
    sub_24EC22F00();
    char v21 = 3;
    sub_24EC22F00();
    char v20 = v12;
    char v19 = 4;
    sub_24EB8B3E0();
    sub_24EC22F40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24EB8B338()
{
  unint64_t result = qword_269946830;
  if (!qword_269946830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946830);
  }
  return result;
}

unint64_t sub_24EB8B38C()
{
  unint64_t result = qword_269946838;
  if (!qword_269946838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946838);
  }
  return result;
}

unint64_t sub_24EB8B3E0()
{
  unint64_t result = qword_269946840;
  if (!qword_269946840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946840);
  }
  return result;
}

uint64_t CreatePlanBannerState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946848);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB8B338();
  sub_24EC23040();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v31 = 0;
  uint64_t v9 = sub_24EC22E20();
  uint64_t v11 = v10;
  char v29 = 1;
  sub_24EB8B7B4();
  swift_bridgeObjectRetain();
  sub_24EC22E90();
  int v23 = v30;
  char v28 = 2;
  uint64_t v22 = sub_24EC22E50();
  char v27 = 3;
  uint64_t v24 = v13;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_24EC22E50();
  char v25 = 4;
  uint64_t v15 = v14;
  sub_24EB8B808();
  uint64_t v21 = v15;
  swift_bridgeObjectRetain();
  sub_24EC22E90();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v16 = v26;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v23;
  uint64_t v17 = v21;
  uint64_t v18 = v24;
  *(void *)(a2 + 24) = v22;
  *(void *)(a2 + 32) = v18;
  *(void *)(a2 + 40) = v20;
  *(void *)(a2 + 48) = v17;
  *(unsigned char *)(a2 + 56) = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_24EB8B7B4()
{
  unint64_t result = qword_269946850;
  if (!qword_269946850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946850);
  }
  return result;
}

unint64_t sub_24EB8B808()
{
  unint64_t result = qword_269946858;
  if (!qword_269946858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946858);
  }
  return result;
}

uint64_t sub_24EB8B85C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CreatePlanBannerState.init(from:)(a1, a2);
}

uint64_t sub_24EB8B874(void *a1)
{
  return CreatePlanBannerState.encode(to:)(a1);
}

uint64_t CreatePlanBannerState.hash(into:)()
{
  if (*(void *)(v0 + 8))
  {
    sub_24EC23010();
    swift_bridgeObjectRetain();
    sub_24EC22AB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24EC23010();
  }
  sub_24EC23000();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  return sub_24EC23000();
}

uint64_t CreatePlanBannerState.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_24EC22FF0();
  sub_24EC23010();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_24EC22AB0();
    swift_bridgeObjectRelease();
  }
  sub_24EC23000();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  sub_24EC23000();
  return sub_24EC23030();
}

uint64_t sub_24EB8BA84()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_24EC22FF0();
  sub_24EC23010();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_24EC22AB0();
    swift_bridgeObjectRelease();
  }
  sub_24EC23000();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  sub_24EC23000();
  return sub_24EC23030();
}

BOOL _s15FitnessBrowsing21CreatePlanBannerStateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  int v9 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v10 = *(void *)(a2 + 8);
  int v11 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v12 = *(void *)(a2 + 24);
  uint64_t v13 = *(void *)(a2 + 32);
  uint64_t v14 = *(void *)(a2 + 40);
  uint64_t v15 = *(void *)(a2 + 48);
  if (!v3)
  {
    BOOL result = 0;
    if (v10) {
      return result;
    }
    int v20 = *(unsigned __int8 *)(a2 + 56);
    int v21 = v9;
    goto LABEL_10;
  }
  if (!v10) {
    return 0;
  }
  int v20 = *(unsigned __int8 *)(a2 + 56);
  int v21 = *(unsigned __int8 *)(a1 + 56);
  if (*(void *)a1 != *(void *)a2 || v3 != v10)
  {
    char v17 = sub_24EC22F70();
    BOOL result = 0;
    if ((v17 & 1) == 0) {
      return result;
    }
LABEL_10:
    if (v4 != v11) {
      return result;
    }
    goto LABEL_11;
  }
  if (v4 != v11) {
    return 0;
  }
LABEL_11:
  if (v5 == v12 && v6 == v13 || (char v18 = sub_24EC22F70(), result = 0, (v18 & 1) != 0))
  {
    if (v7 == v14 && v8 == v15) {
      return v21 == v20;
    }
    char v19 = sub_24EC22F70();
    BOOL result = 0;
    if (v19) {
      return v21 == v20;
    }
  }
  return result;
}

unint64_t sub_24EB8BCCC()
{
  unint64_t result = qword_269946860;
  if (!qword_269946860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946860);
  }
  return result;
}

uint64_t destroy for CreatePlanBannerState()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CreatePlanBannerState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CreatePlanBannerState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CreatePlanBannerState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for CreatePlanBannerState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CreatePlanBannerState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CreatePlanBannerState()
{
  return &type metadata for CreatePlanBannerState;
}

unsigned char *storeEnumTagSinglePayload for CreatePlanBannerState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB8C064);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CreatePlanBannerState.CodingKeys()
{
  return &type metadata for CreatePlanBannerState.CodingKeys;
}

unint64_t sub_24EB8C0A0()
{
  unint64_t result = qword_269946868;
  if (!qword_269946868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946868);
  }
  return result;
}

unint64_t sub_24EB8C0F8()
{
  unint64_t result = qword_269946870;
  if (!qword_269946870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946870);
  }
  return result;
}

unint64_t sub_24EB8C150()
{
  unint64_t result = qword_269946878;
  if (!qword_269946878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946878);
  }
  return result;
}

uint64_t sub_24EB8C1A4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x69546E6F69746361 && a2 == 0xEB00000000656C74;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73616C43657A6973 && a2 == 0xE900000000000073 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t VideoAsset.contentRating.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VideoAsset.streamingProgramIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VideoAsset.streamingURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAsset() + 24);
  uint64_t v4 = sub_24EC21D30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for VideoAsset()
{
  uint64_t result = qword_26B1D86C0;
  if (!qword_26B1D86C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t VideoAsset.init(contentRating:streamingURL:streamingProgramIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = a1;
  a6[1] = a2;
  uint64_t v10 = (char *)a6 + *(int *)(type metadata accessor for VideoAsset() + 24);
  uint64_t v11 = sub_24EC21D30();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a3, v11);
  a6[2] = a4;
  a6[3] = a5;
  return result;
}

uint64_t sub_24EB8C570(char a1)
{
  if (!a1) {
    return 0x52746E65746E6F63;
  }
  if (a1 == 1) {
    return 0xD00000000000001ALL;
  }
  return 0x6E696D6165727473;
}

uint64_t sub_24EB8C5E0()
{
  return sub_24EB8C570(*v0);
}

uint64_t sub_24EB8C5E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB8DAE0(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EB8C610(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_24EB8C61C(uint64_t a1)
{
  unint64_t v2 = sub_24EB8C874();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB8C658(uint64_t a1)
{
  unint64_t v2 = sub_24EB8C874();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VideoAsset.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946880);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB8C874();
  sub_24EC23050();
  v8[15] = 0;
  sub_24EC22F00();
  if (!v1)
  {
    v8[14] = 1;
    sub_24EC22ED0();
    type metadata accessor for VideoAsset();
    v8[13] = 2;
    sub_24EC21D30();
    sub_24EB8D1E8(&qword_269946140, MEMORY[0x263F06EA8]);
    sub_24EC22F40();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24EB8C874()
{
  unint64_t result = qword_269946888;
  if (!qword_269946888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946888);
  }
  return result;
}

uint64_t VideoAsset.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = sub_24EC21D30();
  uint64_t v22 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946890);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v7);
  int v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for VideoAsset();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (uint64_t *)((char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = a1[3];
  char v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_24EB8C874();
  sub_24EC23040();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  uint64_t v14 = v24;
  uint64_t v15 = v6;
  char v29 = 0;
  uint64_t v16 = (uint64_t)v12;
  uint64_t *v12 = sub_24EC22E50();
  v12[1] = v17;
  char v28 = 1;
  v12[2] = sub_24EC22E20();
  v12[3] = v18;
  char v27 = 2;
  sub_24EB8D1E8(&qword_269946150, MEMORY[0x263F06EA8]);
  int v21 = v15;
  uint64_t v19 = v25;
  sub_24EC22E90();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v19);
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v16 + *(int *)(v10 + 24), v21, v4);
  sub_24EB8CC24(v16, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return sub_24EB8CC88(v16);
}

uint64_t sub_24EB8CC24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VideoAsset();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EB8CC88(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VideoAsset();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EB8CCE4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return VideoAsset.init(from:)(a1, a2);
}

uint64_t sub_24EB8CCFC(void *a1)
{
  return VideoAsset.encode(to:)(a1);
}

uint64_t VideoAsset.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 24))
  {
    sub_24EC23010();
    swift_bridgeObjectRetain();
    sub_24EC22AB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24EC23010();
  }
  type metadata accessor for VideoAsset();
  sub_24EC21D30();
  sub_24EB8D1E8(&qword_269946158, MEMORY[0x263F06EA8]);
  return sub_24EC22A20();
}

uint64_t VideoAsset.hashValue.getter()
{
  sub_24EC22FF0();
  sub_24EC22AB0();
  if (*(void *)(v0 + 24))
  {
    sub_24EC23010();
    swift_bridgeObjectRetain();
    sub_24EC22AB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24EC23010();
  }
  type metadata accessor for VideoAsset();
  sub_24EC21D30();
  sub_24EB8D1E8(&qword_269946158, MEMORY[0x263F06EA8]);
  sub_24EC22A20();
  return sub_24EC23030();
}

uint64_t sub_24EB8CF14()
{
  sub_24EC22AB0();
  if (*(void *)(v0 + 24))
  {
    sub_24EC23010();
    swift_bridgeObjectRetain();
    sub_24EC22AB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24EC23010();
  }
  sub_24EC21D30();
  sub_24EB8D1E8(&qword_269946158, MEMORY[0x263F06EA8]);
  return sub_24EC22A20();
}

uint64_t sub_24EB8CFF4()
{
  sub_24EC22FF0();
  sub_24EC22AB0();
  if (*(void *)(v0 + 24))
  {
    sub_24EC23010();
    swift_bridgeObjectRetain();
    sub_24EC22AB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24EC23010();
  }
  sub_24EC21D30();
  sub_24EB8D1E8(&qword_269946158, MEMORY[0x263F06EA8]);
  sub_24EC22A20();
  return sub_24EC23030();
}

uint64_t _s15FitnessBrowsing10VideoAssetV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_24EC22F70() & 1) != 0)
  {
    uint64_t v5 = a1[3];
    uint64_t v6 = a2[3];
    if (v5)
    {
      if (v6)
      {
        BOOL v7 = a1[2] == a2[2] && v5 == v6;
        if (v7 || (sub_24EC22F70() & 1) != 0)
        {
LABEL_13:
          type metadata accessor for VideoAsset();
          JUMPOUT(0x2533498A0);
        }
      }
    }
    else if (!v6)
    {
      goto LABEL_13;
    }
  }
  return 0;
}

uint64_t sub_24EB8D1A0()
{
  return sub_24EB8D1E8(&qword_269946898, (void (*)(uint64_t))type metadata accessor for VideoAsset);
}

uint64_t sub_24EB8D1E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for VideoAsset(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    int v9 = (char *)a2 + v7;
    uint64_t v10 = sub_24EC21D30();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for VideoAsset(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_24EC21D30();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for VideoAsset(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24EC21D30();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

void *assignWithCopy for VideoAsset(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24EC21D30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for VideoAsset(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_24EC21D30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *assignWithTake for VideoAsset(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_24EC21D30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EB8D638);
}

uint64_t sub_24EB8D638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24EC21D30();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for VideoAsset(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EB8D6FC);
}

uint64_t sub_24EB8D6FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24EC21D30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24EB8D7A4()
{
  uint64_t result = sub_24EC21D30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BrowseFontSymbolicTrait(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VideoAsset.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB8D9A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VideoAsset.CodingKeys()
{
  return &type metadata for VideoAsset.CodingKeys;
}

unint64_t sub_24EB8D9DC()
{
  unint64_t result = qword_2699468A0;
  if (!qword_2699468A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699468A0);
  }
  return result;
}

unint64_t sub_24EB8DA34()
{
  unint64_t result = qword_2699468A8;
  if (!qword_2699468A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699468A8);
  }
  return result;
}

unint64_t sub_24EB8DA8C()
{
  unint64_t result = qword_2699468B0[0];
  if (!qword_2699468B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2699468B0);
  }
  return result;
}

uint64_t sub_24EB8DAE0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x52746E65746E6F63 && a2 == 0xED0000676E697461;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000024EC30E40 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E696D6165727473 && a2 == 0xEC0000004C525567)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t static NewAndFeaturedLoadState.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v69 = a8;
  uint64_t v70 = a6;
  uint64_t v71 = a7;
  uint64_t v63 = a2;
  uint64_t v62 = a1;
  uint64_t v64 = a20;
  uint64_t v68 = a19;
  uint64_t v65 = a18;
  uint64_t v67 = a17;
  uint64_t v66 = a16;
  uint64_t v72 = a3;
  uint64_t v73 = a4;
  uint64_t v74 = a5;
  uint64_t v75 = a6;
  uint64_t v76 = a7;
  uint64_t v77 = a9;
  uint64_t v78 = a8;
  uint64_t v79 = a10;
  uint64_t v80 = a11;
  uint64_t v81 = a12;
  uint64_t v82 = a13;
  uint64_t v83 = a14;
  uint64_t v84 = a15;
  uint64_t v85 = a16;
  uint64_t v86 = a17;
  uint64_t v87 = a19;
  uint64_t v88 = a18;
  uint64_t v89 = a20;
  uint64_t v61 = sub_24EC22080();
  uint64_t v60 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v46 = (char *)&v45 - v23;
  uint64_t v54 = a3;
  uint64_t v72 = a3;
  uint64_t v73 = a4;
  uint64_t v55 = a4;
  uint64_t v56 = a5;
  uint64_t v74 = a5;
  uint64_t v75 = v70;
  uint64_t v76 = v71;
  uint64_t v77 = v69;
  uint64_t v53 = a9;
  uint64_t v78 = a9;
  uint64_t v79 = a10;
  uint64_t v47 = a10;
  uint64_t v48 = a11;
  uint64_t v80 = a11;
  uint64_t v81 = a12;
  uint64_t v49 = a12;
  uint64_t v50 = a13;
  uint64_t v82 = a13;
  uint64_t v83 = a14;
  uint64_t v51 = a14;
  uint64_t v52 = a15;
  uint64_t v84 = a15;
  uint64_t v85 = a16;
  uint64_t v86 = a17;
  uint64_t v87 = a18;
  uint64_t v88 = a19;
  uint64_t v89 = a20;
  uint64_t State = type metadata accessor for NewAndFeaturedLoadState();
  uint64_t v25 = *(void *)(State - 8);
  MEMORY[0x270FA5388](State);
  int v59 = (char *)&v45 - v26;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v28 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  char v31 = (char *)&v45 - v30;
  uint64_t v58 = v29;
  uint64_t v32 = (char *)&v45 + *(int *)(v29 + 48) - v30;
  uint64_t v57 = v25;
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v33((char *)&v45 - v30, v62, State);
  v33(v32, v63, State);
  uint64_t v34 = v60;
  uint64_t v35 = *(uint64_t (**)(char *, uint64_t))(v60 + 48);
  uint64_t v36 = v61;
  int v37 = v35(v31, 2);
  if (v37)
  {
    if (v37 == 1)
    {
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v35)(v32, 2, v36) != 1) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v35)(v32, 2, v36) == 2)
    {
LABEL_8:
      char v38 = 1;
LABEL_11:
      uint64_t v28 = v57;
      goto LABEL_12;
    }
  }
  else
  {
    v33(v59, (uint64_t)v31, State);
    if (!((unsigned int (*)(char *, uint64_t, uint64_t))v35)(v32, 2, v36))
    {
      uint64_t v39 = v34;
      long long v40 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
      long long v41 = v46;
      v40(v46, v32, v36);
      uint64_t v42 = v59;
      char v38 = sub_24EC22030();
      uint64_t v43 = *(void (**)(char *, uint64_t))(v39 + 8);
      v43(v41, v36);
      v43(v42, v36);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v59, v36);
  }
LABEL_9:
  char v38 = 0;
  uint64_t State = v58;
LABEL_12:
  (*(void (**)(char *, uint64_t))(v28 + 8))(v31, State);
  return v38 & 1;
}

uint64_t type metadata accessor for NewAndFeaturedLoadState()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24EB8E200(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x676E696863746566 && a2 == 0xE800000000000000;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656863746566 && a2 == 0xE700000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701602409 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EB8E338(char a1)
{
  return *(void *)&aFetchingfetche[8 * a1];
}

uint64_t sub_24EB8E358(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7470697263736564 && a2 == 0xEA0000000000726FLL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

BOOL sub_24EB8E3E8(char *a1, char *a2)
{
  return sub_24EB75BC4(*a1, *a2);
}

uint64_t sub_24EB8E444()
{
  return sub_24EB75FC8();
}

uint64_t sub_24EB8E4A0()
{
  return sub_24EB75BD4();
}

uint64_t sub_24EB8E4F0()
{
  return sub_24EC23030();
}

uint64_t sub_24EB8E560()
{
  return sub_24EB8E338(*v0);
}

uint64_t sub_24EB8E5BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB8E200(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB8E61C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24EB91710();
  *a1 = result;
  return result;
}

uint64_t sub_24EB8E678(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24EB8E6CC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24EB8E724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB8E358(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EB8E788@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_24EB8E9A0(a1, (uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24EB91734, a2);
}

uint64_t sub_24EB8E7A0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24EB8E7F4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24EB8E848@<X0>(void *a1@<X2>, unsigned char *a2@<X8>)
{
  return sub_24EB8E920(a1, (uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24EB91734, a2);
}

uint64_t sub_24EB8E860(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24EB8E8B4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24EB8E908@<X0>(void *a1@<X2>, unsigned char *a2@<X8>)
{
  return sub_24EB8E920(a1, (uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24EB7C164, a2);
}

uint64_t sub_24EB8E920@<X0>(void *a1@<X2>, uint64_t (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void)@<X4>, unsigned char *a3@<X8>)
{
  char v4 = a2(a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18], a1[19]);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v4 & 1;
  return result;
}

uint64_t sub_24EB8E9A0@<X0>(void *a1@<X1>, uint64_t (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void)@<X3>, unsigned char *a3@<X8>)
{
  uint64_t result = a2(a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18], a1[19]);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EB8EA08(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24EB8EA5C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t NewAndFeaturedLoadState.encode(to:)(void *a1, void *a2)
{
  uint64_t v77 = a1;
  uint64_t v3 = a2[2];
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  uint64_t v7 = a2[5];
  uint64_t v6 = a2[6];
  uint64_t v91 = a2[7];
  uint64_t v8 = a2[9];
  uint64_t v93 = a2[8];
  uint64_t v9 = a2[11];
  uint64_t v90 = a2[10];
  uint64_t v10 = a2[13];
  uint64_t v92 = a2[12];
  uint64_t v87 = v10;
  uint64_t v11 = a2[14];
  uint64_t v94 = a2[15];
  uint64_t v95 = v11;
  uint64_t v12 = a2[17];
  uint64_t v86 = a2[16];
  uint64_t v88 = v12;
  uint64_t v13 = a2[19];
  uint64_t v89 = a2[18];
  uint64_t v85 = v13;
  uint64_t v96 = v3;
  uint64_t v97 = v4;
  uint64_t v14 = v3;
  uint64_t v114 = v3;
  uint64_t v15 = v4;
  uint64_t v98 = v5;
  uint64_t v99 = v7;
  uint64_t v16 = v5;
  uint64_t v100 = v6;
  uint64_t v101 = v91;
  uint64_t v17 = v6;
  uint64_t v102 = v93;
  uint64_t v103 = v8;
  uint64_t v18 = v8;
  uint64_t v79 = v8;
  uint64_t v104 = v90;
  uint64_t v105 = v9;
  uint64_t v106 = v92;
  uint64_t v107 = v10;
  uint64_t v108 = v11;
  uint64_t v109 = v94;
  uint64_t v110 = v86;
  uint64_t v111 = v12;
  uint64_t v112 = v89;
  uint64_t v113 = v13;
  uint64_t v73 = type metadata accessor for NewAndFeaturedLoadState.IdleCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v71 = sub_24EC22F50();
  uint64_t v70 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v69 = (char *)&v58 - v19;
  uint64_t v96 = v14;
  uint64_t v97 = v15;
  uint64_t v83 = v15;
  uint64_t v82 = v16;
  uint64_t v98 = v16;
  uint64_t v99 = v7;
  uint64_t v81 = v7;
  uint64_t v84 = v17;
  uint64_t v20 = v91;
  uint64_t v100 = v17;
  uint64_t v101 = v91;
  uint64_t v102 = v93;
  uint64_t v103 = v18;
  uint64_t v104 = v90;
  uint64_t v105 = v9;
  uint64_t v21 = v9;
  uint64_t v80 = v9;
  uint64_t v22 = v92;
  uint64_t v106 = v92;
  uint64_t v107 = v87;
  uint64_t v108 = v95;
  uint64_t v109 = v94;
  uint64_t v110 = v86;
  uint64_t v111 = v88;
  uint64_t v112 = v89;
  uint64_t v113 = v85;
  uint64_t v23 = type metadata accessor for NewAndFeaturedLoadState.FetchedCodingKeys();
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v66 = v23;
  uint64_t v65 = v24;
  uint64_t v68 = sub_24EC22F50();
  uint64_t v64 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v67 = (char *)&v58 - v25;
  uint64_t v96 = v114;
  uint64_t v97 = v15;
  uint64_t v98 = v16;
  uint64_t v99 = v7;
  uint64_t v26 = v93;
  uint64_t v100 = v17;
  uint64_t v101 = v93;
  uint64_t v27 = v79;
  uint64_t v102 = v20;
  uint64_t v103 = v79;
  uint64_t v104 = v90;
  uint64_t v105 = v21;
  uint64_t v106 = v22;
  uint64_t v28 = v87;
  uint64_t v30 = v94;
  uint64_t v29 = v95;
  uint64_t v107 = v87;
  uint64_t v108 = v95;
  uint64_t v31 = v86;
  uint64_t v109 = v94;
  uint64_t v110 = v86;
  uint64_t v32 = v88;
  uint64_t v111 = v89;
  uint64_t v112 = v88;
  uint64_t v33 = v85;
  uint64_t v113 = v85;
  uint64_t v76 = sub_24EC22080();
  uint64_t v75 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v74 = (char *)&v58 - v34;
  uint64_t v96 = v114;
  uint64_t v97 = v83;
  uint64_t v98 = v82;
  uint64_t v99 = v81;
  uint64_t v100 = v84;
  uint64_t v101 = v91;
  uint64_t v102 = v26;
  uint64_t v103 = v27;
  uint64_t v35 = v90;
  uint64_t v104 = v90;
  uint64_t v105 = v80;
  uint64_t v106 = v92;
  uint64_t v107 = v28;
  uint64_t v108 = v29;
  uint64_t v109 = v30;
  uint64_t v110 = v31;
  uint64_t v111 = v32;
  uint64_t v36 = v31;
  uint64_t v37 = v89;
  uint64_t v112 = v89;
  uint64_t v113 = v33;
  uint64_t v38 = v33;
  uint64_t v39 = type metadata accessor for NewAndFeaturedLoadState.FetchingCodingKeys();
  uint64_t v40 = swift_getWitnessTable();
  uint64_t v63 = v39;
  uint64_t v61 = v40;
  uint64_t v62 = sub_24EC22F50();
  uint64_t v60 = *(void *)(v62 - 8);
  uint64_t v41 = MEMORY[0x270FA5388](v62);
  int v59 = (char *)&v58 - v42;
  uint64_t v43 = *(a2 - 1);
  MEMORY[0x270FA5388](v41);
  uint64_t v45 = (char *)&v58 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = v114;
  uint64_t v97 = v83;
  uint64_t v98 = v82;
  uint64_t v99 = v81;
  uint64_t v100 = v84;
  uint64_t v101 = v91;
  uint64_t v102 = v93;
  uint64_t v103 = v79;
  uint64_t v104 = v35;
  uint64_t v105 = v80;
  uint64_t v106 = v92;
  uint64_t v107 = v28;
  uint64_t v108 = v95;
  uint64_t v109 = v94;
  uint64_t v110 = v36;
  uint64_t v111 = v32;
  uint64_t v112 = v37;
  uint64_t v113 = v38;
  type metadata accessor for NewAndFeaturedLoadState.CodingKeys();
  swift_getWitnessTable();
  uint64_t v46 = sub_24EC22F50();
  uint64_t v114 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v48 = (char *)&v58 - v47;
  __swift_project_boxed_opaque_existential_1(v77, v77[3]);
  uint64_t v49 = v75;
  uint64_t v50 = v76;
  sub_24EC23050();
  (*(void (**)(char *, uint64_t, void *))(v43 + 16))(v45, v78, a2);
  int v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48))(v45, 2, v50);
  if (v51)
  {
    if (v51 == 1)
    {
      LOBYTE(v96) = 0;
      uint64_t v52 = v59;
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v52, v62);
    }
    else
    {
      LOBYTE(v96) = 2;
      uint64_t v57 = v69;
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v57, v71);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v114 + 8))(v48, v46);
  }
  else
  {
    uint64_t v53 = v64;
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v74, v45, v50);
    LOBYTE(v96) = 1;
    uint64_t v54 = v67;
    sub_24EC22EC0();
    swift_getWitnessTable();
    uint64_t v55 = v68;
    sub_24EC22F40();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v55);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v74, v50);
    return (*(uint64_t (**)(char *, uint64_t))(v114 + 8))(v48, v46);
  }
}

uint64_t type metadata accessor for NewAndFeaturedLoadState.IdleCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for NewAndFeaturedLoadState.FetchedCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for NewAndFeaturedLoadState.FetchingCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for NewAndFeaturedLoadState.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t NewAndFeaturedLoadState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v123 = a7;
  uint64_t v122 = a6;
  uint64_t v120 = a4;
  uint64_t v108 = a1;
  uint64_t v92 = a9;
  uint64_t v118 = a20;
  uint64_t v124 = a19;
  uint64_t v143 = a18;
  uint64_t v121 = a17;
  uint64_t v115 = a16;
  uint64_t v114 = a15;
  uint64_t v109 = a12;
  *(void *)&long long v127 = a2;
  *((void *)&v127 + 1) = a3;
  uint64_t v119 = a2;
  uint64_t v113 = a3;
  *(void *)&long long v128 = a4;
  *((void *)&v128 + 1) = a5;
  uint64_t v116 = a5;
  uint64_t v129 = a6;
  uint64_t v130 = a7;
  uint64_t v131 = a8;
  uint64_t v132 = a10;
  uint64_t v117 = a8;
  uint64_t v133 = a11;
  uint64_t v134 = a12;
  uint64_t v111 = a11;
  uint64_t v135 = a13;
  uint64_t v136 = a14;
  uint64_t v110 = a13;
  uint64_t v112 = a14;
  uint64_t v137 = a15;
  uint64_t v138 = a16;
  uint64_t v139 = a17;
  uint64_t v140 = a18;
  uint64_t v141 = a19;
  uint64_t v142 = a20;
  uint64_t v101 = type metadata accessor for NewAndFeaturedLoadState.IdleCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v90 = sub_24EC22EB0();
  uint64_t v88 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  uint64_t v98 = (char *)&v83 - v24;
  *(void *)&long long v127 = a2;
  *((void *)&v127 + 1) = a3;
  uint64_t v25 = v120;
  *(void *)&long long v128 = v120;
  *((void *)&v128 + 1) = a5;
  uint64_t v26 = v122;
  uint64_t v129 = v122;
  uint64_t v130 = v123;
  uint64_t v131 = a8;
  uint64_t v132 = a10;
  uint64_t v107 = a10;
  uint64_t v133 = a11;
  uint64_t v134 = a12;
  uint64_t v135 = a13;
  uint64_t v136 = a14;
  uint64_t v137 = a15;
  uint64_t v138 = a16;
  uint64_t v139 = a17;
  uint64_t v140 = a18;
  uint64_t v141 = a19;
  uint64_t v142 = a20;
  uint64_t v27 = type metadata accessor for NewAndFeaturedLoadState.FetchedCodingKeys();
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v97 = v27;
  uint64_t v96 = v28;
  uint64_t v91 = sub_24EC22EB0();
  uint64_t v89 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v99 = (char *)&v83 - v29;
  uint64_t v30 = v113;
  *(void *)&long long v127 = v119;
  *((void *)&v127 + 1) = v113;
  uint64_t v31 = v116;
  *(void *)&long long v128 = v25;
  *((void *)&v128 + 1) = v116;
  uint64_t v32 = v123;
  uint64_t v129 = v26;
  uint64_t v130 = v123;
  uint64_t v33 = v117;
  uint64_t v131 = v117;
  uint64_t v132 = a10;
  uint64_t v133 = v111;
  uint64_t v134 = a12;
  uint64_t v34 = v112;
  uint64_t v135 = v110;
  uint64_t v136 = v112;
  uint64_t v137 = a15;
  uint64_t v138 = a16;
  uint64_t v35 = v121;
  uint64_t v139 = v121;
  uint64_t v140 = v143;
  uint64_t v36 = v124;
  uint64_t v141 = v124;
  uint64_t v142 = a20;
  uint64_t v37 = type metadata accessor for NewAndFeaturedLoadState.FetchingCodingKeys();
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v104 = v37;
  uint64_t v95 = v38;
  uint64_t v87 = sub_24EC22EB0();
  uint64_t v86 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v94 = (char *)&v83 - v39;
  *(void *)&long long v127 = v119;
  *((void *)&v127 + 1) = v30;
  *(void *)&long long v128 = v120;
  *((void *)&v128 + 1) = v31;
  uint64_t v129 = v122;
  uint64_t v130 = v32;
  uint64_t v131 = v33;
  uint64_t v40 = v107;
  uint64_t v41 = v111;
  uint64_t v132 = v107;
  uint64_t v133 = v111;
  uint64_t v42 = v109;
  uint64_t v43 = v110;
  uint64_t v134 = v109;
  uint64_t v135 = v110;
  uint64_t v44 = v114;
  uint64_t v136 = v34;
  uint64_t v137 = v114;
  uint64_t v45 = v115;
  uint64_t v138 = v115;
  uint64_t v139 = v35;
  uint64_t v140 = v143;
  uint64_t v141 = v36;
  uint64_t v46 = v118;
  uint64_t v142 = v118;
  type metadata accessor for NewAndFeaturedLoadState.CodingKeys();
  uint64_t v105 = swift_getWitnessTable();
  uint64_t v103 = sub_24EC22EB0();
  uint64_t v102 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  uint64_t v48 = (char *)&v83 - v47;
  *(void *)&long long v127 = v119;
  *((void *)&v127 + 1) = v113;
  *(void *)&long long v128 = v120;
  *((void *)&v128 + 1) = v116;
  uint64_t v129 = v122;
  uint64_t v130 = v123;
  uint64_t v131 = v117;
  uint64_t v132 = v40;
  uint64_t v133 = v41;
  uint64_t v134 = v42;
  uint64_t v135 = v43;
  uint64_t v136 = v112;
  uint64_t v137 = v44;
  uint64_t v138 = v45;
  uint64_t v139 = v121;
  uint64_t v140 = v143;
  uint64_t v141 = v124;
  uint64_t v142 = v46;
  uint64_t State = type metadata accessor for NewAndFeaturedLoadState();
  uint64_t v93 = *(void *)(State - 8);
  uint64_t v50 = MEMORY[0x270FA5388](State);
  uint64_t v52 = (char *)&v83 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v50);
  uint64_t v54 = (char *)&v83 - v53;
  uint64_t v55 = v108;
  __swift_project_boxed_opaque_existential_1(v108, v108[3]);
  uint64_t v56 = v106;
  sub_24EC23040();
  if (v56) {
    goto LABEL_10;
  }
  uint64_t v84 = v52;
  uint64_t v85 = v54;
  uint64_t v106 = State;
  uint64_t v105 = 0;
  uint64_t v57 = v103;
  *(void *)&long long v127 = sub_24EC22EA0();
  sub_24EC22B40();
  swift_getWitnessTable();
  *(void *)&long long v125 = sub_24EC22CD0();
  *((void *)&v125 + 1) = v58;
  *(void *)&long long v126 = v59;
  *((void *)&v126 + 1) = v60;
  sub_24EC22CC0();
  swift_getWitnessTable();
  sub_24EC22C30();
  int v61 = v127;
  if (v127 != 3)
  {
    long long v83 = v125;
    long long v127 = v125;
    long long v128 = v126;
    if (sub_24EC22C50())
    {
      if (v61)
      {
        if (v61 == 1)
        {
          LOBYTE(v127) = 1;
          uint64_t v62 = v99;
          uint64_t v63 = v57;
          uint64_t v64 = v105;
          sub_24EC22E00();
          if (v64) {
            goto LABEL_9;
          }
          *(void *)&long long v127 = v119;
          *((void *)&v127 + 1) = v113;
          *(void *)&long long v128 = v120;
          *((void *)&v128 + 1) = v116;
          uint64_t v129 = v122;
          uint64_t v130 = v117;
          uint64_t v131 = v123;
          uint64_t v132 = v107;
          uint64_t v133 = v111;
          uint64_t v134 = v109;
          uint64_t v135 = v110;
          uint64_t v136 = v112;
          uint64_t v137 = v114;
          uint64_t v138 = v115;
          uint64_t v139 = v121;
          uint64_t v140 = v124;
          uint64_t v141 = v143;
          uint64_t v142 = v118;
          uint64_t v76 = sub_24EC22080();
          swift_getWitnessTable();
          uint64_t v77 = v84;
          uint64_t v78 = v91;
          sub_24EC22E90();
          uint64_t v79 = v102;
          (*(void (**)(char *, uint64_t))(v89 + 8))(v62, v78);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v79 + 8))(v48, v63);
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v77, 0, 2, v76);
          uint64_t v81 = v93;
          uint64_t v73 = v85;
          uint64_t v82 = v106;
          (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v85, v77, v106);
LABEL_19:
          (*(void (**)(uint64_t, char *, uint64_t))(v81 + 32))(v92, v73, v82);
          uint64_t v68 = v108;
          return __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
        }
        LOBYTE(v127) = 2;
        uint64_t v74 = v98;
        uint64_t v75 = v105;
        sub_24EC22E00();
        if (v75) {
          goto LABEL_9;
        }
        (*(void (**)(char *, uint64_t))(v88 + 8))(v74, v90);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v102 + 8))(v48, v57);
        *(void *)&long long v127 = v119;
        *((void *)&v127 + 1) = v113;
        *(void *)&long long v128 = v120;
        *((void *)&v128 + 1) = v116;
        uint64_t v129 = v122;
        uint64_t v130 = v117;
        uint64_t v131 = v123;
        uint64_t v132 = v107;
        uint64_t v133 = v111;
        uint64_t v134 = v109;
        uint64_t v135 = v110;
        uint64_t v136 = v112;
        uint64_t v137 = v114;
        uint64_t v138 = v115;
        uint64_t v139 = v121;
        uint64_t v140 = v124;
        uint64_t v141 = v143;
        uint64_t v142 = v118;
        uint64_t v80 = sub_24EC22080();
        uint64_t v73 = v85;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v85, 2, 2, v80);
      }
      else
      {
        LOBYTE(v127) = 0;
        uint64_t v70 = v94;
        uint64_t v71 = v105;
        sub_24EC22E00();
        if (v71) {
          goto LABEL_9;
        }
        (*(void (**)(char *, uint64_t))(v86 + 8))(v70, v87);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v102 + 8))(v48, v57);
        *(void *)&long long v127 = v119;
        *((void *)&v127 + 1) = v113;
        *(void *)&long long v128 = v120;
        *((void *)&v128 + 1) = v116;
        uint64_t v129 = v122;
        uint64_t v130 = v117;
        uint64_t v131 = v123;
        uint64_t v132 = v107;
        uint64_t v133 = v111;
        uint64_t v134 = v109;
        uint64_t v135 = v110;
        uint64_t v136 = v112;
        uint64_t v137 = v114;
        uint64_t v138 = v115;
        uint64_t v139 = v121;
        uint64_t v140 = v124;
        uint64_t v141 = v143;
        uint64_t v142 = v118;
        uint64_t v72 = sub_24EC22080();
        uint64_t v73 = v85;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v85, 1, 2, v72);
      }
      uint64_t v82 = v106;
      uint64_t v81 = v93;
      goto LABEL_19;
    }
  }
  uint64_t v65 = sub_24EC22D50();
  swift_allocError();
  uint64_t v67 = v66;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269946108);
  *uint64_t v67 = v106;
  sub_24EC22E10();
  sub_24EC22D40();
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v65 - 8) + 104))(v67, *MEMORY[0x263F8DCB0], v65);
  swift_willThrow();
LABEL_9:
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v102 + 8))(v48, v57);
  uint64_t v55 = v108;
LABEL_10:
  uint64_t v68 = v55;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
}

uint64_t sub_24EB903B0@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return NewAndFeaturedLoadState.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a2[6], a2[7], a2[8], a3, a2[9], a2[10], a2[11], a2[12], a2[13], a2[14], a2[15], a2[16], a2[17], a2[18],
           a2[19]);
}

uint64_t sub_24EB9040C(void *a1, void *a2)
{
  return NewAndFeaturedLoadState.encode(to:)(a1, a2);
}

uint64_t NewAndFeaturedLoadState.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 152);
  long long v6 = *(_OWORD *)(a2 + 32);
  v16[0] = *(_OWORD *)(a2 + 16);
  v16[1] = v6;
  uint64_t v17 = v4;
  int8x16_t v18 = vextq_s8(*(int8x16_t *)(a2 + 56), *(int8x16_t *)(a2 + 56), 8uLL);
  long long v19 = *(_OWORD *)(a2 + 72);
  long long v20 = *(_OWORD *)(a2 + 88);
  long long v21 = *(_OWORD *)(a2 + 104);
  long long v22 = *(_OWORD *)(a2 + 120);
  int8x16_t v23 = vextq_s8(*(int8x16_t *)(a2 + 136), *(int8x16_t *)(a2 + 136), 8uLL);
  uint64_t v24 = v5;
  uint64_t v7 = sub_24EC22080();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v16 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v13, v2, a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 2, v7)) {
    return sub_24EC23000();
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, v7);
  sub_24EC23000();
  swift_getWitnessTable();
  sub_24EC22A20();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t NewAndFeaturedLoadState.hashValue.getter(uint64_t a1)
{
  sub_24EC22FF0();
  NewAndFeaturedLoadState.hash(into:)((uint64_t)v3, a1);
  return sub_24EC23030();
}

uint64_t sub_24EB906BC(uint64_t a1, uint64_t a2)
{
  sub_24EC22FF0();
  NewAndFeaturedLoadState.hash(into:)((uint64_t)v4, a2);
  return sub_24EC23030();
}

uint64_t sub_24EB90700()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EB9071C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return static NewAndFeaturedLoadState.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7], a3[8], a3[9], a3[10], a3[11], a3[12], a3[13], a3[14], a3[15], a3[16], a3[17], a3[18],
           a3[19]) & 1;
}

uint64_t sub_24EB90770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 144);
}

uint64_t sub_24EB90778()
{
  uint64_t result = sub_24EC22080();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_24EB9084C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_24EC22080();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_24EB909E4(uint64_t a1)
{
  uint64_t v2 = sub_24EC22080();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 2, v2);
  if (!result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  return result;
}

void *sub_24EB90ADC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EC22080();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_24EB90C34(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EC22080();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *sub_24EB90DF0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EC22080();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_24EB90F48(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EC22080();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_24EB91104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EB91118);
}

uint64_t sub_24EB91118(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EC22080();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_24EB911E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EB911F4);
}

uint64_t sub_24EB911F4(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_24EC22080();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_24EB912C8(uint64_t a1)
{
  uint64_t v2 = sub_24EC22080();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_24EB91380(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EC22080();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

unsigned char *sub_24EB91440(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB9150CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_24EB91534(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EB915D0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EB915F8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EB91614()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EB91630()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EB9164C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EB91668()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EB91684()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EB916A0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EB916BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EB916D8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EB916F4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EB91710()
{
  return 3;
}

uint64_t sub_24EB91718()
{
  return 0x7470697263736564;
}

uint64_t sub_24EB91734()
{
  return sub_24EB7C164();
}

BOOL static BrowseArtworkOverlayTag.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_24EB91778(char a1)
{
  return *(void *)&aCompleterecenc[8 * a1];
}

uint64_t sub_24EB91798()
{
  return sub_24EB91778(*v0);
}

uint64_t sub_24EB917A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB920E8(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EB917C8(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_24EB917D4(uint64_t a1)
{
  unint64_t v2 = sub_24EB91E74();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB91810(uint64_t a1)
{
  unint64_t v2 = sub_24EB91E74();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB9184C(uint64_t a1)
{
  unint64_t v2 = sub_24EB91FC4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB91888(uint64_t a1)
{
  unint64_t v2 = sub_24EB91FC4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB918C4(uint64_t a1)
{
  unint64_t v2 = sub_24EB91F70();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB91900(uint64_t a1)
{
  unint64_t v2 = sub_24EB91F70();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB9193C(uint64_t a1)
{
  unint64_t v2 = sub_24EB91F1C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB91978(uint64_t a1)
{
  unint64_t v2 = sub_24EB91F1C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB919B4(uint64_t a1)
{
  unint64_t v2 = sub_24EB91EC8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB919F0(uint64_t a1)
{
  unint64_t v2 = sub_24EB91EC8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseArtworkOverlayTag.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v31 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946AB8);
  uint64_t v29 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v28 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946AC0);
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v25 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946AC8);
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  MEMORY[0x270FA5388](v7);
  int v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946AD0);
  uint64_t v22 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946AD8);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB91E74();
  sub_24EC23050();
  switch((char)v31)
  {
    case 1:
      char v33 = 1;
      sub_24EB91F70();
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
      break;
    case 2:
      char v34 = 2;
      sub_24EB91F1C();
      uint64_t v17 = v25;
      sub_24EC22EC0();
      uint64_t v19 = v26;
      uint64_t v18 = v27;
      goto LABEL_5;
    case 3:
      char v35 = 3;
      sub_24EB91EC8();
      uint64_t v17 = v28;
      sub_24EC22EC0();
      uint64_t v19 = v29;
      uint64_t v18 = v30;
LABEL_5:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_24EB91FC4();
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v10);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

unint64_t sub_24EB91E74()
{
  unint64_t result = qword_269946AE0;
  if (!qword_269946AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946AE0);
  }
  return result;
}

unint64_t sub_24EB91EC8()
{
  unint64_t result = qword_269946AE8;
  if (!qword_269946AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946AE8);
  }
  return result;
}

unint64_t sub_24EB91F1C()
{
  unint64_t result = qword_269946AF0;
  if (!qword_269946AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946AF0);
  }
  return result;
}

unint64_t sub_24EB91F70()
{
  unint64_t result = qword_269946AF8;
  if (!qword_269946AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946AF8);
  }
  return result;
}

unint64_t sub_24EB91FC4()
{
  unint64_t result = qword_269946B00;
  if (!qword_269946B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946B00);
  }
  return result;
}

char *BrowseArtworkOverlayTag.init(from:)(void *a1)
{
  return sub_24EB92294(a1);
}

char *sub_24EB92030@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_24EB92294(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_24EB9205C(void *a1)
{
  return BrowseArtworkOverlayTag.encode(to:)(a1, *v1);
}

uint64_t BrowseArtworkOverlayTag.hash(into:)()
{
  return sub_24EC23000();
}

uint64_t BrowseArtworkOverlayTag.hashValue.getter()
{
  return sub_24EC23030();
}

uint64_t sub_24EB920E8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6574656C706D6F63 && a2 == 0xE900000000000064;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79636E65636572 && a2 == 0xE700000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C756465686373 && a2 == 0xE900000000000064 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6B63617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

char *sub_24EB92294(void *a1)
{
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946B68);
  uint64_t v45 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v44 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946B70);
  uint64_t v42 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v43 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946B78);
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946B80);
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  int v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946B88);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_24EB91E74();
  uint64_t v15 = v47;
  sub_24EC23040();
  if (v15) {
    goto LABEL_7;
  }
  uint64_t v35 = v7;
  uint64_t v36 = v9;
  uint64_t v16 = v43;
  uint64_t v17 = v44;
  uint64_t v47 = 0;
  uint64_t v18 = v45;
  uint64_t v19 = v11;
  long long v20 = v13;
  uint64_t v21 = sub_24EC22EA0();
  uint64_t v22 = (char *)v21;
  if (*(void *)(v21 + 16) != 1)
  {
    uint64_t v25 = sub_24EC22D50();
    swift_allocError();
    uint64_t v13 = v22;
    uint64_t v26 = v10;
    uint64_t v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269946108);
    *uint64_t v28 = &type metadata for BrowseArtworkOverlayTag;
    sub_24EC22E10();
    sub_24EC22D40();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v28, *MEMORY[0x263F8DCB0], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v26);
LABEL_7:
    uint64_t v29 = (uint64_t)v46;
    goto LABEL_8;
  }
  uint64_t v13 = (char *)*(unsigned __int8 *)(v21 + 32);
  switch(*(unsigned char *)(v21 + 32))
  {
    case 1:
      char v49 = 1;
      sub_24EB91F70();
      uint64_t v31 = v47;
      sub_24EC22E00();
      if (v31) {
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v39);
      goto LABEL_14;
    case 2:
      char v50 = 2;
      sub_24EB91F1C();
      uint64_t v32 = v47;
      sub_24EC22E00();
      if (v32) {
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v40);
      goto LABEL_14;
    case 3:
      char v51 = 3;
      sub_24EB91EC8();
      uint64_t v33 = v47;
      sub_24EC22E00();
      if (v33) {
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v18 + 8))(v17, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v10);
      uint64_t v29 = (uint64_t)v46;
      break;
    default:
      char v48 = 0;
      sub_24EB91FC4();
      uint64_t v23 = v36;
      uint64_t v24 = v47;
      sub_24EC22E00();
      if (v24)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v10);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v35);
LABEL_14:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v10);
      uint64_t v29 = (uint64_t)v46;
      break;
  }
LABEL_8:
  __swift_destroy_boxed_opaque_existential_1(v29);
  return v13;
}

unint64_t sub_24EB928D0()
{
  unint64_t result = qword_269946B08;
  if (!qword_269946B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946B08);
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseArtworkOverlayTag()
{
  return &type metadata for BrowseArtworkOverlayTag;
}

uint64_t getEnumTagSinglePayload for CreatePlanBannerFeature.TaskIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s15FitnessBrowsing23BrowseArtworkOverlayTagOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB92A98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseArtworkOverlayTag.CodingKeys()
{
  return &type metadata for BrowseArtworkOverlayTag.CodingKeys;
}

ValueMetadata *type metadata accessor for BrowseArtworkOverlayTag.CompletedCodingKeys()
{
  return &type metadata for BrowseArtworkOverlayTag.CompletedCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseArtworkOverlayTag.RecencyCodingKeys()
{
  return &type metadata for BrowseArtworkOverlayTag.RecencyCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseArtworkOverlayTag.ScheduledCodingKeys()
{
  return &type metadata for BrowseArtworkOverlayTag.ScheduledCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseArtworkOverlayTag.StackCodingKeys()
{
  return &type metadata for BrowseArtworkOverlayTag.StackCodingKeys;
}

unint64_t sub_24EB92B14()
{
  unint64_t result = qword_269946B10;
  if (!qword_269946B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946B10);
  }
  return result;
}

unint64_t sub_24EB92B6C()
{
  unint64_t result = qword_269946B18;
  if (!qword_269946B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946B18);
  }
  return result;
}

unint64_t sub_24EB92BC4()
{
  unint64_t result = qword_269946B20;
  if (!qword_269946B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946B20);
  }
  return result;
}

unint64_t sub_24EB92C1C()
{
  unint64_t result = qword_269946B28;
  if (!qword_269946B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946B28);
  }
  return result;
}

unint64_t sub_24EB92C74()
{
  unint64_t result = qword_269946B30;
  if (!qword_269946B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946B30);
  }
  return result;
}

unint64_t sub_24EB92CCC()
{
  unint64_t result = qword_269946B38;
  if (!qword_269946B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946B38);
  }
  return result;
}

unint64_t sub_24EB92D24()
{
  unint64_t result = qword_269946B40;
  if (!qword_269946B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946B40);
  }
  return result;
}

unint64_t sub_24EB92D7C()
{
  unint64_t result = qword_269946B48;
  if (!qword_269946B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946B48);
  }
  return result;
}

unint64_t sub_24EB92DD4()
{
  unint64_t result = qword_269946B50;
  if (!qword_269946B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946B50);
  }
  return result;
}

unint64_t sub_24EB92E2C()
{
  unint64_t result = qword_269946B58;
  if (!qword_269946B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946B58);
  }
  return result;
}

unint64_t sub_24EB92E84()
{
  unint64_t result = qword_269946B60;
  if (!qword_269946B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946B60);
  }
  return result;
}

uint64_t BrowseDisplayStyle.rawValue.getter(char a1)
{
  uint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 2:
      uint64_t v3 = 0x427472616863;
      goto LABEL_28;
    case 3:
      uint64_t result = 0x6C6573756F726163;
      break;
    case 4:
      uint64_t result = 0x656C63726963;
      break;
    case 5:
      uint64_t result = 0x6F52656C63726963;
      break;
    case 6:
      uint64_t result = 0x42746361706D6F63;
      break;
    case 7:
      uint64_t result = 0x4263696D616E7964;
      break;
    case 8:
      return result;
    case 9:
      uint64_t result = 0xD00000000000001BLL;
      break;
    case 10:
    case 19:
    case 24:
    case 30:
      uint64_t result = 0xD000000000000010;
      break;
    case 11:
      uint64_t result = 0x6369724264697267;
      break;
    case 12:
      uint64_t result = 0x7552646564697567;
      break;
    case 13:
      uint64_t result = 0xD000000000000011;
      break;
    case 14:
      uint64_t result = 0x6157646564697567;
      break;
    case 15:
      uint64_t result = 0xD000000000000012;
      break;
    case 16:
      uint64_t result = 0x4264657865646E69;
      break;
    case 17:
      uint64_t result = 0x6E6974656B72616DLL;
      break;
    case 18:
      uint64_t result = 0x7974696C61646F6DLL;
      break;
    case 20:
      uint64_t result = 0x65736163776F6873;
      break;
    case 21:
      uint64_t result = 0xD000000000000011;
      break;
    case 22:
      uint64_t result = 0xD000000000000012;
      break;
    case 23:
      uint64_t result = 0x647261646E617473;
      break;
    case 25:
      uint64_t result = 0x6564616548626174;
      break;
    case 26:
      uint64_t result = 0x6B63697242706974;
      break;
    case 27:
      uint64_t result = 0x75517478654E7075;
      break;
    case 28:
      uint64_t v3 = 0x426F65646976;
LABEL_28:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6972000000000000;
      break;
    case 29:
      uint64_t result = 0x6972426F65646976;
      break;
    case 31:
      uint64_t result = 0xD000000000000013;
      break;
    case 32:
      uint64_t result = 0xD000000000000018;
      break;
    case 33:
      uint64_t result = 0xD000000000000019;
      break;
    case 34:
      uint64_t result = 0xD000000000000016;
      break;
    case 35:
      uint64_t result = 0xD00000000000001ELL;
      break;
    default:
      uint64_t result = 0x72426E6F69746361;
      break;
  }
  return result;
}

uint64_t sub_24EB932F0(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = BrowseDisplayStyle.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == BrowseDisplayStyle.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_24EC22F70();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24EB9337C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s15FitnessBrowsing18BrowseDisplayStyleO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_24EB933AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = BrowseDisplayStyle.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_24EB933D8()
{
  return sub_24EC22B00();
}

uint64_t sub_24EB93438()
{
  return sub_24EC22AF0();
}

uint64_t sub_24EB93488()
{
  char v1 = *v0;
  sub_24EC22FF0();
  BrowseDisplayStyle.rawValue.getter(v1);
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  return sub_24EC23030();
}

uint64_t sub_24EB934EC()
{
  BrowseDisplayStyle.rawValue.getter(*v0);
  sub_24EC22AB0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EB93540()
{
  char v1 = *v0;
  sub_24EC22FF0();
  BrowseDisplayStyle.rawValue.getter(v1);
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  return sub_24EC23030();
}

uint64_t _s15FitnessBrowsing18BrowseDisplayStyleO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_24EC22F80();
  swift_bridgeObjectRelease();
  if (v0 >= 0x24) {
    return 36;
  }
  else {
    return v0;
  }
}

unint64_t sub_24EB935F8()
{
  unint64_t result = qword_269946B90;
  if (!qword_269946B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946B90);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BrowseDisplayStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xDD) {
    goto LABEL_17;
  }
  if (a2 + 35 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 35) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 35;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 35;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 35;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x24;
  int v8 = v6 - 36;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BrowseDisplayStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 35 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 35) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDC)
  {
    unsigned int v6 = ((a2 - 221) >> 8) + 1;
    *unint64_t result = a2 + 35;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB937A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 35;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseDisplayStyle()
{
  return &type metadata for BrowseDisplayStyle;
}

unint64_t sub_24EB937E0()
{
  unint64_t result = qword_269946B98;
  if (!qword_269946B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946B98);
  }
  return result;
}

void *static BrowseFontWeight.allCases.getter()
{
  return &unk_2700839E8;
}

uint64_t BrowseFontWeight.rawValue.getter(char a1)
{
  return *(void *)&aUltraligthin[8 * a1];
}

uint64_t sub_24EB93864(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = BrowseFontWeight.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == BrowseFontWeight.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_24EC22F70();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24EB938F0()
{
  char v1 = *v0;
  sub_24EC22FF0();
  BrowseFontWeight.rawValue.getter(v1);
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  return sub_24EC23030();
}

uint64_t sub_24EB93954()
{
  BrowseFontWeight.rawValue.getter(*v0);
  sub_24EC22AB0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EB939A8()
{
  char v1 = *v0;
  sub_24EC22FF0();
  BrowseFontWeight.rawValue.getter(v1);
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  return sub_24EC23030();
}

uint64_t sub_24EB93A08@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s15FitnessBrowsing16BrowseFontWeightO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_24EB93A38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = BrowseFontWeight.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_24EB93A64(void *a1@<X8>)
{
  *a1 = &unk_2700839E8;
}

uint64_t sub_24EB93A74()
{
  return sub_24EC22B00();
}

uint64_t sub_24EB93AD4()
{
  return sub_24EC22AF0();
}

uint64_t _s15FitnessBrowsing16BrowseFontWeightO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_24EC22DF0();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

unint64_t sub_24EB93B74()
{
  unint64_t result = qword_269946BA0;
  if (!qword_269946BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946BA0);
  }
  return result;
}

unint64_t sub_24EB93BCC()
{
  unint64_t result = qword_269946BA8;
  if (!qword_269946BA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946BB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946BA8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BrowseFontWeight(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB93CF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseFontWeight()
{
  return &type metadata for BrowseFontWeight;
}

unint64_t sub_24EB93D2C()
{
  unint64_t result = qword_269946BB8;
  if (!qword_269946BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946BB8);
  }
  return result;
}

double EditorialVideoLink.duration.getter()
{
  return *(double *)v0;
}

uint64_t EditorialVideoLink.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EditorialVideoLink.streamingURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EditorialVideoLink() + 24);
  uint64_t v4 = sub_24EC21D30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t EditorialVideoLink.init(duration:identifier:streamingURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  *(double *)a4 = a5;
  *(void *)(a4 + 8) = a1;
  *(void *)(a4 + 16) = a2;
  uint64_t v6 = a4 + *(int *)(type metadata accessor for EditorialVideoLink() + 24);
  uint64_t v7 = sub_24EC21D30();
  char v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);
  return v8(v6, a3, v7);
}

uint64_t sub_24EB93EB8(char a1)
{
  return *(void *)&aDurationidenti[8 * a1];
}

uint64_t sub_24EB93ED8()
{
  return sub_24EB93EB8(*v0);
}

uint64_t sub_24EB93EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB95218(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB93F08(uint64_t a1)
{
  unint64_t v2 = sub_24EB948DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB93F44(uint64_t a1)
{
  unint64_t v2 = sub_24EB948DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EditorialVideoLink.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946BC0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB948DC();
  sub_24EC23050();
  v8[15] = 0;
  sub_24EC22F20();
  if (!v1)
  {
    v8[14] = 1;
    sub_24EC22F00();
    type metadata accessor for EditorialVideoLink();
    v8[13] = 2;
    sub_24EC21D30();
    sub_24EB949DC(&qword_269946140, MEMORY[0x263F06EA8]);
    sub_24EC22F40();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t EditorialVideoLink.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = sub_24EC21D30();
  uint64_t v20 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946BD0);
  uint64_t v22 = *(void *)(v6 - 8);
  uint64_t v23 = v6;
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for EditorialVideoLink();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB948DC();
  uint64_t v12 = v24;
  sub_24EC23040();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v24 = v9;
  uint64_t v13 = v22;
  char v27 = 0;
  sub_24EC22E70();
  uint64_t v14 = (uint64_t)v11;
  *uint64_t v11 = v15;
  char v26 = 1;
  v11[1] = sub_24EC22E50();
  v11[2] = v16;
  char v25 = 2;
  sub_24EB949DC(&qword_269946150, MEMORY[0x263F06EA8]);
  uint64_t v17 = v23;
  sub_24EC22E90();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v17);
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v14 + *(int *)(v24 + 24), v5, v3);
  sub_24EB94930(v14, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_24EB89C04(v14);
}

uint64_t sub_24EB94488@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EditorialVideoLink.init(from:)(a1, a2);
}

uint64_t sub_24EB944A0(void *a1)
{
  return EditorialVideoLink.encode(to:)(a1);
}

uint64_t EditorialVideoLink.hash(into:)()
{
  return sub_24EC22A20();
}

uint64_t EditorialVideoLink.hashValue.getter()
{
  return sub_24EC23030();
}

uint64_t sub_24EB94664()
{
  return sub_24EC22A20();
}

uint64_t sub_24EB9472C()
{
  return sub_24EC23030();
}

uint64_t _s15FitnessBrowsing18EditorialVideoLinkV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 == *(double *)a2)
  {
    BOOL v2 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16);
    if (v2 || (sub_24EC22F70() & 1) != 0)
    {
      type metadata accessor for EditorialVideoLink();
      JUMPOUT(0x2533498A0);
    }
  }
  return 0;
}

uint64_t type metadata accessor for EditorialVideoLink()
{
  uint64_t result = qword_26B1D8748;
  if (!qword_26B1D8748) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24EB948DC()
{
  unint64_t result = qword_269946BC8;
  if (!qword_269946BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946BC8);
  }
  return result;
}

uint64_t sub_24EB94930(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EditorialVideoLink();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EB94994()
{
  return sub_24EB949DC(&qword_269946BD8, (void (*)(uint64_t))type metadata accessor for EditorialVideoLink);
}

uint64_t sub_24EB949DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for EditorialVideoLink(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_24EC21D30();
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for EditorialVideoLink(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_24EC21D30();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for EditorialVideoLink(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_24EC21D30();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *assignWithCopy for EditorialVideoLink(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24EC21D30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for EditorialVideoLink(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_24EC21D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for EditorialVideoLink(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24EC21D30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for EditorialVideoLink(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EB94DFC);
}

uint64_t sub_24EB94DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24EC21D30();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for EditorialVideoLink(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EB94EC0);
}

uint64_t sub_24EB94EC0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24EC21D30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24EB94F68()
{
  uint64_t result = sub_24EC21D30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EditorialVideoLink.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB950D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EditorialVideoLink.CodingKeys()
{
  return &type metadata for EditorialVideoLink.CodingKeys;
}

unint64_t sub_24EB95114()
{
  unint64_t result = qword_269946BE0;
  if (!qword_269946BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946BE0);
  }
  return result;
}

unint64_t sub_24EB9516C()
{
  unint64_t result = qword_269946BE8;
  if (!qword_269946BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946BE8);
  }
  return result;
}

unint64_t sub_24EB951C4()
{
  unint64_t result = qword_269946BF0;
  if (!qword_269946BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946BF0);
  }
  return result;
}

uint64_t sub_24EB95218(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E696D6165727473 && a2 == 0xEC0000004C525567)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

BOOL BrowseEditorialContent.isEmpty.getter(uint64_t a1)
{
  return *(void *)(a1 + 16) == 0;
}

uint64_t sub_24EB95388(char a1)
{
  if (a1) {
    return 0x6D657449797A616CLL;
  }
  else {
    return 0x49646570756F7267;
  }
}

uint64_t sub_24EB953CC()
{
  return sub_24EB95388(*v0);
}

uint64_t sub_24EB953D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB95D80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB953FC(uint64_t a1)
{
  unint64_t v2 = sub_24EB95924();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB95438(uint64_t a1)
{
  unint64_t v2 = sub_24EB95924();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB95478(uint64_t a1)
{
  unint64_t v2 = sub_24EB959CC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB954B4(uint64_t a1)
{
  unint64_t v2 = sub_24EB959CC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB954F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB95E84(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EB9551C(uint64_t a1)
{
  unint64_t v2 = sub_24EB95978();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB95558(uint64_t a1)
{
  unint64_t v2 = sub_24EB95978();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseEditorialContent.encode(to:)(void *a1, uint64_t a2, int a3)
{
  uint64_t v20 = a2;
  int v21 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946BF8);
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946C00);
  uint64_t v17 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946C08);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB95924();
  sub_24EC23050();
  uint64_t v14 = (uint64_t (**)(char *, uint64_t))(v11 + 8);
  if (v21)
  {
    LOBYTE(v22) = 1;
    sub_24EB95978();
    sub_24EC22EC0();
    uint64_t v22 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269945F10);
    sub_24EB607E0(&qword_269945F18, &qword_269945F20);
    uint64_t v15 = v19;
    sub_24EC22F40();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v15);
  }
  else
  {
    LOBYTE(v22) = 0;
    sub_24EB959CC();
    sub_24EC22EC0();
    uint64_t v22 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269946C28);
    sub_24EB95A20(&qword_269946C30, (void (*)(void))sub_24EB95A90);
    sub_24EC22F40();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v7);
  }
  return (*v14)(v13, v10);
}

unint64_t sub_24EB95924()
{
  unint64_t result = qword_269946C10;
  if (!qword_269946C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946C10);
  }
  return result;
}

unint64_t sub_24EB95978()
{
  unint64_t result = qword_269946C18;
  if (!qword_269946C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946C18);
  }
  return result;
}

unint64_t sub_24EB959CC()
{
  unint64_t result = qword_269946C20;
  if (!qword_269946C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946C20);
  }
  return result;
}

uint64_t sub_24EB95A20(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946C28);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EB95A90()
{
  unint64_t result = qword_269946C38;
  if (!qword_269946C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946C38);
  }
  return result;
}

void *BrowseEditorialContent.init(from:)(void *a1)
{
  unint64_t result = sub_24EB95F00(a1);
  if (v1) {
    return (void *)v3;
  }
  return result;
}

void *sub_24EB95B08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_24EB95F00(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5 & 1;
  }
  return result;
}

uint64_t sub_24EB95B3C(void *a1)
{
  return BrowseEditorialContent.encode(to:)(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8));
}

uint64_t BrowseEditorialContent.hash(into:)(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    sub_24EC23000();
    return sub_24EB61EF4(a1, a2);
  }
  else
  {
    sub_24EC23000();
    uint64_t v5 = *(void *)(a2 + 16);
    uint64_t result = sub_24EC23000();
    if (v5)
    {
      uint64_t v7 = a2 + 48;
      do
      {
        uint64_t v8 = *(void *)(v7 - 16);
        v7 += 24;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24EB61EF4(a1, v8);
        sub_24EC22AB0();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        --v5;
      }
      while (v5);
    }
  }
  return result;
}

uint64_t static BrowseEditorialContent.== infix(_:_:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if ((a2 & 1) == 0)
  {
    if ((a4 & 1) == 0) {
      return sub_24EB60AA4(a1, a3);
    }
    return 0;
  }
  if ((a4 & 1) == 0) {
    return 0;
  }
  return sub_24EB61540(a1, a3);
}

uint64_t BrowseEditorialContent.hashValue.getter(uint64_t a1, char a2)
{
  char v3 = a2 & 1;
  sub_24EC22FF0();
  BrowseEditorialContent.hash(into:)((uint64_t)v5, a1, v3);
  return sub_24EC23030();
}

uint64_t sub_24EB95CA4()
{
  uint64_t v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  sub_24EC22FF0();
  BrowseEditorialContent.hash(into:)((uint64_t)v4, v1, v2);
  return sub_24EC23030();
}

uint64_t sub_24EB95CF4(uint64_t a1)
{
  return BrowseEditorialContent.hash(into:)(a1, *(void *)v1, *(unsigned char *)(v1 + 8));
}

uint64_t sub_24EB95D00()
{
  uint64_t v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  sub_24EC22FF0();
  BrowseEditorialContent.hash(into:)((uint64_t)v4, v1, v2);
  return sub_24EC23030();
}

uint64_t sub_24EB95D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)a2;
  char v6 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (v6) {
      return sub_24EB61540(v4, v5);
    }
    return 0;
  }
  if (v6) {
    return 0;
  }
  return sub_24EB60AA4(v4, v5);
}

uint64_t sub_24EB95D80(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x49646570756F7267 && a2 == 0xEC000000736D6574;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D657449797A616CLL && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EB95E84(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24EB95EF4()
{
  return 12383;
}

void *sub_24EB95F00(void *a1)
{
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946C90);
  uint64_t v24 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  char v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946C98);
  uint64_t v23 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946CA0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  char v25 = a1;
  uint64_t v12 = __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_24EB95924();
  uint64_t v13 = v26;
  sub_24EC23040();
  if (!v13)
  {
    uint64_t v26 = v8;
    uint64_t v14 = sub_24EC22EA0();
    if (*(void *)(v14 + 16) == 1)
    {
      if (*(unsigned char *)(v14 + 32))
      {
        LOBYTE(v27) = 1;
        sub_24EB95978();
        sub_24EC22E00();
        __swift_instantiateConcreteTypeFromMangledName(&qword_269945F10);
        sub_24EB607E0(&qword_269945F30, &qword_269945F38);
        uint64_t v20 = v22;
        sub_24EC22E90();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v3, v20);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v7);
      }
      else
      {
        LOBYTE(v27) = 0;
        sub_24EB959CC();
        sub_24EC22E00();
        __swift_instantiateConcreteTypeFromMangledName(&qword_269946C28);
        sub_24EB95A20(&qword_269946CA8, (void (*)(void))sub_24EB96B60);
        sub_24EC22E90();
        uint64_t v19 = v26;
        (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v7);
      }
      uint64_t v12 = v27;
    }
    else
    {
      uint64_t v15 = sub_24EC22D50();
      swift_allocError();
      uint64_t v17 = v16;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269946108);
      *uint64_t v17 = &type metadata for BrowseEditorialContent;
      uint64_t v12 = v10;
      sub_24EC22E10();
      sub_24EC22D40();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, *MEMORY[0x263F8DCB0], v15);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v7);
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return v12;
}

unint64_t sub_24EB96484()
{
  unint64_t result = qword_269946C40;
  if (!qword_269946C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946C40);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for BrowseEditorialContent(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for BrowseEditorialContent()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for BrowseEditorialContent(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for BrowseEditorialContent(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BrowseEditorialContent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BrowseEditorialContent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24EB96638(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_24EB96640(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for BrowseEditorialContent()
{
  return &type metadata for BrowseEditorialContent;
}

unsigned char *storeEnumTagSinglePayload for BrowseEditorialContent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB96728);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseEditorialContent.CodingKeys()
{
  return &type metadata for BrowseEditorialContent.CodingKeys;
}

ValueMetadata *type metadata accessor for BrowseEditorialContent.GroupedItemsCodingKeys()
{
  return &type metadata for BrowseEditorialContent.GroupedItemsCodingKeys;
}

unsigned char *_s15FitnessBrowsing22BrowseEditorialContentO22GroupedItemsCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EB96810);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseEditorialContent.LazyItemsCodingKeys()
{
  return &type metadata for BrowseEditorialContent.LazyItemsCodingKeys;
}

unint64_t sub_24EB9684C()
{
  unint64_t result = qword_269946C48;
  if (!qword_269946C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946C48);
  }
  return result;
}

unint64_t sub_24EB968A4()
{
  unint64_t result = qword_269946C50;
  if (!qword_269946C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946C50);
  }
  return result;
}

unint64_t sub_24EB968FC()
{
  unint64_t result = qword_269946C58;
  if (!qword_269946C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946C58);
  }
  return result;
}

unint64_t sub_24EB96954()
{
  unint64_t result = qword_269946C60;
  if (!qword_269946C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946C60);
  }
  return result;
}

unint64_t sub_24EB969AC()
{
  unint64_t result = qword_269946C68;
  if (!qword_269946C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946C68);
  }
  return result;
}

unint64_t sub_24EB96A04()
{
  unint64_t result = qword_269946C70;
  if (!qword_269946C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946C70);
  }
  return result;
}

unint64_t sub_24EB96A5C()
{
  unint64_t result = qword_269946C78;
  if (!qword_269946C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946C78);
  }
  return result;
}

unint64_t sub_24EB96AB4()
{
  unint64_t result = qword_269946C80;
  if (!qword_269946C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946C80);
  }
  return result;
}

unint64_t sub_24EB96B0C()
{
  unint64_t result = qword_269946C88;
  if (!qword_269946C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946C88);
  }
  return result;
}

unint64_t sub_24EB96B60()
{
  unint64_t result = qword_269946CB0;
  if (!qword_269946CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946CB0);
  }
  return result;
}

uint64_t BrowseDetailArtworkItem.artworkDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24EB96BC8(v1, a1);
}

uint64_t sub_24EB96BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t BrowseDetailArtworkItem.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for BrowseDetailArtworkItem() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for BrowseDetailArtworkItem()
{
  uint64_t result = qword_26B1D8978;
  if (!qword_26B1D8978) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t BrowseDetailArtworkItem.init(artworkDescriptor:identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_24EB96D08(a1, a4);
  uint64_t result = type metadata accessor for BrowseDetailArtworkItem();
  uint64_t v8 = (void *)(a4 + *(int *)(result + 20));
  *uint64_t v8 = a2;
  v8[1] = a3;
  return result;
}

uint64_t sub_24EB96D08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EB96D70(char a1)
{
  if (a1) {
    return 0x696669746E656469;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_24EB96DB0()
{
  return sub_24EB96D70(*v0);
}

uint64_t sub_24EB96DB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB982D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB96DE0(uint64_t a1)
{
  unint64_t v2 = sub_24EB97000();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB96E1C(uint64_t a1)
{
  unint64_t v2 = sub_24EB97000();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseDetailArtworkItem.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946CB8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB97000();
  sub_24EC23050();
  v8[15] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
  sub_24EB7EA6C(&qword_2699465E8);
  sub_24EC22F40();
  if (!v1)
  {
    type metadata accessor for BrowseDetailArtworkItem();
    v8[14] = 1;
    sub_24EC22F00();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24EB97000()
{
  unint64_t result = qword_269946CC0;
  if (!qword_269946CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946CC0);
  }
  return result;
}

uint64_t BrowseDetailArtworkItem.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
  MEMORY[0x270FA5388](v4);
  char v25 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946CC8);
  uint64_t v24 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for BrowseDetailArtworkItem();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB97000();
  sub_24EC23040();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v22 = v8;
  uint64_t v11 = (uint64_t)v10;
  uint64_t v12 = v24;
  char v28 = 0;
  sub_24EB7EA6C(&qword_269946660);
  uint64_t v14 = (uint64_t)v25;
  uint64_t v13 = v26;
  sub_24EC22E90();
  sub_24EB96D08(v14, v11);
  char v27 = 1;
  uint64_t v15 = sub_24EC22E50();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v13);
  uint64_t v18 = v23;
  uint64_t v19 = (uint64_t *)(v11 + *(int *)(v22 + 20));
  *uint64_t v19 = v15;
  v19[1] = v17;
  sub_24EB97390(v11, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_24EB973F4(v11);
}

uint64_t sub_24EB97330(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EB97390(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseDetailArtworkItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EB973F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BrowseDetailArtworkItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EB97450@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BrowseDetailArtworkItem.init(from:)(a1, a2);
}

uint64_t sub_24EB97468(void *a1)
{
  return BrowseDetailArtworkItem.encode(to:)(a1);
}

uint64_t BrowseDetailArtworkItem.hash(into:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
  sub_24EC21E20();
  type metadata accessor for BrowseDetailArtworkItem();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  return swift_bridgeObjectRelease();
}

uint64_t static BrowseDetailArtworkItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for BrowseArtwork();
  sub_24EB97820(&qword_26B1D86D0, (void (*)(uint64_t))type metadata accessor for BrowseArtwork);
  if ((sub_24EC21E10() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for BrowseDetailArtworkItem() + 20);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a1 + v4 + 8);
  uint64_t v7 = (void *)(a2 + v4);
  if (v5 == *v7 && v6 == v7[1]) {
    return 1;
  }
  return sub_24EC22F70();
}

uint64_t BrowseDetailArtworkItem.hashValue.getter()
{
  return sub_24EC23030();
}

uint64_t sub_24EB97660()
{
  return sub_24EC23030();
}

uint64_t sub_24EB976E0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
  sub_24EC21E20();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EB9775C()
{
  return sub_24EC23030();
}

uint64_t sub_24EB977D8()
{
  return sub_24EB97820(&qword_269946CD0, (void (*)(uint64_t))type metadata accessor for BrowseDetailArtworkItem);
}

uint64_t sub_24EB97820(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EB97868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for BrowseArtwork();
  sub_24EB97820(&qword_26B1D86D0, (void (*)(uint64_t))type metadata accessor for BrowseArtwork);
  if ((sub_24EC21E10() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  uint64_t v9 = (void *)(a2 + v6);
  if (v7 == *v9 && v8 == v9[1]) {
    return 1;
  }
  return sub_24EC22F70();
}

uint64_t *initializeBufferWithCopyOfBuffer for BrowseDetailArtworkItem(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v7 = (uint64_t *)&unk_2699466D0;
    }
    else {
      uint64_t v7 = (uint64_t *)&unk_2699466C8;
    }
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(v7);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for BrowseDetailArtworkItem(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v2 = (uint64_t *)&unk_2699466D0;
  }
  else {
    uint64_t v2 = (uint64_t *)&unk_2699466C8;
  }
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(v2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BrowseDetailArtworkItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v6 = (uint64_t *)&unk_2699466D0;
  }
  else {
    uint64_t v6 = (uint64_t *)&unk_2699466C8;
  }
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BrowseDetailArtworkItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EB97330(a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v6 = (uint64_t *)&unk_2699466D0;
    }
    else {
      uint64_t v6 = (uint64_t *)&unk_2699466C8;
    }
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  void *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for BrowseDetailArtworkItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v6 = (uint64_t *)&unk_2699466D0;
  }
  else {
    uint64_t v6 = (uint64_t *)&unk_2699466C8;
  }
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
  swift_storeEnumTagMultiPayload();
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for BrowseDetailArtworkItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EB97330(a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v6 = (uint64_t *)&unk_2699466D0;
    }
    else {
      uint64_t v6 = (uint64_t *)&unk_2699466C8;
    }
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  void *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BrowseDetailArtworkItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EB97E98);
}

uint64_t sub_24EB97E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for BrowseDetailArtworkItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EB97F74);
}

uint64_t sub_24EB97F74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

void sub_24EB98038()
{
  sub_24EB848A0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for BrowseDetailArtworkItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB98198);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseDetailArtworkItem.CodingKeys()
{
  return &type metadata for BrowseDetailArtworkItem.CodingKeys;
}

unint64_t sub_24EB981D4()
{
  unint64_t result = qword_269946CD8;
  if (!qword_269946CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946CD8);
  }
  return result;
}

unint64_t sub_24EB9822C()
{
  unint64_t result = qword_269946CE0;
  if (!qword_269946CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946CE0);
  }
  return result;
}

unint64_t sub_24EB98284()
{
  unint64_t result = qword_269946CE8;
  if (!qword_269946CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946CE8);
  }
  return result;
}

uint64_t sub_24EB982D8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000024EC30D20 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EB983D0(char a1)
{
  if (a1) {
    return 0x6F436C6961746564;
  }
  else {
    return 0x5379616C70736964;
  }
}

uint64_t sub_24EB9841C()
{
  return sub_24EB983D0(*v0);
}

uint64_t sub_24EB98424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB9B7A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB9844C(uint64_t a1)
{
  unint64_t v2 = sub_24EB98A24();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB98488(uint64_t a1)
{
  unint64_t v2 = sub_24EB98A24();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB984C4(uint64_t a1)
{
  unint64_t v2 = sub_24EB98ADC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB98500(uint64_t a1)
{
  unint64_t v2 = sub_24EB98ADC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB9853C(uint64_t a1)
{
  unint64_t v2 = sub_24EB98B30();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB98578(uint64_t a1)
{
  unint64_t v2 = sub_24EB98B30();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseInsetBehaviorProviderType.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946CF0);
  uint64_t v28 = *(void *)(v2 - 8);
  uint64_t v29 = v2;
  MEMORY[0x270FA5388](v2);
  char v27 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for BrowseDetailContent();
  MEMORY[0x270FA5388](v25);
  uint64_t v26 = (uint64_t)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946CF8);
  uint64_t v23 = *(void *)(v5 - 8);
  uint64_t v24 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for BrowseInsetBehaviorProviderType();
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946D00);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB98A24();
  sub_24EC23050();
  sub_24EB98A78(v30, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = (uint64_t)v10;
    uint64_t v16 = v26;
    sub_24EB991A8(v15, v26, (uint64_t (*)(void))type metadata accessor for BrowseDetailContent);
    char v33 = 1;
    sub_24EB98ADC();
    uint64_t v17 = v27;
    sub_24EC22EC0();
    sub_24EB999E0(&qword_269946D18, (void (*)(uint64_t))type metadata accessor for BrowseDetailContent);
    uint64_t v18 = v29;
    sub_24EC22F40();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v18);
    sub_24EB9A9A0(v16, (uint64_t (*)(void))type metadata accessor for BrowseDetailContent);
  }
  else
  {
    char v19 = *v10;
    char v32 = 0;
    sub_24EB98B30();
    sub_24EC22EC0();
    char v31 = v19;
    sub_24EB7DBAC();
    uint64_t v20 = v24;
    sub_24EC22F40();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t type metadata accessor for BrowseInsetBehaviorProviderType()
{
  uint64_t result = qword_269946D50;
  if (!qword_269946D50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24EB98A24()
{
  unint64_t result = qword_269946D08;
  if (!qword_269946D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946D08);
  }
  return result;
}

uint64_t sub_24EB98A78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseInsetBehaviorProviderType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24EB98ADC()
{
  unint64_t result = qword_269946D10;
  if (!qword_269946D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946D10);
  }
  return result;
}

unint64_t sub_24EB98B30()
{
  unint64_t result = qword_269946D20;
  if (!qword_269946D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946D20);
  }
  return result;
}

uint64_t BrowseInsetBehaviorProviderType.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946D28);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  uint64_t v44 = v4;
  MEMORY[0x270FA5388](v3);
  char v48 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946D30);
  uint64_t v42 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v46 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946D38);
  uint64_t v45 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BrowseInsetBehaviorProviderType();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v37 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v37 - v17;
  uint64_t v19 = a1[3];
  char v49 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_24EB98A24();
  uint64_t v20 = v50;
  sub_24EC23040();
  if (v20) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  }
  uint64_t v38 = v16;
  uint64_t v39 = v18;
  uint64_t v40 = v13;
  uint64_t v21 = v46;
  uint64_t v22 = v47;
  uint64_t v23 = v48;
  uint64_t v50 = v10;
  uint64_t v24 = sub_24EC22EA0();
  uint64_t v25 = v9;
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v31 = sub_24EC22D50();
    swift_allocError();
    char v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269946108);
    *char v33 = v50;
    sub_24EC22E10();
    sub_24EC22D40();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v31 - 8) + 104))(v33, *MEMORY[0x263F8DCB0], v31);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v9, v7);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  }
  if (*(unsigned char *)(v24 + 32))
  {
    char v53 = 1;
    sub_24EB98ADC();
    uint64_t v26 = v23;
    sub_24EC22E00();
    type metadata accessor for BrowseDetailContent();
    sub_24EB999E0(&qword_269946D40, (void (*)(uint64_t))type metadata accessor for BrowseDetailContent);
    uint64_t v27 = (uint64_t)v40;
    uint64_t v28 = v43;
    sub_24EC22E90();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v26, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v25, v7);
    uint64_t v29 = (uint64_t)v49;
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = v27;
  }
  else
  {
    char v52 = 0;
    sub_24EB98B30();
    sub_24EC22E00();
    sub_24EB7EBCC();
    sub_24EC22E90();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v21, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v9, v7);
    uint64_t v29 = (uint64_t)v49;
    uint64_t v35 = v38;
    *uint64_t v38 = v51;
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = (uint64_t)v35;
  }
  uint64_t v36 = (uint64_t)v39;
  sub_24EB991A8(v30, (uint64_t)v39, (uint64_t (*)(void))type metadata accessor for BrowseInsetBehaviorProviderType);
  sub_24EB991A8(v36, v41, (uint64_t (*)(void))type metadata accessor for BrowseInsetBehaviorProviderType);
  return __swift_destroy_boxed_opaque_existential_1(v29);
}

uint64_t sub_24EB991A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EB99210@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BrowseInsetBehaviorProviderType.init(from:)(a1, a2);
}

uint64_t sub_24EB99228(void *a1)
{
  return BrowseInsetBehaviorProviderType.encode(to:)(a1);
}

uint64_t BrowseInsetBehaviorProviderType.hash(into:)()
{
  uint64_t v1 = type metadata accessor for BrowseDetailContent();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for BrowseInsetBehaviorProviderType();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EB98A78(v0, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24EB991A8((uint64_t)v6, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for BrowseDetailContent);
    sub_24EC23000();
    BrowseDetailContent.hash(into:)();
    return sub_24EB9A9A0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for BrowseDetailContent);
  }
  else
  {
    char v8 = *v6;
    sub_24EC23000();
    BrowseDisplayStyle.rawValue.getter(v8);
    sub_24EC22AB0();
    return swift_bridgeObjectRelease();
  }
}

uint64_t BrowseInsetBehaviorProviderType.hashValue.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for BrowseDetailContent();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BrowseInsetBehaviorProviderType();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EC22FF0();
  sub_24EB98A78(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24EB991A8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for BrowseDetailContent);
    sub_24EC23000();
    BrowseDetailContent.hash(into:)();
    sub_24EB9A9A0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for BrowseDetailContent);
  }
  else
  {
    char v8 = *v7;
    sub_24EC23000();
    BrowseDisplayStyle.rawValue.getter(v8);
    sub_24EC22AB0();
    swift_bridgeObjectRelease();
  }
  return sub_24EC23030();
}

uint64_t sub_24EB99528()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for BrowseDetailContent();
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EC22FF0();
  sub_24EB98A78(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24EB991A8((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for BrowseDetailContent);
    sub_24EC23000();
    BrowseDetailContent.hash(into:)();
    sub_24EB9A9A0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for BrowseDetailContent);
  }
  else
  {
    char v8 = *v7;
    sub_24EC23000();
    BrowseDisplayStyle.rawValue.getter(v8);
    sub_24EC22AB0();
    swift_bridgeObjectRelease();
  }
  return sub_24EC23030();
}

uint64_t _s15FitnessBrowsing31BrowseInsetBehaviorProviderTypeO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseDetailContent();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for BrowseInsetBehaviorProviderType();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946DA8);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = &v16[*(int *)(v14 + 56)];
  sub_24EB98A78(a1, (uint64_t)v16);
  sub_24EB98A78(a2, (uint64_t)v17);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_24EB98A78((uint64_t)v16, (uint64_t)v12);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      char v19 = *v17;
      uint64_t v20 = BrowseDisplayStyle.rawValue.getter(*v12);
      uint64_t v22 = v21;
      if (v20 == BrowseDisplayStyle.rawValue.getter(v19) && v22 == v23)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v25 = sub_24EC22F70();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v25 & 1) == 0)
        {
          sub_24EB9A9A0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for BrowseInsetBehaviorProviderType);
LABEL_13:
          char v18 = 0;
          return v18 & 1;
        }
      }
      sub_24EB9A9A0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for BrowseInsetBehaviorProviderType);
      char v18 = 1;
      return v18 & 1;
    }
LABEL_12:
    sub_24EB9B8BC((uint64_t)v16);
    goto LABEL_13;
  }
  sub_24EB98A78((uint64_t)v16, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_24EB9A9A0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BrowseDetailContent);
    goto LABEL_12;
  }
  sub_24EB991A8((uint64_t)v17, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for BrowseDetailContent);
  char v18 = static BrowseDetailContent.== infix(_:_:)(v10, v6);
  sub_24EB9A9A0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for BrowseDetailContent);
  sub_24EB9A9A0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BrowseDetailContent);
  sub_24EB9A9A0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for BrowseInsetBehaviorProviderType);
  return v18 & 1;
}

uint64_t sub_24EB99998()
{
  return sub_24EB999E0(&qword_269946D48, (void (*)(uint64_t))type metadata accessor for BrowseInsetBehaviorProviderType);
}

uint64_t sub_24EB999E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for BrowseInsetBehaviorProviderType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for BrowseDetailContent();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v13 = sub_24EC21D10();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        uint64_t v14 = type metadata accessor for BrowseDetailVideoLinkItem();
        uint64_t v15 = *(int *)(v14 + 20);
        uint64_t v16 = (uint64_t *)((char *)a1 + v15);
        uint64_t v17 = (uint64_t *)((char *)a2 + v15);
        uint64_t v18 = v17[1];
        void *v16 = *v17;
        v16[1] = v18;
        uint64_t v19 = *(int *)(v14 + 24);
        uint64_t v20 = (uint64_t *)((char *)a1 + v19);
        uint64_t v21 = (uint64_t *)((char *)a2 + v19);
        uint64_t v22 = *(uint64_t *)((char *)a2 + v19);
        uint64_t v23 = v21[1];
        *uint64_t v20 = v22;
        v20[1] = v23;
        uint64_t v24 = v21[3];
        v20[2] = v21[2];
        v20[3] = v24;
        uint64_t v25 = *(int *)(type metadata accessor for VideoAsset() + 24);
        uint64_t v42 = (char *)v20 + v25;
        uint64_t v26 = (char *)v21 + v25;
        uint64_t v27 = sub_24EC21D30();
        uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v28(v42, v26, v27);
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v8 = sub_24EC21D10();
          uint64_t v9 = *(void *)(v8 - 8);
          uint64_t v10 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48);
          uint64_t v41 = v9;
          if (v10(a2, 1, v8))
          {
            uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
            memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
          }
          else
          {
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
            (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
          }
          uint64_t v32 = type metadata accessor for BrowseDetailTextItem();
          uint64_t v33 = *(int *)(v32 + 20);
          uint64_t v34 = (char *)a1 + v33;
          uint64_t v35 = (char *)a2 + v33;
          if (v10((uint64_t *)((char *)a2 + v33), 1, v8))
          {
            uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
            memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v34, v35, v8);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v34, 0, 1, v8);
          }
          uint64_t v31 = *(int *)(v32 + 24);
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v29 = (uint64_t *)&unk_2699466D0;
          }
          else {
            uint64_t v29 = (uint64_t *)&unk_2699466C8;
          }
          uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(v29);
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
          swift_storeEnumTagMultiPayload();
          uint64_t v31 = *(int *)(type metadata accessor for BrowseDetailArtworkItem() + 20);
        }
        uint64_t v37 = (uint64_t *)((char *)a1 + v31);
        uint64_t v38 = (uint64_t *)((char *)a2 + v31);
        uint64_t v39 = v38[1];
        *uint64_t v37 = *v38;
        v37[1] = v39;
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t destroy for BrowseInsetBehaviorProviderType(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    type metadata accessor for BrowseDetailContent();
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 2)
    {
      uint64_t v5 = sub_24EC21D10();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
      uint64_t v6 = type metadata accessor for BrowseDetailVideoLinkItem();
      swift_bridgeObjectRelease();
      uint64_t v7 = a1 + *(int *)(v6 + 24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = v7 + *(int *)(type metadata accessor for VideoAsset() + 24);
      uint64_t v9 = sub_24EC21D30();
      uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
      return v10(v8, v9);
    }
    else
    {
      if (result == 1)
      {
        uint64_t v11 = sub_24EC21D10();
        uint64_t v12 = *(void *)(v11 - 8);
        uint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
        if (!v13(a1, 1, v11)) {
          (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
        }
        uint64_t v14 = a1 + *(int *)(type metadata accessor for BrowseDetailTextItem() + 20);
        if (!v13(v14, 1, v11)) {
          (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v11);
        }
      }
      else
      {
        if (result) {
          return result;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v3 = (uint64_t *)&unk_2699466D0;
        }
        else {
          uint64_t v3 = (uint64_t *)&unk_2699466C8;
        }
        uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(v3);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
        type metadata accessor for BrowseDetailArtworkItem();
      }
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

char *initializeWithCopy for BrowseInsetBehaviorProviderType(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for BrowseDetailContent();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v11 = sub_24EC21D10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = type metadata accessor for BrowseDetailVideoLinkItem();
      uint64_t v13 = *(int *)(v12 + 20);
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = *((void *)v15 + 1);
      *(void *)uint64_t v14 = *(void *)v15;
      *((void *)v14 + 1) = v16;
      uint64_t v17 = *(int *)(v12 + 24);
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = *(void *)&a2[v17];
      uint64_t v21 = *((void *)v19 + 1);
      *(void *)uint64_t v18 = v20;
      *((void *)v18 + 1) = v21;
      uint64_t v22 = *((void *)v19 + 3);
      *((void *)v18 + 2) = *((void *)v19 + 2);
      *((void *)v18 + 3) = v22;
      uint64_t v23 = *(int *)(type metadata accessor for VideoAsset() + 24);
      uint64_t v40 = &v18[v23];
      uint64_t v24 = &v19[v23];
      uint64_t v25 = sub_24EC21D30();
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26(v40, v24, v25);
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v7 = sub_24EC21D10();
        uint64_t v8 = *(void *)(v7 - 8);
        uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
        uint64_t v39 = v8;
        if (v9(a2, 1, v7))
        {
          uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
          memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        }
        uint64_t v30 = type metadata accessor for BrowseDetailTextItem();
        uint64_t v31 = *(int *)(v30 + 20);
        uint64_t v32 = &a1[v31];
        uint64_t v33 = &a2[v31];
        if (v9(&a2[v31], 1, v7))
        {
          uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
          memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v32, v33, v7);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v32, 0, 1, v7);
        }
        uint64_t v29 = *(int *)(v30 + 24);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v27 = (uint64_t *)&unk_2699466D0;
        }
        else {
          uint64_t v27 = (uint64_t *)&unk_2699466C8;
        }
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(v27);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
        swift_storeEnumTagMultiPayload();
        uint64_t v29 = *(int *)(type metadata accessor for BrowseDetailArtworkItem() + 20);
      }
      uint64_t v35 = &a1[v29];
      uint64_t v36 = &a2[v29];
      uint64_t v37 = *((void *)v36 + 1);
      *(void *)uint64_t v35 = *(void *)v36;
      *((void *)v35 + 1) = v37;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithCopy for BrowseInsetBehaviorProviderType(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EB9A9A0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for BrowseInsetBehaviorProviderType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for BrowseDetailContent();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v11 = sub_24EC21D10();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        uint64_t v12 = type metadata accessor for BrowseDetailVideoLinkItem();
        uint64_t v13 = *(int *)(v12 + 20);
        uint64_t v14 = &a1[v13];
        uint64_t v15 = &a2[v13];
        *(void *)uint64_t v14 = *(void *)v15;
        *((void *)v14 + 1) = *((void *)v15 + 1);
        uint64_t v16 = *(int *)(v12 + 24);
        uint64_t v17 = &a1[v16];
        uint64_t v18 = &a2[v16];
        *(void *)uint64_t v17 = *(void *)&a2[v16];
        *((void *)v17 + 1) = *(void *)&a2[v16 + 8];
        *((void *)v17 + 2) = *(void *)&a2[v16 + 16];
        *((void *)v17 + 3) = *(void *)&a2[v16 + 24];
        uint64_t v19 = *(int *)(type metadata accessor for VideoAsset() + 24);
        uint64_t v35 = &v17[v19];
        uint64_t v20 = &v18[v19];
        uint64_t v21 = sub_24EC21D30();
        uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v22(v35, v20, v21);
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v7 = sub_24EC21D10();
          uint64_t v8 = *(void *)(v7 - 8);
          uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
          uint64_t v34 = v8;
          if (v9(a2, 1, v7))
          {
            uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
            memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
          }
          uint64_t v26 = type metadata accessor for BrowseDetailTextItem();
          uint64_t v27 = *(int *)(v26 + 20);
          uint64_t v28 = &a1[v27];
          uint64_t v29 = &a2[v27];
          if (v9(&a2[v27], 1, v7))
          {
            uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
            memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v28, v29, v7);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v28, 0, 1, v7);
          }
          uint64_t v25 = *(int *)(v26 + 24);
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v23 = (uint64_t *)&unk_2699466D0;
          }
          else {
            uint64_t v23 = (uint64_t *)&unk_2699466C8;
          }
          uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(v23);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
          swift_storeEnumTagMultiPayload();
          uint64_t v25 = *(int *)(type metadata accessor for BrowseDetailArtworkItem() + 20);
        }
        uint64_t v31 = &a1[v25];
        uint64_t v32 = &a2[v25];
        *(void *)uint64_t v31 = *(void *)v32;
        *((void *)v31 + 1) = *((void *)v32 + 1);
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24EB9A9A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *initializeWithTake for BrowseInsetBehaviorProviderType(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for BrowseDetailContent();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = sub_24EC21D10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      uint64_t v11 = type metadata accessor for BrowseDetailVideoLinkItem();
      *(_OWORD *)&a1[*(int *)(v11 + 20)] = *(_OWORD *)&a2[*(int *)(v11 + 20)];
      uint64_t v12 = *(int *)(v11 + 24);
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      long long v15 = *(_OWORD *)&a2[v12 + 16];
      *(_OWORD *)uint64_t v13 = *(_OWORD *)&a2[v12];
      *((_OWORD *)v13 + 1) = v15;
      uint64_t v16 = *(int *)(type metadata accessor for VideoAsset() + 24);
      uint64_t v17 = &v13[v16];
      uint64_t v18 = &v14[v16];
      uint64_t v19 = sub_24EC21D30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v7 = sub_24EC21D10();
        uint64_t v8 = *(void *)(v7 - 8);
        uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
        uint64_t v29 = v8;
        if (v30(a2, 1, v7))
        {
          uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        }
        uint64_t v23 = type metadata accessor for BrowseDetailTextItem();
        uint64_t v24 = *(int *)(v23 + 20);
        uint64_t v25 = &a1[v24];
        uint64_t v26 = &a2[v24];
        if (v30(&a2[v24], 1, v7))
        {
          uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
          memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v25, v26, v7);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v7);
        }
        uint64_t v22 = *(int *)(v23 + 24);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v20 = (uint64_t *)&unk_2699466D0;
        }
        else {
          uint64_t v20 = (uint64_t *)&unk_2699466C8;
        }
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(v20);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
        swift_storeEnumTagMultiPayload();
        uint64_t v22 = *(int *)(type metadata accessor for BrowseDetailArtworkItem() + 20);
      }
      *(_OWORD *)&a1[v22] = *(_OWORD *)&a2[v22];
    }
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for BrowseInsetBehaviorProviderType(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EB9A9A0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for BrowseInsetBehaviorProviderType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for BrowseDetailContent();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v10 = sub_24EC21D10();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        uint64_t v11 = type metadata accessor for BrowseDetailVideoLinkItem();
        *(_OWORD *)&a1[*(int *)(v11 + 20)] = *(_OWORD *)&a2[*(int *)(v11 + 20)];
        uint64_t v12 = *(int *)(v11 + 24);
        uint64_t v13 = &a1[v12];
        uint64_t v14 = &a2[v12];
        long long v15 = *(_OWORD *)&a2[v12 + 16];
        *(_OWORD *)uint64_t v13 = *(_OWORD *)&a2[v12];
        *((_OWORD *)v13 + 1) = v15;
        uint64_t v16 = *(int *)(type metadata accessor for VideoAsset() + 24);
        uint64_t v17 = &v13[v16];
        uint64_t v18 = &v14[v16];
        uint64_t v19 = sub_24EC21D30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v7 = sub_24EC21D10();
          uint64_t v8 = *(void *)(v7 - 8);
          uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
          uint64_t v29 = v8;
          if (v30(a2, 1, v7))
          {
            uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
            memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
          }
          uint64_t v23 = type metadata accessor for BrowseDetailTextItem();
          uint64_t v24 = *(int *)(v23 + 20);
          uint64_t v25 = &a1[v24];
          uint64_t v26 = &a2[v24];
          if (v30(&a2[v24], 1, v7))
          {
            uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
            memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v25, v26, v7);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v7);
          }
          uint64_t v22 = *(int *)(v23 + 24);
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v20 = (uint64_t *)&unk_2699466D0;
          }
          else {
            uint64_t v20 = (uint64_t *)&unk_2699466C8;
          }
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(v20);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
          swift_storeEnumTagMultiPayload();
          uint64_t v22 = *(int *)(type metadata accessor for BrowseDetailArtworkItem() + 20);
        }
        *(_OWORD *)&a1[v22] = *(_OWORD *)&a2[v22];
      }
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for BrowseLazyItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for BrowseLazyItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_24EB9B200()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24EB9B210()
{
  uint64_t result = type metadata accessor for BrowseDetailContent();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BrowseInsetBehaviorProviderType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB9B370);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseInsetBehaviorProviderType.CodingKeys()
{
  return &type metadata for BrowseInsetBehaviorProviderType.CodingKeys;
}

ValueMetadata *type metadata accessor for BrowseInsetBehaviorProviderType.DisplayStyleCodingKeys()
{
  return &type metadata for BrowseInsetBehaviorProviderType.DisplayStyleCodingKeys;
}

unsigned char *_s15FitnessBrowsing31BrowseInsetBehaviorProviderTypeO22DisplayStyleCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EB9B458);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseInsetBehaviorProviderType.DetailContentCodingKeys()
{
  return &type metadata for BrowseInsetBehaviorProviderType.DetailContentCodingKeys;
}

unint64_t sub_24EB9B494()
{
  unint64_t result = qword_269946D60;
  if (!qword_269946D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946D60);
  }
  return result;
}

unint64_t sub_24EB9B4EC()
{
  unint64_t result = qword_269946D68;
  if (!qword_269946D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946D68);
  }
  return result;
}

unint64_t sub_24EB9B544()
{
  unint64_t result = qword_269946D70;
  if (!qword_269946D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946D70);
  }
  return result;
}

unint64_t sub_24EB9B59C()
{
  unint64_t result = qword_269946D78;
  if (!qword_269946D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946D78);
  }
  return result;
}

unint64_t sub_24EB9B5F4()
{
  unint64_t result = qword_269946D80;
  if (!qword_269946D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946D80);
  }
  return result;
}

unint64_t sub_24EB9B64C()
{
  unint64_t result = qword_269946D88;
  if (!qword_269946D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946D88);
  }
  return result;
}

unint64_t sub_24EB9B6A4()
{
  unint64_t result = qword_269946D90;
  if (!qword_269946D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946D90);
  }
  return result;
}

unint64_t sub_24EB9B6FC()
{
  unint64_t result = qword_269946D98;
  if (!qword_269946D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946D98);
  }
  return result;
}

unint64_t sub_24EB9B754()
{
  unint64_t result = qword_269946DA0;
  if (!qword_269946DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946DA0);
  }
  return result;
}

uint64_t sub_24EB9B7A8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x5379616C70736964 && a2 == 0xEC000000656C7974;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F436C6961746564 && a2 == 0xED0000746E65746ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EB9B8BC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946DA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t EditorialCollectionDetail.backgroundArtwork.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24EB741CC(v1, a1, &qword_269946778);
}

uint64_t EditorialCollectionDetail.editorialCollection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EditorialCollectionDetail();
  return sub_24EB9CB1C(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))type metadata accessor for EditorialCollection);
}

uint64_t type metadata accessor for EditorialCollectionDetail()
{
  uint64_t result = qword_26B1D8A28;
  if (!qword_26B1D8A28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t EditorialCollectionDetail.sectionDescriptors.getter()
{
  type metadata accessor for EditorialCollectionDetail();
  return swift_bridgeObjectRetain();
}

uint64_t EditorialCollectionDetail.init(backgroundArtwork:editorialCollection:sectionDescriptors:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_24EB9BA80(a1, a4);
  uint64_t v7 = type metadata accessor for EditorialCollectionDetail();
  uint64_t result = sub_24EB9F06C(a2, a4 + *(int *)(v7 + 20), (uint64_t (*)(void))type metadata accessor for EditorialCollection);
  *(void *)(a4 + *(int *)(v7 + 24)) = a3;
  return result;
}

uint64_t sub_24EB9BA80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946778);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24EB9BAE8(char a1)
{
  unint64_t result = 0xD000000000000011;
  if (a1)
  {
    if (a1 == 1) {
      return 0xD000000000000013;
    }
    else {
      return 0xD000000000000012;
    }
  }
  return result;
}

unint64_t sub_24EB9BB44()
{
  return sub_24EB9BAE8(*v0);
}

uint64_t sub_24EB9BB4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB9EF28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB9BB74(uint64_t a1)
{
  unint64_t v2 = sub_24EB9BE78();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB9BBB0(uint64_t a1)
{
  unint64_t v2 = sub_24EB9BE78();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EditorialCollectionDetail.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946DB0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB9BE78();
  sub_24EC23050();
  char v14 = 0;
  type metadata accessor for BrowseArtwork();
  sub_24EB9F0D4(&qword_26B1D86D8, (void (*)(uint64_t))type metadata accessor for BrowseArtwork);
  sub_24EC22EF0();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for EditorialCollectionDetail();
    char v13 = 1;
    type metadata accessor for EditorialCollection();
    sub_24EB9F0D4(&qword_269946DC0, (void (*)(uint64_t))type metadata accessor for EditorialCollection);
    sub_24EC22F40();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 24));
    v11[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269946DC8);
    sub_24EB9C34C(&qword_269946DD0, &qword_269946DD8);
    sub_24EC22F40();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_24EB9BE78()
{
  unint64_t result = qword_269946DB8;
  if (!qword_269946DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946DB8);
  }
  return result;
}

uint64_t EditorialCollectionDetail.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v3 = type metadata accessor for EditorialCollection();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946778);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946DE0);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for EditorialCollectionDetail();
  MEMORY[0x270FA5388](v12);
  char v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  uint64_t v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_24EB9BE78();
  uint64_t v23 = v11;
  uint64_t v16 = v25;
  sub_24EC23040();
  if (v16) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  }
  uint64_t v17 = v21;
  type metadata accessor for BrowseArtwork();
  char v29 = 0;
  sub_24EB9F0D4(&qword_26B1D86F0, (void (*)(uint64_t))type metadata accessor for BrowseArtwork);
  sub_24EC22E40();
  sub_24EB9BA80((uint64_t)v8, (uint64_t)v14);
  char v28 = 1;
  sub_24EB9F0D4(&qword_269946DE8, (void (*)(uint64_t))type metadata accessor for EditorialCollection);
  sub_24EC22E90();
  sub_24EB9F06C((uint64_t)v5, (uint64_t)&v14[*(int *)(v12 + 20)], (uint64_t (*)(void))type metadata accessor for EditorialCollection);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269946DC8);
  char v27 = 2;
  sub_24EB9C34C(&qword_269946DF0, &qword_269946DF8);
  sub_24EC22E90();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v23, v22);
  *(void *)&v14[*(int *)(v12 + 24)] = v26;
  sub_24EB9CB1C((uint64_t)v14, v20, (uint64_t (*)(void))type metadata accessor for EditorialCollectionDetail);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return sub_24EB9DFAC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for EditorialCollectionDetail);
}

uint64_t sub_24EB9C34C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946DC8);
    sub_24EB9F0D4(a2, (void (*)(uint64_t))type metadata accessor for BrowseSectionDescriptor);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EB9C3E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EditorialCollectionDetail.init(from:)(a1, a2);
}

uint64_t sub_24EB9C3F8(void *a1)
{
  return EditorialCollectionDetail.encode(to:)(a1);
}

uint64_t EditorialCollectionDetail.hash(into:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for BrowseSectionDescriptor();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EB9C640(a1);
  uint64_t v7 = type metadata accessor for EditorialCollectionDetail();
  EditorialCollection.hash(into:)();
  uint64_t v8 = *(void *)(v1 + *(int *)(v7 + 24));
  uint64_t result = sub_24EC23000();
  uint64_t v10 = *(void *)(v8 + 16);
  if (v10)
  {
    uint64_t v11 = v8 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v12 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_24EB9CB1C(v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for BrowseSectionDescriptor);
      BrowseSectionDescriptor.hash(into:)(a1);
      sub_24EB9DFAC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for BrowseSectionDescriptor);
      v11 += v12;
      --v10;
    }
    while (v10);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t EditorialCollectionDetail.hashValue.getter()
{
  sub_24EC22FF0();
  EditorialCollectionDetail.hash(into:)((uint64_t)v1);
  return sub_24EC23030();
}

uint64_t sub_24EB9C5BC()
{
  sub_24EC22FF0();
  EditorialCollectionDetail.hash(into:)((uint64_t)v1);
  return sub_24EC23030();
}

uint64_t sub_24EB9C600()
{
  sub_24EC22FF0();
  EditorialCollectionDetail.hash(into:)((uint64_t)v1);
  return sub_24EC23030();
}

uint64_t sub_24EB9C640(uint64_t a1)
{
  uint64_t v30 = a1;
  uint64_t v2 = sub_24EC21D30();
  uint64_t v28 = *(void *)(v2 - 8);
  uint64_t v29 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v26 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24EC21E00();
  uint64_t v27 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for BrowseArtwork();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946778);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EB741CC(v1, (uint64_t)v19, &qword_269946778);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v19, 1, v13) == 1) {
    return sub_24EC23010();
  }
  sub_24EB9F06C((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for BrowseArtwork);
  sub_24EC23010();
  sub_24EB741CC((uint64_t)v16, (uint64_t)v12, &qword_269946768);
  uint64_t v21 = v27;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v12, 1, v7) == 1)
  {
    sub_24EC23010();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v9, v12, v7);
    sub_24EC23010();
    sub_24EB9F0D4(&qword_269946E28, MEMORY[0x263F3E0F0]);
    sub_24EC22A20();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v7);
  }
  uint64_t v23 = v28;
  uint64_t v22 = v29;
  sub_24EB741CC((uint64_t)&v16[*(int *)(v13 + 20)], (uint64_t)v6, &qword_269946770);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v6, 1, v22) == 1)
  {
    sub_24EC23010();
  }
  else
  {
    uint64_t v24 = v26;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v26, v6, v22);
    sub_24EC23010();
    sub_24EB9F0D4(&qword_269946158, MEMORY[0x263F06EA8]);
    sub_24EC22A20();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v22);
  }
  return sub_24EB9DFAC((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for BrowseArtwork);
}

uint64_t sub_24EB9CB1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t _s15FitnessBrowsing25EditorialCollectionDetailV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseArtwork();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v30 = (uint64_t)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946E20);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946778);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v29 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v29 - v18;
  uint64_t v31 = a1;
  sub_24EB741CC(a1, (uint64_t)&v29 - v18, &qword_269946778);
  uint64_t v32 = a2;
  sub_24EB741CC(a2, (uint64_t)v17, &qword_269946778);
  uint64_t v20 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_24EB741CC((uint64_t)v19, (uint64_t)v10, &qword_269946778);
  sub_24EB741CC((uint64_t)v17, v20, &qword_269946778);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v10, 1, v4) == 1)
  {
    sub_24EB742F4((uint64_t)v17, &qword_269946778);
    sub_24EB742F4((uint64_t)v19, &qword_269946778);
    if (v21(v20, 1, v4) == 1)
    {
      sub_24EB742F4((uint64_t)v10, &qword_269946778);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_24EB741CC((uint64_t)v10, (uint64_t)v14, &qword_269946778);
  if (v21(v20, 1, v4) == 1)
  {
    sub_24EB742F4((uint64_t)v17, &qword_269946778);
    sub_24EB742F4((uint64_t)v19, &qword_269946778);
    sub_24EB9DFAC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for BrowseArtwork);
LABEL_6:
    sub_24EB742F4((uint64_t)v10, &qword_269946E20);
LABEL_10:
    char v27 = 0;
    return v27 & 1;
  }
  uint64_t v22 = v30;
  sub_24EB9F06C(v20, v30, (uint64_t (*)(void))type metadata accessor for BrowseArtwork);
  BOOL v23 = _s15FitnessBrowsing13BrowseArtworkV2eeoiySbAC_ACtFZ_0((uint64_t)v14, v22);
  sub_24EB9DFAC(v22, (uint64_t (*)(void))type metadata accessor for BrowseArtwork);
  sub_24EB742F4((uint64_t)v17, &qword_269946778);
  sub_24EB742F4((uint64_t)v19, &qword_269946778);
  sub_24EB9DFAC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for BrowseArtwork);
  sub_24EB742F4((uint64_t)v10, &qword_269946778);
  if (!v23) {
    goto LABEL_10;
  }
LABEL_8:
  uint64_t v24 = type metadata accessor for EditorialCollectionDetail();
  uint64_t v26 = v31;
  uint64_t v25 = v32;
  if ((_s15FitnessBrowsing19EditorialCollectionV2eeoiySbAC_ACtFZ_0((void *)(v31 + *(int *)(v24 + 20)), (void *)(v32 + *(int *)(v24 + 20))) & 1) == 0)goto LABEL_10; {
  char v27 = sub_24EB61AE0(*(void *)(v26 + *(int *)(v24 + 24)), *(void *)(v25 + *(int *)(v24 + 24)));
  }
  return v27 & 1;
}

uint64_t sub_24EB9CF40()
{
  return sub_24EB9F0D4(&qword_269946E00, (void (*)(uint64_t))type metadata accessor for EditorialCollectionDetail);
}

uint64_t *initializeBufferWithCopyOfBuffer for EditorialCollectionDetail(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    uint64_t v11 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for BrowseArtwork();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946778);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v12 = sub_24EC21E00();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v13 + 16))(a1, a2, v12);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
      }
      uint64_t v15 = *(int *)(v7 + 20);
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_24EC21D30();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v21 = *(int *)(a3 + 20);
    uint64_t v22 = (uint64_t *)((char *)a1 + v21);
    BOOL v23 = (char *)a2 + v21;
    uint64_t v24 = *(uint64_t *)((char *)a2 + v21 + 8);
    *uint64_t v22 = *(uint64_t *)((char *)a2 + v21);
    v22[1] = v24;
    uint64_t v25 = *(uint64_t *)((char *)a2 + v21 + 24);
    void v22[2] = *(uint64_t *)((char *)a2 + v21 + 16);
    v22[3] = v25;
    uint64_t v26 = *(uint64_t *)((char *)a2 + v21 + 40);
    v22[4] = *(uint64_t *)((char *)a2 + v21 + 32);
    v22[5] = v26;
    uint64_t v27 = *(uint64_t *)((char *)a2 + v21 + 56);
    v22[6] = *(uint64_t *)((char *)a2 + v21 + 48);
    v22[7] = v27;
    uint64_t v28 = *(int *)(type metadata accessor for EditorialCollection() + 32);
    uint64_t v33 = &v23[v28];
    uint64_t v34 = (char *)v22 + v28;
    uint64_t v29 = sub_24EC21D30();
    uint64_t v30 = a3;
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
    uint64_t v11 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v31(v34, v33, v29);
    *(uint64_t *)((char *)a1 + *(int *)(v30 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v30 + 24));
    swift_bridgeObjectRetain();
  }
  return v11;
}

uint64_t destroy for EditorialCollectionDetail(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseArtwork();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    uint64_t v5 = sub_24EC21E00();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    }
    uint64_t v7 = a1 + *(int *)(v4 + 20);
    uint64_t v8 = sub_24EC21D30();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  uint64_t v10 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v10 + *(int *)(type metadata accessor for EditorialCollection() + 32);
  uint64_t v12 = sub_24EC21D30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for EditorialCollectionDetail(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for BrowseArtwork();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946778);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_24EC21E00();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(a1, a2, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    uint64_t v12 = *(int *)(v6 + 20);
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = sub_24EC21D30();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v18 = *(int *)(a3 + 20);
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = *(void *)&a2[v18 + 8];
  *(void *)uint64_t v19 = *(void *)&a2[v18];
  *((void *)v19 + 1) = v21;
  uint64_t v22 = *(void *)&a2[v18 + 24];
  *((void *)v19 + 2) = *(void *)&a2[v18 + 16];
  *((void *)v19 + 3) = v22;
  uint64_t v23 = *(void *)&a2[v18 + 40];
  *((void *)v19 + 4) = *(void *)&a2[v18 + 32];
  *((void *)v19 + 5) = v23;
  uint64_t v24 = *(void *)&a2[v18 + 56];
  *((void *)v19 + 6) = *(void *)&a2[v18 + 48];
  *((void *)v19 + 7) = v24;
  uint64_t v25 = *(int *)(type metadata accessor for EditorialCollection() + 32);
  uint64_t v30 = &v20[v25];
  uint64_t v31 = &v19[v25];
  uint64_t v26 = sub_24EC21D30();
  uint64_t v27 = a3;
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28(v31, v30, v26);
  *(void *)&a1[*(int *)(v27 + 24)] = *(void *)&a2[*(int *)(v27 + 24)];
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for EditorialCollectionDetail(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for BrowseArtwork();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_24EB9DFAC((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for BrowseArtwork);
      goto LABEL_7;
    }
    uint64_t v17 = sub_24EC21E00();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
    int v20 = v19(a1, 1, v17);
    int v21 = v19(a2, 1, v17);
    if (v20)
    {
      if (!v21)
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(a1, a2, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
LABEL_21:
        uint64_t v37 = *(int *)(v6 + 20);
        uint64_t v38 = &a1[v37];
        uint64_t v39 = &a2[v37];
        uint64_t v40 = sub_24EC21D30();
        uint64_t v41 = *(void *)(v40 - 8);
        uint64_t v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
        int v43 = v42(v38, 1, v40);
        int v44 = v42(v39, 1, v40);
        if (v43)
        {
          if (!v44)
          {
            (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
            goto LABEL_17;
          }
        }
        else
        {
          if (!v44)
          {
            (*(void (**)(char *, char *, uint64_t))(v41 + 24))(v38, v39, v40);
            goto LABEL_17;
          }
          (*(void (**)(char *, uint64_t))(v41 + 8))(v38, v40);
        }
        size_t v14 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269946770) - 8) + 64);
        uint64_t v15 = v38;
        uint64_t v16 = v39;
        goto LABEL_8;
      }
    }
    else
    {
      if (!v21)
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 24))(a1, a2, v17);
        goto LABEL_21;
      }
      (*(void (**)(char *, uint64_t))(v18 + 8))(a1, v17);
    }
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
    memcpy(a1, a2, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_21;
  }
  if (v10)
  {
LABEL_7:
    size_t v14 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269946778) - 8) + 64);
    uint64_t v15 = a1;
    uint64_t v16 = a2;
LABEL_8:
    memcpy(v15, v16, v14);
    goto LABEL_17;
  }
  uint64_t v11 = sub_24EC21E00();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(a1, a2, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  uint64_t v22 = *(int *)(v6 + 20);
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = sub_24EC21D30();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_17:
  uint64_t v28 = *(int *)(a3 + 20);
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  *(void *)uint64_t v29 = *(void *)&a2[v28];
  *((void *)v29 + 1) = *(void *)&a2[v28 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v29 + 2) = *((void *)v30 + 2);
  *((void *)v29 + 3) = *((void *)v30 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v29 + 4) = *((void *)v30 + 4);
  *((void *)v29 + 5) = *((void *)v30 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v29 + 6) = *((void *)v30 + 6);
  *((void *)v29 + 7) = *((void *)v30 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = *(int *)(type metadata accessor for EditorialCollection() + 32);
  uint64_t v32 = &v29[v31];
  uint64_t v33 = &v30[v31];
  uint64_t v34 = sub_24EC21D30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24EB9DFAC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *initializeWithTake for EditorialCollectionDetail(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for BrowseArtwork();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946778);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_24EC21E00();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    uint64_t v12 = *(int *)(v6 + 20);
    uint64_t v13 = &a1[v12];
    size_t v14 = &a2[v12];
    uint64_t v15 = sub_24EC21D30();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v18 = *(int *)(a3 + 20);
  uint64_t v19 = &a1[v18];
  int v20 = &a2[v18];
  long long v21 = *(_OWORD *)&a2[v18 + 16];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)&a2[v18];
  *((_OWORD *)v19 + 1) = v21;
  long long v22 = *(_OWORD *)&a2[v18 + 48];
  *((_OWORD *)v19 + 2) = *(_OWORD *)&a2[v18 + 32];
  *((_OWORD *)v19 + 3) = v22;
  uint64_t v23 = *(int *)(type metadata accessor for EditorialCollection() + 32);
  uint64_t v24 = &v19[v23];
  uint64_t v25 = &v20[v23];
  uint64_t v26 = sub_24EC21D30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *assignWithTake for EditorialCollectionDetail(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for BrowseArtwork();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_24EB9DFAC((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for BrowseArtwork);
      goto LABEL_7;
    }
    uint64_t v17 = sub_24EC21E00();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
    int v20 = v19(a1, 1, v17);
    int v21 = v19(a2, 1, v17);
    if (v20)
    {
      if (!v21)
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(a1, a2, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
LABEL_21:
        uint64_t v41 = *(int *)(v6 + 20);
        uint64_t v42 = &a1[v41];
        int v43 = &a2[v41];
        uint64_t v44 = sub_24EC21D30();
        uint64_t v45 = *(void *)(v44 - 8);
        uint64_t v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
        int v47 = v46(v42, 1, v44);
        int v48 = v46(v43, 1, v44);
        if (v47)
        {
          if (!v48)
          {
            (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
            goto LABEL_17;
          }
        }
        else
        {
          if (!v48)
          {
            (*(void (**)(char *, char *, uint64_t))(v45 + 40))(v42, v43, v44);
            goto LABEL_17;
          }
          (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v44);
        }
        size_t v14 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269946770) - 8) + 64);
        uint64_t v15 = v42;
        uint64_t v16 = v43;
        goto LABEL_8;
      }
    }
    else
    {
      if (!v21)
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 40))(a1, a2, v17);
        goto LABEL_21;
      }
      (*(void (**)(char *, uint64_t))(v18 + 8))(a1, v17);
    }
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
    memcpy(a1, a2, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_21;
  }
  if (v10)
  {
LABEL_7:
    size_t v14 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269946778) - 8) + 64);
    uint64_t v15 = a1;
    uint64_t v16 = a2;
LABEL_8:
    memcpy(v15, v16, v14);
    goto LABEL_17;
  }
  uint64_t v11 = sub_24EC21E00();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(a1, a2, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  uint64_t v22 = *(int *)(v6 + 20);
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = sub_24EC21D30();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_17:
  uint64_t v28 = *(int *)(a3 + 20);
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  uint64_t v31 = *(void *)&a2[v28 + 8];
  *(void *)uint64_t v29 = *(void *)&a2[v28];
  *((void *)v29 + 1) = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = *((void *)v30 + 3);
  *((void *)v29 + 2) = *((void *)v30 + 2);
  *((void *)v29 + 3) = v32;
  swift_bridgeObjectRelease();
  uint64_t v33 = *((void *)v30 + 5);
  *((void *)v29 + 4) = *((void *)v30 + 4);
  *((void *)v29 + 5) = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = *((void *)v30 + 7);
  *((void *)v29 + 6) = *((void *)v30 + 6);
  *((void *)v29 + 7) = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = *(int *)(type metadata accessor for EditorialCollection() + 32);
  uint64_t v36 = &v29[v35];
  uint64_t v37 = &v30[v35];
  uint64_t v38 = sub_24EC21D30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EditorialCollectionDetail(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EB9E9B0);
}

uint64_t sub_24EB9E9B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946778);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for EditorialCollection();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for EditorialCollectionDetail(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EB9EADC);
}

uint64_t sub_24EB9EADC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946778);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for EditorialCollection();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_24EB9EBF0()
{
  sub_24EB9ECC4();
  if (v0 <= 0x3F)
  {
    type metadata accessor for EditorialCollection();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_24EB9ECC4()
{
  if (!qword_26B1D8708)
  {
    type metadata accessor for BrowseArtwork();
    unint64_t v0 = sub_24EC22C90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B1D8708);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for EditorialCollectionDetail.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB9EDE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EditorialCollectionDetail.CodingKeys()
{
  return &type metadata for EditorialCollectionDetail.CodingKeys;
}

unint64_t sub_24EB9EE24()
{
  unint64_t result = qword_269946E08;
  if (!qword_269946E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946E08);
  }
  return result;
}

unint64_t sub_24EB9EE7C()
{
  unint64_t result = qword_269946E10;
  if (!qword_269946E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946E10);
  }
  return result;
}

unint64_t sub_24EB9EED4()
{
  unint64_t result = qword_269946E18;
  if (!qword_269946E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946E18);
  }
  return result;
}

uint64_t sub_24EB9EF28(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000024EC30E60 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024EC30E80 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024EC30EA0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EB9F06C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EB9F0D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EB9F11C(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C6961746564;
      break;
    case 2:
      unint64_t result = 0x6169726F74696465;
      break;
    case 3:
      unint64_t result = 0x7972656C6C6167;
      break;
    case 4:
      unint64_t result = 0x6E6974656B72616DLL;
      break;
    case 5:
      unint64_t result = 0x6546646E4177656ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24EB9F200()
{
  return sub_24EB9F11C(*v0);
}

uint64_t sub_24EB9F208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBA59EC(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EB9F230(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_24EB9F23C(uint64_t a1)
{
  unint64_t v2 = sub_24EBA0144();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB9F278(uint64_t a1)
{
  unint64_t v2 = sub_24EBA0144();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB9F2B4(uint64_t a1)
{
  unint64_t v2 = sub_24EBA03F4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB9F2F0(uint64_t a1)
{
  unint64_t v2 = sub_24EBA03F4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB9F32C(uint64_t a1)
{
  unint64_t v2 = sub_24EBA03A0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB9F368(uint64_t a1)
{
  unint64_t v2 = sub_24EBA03A0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB9F3A4(uint64_t a1)
{
  unint64_t v2 = sub_24EBA034C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB9F3E0(uint64_t a1)
{
  unint64_t v2 = sub_24EBA034C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB9F41C(uint64_t a1)
{
  unint64_t v2 = sub_24EBA02F8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB9F458(uint64_t a1)
{
  unint64_t v2 = sub_24EBA02F8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB9F494(uint64_t a1)
{
  unint64_t v2 = sub_24EBA0250();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB9F4D0(uint64_t a1)
{
  unint64_t v2 = sub_24EBA0250();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB9F50C(uint64_t a1)
{
  unint64_t v2 = sub_24EBA01FC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB9F548(uint64_t a1)
{
  unint64_t v2 = sub_24EBA01FC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseSectionDescriptor.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946E30);
  uint64_t v77 = *(void *)(v2 - 8);
  uint64_t v78 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v76 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for NewAndFeaturedDescriptor();
  MEMORY[0x270FA5388](v74);
  uint64_t v75 = (uint64_t)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946E38);
  uint64_t v72 = *(void *)(v5 - 8);
  uint64_t v73 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v71 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946E40);
  uint64_t v69 = *(void *)(v7 - 8);
  uint64_t v70 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v68 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for BrowseGalleryDescriptor();
  MEMORY[0x270FA5388](v66);
  uint64_t v67 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946E48);
  uint64_t v64 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v63 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for BrowseEditorialDescriptor();
  MEMORY[0x270FA5388](v61);
  uint64_t v62 = (uint64_t)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946E50);
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v58 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for BrowseDetailDescriptor();
  MEMORY[0x270FA5388](v57);
  uint64_t v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946E58);
  uint64_t v56 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for BrowseSectionDescriptor();
  MEMORY[0x270FA5388](v18);
  int v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946E60);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v80 = v21;
  uint64_t v81 = v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBA0144();
  uint64_t v79 = v24;
  sub_24EC23050();
  sub_24EBA0198(v88, (uint64_t)v20);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v31 = type metadata accessor for BrowseDetailDescriptor;
      sub_24EBA12BC((uint64_t)v20, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for BrowseDetailDescriptor);
      LOBYTE(v82) = 1;
      sub_24EBA03A0();
      uint64_t v32 = v58;
      uint64_t v34 = v79;
      uint64_t v33 = v80;
      sub_24EC22EC0();
      sub_24EBA21CC(&qword_269946EB8, (void (*)(uint64_t))type metadata accessor for BrowseDetailDescriptor);
      uint64_t v35 = v60;
      sub_24EC22F40();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v32, v35);
      uint64_t v36 = (uint64_t)v14;
      goto LABEL_5;
    case 2u:
      uint64_t v31 = type metadata accessor for BrowseEditorialDescriptor;
      uint64_t v37 = v62;
      sub_24EBA12BC((uint64_t)v20, v62, (uint64_t (*)(void))type metadata accessor for BrowseEditorialDescriptor);
      LOBYTE(v82) = 2;
      sub_24EBA034C();
      uint64_t v38 = v63;
      uint64_t v34 = v79;
      uint64_t v33 = v80;
      sub_24EC22EC0();
      sub_24EBA21CC(&qword_269946EA8, (void (*)(uint64_t))type metadata accessor for BrowseEditorialDescriptor);
      uint64_t v39 = v65;
      sub_24EC22F40();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v38, v39);
      uint64_t v36 = v37;
LABEL_5:
      sub_24EBA3FFC(v36, (uint64_t (*)(void))v31);
      return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v34, v33);
    case 3u:
      uint64_t v41 = v67;
      sub_24EBA12BC((uint64_t)v20, v67, (uint64_t (*)(void))type metadata accessor for BrowseGalleryDescriptor);
      LOBYTE(v82) = 3;
      sub_24EBA02F8();
      uint64_t v42 = v68;
      uint64_t v44 = v79;
      uint64_t v43 = v80;
      sub_24EC22EC0();
      sub_24EBA21CC(&qword_269946E98, (void (*)(uint64_t))type metadata accessor for BrowseGalleryDescriptor);
      uint64_t v45 = v70;
      sub_24EC22F40();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v42, v45);
      uint64_t v46 = type metadata accessor for BrowseGalleryDescriptor;
      goto LABEL_10;
    case 4u:
      uint64_t v48 = *(void *)v20;
      uint64_t v47 = *((void *)v20 + 1);
      char v49 = v20[16];
      LOBYTE(v82) = 4;
      sub_24EBA0250();
      uint64_t v50 = v71;
      char v52 = v79;
      uint64_t v51 = v80;
      sub_24EC22EC0();
      uint64_t v82 = v48;
      uint64_t v83 = v47;
      LOBYTE(v84) = v49;
      sub_24EBA02A4();
      uint64_t v53 = v73;
      sub_24EC22F40();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v50, v53);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v52, v51);
      goto LABEL_8;
    case 5u:
      uint64_t v41 = v75;
      sub_24EBA12BC((uint64_t)v20, v75, (uint64_t (*)(void))type metadata accessor for NewAndFeaturedDescriptor);
      LOBYTE(v82) = 5;
      sub_24EBA01FC();
      uint64_t v54 = v76;
      uint64_t v44 = v79;
      uint64_t v43 = v80;
      sub_24EC22EC0();
      sub_24EBA21CC(&qword_269946E78, (void (*)(uint64_t))type metadata accessor for NewAndFeaturedDescriptor);
      uint64_t v55 = v78;
      sub_24EC22F40();
      (*(void (**)(char *, uint64_t))(v77 + 8))(v54, v55);
      uint64_t v46 = type metadata accessor for NewAndFeaturedDescriptor;
LABEL_10:
      sub_24EBA3FFC(v41, (uint64_t (*)(void))v46);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v44, v43);
      break;
    default:
      uint64_t v25 = *((void *)v20 + 1);
      uint64_t v88 = *(void *)v20;
      uint64_t v27 = *((void *)v20 + 2);
      uint64_t v26 = *((void *)v20 + 3);
      uint64_t v28 = *((void *)v20 + 5);
      uint64_t v78 = *((void *)v20 + 4);
      LOBYTE(v82) = 0;
      sub_24EBA03F4();
      uint64_t v30 = v79;
      uint64_t v29 = v80;
      sub_24EC22EC0();
      uint64_t v82 = v88;
      uint64_t v83 = v25;
      uint64_t v84 = v27;
      uint64_t v85 = v26;
      uint64_t v86 = v78;
      uint64_t v87 = v28;
      sub_24EBA0448();
      sub_24EC22F40();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v17, v15);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v30, v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_8:
      uint64_t result = swift_bridgeObjectRelease();
      break;
  }
  return result;
}

uint64_t type metadata accessor for BrowseSectionDescriptor()
{
  uint64_t result = qword_269946F40;
  if (!qword_269946F40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24EBA0144()
{
  unint64_t result = qword_269946E68;
  if (!qword_269946E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946E68);
  }
  return result;
}

uint64_t sub_24EBA0198(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseSectionDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24EBA01FC()
{
  unint64_t result = qword_269946E70;
  if (!qword_269946E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946E70);
  }
  return result;
}

unint64_t sub_24EBA0250()
{
  unint64_t result = qword_269946E80;
  if (!qword_269946E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946E80);
  }
  return result;
}

unint64_t sub_24EBA02A4()
{
  unint64_t result = qword_269946E88;
  if (!qword_269946E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946E88);
  }
  return result;
}

unint64_t sub_24EBA02F8()
{
  unint64_t result = qword_269946E90;
  if (!qword_269946E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946E90);
  }
  return result;
}

unint64_t sub_24EBA034C()
{
  unint64_t result = qword_269946EA0;
  if (!qword_269946EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946EA0);
  }
  return result;
}

unint64_t sub_24EBA03A0()
{
  unint64_t result = qword_269946EB0;
  if (!qword_269946EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946EB0);
  }
  return result;
}

unint64_t sub_24EBA03F4()
{
  unint64_t result = qword_269946EC0;
  if (!qword_269946EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946EC0);
  }
  return result;
}

unint64_t sub_24EBA0448()
{
  unint64_t result = qword_269946EC8;
  if (!qword_269946EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946EC8);
  }
  return result;
}

uint64_t BrowseSectionDescriptor.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v82 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946ED0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v80 = v3;
  uint64_t v81 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v84 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946ED8);
  uint64_t v79 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v90 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946EE0);
  uint64_t v78 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  uint64_t v83 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946EE8);
  uint64_t v75 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  uint64_t v89 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946EF0);
  uint64_t v72 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  uint64_t v88 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946EF8);
  uint64_t v70 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v86 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946F00);
  uint64_t v85 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = type metadata accessor for BrowseSectionDescriptor();
  uint64_t v13 = MEMORY[0x270FA5388](v91);
  uint64_t v69 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v68 = (uint64_t *)((char *)&v63 - v16);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v63 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v63 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)&v63 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)&v63 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v63 - v29;
  uint64_t v31 = a1[3];
  uint64_t v92 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v31);
  sub_24EBA0144();
  uint64_t v32 = (uint64_t)v96;
  sub_24EC23040();
  if (v32) {
    goto LABEL_11;
  }
  uint64_t v64 = v28;
  uint64_t v65 = v25;
  uint64_t v66 = v22;
  uint64_t v67 = v19;
  uint64_t v33 = v86;
  uint64_t v34 = v87;
  uint64_t v36 = v88;
  uint64_t v35 = v89;
  uint64_t v37 = v90;
  uint64_t v96 = v30;
  uint64_t v38 = sub_24EC22EA0();
  if (*(void *)(v38 + 16) != 1)
  {
    uint64_t v43 = sub_24EC22D50();
    swift_allocError();
    uint64_t v45 = v44;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269946108);
    *uint64_t v45 = v91;
    sub_24EC22E10();
    sub_24EC22D40();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v43 - 8) + 104))(v45, *MEMORY[0x263F8DCB0], v43);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v12, v34);
LABEL_11:
    uint64_t v48 = (uint64_t)v92;
    return __swift_destroy_boxed_opaque_existential_1(v48);
  }
  switch(*(unsigned char *)(v38 + 32))
  {
    case 1:
      LOBYTE(v93) = 1;
      sub_24EBA03A0();
      sub_24EC22E00();
      type metadata accessor for BrowseDetailDescriptor();
      sub_24EBA21CC(&qword_269946F28, (void (*)(uint64_t))type metadata accessor for BrowseDetailDescriptor);
      uint64_t v46 = (uint64_t)v65;
      uint64_t v47 = v73;
      sub_24EC22E90();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v36, v47);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v85 + 8))(v12, v34);
      uint64_t v48 = (uint64_t)v92;
      swift_storeEnumTagMultiPayload();
      uint64_t v49 = (uint64_t)v96;
      sub_24EBA12BC(v46, (uint64_t)v96, (uint64_t (*)(void))type metadata accessor for BrowseSectionDescriptor);
      goto LABEL_15;
    case 2:
      LOBYTE(v93) = 2;
      sub_24EBA034C();
      sub_24EC22E00();
      type metadata accessor for BrowseEditorialDescriptor();
      sub_24EBA21CC(&qword_269946F20, (void (*)(uint64_t))type metadata accessor for BrowseEditorialDescriptor);
      uint64_t v50 = (uint64_t)v66;
      uint64_t v51 = v74;
      sub_24EC22E90();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v35, v51);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v85 + 8))(v12, v34);
      swift_storeEnumTagMultiPayload();
      uint64_t v42 = v50;
      break;
    case 3:
      LOBYTE(v93) = 3;
      sub_24EBA02F8();
      char v52 = v83;
      sub_24EC22E00();
      type metadata accessor for BrowseGalleryDescriptor();
      sub_24EBA21CC(&qword_269946F18, (void (*)(uint64_t))type metadata accessor for BrowseGalleryDescriptor);
      uint64_t v53 = v67;
      uint64_t v54 = v77;
      sub_24EC22E90();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v52, v54);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v85 + 8))(v12, v34);
      goto LABEL_13;
    case 4:
      LOBYTE(v93) = 4;
      sub_24EBA0250();
      sub_24EC22E00();
      sub_24EBA1324();
      uint64_t v55 = v76;
      sub_24EC22E90();
      uint64_t v56 = v85;
      (*(void (**)(char *, uint64_t))(v79 + 8))(v37, v55);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v12, v34);
      uint64_t v60 = *((void *)&v93 + 1);
      char v61 = v94;
      uint64_t v62 = v68;
      *uint64_t v68 = v93;
      v62[1] = v60;
      *((unsigned char *)v62 + 16) = v61;
      swift_storeEnumTagMultiPayload();
      uint64_t v42 = (uint64_t)v62;
      break;
    case 5:
      LOBYTE(v93) = 5;
      sub_24EBA01FC();
      sub_24EC22E00();
      type metadata accessor for NewAndFeaturedDescriptor();
      sub_24EBA21CC(&qword_269946F08, (void (*)(uint64_t))type metadata accessor for NewAndFeaturedDescriptor);
      uint64_t v53 = v69;
      uint64_t v57 = v80;
      uint64_t v58 = v84;
      sub_24EC22E90();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v58, v57);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v85 + 8))(v12, v34);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      uint64_t v42 = (uint64_t)v53;
      break;
    default:
      LOBYTE(v93) = 0;
      sub_24EBA03F4();
      sub_24EC22E00();
      sub_24EBA1378();
      uint64_t v39 = v71;
      sub_24EC22E90();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v33, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v85 + 8))(v12, v34);
      long long v40 = v94;
      uint64_t v41 = v64;
      *uint64_t v64 = v93;
      v41[1] = v40;
      v41[2] = v95;
      swift_storeEnumTagMultiPayload();
      uint64_t v42 = (uint64_t)v41;
      break;
  }
  uint64_t v49 = (uint64_t)v96;
  sub_24EBA12BC(v42, (uint64_t)v96, (uint64_t (*)(void))type metadata accessor for BrowseSectionDescriptor);
  uint64_t v48 = (uint64_t)v92;
LABEL_15:
  sub_24EBA12BC(v49, v82, (uint64_t (*)(void))type metadata accessor for BrowseSectionDescriptor);
  return __swift_destroy_boxed_opaque_existential_1(v48);
}

uint64_t sub_24EBA12BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_24EBA1324()
{
  unint64_t result = qword_269946F10;
  if (!qword_269946F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946F10);
  }
  return result;
}

unint64_t sub_24EBA1378()
{
  unint64_t result = qword_269946F30;
  if (!qword_269946F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946F30);
  }
  return result;
}

uint64_t sub_24EBA13CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BrowseSectionDescriptor.init(from:)(a1, a2);
}

uint64_t sub_24EBA13E4(void *a1)
{
  return BrowseSectionDescriptor.encode(to:)(a1);
}

uint64_t BrowseSectionDescriptor.hash(into:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for NewAndFeaturedDescriptor();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for BrowseGalleryDescriptor();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for BrowseEditorialDescriptor();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for BrowseDetailDescriptor();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for BrowseSectionDescriptor();
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EBA0198(v1, (uint64_t)v17);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_24EBA12BC((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for BrowseDetailDescriptor);
      sub_24EC23000();
      BrowseDetailContent.hash(into:)();
      sub_24EC22AB0();
      if (v14[*(int *)(v12 + 24)] == 2)
      {
        sub_24EC23010();
      }
      else
      {
        sub_24EC23010();
        sub_24EC23000();
      }
      uint64_t v27 = type metadata accessor for BrowseDetailDescriptor;
      uint64_t v25 = (uint64_t)v14;
      goto LABEL_13;
    case 2u:
      uint64_t v24 = type metadata accessor for BrowseEditorialDescriptor;
      sub_24EBA12BC((uint64_t)v17, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for BrowseEditorialDescriptor);
      sub_24EC23000();
      BrowseEditorialDescriptor.hash(into:)(a1);
      uint64_t v25 = (uint64_t)v11;
      goto LABEL_10;
    case 3u:
      sub_24EBA12BC((uint64_t)v17, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for BrowseGalleryDescriptor);
      sub_24EC23000();
      BrowseDisplayStyle.rawValue.getter(*v8);
      sub_24EC22AB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24EC22AB0();
      swift_bridgeObjectRelease();
      uint64_t v26 = *((void *)v8 + 3);
      swift_bridgeObjectRetain();
      sub_24EB61EF4(a1, v26);
      swift_bridgeObjectRelease();
      sub_24EC23000();
      sub_24EC21D10();
      sub_24EBA21CC(&qword_2699466B8, MEMORY[0x263F06828]);
      sub_24EC22A20();
      uint64_t v25 = (uint64_t)v8;
      uint64_t v27 = type metadata accessor for BrowseGalleryDescriptor;
      goto LABEL_13;
    case 4u:
      int v28 = v17[16];
      sub_24EC23000();
      swift_bridgeObjectRetain();
      sub_24EC22AB0();
      swift_bridgeObjectRelease();
      sub_24EC23010();
      if (v28 != 2) {
        sub_24EC23000();
      }
      goto LABEL_15;
    case 5u:
      uint64_t v24 = type metadata accessor for NewAndFeaturedDescriptor;
      sub_24EBA12BC((uint64_t)v17, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for NewAndFeaturedDescriptor);
      sub_24EC23000();
      NewAndFeaturedDescriptor.hash(into:)();
      uint64_t v25 = (uint64_t)v5;
LABEL_10:
      uint64_t v27 = v24;
LABEL_13:
      uint64_t result = sub_24EBA3FFC(v25, (uint64_t (*)(void))v27);
      break;
    default:
      uint64_t v19 = *(void *)v17;
      uint64_t v18 = *((void *)v17 + 1);
      uint64_t v21 = *((void *)v17 + 2);
      uint64_t v20 = *((void *)v17 + 3);
      uint64_t v23 = *((void *)v17 + 4);
      uint64_t v22 = *((void *)v17 + 5);
      sub_24EC23000();
      v30[0] = v19;
      v30[1] = v18;
      v30[2] = v21;
      v30[3] = v20;
      v30[4] = v23;
      v30[5] = v22;
      CreatePlanBannerDescriptor.hash(into:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_15:
      uint64_t result = swift_bridgeObjectRelease();
      break;
  }
  return result;
}

uint64_t BrowseSectionDescriptor.hashValue.getter()
{
  sub_24EC22FF0();
  BrowseSectionDescriptor.hash(into:)((uint64_t)v1);
  return sub_24EC23030();
}

uint64_t sub_24EBA1938()
{
  sub_24EC22FF0();
  BrowseSectionDescriptor.hash(into:)((uint64_t)v1);
  return sub_24EC23030();
}

uint64_t sub_24EBA197C()
{
  sub_24EC22FF0();
  BrowseSectionDescriptor.hash(into:)((uint64_t)v1);
  return sub_24EC23030();
}

uint64_t _s15FitnessBrowsing23BrowseSectionDescriptorO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  *(void *)&long long v72 = a2;
  *(void *)&long long v71 = a1;
  uint64_t v2 = type metadata accessor for NewAndFeaturedDescriptor();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v69 = (uint64_t)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for BrowseGalleryDescriptor();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v68 = (uint64_t)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for BrowseEditorialDescriptor();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for BrowseDetailDescriptor();
  MEMORY[0x270FA5388](v67);
  uint64_t v70 = (uint64_t)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BrowseSectionDescriptor();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v67 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v67 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v67 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)&v67 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (uint64_t *)((char *)&v67 - v26);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946FF8);
  uint64_t v29 = MEMORY[0x270FA5388](v28 - 8);
  uint64_t v31 = (char *)&v67 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = (uint64_t)&v31[*(int *)(v29 + 56)];
  sub_24EBA0198(v71, (uint64_t)v31);
  sub_24EBA0198(v72, v32);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_24EBA0198((uint64_t)v31, (uint64_t)v25);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        uint64_t v59 = type metadata accessor for BrowseDetailDescriptor;
        uint64_t v60 = (uint64_t)v25;
        goto LABEL_35;
      }
      uint64_t v36 = v70;
      sub_24EBA12BC(v32, v70, (uint64_t (*)(void))type metadata accessor for BrowseDetailDescriptor);
      if ((static BrowseDetailContent.== infix(_:_:)(v25, v36) & 1) == 0) {
        goto LABEL_48;
      }
      uint64_t v37 = *(int *)(v67 + 20);
      uint64_t v38 = *(void *)&v25[v37];
      uint64_t v39 = *(void *)&v25[v37 + 8];
      long long v40 = (void *)(v36 + v37);
      if ((v38 != *v40 || v39 != v40[1]) && (sub_24EC22F70() & 1) == 0) {
        goto LABEL_48;
      }
      uint64_t v41 = *(int *)(v67 + 24);
      int v42 = v25[v41];
      int v43 = *(unsigned __int8 *)(v36 + v41);
      if (v42 == 2)
      {
        if (v43 != 2)
        {
LABEL_48:
          sub_24EBA3FFC(v36, (uint64_t (*)(void))type metadata accessor for BrowseDetailDescriptor);
          sub_24EBA3FFC((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for BrowseDetailDescriptor);
          goto LABEL_49;
        }
      }
      else if (v43 == 2 || ((v43 ^ v42) & 1) != 0)
      {
        goto LABEL_48;
      }
      sub_24EBA3FFC(v36, (uint64_t (*)(void))type metadata accessor for BrowseDetailDescriptor);
      sub_24EBA3FFC((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for BrowseDetailDescriptor);
      goto LABEL_47;
    case 2u:
      sub_24EBA0198((uint64_t)v31, (uint64_t)v22);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v44 = type metadata accessor for BrowseEditorialDescriptor;
        sub_24EBA12BC(v32, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for BrowseEditorialDescriptor);
        char v45 = _s15FitnessBrowsing25BrowseEditorialDescriptorV2eeoiySbAC_ACtFZ_0((uint64_t)v22, (uint64_t)v8);
        sub_24EBA3FFC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for BrowseEditorialDescriptor);
        uint64_t v46 = (uint64_t)v22;
        goto LABEL_16;
      }
      uint64_t v59 = type metadata accessor for BrowseEditorialDescriptor;
      uint64_t v60 = (uint64_t)v22;
      goto LABEL_35;
    case 3u:
      sub_24EBA0198((uint64_t)v31, (uint64_t)v19);
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        uint64_t v59 = type metadata accessor for BrowseGalleryDescriptor;
        uint64_t v60 = (uint64_t)v19;
        goto LABEL_35;
      }
      uint64_t v44 = type metadata accessor for BrowseGalleryDescriptor;
      uint64_t v47 = v32;
      uint64_t v48 = v68;
      sub_24EBA12BC(v47, v68, (uint64_t (*)(void))type metadata accessor for BrowseGalleryDescriptor);
      char v45 = static BrowseGalleryDescriptor.== infix(_:_:)((uint64_t)v19, v48);
      sub_24EBA3FFC(v48, (uint64_t (*)(void))type metadata accessor for BrowseGalleryDescriptor);
      uint64_t v46 = (uint64_t)v19;
LABEL_16:
      uint64_t v49 = v44;
      goto LABEL_29;
    case 4u:
      sub_24EBA0198((uint64_t)v31, (uint64_t)v16);
      uint64_t v51 = *(void *)v16;
      uint64_t v50 = *((void *)v16 + 1);
      int v52 = v16[16];
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_26;
      }
      uint64_t v53 = *(void *)v32;
      uint64_t v54 = *(void *)(v32 + 8);
      int v55 = *(unsigned __int8 *)(v32 + 16);
      BOOL v56 = v51 == v53 && v50 == v54;
      if (!v56 && (sub_24EC22F70() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_49;
      }
      if (v52 == 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v55 != 2) {
          goto LABEL_49;
        }
        goto LABEL_47;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v55 != 2 && ((v55 ^ v52) & 1) == 0)
      {
LABEL_47:
        sub_24EBA3FFC((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for BrowseSectionDescriptor);
        char v45 = 1;
        return v45 & 1;
      }
LABEL_49:
      sub_24EBA3FFC((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for BrowseSectionDescriptor);
LABEL_37:
      char v45 = 0;
      return v45 & 1;
    case 5u:
      sub_24EBA0198((uint64_t)v31, (uint64_t)v13);
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        uint64_t v59 = type metadata accessor for NewAndFeaturedDescriptor;
        uint64_t v60 = (uint64_t)v13;
LABEL_35:
        sub_24EBA3FFC(v60, (uint64_t (*)(void))v59);
        goto LABEL_36;
      }
      uint64_t v57 = v32;
      uint64_t v58 = v69;
      sub_24EBA12BC(v57, v69, (uint64_t (*)(void))type metadata accessor for NewAndFeaturedDescriptor);
      char v45 = _s15FitnessBrowsing24NewAndFeaturedDescriptorV2eeoiySbAC_ACtFZ_0((uint64_t)v13, v58);
      sub_24EBA3FFC(v58, (uint64_t (*)(void))type metadata accessor for NewAndFeaturedDescriptor);
      uint64_t v46 = (uint64_t)v13;
      uint64_t v49 = type metadata accessor for NewAndFeaturedDescriptor;
LABEL_29:
      sub_24EBA3FFC(v46, (uint64_t (*)(void))v49);
      goto LABEL_30;
    default:
      sub_24EBA0198((uint64_t)v31, (uint64_t)v27);
      uint64_t v33 = v27[1];
      uint64_t v34 = v27[3];
      uint64_t v35 = v27[5];
      if (swift_getEnumCaseMultiPayload())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_26:
        swift_bridgeObjectRelease();
LABEL_36:
        sub_24EBA5C68((uint64_t)v31);
        goto LABEL_37;
      }
      uint64_t v62 = v27[4];
      uint64_t v63 = v27[2];
      uint64_t v64 = *v27;
      uint64_t v65 = *(void *)v32;
      uint64_t v66 = *(void *)(v32 + 40);
      v77[0] = v64;
      v77[1] = v33;
      v77[2] = v63;
      v77[3] = v34;
      v77[4] = v62;
      v77[5] = v35;
      uint64_t v73 = v65;
      long long v71 = *(_OWORD *)(v32 + 8);
      long long v72 = *(_OWORD *)(v32 + 24);
      long long v74 = v71;
      long long v75 = v72;
      uint64_t v76 = v66;
      char v45 = _s15FitnessBrowsing26CreatePlanBannerDescriptorV2eeoiySbAC_ACtFZ_0(v77, &v73);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_30:
      sub_24EBA3FFC((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for BrowseSectionDescriptor);
      return v45 & 1;
  }
}

uint64_t sub_24EBA2184()
{
  return sub_24EBA21CC(&qword_269946F38, (void (*)(uint64_t))type metadata accessor for BrowseSectionDescriptor);
}

uint64_t sub_24EBA21CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for BrowseSectionDescriptor(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        type metadata accessor for BrowseDetailContent();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v43 = sub_24EC21D10();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v43 - 8) + 16))(a1, a2, v43);
          uint64_t v44 = type metadata accessor for BrowseDetailVideoLinkItem();
          uint64_t v45 = *(int *)(v44 + 20);
          uint64_t v46 = (uint64_t *)((char *)a1 + v45);
          uint64_t v47 = (uint64_t *)((char *)a2 + v45);
          uint64_t v48 = v47[1];
          *uint64_t v46 = *v47;
          v46[1] = v48;
          uint64_t v49 = *(int *)(v44 + 24);
          uint64_t v50 = (uint64_t *)((char *)a1 + v49);
          uint64_t v51 = (char *)a2 + v49;
          uint64_t v52 = *(uint64_t *)((char *)a2 + v49 + 8);
          *uint64_t v50 = *(uint64_t *)((char *)a2 + v49);
          v50[1] = v52;
          uint64_t v53 = *(uint64_t *)((char *)a2 + v49 + 24);
          v50[2] = *(uint64_t *)((char *)a2 + v49 + 16);
          v50[3] = v53;
          uint64_t v54 = *(int *)(type metadata accessor for VideoAsset() + 24);
          long long v75 = &v51[v54];
          __dstc = (char *)v50 + v54;
          uint64_t v55 = sub_24EC21D30();
          BOOL v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v56(__dstc, v75, v55);
        }
        else
        {
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v13 = sub_24EC21D10();
            uint64_t v14 = *(void *)(v13 - 8);
            uint64_t v15 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v14 + 48);
            __dst = (void (**)(void *, const void *, uint64_t))v14;
            if (v15(a2, 1, v13))
            {
              uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
              memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v14 + 16))(a1, a2, v13);
              (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
            }
            uint64_t v60 = type metadata accessor for BrowseDetailTextItem();
            uint64_t v61 = *(int *)(v60 + 20);
            uint64_t v62 = (char *)a1 + v61;
            uint64_t v63 = (char *)a2 + v61;
            if (v15((uint64_t *)((char *)a2 + v61), 1, v13))
            {
              uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
              memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
            }
            else
            {
              __dst[2](v62, v63, v13);
              ((void (*)(char *, void, uint64_t, uint64_t))__dst[7])(v62, 0, 1, v13);
            }
            uint64_t v59 = *(int *)(v60 + 24);
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
            if (swift_getEnumCaseMultiPayload() == 1) {
              uint64_t v57 = (uint64_t *)&unk_2699466D0;
            }
            else {
              uint64_t v57 = (uint64_t *)&unk_2699466C8;
            }
            uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(v57);
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v58 - 8) + 16))(a1, a2, v58);
            swift_storeEnumTagMultiPayload();
            uint64_t v59 = *(int *)(type metadata accessor for BrowseDetailArtworkItem() + 20);
          }
          uint64_t v65 = (uint64_t *)((char *)a1 + v59);
          uint64_t v66 = (uint64_t *)((char *)a2 + v59);
          uint64_t v67 = v66[1];
          *uint64_t v65 = *v66;
          v65[1] = v67;
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v68 = type metadata accessor for BrowseDetailDescriptor();
        uint64_t v69 = *(int *)(v68 + 20);
        uint64_t v70 = (uint64_t *)((char *)a1 + v69);
        long long v71 = (uint64_t *)((char *)a2 + v69);
        uint64_t v73 = *v71;
        uint64_t v72 = v71[1];
        *uint64_t v70 = v73;
        v70[1] = v72;
        *((unsigned char *)a1 + *(int *)(v68 + 24)) = *((unsigned char *)a2 + *(int *)(v68 + 24));
        swift_bridgeObjectRetain();
        break;
      case 2u:
        char v17 = *((unsigned char *)a2 + 8);
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = v17;
        *((unsigned char *)a1 + 9) = *((unsigned char *)a2 + 9);
        *((_WORD *)a1 + 5) = *((_WORD *)a2 + 5);
        uint64_t v18 = a2[3];
        a1[2] = a2[2];
        a1[3] = v18;
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v19 = type metadata accessor for BrowseEditorialDescriptor();
        uint64_t v20 = *(int *)(v19 + 40);
        __dsta = (char *)a1 + v20;
        uint64_t v80 = v19;
        uint64_t v21 = (char *)a2 + v20;
        uint64_t v22 = sub_24EC21D10();
        uint64_t v23 = *(void *)(v22 - 8);
        uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v24(v21, 1, v22))
        {
          uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
          memcpy(__dsta, v21, *(void *)(*(void *)(v25 - 8) + 64));
          (*(void (**)(char *, char *, uint64_t))(v23 + 16))((char *)a1 + *(int *)(v80 + 44), (char *)a2 + *(int *)(v80 + 44), v22);
        }
        else
        {
          uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
          v41(__dsta, v21, v22);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(__dsta, 0, 1, v22);
          v41((char *)a1 + *(int *)(v80 + 44), (char *)a2 + *(int *)(v80 + 44), v22);
        }
        break;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v26 = a2[2];
        a1[1] = a2[1];
        a1[2] = v26;
        a1[3] = a2[3];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v27 = *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = sub_24EC21D10();
        uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v31(v28, v29, v30);
        break;
      case 4u:
        uint64_t v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v32 = a2[1];
        *a1 = *a2;
        a1[1] = v32;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v33 = a2[4];
        a1[3] = a2[3];
        a1[4] = v33;
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        uint64_t v34 = type metadata accessor for NewAndFeaturedDescriptor();
        uint64_t v35 = *(int *)(v34 + 32);
        __dstb = (char *)a1 + v35;
        uint64_t v81 = v34;
        uint64_t v36 = (char *)a2 + v35;
        uint64_t v37 = sub_24EC21D10();
        uint64_t v38 = *(void *)(v37 - 8);
        uint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v39(v36, 1, v37))
        {
          uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
          memcpy(__dstb, v36, *(void *)(*(void *)(v40 - 8) + 64));
          (*(void (**)(char *, char *, uint64_t))(v38 + 16))((char *)a1 + *(int *)(v81 + 36), (char *)a2 + *(int *)(v81 + 36), v37);
        }
        else
        {
          int v42 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
          v42(__dstb, v36, v37);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(__dstb, 0, 1, v37);
          v42((char *)a1 + *(int *)(v81 + 36), (char *)a2 + *(int *)(v81 + 36), v37);
        }
        break;
      default:
        uint64_t v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        uint64_t v7 = a2[3];
        a1[2] = a2[2];
        a1[3] = v7;
        uint64_t v8 = a2[4];
        uint64_t v9 = a2[5];
        a1[4] = v8;
        a1[5] = v9;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for BrowseSectionDescriptor(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_29;
    case 1:
      type metadata accessor for BrowseDetailContent();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v18 = sub_24EC21D10();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a1, v18);
        uint64_t v19 = type metadata accessor for BrowseDetailVideoLinkItem();
        swift_bridgeObjectRelease();
        uint64_t v20 = a1 + *(int *)(v19 + 24);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v21 = v20 + *(int *)(type metadata accessor for VideoAsset() + 24);
        uint64_t v22 = sub_24EC21D30();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v23 = sub_24EC21D10();
          uint64_t v24 = *(void *)(v23 - 8);
          uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
          if (!v25(a1, 1, v23)) {
            (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a1, v23);
          }
          uint64_t v26 = a1 + *(int *)(type metadata accessor for BrowseDetailTextItem() + 20);
          if (!v25(v26, 1, v23)) {
            (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v23);
          }
        }
        else
        {
          if (EnumCaseMultiPayload) {
            goto LABEL_28;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v4 = (uint64_t *)&unk_2699466D0;
          }
          else {
            uint64_t v4 = (uint64_t *)&unk_2699466C8;
          }
          uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(v4);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
          type metadata accessor for BrowseDetailArtworkItem();
        }
        swift_bridgeObjectRelease();
      }
LABEL_28:
      type metadata accessor for BrowseDetailDescriptor();
LABEL_29:
      return swift_bridgeObjectRelease();
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = type metadata accessor for BrowseEditorialDescriptor();
      uint64_t v7 = a1 + *(int *)(v6 + 40);
      uint64_t v8 = sub_24EC21D10();
      uint64_t v29 = *(void *)(v8 - 8);
      int v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v7, 1, v8);
      uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
      if (!v9)
      {
        uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
        v10(v7, v8);
        uint64_t v10 = v27;
      }
      uint64_t v11 = *(int *)(v6 + 44);
      goto LABEL_19;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = a1 + *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
      uint64_t v13 = sub_24EC21D10();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
      return v14(v12, v13);
    case 4:
      goto LABEL_29;
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = type metadata accessor for NewAndFeaturedDescriptor();
      uint64_t v16 = a1 + *(int *)(v15 + 32);
      uint64_t v8 = sub_24EC21D10();
      uint64_t v30 = *(void *)(v8 - 8);
      int v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v16, 1, v8);
      uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      if (!v17)
      {
        uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
        v10(v16, v8);
        uint64_t v10 = v28;
      }
      uint64_t v11 = *(int *)(v15 + 36);
LABEL_19:
      return ((uint64_t (*)(uint64_t, uint64_t))v10)(a1 + v11, v8);
    default:
      return result;
  }
}

void *initializeWithCopy for BrowseSectionDescriptor(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      type metadata accessor for BrowseDetailContent();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v40 = sub_24EC21D10();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(a1, a2, v40);
        uint64_t v41 = type metadata accessor for BrowseDetailVideoLinkItem();
        uint64_t v42 = *(int *)(v41 + 20);
        uint64_t v43 = (void *)((char *)a1 + v42);
        uint64_t v44 = (void *)((char *)a2 + v42);
        uint64_t v45 = v44[1];
        *uint64_t v43 = *v44;
        v43[1] = v45;
        uint64_t v46 = *(int *)(v41 + 24);
        uint64_t v47 = (void *)((char *)a1 + v46);
        uint64_t v48 = (char *)a2 + v46;
        uint64_t v49 = *(void *)((char *)a2 + v46 + 8);
        *uint64_t v47 = *(void *)((char *)a2 + v46);
        v47[1] = v49;
        uint64_t v50 = *(void *)((char *)a2 + v46 + 24);
        v47[2] = *(void *)((char *)a2 + v46 + 16);
        v47[3] = v50;
        uint64_t v51 = *(int *)(type metadata accessor for VideoAsset() + 24);
        __dstb = &v48[v51];
        uint64_t v78 = (char *)v47 + v51;
        uint64_t v52 = sub_24EC21D30();
        long long v71 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v71(v78, __dstb, v52);
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v10 = sub_24EC21D10();
          uint64_t v11 = *(void *)(v10 - 8);
          uint64_t v12 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48);
          uint64_t v75 = v11;
          if (v12(a2, 1, v10))
          {
            uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
            memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(v11 + 16))(a1, a2, v10);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
          }
          uint64_t v56 = type metadata accessor for BrowseDetailTextItem();
          uint64_t v57 = *(int *)(v56 + 20);
          uint64_t v58 = (char *)a1 + v57;
          uint64_t v59 = (char *)a2 + v57;
          if (v12((void *)((char *)a2 + v57), 1, v10))
          {
            uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
            memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v58, v59, v10);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v58, 0, 1, v10);
          }
          uint64_t v55 = *(int *)(v56 + 24);
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v53 = (uint64_t *)&unk_2699466D0;
          }
          else {
            uint64_t v53 = (uint64_t *)&unk_2699466C8;
          }
          uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(v53);
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v54 - 8) + 16))(a1, a2, v54);
          swift_storeEnumTagMultiPayload();
          uint64_t v55 = *(int *)(type metadata accessor for BrowseDetailArtworkItem() + 20);
        }
        uint64_t v61 = (void *)((char *)a1 + v55);
        uint64_t v62 = (void *)((char *)a2 + v55);
        uint64_t v63 = v62[1];
        *uint64_t v61 = *v62;
        v61[1] = v63;
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v64 = type metadata accessor for BrowseDetailDescriptor();
      uint64_t v65 = *(int *)(v64 + 20);
      uint64_t v66 = (void *)((char *)a1 + v65);
      uint64_t v67 = (void *)((char *)a2 + v65);
      uint64_t v69 = *v67;
      uint64_t v68 = v67[1];
      *uint64_t v66 = v69;
      v66[1] = v68;
      *((unsigned char *)a1 + *(int *)(v64 + 24)) = *((unsigned char *)a2 + *(int *)(v64 + 24));
      goto LABEL_28;
    case 2u:
      char v14 = *((unsigned char *)a2 + 8);
      *a1 = *a2;
      *((unsigned char *)a1 + 8) = v14;
      *((unsigned char *)a1 + 9) = *((unsigned char *)a2 + 9);
      *((_WORD *)a1 + 5) = *((_WORD *)a2 + 5);
      uint64_t v15 = a2[3];
      a1[2] = a2[2];
      a1[3] = v15;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v16 = type metadata accessor for BrowseEditorialDescriptor();
      uint64_t v17 = *(int *)(v16 + 40);
      __dst = (char *)a1 + v17;
      uint64_t v76 = v16;
      uint64_t v18 = (char *)a2 + v17;
      uint64_t v19 = sub_24EC21D10();
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v21(v18, 1, v19))
      {
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
        memcpy(__dst, v18, *(void *)(*(void *)(v22 - 8) + 64));
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
      }
      else
      {
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
        v23(__dst, v18, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
      }
      v23((char *)a1 + *(int *)(v76 + 44), (char *)a2 + *(int *)(v76 + 44), v19);
      goto LABEL_29;
    case 3u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v24 = a2[2];
      a1[1] = a2[1];
      a1[2] = v24;
      a1[3] = a2[3];
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v25 = *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      uint64_t v28 = sub_24EC21D10();
      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29(v26, v27, v28);
      goto LABEL_29;
    case 4u:
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      goto LABEL_28;
    case 5u:
      uint64_t v30 = a2[1];
      *a1 = *a2;
      a1[1] = v30;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v31 = a2[4];
      a1[3] = a2[3];
      a1[4] = v31;
      *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
      uint64_t v32 = type metadata accessor for NewAndFeaturedDescriptor();
      uint64_t v33 = *(int *)(v32 + 32);
      __dsta = (char *)a1 + v33;
      uint64_t v77 = v32;
      uint64_t v34 = (char *)a2 + v33;
      uint64_t v35 = sub_24EC21D10();
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v37(v34, 1, v35))
      {
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
        memcpy(__dsta, v34, *(void *)(*(void *)(v38 - 8) + 64));
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))((char *)a1 + *(int *)(v77 + 36), (char *)a2 + *(int *)(v77 + 36), v35);
      }
      else
      {
        uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
        v39(__dsta, v34, v35);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(__dsta, 0, 1, v35);
        v39((char *)a1 + *(int *)(v77 + 36), (char *)a2 + *(int *)(v77 + 36), v35);
      }
      goto LABEL_29;
    default:
      uint64_t v4 = a2[1];
      *a1 = *a2;
      a1[1] = v4;
      uint64_t v5 = a2[3];
      a1[2] = a2[2];
      a1[3] = v5;
      uint64_t v6 = a2[4];
      uint64_t v7 = a2[5];
      a1[4] = v6;
      a1[5] = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_28:
      swift_bridgeObjectRetain();
LABEL_29:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

void *assignWithCopy for BrowseSectionDescriptor(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_24EBA3FFC((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for BrowseSectionDescriptor);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        type metadata accessor for BrowseDetailContent();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v31 = sub_24EC21D10();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(a1, a2, v31);
          uint64_t v32 = type metadata accessor for BrowseDetailVideoLinkItem();
          uint64_t v33 = *(int *)(v32 + 20);
          uint64_t v34 = (void *)((char *)a1 + v33);
          uint64_t v35 = (void *)((char *)a2 + v33);
          *uint64_t v34 = *v35;
          v34[1] = v35[1];
          uint64_t v36 = *(int *)(v32 + 24);
          uint64_t v37 = (void *)((char *)a1 + v36);
          uint64_t v38 = (char *)a2 + v36;
          *uint64_t v37 = *(void *)((char *)a2 + v36);
          v37[1] = *(void *)((char *)a2 + v36 + 8);
          v37[2] = *(void *)((char *)a2 + v36 + 16);
          void v37[3] = *(void *)((char *)a2 + v36 + 24);
          uint64_t v39 = *(int *)(type metadata accessor for VideoAsset() + 24);
          uint64_t v57 = &v38[v39];
          __dstc = (char *)v37 + v39;
          uint64_t v40 = sub_24EC21D30();
          uint64_t v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v41(__dstc, v57, v40);
        }
        else
        {
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v5 = sub_24EC21D10();
            uint64_t v6 = *(void *)(v5 - 8);
            uint64_t v7 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v6 + 48);
            __dst = (void (**)(void *, const void *, uint64_t))v6;
            if (v7(a2, 1, v5))
            {
              uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
              memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
            }
            uint64_t v45 = type metadata accessor for BrowseDetailTextItem();
            uint64_t v46 = *(int *)(v45 + 20);
            uint64_t v47 = (char *)a1 + v46;
            uint64_t v48 = (char *)a2 + v46;
            if (v7((void *)((char *)a2 + v46), 1, v5))
            {
              uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
              memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
            }
            else
            {
              __dst[2](v47, v48, v5);
              ((void (*)(char *, void, uint64_t, uint64_t))__dst[7])(v47, 0, 1, v5);
            }
            uint64_t v44 = *(int *)(v45 + 24);
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
            if (swift_getEnumCaseMultiPayload() == 1) {
              uint64_t v42 = (uint64_t *)&unk_2699466D0;
            }
            else {
              uint64_t v42 = (uint64_t *)&unk_2699466C8;
            }
            uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(v42);
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 16))(a1, a2, v43);
            swift_storeEnumTagMultiPayload();
            uint64_t v44 = *(int *)(type metadata accessor for BrowseDetailArtworkItem() + 20);
          }
          uint64_t v50 = (void *)((char *)a1 + v44);
          uint64_t v51 = (void *)((char *)a2 + v44);
          *uint64_t v50 = *v51;
          v50[1] = v51[1];
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v52 = type metadata accessor for BrowseDetailDescriptor();
        uint64_t v53 = *(int *)(v52 + 20);
        uint64_t v54 = (void *)((char *)a1 + v53);
        uint64_t v55 = (void *)((char *)a2 + v53);
        *uint64_t v54 = *v55;
        v54[1] = v55[1];
        *((unsigned char *)a1 + *(int *)(v52 + 24)) = *((unsigned char *)a2 + *(int *)(v52 + 24));
        swift_bridgeObjectRetain();
        break;
      case 2u:
        char v9 = *((unsigned char *)a2 + 8);
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = v9;
        *((unsigned char *)a1 + 9) = *((unsigned char *)a2 + 9);
        *((unsigned char *)a1 + 10) = *((unsigned char *)a2 + 10);
        *((unsigned char *)a1 + 11) = *((unsigned char *)a2 + 11);
        a1[2] = a2[2];
        a1[3] = a2[3];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v10 = type metadata accessor for BrowseEditorialDescriptor();
        uint64_t v11 = *(int *)(v10 + 40);
        __dsta = (char *)a1 + v11;
        uint64_t v62 = v10;
        uint64_t v12 = (char *)a2 + v11;
        uint64_t v13 = sub_24EC21D10();
        uint64_t v14 = *(void *)(v13 - 8);
        uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v15(v12, 1, v13))
        {
          uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
          memcpy(__dsta, v12, *(void *)(*(void *)(v16 - 8) + 64));
          (*(void (**)(char *, char *, uint64_t))(v14 + 16))((char *)a1 + *(int *)(v62 + 44), (char *)a2 + *(int *)(v62 + 44), v13);
        }
        else
        {
          uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
          v29(__dsta, v12, v13);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dsta, 0, 1, v13);
          v29((char *)a1 + *(int *)(v62 + 44), (char *)a2 + *(int *)(v62 + 44), v13);
        }
        break;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v17 = *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
        uint64_t v18 = (char *)a1 + v17;
        uint64_t v19 = (char *)a2 + v17;
        uint64_t v20 = sub_24EC21D10();
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v21(v18, v19, v20);
        break;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        swift_bridgeObjectRetain();
        break;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[3] = a2[3];
        a1[4] = a2[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        uint64_t v22 = type metadata accessor for NewAndFeaturedDescriptor();
        uint64_t v23 = *(int *)(v22 + 32);
        __dstb = (char *)a1 + v23;
        uint64_t v63 = v22;
        uint64_t v24 = (char *)a2 + v23;
        uint64_t v25 = sub_24EC21D10();
        uint64_t v26 = *(void *)(v25 - 8);
        uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v27(v24, 1, v25))
        {
          uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
          memcpy(__dstb, v24, *(void *)(*(void *)(v28 - 8) + 64));
          (*(void (**)(char *, char *, uint64_t))(v26 + 16))((char *)a1 + *(int *)(v63 + 36), (char *)a2 + *(int *)(v63 + 36), v25);
        }
        else
        {
          uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
          v30(__dstb, v24, v25);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(__dstb, 0, 1, v25);
          v30((char *)a1 + *(int *)(v63 + 36), (char *)a2 + *(int *)(v63 + 36), v25);
        }
        break;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24EBA3FFC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *initializeWithTake for BrowseSectionDescriptor(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      type metadata accessor for BrowseDetailContent();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v30 = sub_24EC21D10();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 32))(a1, a2, v30);
        uint64_t v31 = type metadata accessor for BrowseDetailVideoLinkItem();
        *(_OWORD *)((char *)a1 + *(int *)(v31 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v31 + 20));
        uint64_t v32 = *(int *)(v31 + 24);
        uint64_t v33 = (_OWORD *)((char *)a1 + v32);
        uint64_t v34 = (char *)a2 + v32;
        long long v35 = *(_OWORD *)((char *)a2 + v32 + 16);
        *uint64_t v33 = *(_OWORD *)((char *)a2 + v32);
        v33[1] = v35;
        uint64_t v36 = *(int *)(type metadata accessor for VideoAsset() + 24);
        uint64_t v37 = (char *)v33 + v36;
        uint64_t v38 = &v34[v36];
        uint64_t v39 = sub_24EC21D30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v7 = sub_24EC21D10();
          uint64_t v8 = *(void *)(v7 - 8);
          uint64_t v51 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48);
          uint64_t v50 = v8;
          if (v51(a2, 1, v7))
          {
            uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
            memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(v8 + 32))(a1, a2, v7);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
          }
          uint64_t v43 = type metadata accessor for BrowseDetailTextItem();
          uint64_t v44 = *(int *)(v43 + 20);
          uint64_t v45 = (char *)a1 + v44;
          uint64_t v46 = (char *)a2 + v44;
          if (v51((void *)((char *)a2 + v44), 1, v7))
          {
            uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
            memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v45, v46, v7);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v45, 0, 1, v7);
          }
          uint64_t v42 = *(int *)(v43 + 24);
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v40 = (uint64_t *)&unk_2699466D0;
          }
          else {
            uint64_t v40 = (uint64_t *)&unk_2699466C8;
          }
          uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(v40);
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v41 - 8) + 32))(a1, a2, v41);
          swift_storeEnumTagMultiPayload();
          uint64_t v42 = *(int *)(type metadata accessor for BrowseDetailArtworkItem() + 20);
        }
        *(_OWORD *)((char *)a1 + v42) = *(_OWORD *)((char *)a2 + v42);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v48 = type metadata accessor for BrowseDetailDescriptor();
      *(_OWORD *)((char *)a1 + *(int *)(v48 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v48 + 20));
      *((unsigned char *)a1 + *(int *)(v48 + 24)) = *((unsigned char *)a2 + *(int *)(v48 + 24));
      goto LABEL_28;
    case 2u:
      *a1 = *a2;
      *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v14 = type metadata accessor for BrowseEditorialDescriptor();
      uint64_t v15 = *(int *)(v14 + 40);
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_24EC21D10();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))((char *)a1 + *(int *)(v14 + 44), (char *)a2 + *(int *)(v14 + 44), v18);
      }
      else
      {
        uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
        v28(v16, v17, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
        v28((char *)a1 + *(int *)(v14 + 44), (char *)a2 + *(int *)(v14 + 44), v18);
      }
      goto LABEL_28;
    case 3u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      a1[3] = a2[3];
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v10 = *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_24EC21D10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      goto LABEL_28;
    case 5u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
      *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
      uint64_t v21 = type metadata accessor for NewAndFeaturedDescriptor();
      uint64_t v22 = *(int *)(v21 + 32);
      uint64_t v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      uint64_t v25 = sub_24EC21D10();
      uint64_t v26 = *(void *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
        uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
        memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))((char *)a1 + *(int *)(v21 + 36), (char *)a2 + *(int *)(v21 + 36), v25);
      }
      else
      {
        uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
        v29(v23, v24, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
        v29((char *)a1 + *(int *)(v21 + 36), (char *)a2 + *(int *)(v21 + 36), v25);
      }
LABEL_28:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithTake for BrowseSectionDescriptor(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EBA3FFC((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for BrowseSectionDescriptor);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        type metadata accessor for BrowseDetailContent();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v30 = sub_24EC21D10();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 32))(a1, a2, v30);
          uint64_t v31 = type metadata accessor for BrowseDetailVideoLinkItem();
          *(_OWORD *)((char *)a1 + *(int *)(v31 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v31 + 20));
          uint64_t v32 = *(int *)(v31 + 24);
          uint64_t v33 = (_OWORD *)((char *)a1 + v32);
          uint64_t v34 = (char *)a2 + v32;
          long long v35 = *(_OWORD *)((char *)a2 + v32 + 16);
          *uint64_t v33 = *(_OWORD *)((char *)a2 + v32);
          v33[1] = v35;
          uint64_t v36 = *(int *)(type metadata accessor for VideoAsset() + 24);
          uint64_t v37 = (char *)v33 + v36;
          uint64_t v38 = &v34[v36];
          uint64_t v39 = sub_24EC21D30();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
        }
        else
        {
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v7 = sub_24EC21D10();
            uint64_t v8 = *(void *)(v7 - 8);
            uint64_t v51 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48);
            uint64_t v50 = v8;
            if (v51(a2, 1, v7))
            {
              uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
              memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(v8 + 32))(a1, a2, v7);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
            }
            uint64_t v43 = type metadata accessor for BrowseDetailTextItem();
            uint64_t v44 = *(int *)(v43 + 20);
            uint64_t v45 = (char *)a1 + v44;
            uint64_t v46 = (char *)a2 + v44;
            if (v51((void *)((char *)a2 + v44), 1, v7))
            {
              uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
              memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v45, v46, v7);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v45, 0, 1, v7);
            }
            uint64_t v42 = *(int *)(v43 + 24);
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
            if (swift_getEnumCaseMultiPayload() == 1) {
              uint64_t v40 = (uint64_t *)&unk_2699466D0;
            }
            else {
              uint64_t v40 = (uint64_t *)&unk_2699466C8;
            }
            uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(v40);
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v41 - 8) + 32))(a1, a2, v41);
            swift_storeEnumTagMultiPayload();
            uint64_t v42 = *(int *)(type metadata accessor for BrowseDetailArtworkItem() + 20);
          }
          *(_OWORD *)((char *)a1 + v42) = *(_OWORD *)((char *)a2 + v42);
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v48 = type metadata accessor for BrowseDetailDescriptor();
        *(_OWORD *)((char *)a1 + *(int *)(v48 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v48 + 20));
        *((unsigned char *)a1 + *(int *)(v48 + 24)) = *((unsigned char *)a2 + *(int *)(v48 + 24));
        goto LABEL_29;
      case 2u:
        *a1 = *a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v14 = type metadata accessor for BrowseEditorialDescriptor();
        uint64_t v15 = *(int *)(v14 + 40);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_24EC21D10();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
          memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))((char *)a1 + *(int *)(v14 + 44), (char *)a2 + *(int *)(v14 + 44), v18);
        }
        else
        {
          uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
          v28(v16, v17, v18);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
          v28((char *)a1 + *(int *)(v14 + 44), (char *)a2 + *(int *)(v14 + 44), v18);
        }
        goto LABEL_29;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        a1[3] = a2[3];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v10 = *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = sub_24EC21D10();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
        goto LABEL_29;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        uint64_t v21 = type metadata accessor for NewAndFeaturedDescriptor();
        uint64_t v22 = *(int *)(v21 + 32);
        uint64_t v23 = (char *)a1 + v22;
        uint64_t v24 = (char *)a2 + v22;
        uint64_t v25 = sub_24EC21D10();
        uint64_t v26 = *(void *)(v25 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
        {
          uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
          memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
          (*(void (**)(char *, char *, uint64_t))(v26 + 32))((char *)a1 + *(int *)(v21 + 36), (char *)a2 + *(int *)(v21 + 36), v25);
        }
        else
        {
          uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
          v29(v23, v24, v25);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          v29((char *)a1 + *(int *)(v21 + 36), (char *)a2 + *(int *)(v21 + 36), v25);
        }
LABEL_29:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_24EBA4EA8()
{
  uint64_t result = type metadata accessor for BrowseDetailDescriptor();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for BrowseEditorialDescriptor();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for BrowseGalleryDescriptor();
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for NewAndFeaturedDescriptor();
        if (v4 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BrowseSectionDescriptor.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BrowseSectionDescriptor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBA5154);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseSectionDescriptor.CodingKeys()
{
  return &type metadata for BrowseSectionDescriptor.CodingKeys;
}

ValueMetadata *type metadata accessor for BrowseSectionDescriptor.CreatePlanBannerCodingKeys()
{
  return &type metadata for BrowseSectionDescriptor.CreatePlanBannerCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseSectionDescriptor.DetailCodingKeys()
{
  return &type metadata for BrowseSectionDescriptor.DetailCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseSectionDescriptor.EditorialCodingKeys()
{
  return &type metadata for BrowseSectionDescriptor.EditorialCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseSectionDescriptor.GalleryCodingKeys()
{
  return &type metadata for BrowseSectionDescriptor.GalleryCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseSectionDescriptor.MarketingCodingKeys()
{
  return &type metadata for BrowseSectionDescriptor.MarketingCodingKeys;
}

unsigned char *_s15FitnessBrowsing23BrowseSectionDescriptorO26CreatePlanBannerCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EBA527CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseSectionDescriptor.NewAndFeaturedCodingKeys()
{
  return &type metadata for BrowseSectionDescriptor.NewAndFeaturedCodingKeys;
}

unint64_t sub_24EBA52B8()
{
  unint64_t result = qword_269946F50;
  if (!qword_269946F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946F50);
  }
  return result;
}

unint64_t sub_24EBA5310()
{
  unint64_t result = qword_269946F58;
  if (!qword_269946F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946F58);
  }
  return result;
}

unint64_t sub_24EBA5368()
{
  unint64_t result = qword_269946F60;
  if (!qword_269946F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946F60);
  }
  return result;
}

unint64_t sub_24EBA53C0()
{
  unint64_t result = qword_269946F68;
  if (!qword_269946F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946F68);
  }
  return result;
}

unint64_t sub_24EBA5418()
{
  unint64_t result = qword_269946F70;
  if (!qword_269946F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946F70);
  }
  return result;
}

unint64_t sub_24EBA5470()
{
  unint64_t result = qword_269946F78;
  if (!qword_269946F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946F78);
  }
  return result;
}

unint64_t sub_24EBA54C8()
{
  unint64_t result = qword_269946F80;
  if (!qword_269946F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946F80);
  }
  return result;
}

unint64_t sub_24EBA5520()
{
  unint64_t result = qword_269946F88;
  if (!qword_269946F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946F88);
  }
  return result;
}

unint64_t sub_24EBA5578()
{
  unint64_t result = qword_269946F90;
  if (!qword_269946F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946F90);
  }
  return result;
}

unint64_t sub_24EBA55D0()
{
  unint64_t result = qword_269946F98;
  if (!qword_269946F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946F98);
  }
  return result;
}

unint64_t sub_24EBA5628()
{
  unint64_t result = qword_269946FA0;
  if (!qword_269946FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946FA0);
  }
  return result;
}

unint64_t sub_24EBA5680()
{
  unint64_t result = qword_269946FA8;
  if (!qword_269946FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946FA8);
  }
  return result;
}

unint64_t sub_24EBA56D8()
{
  unint64_t result = qword_269946FB0;
  if (!qword_269946FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946FB0);
  }
  return result;
}

unint64_t sub_24EBA5730()
{
  unint64_t result = qword_269946FB8;
  if (!qword_269946FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946FB8);
  }
  return result;
}

unint64_t sub_24EBA5788()
{
  unint64_t result = qword_269946FC0;
  if (!qword_269946FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946FC0);
  }
  return result;
}

unint64_t sub_24EBA57E0()
{
  unint64_t result = qword_269946FC8;
  if (!qword_269946FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946FC8);
  }
  return result;
}

unint64_t sub_24EBA5838()
{
  unint64_t result = qword_269946FD0;
  if (!qword_269946FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946FD0);
  }
  return result;
}

unint64_t sub_24EBA5890()
{
  unint64_t result = qword_269946FD8;
  if (!qword_269946FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946FD8);
  }
  return result;
}

unint64_t sub_24EBA58E8()
{
  unint64_t result = qword_269946FE0;
  if (!qword_269946FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946FE0);
  }
  return result;
}

unint64_t sub_24EBA5940()
{
  unint64_t result = qword_269946FE8;
  if (!qword_269946FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946FE8);
  }
  return result;
}

unint64_t sub_24EBA5998()
{
  unint64_t result = qword_269946FF0;
  if (!qword_269946FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269946FF0);
  }
  return result;
}

uint64_t sub_24EBA59EC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000024EC30EC0 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6961746564 && a2 == 0xE600000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6169726F74696465 && a2 == 0xE90000000000006CLL || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7972656C6C6167 && a2 == 0xE700000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6974656B72616DLL && a2 == 0xE900000000000067 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6546646E4177656ELL && a2 == 0xEE00646572757461)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_24EBA5C68(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946FF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t CreatePlanBannerEnvironment.init(makeWorkoutPlanUpdatedStream:onBannerTapped:queryBannerVisibility:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t destroy for CreatePlanBannerEnvironment()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for CreatePlanBannerEnvironment(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for CreatePlanBannerEnvironment(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_OWORD *assignWithTake for CreatePlanBannerEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CreatePlanBannerEnvironment(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CreatePlanBannerEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CreatePlanBannerEnvironment()
{
  return &type metadata for CreatePlanBannerEnvironment;
}

uint64_t sub_24EBA5F10@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24EC22C70();
    uint64_t v23 = (void *)sub_24EC22550();
    sub_24EC22280();
  }
  sub_24EC223B0();
  long long v24 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(a9 + 112) = v24;
  long long v25 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v25;
  long long v26 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 80) = v26;
  long long v27 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v27;
  *(_OWORD *)(a9 + 184) = v32;
  *(_OWORD *)(a9 + 200) = v33;
  *(_OWORD *)(a9 + 216) = v34;
  *(_OWORD *)(a9 + 232) = v35;
  *(_OWORD *)(a9 + 136) = v29;
  *(_OWORD *)(a9 + 152) = v30;
  *(unsigned char *)(a9 + 128) = *(unsigned char *)(v13 + 128);
  *(_OWORD *)(a9 + 168) = v31;
  return sub_24EB73978(v13);
}

__n128 sub_24EBA60EC@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24EC22C70();
    uint64_t v23 = (void *)sub_24EC22550();
    sub_24EC22280();
  }
  sub_24EC223B0();
  sub_24EB741CC(v13, a9, &qword_269947060);
  long long v24 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269947070) + 36));
  v24[4] = v30;
  v24[5] = v31;
  v24[6] = v32;
  _OWORD *v24 = v26;
  v24[1] = v27;
  __n128 result = v29;
  v24[2] = v28;
  v24[3] = v29;
  return result;
}

uint64_t sub_24EBA62AC()
{
  return sub_24EC222E0();
}

uint64_t NewAndFeaturedView.init(store:artworkViewBuilder:contextMenuViewModifierBuilder:identifier:sectionTitle:sectionSubtitle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  long long v31 = (void *)swift_allocObject();
  void v31[2] = a8;
  v31[3] = a10;
  v31[4] = a11;
  v31[5] = a12;
  v31[6] = a13;
  v31[7] = a14;
  v31[8] = a15;
  v31[9] = a16;
  v31[10] = a17;
  v31[11] = a18;
  v31[12] = a19;
  v31[13] = a20;
  v31[14] = a21;
  v31[15] = a22;
  v31[16] = a23;
  v31[17] = a24;
  v31[18] = a25;
  v31[19] = a26;
  v31[20] = a27;
  v31[21] = a28;
  v31[22] = a29;
  v31[23] = a30;
  v31[24] = a1;
  v31[25] = a2;
  type metadata accessor for NewAndFeaturedFeature();
  swift_getWitnessTable();
  sub_24EC22A00();
  swift_getWitnessTable();
  uint64_t v32 = sub_24EC222D0();
  uint64_t v34 = v33;
  char v36 = v35;
  uint64_t v37 = (int *)type metadata accessor for NewAndFeaturedView();
  uint64_t v38 = a9 + v37[51];
  *(void *)uint64_t v38 = v32;
  *(void *)(v38 + 8) = v34;
  *(unsigned char *)(v38 + 16) = v36 & 1;
  uint64_t v39 = a9 + v37[52];
  uint64_t v40 = sub_24EC21E70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 32))(v39, a3, v40);
  uint64_t v41 = a9 + v37[53];
  uint64_t v42 = sub_24EC22210();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v41, a4, v42);
  uint64_t v43 = sub_24EC21DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 32))(a9, a5, v43);
  uint64_t v44 = a9 + v37[49];
  uint64_t v45 = sub_24EC21D10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 32))(v44, a6, v45);
  return sub_24EB7D0B0(a7, a9 + v37[50], &qword_2699465B8);
}

uint64_t sub_24EBA67A4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24EBA67DC()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t type metadata accessor for NewAndFeaturedView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24EBA681C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24EBA6884(v2, a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a2, a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
           a1[19],
           a1[20],
           a1[21],
           a1[22],
           a1[23]);
}

uint64_t sub_24EBA6884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v79 = a8;
  uint64_t v88 = a1;
  uint64_t v77 = a9;
  uint64_t v87 = a24;
  uint64_t v86 = a23;
  uint64_t v85 = a22;
  uint64_t v84 = a21;
  uint64_t v83 = a20;
  uint64_t v82 = a19;
  uint64_t v78 = a18;
  uint64_t v89 = a17;
  uint64_t v90 = a16;
  uint64_t v94 = a15;
  uint64_t v91 = a14;
  uint64_t v92 = a13;
  uint64_t v93 = a12;
  uint64_t v80 = a11;
  uint64_t v81 = a10;
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947070);
  uint64_t v30 = MEMORY[0x270FA5388](v76);
  uint64_t v64 = (uint64_t)&v63 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v65 = (uint64_t)&v63 - v32;
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947080);
  MEMORY[0x270FA5388](v73);
  uint64_t v75 = (uint64_t)&v63 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947060);
  MEMORY[0x270FA5388](v74);
  uint64_t v66 = (char *)&v63 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = a2;
  uint64_t v117 = a2;
  uint64_t v118 = a3;
  uint64_t v35 = a3;
  uint64_t v68 = a3;
  uint64_t v69 = a4;
  uint64_t v36 = a4;
  uint64_t v119 = a4;
  uint64_t v120 = a5;
  uint64_t v37 = a5;
  uint64_t v70 = a5;
  uint64_t v71 = a6;
  uint64_t v38 = a6;
  uint64_t v121 = a6;
  uint64_t v122 = a7;
  uint64_t v39 = a7;
  uint64_t v72 = a7;
  uint64_t v40 = v79;
  uint64_t v123 = v79;
  uint64_t v124 = a10;
  uint64_t v125 = a11;
  uint64_t v126 = v93;
  uint64_t v127 = v92;
  uint64_t v128 = v91;
  uint64_t v129 = v94;
  uint64_t v130 = v90;
  uint64_t v131 = v89;
  uint64_t v41 = v78;
  uint64_t v132 = v78;
  uint64_t v133 = v82;
  uint64_t v134 = v83;
  uint64_t v135 = v84;
  uint64_t v136 = v85;
  uint64_t v137 = v86;
  uint64_t v138 = v87;
  type metadata accessor for NewAndFeaturedView();
  sub_24EBA62AC();
  uint64_t v95 = a2;
  uint64_t v96 = v35;
  uint64_t v97 = v36;
  uint64_t v98 = v37;
  uint64_t v99 = v38;
  uint64_t v100 = v39;
  uint64_t v42 = v82;
  uint64_t v101 = v40;
  uint64_t v102 = v81;
  uint64_t v103 = v80;
  uint64_t v104 = v93;
  uint64_t v105 = v92;
  uint64_t v106 = v91;
  uint64_t v107 = v94;
  uint64_t v108 = v90;
  uint64_t v109 = v89;
  uint64_t v110 = v41;
  uint64_t v43 = (uint64_t)v66;
  uint64_t v45 = v83;
  uint64_t v44 = v84;
  uint64_t v111 = v82;
  uint64_t v112 = v83;
  uint64_t v47 = v85;
  uint64_t v46 = v86;
  uint64_t v113 = v84;
  uint64_t v114 = v85;
  uint64_t v48 = v87;
  uint64_t v115 = v86;
  uint64_t v116 = v87;
  swift_getKeyPath();
  sub_24EC229E0();
  swift_release();
  swift_release();
  char v49 = sub_24EC22110();
  *(void *)uint64_t v43 = sub_24EC224C0();
  *(void *)(v43 + 8) = 0x4014000000000000;
  *(unsigned char *)(v43 + 16) = 0;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947088);
  *((void *)&v62 + 1) = v46;
  *((void *)&v61 + 1) = v44;
  *(void *)&long long v62 = v47;
  *((void *)&v60 + 1) = v42;
  *(void *)&long long v61 = v45;
  *(void *)&long long v60 = v78;
  *((void *)&v59 + 1) = v89;
  *(void *)&long long v59 = v90;
  *((void *)&v58 + 1) = v94;
  *(void *)&long long v58 = v91;
  *((void *)&v57 + 1) = v92;
  *(void *)&long long v57 = v93;
  *((void *)&v56 + 1) = v80;
  *(void *)&long long v56 = v81;
  sub_24EBA6DF0(v88, v67, v68, v69, v70, v71, v72, v79, v43 + *(int *)(v50 + 44), v56, v57, v58, v59, v60, v61, v62, v48);
  if (v49)
  {
    uint64_t v51 = &qword_269947060;
    sub_24EB741CC(v43, v75, &qword_269947060);
    swift_storeEnumTagMultiPayload();
    sub_24EBA96E4();
    sub_24EBA9740(&qword_269947068, &qword_269947070, (void (*)(void))sub_24EBA96E4);
    sub_24EC224E0();
    uint64_t v52 = v43;
  }
  else
  {
    sub_24EC22940();
    uint64_t v53 = v64;
    sub_24EBA60EC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v64, 0.0, 1, 0.0, 1);
    sub_24EB742F4(v43, &qword_269947060);
    uint64_t v51 = &qword_269947070;
    uint64_t v54 = v65;
    sub_24EB7D0B0(v53, v65, &qword_269947070);
    sub_24EB741CC(v54, v75, &qword_269947070);
    swift_storeEnumTagMultiPayload();
    sub_24EBA96E4();
    sub_24EBA9740(&qword_269947068, &qword_269947070, (void (*)(void))sub_24EBA96E4);
    sub_24EC224E0();
    uint64_t v52 = v54;
  }
  return sub_24EB742F4(v52, v51);
}

uint64_t sub_24EBA6DF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, long long a11, long long a12, long long a13, long long a14, long long a15, long long a16, uint64_t a17)
{
  uint64_t v66 = a8;
  uint64_t v65 = a7;
  uint64_t v63 = a6;
  uint64_t v62 = a5;
  uint64_t v60 = a4;
  uint64_t v68 = a9;
  uint64_t v64 = a17;
  long long v61 = a16;
  long long v59 = a15;
  long long v58 = a14;
  long long v57 = a13;
  long long v56 = a12;
  long long v55 = a11;
  long long v54 = a10;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_24EC21D10();
  uint64_t v23 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v53 = (char *)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_24EC224B0();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  long long v28 = (char *)&v52 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947090);
  uint64_t v30 = MEMORY[0x270FA5388](v29 - 8);
  uint64_t v32 = (char *)&v52 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v52 - v33;
  uint64_t v69 = a2;
  uint64_t v70 = a3;
  uint64_t v71 = v60;
  uint64_t v72 = v62;
  uint64_t v73 = v63;
  uint64_t v74 = v65;
  uint64_t v75 = v66;
  long long v76 = v54;
  long long v77 = v55;
  long long v78 = v56;
  long long v79 = v57;
  long long v80 = v58;
  long long v81 = v59;
  long long v82 = v61;
  uint64_t v83 = v64;
  uint64_t v35 = type metadata accessor for NewAndFeaturedView();
  uint64_t v69 = sub_24EC21CF0();
  uint64_t v70 = v36;
  LOBYTE(v71) = v37 & 1;
  uint64_t v72 = v38;
  sub_24EC224A0();
  sub_24EC22700();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  sub_24EB733FC(v69, v70, v71);
  swift_bridgeObjectRelease();
  sub_24EB7D0B0((uint64_t)v32, (uint64_t)v34, &qword_269947090);
  uint64_t v39 = a1 + *(int *)(v35 + 200);
  uint64_t v40 = v67;
  sub_24EB741CC(v39, (uint64_t)v22, &qword_2699465B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v22, 1, v40) == 1)
  {
    sub_24EB742F4((uint64_t)v22, &qword_2699465B8);
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    uint64_t v43 = 0;
    uint64_t v44 = 0;
  }
  else
  {
    uint64_t v45 = v53;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v53, v22, v40);
    uint64_t v41 = sub_24EC21CF0();
    uint64_t v42 = v46;
    uint64_t v44 = v47;
    uint64_t v43 = v48 & 1;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v45, v40);
  }
  sub_24EB741CC((uint64_t)v34, (uint64_t)v32, &qword_269947090);
  uint64_t v49 = v68;
  sub_24EB741CC((uint64_t)v32, v68, &qword_269947090);
  uint64_t v50 = (uint64_t *)(v49 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269947098) + 48));
  *uint64_t v50 = v41;
  v50[1] = v42;
  v50[2] = v43;
  v50[3] = v44;
  sub_24EBBB4FC(v41, v42, v43, v44);
  sub_24EB742F4((uint64_t)v34, &qword_269947090);
  sub_24EBBB540(v41, v42, v43, v44);
  return sub_24EB742F4((uint64_t)v32, &qword_269947090);
}

uint64_t sub_24EBA7308(void *a1)
{
  uint64_t v149 = a1[7];
  uint64_t v2 = sub_24EC22C90();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v144 = (char *)&v108 - v3;
  uint64_t v159 = a1[5];
  uint64_t v4 = sub_24EC22C90();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v153 = (char *)&v108 - v5;
  uint64_t v6 = sub_24EC21EA0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v142 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[2];
  uint64_t v8 = a1[3];
  uint64_t v10 = a1[12];
  uint64_t v11 = (ValueMetadata *)a1[13];
  uint64_t v12 = a1[14];
  uint64_t v150 = a1[23];
  uint64_t v294 = v9;
  uint64_t v295 = v8;
  uint64_t v160 = v9;
  uint64_t v161 = v8;
  uint64_t v13 = v8;
  uint64_t v296 = v10;
  v297 = v11;
  uint64_t v154 = v10;
  uint64_t v156 = v12;
  uint64_t v157 = v11;
  uint64_t v298 = v12;
  uint64_t v299 = v150;
  uint64_t v14 = sub_24EC21F30();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v158 = (char *)&v108 - v15;
  uint64_t v145 = sub_24EC21DA0();
  uint64_t v152 = *(void *)(v145 - 8);
  MEMORY[0x270FA5388](v145);
  uint64_t v143 = (char *)&v108 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = a1[16];
  uint64_t v17 = v151;
  unint64_t v18 = sub_24EBA93F4();
  unint64_t v146 = v18;
  unint64_t v19 = sub_24EBA9448();
  unint64_t v148 = v19;
  unint64_t v147 = sub_24EBA949C();
  uint64_t v20 = a1[18];
  uint64_t v294 = v9;
  uint64_t v295 = v13;
  uint64_t v296 = v159;
  v297 = &type metadata for NewAndFeaturedItemContext;
  uint64_t v21 = v149;
  uint64_t v298 = v149;
  uint64_t v299 = v10;
  v300 = v11;
  uint64_t v301 = v12;
  uint64_t v302 = v17;
  unint64_t v303 = v18;
  unint64_t v304 = v19;
  unint64_t v305 = v147;
  uint64_t v306 = v20;
  uint64_t v307 = v150;
  uint64_t v22 = v20;
  uint64_t v155 = v20;
  uint64_t v23 = sub_24EC21FA0();
  uint64_t v112 = v23;
  sub_24EC22F60();
  uint64_t v120 = *(void *)(*(void *)(v23 - 8) + 72);
  swift_allocObject();
  uint64_t v111 = sub_24EC22B10();
  uint64_t v122 = v24;
  uint64_t v25 = v143;
  sub_24EC21D90();
  uint64_t v26 = sub_24EC21D80();
  uint64_t v28 = v27;
  uint64_t v29 = *(void (**)(char *, uint64_t))(v152 + 8);
  v152 += 8;
  uint64_t v124 = v29;
  v29(v25, v145);
  uint64_t v294 = v26;
  uint64_t v295 = v28;
  LOBYTE(v296) = 1;
  sub_24EBA62AC();
  uint64_t v272 = v160;
  uint64_t v273 = v161;
  uint64_t v30 = a1[4];
  uint64_t v114 = a1;
  uint64_t v115 = v30;
  uint64_t v274 = v30;
  uint64_t v275 = v159;
  uint64_t v119 = a1[6];
  uint64_t v276 = v119;
  uint64_t v277 = v21;
  uint64_t v31 = a1[9];
  uint64_t v117 = a1[8];
  uint64_t v121 = v31;
  uint64_t v278 = v117;
  uint64_t v279 = v31;
  uint64_t v32 = a1[11];
  uint64_t v141 = a1[10];
  uint64_t v123 = v32;
  uint64_t v280 = v141;
  uint64_t v281 = v32;
  uint64_t v282 = v154;
  v283 = v157;
  uint64_t v140 = a1[15];
  uint64_t v284 = v156;
  uint64_t v285 = v140;
  uint64_t v139 = a1[17];
  uint64_t v286 = v151;
  uint64_t v287 = v139;
  uint64_t v33 = a1[20];
  uint64_t v138 = a1[19];
  uint64_t v288 = v22;
  uint64_t v289 = v138;
  uint64_t v34 = a1[21];
  uint64_t v35 = a1[22];
  uint64_t v135 = v33;
  uint64_t v136 = v34;
  uint64_t v137 = v35;
  uint64_t v290 = v33;
  uint64_t v291 = v34;
  uint64_t v292 = v35;
  uint64_t v293 = v150;
  swift_getKeyPath();
  uint64_t v36 = (uint64_t)v142;
  sub_24EC229E0();
  swift_release();
  swift_release();
  sub_24EC21E80();
  sub_24EB77D7C(v36);
  uint64_t v37 = *(void *)(v159 - 8);
  uint64_t v118 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 56);
  uint64_t v116 = v37 + 56;
  v118(v153, 1, 1);
  uint64_t v38 = *(void *)(v149 - 8);
  uint64_t v133 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 56);
  uint64_t v134 = v38 + 56;
  v133(v144, 1, 1);
  uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699470C8);
  uint64_t v39 = sub_24EC21FE0();
  uint64_t v40 = *(void *)(*(void *)(v39 - 8) + 72);
  uint64_t v41 = *(unsigned __int8 *)(*(void *)(v39 - 8) + 80);
  uint64_t v42 = *(void *)(v39 - 8);
  uint64_t v43 = (v41 + 32) & ~v41;
  uint64_t v129 = v43;
  uint64_t v130 = v41 | 7;
  uint64_t v131 = v43 + v40;
  uint64_t v44 = swift_allocObject();
  long long v128 = xmmword_24EC28530;
  *(_OWORD *)(v44 + 16) = xmmword_24EC28530;
  unsigned int v125 = *MEMORY[0x263F3DEB0];
  uint64_t v45 = *(void (**)(void))(v42 + 104);
  uint64_t v126 = v42 + 104;
  uint64_t v127 = (void (*)(uint64_t, void, uint64_t))v45;
  uint64_t v113 = v39;
  v45(v44 + v43);
  sub_24EBBC220(v44);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v46 = v151;
  uint64_t v47 = v154;
  uint64_t v48 = v149;
  uint64_t v49 = v122;
  uint64_t v50 = v160;
  uint64_t v51 = v161;
  uint64_t v52 = v159;
  sub_24EC21F80();
  uint64_t v110 = v49 + v120;
  uint64_t v53 = v143;
  sub_24EC21D90();
  uint64_t v54 = sub_24EC21D80();
  uint64_t v56 = v55;
  v124(v53, v145);
  uint64_t v294 = v54;
  uint64_t v295 = v56;
  LOBYTE(v296) = 1;
  sub_24EBA62AC();
  uint64_t v250 = v50;
  uint64_t v251 = v51;
  uint64_t v252 = v115;
  uint64_t v253 = v52;
  uint64_t v254 = v119;
  uint64_t v255 = v48;
  uint64_t v256 = v117;
  uint64_t v257 = v121;
  uint64_t v258 = v141;
  uint64_t v259 = v123;
  uint64_t v260 = v47;
  v261 = v157;
  uint64_t v262 = v156;
  uint64_t v263 = v140;
  uint64_t v264 = v46;
  uint64_t v265 = v139;
  uint64_t v266 = v155;
  uint64_t v267 = v138;
  uint64_t v268 = v135;
  uint64_t v269 = v136;
  uint64_t v270 = v137;
  uint64_t v271 = v150;
  swift_getKeyPath();
  uint64_t v57 = (uint64_t)v142;
  sub_24EC229E0();
  swift_release();
  swift_release();
  sub_24EC21E80();
  sub_24EB77D7C(v57);
  uint64_t v58 = v159;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v118)(v153, 1, 1, v159);
  uint64_t v59 = v149;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v133)(v144, 1, 1, v149);
  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = v128;
  v127(v60 + v129, v125, v113);
  uint64_t v109 = sub_24EBBC220(v60);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v61 = v151;
  uint64_t v62 = v157;
  uint64_t v63 = v154;
  uint64_t v64 = v160;
  sub_24EC21F80();
  uint64_t v109 = v122 + 2 * v120;
  uint64_t v110 = 2 * v120;
  uint64_t v65 = v143;
  sub_24EC21D90();
  uint64_t v66 = sub_24EC21D80();
  uint64_t v68 = v67;
  v124(v65, v145);
  uint64_t v294 = v66;
  uint64_t v295 = v68;
  LOBYTE(v296) = 1;
  sub_24EBA62AC();
  uint64_t v228 = v64;
  uint64_t v229 = v161;
  uint64_t v230 = v115;
  uint64_t v231 = v58;
  uint64_t v232 = v119;
  uint64_t v233 = v59;
  uint64_t v234 = v117;
  uint64_t v235 = v121;
  uint64_t v236 = v141;
  uint64_t v237 = v123;
  uint64_t v238 = v63;
  char v239 = v62;
  uint64_t v240 = v156;
  uint64_t v241 = v140;
  uint64_t v242 = v61;
  uint64_t v243 = v139;
  uint64_t v244 = v155;
  uint64_t v245 = v138;
  uint64_t v246 = v135;
  uint64_t v247 = v136;
  uint64_t v248 = v137;
  uint64_t v249 = v150;
  swift_getKeyPath();
  uint64_t v69 = (uint64_t)v142;
  sub_24EC229E0();
  swift_release();
  swift_release();
  sub_24EC21E80();
  sub_24EB77D7C(v69);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v118)(v153, 1, 1, v159);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v133)(v144, 1, 1, v149);
  uint64_t v70 = swift_allocObject();
  *(_OWORD *)(v70 + 16) = v128;
  v127(v70 + v129, v125, v113);
  sub_24EBBC220(v70);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v71 = v151;
  uint64_t v72 = v157;
  uint64_t v73 = v154;
  uint64_t v74 = v159;
  uint64_t v76 = v160;
  uint64_t v75 = v161;
  sub_24EC21F80();
  v110 += v122 + v120;
  long long v77 = v143;
  sub_24EC21D90();
  uint64_t v78 = sub_24EC21D80();
  uint64_t v80 = v79;
  v124(v77, v145);
  uint64_t v294 = v78;
  uint64_t v295 = v80;
  LOBYTE(v296) = 1;
  sub_24EBA62AC();
  uint64_t v206 = v76;
  uint64_t v207 = v75;
  uint64_t v208 = v115;
  uint64_t v209 = v74;
  uint64_t v210 = v119;
  uint64_t v81 = v149;
  uint64_t v211 = v149;
  uint64_t v212 = v117;
  uint64_t v213 = v121;
  uint64_t v214 = v141;
  uint64_t v215 = v123;
  uint64_t v216 = v73;
  uint64_t v217 = v72;
  uint64_t v218 = v156;
  uint64_t v219 = v140;
  uint64_t v220 = v71;
  uint64_t v221 = v139;
  uint64_t v222 = v155;
  uint64_t v223 = v138;
  uint64_t v224 = v135;
  uint64_t v225 = v136;
  uint64_t v226 = v137;
  uint64_t v227 = v150;
  swift_getKeyPath();
  uint64_t v82 = (uint64_t)v142;
  sub_24EC229E0();
  swift_release();
  swift_release();
  sub_24EC21E80();
  sub_24EB77D7C(v82);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v118)(v153, 1, 1, v159);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v133)(v144, 1, 1, v81);
  uint64_t v83 = swift_allocObject();
  *(_OWORD *)(v83 + 16) = v128;
  v127(v83 + v129, v125, v113);
  sub_24EBBC220(v83);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v84 = v151;
  uint64_t v85 = v81;
  uint64_t v86 = v160;
  uint64_t v87 = v161;
  uint64_t v88 = v159;
  sub_24EC21F80();
  uint64_t v109 = v122 + 4 * v120;
  uint64_t v110 = 4 * v120;
  uint64_t v89 = v143;
  sub_24EC21D90();
  uint64_t v90 = sub_24EC21D80();
  uint64_t v92 = v91;
  v124(v89, v145);
  uint64_t v294 = v90;
  uint64_t v295 = v92;
  LOBYTE(v296) = 1;
  sub_24EBA62AC();
  uint64_t v184 = v86;
  uint64_t v185 = v87;
  uint64_t v186 = v115;
  uint64_t v187 = v88;
  uint64_t v188 = v119;
  uint64_t v189 = v85;
  uint64_t v190 = v117;
  uint64_t v191 = v121;
  uint64_t v192 = v141;
  uint64_t v193 = v123;
  uint64_t v194 = v154;
  uint64_t v195 = v157;
  uint64_t v196 = v156;
  uint64_t v197 = v140;
  uint64_t v198 = v84;
  uint64_t v199 = v139;
  uint64_t v200 = v155;
  uint64_t v201 = v138;
  uint64_t v202 = v135;
  uint64_t v203 = v136;
  uint64_t v204 = v137;
  uint64_t v205 = v150;
  swift_getKeyPath();
  uint64_t v93 = (uint64_t)v142;
  sub_24EC229E0();
  swift_release();
  swift_release();
  sub_24EC21E80();
  sub_24EB77D7C(v93);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v118)(v153, 1, 1, v88);
  uint64_t v94 = v85;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v133)(v144, 1, 1, v85);
  uint64_t v95 = swift_allocObject();
  *(_OWORD *)(v95 + 16) = v128;
  v127(v95 + v129, v125, v113);
  sub_24EBBC220(v95);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v96 = v155;
  uint64_t v97 = v151;
  uint64_t v98 = v159;
  uint64_t v99 = v160;
  uint64_t v100 = v161;
  sub_24EC21F80();
  v122 += v110 + v120;
  uint64_t v101 = v143;
  sub_24EC21D90();
  uint64_t v102 = sub_24EC21D80();
  uint64_t v104 = v103;
  v124(v101, v145);
  uint64_t v294 = v102;
  uint64_t v295 = v104;
  LOBYTE(v296) = 1;
  sub_24EBA62AC();
  uint64_t v162 = v99;
  uint64_t v163 = v100;
  uint64_t v164 = v115;
  uint64_t v165 = v98;
  uint64_t v166 = v119;
  uint64_t v167 = v94;
  uint64_t v168 = v117;
  uint64_t v169 = v121;
  uint64_t v170 = v141;
  uint64_t v171 = v123;
  uint64_t v172 = v154;
  uint64_t v173 = v157;
  uint64_t v174 = v156;
  uint64_t v175 = v140;
  uint64_t v176 = v97;
  uint64_t v177 = v139;
  uint64_t v178 = v96;
  uint64_t v179 = v138;
  uint64_t v180 = v135;
  uint64_t v181 = v136;
  uint64_t v182 = v137;
  uint64_t v183 = v150;
  swift_getKeyPath();
  uint64_t v105 = (uint64_t)v142;
  sub_24EC229E0();
  swift_release();
  swift_release();
  sub_24EC21E80();
  sub_24EB77D7C(v105);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v118)(v153, 1, 1, v159);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v133)(v144, 1, 1, v149);
  uint64_t v106 = swift_allocObject();
  *(_OWORD *)(v106 + 16) = v128;
  v127(v106 + v129, v125, v113);
  sub_24EBBC220(v106);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_24EC21F80();
  return sub_24EBC6814(v111);
}

uint64_t NewAndFeaturedView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  unint64_t v33 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269947000);
  uint64_t v4 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v56 = (ValueMetadata *)a1[4];
  unint64_t v49 = a1[5];
  unint64_t v5 = a1[7];
  unint64_t v60 = a1[9];
  uint64_t v6 = a1[10];
  uint64_t v53 = v4;
  uint64_t v54 = v6;
  unint64_t v7 = a1[12];
  uint64_t v58 = a1[11];
  unint64_t v51 = v5;
  unint64_t v52 = v7;
  unint64_t v8 = a1[13];
  uint64_t v34 = a1[14];
  unint64_t v35 = v8;
  unint64_t v37 = a1[16];
  unint64_t v63 = sub_24EBA93F4();
  unint64_t v9 = sub_24EBA9448();
  unint64_t v10 = sub_24EBA949C();
  unint64_t v36 = a1[18];
  uint64_t v38 = a1[23];
  uint64_t v116 = v4;
  unint64_t v57 = v3;
  unint64_t v117 = v3;
  unint64_t v118 = v49;
  uint64_t v119 = &type metadata for NewAndFeaturedItemContext;
  unint64_t v120 = v5;
  unint64_t v121 = v7;
  unint64_t v122 = v8;
  uint64_t v123 = v34;
  unint64_t v124 = v37;
  unsigned int v125 = (ValueMetadata *)v63;
  unint64_t v126 = v9;
  unint64_t v127 = v10;
  unint64_t v128 = v36;
  uint64_t v129 = v38;
  uint64_t v11 = sub_24EC21FA0();
  uint64_t v46 = a1;
  uint64_t v59 = a1[15];
  uint64_t v55 = a1[20];
  unint64_t v12 = a1[22];
  uint64_t v62 = a1[21];
  unint64_t v63 = v12;
  uint64_t v50 = v11;
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v13 = MEMORY[0x263F1BA08];
  uint64_t v45 = sub_24EC22160();
  v32[13] = sub_24EC22140();
  v32[14] = sub_24EC224F0();
  uint64_t v43 = sub_24EC224F0();
  uint64_t v44 = sub_24EC22260();
  uint64_t v116 = v4;
  unint64_t v117 = v13;
  unint64_t v118 = v3;
  uint64_t v119 = v56;
  unint64_t v120 = v13;
  unint64_t v121 = v13;
  unint64_t v122 = v49;
  uint64_t v123 = MEMORY[0x263F188F8];
  unint64_t v124 = v13;
  unsigned int v125 = &type metadata for NewAndFeaturedItemContext;
  unint64_t v126 = v5;
  unint64_t v127 = v60;
  unint64_t v128 = v13;
  uint64_t v129 = v54;
  uint64_t v130 = v58;
  unint64_t v131 = v7;
  uint64_t v132 = v50;
  uint64_t v133 = MEMORY[0x263F1BA00];
  uint64_t v134 = v59;
  uint64_t v135 = MEMORY[0x263F1BA00];
  uint64_t v136 = MEMORY[0x263F1BA00];
  uint64_t v137 = MEMORY[0x263F188F0];
  uint64_t v138 = MEMORY[0x263F1BA00];
  uint64_t v139 = v55;
  uint64_t v140 = MEMORY[0x263F1BA00];
  uint64_t v141 = v62;
  unint64_t v142 = v63;
  uint64_t v143 = WitnessTable;
  v32[10] = sub_24EC22100();
  v32[11] = sub_24EC224F0();
  v32[12] = sub_24EC224F0();
  v32[7] = sub_24EC224F0();
  uint64_t v14 = a1[17];
  uint64_t v47 = a1[6];
  uint64_t v48 = v14;
  uint64_t v42 = sub_24EC22160();
  v32[8] = sub_24EC22140();
  v32[9] = sub_24EC224F0();
  v32[1] = sub_24EC224F0();
  uint64_t v41 = sub_24EC22260();
  uint64_t v116 = v4;
  unint64_t v117 = MEMORY[0x263F1BA08];
  unint64_t v118 = v3;
  uint64_t v119 = v56;
  unint64_t v120 = MEMORY[0x263F1BA08];
  unint64_t v121 = MEMORY[0x263F1BA08];
  unint64_t v122 = v49;
  uint64_t v123 = v47;
  unint64_t v124 = MEMORY[0x263F1BA08];
  unsigned int v125 = &type metadata for NewAndFeaturedItemContext;
  unint64_t v126 = v5;
  unint64_t v127 = v60;
  unint64_t v128 = MEMORY[0x263F1BA08];
  uint64_t v129 = v54;
  uint64_t v130 = v58;
  unint64_t v131 = v7;
  uint64_t v132 = v50;
  uint64_t v133 = MEMORY[0x263F1BA00];
  uint64_t v134 = v59;
  uint64_t v135 = MEMORY[0x263F1BA00];
  uint64_t v136 = MEMORY[0x263F1BA00];
  uint64_t v137 = v48;
  uint64_t v138 = MEMORY[0x263F1BA00];
  uint64_t v139 = v55;
  uint64_t v140 = MEMORY[0x263F1BA00];
  uint64_t v15 = MEMORY[0x263F1BA00];
  uint64_t v141 = v62;
  unint64_t v142 = v63;
  uint64_t v143 = WitnessTable;
  v32[2] = sub_24EC22100();
  v32[3] = sub_24EC224F0();
  v32[4] = sub_24EC224F0();
  v32[5] = sub_24EC224F0();
  v32[6] = sub_24EC22C90();
  uint64_t v50 = sub_24EC224F0();
  uint64_t WitnessTable = sub_24EC22920();
  unint64_t v33 = sub_24EBA94F0();
  uint64_t v114 = swift_getWitnessTable();
  uint64_t v115 = swift_getWitnessTable();
  uint64_t v112 = v15;
  uint64_t v113 = swift_getWitnessTable();
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v110 = swift_getWitnessTable();
  uint64_t v111 = swift_getWitnessTable();
  uint64_t v108 = v16;
  uint64_t v109 = swift_getWitnessTable();
  uint64_t v106 = swift_getWitnessTable();
  uint64_t v17 = MEMORY[0x263F1BA00];
  uint64_t v107 = MEMORY[0x263F1BA00];
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v104 = swift_getWitnessTable();
  uint64_t v105 = swift_getWitnessTable();
  uint64_t v102 = v17;
  uint64_t v103 = swift_getWitnessTable();
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v100 = swift_getWitnessTable();
  uint64_t v101 = swift_getWitnessTable();
  uint64_t v98 = v19;
  uint64_t v99 = swift_getWitnessTable();
  uint64_t v96 = swift_getWitnessTable();
  uint64_t v97 = v17;
  uint64_t v95 = swift_getWitnessTable();
  uint64_t v93 = v18;
  uint64_t v94 = swift_getWitnessTable();
  unint64_t v90 = v33;
  uint64_t v91 = swift_getWitnessTable();
  uint64_t v92 = v17;
  swift_getWitnessTable();
  sub_24EC22900();
  sub_24EC22380();
  uint64_t v20 = sub_24EC22840();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)v32 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)v32 - v25;
  uint64_t v64 = v53;
  unint64_t v65 = v57;
  uint64_t v66 = v56;
  unint64_t v67 = v49;
  uint64_t v68 = v47;
  unint64_t v69 = v51;
  uint64_t v70 = v46[8];
  unint64_t v71 = v60;
  uint64_t v72 = v54;
  uint64_t v73 = v58;
  unint64_t v74 = v52;
  unint64_t v75 = v35;
  uint64_t v76 = v34;
  uint64_t v77 = v59;
  unint64_t v78 = v37;
  uint64_t v79 = v48;
  uint64_t v27 = v46[19];
  unint64_t v80 = v36;
  uint64_t v81 = v27;
  uint64_t v82 = v55;
  uint64_t v83 = v62;
  unint64_t v84 = v63;
  uint64_t v85 = v38;
  uint64_t v86 = v39;
  uint64_t v88 = swift_getWitnessTable();
  uint64_t v89 = MEMORY[0x263F1A240];
  uint64_t v28 = swift_getWitnessTable();
  sub_24EC22830();
  uint64_t v87 = v28;
  uint64_t v29 = swift_getWitnessTable();
  sub_24EB68678(v24, v20, v29);
  uint64_t v30 = *(void (**)(void, void))(v21 + 8);
  v30(v24, v20);
  sub_24EB68678(v26, v20, v29);
  return ((uint64_t (*)(char *, uint64_t))v30)(v26, v20);
}

unint64_t sub_24EBA93F4()
{
  unint64_t result = qword_269947008;
  if (!qword_269947008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947008);
  }
  return result;
}

unint64_t sub_24EBA9448()
{
  unint64_t result = qword_269947010;
  if (!qword_269947010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947010);
  }
  return result;
}

unint64_t sub_24EBA949C()
{
  unint64_t result = qword_269947018;
  if (!qword_269947018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947018);
  }
  return result;
}

unint64_t sub_24EBA94F0()
{
  unint64_t result = qword_269947020;
  if (!qword_269947020)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269947000);
    sub_24EBA9740(&qword_269947028, &qword_269947030, (void (*)(void))sub_24EBA95C8);
    sub_24EBBC538(&qword_269947078, MEMORY[0x263F1A048]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947020);
  }
  return result;
}

unint64_t sub_24EBA95C8()
{
  unint64_t result = qword_269947038;
  if (!qword_269947038)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269947040);
    sub_24EBA963C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947038);
  }
  return result;
}

unint64_t sub_24EBA963C()
{
  unint64_t result = qword_269947048;
  if (!qword_269947048)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269947050);
    sub_24EBA96E4();
    sub_24EBA9740(&qword_269947068, &qword_269947070, (void (*)(void))sub_24EBA96E4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947048);
  }
  return result;
}

unint64_t sub_24EBA96E4()
{
  unint64_t result = qword_269947058;
  if (!qword_269947058)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269947060);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947058);
  }
  return result;
}

uint64_t sub_24EBA9740(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EBA97BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, ValueMetadata *a3@<X2>, ValueMetadata *a4@<X3>, ValueMetadata *a5@<X4>, ValueMetadata *a6@<X5>, unint64_t a7@<X6>, ValueMetadata *a8@<X7>, uint64_t a9@<X8>, unint64_t a10, ValueMetadata *a11, ValueMetadata *a12, unint64_t a13, unint64_t a14, ValueMetadata *a15, ValueMetadata *a16, ValueMetadata *a17, unint64_t a18, uint64_t a19, uint64_t a20,ValueMetadata *a21,uint64_t a22,uint64_t a23,ValueMetadata *a24)
{
  uint64_t v139 = a8;
  unint64_t v156 = (unint64_t)a6;
  uint64_t v163 = a5;
  uint64_t v166 = a4;
  uint64_t v143 = a1;
  uint64_t v144 = a9;
  uint64_t v168 = a23;
  uint64_t v167 = a22;
  uint64_t v169 = a21;
  uint64_t v138 = a20;
  uint64_t v150 = a19;
  unint64_t v154 = a18;
  uint64_t v158 = a16;
  uint64_t v152 = a15;
  uint64_t v151 = (ValueMetadata *)a14;
  unint64_t v162 = a13;
  uint64_t v161 = a12;
  uint64_t v157 = a11;
  unint64_t v164 = a10;
  uint64_t v221 = a2;
  uint64_t v222 = a3;
  uint64_t v223 = a4;
  uint64_t v224 = a5;
  uint64_t v225 = a6;
  uint64_t v226 = (ValueMetadata *)a7;
  uint64_t v227 = a8;
  unint64_t v228 = a10;
  uint64_t v229 = a11;
  uint64_t v230 = a12;
  unint64_t v231 = a13;
  unint64_t v232 = a14;
  uint64_t v233 = a15;
  uint64_t v234 = a16;
  uint64_t v235 = a17;
  uint64_t v135 = a17;
  uint64_t v136 = a24;
  unint64_t v236 = a18;
  uint64_t v237 = a19;
  uint64_t v238 = a20;
  char v239 = a21;
  uint64_t v240 = a22;
  uint64_t v241 = a23;
  uint64_t v242 = a24;
  uint64_t v142 = type metadata accessor for NewAndFeaturedView();
  uint64_t v140 = *(void *)(v142 - 8);
  uint64_t v141 = *(void *)(v140 + 64);
  MEMORY[0x270FA5388](v142);
  uint64_t v137 = (char *)v133 - v27;
  uint64_t v134 = (char *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269947000);
  unint64_t v28 = sub_24EBA93F4();
  unint64_t v29 = sub_24EBA9448();
  unint64_t v30 = sub_24EBA949C();
  uint64_t v160 = a2;
  uint64_t v221 = a2;
  uint64_t v165 = a3;
  uint64_t v222 = a3;
  uint64_t v31 = v163;
  uint64_t v223 = v163;
  uint64_t v224 = &type metadata for NewAndFeaturedItemContext;
  uint64_t v225 = (ValueMetadata *)a7;
  unint64_t v32 = a7;
  unint64_t v159 = a7;
  unint64_t v33 = v162;
  uint64_t v226 = (ValueMetadata *)v162;
  uint64_t v227 = v151;
  unint64_t v228 = (unint64_t)v152;
  uint64_t v229 = a17;
  uint64_t v230 = (ValueMetadata *)v28;
  unint64_t v231 = v29;
  unint64_t v232 = v30;
  uint64_t v233 = (ValueMetadata *)v150;
  uint64_t v234 = a24;
  uint64_t v34 = sub_24EC21FA0();
  uint64_t v153 = v34;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v221 = a2;
  uint64_t v222 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v223 = a3;
  uint64_t v224 = v166;
  uint64_t v225 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v226 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v227 = v31;
  unint64_t v228 = MEMORY[0x263F188F8];
  uint64_t v229 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v230 = &type metadata for NewAndFeaturedItemContext;
  unint64_t v231 = v32;
  unint64_t v35 = v164;
  unint64_t v232 = v164;
  uint64_t v233 = (ValueMetadata *)MEMORY[0x263F1BA08];
  unint64_t v36 = v157;
  unint64_t v37 = v158;
  uint64_t v234 = v157;
  uint64_t v38 = v161;
  uint64_t v235 = v161;
  unint64_t v236 = v33;
  uint64_t v237 = v34;
  uint64_t v238 = MEMORY[0x263F1BA00];
  char v239 = v158;
  uint64_t v240 = MEMORY[0x263F1BA00];
  uint64_t v241 = MEMORY[0x263F1BA00];
  uint64_t v242 = (ValueMetadata *)MEMORY[0x263F188F0];
  uint64_t v243 = MEMORY[0x263F1BA00];
  uint64_t v40 = v168;
  uint64_t v39 = v169;
  uint64_t v244 = v169;
  uint64_t v245 = MEMORY[0x263F1BA00];
  uint64_t v41 = v167;
  uint64_t v246 = v167;
  uint64_t v247 = v168;
  uint64_t v248 = WitnessTable;
  uint64_t v149 = sub_24EC22160();
  unint64_t v42 = v159;
  uint64_t v221 = v160;
  uint64_t v222 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v223 = v165;
  uint64_t v224 = v166;
  uint64_t v225 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v226 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v227 = v31;
  unint64_t v228 = MEMORY[0x263F188F8];
  uint64_t v229 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v230 = &type metadata for NewAndFeaturedItemContext;
  unint64_t v231 = v159;
  unint64_t v232 = v35;
  uint64_t v233 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v43 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v234 = v36;
  uint64_t v235 = v38;
  unint64_t v236 = v162;
  uint64_t v44 = v153;
  uint64_t v237 = v153;
  uint64_t v238 = MEMORY[0x263F1BA00];
  char v239 = v37;
  uint64_t v240 = MEMORY[0x263F1BA00];
  uint64_t v241 = MEMORY[0x263F1BA00];
  uint64_t v242 = (ValueMetadata *)MEMORY[0x263F188F0];
  uint64_t v243 = MEMORY[0x263F1BA00];
  uint64_t v244 = v39;
  uint64_t v245 = MEMORY[0x263F1BA00];
  uint64_t v45 = MEMORY[0x263F1BA00];
  uint64_t v246 = v41;
  uint64_t v247 = v40;
  uint64_t v46 = WitnessTable;
  uint64_t v248 = WitnessTable;
  v133[12] = sub_24EC22140();
  v133[13] = sub_24EC224F0();
  uint64_t v148 = sub_24EC224F0();
  uint64_t v47 = v160;
  uint64_t v221 = v160;
  uint64_t v48 = v43;
  uint64_t v222 = v43;
  unint64_t v49 = v166;
  uint64_t v223 = v165;
  uint64_t v224 = v166;
  uint64_t v225 = v48;
  uint64_t v226 = v48;
  unint64_t v50 = v164;
  uint64_t v227 = v163;
  unint64_t v228 = MEMORY[0x263F188F8];
  uint64_t v229 = v48;
  uint64_t v230 = &type metadata for NewAndFeaturedItemContext;
  unint64_t v231 = v42;
  unint64_t v232 = v164;
  uint64_t v233 = v48;
  unint64_t v51 = v157;
  uint64_t v234 = v157;
  unint64_t v52 = v162;
  uint64_t v235 = v161;
  unint64_t v236 = v162;
  uint64_t v237 = v44;
  uint64_t v53 = v45;
  uint64_t v238 = v45;
  uint64_t v54 = v158;
  char v239 = v158;
  uint64_t v240 = v45;
  uint64_t v241 = v45;
  uint64_t v242 = (ValueMetadata *)MEMORY[0x263F188F0];
  uint64_t v243 = v45;
  uint64_t v55 = v169;
  uint64_t v244 = v169;
  uint64_t v245 = v53;
  uint64_t v56 = v167;
  uint64_t v246 = v167;
  uint64_t v247 = v168;
  uint64_t v248 = v46;
  unint64_t v147 = (char *)sub_24EC22260();
  uint64_t v221 = v47;
  unint64_t v57 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v222 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v223 = v165;
  uint64_t v224 = v49;
  uint64_t v225 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v226 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v227 = v163;
  unint64_t v228 = MEMORY[0x263F188F8];
  uint64_t v229 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v230 = &type metadata for NewAndFeaturedItemContext;
  unint64_t v58 = v159;
  unint64_t v231 = v159;
  unint64_t v232 = v50;
  uint64_t v233 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v234 = v51;
  uint64_t v235 = v161;
  unint64_t v236 = v52;
  uint64_t v59 = v153;
  uint64_t v237 = v153;
  uint64_t v238 = MEMORY[0x263F1BA00];
  char v239 = v54;
  uint64_t v240 = MEMORY[0x263F1BA00];
  uint64_t v241 = MEMORY[0x263F1BA00];
  uint64_t v242 = (ValueMetadata *)MEMORY[0x263F188F0];
  uint64_t v243 = MEMORY[0x263F1BA00];
  uint64_t v244 = v55;
  uint64_t v245 = MEMORY[0x263F1BA00];
  uint64_t v246 = v56;
  uint64_t v60 = v168;
  uint64_t v247 = v168;
  uint64_t v248 = WitnessTable;
  v133[9] = sub_24EC22100();
  v133[10] = sub_24EC224F0();
  v133[11] = sub_24EC224F0();
  v133[6] = sub_24EC224F0();
  uint64_t v61 = v160;
  uint64_t v221 = v160;
  uint64_t v222 = v57;
  uint64_t v62 = v165;
  uint64_t v223 = v165;
  uint64_t v224 = v166;
  uint64_t v225 = v57;
  uint64_t v226 = v57;
  unint64_t v63 = v163;
  uint64_t v227 = v163;
  unint64_t v65 = v156;
  uint64_t v64 = v157;
  unint64_t v228 = v156;
  uint64_t v229 = v57;
  uint64_t v230 = &type metadata for NewAndFeaturedItemContext;
  unint64_t v231 = v58;
  unint64_t v232 = v164;
  uint64_t v233 = v57;
  uint64_t v234 = v157;
  uint64_t v66 = v161;
  uint64_t v235 = v161;
  unint64_t v236 = v162;
  uint64_t v237 = v59;
  uint64_t v238 = MEMORY[0x263F1BA00];
  unint64_t v67 = v158;
  char v239 = v158;
  uint64_t v240 = MEMORY[0x263F1BA00];
  uint64_t v241 = MEMORY[0x263F1BA00];
  uint64_t v68 = (ValueMetadata *)v154;
  uint64_t v242 = (ValueMetadata *)v154;
  uint64_t v243 = MEMORY[0x263F1BA00];
  uint64_t v244 = v169;
  uint64_t v245 = MEMORY[0x263F1BA00];
  uint64_t v246 = v167;
  uint64_t v247 = v60;
  uint64_t v69 = WitnessTable;
  uint64_t v248 = WitnessTable;
  uint64_t v146 = sub_24EC22160();
  uint64_t v221 = v61;
  uint64_t v222 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v223 = v62;
  uint64_t v224 = v166;
  uint64_t v225 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v226 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v227 = v63;
  unint64_t v228 = v65;
  uint64_t v229 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v230 = &type metadata for NewAndFeaturedItemContext;
  unint64_t v231 = v159;
  unint64_t v70 = v164;
  unint64_t v232 = v164;
  uint64_t v233 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v234 = v64;
  uint64_t v235 = v66;
  unint64_t v71 = v162;
  unint64_t v236 = v162;
  uint64_t v72 = v153;
  uint64_t v237 = v153;
  uint64_t v238 = MEMORY[0x263F1BA00];
  char v239 = v67;
  uint64_t v240 = MEMORY[0x263F1BA00];
  uint64_t v241 = MEMORY[0x263F1BA00];
  uint64_t v242 = v68;
  uint64_t v243 = MEMORY[0x263F1BA00];
  uint64_t v244 = v169;
  uint64_t v245 = MEMORY[0x263F1BA00];
  uint64_t v246 = v167;
  uint64_t v247 = v168;
  uint64_t v248 = v69;
  v133[7] = sub_24EC22140();
  v133[8] = sub_24EC224F0();
  uint64_t v73 = (ValueMetadata *)MEMORY[0x263F1BA08];
  v133[0] = sub_24EC224F0();
  uint64_t v74 = v160;
  uint64_t v221 = v160;
  unint64_t v75 = v73;
  uint64_t v222 = v73;
  uint64_t v223 = v62;
  uint64_t v76 = v166;
  uint64_t v224 = v166;
  uint64_t v225 = v73;
  uint64_t v226 = v73;
  uint64_t v77 = v163;
  uint64_t v227 = v163;
  unint64_t v228 = v156;
  uint64_t v229 = v73;
  uint64_t v230 = &type metadata for NewAndFeaturedItemContext;
  unint64_t v78 = v159;
  unint64_t v231 = v159;
  unint64_t v232 = v70;
  uint64_t v233 = v75;
  uint64_t v234 = v64;
  uint64_t v79 = v161;
  uint64_t v235 = v161;
  unint64_t v236 = v71;
  uint64_t v237 = v72;
  uint64_t v238 = MEMORY[0x263F1BA00];
  unint64_t v80 = v158;
  char v239 = v158;
  uint64_t v240 = MEMORY[0x263F1BA00];
  uint64_t v241 = MEMORY[0x263F1BA00];
  uint64_t v81 = (ValueMetadata *)v154;
  uint64_t v242 = (ValueMetadata *)v154;
  uint64_t v243 = MEMORY[0x263F1BA00];
  uint64_t v244 = v169;
  uint64_t v245 = MEMORY[0x263F1BA00];
  uint64_t v246 = v167;
  uint64_t v247 = v168;
  uint64_t v248 = WitnessTable;
  uint64_t v145 = (char *)sub_24EC22260();
  uint64_t v221 = v74;
  uint64_t v222 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v223 = v165;
  uint64_t v224 = v76;
  uint64_t v225 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v226 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v227 = v77;
  unint64_t v228 = v156;
  uint64_t v229 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v230 = &type metadata for NewAndFeaturedItemContext;
  unint64_t v231 = v78;
  unint64_t v232 = v164;
  uint64_t v233 = (ValueMetadata *)MEMORY[0x263F1BA08];
  uint64_t v234 = v64;
  uint64_t v235 = v79;
  unint64_t v236 = v71;
  uint64_t v237 = v153;
  uint64_t v238 = MEMORY[0x263F1BA00];
  char v239 = v80;
  uint64_t v240 = MEMORY[0x263F1BA00];
  uint64_t v241 = MEMORY[0x263F1BA00];
  uint64_t v242 = v81;
  uint64_t v243 = MEMORY[0x263F1BA00];
  uint64_t v244 = v169;
  uint64_t v245 = MEMORY[0x263F1BA00];
  uint64_t v82 = MEMORY[0x263F1BA00];
  uint64_t v246 = v167;
  uint64_t v247 = v168;
  uint64_t v248 = WitnessTable;
  v133[1] = sub_24EC22100();
  v133[2] = sub_24EC224F0();
  v133[3] = sub_24EC224F0();
  v133[4] = sub_24EC224F0();
  v133[5] = sub_24EC22C90();
  uint64_t v153 = sub_24EC224F0();
  uint64_t WitnessTable = sub_24EC22920();
  uint64_t v134 = (char *)sub_24EBA94F0();
  uint64_t v83 = swift_getWitnessTable();
  uint64_t v84 = swift_getWitnessTable();
  uint64_t v219 = v83;
  uint64_t v220 = v84;
  uint64_t v85 = swift_getWitnessTable();
  uint64_t v217 = v82;
  uint64_t v218 = v85;
  uint64_t v86 = swift_getWitnessTable();
  uint64_t v87 = swift_getWitnessTable();
  uint64_t v88 = swift_getWitnessTable();
  uint64_t v215 = v87;
  uint64_t v216 = v88;
  uint64_t v89 = swift_getWitnessTable();
  uint64_t v213 = v86;
  uint64_t v214 = v89;
  uint64_t v211 = swift_getWitnessTable();
  uint64_t v90 = MEMORY[0x263F1BA00];
  uint64_t v212 = MEMORY[0x263F1BA00];
  uint64_t v91 = swift_getWitnessTable();
  uint64_t v92 = swift_getWitnessTable();
  uint64_t v93 = swift_getWitnessTable();
  uint64_t v209 = v92;
  uint64_t v210 = v93;
  uint64_t v94 = swift_getWitnessTable();
  uint64_t v207 = v90;
  uint64_t v208 = v94;
  uint64_t v95 = swift_getWitnessTable();
  uint64_t v96 = swift_getWitnessTable();
  uint64_t v97 = swift_getWitnessTable();
  uint64_t v205 = v96;
  uint64_t v206 = v97;
  uint64_t v98 = swift_getWitnessTable();
  uint64_t v203 = v95;
  uint64_t v204 = v98;
  uint64_t v201 = swift_getWitnessTable();
  uint64_t v202 = v90;
  uint64_t v200 = swift_getWitnessTable();
  uint64_t v99 = swift_getWitnessTable();
  uint64_t v198 = v91;
  uint64_t v199 = v99;
  uint64_t v100 = swift_getWitnessTable();
  uint64_t v195 = v134;
  uint64_t v196 = v100;
  uint64_t v197 = v90;
  swift_getWitnessTable();
  uint64_t v146 = sub_24EC22900();
  uint64_t v149 = *(void *)(v146 - 8);
  MEMORY[0x270FA5388](v146);
  uint64_t v134 = (char *)v133 - v101;
  uint64_t v148 = sub_24EC22380();
  uint64_t v153 = *(void *)(v148 - 8);
  uint64_t v102 = MEMORY[0x270FA5388](v148);
  uint64_t v145 = (char *)v133 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v102);
  unint64_t v147 = (char *)v133 - v104;
  sub_24EC224C0();
  uint64_t v170 = v160;
  uint64_t v171 = v165;
  uint64_t v172 = v166;
  uint64_t v173 = v163;
  unint64_t v174 = v156;
  unint64_t v175 = v159;
  uint64_t v105 = v139;
  uint64_t v176 = v139;
  unint64_t v177 = v164;
  uint64_t v178 = v157;
  uint64_t v179 = v161;
  unint64_t v180 = v162;
  uint64_t v181 = v151;
  uint64_t v182 = v152;
  uint64_t v183 = v158;
  uint64_t v106 = v135;
  uint64_t v107 = v136;
  uint64_t v184 = v135;
  unint64_t v185 = v154;
  uint64_t v186 = v150;
  uint64_t v108 = v138;
  uint64_t v187 = v138;
  uint64_t v188 = v169;
  uint64_t v189 = v167;
  uint64_t v190 = v168;
  uint64_t v191 = v136;
  uint64_t v109 = v143;
  uint64_t v192 = v143;
  sub_24EC228F0();
  uint64_t v110 = v140;
  uint64_t v111 = v137;
  uint64_t v112 = v142;
  (*(void (**)(char *, uint64_t, uint64_t))(v140 + 16))(v137, v109, v142);
  unint64_t v113 = (*(unsigned __int8 *)(v110 + 80) + 192) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
  uint64_t v114 = (char *)swift_allocObject();
  uint64_t v115 = v165;
  *((void *)v114 + 2) = v160;
  *((void *)v114 + 3) = v115;
  uint64_t v116 = v163;
  *((void *)v114 + 4) = v166;
  *((void *)v114 + 5) = v116;
  unint64_t v117 = v159;
  *((void *)v114 + 6) = v156;
  *((void *)v114 + 7) = v117;
  unint64_t v118 = v164;
  *((void *)v114 + 8) = v105;
  *((void *)v114 + 9) = v118;
  uint64_t v119 = v161;
  *((void *)v114 + 10) = v157;
  *((void *)v114 + 11) = v119;
  unint64_t v120 = v151;
  *((void *)v114 + 12) = v162;
  *((void *)v114 + 13) = v120;
  unint64_t v121 = v158;
  *((void *)v114 + 14) = v152;
  *((void *)v114 + 15) = v121;
  unint64_t v122 = v154;
  *((void *)v114 + 16) = v106;
  *((void *)v114 + 17) = v122;
  *((void *)v114 + 18) = v150;
  *((void *)v114 + 19) = v108;
  uint64_t v123 = v167;
  *((void *)v114 + 20) = v169;
  *((void *)v114 + 21) = v123;
  *((void *)v114 + 22) = v168;
  *((void *)v114 + 23) = v107;
  (*(void (**)(char *, char *, uint64_t))(v110 + 32))(&v114[v113], v111, v112);
  uint64_t v124 = v146;
  uint64_t v125 = swift_getWitnessTable();
  unint64_t v126 = v145;
  unint64_t v127 = v134;
  sub_24EC22770();
  swift_release();
  (*(void (**)(char *, uint64_t))(v149 + 8))(v127, v124);
  uint64_t v193 = v125;
  uint64_t v194 = MEMORY[0x263F1A240];
  uint64_t v128 = v148;
  uint64_t v129 = swift_getWitnessTable();
  uint64_t v130 = v147;
  sub_24EB68678(v126, v128, v129);
  unint64_t v131 = *(void (**)(char *, uint64_t))(v153 + 8);
  v131(v126, v128);
  sub_24EB68678(v130, v128, v129);
  return ((uint64_t (*)(char *, uint64_t))v131)(v130, v128);
}

uint64_t sub_24EBAA784()
{
  return sub_24EBBB490((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24EBA97BC);
}

uint64_t sub_24EBAA79C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EBAA808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v74 = a8;
  uint64_t v75 = a1;
  uint64_t v87 = a6;
  uint64_t v88 = a5;
  uint64_t v101 = a4;
  uint64_t v76 = a9;
  uint64_t v93 = a23;
  uint64_t v97 = a22;
  uint64_t v73 = a20;
  uint64_t v99 = a21;
  uint64_t v94 = a11;
  uint64_t v89 = a10;
  uint64_t v84 = a24;
  uint64_t v86 = a18;
  uint64_t v69 = a19;
  uint64_t v95 = a16;
  uint64_t v72 = a17;
  uint64_t v71 = a15;
  uint64_t v70 = a14;
  uint64_t v92 = a12;
  uint64_t v98 = a13;
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269947000);
  sub_24EBA93F4();
  sub_24EBA9448();
  sub_24EBA949C();
  uint64_t v100 = a2;
  uint64_t v96 = a3;
  unint64_t v102 = a7;
  uint64_t v90 = (char *)sub_24EC21FA0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v83 = sub_24EC22160();
  uint64_t v67 = sub_24EC22140();
  uint64_t v68 = sub_24EC224F0();
  uint64_t v81 = sub_24EC224F0();
  uint64_t v80 = sub_24EC22260();
  uint64_t v64 = sub_24EC22100();
  uint64_t v65 = sub_24EC224F0();
  uint64_t v66 = sub_24EC224F0();
  uint64_t v82 = sub_24EC224F0();
  uint64_t v79 = sub_24EC22160();
  uint64_t v62 = sub_24EC22140();
  uint64_t v63 = sub_24EC224F0();
  uint64_t v77 = sub_24EC224F0();
  uint64_t v27 = a3;
  uint64_t v78 = sub_24EC22260();
  uint64_t v175 = a2;
  uint64_t v176 = MEMORY[0x263F1BA08];
  uint64_t v177 = a3;
  uint64_t v178 = v101;
  uint64_t v179 = MEMORY[0x263F1BA08];
  uint64_t v180 = MEMORY[0x263F1BA08];
  uint64_t v181 = v88;
  uint64_t v28 = v87;
  uint64_t v182 = v87;
  uint64_t v183 = MEMORY[0x263F1BA08];
  uint64_t v184 = &type metadata for NewAndFeaturedItemContext;
  unint64_t v185 = a7;
  uint64_t v186 = a10;
  uint64_t v187 = MEMORY[0x263F1BA08];
  uint64_t v188 = a11;
  uint64_t v189 = a12;
  uint64_t v190 = a13;
  uint64_t v191 = v90;
  uint64_t v192 = MEMORY[0x263F1BA00];
  uint64_t v193 = a16;
  uint64_t v194 = MEMORY[0x263F1BA00];
  uint64_t v195 = MEMORY[0x263F1BA00];
  uint64_t v196 = a18;
  uint64_t v197 = MEMORY[0x263F1BA00];
  uint64_t v198 = a21;
  uint64_t v199 = MEMORY[0x263F1BA00];
  uint64_t v200 = a22;
  uint64_t v201 = a23;
  uint64_t v202 = WitnessTable;
  v58[0] = sub_24EC22100();
  v58[1] = sub_24EC224F0();
  v58[2] = sub_24EC224F0();
  v58[3] = sub_24EC224F0();
  uint64_t v60 = sub_24EC22C90();
  uint64_t v61 = sub_24EC224F0();
  uint64_t v29 = sub_24EC22920();
  uint64_t WitnessTable = *(void *)(v29 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v29);
  uint64_t v59 = (char *)v58 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v90 = (char *)v58 - v32;
  uint64_t v126 = v100;
  uint64_t v127 = v27;
  uint64_t v128 = v101;
  uint64_t v129 = v88;
  uint64_t v130 = v28;
  unint64_t v131 = v102;
  uint64_t v132 = v74;
  uint64_t v133 = a10;
  uint64_t v134 = v94;
  uint64_t v135 = a12;
  uint64_t v136 = v98;
  uint64_t v137 = v70;
  uint64_t v138 = v71;
  uint64_t v139 = a16;
  uint64_t v140 = v72;
  uint64_t v141 = a18;
  uint64_t v142 = v69;
  uint64_t v143 = v73;
  uint64_t v144 = v99;
  uint64_t v145 = v97;
  uint64_t v146 = a23;
  uint64_t v147 = v84;
  uint64_t v148 = v75;
  uint64_t v103 = v100;
  uint64_t v104 = v27;
  uint64_t v105 = v101;
  uint64_t v106 = v88;
  uint64_t v107 = v28;
  unint64_t v108 = v102;
  uint64_t v109 = v74;
  uint64_t v110 = a10;
  uint64_t v111 = v94;
  uint64_t v112 = a12;
  uint64_t v113 = v98;
  uint64_t v114 = v70;
  uint64_t v115 = v71;
  uint64_t v116 = a16;
  uint64_t v117 = v72;
  uint64_t v118 = a18;
  uint64_t v119 = v69;
  uint64_t v120 = v73;
  uint64_t v121 = v99;
  uint64_t v122 = v97;
  uint64_t v123 = a23;
  uint64_t v124 = v84;
  uint64_t v125 = v75;
  unint64_t v102 = sub_24EBA94F0();
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v173 = v33;
  uint64_t v174 = v34;
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v36 = MEMORY[0x263F1BA00];
  uint64_t v171 = MEMORY[0x263F1BA00];
  uint64_t v172 = v35;
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v169 = v38;
  uint64_t v170 = v39;
  uint64_t v40 = swift_getWitnessTable();
  uint64_t v167 = v37;
  uint64_t v168 = v40;
  uint64_t v165 = swift_getWitnessTable();
  uint64_t v166 = v36;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v163 = v42;
  uint64_t v164 = v43;
  uint64_t v44 = swift_getWitnessTable();
  uint64_t v161 = v36;
  uint64_t v162 = v44;
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v47 = swift_getWitnessTable();
  uint64_t v159 = v46;
  uint64_t v160 = v47;
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v157 = v45;
  uint64_t v158 = v48;
  uint64_t v155 = swift_getWitnessTable();
  uint64_t v49 = v36;
  uint64_t v156 = v36;
  uint64_t v154 = swift_getWitnessTable();
  uint64_t v50 = swift_getWitnessTable();
  uint64_t v152 = v41;
  uint64_t v153 = v50;
  uint64_t v51 = swift_getWitnessTable();
  unint64_t v52 = v59;
  unint64_t v53 = v102;
  sub_24EBB8F70((uint64_t)sub_24EBBB460);
  unint64_t v149 = v53;
  uint64_t v150 = v51;
  uint64_t v151 = v49;
  uint64_t v54 = swift_getWitnessTable();
  uint64_t v55 = v90;
  sub_24EB68678(v52, v29, v54);
  uint64_t v56 = *(void (**)(char *, uint64_t))(WitnessTable + 8);
  v56(v52, v29);
  sub_24EB68678(v55, v29, v54);
  return ((uint64_t (*)(char *, uint64_t))v56)(v55, v29);
}

uint64_t sub_24EBAB50C@<X0>(uint64_t a1@<X0>, void (*a2)(void, void)@<X1>, ValueMetadata *a3@<X2>, ValueMetadata *a4@<X3>, ValueMetadata *a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unint64_t a11, ValueMetadata *a12, uint64_t a13, uint64_t a14, ValueMetadata *a15, unint64_t a16, unint64_t a17, ValueMetadata *a18, uint64_t a19, ValueMetadata *a20,ValueMetadata *a21,uint64_t a22,uint64_t a23,ValueMetadata *a24)
{
  uint64_t v1553 = a8;
  unint64_t v1565 = a7;
  uint64_t v1551 = a6;
  v1566 = a5;
  v1567 = a4;
  uint64_t v1548 = a1;
  uint64_t v1518 = a9;
  v1554 = a24;
  uint64_t v1564 = a23;
  uint64_t v1561 = a22;
  v1563 = a21;
  v1550 = a20;
  uint64_t v1558 = a19;
  v1557 = a18;
  unint64_t v1555 = a17;
  unint64_t v1559 = a16;
  v1552 = a15;
  v1556 = (char *)a14;
  v1562 = a12;
  unint64_t v1560 = a11;
  uint64_t v1570 = a10;
  unint64_t v27 = sub_24EBA93F4();
  v1527 = (char *)v27;
  unint64_t v28 = sub_24EBA9448();
  unint64_t v1525 = v28;
  unint64_t v1526 = sub_24EBA949C();
  uint64_t v1759 = (uint64_t)a2;
  v1571 = a2;
  v1569 = a3;
  v1760 = a3;
  v1761 = a5;
  v1762 = &type metadata for NewAndFeaturedItemContext;
  unint64_t v29 = v1565;
  unint64_t v1763 = v1565;
  uint64_t v1764 = a13;
  unint64_t v1568 = a13;
  uint64_t v1765 = a14;
  uint64_t v1766 = (uint64_t)a15;
  v1767 = (char *)a17;
  v1768 = (ValueMetadata *)v27;
  unint64_t v1769 = v28;
  v1770 = (char *)v1526;
  unint64_t v1771 = v1558;
  unint64_t v1772 = (unint64_t)v1554;
  uint64_t v30 = sub_24EC21FA0();
  uint64_t v1549 = v30;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v1759 = (uint64_t)a2;
  v1760 = (ValueMetadata *)MEMORY[0x263F1BA08];
  v1761 = a3;
  uint64_t v31 = v1567;
  v1762 = v1567;
  unint64_t v1763 = MEMORY[0x263F1BA08];
  uint64_t v1764 = MEMORY[0x263F1BA08];
  uint64_t v1765 = (uint64_t)v1566;
  uint64_t v32 = v1551;
  uint64_t v1766 = v1551;
  v1767 = (char *)MEMORY[0x263F1BA08];
  v1768 = &type metadata for NewAndFeaturedItemContext;
  unint64_t v1769 = v29;
  v1770 = (char *)v1570;
  unint64_t v1771 = MEMORY[0x263F1BA08];
  unint64_t v1772 = v1560;
  uint64_t v33 = v1562;
  unint64_t v1773 = (unint64_t)v1562;
  v1774 = (ValueMetadata *)a13;
  uint64_t v1775 = v30;
  v1776 = (ValueMetadata *)MEMORY[0x263F1BA00];
  unint64_t v34 = v1559;
  unint64_t v1777 = v1559;
  uint64_t v1778 = MEMORY[0x263F1BA00];
  uint64_t v1779 = MEMORY[0x263F1BA00];
  uint64_t v35 = v1557;
  v1780 = v1557;
  uint64_t v1781 = MEMORY[0x263F1BA00];
  uint64_t v36 = v1563;
  v1782 = v1563;
  uint64_t v1783 = MEMORY[0x263F1BA00];
  uint64_t v37 = (ValueMetadata *)v1561;
  v1784 = (ValueMetadata *)v1561;
  uint64_t v38 = v1564;
  uint64_t v1785 = v1564;
  uint64_t v1786 = WitnessTable;
  uint64_t v39 = sub_24EC22100();
  uint64_t v1451 = *(void *)(v39 - 8);
  uint64_t v40 = MEMORY[0x270FA5388](v39);
  v1434 = (char *)&v1428 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v40);
  v1444 = (char *)&v1428 - v42;
  uint64_t v1759 = (uint64_t)v1571;
  v1760 = (ValueMetadata *)MEMORY[0x263F1BA08];
  v1761 = v1569;
  v1762 = v31;
  unint64_t v1763 = MEMORY[0x263F1BA08];
  uint64_t v1764 = MEMORY[0x263F1BA08];
  uint64_t v1765 = (uint64_t)v1566;
  uint64_t v1766 = v32;
  v1767 = (char *)MEMORY[0x263F1BA08];
  v1768 = &type metadata for NewAndFeaturedItemContext;
  unint64_t v1769 = v1565;
  v1770 = (char *)v1570;
  unint64_t v1771 = MEMORY[0x263F1BA08];
  uint64_t v43 = MEMORY[0x263F1BA08];
  unint64_t v44 = v1560;
  unint64_t v1772 = v1560;
  unint64_t v1773 = (unint64_t)v33;
  v1774 = (ValueMetadata *)v1568;
  uint64_t v1775 = v1549;
  v1776 = (ValueMetadata *)MEMORY[0x263F1BA00];
  unint64_t v1777 = v34;
  uint64_t v1778 = MEMORY[0x263F1BA00];
  uint64_t v1779 = MEMORY[0x263F1BA00];
  v1780 = v35;
  uint64_t v1781 = MEMORY[0x263F1BA00];
  v1782 = v36;
  uint64_t v1783 = MEMORY[0x263F1BA00];
  v1784 = v37;
  uint64_t v1785 = v38;
  uint64_t v1786 = WitnessTable;
  uint64_t v45 = sub_24EC22260();
  uint64_t v1535 = v39;
  uint64_t v1540 = sub_24EC224F0();
  uint64_t v1448 = *(void *)(v1540 - 8);
  uint64_t v46 = MEMORY[0x270FA5388](v1540);
  v1447 = (char *)&v1428 - v47;
  uint64_t v1528 = v45;
  uint64_t v1453 = *(void *)(v45 - 8);
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  v1437 = (char *)&v1428 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v48);
  v1450 = (char *)&v1428 - v50;
  uint64_t v1759 = (uint64_t)v1571;
  uint64_t v51 = v43;
  v1760 = (ValueMetadata *)v43;
  unint64_t v52 = v1569;
  v1761 = v1569;
  unint64_t v53 = v1567;
  v1762 = v1567;
  unint64_t v1763 = v51;
  uint64_t v1764 = v51;
  uint64_t v54 = v1566;
  uint64_t v1765 = (uint64_t)v1566;
  uint64_t v55 = v1551;
  uint64_t v1766 = v1551;
  v1767 = (char *)v51;
  v1768 = &type metadata for NewAndFeaturedItemContext;
  uint64_t v56 = v1565;
  unint64_t v1769 = v1565;
  uint64_t v57 = v1570;
  v1770 = (char *)v1570;
  unint64_t v1771 = v51;
  unint64_t v58 = v44;
  unint64_t v1772 = v44;
  uint64_t v59 = v1562;
  unint64_t v1773 = (unint64_t)v1562;
  v1774 = (ValueMetadata *)v1568;
  uint64_t v1775 = v1549;
  v1776 = (ValueMetadata *)MEMORY[0x263F1BA00];
  unint64_t v1777 = v1559;
  uint64_t v1778 = MEMORY[0x263F1BA00];
  uint64_t v1779 = MEMORY[0x263F1BA00];
  v1780 = v1557;
  uint64_t v1781 = MEMORY[0x263F1BA00];
  uint64_t v60 = v1563;
  v1782 = v1563;
  uint64_t v1783 = MEMORY[0x263F1BA00];
  v1784 = (ValueMetadata *)v1561;
  uint64_t v1785 = v1564;
  uint64_t v1786 = WitnessTable;
  uint64_t v1543 = sub_24EC22140();
  uint64_t v1433 = *(void *)(v1543 - 8);
  uint64_t v61 = MEMORY[0x270FA5388](v1543);
  v1432 = (char *)&v1428 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v61);
  v1431 = (char *)&v1428 - v63;
  uint64_t v1759 = (uint64_t)v1571;
  v1760 = v52;
  v1761 = v53;
  v1762 = v54;
  unint64_t v1763 = v55;
  uint64_t v64 = v55;
  uint64_t v1764 = v56;
  uint64_t v1765 = v1553;
  uint64_t v1766 = v57;
  uint64_t v65 = (char *)v57;
  v1767 = (char *)v58;
  unint64_t v66 = v58;
  v1768 = v59;
  uint64_t v67 = (ValueMetadata *)v1568;
  unint64_t v1769 = v1568;
  v1770 = v1556;
  unint64_t v1771 = (unint64_t)v1552;
  unint64_t v68 = v1559;
  unint64_t v1772 = v1559;
  unint64_t v1773 = v1555;
  uint64_t v69 = v1557;
  v1774 = v1557;
  uint64_t v1775 = v1558;
  v1776 = v1550;
  unint64_t v1777 = (unint64_t)v60;
  uint64_t v70 = (ValueMetadata *)v1561;
  uint64_t v1778 = v1561;
  uint64_t v71 = v1564;
  uint64_t v1779 = v1564;
  v1780 = v1554;
  v1546 = (void (*)(char *, uint64_t, uint64_t))type metadata accessor for NewAndFeaturedView();
  v1493 = (void *)*((void *)v1546 - 1);
  uint64_t v1452 = v1493[8];
  MEMORY[0x270FA5388](v1546);
  v1474 = (char *)&v1428 - v72;
  uint64_t v73 = sub_24EC22210();
  MEMORY[0x270FA5388](v73 - 8);
  v1464 = (char *)&v1428 - v74;
  uint64_t v1759 = (uint64_t)v1571;
  v1760 = (ValueMetadata *)MEMORY[0x263F1BA08];
  v1761 = v1569;
  v1762 = v1567;
  unint64_t v1763 = MEMORY[0x263F1BA08];
  uint64_t v1764 = MEMORY[0x263F1BA08];
  uint64_t v1765 = (uint64_t)v54;
  uint64_t v1766 = v64;
  v1767 = (char *)MEMORY[0x263F1BA08];
  v1768 = &type metadata for NewAndFeaturedItemContext;
  unint64_t v75 = v1565;
  unint64_t v1769 = v1565;
  v1770 = v65;
  unint64_t v1771 = MEMORY[0x263F1BA08];
  unint64_t v1772 = v66;
  unint64_t v1773 = (unint64_t)v1562;
  v1774 = v67;
  uint64_t v1775 = v1549;
  v1776 = (ValueMetadata *)MEMORY[0x263F1BA00];
  unint64_t v1777 = v68;
  uint64_t v1778 = MEMORY[0x263F1BA00];
  uint64_t v1779 = MEMORY[0x263F1BA00];
  v1780 = v69;
  uint64_t v1781 = MEMORY[0x263F1BA00];
  uint64_t v76 = v1563;
  v1782 = v1563;
  uint64_t v1783 = MEMORY[0x263F1BA00];
  v1784 = v70;
  uint64_t v77 = v70;
  uint64_t v1785 = v71;
  uint64_t v1786 = WitnessTable;
  uint64_t v78 = sub_24EC22160();
  uint64_t v1430 = *(void *)(v78 - 8);
  uint64_t v79 = MEMORY[0x270FA5388](v78);
  v1429 = (char *)&v1428 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v79);
  v1428 = (char *)&v1428 - v81;
  uint64_t v1529 = v82;
  uint64_t v83 = sub_24EC224F0();
  uint64_t v1436 = *(void *)(v83 - 8);
  uint64_t v84 = MEMORY[0x270FA5388](v83);
  v1435 = (char *)&v1428 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v84);
  v1449 = (char *)&v1428 - v86;
  uint64_t v1532 = v87;
  uint64_t v88 = sub_24EC224F0();
  uint64_t v1446 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  v1445 = (char *)&v1428 - v89;
  uint64_t v1530 = v90;
  uint64_t v91 = sub_24EC224F0();
  uint64_t v1459 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  v1458 = (char *)&v1428 - v92;
  uint64_t v1531 = v93;
  uint64_t v94 = sub_24EC224F0();
  uint64_t v1483 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  v1476 = (char *)&v1428 - v95;
  uint64_t v1533 = v96;
  uint64_t v1541 = sub_24EC22C90();
  uint64_t v1484 = *(void *)(v1541 - 8);
  uint64_t v97 = MEMORY[0x270FA5388](v1541);
  v1477 = (char *)&v1428 - ((v98 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v97);
  v1520 = (char *)&v1428 - v99;
  uint64_t v100 = v1571;
  uint64_t v1759 = (uint64_t)v1571;
  uint64_t v101 = v1569;
  v1760 = v1569;
  uint64_t v102 = (uint64_t)v1566;
  v1761 = v1566;
  v1762 = &type metadata for NewAndFeaturedItemContext;
  unint64_t v1763 = v75;
  unint64_t v103 = v66;
  uint64_t v1764 = v66;
  uint64_t v104 = v1570;
  uint64_t v1765 = v1570;
  uint64_t v105 = (ValueMetadata *)v1568;
  uint64_t v1766 = v1568;
  v1767 = v1556;
  v1768 = v1552;
  unint64_t v1769 = v1555;
  v1770 = v1527;
  unint64_t v1771 = v1525;
  unint64_t v1772 = v1526;
  unint64_t v1773 = v1558;
  v1774 = v77;
  uint64_t v1775 = (uint64_t)v76;
  v1776 = v1554;
  v1522 = (char **)sub_24EC22080();
  uint64_t v1521 = (uint64_t)*(v1522 - 1);
  MEMORY[0x270FA5388](v1522 - 1);
  v1502 = (char *)&v1428 - v106;
  uint64_t v1759 = (uint64_t)v100;
  v1760 = (ValueMetadata *)MEMORY[0x263F1BA08];
  v1761 = v101;
  uint64_t v107 = v1567;
  v1762 = v1567;
  unint64_t v1763 = MEMORY[0x263F1BA08];
  uint64_t v1764 = MEMORY[0x263F1BA08];
  uint64_t v1765 = v102;
  uint64_t v1766 = MEMORY[0x263F188F8];
  v1767 = (char *)MEMORY[0x263F1BA08];
  v1768 = &type metadata for NewAndFeaturedItemContext;
  unint64_t v1769 = v75;
  v1770 = (char *)v104;
  unint64_t v1771 = MEMORY[0x263F1BA08];
  unint64_t v1772 = v103;
  unint64_t v1773 = (unint64_t)v1562;
  v1774 = v105;
  uint64_t v108 = v1549;
  uint64_t v1775 = v1549;
  v1776 = (ValueMetadata *)MEMORY[0x263F1BA00];
  unint64_t v109 = v1559;
  unint64_t v1777 = v1559;
  uint64_t v1778 = MEMORY[0x263F1BA00];
  uint64_t v1779 = MEMORY[0x263F1BA00];
  v1780 = (ValueMetadata *)MEMORY[0x263F188F0];
  uint64_t v1781 = MEMORY[0x263F1BA00];
  v1782 = v76;
  uint64_t v1783 = MEMORY[0x263F1BA00];
  v1784 = v77;
  uint64_t v110 = v1564;
  uint64_t v1785 = v1564;
  uint64_t v111 = WitnessTable;
  uint64_t v1786 = WitnessTable;
  uint64_t v112 = sub_24EC22100();
  uint64_t v1482 = *(void *)(v112 - 8);
  uint64_t v113 = MEMORY[0x270FA5388](v112);
  v1456 = (char *)&v1428 - ((v114 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v113);
  v1468 = (char *)&v1428 - v115;
  uint64_t v1759 = (uint64_t)v1571;
  uint64_t v116 = MEMORY[0x263F1BA08];
  v1760 = (ValueMetadata *)MEMORY[0x263F1BA08];
  v1761 = v1569;
  v1762 = v107;
  unint64_t v1763 = MEMORY[0x263F1BA08];
  uint64_t v1764 = MEMORY[0x263F1BA08];
  uint64_t v1765 = (uint64_t)v1566;
  uint64_t v1766 = MEMORY[0x263F188F8];
  v1767 = (char *)MEMORY[0x263F1BA08];
  v1768 = &type metadata for NewAndFeaturedItemContext;
  unint64_t v117 = v1565;
  unint64_t v1769 = v1565;
  v1770 = (char *)v1570;
  unint64_t v1771 = MEMORY[0x263F1BA08];
  unint64_t v118 = v1560;
  unint64_t v1772 = v1560;
  uint64_t v119 = v1562;
  unint64_t v1773 = (unint64_t)v1562;
  v1774 = (ValueMetadata *)v1568;
  uint64_t v1775 = v108;
  v1776 = (ValueMetadata *)MEMORY[0x263F1BA00];
  unint64_t v1777 = v109;
  uint64_t v1778 = MEMORY[0x263F1BA00];
  uint64_t v1779 = MEMORY[0x263F1BA00];
  v1780 = (ValueMetadata *)MEMORY[0x263F188F0];
  uint64_t v1781 = MEMORY[0x263F1BA00];
  uint64_t v120 = v1563;
  v1782 = v1563;
  uint64_t v1783 = MEMORY[0x263F1BA00];
  uint64_t v121 = (ValueMetadata *)v1561;
  v1784 = (ValueMetadata *)v1561;
  uint64_t v1785 = v110;
  uint64_t v1786 = v111;
  uint64_t v122 = sub_24EC22260();
  uint64_t v1539 = v112;
  uint64_t v1544 = sub_24EC224F0();
  uint64_t v1473 = *(void *)(v1544 - 8);
  uint64_t v123 = MEMORY[0x270FA5388](v1544);
  v1472 = (char *)&v1428 - v124;
  uint64_t v1538 = v122;
  uint64_t v1481 = *(void *)(v122 - 8);
  uint64_t v125 = MEMORY[0x270FA5388](v123);
  v1455 = (char *)&v1428 - ((v126 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v125);
  v1467 = (char *)&v1428 - v127;
  uint64_t v1759 = (uint64_t)v1571;
  v1760 = (ValueMetadata *)v116;
  v1761 = v1569;
  v1762 = v1567;
  unint64_t v1763 = v116;
  uint64_t v1764 = v116;
  uint64_t v1765 = (uint64_t)v1566;
  uint64_t v1766 = MEMORY[0x263F188F8];
  v1767 = (char *)v116;
  v1768 = &type metadata for NewAndFeaturedItemContext;
  unint64_t v1769 = v117;
  uint64_t v128 = v1570;
  v1770 = (char *)v1570;
  unint64_t v1771 = v116;
  unint64_t v1772 = v118;
  unint64_t v1773 = (unint64_t)v119;
  v1774 = (ValueMetadata *)v1568;
  uint64_t v1775 = v1549;
  v1776 = (ValueMetadata *)MEMORY[0x263F1BA00];
  unint64_t v129 = v1559;
  unint64_t v1777 = v1559;
  uint64_t v1778 = MEMORY[0x263F1BA00];
  uint64_t v1779 = MEMORY[0x263F1BA00];
  v1780 = (ValueMetadata *)MEMORY[0x263F188F0];
  uint64_t v1781 = MEMORY[0x263F1BA00];
  v1782 = v120;
  uint64_t v1783 = MEMORY[0x263F1BA00];
  v1784 = v121;
  uint64_t v1785 = v1564;
  uint64_t v1786 = WitnessTable;
  uint64_t v1542 = sub_24EC22140();
  uint64_t v1443 = *(void *)(v1542 - 8);
  uint64_t v130 = MEMORY[0x270FA5388](v1542);
  v1442 = (char *)&v1428 - ((v131 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v130);
  v1441 = (char *)&v1428 - v132;
  uint64_t v133 = sub_24EC21F40();
  uint64_t v1479 = *(void *)(v133 - 8);
  uint64_t v1480 = v133;
  MEMORY[0x270FA5388](v133);
  v1497 = (char *)&v1428 - ((v134 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699470A0);
  MEMORY[0x270FA5388](v135 - 8);
  v1490 = (char *)&v1428 - ((v136 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699470A8);
  uint64_t v138 = MEMORY[0x270FA5388](v137 - 8);
  v1496 = (char *)&v1428 - ((v139 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v138);
  v1495 = (char *)&v1428 - v140;
  uint64_t v141 = v128;
  uint64_t v142 = sub_24EC21E70();
  MEMORY[0x270FA5388](v142 - 8);
  v1515 = (char *)&v1428 - v143;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v144 = sub_24EC21E70();
  MEMORY[0x270FA5388](v144 - 8);
  v1514 = (char *)&v1428 - v145;
  uint64_t v146 = sub_24EC22210();
  MEMORY[0x270FA5388](v146 - 8);
  v1500 = (char *)&v1428 - v147;
  uint64_t v148 = v1571;
  sub_24EC22C90();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699470B0);
  uint64_t v1488 = swift_getTupleTypeMetadata2();
  uint64_t v149 = sub_24EC21E70();
  MEMORY[0x270FA5388](v149 - 8);
  v1513 = (char *)&v1428 - v150;
  uint64_t v1501 = sub_24EC21DA0();
  uint64_t v1545 = *(void *)(v1501 - 8);
  MEMORY[0x270FA5388](v1501);
  v1504 = (char *)&v1428 - ((v151 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = v1569;
  uint64_t v153 = sub_24EC21E70();
  uint64_t v154 = MEMORY[0x270FA5388](v153 - 8);
  v1510 = (char *)&v1428 - ((v155 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v154);
  v1509 = (char *)&v1428 - v156;
  uint64_t v157 = v152;
  uint64_t v158 = v1567;
  unint64_t v159 = v129;
  uint64_t v160 = sub_24EC21E70();
  uint64_t v161 = *(void (***)(char *, void, uint64_t))(v160 - 8);
  uint64_t v1486 = v160;
  v1487 = (void (*)(char *, char *, void *))v161;
  uint64_t v162 = MEMORY[0x270FA5388](v160);
  v1508 = (char *)&v1428 - v163;
  uint64_t v164 = v119;
  MEMORY[0x270FA5388](v162);
  v1512 = (char *)&v1428 - ((v165 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = sub_24EC22020();
  MEMORY[0x270FA5388](v166 - 8);
  v1511 = (char *)&v1428 - ((v167 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = sub_24EC220E0();
  MEMORY[0x270FA5388](v168 - 8);
  v1507 = (char *)&v1428 - ((v169 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v170 = v1560;
  uint64_t v171 = sub_24EC22C90();
  MEMORY[0x270FA5388](v171 - 8);
  v1506 = (char *)&v1428 - v172;
  uint64_t v173 = (uint64_t)v148;
  uint64_t v1759 = (uint64_t)v148;
  uint64_t v174 = (char *)v141;
  v1760 = (ValueMetadata *)v141;
  v1761 = (ValueMetadata *)v1556;
  uint64_t v175 = v1563;
  v1762 = v1563;
  uint64_t v1478 = sub_24EC21F50();
  uint64_t v176 = sub_24EC22C90();
  MEMORY[0x270FA5388](v176 - 8);
  v1505 = (char *)&v1428 - v177;
  uint64_t v1759 = v173;
  v1760 = (ValueMetadata *)MEMORY[0x263F1BA08];
  v1761 = v157;
  v1762 = v158;
  unint64_t v1763 = MEMORY[0x263F1BA08];
  uint64_t v1764 = MEMORY[0x263F1BA08];
  uint64_t v1765 = (uint64_t)v1566;
  uint64_t v1766 = MEMORY[0x263F188F8];
  v1767 = (char *)MEMORY[0x263F1BA08];
  v1768 = &type metadata for NewAndFeaturedItemContext;
  unint64_t v178 = v1565;
  unint64_t v1769 = v1565;
  v1770 = v174;
  unint64_t v1771 = MEMORY[0x263F1BA08];
  unint64_t v1772 = v170;
  unint64_t v1773 = (unint64_t)v164;
  unint64_t v179 = v1568;
  v1774 = (ValueMetadata *)v1568;
  uint64_t v1775 = v1549;
  v1776 = (ValueMetadata *)MEMORY[0x263F1BA00];
  unint64_t v1777 = v159;
  uint64_t v1778 = MEMORY[0x263F1BA00];
  uint64_t v1779 = MEMORY[0x263F1BA00];
  v1780 = (ValueMetadata *)MEMORY[0x263F188F0];
  uint64_t v1781 = MEMORY[0x263F1BA00];
  v1782 = v175;
  uint64_t v1783 = MEMORY[0x263F1BA00];
  v1784 = (ValueMetadata *)v1561;
  uint64_t v1785 = v1564;
  uint64_t v1786 = WitnessTable;
  uint64_t v180 = sub_24EC22160();
  uint64_t v1440 = *(void *)(v180 - 8);
  uint64_t v181 = MEMORY[0x270FA5388](v180);
  v1439 = (char *)&v1428 - ((v182 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v181);
  v1438 = (char *)&v1428 - v183;
  uint64_t v184 = v1553;
  unint64_t v185 = v1550;
  uint64_t v186 = sub_24EC22000();
  uint64_t v1461 = *(void *)(v186 - 8);
  uint64_t v1462 = v186;
  MEMORY[0x270FA5388](v186);
  v1460 = (char *)&v1428 - v187;
  uint64_t v1534 = v180;
  uint64_t v188 = sub_24EC224F0();
  uint64_t v1457 = *(void *)(v188 - 8);
  uint64_t v189 = MEMORY[0x270FA5388](v188);
  v1454 = (char *)&v1428 - ((v190 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v189);
  v1466 = (char *)&v1428 - v191;
  uint64_t v1494 = sub_24EC220B0();
  uint64_t v1519 = *(void *)(v1494 - 8);
  uint64_t v192 = MEMORY[0x270FA5388](v1494);
  v1485 = (char *)&v1428 - ((v193 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = MEMORY[0x270FA5388](v192);
  v1465 = (char *)&v1428 - v195;
  uint64_t v196 = MEMORY[0x270FA5388](v194);
  v1463 = (char *)&v1428 - v197;
  MEMORY[0x270FA5388](v196);
  v1469 = (char *)&v1428 - v198;
  uint64_t v1536 = v188;
  uint64_t v199 = sub_24EC224F0();
  uint64_t v1471 = *(void *)(v199 - 8);
  MEMORY[0x270FA5388](v199);
  v1470 = (char *)&v1428 - v200;
  uint64_t v1524 = v201;
  uint64_t v202 = sub_24EC224F0();
  uint64_t v1492 = *(void *)(v202 - 8);
  MEMORY[0x270FA5388](v202);
  v1491 = (char *)&v1428 - v203;
  uint64_t v1759 = v184;
  v1760 = (ValueMetadata *)v179;
  v1761 = v185;
  uint64_t v204 = v1554;
  v1762 = v1554;
  v1517 = (void (*)(char *, uint64_t, uint64_t))sub_24EC21F70();
  uint64_t v205 = MEMORY[0x270FA5388](v1517);
  v1475 = (char *)&v1428 - ((v206 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v205);
  v1503 = (char *)&v1428 - v207;
  uint64_t v1537 = v202;
  uint64_t v208 = sub_24EC224F0();
  v1499 = *(void **)(v208 - 8);
  uint64_t v209 = MEMORY[0x270FA5388](v208);
  v1498 = (char *)&v1428 - ((v210 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v209);
  v1523 = (char **)((char *)&v1428 - v211);
  uint64_t v212 = v1571;
  uint64_t v1759 = (uint64_t)v1571;
  v1760 = v1569;
  uint64_t v213 = v1566;
  v1761 = v1566;
  v1762 = &type metadata for NewAndFeaturedItemContext;
  unint64_t v1763 = v178;
  uint64_t v1764 = v1570;
  uint64_t v1765 = v1560;
  uint64_t v1766 = v179;
  uint64_t v214 = v1556;
  v1767 = v1556;
  uint64_t v215 = v1552;
  v1768 = v1552;
  unint64_t v1769 = v1555;
  v1770 = v1527;
  unint64_t v1771 = v1525;
  unint64_t v1772 = v1526;
  uint64_t v216 = v1558;
  unint64_t v1773 = v1558;
  v1774 = v1563;
  uint64_t v217 = v1561;
  uint64_t v1775 = v1561;
  v1776 = v204;
  uint64_t State = type metadata accessor for NewAndFeaturedLoadState();
  MEMORY[0x270FA5388](State - 8);
  uint64_t v220 = (char *)&v1428 - v219;
  uint64_t v1516 = v208;
  unint64_t v1526 = sub_24EC224F0();
  unint64_t v1525 = *(void *)(v1526 - 8);
  MEMORY[0x270FA5388](v1526);
  v1527 = (char *)&v1428 - v221;
  sub_24EBA62AC();
  v1572 = v212;
  v1573 = v1569;
  v1574 = v1567;
  v1575 = v213;
  uint64_t v1576 = v1551;
  unint64_t v1577 = v1565;
  uint64_t v1578 = v1553;
  uint64_t v1579 = v1570;
  unint64_t v1580 = v1560;
  v1581 = v1562;
  unint64_t v1582 = v1568;
  v1583 = v214;
  v1584 = v215;
  unint64_t v1585 = v1559;
  uint64_t v222 = v1522;
  unint64_t v1586 = v1555;
  v1587 = v1557;
  uint64_t v1588 = v216;
  v1589 = v1550;
  v1590 = v1563;
  uint64_t v1591 = v217;
  uint64_t v1592 = v1564;
  v1593 = v204;
  swift_getKeyPath();
  sub_24EC229E0();
  uint64_t v223 = v1521;
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, char **))(v223 + 48))(v220, 2, v222))
  {
    uint64_t v224 = sub_24EBA62AC();
    MEMORY[0x270FA5388](v224);
    unint64_t v225 = v1560;
    swift_getKeyPath();
    uint64_t v226 = v1503;
    sub_24EC229E0();
    swift_release();
    swift_release();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    unint64_t v228 = v226;
    uint64_t v229 = MEMORY[0x263F1BA00];
    uint64_t v230 = v1519;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v1478 - 8) + 56))(v1505, 1, 1);
        uint64_t v1519 = sub_24EBA7308(v1546);
        (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(*(void *)(v225 - 8) + 56))(v1506, 1, 1, v225);
        uint64_t v278 = sub_24EBA62AC();
        v1522 = &v1428;
        MEMORY[0x270FA5388](v278);
        swift_getKeyPath();
        sub_24EC229E0();
        swift_release();
        swift_release();
        uint64_t v279 = sub_24EBA62AC();
        v1522 = &v1428;
        MEMORY[0x270FA5388](v279);
        swift_getKeyPath();
        sub_24EC229E0();
        swift_release();
        swift_release();
        uint64_t v280 = sub_24EBA62AC();
        v1522 = &v1428;
        MEMORY[0x270FA5388](v280);
        swift_getKeyPath();
        sub_24EC229E0();
        swift_release();
        swift_release();
        LODWORD(v1517) = v1759;
        uint64_t v281 = sub_24EBA62AC();
        v1522 = &v1428;
        MEMORY[0x270FA5388](v281);
        uint64_t v282 = v1571;
        v283 = v1569;
        uint64_t v284 = v1563;
        uint64_t v285 = v1561;
        swift_getKeyPath();
        sub_24EC229E0();
        swift_release();
        swift_release();
        uint64_t v286 = v1548;
        (*((void (**)(char *, uint64_t, uint64_t))v1487 + 2))(v1508, v1548 + *((int *)v1546 + 52), v1486);
        uint64_t v287 = *(void **)(v1545 + 16);
        v1522 = (char **)(v1545 + 16);
        v1546 = (void (*)(char *, uint64_t, uint64_t))v287;
        uint64_t v288 = v1504;
        uint64_t v289 = v1501;
        ((void (*)(char *, uint64_t, uint64_t))v287)(v1504, v286, v1501);
        uint64_t v290 = (void *)swift_allocObject();
        v290[2] = v282;
        v290[3] = v283;
        uint64_t v291 = v283;
        uint64_t v292 = v1566;
        v290[4] = v1567;
        v290[5] = v292;
        unint64_t v293 = v1565;
        v290[6] = v1551;
        v290[7] = v293;
        uint64_t v294 = v1570;
        v290[8] = v1553;
        v290[9] = v294;
        uint64_t v295 = v1562;
        v290[10] = v1560;
        v290[11] = v295;
        unint64_t v296 = v1568;
        v297 = v1556;
        v290[12] = v1568;
        v290[13] = v297;
        uint64_t v298 = v1552;
        unint64_t v299 = v1559;
        v290[14] = v1552;
        v290[15] = v299;
        v300 = v1557;
        v290[16] = v1555;
        v290[17] = v300;
        uint64_t v301 = v1550;
        v290[18] = v1558;
        v290[19] = v301;
        v290[20] = v284;
        v290[21] = v285;
        uint64_t v302 = v1564;
        unint64_t v303 = v1554;
        v290[22] = v1564;
        v290[23] = v303;
        uint64_t v1521 = sub_24EBBC538(&qword_26B1D8618, MEMORY[0x263F07508]);
        sub_24EC21E60();
        swift_release();
        v1520 = *(char **)(v1545 + 8);
        v1545 += 8;
        ((void (*)(char *, uint64_t))v1520)(v288, v289);
        v1546(v288, v1548, v289);
        unint64_t v304 = (void *)swift_allocObject();
        v304[2] = v1571;
        v304[3] = v291;
        unint64_t v305 = v1567;
        v304[4] = v1567;
        v304[5] = v292;
        unint64_t v306 = v1565;
        v304[6] = v1551;
        v304[7] = v306;
        uint64_t v307 = v1570;
        v304[8] = v1553;
        v304[9] = v307;
        v308 = v1562;
        v304[10] = v1560;
        v304[11] = v308;
        v309 = v1556;
        v304[12] = v296;
        v304[13] = v309;
        unint64_t v310 = v1559;
        v304[14] = v298;
        v304[15] = v310;
        v311 = v1557;
        v304[16] = v1555;
        v304[17] = v311;
        uint64_t v312 = v1558;
        v313 = v1550;
        v304[18] = v1558;
        v304[19] = v313;
        uint64_t v314 = v1561;
        v304[20] = v1563;
        v304[21] = v314;
        v315 = v1554;
        v304[22] = v302;
        v304[23] = v315;
        sub_24EC21E60();
        swift_release();
        ((void (*)(char *, uint64_t))v1520)(v288, v289);
        v1546(v288, v1548, v289);
        v316 = (void *)swift_allocObject();
        v316[2] = v1571;
        v316[3] = v291;
        v317 = v1566;
        v316[4] = v305;
        v316[5] = v317;
        uint64_t v318 = v1551;
        unint64_t v319 = v1565;
        v316[6] = v1551;
        v316[7] = v319;
        uint64_t v320 = v1570;
        v316[8] = v1553;
        v316[9] = v320;
        v316[10] = v1560;
        v316[11] = v308;
        v321 = v1556;
        v316[12] = v1568;
        v316[13] = v321;
        v316[14] = v1552;
        v316[15] = v310;
        v322 = v1557;
        v316[16] = v1555;
        v316[17] = v322;
        v323 = v1550;
        v316[18] = v312;
        v316[19] = v323;
        uint64_t v324 = v1561;
        v316[20] = v1563;
        v316[21] = v324;
        v325 = v1554;
        v316[22] = v1564;
        v316[23] = v325;
        sub_24EC21E60();
        swift_release();
        ((void (*)(char *, uint64_t))v1520)(v288, v289);
        v1546(v288, v1548, v289);
        v326 = (void *)swift_allocObject();
        v327 = v1571;
        v328 = v1569;
        v326[2] = v1571;
        v326[3] = v328;
        v329 = v1566;
        v326[4] = v1567;
        v326[5] = v329;
        v326[6] = v318;
        v326[7] = v319;
        v326[8] = v1553;
        v326[9] = v320;
        v330 = v1562;
        v326[10] = v1560;
        v326[11] = v330;
        v326[12] = v1568;
        v326[13] = v321;
        unint64_t v331 = v1559;
        v326[14] = v1552;
        v326[15] = v331;
        unint64_t v332 = v1555;
        v333 = v1557;
        v326[16] = v1555;
        v326[17] = v333;
        v334 = v1550;
        v326[18] = v1558;
        v326[19] = v334;
        uint64_t v335 = v1561;
        v326[20] = v1563;
        v326[21] = v335;
        v336 = v1554;
        v326[22] = v1564;
        v326[23] = v336;
        v337 = v329;
        sub_24EC221F0();
        swift_release();
        ((void (*)(char *, uint64_t))v1520)(v288, v289);
        uint64_t v338 = v1548;
        v1546(v288, v1548, v289);
        v339 = (void *)swift_allocObject();
        v340 = v1569;
        v339[2] = v327;
        v339[3] = v340;
        v339[4] = v1567;
        v339[5] = v337;
        unint64_t v341 = v1565;
        v339[6] = v1551;
        v339[7] = v341;
        uint64_t v342 = v1570;
        v339[8] = v1553;
        v339[9] = v342;
        v343 = v1562;
        v339[10] = v1560;
        v339[11] = v343;
        v344 = v1556;
        v339[12] = v1568;
        v339[13] = v344;
        v339[14] = v1552;
        v339[15] = v331;
        v345 = v1557;
        v339[16] = v332;
        v339[17] = v345;
        v339[18] = v1558;
        v339[19] = v334;
        v346 = v1563;
        uint64_t v347 = v1561;
        v339[20] = v1563;
        v339[21] = v347;
        uint64_t v348 = v1564;
        v349 = v1554;
        v339[22] = v1564;
        v339[23] = v349;
        sub_24EC21E60();
        swift_release();
        uint64_t v350 = v289;
        uint64_t v351 = v289;
        v352 = v1520;
        ((void (*)(char *, uint64_t))v1520)(v288, v351);
        v1546(v288, v338, v350);
        v353 = (void *)swift_allocObject();
        v354 = v1569;
        v353[2] = v1571;
        v353[3] = v354;
        v355 = v1566;
        v353[4] = v1567;
        v353[5] = v355;
        unint64_t v356 = v1565;
        v353[6] = v1551;
        v353[7] = v356;
        uint64_t v357 = v1570;
        v353[8] = v1553;
        v353[9] = v357;
        v358 = v1562;
        v353[10] = v1560;
        v353[11] = v358;
        v359 = v1556;
        v353[12] = v1568;
        v353[13] = v359;
        unint64_t v360 = v1559;
        v353[14] = v1552;
        v353[15] = v360;
        v361 = v1557;
        v353[16] = v1555;
        v353[17] = v361;
        v362 = v1550;
        v353[18] = v1558;
        v353[19] = v362;
        v353[20] = v346;
        v353[21] = v347;
        v363 = v1554;
        v353[22] = v348;
        v353[23] = v363;
        sub_24EC21E60();
        swift_release();
        ((void (*)(char *, uint64_t))v352)(v288, v350);
        uint64_t v364 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699470B8);
        v365 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v364 - 8) + 56);
        v365(v1495, 1, 1, v364);
        v365(v1496, 1, 1, v364);
        uint64_t v366 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699470C0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v366 - 8) + 56))(v1490, 1, 1, v366);
        v1546(v288, v1548, v350);
        (*(void (**)(char *, void, uint64_t))(v1479 + 104))(v1497, *MEMORY[0x263F3DE38], v1480);
        uint64_t v367 = (uint64_t)v1456;
        sub_24EC220F0();
        uint64_t v368 = v1539;
        uint64_t v369 = swift_getWitnessTable();
        v370 = v1468;
        sub_24EB68678(v367, v368, v369);
        uint64_t v371 = v1482 + 8;
        v372 = *(void (**)(uint64_t, uint64_t))(v1482 + 8);
        v372(v367, v368);
        v1571 = v372;
        uint64_t v1482 = v371;
        sub_24EB68678(v370, v368, v369);
        uint64_t v373 = v1538;
        uint64_t v374 = swift_getWitnessTable();
        uint64_t v375 = (uint64_t)v1472;
        sub_24EB687AC(v367, v373, v368);
        v372(v367, v368);
        uint64_t v376 = v1537;
        uint64_t v377 = swift_getWitnessTable();
        uint64_t v378 = swift_getWitnessTable();
        uint64_t v1624 = v377;
        uint64_t v1625 = v378;
        uint64_t v379 = swift_getWitnessTable();
        uint64_t v1622 = MEMORY[0x263F1BA00];
        uint64_t v1623 = v379;
        uint64_t v380 = v1524;
        uint64_t v381 = swift_getWitnessTable();
        uint64_t v1620 = v374;
        uint64_t v1621 = v369;
        uint64_t v382 = v1544;
        uint64_t v383 = swift_getWitnessTable();
        uint64_t v384 = (uint64_t)v1491;
        sub_24EB687AC(v375, v380, v382);
        (*(void (**)(uint64_t, uint64_t))(v1473 + 8))(v375, v382);
        uint64_t v1618 = v381;
        uint64_t v1619 = v383;
        swift_getWitnessTable();
        sub_24EB686B4(v384, v376);
        (*(void (**)(uint64_t, uint64_t))(v1492 + 8))(v384, v376);
        v385 = v1468;
        uint64_t v386 = v368;
        goto LABEL_10;
      case 2:
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v1478 - 8) + 56))(v1505, 1, 1);
        uint64_t v1519 = sub_24EBA7308(v1546);
        (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(*(void *)(v225 - 8) + 56))(v1506, 1, 1, v225);
        uint64_t v387 = sub_24EBA62AC();
        v1522 = &v1428;
        MEMORY[0x270FA5388](v387);
        swift_getKeyPath();
        sub_24EC229E0();
        swift_release();
        swift_release();
        uint64_t v388 = sub_24EBA62AC();
        v1522 = &v1428;
        MEMORY[0x270FA5388](v388);
        swift_getKeyPath();
        sub_24EC229E0();
        swift_release();
        swift_release();
        uint64_t v389 = sub_24EBA62AC();
        v1522 = &v1428;
        MEMORY[0x270FA5388](v389);
        swift_getKeyPath();
        sub_24EC229E0();
        swift_release();
        swift_release();
        LODWORD(v1517) = v1759;
        uint64_t v390 = sub_24EBA62AC();
        v1522 = &v1428;
        MEMORY[0x270FA5388](v390);
        v391 = v1571;
        v392 = v1569;
        uint64_t v393 = v1564;
        swift_getKeyPath();
        v394 = v392;
        sub_24EC229E0();
        swift_release();
        swift_release();
        uint64_t v395 = v1548;
        (*((void (**)(char *, uint64_t, uint64_t))v1487 + 2))(v1508, v1548 + *((int *)v1546 + 52), v1486);
        v396 = *(char **)(v1545 + 16);
        v1546 = (void (*)(char *, uint64_t, uint64_t))(v1545 + 16);
        v1520 = v396;
        v397 = v1504;
        uint64_t v398 = v1501;
        ((void (*)(char *, uint64_t, uint64_t))v396)(v1504, v395, v1501);
        v399 = (void *)swift_allocObject();
        v399[2] = v391;
        v399[3] = v394;
        v400 = v394;
        v401 = v1567;
        v402 = v1566;
        v399[4] = v1567;
        v399[5] = v402;
        unint64_t v403 = v1565;
        v399[6] = v1551;
        v399[7] = v403;
        uint64_t v404 = v1570;
        v399[8] = v1553;
        v399[9] = v404;
        v405 = v1562;
        v399[10] = v1560;
        v399[11] = v405;
        unint64_t v406 = v1568;
        v407 = v1556;
        v399[12] = v1568;
        v399[13] = v407;
        v408 = v1552;
        unint64_t v409 = v1559;
        v399[14] = v1552;
        v399[15] = v409;
        v410 = v1557;
        v399[16] = v1555;
        v399[17] = v410;
        v411 = v1550;
        v399[18] = v1558;
        v399[19] = v411;
        uint64_t v412 = v1561;
        v399[20] = v1563;
        v399[21] = v412;
        v413 = v1554;
        v399[22] = v393;
        v399[23] = v413;
        v1522 = (char **)sub_24EBBC538(&qword_26B1D8618, MEMORY[0x263F07508]);
        sub_24EC21E60();
        swift_release();
        v414 = *(void (**)(char *, uint64_t))(v1545 + 8);
        v1545 += 8;
        uint64_t v1521 = (uint64_t)v414;
        v414(v397, v398);
        ((void (*)(char *, uint64_t, uint64_t))v1520)(v397, v1548, v398);
        v415 = (void *)swift_allocObject();
        v415[2] = v1571;
        v415[3] = v400;
        v416 = v400;
        v415[4] = v401;
        v415[5] = v402;
        uint64_t v417 = v1551;
        unint64_t v418 = v1565;
        v415[6] = v1551;
        v415[7] = v418;
        uint64_t v419 = v1570;
        v415[8] = v1553;
        v415[9] = v419;
        unint64_t v420 = v1560;
        v421 = v1562;
        v415[10] = v1560;
        v415[11] = v421;
        v422 = v1556;
        v415[12] = v406;
        v415[13] = v422;
        unint64_t v423 = v1559;
        v415[14] = v408;
        v415[15] = v423;
        v424 = v1557;
        v415[16] = v1555;
        v415[17] = v424;
        v425 = v1550;
        v415[18] = v1558;
        v415[19] = v425;
        uint64_t v426 = v1561;
        v415[20] = v1563;
        v415[21] = v426;
        v427 = v1554;
        v415[22] = v1564;
        v415[23] = v427;
        v428 = v416;
        sub_24EC21E60();
        swift_release();
        ((void (*)(char *, uint64_t))v1521)(v397, v398);
        ((void (*)(char *, uint64_t, uint64_t))v1520)(v397, v1548, v398);
        v429 = (void *)swift_allocObject();
        v429[2] = v1571;
        v429[3] = v428;
        v430 = v1566;
        v429[4] = v1567;
        v429[5] = v430;
        v429[6] = v417;
        v429[7] = v418;
        v429[8] = v1553;
        v429[9] = v419;
        v431 = v1562;
        v429[10] = v420;
        v429[11] = v431;
        v432 = v1556;
        v429[12] = v1568;
        v429[13] = v432;
        v429[14] = v1552;
        v429[15] = v423;
        unint64_t v433 = v1555;
        v434 = v1557;
        v429[16] = v1555;
        v429[17] = v434;
        v435 = v1550;
        v429[18] = v1558;
        v429[19] = v435;
        v436 = v1563;
        uint64_t v437 = v1561;
        v429[20] = v1563;
        v429[21] = v437;
        v438 = v1554;
        v429[22] = v1564;
        v429[23] = v438;
        sub_24EC21E60();
        swift_release();
        ((void (*)(char *, uint64_t))v1521)(v397, v398);
        ((void (*)(char *, uint64_t, uint64_t))v1520)(v397, v1548, v398);
        v439 = (void *)swift_allocObject();
        v440 = v1569;
        v439[2] = v1571;
        v439[3] = v440;
        v441 = v1566;
        v439[4] = v1567;
        v439[5] = v441;
        uint64_t v442 = v1551;
        unint64_t v443 = v1565;
        v439[6] = v1551;
        v439[7] = v443;
        uint64_t v444 = v1570;
        v439[8] = v1553;
        v439[9] = v444;
        v445 = v1562;
        v439[10] = v1560;
        v439[11] = v445;
        v439[12] = v1568;
        v439[13] = v432;
        unint64_t v446 = v1559;
        v439[14] = v1552;
        v439[15] = v446;
        v439[16] = v433;
        v439[17] = v434;
        v447 = v1550;
        v439[18] = v1558;
        v439[19] = v447;
        uint64_t v448 = v1561;
        v439[20] = v436;
        v439[21] = v448;
        v439[22] = v1564;
        v439[23] = v438;
        v449 = v441;
        sub_24EC221F0();
        swift_release();
        ((void (*)(char *, uint64_t))v1521)(v397, v398);
        uint64_t v450 = v1548;
        v451 = v1520;
        ((void (*)(char *, uint64_t, uint64_t))v1520)(v397, v1548, v398);
        v452 = (void *)swift_allocObject();
        v453 = v1569;
        v452[2] = v1571;
        v452[3] = v453;
        v452[4] = v1567;
        v452[5] = v449;
        unint64_t v454 = v1565;
        v452[6] = v442;
        v452[7] = v454;
        uint64_t v455 = v1553;
        uint64_t v456 = v1570;
        v452[8] = v1553;
        v452[9] = v456;
        unint64_t v457 = v1560;
        v458 = v1562;
        v452[10] = v1560;
        v452[11] = v458;
        unint64_t v459 = v1568;
        v460 = v1556;
        v452[12] = v1568;
        v452[13] = v460;
        unint64_t v461 = v1559;
        v452[14] = v1552;
        v452[15] = v461;
        v462 = v1557;
        v452[16] = v1555;
        v452[17] = v462;
        v452[18] = v1558;
        v452[19] = v447;
        v463 = v1563;
        uint64_t v464 = v1561;
        v452[20] = v1563;
        v452[21] = v464;
        v465 = v1554;
        v452[22] = v1564;
        v452[23] = v465;
        sub_24EC21E60();
        swift_release();
        ((void (*)(char *, uint64_t))v1521)(v397, v398);
        ((void (*)(char *, uint64_t, uint64_t))v451)(v397, v450, v398);
        v466 = (void *)swift_allocObject();
        v467 = v1569;
        v466[2] = v1571;
        v466[3] = v467;
        v468 = v1566;
        v466[4] = v1567;
        v466[5] = v468;
        unint64_t v469 = v1565;
        v466[6] = v1551;
        v466[7] = v469;
        uint64_t v470 = v1570;
        v466[8] = v455;
        v466[9] = v470;
        v471 = v1562;
        v466[10] = v457;
        v466[11] = v471;
        v472 = v1556;
        v466[12] = v459;
        v466[13] = v472;
        unint64_t v473 = v1559;
        v466[14] = v1552;
        v466[15] = v473;
        v474 = v1557;
        v466[16] = v1555;
        v466[17] = v474;
        v475 = v1550;
        v466[18] = v1558;
        v466[19] = v475;
        uint64_t v476 = v1561;
        v466[20] = v463;
        v466[21] = v476;
        v477 = v1554;
        v466[22] = v1564;
        v466[23] = v477;
        sub_24EC21E60();
        swift_release();
        ((void (*)(char *, uint64_t))v1521)(v397, v398);
        uint64_t v478 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699470B8);
        v479 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v478 - 8) + 56);
        v479(v1495, 1, 1, v478);
        v479(v1496, 1, 1, v478);
        uint64_t v480 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699470C0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v480 - 8) + 56))(v1490, 1, 1, v480);
        ((void (*)(char *, uint64_t, uint64_t))v1520)(v397, v1548, v398);
        (*(void (**)(char *, void, uint64_t))(v1479 + 104))(v1497, *MEMORY[0x263F3DE38], v1480);
        uint64_t v481 = (uint64_t)v1455;
        sub_24EC22250();
        uint64_t v482 = v1538;
        uint64_t v483 = swift_getWitnessTable();
        v484 = v1467;
        sub_24EB68678(v481, v482, v483);
        uint64_t v485 = v1481 + 8;
        v486 = *(void (**)(uint64_t, uint64_t))(v1481 + 8);
        v486(v481, v482);
        v1571 = v486;
        uint64_t v1481 = v485;
        sub_24EB68678(v484, v482, v483);
        uint64_t v487 = swift_getWitnessTable();
        uint64_t v488 = (uint64_t)v1472;
        sub_24EB686B4(v481, v482);
        v486(v481, v482);
        uint64_t v489 = v1537;
        uint64_t v490 = swift_getWitnessTable();
        uint64_t v491 = swift_getWitnessTable();
        uint64_t v1616 = v490;
        uint64_t v1617 = v491;
        uint64_t v492 = swift_getWitnessTable();
        uint64_t v1614 = MEMORY[0x263F1BA00];
        uint64_t v1615 = v492;
        uint64_t v493 = v1524;
        uint64_t v494 = swift_getWitnessTable();
        uint64_t v1612 = v483;
        uint64_t v1613 = v487;
        uint64_t v495 = v1544;
        uint64_t v496 = swift_getWitnessTable();
        uint64_t v497 = (uint64_t)v1491;
        sub_24EB687AC(v488, v493, v495);
        (*(void (**)(uint64_t, uint64_t))(v1473 + 8))(v488, v495);
        uint64_t v1610 = v494;
        uint64_t v1611 = v496;
        swift_getWitnessTable();
        sub_24EB686B4(v497, v489);
        (*(void (**)(uint64_t, uint64_t))(v1492 + 8))(v497, v489);
        v385 = v1467;
        uint64_t v386 = v482;
LABEL_10:
        v1571(v385, v386);
        uint64_t v237 = MEMORY[0x263F1BA00];
        (*(void (**)(char *, uint64_t))(*(void *)(v1553 - 8) + 8))(v1503, v1553);
        break;
      case 3:
        v498 = v1469;
        uint64_t v499 = v1494;
        (*(void (**)(char *, char *, uint64_t))(v1519 + 32))(v1469, v228, v1494);
        v500 = v1463;
        (*(void (**)(char *, char *, uint64_t))(v230 + 16))(v1463, v498, v499);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v1461 + 32))(v1460, v500, v1462);
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v1478 - 8) + 56))(v1505, 1, 1);
          v1517 = (void (*)(char *, uint64_t, uint64_t))sub_24EBA7308(v1546);
          (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(*(void *)(v225 - 8) + 56))(v1506, 1, 1, v225);
          v1503 = (char *)sub_24EC21FF0();
          uint64_t v501 = sub_24EBA62AC();
          v1522 = &v1428;
          MEMORY[0x270FA5388](v501);
          swift_getKeyPath();
          sub_24EC229E0();
          swift_release();
          swift_release();
          uint64_t v502 = sub_24EBA62AC();
          v1522 = &v1428;
          MEMORY[0x270FA5388](v502);
          swift_getKeyPath();
          sub_24EC229E0();
          swift_release();
          swift_release();
          uint64_t v503 = sub_24EBA62AC();
          v1522 = &v1428;
          MEMORY[0x270FA5388](v503);
          v504 = v1550;
          swift_getKeyPath();
          sub_24EC229E0();
          swift_release();
          swift_release();
          LODWORD(v1502) = v1759;
          uint64_t v505 = v1548;
          uint64_t v506 = sub_24EBA62AC();
          v1522 = &v1428;
          MEMORY[0x270FA5388](v506);
          v507 = v1569;
          v508 = v504;
          uint64_t v509 = v1561;
          swift_getKeyPath();
          sub_24EC229E0();
          swift_release();
          swift_release();
          (*((void (**)(char *, uint64_t, uint64_t))v1487 + 2))(v1508, v505 + *((int *)v1546 + 52), v1486);
          v510 = v1571;
          v511 = v507;
          v1520 = *(char **)(v1545 + 16);
          uint64_t v1521 = v1545 + 16;
          v512 = v1504;
          uint64_t v513 = v505;
          uint64_t v514 = v1501;
          ((void (*)(char *, uint64_t, uint64_t))v1520)(v1504, v513, v1501);
          v515 = (void *)swift_allocObject();
          v515[2] = v510;
          v515[3] = v511;
          v516 = v1566;
          v515[4] = v1567;
          v515[5] = v516;
          unint64_t v517 = v1565;
          v515[6] = v1551;
          v515[7] = v517;
          uint64_t v518 = v1553;
          uint64_t v519 = v1570;
          v515[8] = v1553;
          v515[9] = v519;
          v520 = v1562;
          v515[10] = v1560;
          v515[11] = v520;
          v521 = v1556;
          v515[12] = v1568;
          v515[13] = v521;
          v522 = v1552;
          unint64_t v523 = v1559;
          v515[14] = v1552;
          v515[15] = v523;
          v524 = v1557;
          v515[16] = v1555;
          v515[17] = v524;
          v515[18] = v1558;
          v515[19] = v508;
          v515[20] = v1563;
          v515[21] = v509;
          v525 = v1554;
          v515[22] = v1564;
          v515[23] = v525;
          v1546 = (void (*)(char *, uint64_t, uint64_t))sub_24EBBC538(&qword_26B1D8618, MEMORY[0x263F07508]);
          sub_24EC21E60();
          swift_release();
          v526 = *(char ***)(v1545 + 8);
          v1545 += 8;
          v1522 = v526;
          ((void (*)(char *, uint64_t))v526)(v512, v514);
          ((void (*)(char *, uint64_t, uint64_t))v1520)(v512, v1548, v514);
          v527 = (void *)swift_allocObject();
          v527[2] = v510;
          v527[3] = v511;
          v528 = v511;
          v529 = v1567;
          v530 = v1566;
          v527[4] = v1567;
          v527[5] = v530;
          unint64_t v531 = v1565;
          v527[6] = v1551;
          v527[7] = v531;
          v527[8] = v518;
          uint64_t v532 = v1570;
          unint64_t v533 = v1560;
          v527[9] = v1570;
          v527[10] = v533;
          unint64_t v534 = v1568;
          v527[11] = v1562;
          v527[12] = v534;
          v527[13] = v1556;
          v527[14] = v522;
          unint64_t v535 = v1555;
          v527[15] = v1559;
          v527[16] = v535;
          uint64_t v536 = v1558;
          v527[17] = v1557;
          v527[18] = v536;
          v537 = v1563;
          v527[19] = v1550;
          v527[20] = v537;
          uint64_t v538 = v1564;
          v527[21] = v1561;
          v527[22] = v538;
          v527[23] = v1554;
          v539 = v528;
          sub_24EC21E60();
          swift_release();
          ((void (*)(char *, uint64_t))v1522)(v512, v514);
          ((void (*)(char *, uint64_t, uint64_t))v1520)(v512, v1548, v514);
          v540 = (void *)swift_allocObject();
          v541 = v1571;
          v540[2] = v1571;
          v540[3] = v539;
          v540[4] = v529;
          v540[5] = v530;
          v540[6] = v1551;
          v540[7] = v531;
          v540[8] = v1553;
          v540[9] = v532;
          unint64_t v542 = v1560;
          v543 = v1562;
          v540[10] = v1560;
          v540[11] = v543;
          unint64_t v544 = v1568;
          v545 = v1556;
          v540[12] = v1568;
          v540[13] = v545;
          unint64_t v546 = v1559;
          v540[14] = v1552;
          v540[15] = v546;
          unint64_t v547 = v1555;
          v548 = v1557;
          v540[16] = v1555;
          v540[17] = v548;
          uint64_t v549 = v1558;
          v550 = v1550;
          v540[18] = v1558;
          v540[19] = v550;
          uint64_t v551 = v1561;
          v540[20] = v1563;
          v540[21] = v551;
          v552 = v1554;
          v540[22] = v1564;
          v540[23] = v552;
          sub_24EC21E60();
          swift_release();
          ((void (*)(char *, uint64_t))v1522)(v512, v514);
          ((void (*)(char *, uint64_t, uint64_t))v1520)(v512, v1548, v514);
          v553 = (void *)swift_allocObject();
          v554 = v1569;
          v553[2] = v541;
          v553[3] = v554;
          v555 = v1566;
          v553[4] = v1567;
          v553[5] = v555;
          unint64_t v556 = v1565;
          v553[6] = v1551;
          v553[7] = v556;
          uint64_t v557 = v1570;
          v553[8] = v1553;
          v553[9] = v557;
          v553[10] = v542;
          v558 = v1562;
          v553[11] = v1562;
          v553[12] = v544;
          v559 = v1552;
          v553[13] = v1556;
          v553[14] = v559;
          v553[15] = v546;
          v553[16] = v547;
          v553[17] = v1557;
          v553[18] = v549;
          v560 = v1550;
          v561 = v1563;
          v553[19] = v1550;
          v553[20] = v561;
          uint64_t v562 = v1561;
          uint64_t v563 = v1564;
          v553[21] = v1561;
          v553[22] = v563;
          v553[23] = v1554;
          v564 = v555;
          sub_24EC221F0();
          swift_release();
          ((void (*)(char *, uint64_t))v1522)(v512, v514);
          uint64_t v565 = v1548;
          v566 = v1520;
          ((void (*)(char *, uint64_t, uint64_t))v1520)(v512, v1548, v514);
          v567 = (void *)swift_allocObject();
          v568 = v1569;
          v567[2] = v1571;
          v567[3] = v568;
          v567[4] = v1567;
          v567[5] = v564;
          unint64_t v569 = v1565;
          v567[6] = v1551;
          v567[7] = v569;
          uint64_t v570 = v1570;
          v567[8] = v1553;
          v567[9] = v570;
          v567[10] = v1560;
          v567[11] = v558;
          unint64_t v571 = v1568;
          v572 = v1556;
          v567[12] = v1568;
          v567[13] = v572;
          unint64_t v573 = v1559;
          v567[14] = v1552;
          v567[15] = v573;
          v574 = v1557;
          v567[16] = v1555;
          v567[17] = v574;
          v567[18] = v1558;
          v567[19] = v560;
          v575 = v1563;
          v567[20] = v1563;
          v567[21] = v562;
          uint64_t v576 = v1564;
          v577 = v1554;
          v567[22] = v1564;
          v567[23] = v577;
          sub_24EC21E60();
          swift_release();
          ((void (*)(char *, uint64_t))v1522)(v512, v514);
          ((void (*)(char *, uint64_t, uint64_t))v566)(v512, v565, v514);
          v578 = (void *)swift_allocObject();
          v579 = v1569;
          v578[2] = v1571;
          v578[3] = v579;
          v580 = v1566;
          v578[4] = v1567;
          v578[5] = v580;
          unint64_t v581 = v1565;
          v578[6] = v1551;
          v578[7] = v581;
          uint64_t v582 = v1570;
          v578[8] = v1553;
          v578[9] = v582;
          v578[10] = v1560;
          v578[11] = v558;
          v583 = v1556;
          v578[12] = v571;
          v578[13] = v583;
          unint64_t v584 = v1559;
          v578[14] = v1552;
          v578[15] = v584;
          v585 = v1557;
          v578[16] = v1555;
          v578[17] = v585;
          v586 = v1550;
          v578[18] = v1558;
          v578[19] = v586;
          uint64_t v587 = v1561;
          v578[20] = v575;
          v578[21] = v587;
          v588 = v1554;
          v578[22] = v576;
          v578[23] = v588;
          sub_24EC21E60();
          swift_release();
          ((void (*)(char *, uint64_t))v1522)(v512, v514);
          uint64_t v589 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699470B8);
          v590 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v589 - 8) + 56);
          v590(v1495, 1, 1, v589);
          v590(v1496, 1, 1, v589);
          uint64_t v591 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699470C0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v591 - 8) + 56))(v1490, 1, 1, v591);
          ((void (*)(char *, uint64_t, uint64_t))v1520)(v512, v1548, v514);
          (*(void (**)(char *, void, uint64_t))(v1479 + 104))(v1497, *MEMORY[0x263F3DE38], v1480);
          uint64_t v592 = (uint64_t)v1439;
          sub_24EC22150();
          uint64_t v593 = v1534;
          uint64_t v594 = swift_getWitnessTable();
          v595 = v1438;
          sub_24EB68678(v592, v593, v594);
          v596 = *(void (**)(uint64_t, uint64_t))(v1440 + 8);
          v596(v592, v593);
          sub_24EB68678(v595, v593, v594);
          swift_getWitnessTable();
          v597 = v1466;
          sub_24EB686B4(v592, v593);
          v596(v592, v593);
          v596((uint64_t)v595, v593);
          (*(void (**)(char *, uint64_t))(v1461 + 8))(v1460, v1462);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v1478 - 8) + 56))(v1505, 1, 1);
          v1517 = (void (*)(char *, uint64_t, uint64_t))sub_24EBA7308(v1546);
          (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(*(void *)(v225 - 8) + 56))(v1506, 1, 1, v225);
          uint64_t v608 = sub_24EBA62AC();
          v1522 = &v1428;
          MEMORY[0x270FA5388](v608);
          swift_getKeyPath();
          sub_24EC229E0();
          swift_release();
          swift_release();
          uint64_t v609 = sub_24EBA62AC();
          v1522 = &v1428;
          MEMORY[0x270FA5388](v609);
          swift_getKeyPath();
          sub_24EC229E0();
          swift_release();
          swift_release();
          uint64_t v610 = sub_24EBA62AC();
          v1522 = &v1428;
          MEMORY[0x270FA5388](v610);
          swift_getKeyPath();
          sub_24EC229E0();
          swift_release();
          swift_release();
          LODWORD(v1503) = v1759;
          uint64_t v611 = sub_24EBA62AC();
          v1522 = &v1428;
          MEMORY[0x270FA5388](v611);
          v612 = v1571;
          v613 = v1569;
          unint64_t v614 = v1568;
          uint64_t v615 = v1564;
          swift_getKeyPath();
          sub_24EC229E0();
          swift_release();
          swift_release();
          uint64_t v616 = v1548;
          (*((void (**)(char *, uint64_t, uint64_t))v1487 + 2))(v1508, v1548 + *((int *)v1546 + 52), v1486);
          uint64_t v1521 = *(void *)(v1545 + 16);
          v1520 = (char *)(v1545 + 16);
          v617 = v1504;
          uint64_t v618 = v616;
          uint64_t v619 = v1501;
          ((void (*)(char *, uint64_t, uint64_t))v1521)(v1504, v618, v1501);
          v620 = (void *)swift_allocObject();
          v620[2] = v612;
          v620[3] = v613;
          v621 = v1566;
          v620[4] = v1567;
          v620[5] = v621;
          unint64_t v622 = v1565;
          v620[6] = v1551;
          v620[7] = v622;
          uint64_t v623 = v1570;
          v620[8] = v1553;
          v620[9] = v623;
          v624 = v1562;
          v620[10] = v1560;
          v620[11] = v624;
          v625 = v1556;
          v620[12] = v614;
          v620[13] = v625;
          unint64_t v626 = v1559;
          v620[14] = v1552;
          v620[15] = v626;
          v627 = v1557;
          v620[16] = v1555;
          v620[17] = v627;
          v628 = v1550;
          v620[18] = v1558;
          v620[19] = v628;
          uint64_t v629 = v1561;
          v620[20] = v1563;
          v620[21] = v629;
          v630 = v1554;
          v620[22] = v615;
          v620[23] = v630;
          v1546 = (void (*)(char *, uint64_t, uint64_t))sub_24EBBC538(&qword_26B1D8618, MEMORY[0x263F07508]);
          sub_24EC21E60();
          swift_release();
          v631 = *(char ***)(v1545 + 8);
          v1545 += 8;
          v1522 = v631;
          v632 = v617;
          ((void (*)(char *, uint64_t))v631)(v617, v619);
          v633 = (void (*)(char *, uint64_t, uint64_t))v1521;
          ((void (*)(char *, uint64_t, uint64_t))v1521)(v617, v1548, v619);
          v634 = (void *)swift_allocObject();
          v635 = v1569;
          v634[2] = v1571;
          v634[3] = v635;
          v636 = v1567;
          v634[4] = v1567;
          v634[5] = v621;
          uint64_t v637 = v1551;
          unint64_t v638 = v1565;
          v634[6] = v1551;
          v634[7] = v638;
          v634[8] = v1553;
          v634[9] = v623;
          v639 = v1562;
          v634[10] = v1560;
          v634[11] = v639;
          v640 = v1556;
          v634[12] = v1568;
          v634[13] = v640;
          unint64_t v641 = v1559;
          v634[14] = v1552;
          v634[15] = v641;
          v642 = v1557;
          v634[16] = v1555;
          v634[17] = v642;
          v643 = v1550;
          v634[18] = v1558;
          v634[19] = v643;
          uint64_t v644 = v1561;
          v634[20] = v1563;
          v634[21] = v644;
          v645 = v1554;
          v634[22] = v1564;
          v634[23] = v645;
          sub_24EC21E60();
          swift_release();
          ((void (*)(char *, uint64_t))v1522)(v632, v619);
          v633(v632, v1548, v619);
          v646 = (void *)swift_allocObject();
          v646[2] = v1571;
          v646[3] = v635;
          v647 = v1566;
          v646[4] = v636;
          v646[5] = v647;
          unint64_t v648 = v1565;
          v646[6] = v637;
          v646[7] = v648;
          uint64_t v649 = v1553;
          uint64_t v650 = v1570;
          v646[8] = v1553;
          v646[9] = v650;
          v646[10] = v1560;
          v646[11] = v639;
          v651 = v1556;
          v646[12] = v1568;
          v646[13] = v651;
          unint64_t v652 = v1559;
          v646[14] = v1552;
          v646[15] = v652;
          unint64_t v653 = v1555;
          v654 = v1557;
          v646[16] = v1555;
          v646[17] = v654;
          v655 = v1550;
          v646[18] = v1558;
          v646[19] = v655;
          uint64_t v656 = v1561;
          v646[20] = v1563;
          v646[21] = v656;
          v657 = v1554;
          v646[22] = v1564;
          v646[23] = v657;
          sub_24EC21E60();
          swift_release();
          ((void (*)(char *, uint64_t))v1522)(v632, v619);
          ((void (*)(char *, uint64_t, uint64_t))v1521)(v632, v1548, v619);
          v658 = (void *)swift_allocObject();
          v659 = v1569;
          v658[2] = v1571;
          v658[3] = v659;
          v660 = v1566;
          v658[4] = v1567;
          v658[5] = v660;
          v658[6] = v1551;
          v658[7] = v648;
          uint64_t v661 = v1570;
          v658[8] = v649;
          v658[9] = v661;
          unint64_t v662 = v1560;
          v663 = v1562;
          v658[10] = v1560;
          v658[11] = v663;
          v658[12] = v1568;
          v658[13] = v651;
          v664 = v1552;
          v658[14] = v1552;
          v658[15] = v652;
          v665 = v1557;
          v658[16] = v653;
          v658[17] = v665;
          v666 = v1550;
          v658[18] = v1558;
          v658[19] = v666;
          uint64_t v667 = v1561;
          v658[20] = v1563;
          v658[21] = v667;
          v668 = v1554;
          v658[22] = v1564;
          v658[23] = v668;
          v669 = v660;
          sub_24EC221F0();
          swift_release();
          ((void (*)(char *, uint64_t))v1522)(v632, v619);
          ((void (*)(char *, uint64_t, uint64_t))v1521)(v632, v1548, v619);
          v670 = (void *)swift_allocObject();
          v671 = v1571;
          v672 = v1569;
          v670[2] = v1571;
          v670[3] = v672;
          v670[4] = v1567;
          v670[5] = v669;
          unint64_t v673 = v1565;
          v670[6] = v1551;
          v670[7] = v673;
          uint64_t v674 = v1570;
          v670[8] = v1553;
          v670[9] = v674;
          v670[10] = v662;
          v675 = v1562;
          unint64_t v676 = v1568;
          v670[11] = v1562;
          v670[12] = v676;
          v670[13] = v1556;
          v670[14] = v664;
          unint64_t v677 = v1559;
          v670[15] = v1559;
          v670[16] = v653;
          v678 = v1557;
          uint64_t v679 = v1558;
          v670[17] = v1557;
          v670[18] = v679;
          v680 = v1563;
          v670[19] = v1550;
          v670[20] = v680;
          uint64_t v681 = v1564;
          v670[21] = v667;
          v670[22] = v681;
          v682 = v1554;
          v670[23] = v1554;
          sub_24EC21E60();
          swift_release();
          ((void (*)(char *, uint64_t))v1522)(v632, v619);
          ((void (*)(char *, uint64_t, uint64_t))v1521)(v632, v1548, v619);
          v683 = (void *)swift_allocObject();
          v684 = v1569;
          v683[2] = v671;
          v683[3] = v684;
          v685 = v1566;
          v683[4] = v1567;
          v683[5] = v685;
          unint64_t v686 = v1565;
          v683[6] = v1551;
          v683[7] = v686;
          uint64_t v687 = v1570;
          v683[8] = v1553;
          v683[9] = v687;
          v683[10] = v1560;
          v683[11] = v675;
          v688 = v1556;
          v683[12] = v1568;
          v683[13] = v688;
          v683[14] = v1552;
          v683[15] = v677;
          v683[16] = v1555;
          v683[17] = v678;
          v689 = v1550;
          v683[18] = v1558;
          v683[19] = v689;
          uint64_t v690 = v1561;
          v683[20] = v1563;
          v683[21] = v690;
          v683[22] = v681;
          v683[23] = v682;
          sub_24EC21E60();
          swift_release();
          v691 = v632;
          v692 = v632;
          uint64_t v693 = v619;
          ((void (*)(char *, uint64_t))v1522)(v691, v619);
          uint64_t v694 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699470B8);
          v695 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v694 - 8) + 56);
          v695(v1495, 1, 1, v694);
          v695(v1496, 1, 1, v694);
          uint64_t v696 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699470C0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v696 - 8) + 56))(v1490, 1, 1, v696);
          ((void (*)(char *, uint64_t, uint64_t))v1521)(v692, v1548, v693);
          (*(void (**)(char *, void, uint64_t))(v1479 + 104))(v1497, *MEMORY[0x263F3DE38], v1480);
          uint64_t v697 = (uint64_t)v1442;
          sub_24EC22130();
          uint64_t v698 = v1542;
          uint64_t v699 = swift_getWitnessTable();
          v700 = v1441;
          sub_24EB68678(v697, v698, v699);
          v701 = *(void (**)(uint64_t, uint64_t))(v1443 + 8);
          v701(v697, v698);
          sub_24EB68678(v700, v698, v699);
          uint64_t v702 = v1534;
          swift_getWitnessTable();
          v597 = v1466;
          sub_24EB687AC(v697, v702, v698);
          v701(v697, v698);
          v701((uint64_t)v700, v698);
          (*(void (**)(char *, uint64_t))(v1519 + 8))(v1463, v1494);
        }
        uint64_t v703 = (uint64_t)v1454;
        uint64_t v704 = swift_getWitnessTable();
        uint64_t v705 = swift_getWitnessTable();
        uint64_t v1608 = v704;
        uint64_t v1609 = v705;
        uint64_t v706 = v1536;
        uint64_t v707 = swift_getWitnessTable();
        sub_24EB68678(v597, v706, v707);
        uint64_t v708 = (uint64_t)v1470;
        sub_24EB687AC(v703, MEMORY[0x263F1BA08], v706);
        v709 = *(void (**)(uint64_t, uint64_t))(v1457 + 8);
        v709(v703, v706);
        uint64_t v1606 = MEMORY[0x263F1BA00];
        uint64_t v1607 = v707;
        uint64_t v710 = v1524;
        uint64_t v711 = swift_getWitnessTable();
        uint64_t v712 = swift_getWitnessTable();
        uint64_t v713 = swift_getWitnessTable();
        uint64_t v1604 = v712;
        uint64_t v1605 = v713;
        uint64_t v714 = swift_getWitnessTable();
        uint64_t v715 = (uint64_t)v1491;
        sub_24EB686B4(v708, v710);
        (*(void (**)(uint64_t, uint64_t))(v1471 + 8))(v708, v710);
        uint64_t v1602 = v711;
        uint64_t v1603 = v714;
        uint64_t v716 = v1537;
        swift_getWitnessTable();
        sub_24EB686B4(v715, v716);
        (*(void (**)(uint64_t, uint64_t))(v1492 + 8))(v715, v716);
        v709((uint64_t)v1466, v1536);
        uint64_t v237 = MEMORY[0x263F1BA00];
        (*(void (**)(char *, uint64_t))(v1519 + 8))(v1469, v1494);
        break;
      case 4:
        uint64_t v598 = swift_getWitnessTable();
        uint64_t v599 = swift_getWitnessTable();
        uint64_t v1653 = v598;
        uint64_t v1654 = v599;
        uint64_t v600 = swift_getWitnessTable();
        uint64_t v1651 = v229;
        uint64_t v1652 = v600;
        uint64_t v237 = v229;
        v601 = v228;
        uint64_t v602 = swift_getWitnessTable();
        uint64_t v603 = swift_getWitnessTable();
        uint64_t v604 = v1537;
        uint64_t v605 = swift_getWitnessTable();
        uint64_t v1649 = v603;
        uint64_t v1650 = v605;
        uint64_t v606 = swift_getWitnessTable();
        uint64_t v1647 = v602;
        uint64_t v1648 = v606;
        uint64_t v607 = swift_getWitnessTable();
        sub_24EB687AC(v607, v604, MEMORY[0x263F1BA08]);
        (*(void (**)(char *, unint64_t))(*(void *)(v1568 - 8) + 8))(v601, v1568);
        break;
      default:
        uint64_t v231 = swift_getWitnessTable();
        uint64_t v232 = swift_getWitnessTable();
        uint64_t v1600 = v231;
        uint64_t v1601 = v232;
        uint64_t v233 = swift_getWitnessTable();
        uint64_t v234 = (uint64_t)v1470;
        sub_24EB686B4(v233, MEMORY[0x263F1BA08]);
        uint64_t v1598 = v229;
        uint64_t v1599 = v233;
        uint64_t v235 = v1524;
        uint64_t v236 = swift_getWitnessTable();
        uint64_t v237 = v229;
        uint64_t v238 = swift_getWitnessTable();
        uint64_t v239 = v1537;
        uint64_t v240 = swift_getWitnessTable();
        uint64_t v1596 = v238;
        uint64_t v1597 = v240;
        uint64_t v241 = swift_getWitnessTable();
        uint64_t v242 = (uint64_t)v1491;
        sub_24EB686B4(v234, v235);
        (*(void (**)(uint64_t, uint64_t))(v1471 + 8))(v234, v235);
        uint64_t v1594 = v236;
        uint64_t v1595 = v241;
        swift_getWitnessTable();
        sub_24EB686B4(v242, v239);
        (*(void (**)(uint64_t, uint64_t))(v1492 + 8))(v242, v239);
        break;
    }
    uint64_t v717 = v1516;
    uint64_t v718 = swift_getWitnessTable();
    uint64_t v719 = swift_getWitnessTable();
    uint64_t v1645 = v718;
    uint64_t v1646 = v719;
    uint64_t v720 = swift_getWitnessTable();
    uint64_t v1643 = v237;
    uint64_t v1644 = v720;
    uint64_t v721 = swift_getWitnessTable();
    uint64_t v722 = swift_getWitnessTable();
    uint64_t v723 = swift_getWitnessTable();
    uint64_t v1641 = v722;
    uint64_t v1642 = v723;
    uint64_t v724 = swift_getWitnessTable();
    uint64_t v1639 = v721;
    uint64_t v1640 = v724;
    uint64_t v1637 = swift_getWitnessTable();
    uint64_t v1638 = v237;
    uint64_t v725 = swift_getWitnessTable();
    uint64_t v726 = (uint64_t)v1498;
    sub_24EB68678(v1523, v717, v725);
    uint64_t v727 = swift_getWitnessTable();
    uint64_t v728 = swift_getWitnessTable();
    uint64_t v1635 = v727;
    uint64_t v1636 = v728;
    uint64_t v729 = swift_getWitnessTable();
    uint64_t v1633 = v237;
    uint64_t v1634 = v729;
    uint64_t v730 = swift_getWitnessTable();
    uint64_t v731 = swift_getWitnessTable();
    uint64_t v732 = swift_getWitnessTable();
    uint64_t v1631 = v731;
    uint64_t v1632 = v732;
    uint64_t v733 = swift_getWitnessTable();
    uint64_t v1629 = v730;
    uint64_t v1630 = v733;
    uint64_t v1627 = swift_getWitnessTable();
    uint64_t v1628 = v237;
    uint64_t v1626 = swift_getWitnessTable();
    swift_getWitnessTable();
    sub_24EB686B4(v726, v717);
    v734 = (void (*)(uint64_t, uint64_t))v1499[1];
    v734(v726, v717);
    v734((uint64_t)v1523, v717);
  }
  else
  {
    uint64_t v243 = v1485;
    unint64_t v244 = v1568;
    (*(void (**)(char *, char *, char **))(v223 + 32))(v1502, v220, v222);
    uint64_t v1759 = sub_24EC22040();
    sub_24EC22B40();
    swift_getWitnessTable();
    char v245 = sub_24EC22C50();
    swift_bridgeObjectRelease();
    if (v245)
    {
      uint64_t v246 = v1477;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1483 + 56))(v1477, 1, 1, v1533);
      uint64_t v247 = swift_getWitnessTable();
      uint64_t v248 = swift_getWitnessTable();
      uint64_t v1663 = v247;
      uint64_t v1664 = v248;
      uint64_t v249 = swift_getWitnessTable();
      uint64_t v237 = MEMORY[0x263F1BA00];
      uint64_t v1661 = MEMORY[0x263F1BA00];
      uint64_t v1662 = v249;
      uint64_t v250 = swift_getWitnessTable();
      uint64_t v251 = swift_getWitnessTable();
      uint64_t v252 = swift_getWitnessTable();
      uint64_t v1659 = v251;
      uint64_t v1660 = v252;
      uint64_t v253 = swift_getWitnessTable();
      uint64_t v1657 = v250;
      uint64_t v1658 = v253;
      uint64_t v1655 = swift_getWitnessTable();
      uint64_t v1656 = v237;
      swift_getWitnessTable();
      uint64_t v254 = v1484;
      uint64_t v255 = v1541;
      (*(void (**)(char *, char *, uint64_t))(v1484 + 16))(v1520, v246, v1541);
      uint64_t v256 = *(void (**)(void, void))(v254 + 8);
      uint64_t v1570 = (v254 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v257 = (uint64_t)v246;
      v1571 = v256;
      v256(v246, v255);
    }
    else
    {
      uint64_t v258 = sub_24EBA62AC();
      MEMORY[0x270FA5388](v258);
      swift_getKeyPath();
      uint64_t v259 = v1475;
      sub_24EC229E0();
      swift_release();
      uint64_t v260 = v259;
      swift_release();
      int v261 = swift_getEnumCaseMultiPayload();
      uint64_t v262 = v1494;
      uint64_t v263 = v1519;
      uint64_t v264 = v1465;
      switch(v261)
      {
        case 1:
          sub_24EC22060();
          v1485 = (char *)sub_24EC22040();
          sub_24EC22050();
          sub_24EC22070();
          uint64_t v906 = sub_24EBA62AC();
          v1523 = &v1428;
          MEMORY[0x270FA5388](v906);
          swift_getKeyPath();
          sub_24EC229E0();
          swift_release();
          swift_release();
          uint64_t v907 = sub_24EBA62AC();
          v1523 = &v1428;
          MEMORY[0x270FA5388](v907);
          swift_getKeyPath();
          sub_24EC229E0();
          swift_release();
          swift_release();
          uint64_t v908 = sub_24EBA62AC();
          v1523 = &v1428;
          MEMORY[0x270FA5388](v908);
          swift_getKeyPath();
          sub_24EC229E0();
          swift_release();
          swift_release();
          LODWORD(v1482) = v1759;
          uint64_t v909 = sub_24EBA62AC();
          v1523 = &v1428;
          MEMORY[0x270FA5388](v909);
          uint64_t v910 = v1551;
          unint64_t v911 = v1555;
          swift_getKeyPath();
          sub_24EC229E0();
          swift_release();
          swift_release();
          uint64_t v912 = v1548;
          (*((void (**)(char *, uint64_t, uint64_t))v1487 + 2))(v1508, v1548 + *((int *)v1546 + 52), v1486);
          v1517 = *(void (**)(char *, uint64_t, uint64_t))(v1545 + 16);
          uint64_t v1519 = v1545 + 16;
          v913 = v1504;
          uint64_t v914 = v1501;
          v1517(v1504, v912, v1501);
          v915 = (void *)swift_allocObject();
          v916 = v1571;
          v917 = v1569;
          v915[2] = v1571;
          v915[3] = v917;
          v918 = v1566;
          v915[4] = v1567;
          v915[5] = v918;
          v915[6] = v910;
          unint64_t v919 = v1565;
          uint64_t v920 = v1553;
          v915[7] = v1565;
          v915[8] = v920;
          uint64_t v921 = v1570;
          unint64_t v922 = v1560;
          v915[9] = v1570;
          v915[10] = v922;
          unint64_t v923 = v1568;
          v915[11] = v1562;
          v915[12] = v923;
          v924 = v1556;
          v925 = v1552;
          v915[13] = v1556;
          v915[14] = v925;
          v915[15] = v1559;
          v915[16] = v911;
          uint64_t v926 = v1558;
          v915[17] = v1557;
          v915[18] = v926;
          v927 = v1563;
          v915[19] = v1550;
          v915[20] = v927;
          uint64_t v928 = v1564;
          v915[21] = v1561;
          v915[22] = v928;
          v915[23] = v1554;
          v1523 = (char **)sub_24EBBC538(&qword_26B1D8618, MEMORY[0x263F07508]);
          sub_24EC21E60();
          swift_release();
          v1503 = *(char **)(v1545 + 8);
          v1545 += 8;
          ((void (*)(char *, uint64_t))v1503)(v913, v914);
          v1517(v913, v1548, v914);
          v929 = (void *)swift_allocObject();
          v929[2] = v916;
          v929[3] = v917;
          v930 = v917;
          v931 = v1566;
          v929[4] = v1567;
          v929[5] = v931;
          v929[6] = v1551;
          v929[7] = v919;
          v929[8] = v1553;
          v929[9] = v921;
          v932 = v1562;
          v929[10] = v1560;
          v929[11] = v932;
          v929[12] = v1568;
          v929[13] = v924;
          unint64_t v933 = v1559;
          v929[14] = v1552;
          v929[15] = v933;
          v934 = v1557;
          v929[16] = v1555;
          v929[17] = v934;
          uint64_t v935 = v1558;
          v936 = v1550;
          v929[18] = v1558;
          v929[19] = v936;
          uint64_t v937 = v1561;
          v929[20] = v1563;
          v929[21] = v937;
          v938 = v1554;
          v929[22] = v1564;
          v929[23] = v938;
          v939 = v1504;
          v940 = v930;
          sub_24EC21E60();
          swift_release();
          ((void (*)(char *, uint64_t))v1503)(v939, v914);
          v1517(v939, v1548, v914);
          v941 = (void *)swift_allocObject();
          v941[2] = v1571;
          v941[3] = v940;
          v942 = v1566;
          v941[4] = v1567;
          v941[5] = v942;
          unint64_t v943 = v1565;
          v941[6] = v1551;
          v941[7] = v943;
          uint64_t v944 = v1570;
          v941[8] = v1553;
          v941[9] = v944;
          v941[10] = v1560;
          v941[11] = v932;
          v945 = v1556;
          v941[12] = v1568;
          v941[13] = v945;
          unint64_t v946 = v1559;
          v941[14] = v1552;
          v941[15] = v946;
          v947 = v1557;
          v941[16] = v1555;
          v941[17] = v947;
          v941[18] = v935;
          v941[19] = v936;
          v948 = v1563;
          v941[20] = v1563;
          v941[21] = v937;
          v941[22] = v1564;
          v941[23] = v938;
          sub_24EC21E60();
          swift_release();
          v949 = v939;
          v950 = v939;
          uint64_t v951 = v914;
          ((void (*)(char *, uint64_t))v1503)(v950, v914);
          uint64_t v952 = v1548;
          v1517(v949, v1548, v951);
          v953 = v1493;
          v954 = (char *)v1493[2];
          v1499 = v1493 + 2;
          v1500 = v954;
          v955 = v1474;
          v956 = v1546;
          ((void (*)(char *, uint64_t, void))v954)(v1474, v952, v1546);
          uint64_t v957 = *((unsigned __int8 *)v953 + 80);
          uint64_t v958 = (v957 + 192) & ~v957;
          uint64_t v1494 = v958 + v1452;
          v1498 = (char *)v958;
          uint64_t v1492 = v957 | 7;
          v959 = (void *)swift_allocObject();
          v960 = v1569;
          v959[2] = v1571;
          v959[3] = v960;
          v961 = v1566;
          v959[4] = v1567;
          v959[5] = v961;
          uint64_t v962 = v1551;
          unint64_t v963 = v1565;
          v959[6] = v1551;
          v959[7] = v963;
          uint64_t v964 = v1570;
          v959[8] = v1553;
          v959[9] = v964;
          v965 = v1562;
          v959[10] = v1560;
          v959[11] = v965;
          v966 = v1556;
          v959[12] = v1568;
          v959[13] = v966;
          unint64_t v967 = v1559;
          v959[14] = v1552;
          v959[15] = v967;
          v968 = v1557;
          v959[16] = v1555;
          v959[17] = v968;
          v969 = v1550;
          v959[18] = v1558;
          v959[19] = v969;
          uint64_t v970 = v1561;
          v959[20] = v948;
          v959[21] = v970;
          v971 = v1554;
          v959[22] = v1564;
          v959[23] = v971;
          v972 = (char *)v1493[4];
          v1493 += 4;
          v1491 = v972;
          ((void (*)(char *, char *, void))v972)((char *)v959 + v958, v955, v956);
          v973 = v1504;
          v974 = v961;
          uint64_t v975 = v962;
          uint64_t v976 = v1501;
          v977 = v968;
          sub_24EC221F0();
          swift_release();
          v978 = v1503;
          ((void (*)(char *, uint64_t))v1503)(v973, v976);
          v1517(v973, v1548, v976);
          v979 = (void *)swift_allocObject();
          v979[2] = v1571;
          v979[3] = v960;
          v980 = v1567;
          v979[4] = v1567;
          v979[5] = v974;
          unint64_t v981 = v1565;
          v979[6] = v975;
          v979[7] = v981;
          uint64_t v982 = v1553;
          uint64_t v983 = v1570;
          v979[8] = v1553;
          v979[9] = v983;
          v984 = v1562;
          v979[10] = v1560;
          v979[11] = v984;
          v985 = v1556;
          v979[12] = v1568;
          v979[13] = v985;
          unint64_t v986 = v1559;
          v979[14] = v1552;
          v979[15] = v986;
          v979[16] = v1555;
          v979[17] = v977;
          v987 = v1550;
          v979[18] = v1558;
          v979[19] = v987;
          uint64_t v988 = v1561;
          v979[20] = v1563;
          v979[21] = v988;
          v989 = v1554;
          v979[22] = v1564;
          v979[23] = v989;
          v990 = v1504;
          uint64_t v991 = v1501;
          sub_24EC21E60();
          swift_release();
          ((void (*)(char *, uint64_t))v978)(v990, v991);
          v992 = v990;
          uint64_t v993 = v991;
          v994 = v1517;
          v1517(v992, v1548, v991);
          v995 = (void *)swift_allocObject();
          v996 = v1569;
          v995[2] = v1571;
          v995[3] = v996;
          v997 = v1566;
          v995[4] = v980;
          v995[5] = v997;
          unint64_t v998 = v1565;
          v995[6] = v1551;
          v995[7] = v998;
          uint64_t v999 = v1570;
          v995[8] = v982;
          v995[9] = v999;
          v995[10] = v1560;
          v995[11] = v984;
          unint64_t v1000 = v1568;
          v1001 = v1556;
          v995[12] = v1568;
          v995[13] = v1001;
          v995[14] = v1552;
          v995[15] = v986;
          v1002 = v1557;
          v995[16] = v1555;
          v995[17] = v1002;
          v1003 = v1550;
          v995[18] = v1558;
          v995[19] = v1003;
          uint64_t v1004 = v1561;
          v995[20] = v1563;
          v995[21] = v1004;
          v1005 = v1554;
          v995[22] = v1564;
          v995[23] = v1005;
          v1006 = v1504;
          sub_24EC21E60();
          swift_release();
          uint64_t v1007 = v993;
          ((void (*)(char *, uint64_t))v1503)(v1006, v993);
          uint64_t v1008 = v1548;
          v994(v1006, v1548, v1007);
          v1009 = v1474;
          uint64_t v1010 = v1008;
          v1011 = v1546;
          ((void (*)(char *, uint64_t, void))v1500)(v1474, v1010, v1546);
          uint64_t v1012 = swift_allocObject();
          unint64_t v1013 = v1000;
          v1014 = (void *)v1012;
          v1015 = v1569;
          *(void *)(v1012 + 16) = v1571;
          *(void *)(v1012 + 24) = v1015;
          v1016 = v1566;
          *(void *)(v1012 + 32) = v1567;
          *(void *)(v1012 + 40) = v1016;
          *(void *)(v1012 + 48) = v1551;
          *(void *)(v1012 + 56) = v998;
          uint64_t v1017 = v1553;
          uint64_t v1018 = v1570;
          *(void *)(v1012 + 64) = v1553;
          *(void *)(v1012 + 72) = v1018;
          v1019 = v1562;
          *(void *)(v1012 + 80) = v1560;
          *(void *)(v1012 + 88) = v1019;
          *(void *)(v1012 + 96) = v1013;
          *(void *)(v1012 + 104) = v1001;
          unint64_t v1020 = v1559;
          *(void *)(v1012 + 112) = v1552;
          *(void *)(v1012 + 120) = v1020;
          v1021 = v1557;
          *(void *)(v1012 + 128) = v1555;
          *(void *)(v1012 + 136) = v1021;
          v1022 = v1550;
          *(void *)(v1012 + 144) = v1558;
          *(void *)(v1012 + 152) = v1022;
          uint64_t v1023 = v1561;
          *(void *)(v1012 + 160) = v1563;
          *(void *)(v1012 + 168) = v1023;
          v1024 = &v1498[v1012];
          v1025 = v1554;
          v1014[22] = v1564;
          v1014[23] = v1025;
          ((void (*)(char *, char *, void))v1491)(v1024, v1009, v1011);
          TupleTypeMetadata2 = MEMORY[0x263F8EE60] + 8;
          v1026 = v1495;
          sub_24EC22270();
          swift_release();
          ((void (*)(char *, uint64_t))v1503)(v1006, v1007);
          uint64_t v1027 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699470B8);
          v1028 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v1027 - 8) + 56);
          v1028(v1026, 0, 1, v1027);
          v1028(v1496, 1, 1, v1027);
          uint64_t v1029 = v1548;
          v1517(v1006, v1548, v1007);
          v1030 = v1009;
          v1031 = v1546;
          ((void (*)(char *, uint64_t, void))v1500)(v1009, v1029, v1546);
          uint64_t v1032 = swift_allocObject();
          v1033 = v1569;
          *(void *)(v1032 + 16) = v1571;
          *(void *)(v1032 + 24) = v1033;
          v1034 = v1566;
          *(void *)(v1032 + 32) = v1567;
          *(void *)(v1032 + 40) = v1034;
          unint64_t v1035 = v1565;
          *(void *)(v1032 + 48) = v1551;
          *(void *)(v1032 + 56) = v1035;
          uint64_t v1036 = v1570;
          *(void *)(v1032 + 64) = v1017;
          *(void *)(v1032 + 72) = v1036;
          v1037 = v1562;
          *(void *)(v1032 + 80) = v1560;
          *(void *)(v1032 + 88) = v1037;
          v1038 = v1556;
          *(void *)(v1032 + 96) = v1568;
          *(void *)(v1032 + 104) = v1038;
          unint64_t v1039 = v1559;
          *(void *)(v1032 + 112) = v1552;
          *(void *)(v1032 + 120) = v1039;
          v1040 = v1557;
          *(void *)(v1032 + 128) = v1555;
          *(void *)(v1032 + 136) = v1040;
          v1041 = v1550;
          *(void *)(v1032 + 144) = v1558;
          *(void *)(v1032 + 152) = v1041;
          uint64_t v1042 = v1561;
          *(void *)(v1032 + 160) = v1563;
          *(void *)(v1032 + 168) = v1042;
          v1043 = &v1498[v1032];
          v1044 = v1554;
          *(void *)(v1032 + 176) = v1564;
          *(void *)(v1032 + 184) = v1044;
          ((void (*)(char *, char *, void))v1491)(v1043, v1030, v1031);
          v1045 = v1490;
          sub_24EC22270();
          swift_release();
          ((void (*)(char *, uint64_t))v1503)(v1006, v1007);
          uint64_t v1046 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699470C0);
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v1046 - 8) + 56))(v1045, 0, 1, v1046);
          v1517(v1006, v1548, v1007);
          uint64_t v1047 = MEMORY[0x263F1BA00];
          uint64_t v1048 = (uint64_t)v1434;
          sub_24EC220F0();
          uint64_t v1049 = v1535;
          uint64_t v1050 = swift_getWitnessTable();
          v1051 = v1444;
          sub_24EB68678(v1048, v1049, v1050);
          uint64_t v1053 = v1451 + 8;
          v1052 = *(void (**)(uint64_t, uint64_t))(v1451 + 8);
          v1052(v1048, v1049);
          v1054 = v1052;
          v1571 = v1052;
          uint64_t v1451 = v1053;
          sub_24EB68678(v1051, v1049, v1050);
          uint64_t v1055 = v1528;
          uint64_t v1056 = swift_getWitnessTable();
          uint64_t v1057 = (uint64_t)v1447;
          sub_24EB687AC(v1048, v1055, v1049);
          v1054(v1048, v1049);
          uint64_t v1058 = swift_getWitnessTable();
          uint64_t v1059 = swift_getWitnessTable();
          uint64_t v1695 = v1058;
          uint64_t v1696 = v1059;
          uint64_t v1060 = swift_getWitnessTable();
          uint64_t v1693 = v1047;
          uint64_t v1694 = v1060;
          uint64_t v1061 = v1530;
          uint64_t v1062 = swift_getWitnessTable();
          uint64_t v1691 = v1056;
          uint64_t v1692 = v1050;
          uint64_t v1063 = v1540;
          uint64_t v1064 = swift_getWitnessTable();
          uint64_t v1065 = (uint64_t)v1458;
          sub_24EB687AC(v1057, v1061, v1063);
          (*(void (**)(uint64_t, uint64_t))(v1448 + 8))(v1057, v1063);
          uint64_t v1689 = v1062;
          uint64_t v1690 = v1064;
          uint64_t v1066 = v1531;
          swift_getWitnessTable();
          uint64_t v894 = MEMORY[0x263F1BA00];
          sub_24EB686B4(v1065, v1066);
          (*(void (**)(uint64_t, uint64_t))(v1459 + 8))(v1065, v1066);
          v1571(v1444, v1049);
          goto LABEL_21;
        case 2:
          sub_24EC22060();
          v1485 = (char *)sub_24EC22040();
          sub_24EC22050();
          sub_24EC22070();
          uint64_t v735 = sub_24EBA62AC();
          v1523 = &v1428;
          MEMORY[0x270FA5388](v735);
          swift_getKeyPath();
          sub_24EC229E0();
          swift_release();
          swift_release();
          uint64_t v736 = sub_24EBA62AC();
          v1523 = &v1428;
          MEMORY[0x270FA5388](v736);
          swift_getKeyPath();
          sub_24EC229E0();
          swift_release();
          swift_release();
          uint64_t v737 = sub_24EBA62AC();
          v1523 = &v1428;
          MEMORY[0x270FA5388](v737);
          swift_getKeyPath();
          sub_24EC229E0();
          swift_release();
          swift_release();
          LODWORD(v1482) = v1759;
          v738 = v1546;
          uint64_t v739 = sub_24EBA62AC();
          v1523 = &v1428;
          MEMORY[0x270FA5388](v739);
          unint64_t v740 = v1555;
          swift_getKeyPath();
          sub_24EC229E0();
          swift_release();
          swift_release();
          uint64_t v741 = v1548;
          (*((void (**)(char *, uint64_t, uint64_t))v1487 + 2))(v1508, v1548 + *((int *)v738 + 52), v1486);
          v1517 = *(void (**)(char *, uint64_t, uint64_t))(v1545 + 16);
          uint64_t v1519 = v1545 + 16;
          v742 = v1504;
          uint64_t v743 = v1501;
          v1517(v1504, v741, v1501);
          v744 = (void *)swift_allocObject();
          v745 = v1571;
          v746 = v1569;
          v744[2] = v1571;
          v744[3] = v746;
          v747 = v1566;
          v744[4] = v1567;
          v744[5] = v747;
          unint64_t v748 = v1565;
          v744[6] = v1551;
          v744[7] = v748;
          uint64_t v749 = v1570;
          v744[8] = v1553;
          v744[9] = v749;
          v750 = v1562;
          v744[10] = v1560;
          v744[11] = v750;
          v751 = v1556;
          v744[12] = v1568;
          v744[13] = v751;
          unint64_t v752 = v1559;
          v744[14] = v1552;
          v744[15] = v752;
          v753 = v1557;
          v744[16] = v740;
          v744[17] = v753;
          v754 = v1550;
          v744[18] = v1558;
          v744[19] = v754;
          uint64_t v755 = v1561;
          v744[20] = v1563;
          v744[21] = v755;
          v756 = v1554;
          v744[22] = v1564;
          v744[23] = v756;
          v1523 = (char **)sub_24EBBC538(&qword_26B1D8618, MEMORY[0x263F07508]);
          sub_24EC21E60();
          swift_release();
          v1503 = *(char **)(v1545 + 8);
          v1545 += 8;
          ((void (*)(char *, uint64_t))v1503)(v742, v743);
          v1517(v742, v1548, v743);
          v757 = (void *)swift_allocObject();
          v757[2] = v745;
          v757[3] = v746;
          v758 = v746;
          v759 = v1566;
          v757[4] = v1567;
          v757[5] = v759;
          v757[6] = v1551;
          v757[7] = v748;
          v757[8] = v1553;
          v757[9] = v749;
          v760 = v1562;
          v757[10] = v1560;
          v757[11] = v760;
          v757[12] = v1568;
          v757[13] = v751;
          unint64_t v761 = v1559;
          v757[14] = v1552;
          v757[15] = v761;
          v762 = v1557;
          v757[16] = v1555;
          v757[17] = v762;
          uint64_t v763 = v1558;
          v764 = v1550;
          v757[18] = v1558;
          v757[19] = v764;
          uint64_t v765 = v1561;
          v757[20] = v1563;
          v757[21] = v765;
          v766 = v1554;
          v757[22] = v1564;
          v757[23] = v766;
          v767 = v1504;
          v768 = v758;
          sub_24EC21E60();
          swift_release();
          ((void (*)(char *, uint64_t))v1503)(v767, v743);
          v1517(v767, v1548, v743);
          v769 = (void *)swift_allocObject();
          v769[2] = v1571;
          v769[3] = v768;
          v770 = v1566;
          v769[4] = v1567;
          v769[5] = v770;
          unint64_t v771 = v1565;
          v769[6] = v1551;
          v769[7] = v771;
          uint64_t v772 = v1570;
          v769[8] = v1553;
          v769[9] = v772;
          v773 = v1562;
          v769[10] = v1560;
          v769[11] = v773;
          v774 = v1556;
          v769[12] = v1568;
          v769[13] = v774;
          v769[14] = v1552;
          v769[15] = v761;
          v775 = v1557;
          v769[16] = v1555;
          v769[17] = v775;
          v769[18] = v763;
          v769[19] = v764;
          v776 = v1563;
          v769[20] = v1563;
          v769[21] = v765;
          v769[22] = v1564;
          v769[23] = v766;
          sub_24EC21E60();
          swift_release();
          v777 = v767;
          v778 = v767;
          uint64_t v779 = v743;
          ((void (*)(char *, uint64_t))v1503)(v778, v743);
          uint64_t v780 = v1548;
          v1517(v777, v1548, v779);
          v781 = v1493;
          v782 = (char *)v1493[2];
          v1499 = v1493 + 2;
          v1500 = v782;
          v783 = v1474;
          v784 = v1546;
          ((void (*)(char *, uint64_t, void))v782)(v1474, v780, v1546);
          uint64_t v785 = *((unsigned __int8 *)v781 + 80);
          uint64_t v786 = (v785 + 192) & ~v785;
          uint64_t v1494 = v786 + v1452;
          v1498 = (char *)v786;
          uint64_t v1492 = v785 | 7;
          v787 = (void *)swift_allocObject();
          v788 = v1569;
          v787[2] = v1571;
          v787[3] = v788;
          v789 = v1566;
          v787[4] = v1567;
          v787[5] = v789;
          uint64_t v790 = v1551;
          unint64_t v791 = v1565;
          v787[6] = v1551;
          v787[7] = v791;
          uint64_t v792 = v1570;
          v787[8] = v1553;
          v787[9] = v792;
          v793 = v1562;
          v787[10] = v1560;
          v787[11] = v793;
          v794 = v1556;
          v787[12] = v1568;
          v787[13] = v794;
          unint64_t v795 = v1559;
          v787[14] = v1552;
          v787[15] = v795;
          v796 = v1557;
          v787[16] = v1555;
          v787[17] = v796;
          v797 = v1550;
          v787[18] = v1558;
          v787[19] = v797;
          uint64_t v798 = v1561;
          v787[20] = v776;
          v787[21] = v798;
          v799 = v1554;
          v787[22] = v1564;
          v787[23] = v799;
          v800 = (char *)v1493[4];
          v1493 += 4;
          v1491 = v800;
          ((void (*)(char *, char *, void))v800)((char *)v787 + v786, v783, v784);
          v801 = v1504;
          v802 = v789;
          uint64_t v803 = v790;
          uint64_t v804 = v1501;
          v805 = v796;
          sub_24EC221F0();
          swift_release();
          v806 = v1503;
          ((void (*)(char *, uint64_t))v1503)(v801, v804);
          v1517(v801, v1548, v804);
          v807 = (void *)swift_allocObject();
          v807[2] = v1571;
          v807[3] = v788;
          v808 = v1567;
          v807[4] = v1567;
          v807[5] = v802;
          unint64_t v809 = v1565;
          v807[6] = v803;
          v807[7] = v809;
          uint64_t v810 = v1553;
          uint64_t v811 = v1570;
          v807[8] = v1553;
          v807[9] = v811;
          v812 = v1562;
          v807[10] = v1560;
          v807[11] = v812;
          v813 = v1556;
          v807[12] = v1568;
          v807[13] = v813;
          unint64_t v814 = v1559;
          v807[14] = v1552;
          v807[15] = v814;
          v807[16] = v1555;
          v807[17] = v805;
          v815 = v1550;
          v807[18] = v1558;
          v807[19] = v815;
          uint64_t v816 = v1561;
          v807[20] = v1563;
          v807[21] = v816;
          v817 = v1554;
          v807[22] = v1564;
          v807[23] = v817;
          v818 = v1504;
          uint64_t v819 = v1501;
          sub_24EC21E60();
          swift_release();
          ((void (*)(char *, uint64_t))v806)(v818, v819);
          v820 = v818;
          uint64_t v821 = v819;
          v822 = v1517;
          v1517(v820, v1548, v819);
          v823 = (void *)swift_allocObject();
          v824 = v1569;
          v823[2] = v1571;
          v823[3] = v824;
          v825 = v1566;
          v823[4] = v808;
          v823[5] = v825;
          unint64_t v826 = v1565;
          v823[6] = v1551;
          v823[7] = v826;
          uint64_t v827 = v1570;
          v823[8] = v810;
          v823[9] = v827;
          v823[10] = v1560;
          v823[11] = v812;
          unint64_t v828 = v1568;
          v829 = v1556;
          v823[12] = v1568;
          v823[13] = v829;
          v823[14] = v1552;
          v823[15] = v814;
          v830 = v1557;
          v823[16] = v1555;
          v823[17] = v830;
          v831 = v1550;
          v823[18] = v1558;
          v823[19] = v831;
          uint64_t v832 = v1561;
          v823[20] = v1563;
          v823[21] = v832;
          v833 = v1554;
          v823[22] = v1564;
          v823[23] = v833;
          v834 = v1504;
          sub_24EC21E60();
          swift_release();
          uint64_t v835 = v821;
          ((void (*)(char *, uint64_t))v1503)(v834, v821);
          uint64_t v836 = v1548;
          v822(v834, v1548, v835);
          v837 = v1474;
          uint64_t v838 = v836;
          v839 = v1546;
          ((void (*)(char *, uint64_t, void))v1500)(v1474, v838, v1546);
          uint64_t v840 = swift_allocObject();
          unint64_t v841 = v828;
          v842 = (void *)v840;
          v843 = v1569;
          *(void *)(v840 + 16) = v1571;
          *(void *)(v840 + 24) = v843;
          v844 = v1566;
          *(void *)(v840 + 32) = v1567;
          *(void *)(v840 + 40) = v844;
          *(void *)(v840 + 48) = v1551;
          *(void *)(v840 + 56) = v826;
          uint64_t v845 = v1553;
          uint64_t v846 = v1570;
          *(void *)(v840 + 64) = v1553;
          *(void *)(v840 + 72) = v846;
          v847 = v1562;
          *(void *)(v840 + 80) = v1560;
          *(void *)(v840 + 88) = v847;
          *(void *)(v840 + 96) = v841;
          *(void *)(v840 + 104) = v829;
          unint64_t v848 = v1559;
          *(void *)(v840 + 112) = v1552;
          *(void *)(v840 + 120) = v848;
          v849 = v1557;
          *(void *)(v840 + 128) = v1555;
          *(void *)(v840 + 136) = v849;
          v850 = v1550;
          *(void *)(v840 + 144) = v1558;
          *(void *)(v840 + 152) = v850;
          uint64_t v851 = v1561;
          *(void *)(v840 + 160) = v1563;
          *(void *)(v840 + 168) = v851;
          v852 = &v1498[v840];
          v853 = v1554;
          v842[22] = v1564;
          v842[23] = v853;
          ((void (*)(char *, char *, void))v1491)(v852, v837, v839);
          TupleTypeMetadata2 = MEMORY[0x263F8EE60] + 8;
          v854 = v1495;
          sub_24EC22270();
          swift_release();
          ((void (*)(char *, uint64_t))v1503)(v834, v835);
          uint64_t v855 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699470B8);
          v856 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v855 - 8) + 56);
          v856(v854, 0, 1, v855);
          v856(v1496, 1, 1, v855);
          uint64_t v857 = v1548;
          v1517(v834, v1548, v835);
          v858 = v837;
          v859 = v1546;
          ((void (*)(char *, uint64_t, void))v1500)(v837, v857, v1546);
          uint64_t v860 = swift_allocObject();
          v861 = v1569;
          *(void *)(v860 + 16) = v1571;
          *(void *)(v860 + 24) = v861;
          v862 = v1566;
          *(void *)(v860 + 32) = v1567;
          *(void *)(v860 + 40) = v862;
          unint64_t v863 = v1565;
          *(void *)(v860 + 48) = v1551;
          *(void *)(v860 + 56) = v863;
          uint64_t v864 = v1570;
          *(void *)(v860 + 64) = v845;
          *(void *)(v860 + 72) = v864;
          v865 = v1562;
          *(void *)(v860 + 80) = v1560;
          *(void *)(v860 + 88) = v865;
          v866 = v1556;
          *(void *)(v860 + 96) = v1568;
          *(void *)(v860 + 104) = v866;
          unint64_t v867 = v1559;
          *(void *)(v860 + 112) = v1552;
          *(void *)(v860 + 120) = v867;
          v868 = v1557;
          *(void *)(v860 + 128) = v1555;
          *(void *)(v860 + 136) = v868;
          v869 = v1550;
          *(void *)(v860 + 144) = v1558;
          *(void *)(v860 + 152) = v869;
          uint64_t v870 = v1561;
          *(void *)(v860 + 160) = v1563;
          *(void *)(v860 + 168) = v870;
          v871 = &v1498[v860];
          v872 = v1554;
          *(void *)(v860 + 176) = v1564;
          *(void *)(v860 + 184) = v872;
          ((void (*)(char *, char *, void))v1491)(v871, v858, v859);
          v873 = v1490;
          sub_24EC22270();
          swift_release();
          ((void (*)(char *, uint64_t))v1503)(v834, v835);
          uint64_t v874 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699470C0);
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v874 - 8) + 56))(v873, 0, 1, v874);
          v1517(v834, v1548, v835);
          uint64_t v875 = MEMORY[0x263F1BA00];
          uint64_t v876 = (uint64_t)v1437;
          sub_24EC22250();
          uint64_t v877 = v1528;
          uint64_t v878 = swift_getWitnessTable();
          v879 = v1450;
          sub_24EB68678(v876, v877, v878);
          uint64_t v881 = v1453 + 8;
          v880 = *(void (**)(uint64_t, uint64_t))(v1453 + 8);
          v880(v876, v877);
          v882 = v880;
          v1571 = v880;
          uint64_t v1453 = v881;
          sub_24EB68678(v879, v877, v878);
          uint64_t v883 = swift_getWitnessTable();
          uint64_t v884 = (uint64_t)v1447;
          sub_24EB686B4(v876, v877);
          v882(v876, v877);
          uint64_t v885 = swift_getWitnessTable();
          uint64_t v886 = swift_getWitnessTable();
          uint64_t v1687 = v885;
          uint64_t v1688 = v886;
          uint64_t v887 = swift_getWitnessTable();
          uint64_t v1685 = v875;
          uint64_t v1686 = v887;
          uint64_t v888 = v1530;
          uint64_t v889 = swift_getWitnessTable();
          uint64_t v1683 = v878;
          uint64_t v1684 = v883;
          uint64_t v890 = v1540;
          uint64_t v891 = swift_getWitnessTable();
          uint64_t v892 = (uint64_t)v1458;
          sub_24EB687AC(v884, v888, v890);
          (*(void (**)(uint64_t, uint64_t))(v1448 + 8))(v884, v890);
          uint64_t v1681 = v889;
          uint64_t v1682 = v891;
          uint64_t v893 = v1531;
          swift_getWitnessTable();
          uint64_t v894 = MEMORY[0x263F1BA00];
          sub_24EB686B4(v892, v893);
          (*(void (**)(uint64_t, uint64_t))(v1459 + 8))(v892, v893);
          v1571(v1450, v877);
LABEL_21:
          uint64_t v277 = v894;
          (*(void (**)(char *, uint64_t))(*(void *)(v1553 - 8) + 8))(v1475, v1553);
          break;
        case 3:
          (*(void (**)(char *, char *, uint64_t))(v1519 + 32))(v1465, v260, v1494);
          (*(void (**)(char *, char *, uint64_t))(v263 + 16))(v243, v264, v262);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            (*(void (**)(void))(v1461 + 32))();
            sub_24EC22060();
            v1485 = (char *)sub_24EC22040();
            sub_24EC22050();
            sub_24EC22070();
            uint64_t v1482 = sub_24EC21FF0();
            uint64_t v1067 = sub_24EBA62AC();
            v1523 = &v1428;
            MEMORY[0x270FA5388](v1067);
            swift_getKeyPath();
            sub_24EC229E0();
            swift_release();
            swift_release();
            uint64_t v1068 = sub_24EBA62AC();
            v1523 = &v1428;
            MEMORY[0x270FA5388](v1068);
            swift_getKeyPath();
            sub_24EC229E0();
            swift_release();
            swift_release();
            uint64_t v1069 = sub_24EBA62AC();
            v1523 = &v1428;
            MEMORY[0x270FA5388](v1069);
            swift_getKeyPath();
            sub_24EC229E0();
            swift_release();
            swift_release();
            LODWORD(v1481) = v1759;
            uint64_t v1070 = sub_24EBA62AC();
            v1523 = &v1428;
            MEMORY[0x270FA5388](v1070);
            v1071 = v1567;
            v1072 = v1562;
            v1073 = v1556;
            swift_getKeyPath();
            v1074 = v1071;
            sub_24EC229E0();
            swift_release();
            swift_release();
            uint64_t v1075 = v1548;
            (*((void (**)(char *, uint64_t, uint64_t))v1487 + 2))(v1508, v1548 + *((int *)v1546 + 52), v1486);
            v1076 = v1072;
            v1077 = *(void (**)(void, void, void))(v1545 + 16);
            v1500 = (char *)(v1545 + 16);
            v1517 = (void (*)(char *, uint64_t, uint64_t))v1077;
            v1078 = v1504;
            uint64_t v1079 = v1501;
            v1077(v1504, v1075, v1501);
            v1080 = (void *)swift_allocObject();
            v1081 = v1569;
            v1080[2] = v1571;
            v1080[3] = v1081;
            v1080[4] = v1074;
            v1082 = v1566;
            uint64_t v1083 = v1551;
            v1080[5] = v1566;
            v1080[6] = v1083;
            uint64_t v1084 = v1553;
            v1080[7] = v1565;
            v1080[8] = v1084;
            uint64_t v1085 = v1570;
            unint64_t v1086 = v1560;
            v1080[9] = v1570;
            v1080[10] = v1086;
            unint64_t v1087 = v1568;
            v1080[11] = v1076;
            v1080[12] = v1087;
            v1088 = v1552;
            v1080[13] = v1073;
            v1080[14] = v1088;
            unint64_t v1089 = v1555;
            v1080[15] = v1559;
            v1080[16] = v1089;
            v1090 = v1557;
            uint64_t v1091 = v1558;
            v1080[17] = v1557;
            v1080[18] = v1091;
            v1092 = v1563;
            v1080[19] = v1550;
            v1080[20] = v1092;
            uint64_t v1093 = v1564;
            v1080[21] = v1561;
            v1080[22] = v1093;
            v1080[23] = v1554;
            v1503 = (char *)sub_24EBBC538(&qword_26B1D8618, MEMORY[0x263F07508]);
            sub_24EC21E60();
            swift_release();
            v1094 = *(char ***)(v1545 + 8);
            v1545 += 8;
            v1523 = v1094;
            ((void (*)(char *, uint64_t))v1094)(v1078, v1079);
            v1517(v1078, v1548, v1079);
            v1095 = (void *)swift_allocObject();
            v1095[2] = v1571;
            v1095[3] = v1081;
            v1095[4] = v1567;
            v1095[5] = v1082;
            unint64_t v1096 = v1565;
            v1095[6] = v1551;
            v1095[7] = v1096;
            v1095[8] = v1553;
            v1095[9] = v1085;
            v1097 = v1562;
            v1095[10] = v1560;
            v1095[11] = v1097;
            v1098 = v1556;
            v1095[12] = v1087;
            v1095[13] = v1098;
            v1099 = v1552;
            unint64_t v1100 = v1559;
            v1095[14] = v1552;
            v1095[15] = v1100;
            v1095[16] = v1555;
            v1095[17] = v1090;
            v1101 = v1550;
            v1095[18] = v1558;
            v1095[19] = v1101;
            v1095[20] = v1092;
            uint64_t v1102 = v1561;
            uint64_t v1103 = v1564;
            v1095[21] = v1561;
            v1095[22] = v1103;
            v1095[23] = v1554;
            v1104 = v1081;
            uint64_t v1105 = v1501;
            sub_24EC21E60();
            swift_release();
            ((void (*)(char *, uint64_t))v1523)(v1078, v1105);
            v1106 = v1078;
            uint64_t v1107 = v1105;
            v1517(v1106, v1548, v1105);
            v1108 = (void *)swift_allocObject();
            v1108[2] = v1571;
            v1108[3] = v1104;
            v1109 = v1566;
            v1108[4] = v1567;
            v1108[5] = v1109;
            unint64_t v1110 = v1565;
            v1108[6] = v1551;
            v1108[7] = v1110;
            uint64_t v1111 = v1570;
            v1108[8] = v1553;
            v1108[9] = v1111;
            v1112 = v1562;
            v1108[10] = v1560;
            v1108[11] = v1112;
            v1113 = v1556;
            v1108[12] = v1568;
            v1108[13] = v1113;
            v1108[14] = v1099;
            v1108[15] = v1100;
            v1114 = v1557;
            v1108[16] = v1555;
            v1108[17] = v1114;
            v1115 = v1550;
            v1108[18] = v1558;
            v1108[19] = v1115;
            v1108[20] = v1563;
            v1108[21] = v1102;
            v1116 = v1554;
            v1108[22] = v1103;
            v1108[23] = v1116;
            v1117 = v1504;
            sub_24EC21E60();
            swift_release();
            ((void (*)(char *, uint64_t))v1523)(v1117, v1107);
            v1118 = v1117;
            v1119 = v1117;
            uint64_t v1120 = v1548;
            v1517(v1118, v1548, v1107);
            v1121 = v1493;
            v1122 = (void *)v1493[2];
            v1498 = (char *)(v1493 + 2);
            v1499 = v1122;
            v1123 = v1474;
            ((void (*)(char *, uint64_t, void))v1122)(v1474, v1120, v1546);
            uint64_t v1124 = *((unsigned __int8 *)v1121 + 80);
            v1125 = v1121;
            uint64_t v1126 = (v1124 + 192) & ~v1124;
            v1491 = (char *)(v1126 + v1452);
            uint64_t v1492 = v1126;
            uint64_t v1488 = v1124 | 7;
            v1127 = (void *)swift_allocObject();
            v1128 = v1569;
            v1127[2] = v1571;
            v1127[3] = v1128;
            v1129 = v1566;
            v1127[4] = v1567;
            v1127[5] = v1129;
            uint64_t v1130 = v1551;
            unint64_t v1131 = v1565;
            v1127[6] = v1551;
            v1127[7] = v1131;
            uint64_t v1132 = v1570;
            v1127[8] = v1553;
            v1127[9] = v1132;
            v1133 = v1562;
            v1127[10] = v1560;
            v1127[11] = v1133;
            v1134 = v1556;
            v1127[12] = v1568;
            v1127[13] = v1134;
            unint64_t v1135 = v1559;
            v1127[14] = v1552;
            v1127[15] = v1135;
            v1136 = v1557;
            v1127[16] = v1555;
            v1127[17] = v1136;
            v1137 = v1550;
            v1127[18] = v1558;
            v1127[19] = v1137;
            uint64_t v1138 = v1561;
            v1127[20] = v1563;
            v1127[21] = v1138;
            v1139 = v1554;
            v1127[22] = v1564;
            v1127[23] = v1139;
            v1140 = (void (**)(char *, void, uint64_t))v1125[4];
            v1493 = v1125 + 4;
            v1487 = (void (*)(char *, char *, void *))v1140;
            ((void (*)(char *, char *, void))v1140)((char *)v1127 + v1126, v1123, v1546);
            v1141 = v1119;
            v1142 = v1129;
            uint64_t v1143 = v1501;
            sub_24EC221F0();
            swift_release();
            ((void (*)(char *, uint64_t))v1523)(v1119, v1143);
            uint64_t v1144 = v1143;
            v1145 = v1517;
            v1517(v1119, v1548, v1144);
            v1146 = (void *)swift_allocObject();
            v1146[2] = v1571;
            v1146[3] = v1128;
            v1146[4] = v1567;
            v1146[5] = v1142;
            v1146[6] = v1130;
            unint64_t v1147 = v1565;
            uint64_t v1148 = v1553;
            v1146[7] = v1565;
            v1146[8] = v1148;
            unint64_t v1149 = v1560;
            v1146[9] = v1570;
            v1146[10] = v1149;
            unint64_t v1150 = v1568;
            v1146[11] = v1562;
            v1146[12] = v1150;
            v1151 = v1552;
            v1146[13] = v1556;
            v1146[14] = v1151;
            unint64_t v1152 = v1559;
            unint64_t v1153 = v1555;
            v1146[15] = v1559;
            v1146[16] = v1153;
            uint64_t v1154 = v1558;
            v1146[17] = v1136;
            v1146[18] = v1154;
            v1155 = v1550;
            v1156 = v1563;
            v1146[19] = v1550;
            v1146[20] = v1156;
            uint64_t v1157 = v1564;
            v1146[21] = v1561;
            v1146[22] = v1157;
            v1158 = v1554;
            v1146[23] = v1554;
            uint64_t v1159 = v1501;
            sub_24EC21E60();
            swift_release();
            ((void (*)(char *, uint64_t))v1523)(v1141, v1159);
            uint64_t v1160 = v1159;
            v1145(v1141, v1548, v1159);
            v1161 = (void *)swift_allocObject();
            v1162 = v1569;
            v1161[2] = v1571;
            v1161[3] = v1162;
            v1163 = v1566;
            v1161[4] = v1567;
            v1161[5] = v1163;
            uint64_t v1164 = v1551;
            v1161[6] = v1551;
            v1161[7] = v1147;
            uint64_t v1165 = v1570;
            v1161[8] = v1553;
            v1161[9] = v1165;
            v1166 = v1562;
            v1161[10] = v1560;
            v1161[11] = v1166;
            v1167 = v1556;
            v1161[12] = v1568;
            v1161[13] = v1167;
            v1161[14] = v1552;
            v1161[15] = v1152;
            v1168 = v1557;
            v1161[16] = v1555;
            v1161[17] = v1168;
            v1161[18] = v1558;
            v1161[19] = v1155;
            v1169 = v1563;
            uint64_t v1170 = v1561;
            v1161[20] = v1563;
            v1161[21] = v1170;
            uint64_t v1171 = v1564;
            v1161[22] = v1564;
            v1161[23] = v1158;
            v1172 = v1504;
            uint64_t v1173 = v1165;
            sub_24EC21E60();
            swift_release();
            ((void (*)(char *, uint64_t))v1523)(v1172, v1160);
            v1174 = v1172;
            uint64_t v1175 = v1548;
            v1517(v1174, v1548, v1160);
            v1176 = v1474;
            v1177 = v1546;
            ((void (*)(char *, uint64_t, void))v1499)(v1474, v1175, v1546);
            v1178 = (void *)swift_allocObject();
            v1179 = v1569;
            v1178[2] = v1571;
            v1178[3] = v1179;
            v1178[4] = v1567;
            v1178[5] = v1163;
            unint64_t v1180 = v1565;
            v1178[6] = v1164;
            v1178[7] = v1180;
            v1178[8] = v1553;
            v1178[9] = v1173;
            v1181 = v1562;
            v1178[10] = v1560;
            v1178[11] = v1181;
            v1182 = v1556;
            v1178[12] = v1568;
            v1178[13] = v1182;
            unint64_t v1183 = v1559;
            v1178[14] = v1552;
            v1178[15] = v1183;
            v1184 = v1557;
            v1178[16] = v1555;
            v1178[17] = v1184;
            v1185 = v1550;
            v1178[18] = v1558;
            v1178[19] = v1185;
            uint64_t v1186 = v1561;
            v1178[20] = v1169;
            v1178[21] = v1186;
            v1187 = (char *)v1178 + v1492;
            v1188 = v1554;
            v1178[22] = v1171;
            v1178[23] = v1188;
            v1487(v1187, v1176, v1177);
            TupleTypeMetadata2 = MEMORY[0x263F8EE60] + 8;
            v1189 = v1495;
            v1190 = v1504;
            uint64_t v1191 = v1501;
            sub_24EC22270();
            swift_release();
            ((void (*)(char *, uint64_t))v1523)(v1190, v1191);
            uint64_t v1192 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699470B8);
            v1193 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v1192 - 8) + 56);
            v1193(v1189, 0, 1, v1192);
            v1193(v1496, 1, 1, v1192);
            uint64_t v1194 = v1548;
            v1517(v1190, v1548, v1191);
            v1195 = v1546;
            ((void (*)(char *, uint64_t, void))v1499)(v1176, v1194, v1546);
            v1196 = (void *)swift_allocObject();
            v1197 = v1569;
            v1196[2] = v1571;
            v1196[3] = v1197;
            v1198 = v1566;
            v1196[4] = v1567;
            v1196[5] = v1198;
            unint64_t v1199 = v1565;
            v1196[6] = v1551;
            v1196[7] = v1199;
            uint64_t v1200 = v1570;
            v1196[8] = v1553;
            v1196[9] = v1200;
            v1201 = v1562;
            v1196[10] = v1560;
            v1196[11] = v1201;
            v1202 = v1556;
            v1196[12] = v1568;
            v1196[13] = v1202;
            unint64_t v1203 = v1559;
            v1196[14] = v1552;
            v1196[15] = v1203;
            v1204 = v1557;
            v1196[16] = v1555;
            v1196[17] = v1204;
            v1205 = v1550;
            v1196[18] = v1558;
            v1196[19] = v1205;
            v1196[20] = v1563;
            v1196[21] = v1186;
            v1206 = (char *)v1196 + v1492;
            v1207 = v1554;
            v1196[22] = v1564;
            v1196[23] = v1207;
            v1487(v1206, v1176, v1195);
            v1208 = v1490;
            v1209 = v1504;
            sub_24EC22270();
            swift_release();
            ((void (*)(char *, uint64_t))v1523)(v1209, v1191);
            uint64_t v1210 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699470C0);
            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v1210 - 8) + 56))(v1208, 0, 1, v1210);
            v1517(v1209, v1548, v1191);
            uint64_t v1211 = (uint64_t)v1429;
            sub_24EC22150();
            uint64_t v1212 = v1529;
            uint64_t v1213 = swift_getWitnessTable();
            v1214 = v1428;
            sub_24EB68678(v1211, v1212, v1213);
            v1215 = *(void (**)(uint64_t, uint64_t))(v1430 + 8);
            v1215(v1211, v1212);
            sub_24EB68678(v1214, v1212, v1213);
            swift_getWitnessTable();
            v1216 = v1449;
            sub_24EB686B4(v1211, v1212);
            v1215(v1211, v1212);
            v1215((uint64_t)v1214, v1212);
            (*(void (**)(char *, uint64_t))(v1461 + 8))(v1460, v1462);
          }
          else
          {
            sub_24EC22060();
            uint64_t v1482 = sub_24EC22040();
            sub_24EC22050();
            sub_24EC22070();
            uint64_t v1217 = sub_24EBA62AC();
            v1523 = &v1428;
            MEMORY[0x270FA5388](v1217);
            swift_getKeyPath();
            sub_24EC229E0();
            swift_release();
            swift_release();
            uint64_t v1218 = sub_24EBA62AC();
            v1523 = &v1428;
            MEMORY[0x270FA5388](v1218);
            swift_getKeyPath();
            sub_24EC229E0();
            swift_release();
            swift_release();
            uint64_t v1219 = sub_24EBA62AC();
            v1523 = &v1428;
            MEMORY[0x270FA5388](v1219);
            swift_getKeyPath();
            sub_24EC229E0();
            swift_release();
            swift_release();
            LODWORD(v1481) = v1759;
            uint64_t v1220 = v1548;
            uint64_t v1221 = sub_24EBA62AC();
            v1523 = &v1428;
            MEMORY[0x270FA5388](v1221);
            v1222 = v1562;
            v1223 = v1554;
            swift_getKeyPath();
            sub_24EC229E0();
            swift_release();
            swift_release();
            (*((void (**)(char *, uint64_t, uint64_t))v1487 + 2))(v1508, v1220 + *((int *)v1546 + 52), v1486);
            v1224 = v1222;
            v1225 = *(char **)(v1545 + 16);
            v1523 = (char **)(v1545 + 16);
            v1500 = v1225;
            v1226 = v1504;
            uint64_t v1227 = v1501;
            ((void (*)(char *, uint64_t, uint64_t))v1225)(v1504, v1220, v1501);
            v1228 = (void *)swift_allocObject();
            v1229 = v1569;
            v1228[2] = v1571;
            v1228[3] = v1229;
            v1230 = v1566;
            v1228[4] = v1567;
            v1228[5] = v1230;
            unint64_t v1231 = v1565;
            v1228[6] = v1551;
            v1228[7] = v1231;
            uint64_t v1232 = v1570;
            v1228[8] = v1553;
            v1228[9] = v1232;
            v1228[10] = v1560;
            v1228[11] = v1224;
            unint64_t v1233 = v1568;
            v1234 = v1556;
            v1228[12] = v1568;
            v1228[13] = v1234;
            unint64_t v1235 = v1559;
            v1228[14] = v1552;
            v1228[15] = v1235;
            v1236 = v1557;
            v1228[16] = v1555;
            v1228[17] = v1236;
            v1237 = v1550;
            v1228[18] = v1558;
            v1228[19] = v1237;
            uint64_t v1238 = v1561;
            v1228[20] = v1563;
            v1228[21] = v1238;
            v1228[22] = v1564;
            v1228[23] = v1223;
            v1503 = (char *)sub_24EBBC538(&qword_26B1D8618, MEMORY[0x263F07508]);
            sub_24EC21E60();
            swift_release();
            v1239 = *(void (**)(void, void))(v1545 + 8);
            v1545 += 8;
            v1517 = (void (*)(char *, uint64_t, uint64_t))v1239;
            v1239(v1226, v1227);
            ((void (*)(char *, uint64_t, uint64_t))v1500)(v1226, v1548, v1227);
            v1240 = (void *)swift_allocObject();
            v1240[2] = v1571;
            v1240[3] = v1229;
            v1241 = v1229;
            v1242 = v1567;
            v1243 = v1566;
            v1240[4] = v1567;
            v1240[5] = v1243;
            v1240[6] = v1551;
            v1240[7] = v1231;
            v1240[8] = v1553;
            v1240[9] = v1232;
            unint64_t v1244 = v1560;
            v1245 = v1562;
            v1240[10] = v1560;
            v1240[11] = v1245;
            v1246 = v1556;
            v1240[12] = v1233;
            v1240[13] = v1246;
            v1240[14] = v1552;
            v1240[15] = v1235;
            unint64_t v1247 = v1555;
            v1248 = v1557;
            v1240[16] = v1555;
            v1240[17] = v1248;
            v1249 = v1550;
            v1240[18] = v1558;
            v1240[19] = v1249;
            v1250 = v1563;
            uint64_t v1251 = v1561;
            v1240[20] = v1563;
            v1240[21] = v1251;
            uint64_t v1252 = v1564;
            v1253 = v1554;
            v1240[22] = v1564;
            v1240[23] = v1253;
            v1254 = v1241;
            uint64_t v1255 = v1501;
            sub_24EC21E60();
            swift_release();
            ((void (*)(char *, uint64_t))v1517)(v1226, v1255);
            v1256 = v1226;
            v1257 = (void (*)(char *, uint64_t, uint64_t))v1500;
            ((void (*)(char *, uint64_t, uint64_t))v1500)(v1256, v1548, v1255);
            v1258 = (void *)swift_allocObject();
            v1258[2] = v1571;
            v1258[3] = v1254;
            v1259 = v1566;
            v1258[4] = v1242;
            v1258[5] = v1259;
            unint64_t v1260 = v1565;
            v1258[6] = v1551;
            v1258[7] = v1260;
            uint64_t v1261 = v1570;
            v1258[8] = v1553;
            v1258[9] = v1261;
            v1258[10] = v1244;
            v1262 = v1562;
            unint64_t v1263 = v1568;
            v1258[11] = v1562;
            v1258[12] = v1263;
            v1264 = v1552;
            v1258[13] = v1556;
            v1258[14] = v1264;
            v1258[15] = v1559;
            v1258[16] = v1247;
            uint64_t v1265 = v1558;
            v1258[17] = v1557;
            v1258[18] = v1265;
            v1258[19] = v1550;
            v1258[20] = v1250;
            v1258[21] = v1561;
            v1258[22] = v1252;
            v1258[23] = v1554;
            v1266 = v1504;
            sub_24EC21E60();
            swift_release();
            ((void (*)(char *, uint64_t))v1517)(v1266, v1255);
            uint64_t v1267 = v1548;
            v1257(v1266, v1548, v1255);
            v1268 = v1493;
            v1498 = (char *)v1493[2];
            v1499 = v1493 + 2;
            v1269 = v1546;
            ((void (*)(char *, uint64_t, void))v1498)(v1474, v1267, v1546);
            uint64_t v1270 = *((unsigned __int8 *)v1268 + 80);
            uint64_t v1271 = (v1270 + 192) & ~v1270;
            v1491 = (char *)(v1271 + v1452);
            uint64_t v1492 = v1271;
            uint64_t v1488 = v1270 | 7;
            v1272 = (void *)swift_allocObject();
            v1273 = v1569;
            v1272[2] = v1571;
            v1272[3] = v1273;
            v1274 = v1566;
            v1272[4] = v1567;
            v1272[5] = v1274;
            uint64_t v1275 = v1551;
            unint64_t v1276 = v1565;
            v1272[6] = v1551;
            v1272[7] = v1276;
            uint64_t v1277 = v1570;
            v1272[8] = v1553;
            v1272[9] = v1277;
            v1272[10] = v1560;
            v1272[11] = v1262;
            v1278 = v1556;
            v1272[12] = v1263;
            v1272[13] = v1278;
            unint64_t v1279 = v1559;
            v1272[14] = v1552;
            v1272[15] = v1279;
            v1280 = v1557;
            v1272[16] = v1555;
            v1272[17] = v1280;
            uint64_t v1281 = v1558;
            v1282 = v1550;
            v1272[18] = v1558;
            v1272[19] = v1282;
            uint64_t v1283 = v1561;
            v1272[20] = v1563;
            v1272[21] = v1283;
            v1284 = v1554;
            v1272[22] = v1564;
            v1272[23] = v1284;
            v1285 = (void (**)(char *, void, uint64_t))v1493[4];
            v1493 += 4;
            v1487 = (void (*)(char *, char *, void *))v1285;
            ((void (*)(char *, char *, void))v1285)((char *)v1272 + v1271, v1474, v1269);
            uint64_t v1286 = v1501;
            v1287 = v1280;
            sub_24EC221F0();
            swift_release();
            v1288 = v1266;
            ((void (*)(char *, uint64_t))v1517)(v1266, v1286);
            ((void (*)(char *, uint64_t, uint64_t))v1500)(v1266, v1548, v1286);
            v1289 = (void *)swift_allocObject();
            v1290 = v1569;
            v1289[2] = v1571;
            v1289[3] = v1290;
            v1289[4] = v1567;
            v1289[5] = v1274;
            v1289[6] = v1275;
            unint64_t v1291 = v1565;
            uint64_t v1292 = v1553;
            v1289[7] = v1565;
            v1289[8] = v1292;
            unint64_t v1293 = v1560;
            v1289[9] = v1570;
            v1289[10] = v1293;
            v1294 = v1562;
            unint64_t v1295 = v1568;
            v1289[11] = v1562;
            v1289[12] = v1295;
            v1296 = v1552;
            v1289[13] = v1278;
            v1289[14] = v1296;
            unint64_t v1297 = v1559;
            unint64_t v1298 = v1555;
            v1289[15] = v1559;
            v1289[16] = v1298;
            v1289[17] = v1287;
            v1289[18] = v1281;
            v1299 = v1563;
            v1289[19] = v1550;
            v1289[20] = v1299;
            uint64_t v1300 = v1561;
            uint64_t v1301 = v1564;
            v1289[21] = v1561;
            v1289[22] = v1301;
            v1302 = v1554;
            v1289[23] = v1554;
            uint64_t v1303 = v1501;
            sub_24EC21E60();
            swift_release();
            ((void (*)(char *, uint64_t))v1517)(v1288, v1303);
            v1304 = v1288;
            v1305 = (void (*)(char *, uint64_t, uint64_t))v1500;
            ((void (*)(char *, uint64_t, uint64_t))v1500)(v1304, v1548, v1303);
            v1306 = (void *)swift_allocObject();
            v1306[2] = v1571;
            v1306[3] = v1290;
            v1307 = v1566;
            v1306[4] = v1567;
            v1306[5] = v1307;
            v1306[6] = v1551;
            v1306[7] = v1291;
            uint64_t v1308 = v1570;
            v1306[8] = v1553;
            v1306[9] = v1308;
            unint64_t v1309 = v1560;
            v1306[10] = v1560;
            v1306[11] = v1294;
            v1310 = v1556;
            v1306[12] = v1568;
            v1306[13] = v1310;
            v1306[14] = v1552;
            v1306[15] = v1297;
            v1311 = v1557;
            v1306[16] = v1555;
            v1306[17] = v1311;
            v1312 = v1550;
            v1306[18] = v1558;
            v1306[19] = v1312;
            v1313 = v1563;
            v1306[20] = v1563;
            v1306[21] = v1300;
            uint64_t v1314 = v1564;
            v1306[22] = v1564;
            v1306[23] = v1302;
            v1315 = v1504;
            uint64_t v1316 = v1501;
            sub_24EC21E60();
            swift_release();
            ((void (*)(char *, uint64_t))v1517)(v1315, v1316);
            v1317 = v1315;
            uint64_t v1318 = v1548;
            v1305(v1317, v1548, v1316);
            v1319 = v1474;
            v1320 = v1546;
            ((void (*)(char *, uint64_t, void))v1498)(v1474, v1318, v1546);
            v1321 = (void *)swift_allocObject();
            v1322 = v1569;
            v1321[2] = v1571;
            v1321[3] = v1322;
            v1323 = v1566;
            v1321[4] = v1567;
            v1321[5] = v1323;
            unint64_t v1324 = v1565;
            v1321[6] = v1551;
            v1321[7] = v1324;
            uint64_t v1325 = v1570;
            v1321[8] = v1553;
            v1321[9] = v1325;
            v1326 = v1562;
            v1321[10] = v1309;
            v1321[11] = v1326;
            v1327 = v1556;
            v1321[12] = v1568;
            v1321[13] = v1327;
            unint64_t v1328 = v1559;
            v1321[14] = v1552;
            v1321[15] = v1328;
            v1329 = v1557;
            v1321[16] = v1555;
            v1321[17] = v1329;
            v1330 = v1550;
            v1321[18] = v1558;
            v1321[19] = v1330;
            uint64_t v1331 = v1561;
            v1321[20] = v1313;
            v1321[21] = v1331;
            v1332 = (char *)v1321 + v1492;
            v1333 = v1554;
            v1321[22] = v1314;
            v1321[23] = v1333;
            v1487(v1332, v1319, v1320);
            TupleTypeMetadata2 = MEMORY[0x263F8EE60] + 8;
            v1334 = v1495;
            v1335 = v1504;
            uint64_t v1336 = v1501;
            sub_24EC22270();
            swift_release();
            ((void (*)(char *, uint64_t))v1517)(v1335, v1336);
            uint64_t v1337 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699470B8);
            v1338 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v1337 - 8) + 56);
            v1338(v1334, 0, 1, v1337);
            v1338(v1496, 1, 1, v1337);
            ((void (*)(char *, uint64_t, uint64_t))v1500)(v1335, v1318, v1336);
            v1339 = v1474;
            v1340 = v1546;
            ((void (*)(char *, uint64_t, void))v1498)(v1474, v1318, v1546);
            v1341 = (void *)swift_allocObject();
            v1342 = v1569;
            v1341[2] = v1571;
            v1341[3] = v1342;
            v1343 = v1566;
            v1341[4] = v1567;
            v1341[5] = v1343;
            unint64_t v1344 = v1565;
            v1341[6] = v1551;
            v1341[7] = v1344;
            uint64_t v1345 = v1570;
            v1341[8] = v1553;
            v1341[9] = v1345;
            v1346 = v1562;
            v1341[10] = v1560;
            v1341[11] = v1346;
            v1347 = v1556;
            v1341[12] = v1568;
            v1341[13] = v1347;
            unint64_t v1348 = v1559;
            v1341[14] = v1552;
            v1341[15] = v1348;
            v1349 = v1557;
            v1341[16] = v1555;
            v1341[17] = v1349;
            v1350 = v1550;
            v1341[18] = v1558;
            v1341[19] = v1350;
            uint64_t v1351 = v1561;
            v1341[20] = v1563;
            v1341[21] = v1351;
            v1352 = (char *)v1341 + v1492;
            v1353 = v1554;
            v1341[22] = v1564;
            v1341[23] = v1353;
            v1487(v1352, v1339, v1340);
            v1354 = v1490;
            sub_24EC22270();
            swift_release();
            ((void (*)(char *, uint64_t))v1517)(v1335, v1336);
            uint64_t v1355 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699470C0);
            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v1355 - 8) + 56))(v1354, 0, 1, v1355);
            ((void (*)(char *, uint64_t, uint64_t))v1500)(v1335, v1548, v1336);
            uint64_t v1356 = (uint64_t)v1432;
            sub_24EC22130();
            uint64_t v1357 = v1543;
            uint64_t v1358 = swift_getWitnessTable();
            v1359 = v1431;
            sub_24EB68678(v1356, v1357, v1358);
            v1360 = *(void (**)(uint64_t, uint64_t))(v1433 + 8);
            v1360(v1356, v1357);
            sub_24EB68678(v1359, v1357, v1358);
            uint64_t v1361 = v1529;
            swift_getWitnessTable();
            v1216 = v1449;
            sub_24EB687AC(v1356, v1361, v1357);
            v1360(v1356, v1357);
            v1360((uint64_t)v1359, v1357);
            (*(void (**)(char *, uint64_t))(v1519 + 8))(v1485, v1494);
          }
          uint64_t v1362 = swift_getWitnessTable();
          uint64_t v1363 = swift_getWitnessTable();
          uint64_t v1679 = v1362;
          uint64_t v1680 = v1363;
          uint64_t v1364 = v1532;
          uint64_t v1365 = swift_getWitnessTable();
          uint64_t v1366 = (uint64_t)v1435;
          sub_24EB68678(v1216, v1364, v1365);
          uint64_t v1367 = (uint64_t)v1445;
          sub_24EB687AC(v1366, MEMORY[0x263F1BA08], v1364);
          v1571 = *(void (**)(void, void))(v1436 + 8);
          v1571(v1366, v1364);
          uint64_t v1677 = MEMORY[0x263F1BA00];
          uint64_t v1678 = v1365;
          uint64_t v1368 = v1530;
          uint64_t v1369 = swift_getWitnessTable();
          uint64_t v1370 = swift_getWitnessTable();
          uint64_t v1371 = swift_getWitnessTable();
          uint64_t v1675 = v1370;
          uint64_t v1676 = v1371;
          uint64_t v1372 = swift_getWitnessTable();
          uint64_t v1373 = (uint64_t)v1458;
          sub_24EB686B4(v1367, v1368);
          (*(void (**)(uint64_t, uint64_t))(v1446 + 8))(v1367, v1368);
          uint64_t v1673 = v1369;
          uint64_t v1674 = v1372;
          uint64_t v1374 = v1531;
          swift_getWitnessTable();
          sub_24EB686B4(v1373, v1374);
          (*(void (**)(uint64_t, uint64_t))(v1459 + 8))(v1373, v1374);
          v1571(v1449, v1364);
          uint64_t v277 = MEMORY[0x263F1BA00];
          (*(void (**)(char *, uint64_t))(v1519 + 8))(v1465, v1494);
          break;
        case 4:
          uint64_t v895 = swift_getWitnessTable();
          uint64_t v896 = swift_getWitnessTable();
          uint64_t v1757 = v895;
          uint64_t v1758 = v896;
          uint64_t v897 = swift_getWitnessTable();
          uint64_t v898 = MEMORY[0x263F1BA00];
          uint64_t v1755 = MEMORY[0x263F1BA00];
          uint64_t v1756 = v897;
          v899 = v260;
          uint64_t v900 = swift_getWitnessTable();
          uint64_t v901 = swift_getWitnessTable();
          uint64_t v902 = swift_getWitnessTable();
          uint64_t v1753 = v901;
          uint64_t v1754 = v902;
          uint64_t v903 = swift_getWitnessTable();
          uint64_t v1751 = v900;
          uint64_t v277 = v898;
          uint64_t v1752 = v903;
          uint64_t v904 = v1531;
          uint64_t v905 = swift_getWitnessTable();
          sub_24EB687AC(v905, v904, MEMORY[0x263F1BA08]);
          (*(void (**)(char *, unint64_t))(*(void *)(v244 - 8) + 8))(v899, v244);
          break;
        default:
          uint64_t v265 = swift_getWitnessTable();
          uint64_t v266 = swift_getWitnessTable();
          uint64_t v1671 = v265;
          uint64_t v1672 = v266;
          uint64_t v267 = swift_getWitnessTable();
          uint64_t v268 = (uint64_t)v1445;
          uint64_t v269 = MEMORY[0x263F1BA00];
          sub_24EB686B4(v267, MEMORY[0x263F1BA08]);
          uint64_t v1669 = v269;
          uint64_t v1670 = v267;
          uint64_t v270 = v1530;
          uint64_t v271 = swift_getWitnessTable();
          uint64_t v272 = swift_getWitnessTable();
          uint64_t v273 = swift_getWitnessTable();
          uint64_t v1667 = v272;
          uint64_t v1668 = v273;
          uint64_t v274 = swift_getWitnessTable();
          uint64_t v275 = (uint64_t)v1458;
          sub_24EB686B4(v268, v270);
          (*(void (**)(uint64_t, uint64_t))(v1446 + 8))(v268, v270);
          uint64_t v1665 = v271;
          uint64_t v1666 = v274;
          uint64_t v276 = v1531;
          swift_getWitnessTable();
          uint64_t v277 = v269;
          sub_24EB686B4(v275, v276);
          (*(void (**)(uint64_t, uint64_t))(v1459 + 8))(v275, v276);
          break;
      }
      uint64_t v257 = (uint64_t)v1477;
      uint64_t v1375 = swift_getWitnessTable();
      uint64_t v1376 = swift_getWitnessTable();
      uint64_t v1749 = v1375;
      uint64_t v1750 = v1376;
      uint64_t v1377 = swift_getWitnessTable();
      uint64_t v1747 = v277;
      uint64_t v1748 = v1377;
      uint64_t v1378 = v277;
      uint64_t v1379 = swift_getWitnessTable();
      uint64_t v1380 = swift_getWitnessTable();
      uint64_t v1381 = swift_getWitnessTable();
      uint64_t v1745 = v1380;
      uint64_t v1746 = v1381;
      uint64_t v1382 = swift_getWitnessTable();
      uint64_t v1743 = v1379;
      uint64_t v1744 = v1382;
      uint64_t v1741 = swift_getWitnessTable();
      uint64_t v1742 = v1378;
      uint64_t v1383 = v1533;
      uint64_t v1384 = swift_getWitnessTable();
      v1385 = v1476;
      sub_24EB68678(v1476, v1383, v1384);
      uint64_t v1386 = v1483;
      (*(void (**)(char *, uint64_t))(v1483 + 8))(v1385, v1383);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v1386 + 56))(v257, 0, 1, v1383);
      uint64_t v1387 = v1484;
      uint64_t v1388 = v1541;
      (*(void (**)(char *, uint64_t, uint64_t))(v1484 + 16))(v1520, v257, v1541);
      v1389 = *(void (**)(void, void))(v1387 + 8);
      uint64_t v237 = v1378;
      uint64_t v1570 = (v1387 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v1571 = v1389;
      v1389(v257, v1388);
    }
    uint64_t v1390 = swift_getWitnessTable();
    uint64_t v1391 = swift_getWitnessTable();
    uint64_t v1739 = v1390;
    uint64_t v1740 = v1391;
    uint64_t v1392 = swift_getWitnessTable();
    uint64_t v1737 = v237;
    uint64_t v1738 = v1392;
    uint64_t v1393 = swift_getWitnessTable();
    uint64_t v1394 = swift_getWitnessTable();
    uint64_t v1395 = swift_getWitnessTable();
    uint64_t v1735 = v1394;
    uint64_t v1736 = v1395;
    uint64_t v1396 = swift_getWitnessTable();
    uint64_t v1733 = v1393;
    uint64_t v1734 = v1396;
    uint64_t v1731 = swift_getWitnessTable();
    uint64_t v1732 = v237;
    uint64_t v1730 = swift_getWitnessTable();
    uint64_t v1397 = v1541;
    uint64_t v1398 = swift_getWitnessTable();
    sub_24EB68678(v1520, v1397, v1398);
    uint64_t v1399 = swift_getWitnessTable();
    uint64_t v1400 = swift_getWitnessTable();
    uint64_t v1728 = v1399;
    uint64_t v1729 = v1400;
    uint64_t v1401 = swift_getWitnessTable();
    uint64_t v1726 = v237;
    uint64_t v1727 = v1401;
    uint64_t v1402 = swift_getWitnessTable();
    uint64_t v1403 = swift_getWitnessTable();
    uint64_t v1404 = swift_getWitnessTable();
    uint64_t v1724 = v1403;
    uint64_t v1725 = v1404;
    uint64_t v1405 = swift_getWitnessTable();
    uint64_t v1722 = v1402;
    uint64_t v1723 = v1405;
    uint64_t v1720 = swift_getWitnessTable();
    uint64_t v1721 = v237;
    uint64_t v1406 = v1516;
    swift_getWitnessTable();
    sub_24EB687AC(v257, v1406, v1397);
    v1407 = (void (*)(char *, uint64_t))v1571;
    v1571(v257, v1397);
    v1407(v1520, v1397);
    (*(void (**)(char *, char **))(v1521 + 8))(v1502, v1522);
  }
  uint64_t v1408 = swift_getWitnessTable();
  uint64_t v1409 = swift_getWitnessTable();
  uint64_t v1718 = v1408;
  uint64_t v1719 = v1409;
  uint64_t v1410 = swift_getWitnessTable();
  uint64_t v1716 = v237;
  uint64_t v1717 = v1410;
  uint64_t v1411 = swift_getWitnessTable();
  uint64_t v1412 = swift_getWitnessTable();
  uint64_t v1413 = swift_getWitnessTable();
  uint64_t v1714 = v1412;
  uint64_t v1715 = v1413;
  uint64_t v1414 = swift_getWitnessTable();
  uint64_t v1712 = v1411;
  uint64_t v1713 = v1414;
  uint64_t v1710 = swift_getWitnessTable();
  uint64_t v1711 = v237;
  uint64_t v1415 = swift_getWitnessTable();
  uint64_t v1416 = swift_getWitnessTable();
  uint64_t v1417 = swift_getWitnessTable();
  uint64_t v1708 = v1416;
  uint64_t v1709 = v1417;
  uint64_t v1418 = swift_getWitnessTable();
  uint64_t v1706 = v237;
  uint64_t v1707 = v1418;
  uint64_t v1419 = swift_getWitnessTable();
  uint64_t v1420 = swift_getWitnessTable();
  uint64_t v1421 = swift_getWitnessTable();
  uint64_t v1704 = v1420;
  uint64_t v1705 = v1421;
  uint64_t v1422 = swift_getWitnessTable();
  uint64_t v1702 = v1419;
  uint64_t v1703 = v1422;
  uint64_t v1700 = swift_getWitnessTable();
  uint64_t v1701 = v237;
  uint64_t v1699 = swift_getWitnessTable();
  uint64_t v1423 = swift_getWitnessTable();
  uint64_t v1697 = v1415;
  uint64_t v1698 = v1423;
  unint64_t v1424 = v1526;
  uint64_t v1425 = swift_getWitnessTable();
  v1426 = v1527;
  sub_24EB68678(v1527, v1424, v1425);
  return (*(uint64_t (**)(char *, unint64_t))(v1525 + 8))(v1426, v1424);
}

uint64_t sub_24EBB6E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[65] = v35;
  v8[63] = v33;
  v8[64] = v34;
  v8[61] = v31;
  v8[62] = v32;
  v8[59] = v29;
  v8[60] = v30;
  v8[57] = v27;
  v8[58] = v28;
  v8[55] = v25;
  v8[56] = v26;
  v8[53] = v23;
  v8[54] = v24;
  v8[51] = v21;
  v8[52] = v22;
  v8[49] = v19;
  v8[50] = v20;
  v8[47] = v17;
  v8[48] = v18;
  v8[45] = a7;
  v8[46] = a8;
  v8[43] = a5;
  v8[44] = a6;
  v8[42] = a4;
  unint64_t v11 = sub_24EBA93F4();
  unint64_t v12 = sub_24EBA9448();
  unint64_t v13 = sub_24EBA949C();
  v8[24] = a6;
  v8[25] = a7;
  v8[26] = v17;
  v8[27] = &type metadata for NewAndFeaturedItemContext;
  v8[28] = v19;
  v8[29] = v21;
  v8[30] = v22;
  v8[31] = v24;
  v8[32] = v25;
  v8[33] = v26;
  v8[34] = v28;
  v8[35] = v11;
  v8[36] = v12;
  v8[37] = v13;
  v8[38] = v30;
  v8[39] = v32;
  v8[40] = v33;
  v8[41] = v35;
  uint64_t v14 = type metadata accessor for NewAndFeaturedAction();
  v8[66] = v14;
  v8[67] = *(void *)(v14 - 8);
  v8[68] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24EBB7000, 0, 0);
}

uint64_t sub_24EBB7000()
{
  *(void *)(v0 + 552) = sub_24EC22B80();
  *(void *)(v0 + 560) = sub_24EC22B70();
  uint64_t v2 = sub_24EC22B50();
  return MEMORY[0x270FA2498](sub_24EBB7098, v2, v1);
}

uint64_t sub_24EBB7098()
{
  long long v11 = *(_OWORD *)(v0 + 368);
  long long v12 = *(_OWORD *)(v0 + 352);
  long long v9 = *(_OWORD *)(v0 + 400);
  long long v10 = *(_OWORD *)(v0 + 384);
  long long v7 = *(_OWORD *)(v0 + 432);
  long long v8 = *(_OWORD *)(v0 + 416);
  long long v5 = *(_OWORD *)(v0 + 464);
  long long v6 = *(_OWORD *)(v0 + 448);
  long long v3 = *(_OWORD *)(v0 + 496);
  long long v4 = *(_OWORD *)(v0 + 480);
  long long v2 = *(_OWORD *)(v0 + 512);
  swift_release();
  *(_OWORD *)(v0 + 16) = v12;
  *(_OWORD *)(v0 + 32) = v11;
  *(_OWORD *)(v0 + 48) = v10;
  *(_OWORD *)(v0 + 64) = v9;
  *(_OWORD *)(v0 + 80) = v8;
  *(_OWORD *)(v0 + 96) = v7;
  *(_OWORD *)(v0 + 112) = v6;
  *(_OWORD *)(v0 + 128) = v5;
  *(_OWORD *)(v0 + 144) = v4;
  *(_OWORD *)(v0 + 160) = v3;
  *(_OWORD *)(v0 + 176) = v2;
  type metadata accessor for NewAndFeaturedView();
  *(void *)(v0 + 568) = sub_24EBA62AC();
  return MEMORY[0x270FA2498](sub_24EBB71A0, 0, 0);
}

uint64_t sub_24EBB71A0()
{
  **(void **)(v0 + 544) = *(void *)(v0 + 344);
  swift_storeEnumTagMultiPayload();
  *(void *)(v0 + 576) = sub_24EC22B70();
  uint64_t v2 = sub_24EC22B50();
  return MEMORY[0x270FA2498](sub_24EBB7244, v2, v1);
}

uint64_t sub_24EBB7244()
{
  uint64_t v1 = v0[68];
  uint64_t v2 = v0[67];
  uint64_t v3 = v0[66];
  swift_release();
  sub_24EC229F0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_24EBB72EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EC22BC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_24EC22BB0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_24EB742F4(a1, &qword_2699470E8);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24EC22B50();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_24EBB7498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  *(void *)(v8 + 528) = v36;
  *(void *)(v8 + 520) = v35;
  *(void *)(v8 + 504) = v33;
  *(void *)(v8 + 512) = v34;
  *(void *)(v8 + 488) = v31;
  *(void *)(v8 + 496) = v32;
  *(void *)(v8 + 472) = v29;
  *(void *)(v8 + 480) = v30;
  *(void *)(v8 + 456) = v27;
  *(void *)(v8 + 464) = v28;
  *(void *)(v8 + 440) = v25;
  *(void *)(v8 + 448) = v26;
  *(void *)(v8 + 424) = v23;
  *(void *)(v8 + 432) = v24;
  *(void *)(v8 + 408) = v21;
  *(void *)(v8 + 416) = v22;
  *(void *)(v8 + 392) = v19;
  *(void *)(v8 + 400) = v20;
  *(void *)(v8 + 376) = v17;
  *(void *)(v8 + 384) = v18;
  *(void *)(v8 + 360) = a8;
  *(void *)(v8 + 368) = v16;
  *(unsigned char *)(v8 + 592) = a7;
  *(void *)(v8 + 344) = a5;
  *(void *)(v8 + 352) = a6;
  *(void *)(v8 + 336) = a4;
  unint64_t v10 = sub_24EBA93F4();
  unint64_t v11 = sub_24EBA9448();
  unint64_t v12 = sub_24EBA949C();
  *(void *)(v8 + 192) = a8;
  *(void *)(v8 + 200) = v16;
  *(void *)(v8 + 208) = v18;
  *(void *)(v8 + 216) = &type metadata for NewAndFeaturedItemContext;
  *(void *)(v8 + 224) = v20;
  *(void *)(v8 + 232) = v22;
  *(void *)(v8 + 240) = v23;
  *(void *)(v8 + 248) = v25;
  *(void *)(v8 + 256) = v26;
  *(void *)(v8 + 264) = v27;
  *(void *)(v8 + 272) = v29;
  *(void *)(v8 + 280) = v10;
  *(void *)(v8 + 288) = v11;
  *(void *)(v8 + 296) = v12;
  *(void *)(v8 + 304) = v31;
  *(void *)(v8 + 312) = v33;
  *(void *)(v8 + 320) = v34;
  *(void *)(v8 + 328) = v36;
  uint64_t v13 = type metadata accessor for NewAndFeaturedAction();
  *(void *)(v8 + 536) = v13;
  *(void *)(v8 + 544) = *(void *)(v13 - 8);
  *(void *)(v8 + 552) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24EBB7678, 0, 0);
}

uint64_t sub_24EBB7678()
{
  *(void *)(v0 + 560) = sub_24EC22B80();
  *(void *)(v0 + 568) = sub_24EC22B70();
  uint64_t v2 = sub_24EC22B50();
  return MEMORY[0x270FA2498](sub_24EBB7710, v2, v1);
}

uint64_t sub_24EBB7710()
{
  long long v11 = *(_OWORD *)(v0 + 376);
  long long v12 = *(_OWORD *)(v0 + 360);
  long long v9 = *(_OWORD *)(v0 + 408);
  long long v10 = *(_OWORD *)(v0 + 392);
  long long v7 = *(_OWORD *)(v0 + 440);
  long long v8 = *(_OWORD *)(v0 + 424);
  long long v5 = *(_OWORD *)(v0 + 472);
  long long v6 = *(_OWORD *)(v0 + 456);
  long long v3 = *(_OWORD *)(v0 + 504);
  long long v4 = *(_OWORD *)(v0 + 488);
  long long v2 = *(_OWORD *)(v0 + 520);
  swift_release();
  *(_OWORD *)(v0 + 16) = v12;
  *(_OWORD *)(v0 + 32) = v11;
  *(_OWORD *)(v0 + 48) = v10;
  *(_OWORD *)(v0 + 64) = v9;
  *(_OWORD *)(v0 + 80) = v8;
  *(_OWORD *)(v0 + 96) = v7;
  *(_OWORD *)(v0 + 112) = v6;
  *(_OWORD *)(v0 + 128) = v5;
  *(_OWORD *)(v0 + 144) = v4;
  *(_OWORD *)(v0 + 160) = v3;
  *(_OWORD *)(v0 + 176) = v2;
  type metadata accessor for NewAndFeaturedView();
  *(void *)(v0 + 576) = sub_24EBA62AC();
  return MEMORY[0x270FA2498](sub_24EBB781C, 0, 0);
}

uint64_t sub_24EBB781C()
{
  uint64_t v1 = *(void *)(v0 + 552);
  char v2 = *(unsigned char *)(v0 + 592);
  uint64_t v3 = *(void *)(v0 + 352);
  *(void *)uint64_t v1 = *(void *)(v0 + 344);
  *(void *)(v1 + 8) = v3;
  *(unsigned char *)(v1 + 16) = v2 & 1;
  swift_storeEnumTagMultiPayload();
  sub_24EBBC8CC();
  *(void *)(v0 + 584) = sub_24EC22B70();
  uint64_t v5 = sub_24EC22B50();
  return MEMORY[0x270FA2498](sub_24EBB78E4, v5, v4);
}

uint64_t sub_24EBB78E4()
{
  uint64_t v1 = v0[69];
  uint64_t v2 = v0[68];
  uint64_t v3 = v0[67];
  swift_release();
  sub_24EC229F0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_24EBB798C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[65] = v35;
  v8[63] = v33;
  v8[64] = v34;
  v8[61] = v31;
  v8[62] = v32;
  v8[59] = v29;
  v8[60] = v30;
  v8[57] = v27;
  v8[58] = v28;
  v8[55] = v25;
  v8[56] = v26;
  v8[53] = v23;
  v8[54] = v24;
  v8[51] = v21;
  v8[52] = v22;
  v8[49] = v19;
  v8[50] = v20;
  v8[47] = v17;
  v8[48] = v18;
  v8[45] = a7;
  v8[46] = a8;
  v8[43] = a5;
  v8[44] = a6;
  v8[42] = a4;
  unint64_t v11 = sub_24EBA93F4();
  unint64_t v12 = sub_24EBA9448();
  unint64_t v13 = sub_24EBA949C();
  v8[24] = a6;
  v8[25] = a7;
  v8[26] = v17;
  v8[27] = &type metadata for NewAndFeaturedItemContext;
  v8[28] = v19;
  v8[29] = v21;
  v8[30] = v22;
  v8[31] = v24;
  v8[32] = v25;
  v8[33] = v26;
  v8[34] = v28;
  v8[35] = v11;
  v8[36] = v12;
  v8[37] = v13;
  v8[38] = v30;
  v8[39] = v32;
  v8[40] = v33;
  v8[41] = v35;
  uint64_t v14 = type metadata accessor for NewAndFeaturedAction();
  v8[66] = v14;
  v8[67] = *(void *)(v14 - 8);
  v8[68] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24EBB7B58, 0, 0);
}

uint64_t sub_24EBB7B58()
{
  *(void *)(v0 + 552) = sub_24EC22B80();
  *(void *)(v0 + 560) = sub_24EC22B70();
  uint64_t v2 = sub_24EC22B50();
  return MEMORY[0x270FA2498](sub_24EBB7BF0, v2, v1);
}

uint64_t sub_24EBB7BF0()
{
  long long v11 = *(_OWORD *)(v0 + 368);
  long long v12 = *(_OWORD *)(v0 + 352);
  long long v9 = *(_OWORD *)(v0 + 400);
  long long v10 = *(_OWORD *)(v0 + 384);
  long long v7 = *(_OWORD *)(v0 + 432);
  long long v8 = *(_OWORD *)(v0 + 416);
  long long v5 = *(_OWORD *)(v0 + 464);
  long long v6 = *(_OWORD *)(v0 + 448);
  long long v3 = *(_OWORD *)(v0 + 496);
  long long v4 = *(_OWORD *)(v0 + 480);
  long long v2 = *(_OWORD *)(v0 + 512);
  swift_release();
  *(_OWORD *)(v0 + 16) = v12;
  *(_OWORD *)(v0 + 32) = v11;
  *(_OWORD *)(v0 + 48) = v10;
  *(_OWORD *)(v0 + 64) = v9;
  *(_OWORD *)(v0 + 80) = v8;
  *(_OWORD *)(v0 + 96) = v7;
  *(_OWORD *)(v0 + 112) = v6;
  *(_OWORD *)(v0 + 128) = v5;
  *(_OWORD *)(v0 + 144) = v4;
  *(_OWORD *)(v0 + 160) = v3;
  *(_OWORD *)(v0 + 176) = v2;
  type metadata accessor for NewAndFeaturedView();
  *(void *)(v0 + 568) = sub_24EBA62AC();
  return MEMORY[0x270FA2498](sub_24EBB7CF8, 0, 0);
}

uint64_t sub_24EBB7CF8()
{
  **(void **)(v0 + 544) = *(void *)(v0 + 344);
  swift_storeEnumTagMultiPayload();
  *(void *)(v0 + 576) = sub_24EC22B70();
  uint64_t v2 = sub_24EC22B50();
  return MEMORY[0x270FA2498](sub_24EBBE064, v2, v1);
}

uint64_t sub_24EBB7D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  *(void *)(v8 + 528) = v36;
  *(void *)(v8 + 520) = v35;
  *(void *)(v8 + 504) = v33;
  *(void *)(v8 + 512) = v34;
  *(void *)(v8 + 488) = v31;
  *(void *)(v8 + 496) = v32;
  *(void *)(v8 + 472) = v29;
  *(void *)(v8 + 480) = v30;
  *(void *)(v8 + 456) = v27;
  *(void *)(v8 + 464) = v28;
  *(void *)(v8 + 440) = v25;
  *(void *)(v8 + 448) = v26;
  *(void *)(v8 + 424) = v23;
  *(void *)(v8 + 432) = v24;
  *(void *)(v8 + 408) = v21;
  *(void *)(v8 + 416) = v22;
  *(void *)(v8 + 392) = v19;
  *(void *)(v8 + 400) = v20;
  *(void *)(v8 + 376) = v17;
  *(void *)(v8 + 384) = v18;
  *(void *)(v8 + 360) = a8;
  *(void *)(v8 + 368) = v16;
  *(unsigned char *)(v8 + 592) = a7;
  *(void *)(v8 + 344) = a5;
  *(void *)(v8 + 352) = a6;
  *(void *)(v8 + 336) = a4;
  unint64_t v10 = sub_24EBA93F4();
  unint64_t v11 = sub_24EBA9448();
  unint64_t v12 = sub_24EBA949C();
  *(void *)(v8 + 192) = a8;
  *(void *)(v8 + 200) = v16;
  *(void *)(v8 + 208) = v18;
  *(void *)(v8 + 216) = &type metadata for NewAndFeaturedItemContext;
  *(void *)(v8 + 224) = v20;
  *(void *)(v8 + 232) = v22;
  *(void *)(v8 + 240) = v23;
  *(void *)(v8 + 248) = v25;
  *(void *)(v8 + 256) = v26;
  *(void *)(v8 + 264) = v27;
  *(void *)(v8 + 272) = v29;
  *(void *)(v8 + 280) = v10;
  *(void *)(v8 + 288) = v11;
  *(void *)(v8 + 296) = v12;
  *(void *)(v8 + 304) = v31;
  *(void *)(v8 + 312) = v33;
  *(void *)(v8 + 320) = v34;
  *(void *)(v8 + 328) = v36;
  uint64_t v13 = type metadata accessor for NewAndFeaturedAction();
  *(void *)(v8 + 536) = v13;
  *(void *)(v8 + 544) = *(void *)(v13 - 8);
  *(void *)(v8 + 552) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24EBB7F7C, 0, 0);
}

uint64_t sub_24EBB7F7C()
{
  *(void *)(v0 + 560) = sub_24EC22B80();
  *(void *)(v0 + 568) = sub_24EC22B70();
  uint64_t v2 = sub_24EC22B50();
  return MEMORY[0x270FA2498](sub_24EBB8014, v2, v1);
}

uint64_t sub_24EBB8014()
{
  long long v11 = *(_OWORD *)(v0 + 376);
  long long v12 = *(_OWORD *)(v0 + 360);
  long long v9 = *(_OWORD *)(v0 + 408);
  long long v10 = *(_OWORD *)(v0 + 392);
  long long v7 = *(_OWORD *)(v0 + 440);
  long long v8 = *(_OWORD *)(v0 + 424);
  long long v5 = *(_OWORD *)(v0 + 472);
  long long v6 = *(_OWORD *)(v0 + 456);
  long long v3 = *(_OWORD *)(v0 + 504);
  long long v4 = *(_OWORD *)(v0 + 488);
  long long v2 = *(_OWORD *)(v0 + 520);
  swift_release();
  *(_OWORD *)(v0 + 16) = v12;
  *(_OWORD *)(v0 + 32) = v11;
  *(_OWORD *)(v0 + 48) = v10;
  *(_OWORD *)(v0 + 64) = v9;
  *(_OWORD *)(v0 + 80) = v8;
  *(_OWORD *)(v0 + 96) = v7;
  *(_OWORD *)(v0 + 112) = v6;
  *(_OWORD *)(v0 + 128) = v5;
  *(_OWORD *)(v0 + 144) = v4;
  *(_OWORD *)(v0 + 160) = v3;
  *(_OWORD *)(v0 + 176) = v2;
  type metadata accessor for NewAndFeaturedView();
  *(void *)(v0 + 576) = sub_24EBA62AC();
  return MEMORY[0x270FA2498](sub_24EBB8120, 0, 0);
}

uint64_t sub_24EBB8120()
{
  uint64_t v1 = *(void *)(v0 + 552);
  char v2 = *(unsigned char *)(v0 + 592);
  uint64_t v3 = *(void *)(v0 + 352);
  *(void *)uint64_t v1 = *(void *)(v0 + 344);
  *(void *)(v1 + 8) = v3;
  *(unsigned char *)(v1 + 16) = v2 & 1;
  swift_storeEnumTagMultiPayload();
  sub_24EBBC8CC();
  *(void *)(v0 + 584) = sub_24EC22B70();
  uint64_t v5 = sub_24EC22B50();
  return MEMORY[0x270FA2498](sub_24EBBE060, v5, v4);
}

uint64_t sub_24EBB81E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v20 = *(void *)(a7 - 8);
  *(double *)&long long v21 = MEMORY[0x270FA5388](a1);
  uint64_t v23 = (char *)v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40[0] = v24;
  v40[1] = v25;
  v40[2] = v26;
  v40[3] = v27;
  v40[4] = v28;
  v40[5] = v29;
  long long v41 = v31;
  long long v42 = v30;
  long long v43 = v33;
  long long v44 = v32;
  uint64_t v45 = v34;
  uint64_t v46 = a18;
  long long v47 = v35;
  long long v48 = v21;
  uint64_t v49 = v37;
  uint64_t v50 = v36;
  type metadata accessor for NewAndFeaturedView();
  sub_24EC22210();
  uint64_t v38 = (void (*)(uint64_t))sub_24EC22200();
  v38(a1);
  swift_release();
  MEMORY[0x253349D00](v23, a7, a18);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v23, a7);
}

uint64_t sub_24EBB8358(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v68 = a8;
  uint64_t v66 = a7;
  uint64_t v64 = a6;
  uint64_t v62 = a5;
  uint64_t v60 = a4;
  uint64_t v58 = a3;
  uint64_t v73 = a26;
  uint64_t v72 = a25;
  uint64_t v71 = a24;
  uint64_t v70 = a23;
  uint64_t v69 = a22;
  uint64_t v67 = a21;
  uint64_t v65 = a20;
  uint64_t v63 = a19;
  uint64_t v61 = a18;
  uint64_t v59 = a17;
  uint64_t v57 = a16;
  uint64_t v56 = a15;
  uint64_t v55 = a14;
  uint64_t v54 = a13;
  uint64_t v53 = a12;
  uint64_t v74 = a3;
  uint64_t v75 = a4;
  uint64_t v76 = a5;
  uint64_t v77 = a6;
  uint64_t v78 = a7;
  uint64_t v79 = a8;
  uint64_t v80 = a9;
  uint64_t v81 = a10;
  uint64_t v82 = a11;
  uint64_t v83 = a12;
  uint64_t v84 = a13;
  uint64_t v85 = a14;
  uint64_t v86 = a15;
  uint64_t v87 = a16;
  uint64_t v88 = a17;
  uint64_t v89 = a18;
  uint64_t v90 = a19;
  uint64_t v91 = a20;
  uint64_t v92 = a21;
  uint64_t v93 = a22;
  uint64_t v94 = a23;
  uint64_t v95 = a24;
  uint64_t v28 = type metadata accessor for NewAndFeaturedView();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(void *)(v29 + 64);
  MEMORY[0x270FA5388](v28);
  long long v32 = (char *)&v51 - v31;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699470E8);
  MEMORY[0x270FA5388](v33 - 8);
  long long v35 = (char *)&v51 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = *a1;
  uint64_t v36 = sub_24EC22BC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 1, 1, v36);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v32, a2, v28);
  unint64_t v37 = (*(unsigned __int8 *)(v29 + 80) + 208) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  unint64_t v38 = (v30 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v39 = (char *)swift_allocObject();
  *((void *)v39 + 2) = 0;
  *((void *)v39 + 3) = 0;
  uint64_t v40 = v60;
  *((void *)v39 + 4) = v58;
  *((void *)v39 + 5) = v40;
  uint64_t v41 = v64;
  *((void *)v39 + 6) = v62;
  *((void *)v39 + 7) = v41;
  uint64_t v42 = v68;
  *((void *)v39 + 8) = v66;
  *((void *)v39 + 9) = v42;
  *((void *)v39 + 10) = a9;
  *((void *)v39 + 11) = a10;
  uint64_t v43 = v53;
  *((void *)v39 + 12) = a11;
  *((void *)v39 + 13) = v43;
  uint64_t v44 = v55;
  *((void *)v39 + 14) = v54;
  *((void *)v39 + 15) = v44;
  uint64_t v45 = v57;
  *((void *)v39 + 16) = v56;
  *((void *)v39 + 17) = v45;
  uint64_t v46 = v61;
  *((void *)v39 + 18) = v59;
  *((void *)v39 + 19) = v46;
  uint64_t v47 = v65;
  *((void *)v39 + 20) = v63;
  *((void *)v39 + 21) = v47;
  uint64_t v48 = v69;
  *((void *)v39 + 22) = v67;
  *((void *)v39 + 23) = v48;
  uint64_t v49 = v71;
  *((void *)v39 + 24) = v70;
  *((void *)v39 + 25) = v49;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v39[v37], v32, v28);
  *(void *)&v39[v38] = v52;
  sub_24EBB72EC((uint64_t)v35, v73, (uint64_t)v39);
  return swift_release();
}

uint64_t sub_24EBB872C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v74 = a8;
  uint64_t v72 = a7;
  uint64_t v70 = a6;
  uint64_t v68 = a5;
  uint64_t v66 = a4;
  uint64_t v64 = a3;
  uint64_t v79 = a26;
  uint64_t v78 = a25;
  uint64_t v77 = a24;
  uint64_t v76 = a23;
  uint64_t v75 = a22;
  uint64_t v73 = a21;
  uint64_t v71 = a20;
  uint64_t v69 = a19;
  uint64_t v67 = a18;
  uint64_t v65 = a17;
  uint64_t v63 = a16;
  uint64_t v62 = a15;
  uint64_t v61 = a14;
  uint64_t v60 = a13;
  uint64_t v59 = a12;
  uint64_t v58 = a11;
  uint64_t v57 = a10;
  uint64_t v56 = a9;
  uint64_t v80 = a3;
  uint64_t v81 = a4;
  uint64_t v82 = a5;
  uint64_t v83 = a6;
  uint64_t v84 = a7;
  uint64_t v85 = a8;
  uint64_t v86 = a9;
  uint64_t v87 = a10;
  uint64_t v88 = a11;
  uint64_t v89 = a12;
  uint64_t v90 = a13;
  uint64_t v91 = a14;
  uint64_t v92 = a15;
  uint64_t v93 = a16;
  uint64_t v94 = a17;
  uint64_t v95 = a18;
  uint64_t v96 = a19;
  uint64_t v97 = a20;
  uint64_t v98 = a21;
  uint64_t v99 = a22;
  uint64_t v100 = a23;
  uint64_t v101 = a24;
  uint64_t v28 = type metadata accessor for NewAndFeaturedView();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(void *)(v29 + 64);
  MEMORY[0x270FA5388](v28);
  long long v32 = (char *)&v55 - v31;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699470E8);
  MEMORY[0x270FA5388](v33 - 8);
  long long v35 = (char *)&v55 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = *a1;
  uint64_t v37 = a1[1];
  LOBYTE(a1) = *((unsigned char *)a1 + 16);
  uint64_t v38 = sub_24EC22BC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v35, 1, 1, v38);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v32, a2, v28);
  unint64_t v39 = (*(unsigned __int8 *)(v29 + 80) + 208) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  unint64_t v40 = (v30 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = (char *)swift_allocObject();
  *((void *)v41 + 2) = 0;
  *((void *)v41 + 3) = 0;
  uint64_t v42 = v66;
  *((void *)v41 + 4) = v64;
  *((void *)v41 + 5) = v42;
  uint64_t v43 = v70;
  *((void *)v41 + 6) = v68;
  *((void *)v41 + 7) = v43;
  uint64_t v44 = v74;
  *((void *)v41 + 8) = v72;
  *((void *)v41 + 9) = v44;
  uint64_t v45 = v57;
  *((void *)v41 + 10) = v56;
  *((void *)v41 + 11) = v45;
  uint64_t v46 = v59;
  *((void *)v41 + 12) = v58;
  *((void *)v41 + 13) = v46;
  uint64_t v47 = v61;
  *((void *)v41 + 14) = v60;
  *((void *)v41 + 15) = v47;
  uint64_t v48 = v63;
  *((void *)v41 + 16) = v62;
  *((void *)v41 + 17) = v48;
  uint64_t v49 = v67;
  *((void *)v41 + 18) = v65;
  *((void *)v41 + 19) = v49;
  uint64_t v50 = v71;
  *((void *)v41 + 20) = v69;
  *((void *)v41 + 21) = v50;
  uint64_t v51 = v75;
  *((void *)v41 + 22) = v73;
  *((void *)v41 + 23) = v51;
  uint64_t v52 = v77;
  *((void *)v41 + 24) = v76;
  *((void *)v41 + 25) = v52;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v41[v39], v32, v28);
  uint64_t v53 = &v41[v40];
  *(void *)uint64_t v53 = v36;
  *((void *)v53 + 1) = v37;
  v53[16] = (char)a1;
  sub_24EBBC8CC();
  sub_24EBB72EC((uint64_t)v35, v79, (uint64_t)v41);
  return swift_release();
}

uint64_t sub_24EBB8B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v81 = a7;
  uint64_t v82 = a8;
  uint64_t v79 = a5;
  uint64_t v80 = a6;
  uint64_t v78 = a4;
  uint64_t v74 = a3;
  uint64_t v65 = a2;
  uint64_t v68 = a1;
  uint64_t v72 = a9;
  uint64_t v86 = a24;
  uint64_t v84 = a23;
  uint64_t v83 = a22;
  uint64_t v67 = a21;
  uint64_t v85 = a20;
  uint64_t v76 = a19;
  uint64_t v66 = a18;
  uint64_t v77 = a17;
  uint64_t v75 = a16;
  uint64_t v73 = a15;
  uint64_t v64 = a14;
  uint64_t v63 = a13;
  uint64_t v62 = a12;
  uint64_t v61 = a11;
  uint64_t v60 = a10;
  uint64_t v25 = sub_24EC220E0();
  uint64_t v70 = *(void *)(v25 - 8);
  uint64_t v71 = v25;
  MEMORY[0x270FA5388](v25);
  uint64_t v69 = (char *)&v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947040);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v29 = (char *)&v59 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947030);
  uint64_t v31 = v30 - 8;
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)&v59 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = a2;
  uint64_t v110 = v74;
  uint64_t v111 = v78;
  uint64_t v112 = v79;
  uint64_t v113 = v80;
  uint64_t v114 = v81;
  uint64_t v115 = v82;
  uint64_t v116 = a10;
  uint64_t v117 = a11;
  uint64_t v118 = a12;
  uint64_t v119 = a13;
  uint64_t v120 = a14;
  uint64_t v121 = v73;
  uint64_t v122 = v75;
  uint64_t v123 = v77;
  uint64_t v35 = v66;
  uint64_t v34 = v67;
  uint64_t v124 = v66;
  uint64_t v125 = v76;
  uint64_t v126 = v85;
  uint64_t v127 = v67;
  uint64_t v128 = v83;
  uint64_t v129 = v84;
  uint64_t v130 = v86;
  uint64_t v36 = (uint64_t *)type metadata accessor for NewAndFeaturedView();
  sub_24EBA681C(v36, (uint64_t)v29);
  char v37 = sub_24EC22590();
  sub_24EC222C0();
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  sub_24EB741CC((uint64_t)v29, (uint64_t)v33, &qword_269947040);
  uint64_t v46 = &v33[*(int *)(v31 + 44)];
  uint64_t v47 = (uint64_t)v33;
  *uint64_t v46 = v37;
  *((void *)v46 + 1) = v39;
  *((void *)v46 + 2) = v41;
  *((void *)v46 + 3) = v43;
  *((void *)v46 + 4) = v45;
  v46[40] = 0;
  sub_24EB742F4((uint64_t)v29, &qword_269947040);
  sub_24EBA62AC();
  uint64_t v87 = v65;
  uint64_t v88 = v74;
  uint64_t v89 = v78;
  uint64_t v90 = v79;
  uint64_t v91 = v80;
  uint64_t v92 = v81;
  uint64_t v93 = v82;
  uint64_t v94 = v60;
  uint64_t v95 = v61;
  uint64_t v96 = v62;
  uint64_t v97 = v63;
  uint64_t v98 = v64;
  uint64_t v99 = v73;
  uint64_t v100 = v75;
  uint64_t v101 = v77;
  uint64_t v102 = v35;
  uint64_t v103 = v76;
  uint64_t v104 = v85;
  uint64_t v105 = v34;
  uint64_t v106 = v83;
  uint64_t v107 = v84;
  uint64_t v108 = v86;
  swift_getKeyPath();
  uint64_t v48 = v69;
  sub_24EC229E0();
  swift_release();
  swift_release();
  sub_24EC220C0();
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  (*(void (**)(char *, uint64_t))(v70 + 8))(v48, v71);
  sub_24EC22570();
  uint64_t v109 = v50;
  uint64_t v110 = v52;
  uint64_t v111 = v54;
  uint64_t v112 = v56;
  LOBYTE(v113) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269947000);
  uint64_t v57 = v72;
  sub_24EC22510();
  return sub_24EB7D0B0(v47, v57, &qword_269947030);
}

uint64_t sub_24EBB8F70(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x270FA5388](a1);
  v2(v1);
  return sub_24EC22910();
}

uint64_t sub_24EBB9040(uint64_t a1, uint64_t a2, uint64_t a3, ValueMetadata *a4, ValueMetadata *a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t a10, unint64_t a11, uint64_t a12, unint64_t a13, unint64_t a14, unint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  unint64_t v43 = a8;
  uint64_t v48 = a7;
  uint64_t v41 = a6;
  uint64_t v39 = a4;
  uint64_t v34 = a2;
  uint64_t v45 = a1;
  uint64_t v49 = a23;
  uint64_t v44 = a22;
  uint64_t v47 = a21;
  uint64_t v42 = a19;
  uint64_t v46 = a20;
  uint64_t v40 = a17;
  unint64_t v38 = a15;
  unint64_t v36 = a14;
  unint64_t v35 = a13;
  unint64_t v37 = a11;
  unint64_t v33 = sub_24EBA93F4();
  unint64_t v32 = sub_24EBA9448();
  uint64_t v50 = a2;
  uint64_t v51 = a3;
  uint64_t v52 = a5;
  uint64_t v53 = &type metadata for NewAndFeaturedItemContext;
  uint64_t v54 = v48;
  uint64_t v55 = a9;
  unint64_t v56 = a10;
  uint64_t v57 = a12;
  unint64_t v58 = a13;
  unint64_t v59 = a14;
  uint64_t v60 = a16;
  unint64_t v61 = v33;
  unint64_t v62 = v32;
  unint64_t v63 = sub_24EBA949C();
  uint64_t v64 = a18;
  uint64_t v65 = a20;
  uint64_t v66 = a21;
  uint64_t v67 = a23;
  uint64_t v26 = type metadata accessor for NewAndFeaturedAction();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v31 - v28;
  uint64_t v50 = v34;
  uint64_t v51 = a3;
  uint64_t v52 = v39;
  uint64_t v53 = a5;
  uint64_t v54 = v41;
  uint64_t v55 = v48;
  unint64_t v56 = v43;
  uint64_t v57 = a9;
  unint64_t v58 = a10;
  unint64_t v59 = a11;
  uint64_t v60 = a12;
  unint64_t v61 = a13;
  unint64_t v62 = a14;
  unint64_t v63 = a15;
  uint64_t v64 = a16;
  uint64_t v65 = a17;
  uint64_t v66 = a18;
  uint64_t v67 = a19;
  uint64_t v68 = a20;
  uint64_t v69 = a21;
  uint64_t v70 = a22;
  uint64_t v71 = a23;
  type metadata accessor for NewAndFeaturedView();
  sub_24EBA62AC();
  swift_storeEnumTagMultiPayload();
  sub_24EC229F0();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v29, v26);
}

uint64_t sub_24EBB9354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 200);
}

void sub_24EBB935C()
{
  sub_24EC21DA0();
  if (v0 <= 0x3F)
  {
    sub_24EC21D10();
    if (v1 <= 0x3F)
    {
      sub_24EBBA7EC();
      if (v2 <= 0x3F)
      {
        sub_24EC21E70();
        if (v3 <= 0x3F)
        {
          sub_24EC22210();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void *sub_24EBB94F0(void *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24EC21DA0();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[49];
    long long v9 = (char *)a1 + v8;
    long long v10 = &a2[v8];
    uint64_t v11 = sub_24EC21D10();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v13(v9, v10, v11);
    uint64_t v14 = a3[50];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = &a2[v14];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    uint64_t v19 = a3[51];
    uint64_t v20 = (char *)a1 + v19;
    long long v21 = &a2[v19];
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *((void *)v21 + 1);
    char v24 = v21[16];
    sub_24EB724BC();
    *(void *)uint64_t v20 = v22;
    *((void *)v20 + 1) = v23;
    v20[16] = v24;
    uint64_t v25 = a3[52];
    uint64_t v26 = (char *)a1 + v25;
    uint64_t v27 = &a2[v25];
    uint64_t v28 = sub_24EC21E70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    uint64_t v29 = a3[53];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = &a2[v29];
    uint64_t v32 = sub_24EC22210();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
  }
  return a1;
}

uint64_t sub_24EBB9790(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_24EC21DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[49];
  uint64_t v6 = sub_24EC21D10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  uint64_t v9 = a1 + a2[50];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  sub_24EB72454();
  uint64_t v10 = a1 + a2[52];
  uint64_t v11 = sub_24EC21E70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = a1 + a2[53];
  uint64_t v13 = sub_24EC22210();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
  return v14(v12, v13);
}

uint64_t sub_24EBB994C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24EC21DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[49];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_24EC21D10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 16);
  v12(v8, v9, v10);
  uint64_t v13 = a3[50];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v13, 1, v10))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  uint64_t v17 = a3[51];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v20 = *v19;
  uint64_t v21 = v19[1];
  char v22 = *((unsigned char *)v19 + 16);
  sub_24EB724BC();
  *(void *)uint64_t v18 = v20;
  *(void *)(v18 + 8) = v21;
  *(unsigned char *)(v18 + 16) = v22;
  uint64_t v23 = a3[52];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_24EC21E70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[53];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_24EC22210();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

uint64_t sub_24EBB9B9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24EC21DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[49];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_24EC21D10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  uint64_t v13 = a3[50];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v34 = a2;
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(a2) = v16((const void *)(a1 + v13), 1, v10);
  int v17 = v16(v15, 1, v10);
  if (!a2)
  {
    if (!v17)
    {
      v12(v14, v15, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v14, v15, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
LABEL_7:
  uint64_t v19 = a3[51];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (uint64_t *)(v34 + v19);
  uint64_t v22 = *v21;
  uint64_t v23 = v21[1];
  char v24 = *((unsigned char *)v21 + 16);
  sub_24EB724BC();
  *(void *)uint64_t v20 = v22;
  *(void *)(v20 + 8) = v23;
  *(unsigned char *)(v20 + 16) = v24;
  sub_24EB72454();
  uint64_t v25 = a3[52];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = v34 + v25;
  uint64_t v28 = sub_24EC21E70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
  uint64_t v29 = a3[53];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = v34 + v29;
  uint64_t v32 = sub_24EC22210();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 24))(v30, v31, v32);
  return a1;
}

uint64_t sub_24EBB9E74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24EC21DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[49];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_24EC21D10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  uint64_t v13 = a3[50];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v13, 1, v10))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  uint64_t v17 = a3[51];
  uint64_t v18 = a3[52];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
  uint64_t v21 = a1 + v18;
  uint64_t v22 = a2 + v18;
  uint64_t v23 = sub_24EC21E70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  uint64_t v24 = a3[53];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = sub_24EC22210();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  return a1;
}

uint64_t sub_24EBBA0B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24EC21DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[49];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_24EC21D10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  uint64_t v13 = a3[50];
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(a1) = v16((const void *)(a1 + v13), 1, v10);
  int v17 = v16(v15, 1, v10);
  if (!a1)
  {
    if (!v17)
    {
      v12(v14, v15, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v14, v15, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
LABEL_7:
  uint64_t v19 = a3[51];
  uint64_t v20 = v32 + v19;
  uint64_t v21 = v33 + v19;
  char v22 = *(unsigned char *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(unsigned char *)(v20 + 16) = v22;
  sub_24EB72454();
  uint64_t v23 = a3[52];
  uint64_t v24 = v32 + v23;
  uint64_t v25 = v33 + v23;
  uint64_t v26 = sub_24EC21E70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[53];
  uint64_t v28 = v32 + v27;
  uint64_t v29 = v33 + v27;
  uint64_t v30 = sub_24EC22210();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  return v32;
}

uint64_t sub_24EBBA370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EBBA384);
}

uint64_t sub_24EBBA384(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24EC21DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_14:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_24EC21D10();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[49];
LABEL_13:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_14;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[50];
    goto LABEL_13;
  }
  if (a2 == 254)
  {
    unsigned int v15 = *(unsigned __int8 *)(a1 + a3[51] + 16);
    if (v15 > 1) {
      return (v15 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v17 = sub_24EC21E70();
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[52];
    goto LABEL_13;
  }
  uint64_t v18 = sub_24EC22210();
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[53];
  return v19(v21, a2, v20);
}

uint64_t sub_24EBBA5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EBBA5C0);
}

uint64_t sub_24EBBA5C0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_24EC21DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_24EC21D10();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[49];
LABEL_11:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[50];
    goto LABEL_11;
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[51] + 16) = -(char)a2;
    return result;
  }
  uint64_t v17 = sub_24EC21E70();
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[52];
    goto LABEL_11;
  }
  uint64_t v18 = sub_24EC22210();
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[53];
  return v19(v21, a2, a2, v20);
}

void sub_24EBBA7EC()
{
  if (!qword_26B1D8608)
  {
    sub_24EC21D10();
    unint64_t v0 = sub_24EC22C90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B1D8608);
    }
  }
}

uint64_t sub_24EBBA844()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EBBB304()
{
  return sub_24EBBB490((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24EBAA808);
}

uint64_t sub_24EBBB320()
{
  uint64_t v23 = v0[3];
  uint64_t v24 = v0[2];
  uint64_t v21 = (ValueMetadata *)v0[5];
  char v22 = (ValueMetadata *)v0[4];
  uint64_t v19 = v0[7];
  uint64_t v20 = v0[6];
  uint64_t v17 = v0[9];
  unint64_t v18 = v0[8];
  unint64_t v15 = v0[11];
  unint64_t v16 = v0[10];
  unint64_t v13 = v0[13];
  uint64_t v14 = v0[12];
  unint64_t v1 = v0[15];
  unint64_t v12 = v0[14];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[19];
  uint64_t v6 = v0[20];
  uint64_t v7 = v0[21];
  uint64_t v8 = v0[22];
  uint64_t v9 = v0[23];
  uint64_t v10 = *(void *)(type metadata accessor for NewAndFeaturedView() - 8);
  return sub_24EBB9040((uint64_t)v0 + ((*(unsigned __int8 *)(v10 + 80) + 192) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v24, v23, v22, v21, v20, v19, v18, v17, v16, v15, v14, v13, v12, v1, v2, v3, v4, v5,
           v6,
           v7,
           v8,
           v9);
}

uint64_t sub_24EBBB460()
{
  return sub_24EBBB490((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24EBAB50C);
}

uint64_t sub_24EBBB478()
{
  return sub_24EBBB490((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24EBB8B40);
}

uint64_t sub_24EBBB490(uint64_t (*a1)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1(v1[24], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11], v1[12], v1[13], v1[14], v1[15], v1[16], v1[17], v1[18], v1[19],
           v1[20],
           v1[21],
           v1[22],
           v1[23]);
}

uint64_t sub_24EBBB4FC(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_24EB734D8(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24EBBB540(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_24EB733FC(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24EBBB584()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBB594()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBB5A4()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBB5BC()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBB5CC()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBB5E0(uint64_t *a1)
{
  return sub_24EBBB7E8(a1, (uint64_t)&unk_270086580, (uint64_t)&unk_269947178);
}

uint64_t sub_24EBBB604(uint64_t *a1)
{
  return sub_24EBBB968(a1, (uint64_t)&unk_270086558, (uint64_t)&unk_269947168);
}

uint64_t sub_24EBBB624()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBB634()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBB644()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBB658(uint64_t a1)
{
  uint64_t v18 = v1[3];
  uint64_t v19 = v1[2];
  uint64_t v16 = v1[5];
  uint64_t v17 = v1[4];
  uint64_t v14 = v1[7];
  uint64_t v15 = v1[6];
  uint64_t v12 = v1[9];
  uint64_t v13 = v1[8];
  uint64_t v10 = v1[11];
  uint64_t v11 = v1[10];
  uint64_t v8 = v1[13];
  uint64_t v9 = v1[12];
  uint64_t v2 = v1[15];
  uint64_t v7 = v1[14];
  uint64_t v3 = v1[16];
  uint64_t v4 = v1[17];
  uint64_t v5 = *(void *)(type metadata accessor for NewAndFeaturedView() - 8);
  return sub_24EBB81E8(a1, (uint64_t)v1 + ((*(unsigned __int8 *)(v5 + 80) + 192) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), v19, v18, v17, v16, v15, v14, v13, v12, v11, v10, v9, v8, v7, v2, v3, v4);
}

uint64_t sub_24EBBB7A4()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBB7B4()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBB7C8(uint64_t *a1)
{
  return sub_24EBBB7E8(a1, (uint64_t)&unk_270086530, (uint64_t)&unk_269947158);
}

uint64_t sub_24EBBB7E8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v26 = v3[3];
  uint64_t v27 = v3[2];
  uint64_t v24 = v3[5];
  uint64_t v25 = v3[4];
  uint64_t v22 = v3[7];
  uint64_t v23 = v3[6];
  uint64_t v20 = v3[9];
  uint64_t v21 = v3[8];
  uint64_t v18 = v3[11];
  uint64_t v19 = v3[10];
  uint64_t v16 = v3[13];
  uint64_t v17 = v3[12];
  uint64_t v4 = v3[15];
  uint64_t v15 = v3[14];
  uint64_t v5 = v3[16];
  uint64_t v6 = v3[17];
  uint64_t v7 = v3[18];
  uint64_t v8 = v3[19];
  uint64_t v9 = v3[20];
  uint64_t v10 = v3[21];
  uint64_t v11 = v3[22];
  uint64_t v12 = v3[23];
  uint64_t v13 = *(void *)(type metadata accessor for NewAndFeaturedView() - 8);
  return sub_24EBB8358(a1, (uint64_t)v3 + ((*(unsigned __int8 *)(v13 + 80) + 192) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), v27, v26, v25, v24, v23, v22, v21, v20, v19, v18, v17, v16, v15, v4, v5, v6, v7,
           v8,
           v9,
           v10,
           v11,
           v12,
           a2,
           a3);
}

uint64_t sub_24EBBB948(uint64_t *a1)
{
  return sub_24EBBB968(a1, (uint64_t)&unk_270086508, (uint64_t)&unk_269947148);
}

uint64_t sub_24EBBB968(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v26 = v3[3];
  uint64_t v27 = v3[2];
  uint64_t v24 = v3[5];
  uint64_t v25 = v3[4];
  uint64_t v22 = v3[7];
  uint64_t v23 = v3[6];
  uint64_t v20 = v3[9];
  uint64_t v21 = v3[8];
  uint64_t v18 = v3[11];
  uint64_t v19 = v3[10];
  uint64_t v16 = v3[13];
  uint64_t v17 = v3[12];
  uint64_t v4 = v3[15];
  uint64_t v15 = v3[14];
  uint64_t v5 = v3[16];
  uint64_t v6 = v3[17];
  uint64_t v7 = v3[18];
  uint64_t v8 = v3[19];
  uint64_t v9 = v3[20];
  uint64_t v10 = v3[21];
  uint64_t v11 = v3[22];
  uint64_t v12 = v3[23];
  uint64_t v13 = *(void *)(type metadata accessor for NewAndFeaturedView() - 8);
  return sub_24EBB872C(a1, (uint64_t)v3 + ((*(unsigned __int8 *)(v13 + 80) + 192) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), v27, v26, v25, v24, v23, v22, v21, v20, v19, v18, v17, v16, v15, v4, v5, v6, v7,
           v8,
           v9,
           v10,
           v11,
           v12,
           a2,
           a3);
}

uint64_t sub_24EBBBAC4()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBAD4()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBAE4()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBAF8()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBB08()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBB1C(uint64_t *a1)
{
  return sub_24EBBB7E8(a1, (uint64_t)&unk_2700864E0, (uint64_t)&unk_269947138);
}

uint64_t sub_24EBBBB40(uint64_t *a1)
{
  return sub_24EBBB968(a1, (uint64_t)&unk_2700864B8, (uint64_t)&unk_269947128);
}

uint64_t sub_24EBBBB60()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBB70()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBB80()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBB94()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBBA4()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBBB8(uint64_t *a1)
{
  return sub_24EBBB7E8(a1, (uint64_t)&unk_270086490, (uint64_t)&unk_269947118);
}

uint64_t objectdestroy_3Tm_0()
{
  unint64_t v1 = (int *)type metadata accessor for NewAndFeaturedView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 192) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  uint64_t v3 = sub_24EC21DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = v2 + v1[49];
  uint64_t v5 = sub_24EC21D10();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  uint64_t v8 = v2 + v1[50];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    v7(v8, v5);
  }
  sub_24EB72454();
  uint64_t v9 = v2 + v1[52];
  uint64_t v10 = sub_24EC21E70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v2 + v1[53];
  uint64_t v12 = sub_24EC22210();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  return swift_deallocObject();
}

uint64_t sub_24EBBBE94(uint64_t *a1)
{
  return sub_24EBBB968(a1, (uint64_t)&unk_270086440, (uint64_t)&unk_2699470F8);
}

uint64_t sub_24EBBBEB4()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBEC4()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBED4()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBEE4()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBEF8()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBF08()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBF18()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBF28()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBF38()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBF48()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBF58()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBF68()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBF78()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBF88()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBF98()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBFA8()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBFB8()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBFC8()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBFD8()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBFE8()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBBFF8()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBC008()
{
  return swift_deallocObject();
}

void sub_24EBBC018()
{
}

uint64_t sub_24EBBC02C()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBC03C()
{
  return swift_deallocObject();
}

uint64_t sub_24EBBC04C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24EBBC128;
  return v6(a1);
}

uint64_t sub_24EBBC128()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24EBBC220(uint64_t a1)
{
  uint64_t v2 = sub_24EC21FE0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699470D0);
    uint64_t v9 = sub_24EC22D10();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    unint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_24EBBC538(&qword_2699470D8, MEMORY[0x263F3DEC0]);
      uint64_t v16 = sub_24EC22A10();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_24EBBC538(&qword_2699470E0, MEMORY[0x263F3DEC0]);
          char v23 = sub_24EC22A30();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_24EBBC538(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EBBC584()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EBBC58C(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1[5];
  uint64_t v36 = v1[4];
  uint64_t v5 = v1[7];
  uint64_t v35 = v1[6];
  uint64_t v6 = v1[9];
  uint64_t v34 = v1[8];
  uint64_t v7 = v1[11];
  uint64_t v33 = v1[10];
  uint64_t v8 = v1[13];
  uint64_t v32 = v1[12];
  uint64_t v9 = v1[15];
  uint64_t v31 = v1[14];
  uint64_t v10 = v1[17];
  uint64_t v30 = v1[16];
  uint64_t v12 = v1[19];
  uint64_t v11 = v1[18];
  uint64_t v14 = v1[20];
  uint64_t v13 = v1[21];
  uint64_t v15 = v1[22];
  uint64_t v16 = v1[23];
  uint64_t v17 = v1[24];
  uint64_t v18 = v1[25];
  v3[2] = v36;
  v3[3] = v4;
  v3[4] = v35;
  v3[5] = v5;
  v3[6] = v34;
  v3[7] = v6;
  v3[8] = v33;
  v3[9] = v7;
  v3[10] = v32;
  v3[11] = v8;
  v3[12] = v31;
  v3[13] = v9;
  v3[14] = v30;
  v3[15] = v10;
  v3[16] = v11;
  v3[17] = v12;
  v3[18] = v14;
  v3[19] = v13;
  v3[20] = v15;
  v3[21] = v16;
  v3[22] = v17;
  v3[23] = v18;
  uint64_t v19 = *(void *)(type metadata accessor for NewAndFeaturedView() - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 208) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v29 = v1[2];
  uint64_t v27 = (uint64_t)v1 + v20;
  uint64_t v28 = v1[3];
  uint64_t v21 = (char *)v1 + ((*(void *)(v19 + 64) + v20 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = *(void *)v21;
  uint64_t v26 = *((void *)v21 + 1);
  char v23 = v21[16];
  uint64_t v24 = (void *)swift_task_alloc();
  v3[24] = v24;
  void *v24 = v3;
  v24[1] = sub_24EBBC7D8;
  return sub_24EBB7498(a1, v29, v28, v27, v22, v26, v23, v36);
}

uint64_t sub_24EBBC7D8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24EBBC8CC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24EBBC8D4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24EBBC90C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24EBBC9C4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269947100 + dword_269947100);
  return v6(a1, v4);
}

uint64_t sub_24EBBC9C4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24EBBCABC(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v32 = v1[5];
  uint64_t v33 = v1[4];
  uint64_t v31 = v1[6];
  uint64_t v4 = v1[8];
  uint64_t v30 = v1[7];
  uint64_t v5 = v1[10];
  uint64_t v29 = v1[9];
  uint64_t v6 = v1[12];
  uint64_t v28 = v1[11];
  uint64_t v7 = v1[14];
  uint64_t v27 = v1[13];
  uint64_t v8 = v1[16];
  uint64_t v26 = v1[15];
  uint64_t v9 = v1[18];
  uint64_t v25 = v1[17];
  uint64_t v24 = v1[19];
  uint64_t v10 = v1[20];
  uint64_t v11 = v1[21];
  uint64_t v13 = v1[22];
  uint64_t v12 = v1[23];
  uint64_t v14 = v1[24];
  uint64_t v15 = v1[25];
  v3[2] = v33;
  v3[3] = v32;
  v3[4] = v31;
  v3[5] = v30;
  v3[6] = v4;
  v3[7] = v29;
  v3[8] = v5;
  v3[9] = v28;
  v3[10] = v6;
  v3[11] = v27;
  v3[12] = v7;
  v3[13] = v26;
  v3[14] = v8;
  v3[15] = v25;
  v3[16] = v9;
  v3[17] = v24;
  v3[18] = v10;
  v3[19] = v11;
  v3[20] = v13;
  v3[21] = v12;
  v3[22] = v14;
  v3[23] = v15;
  uint64_t v16 = *(void *)(type metadata accessor for NewAndFeaturedView() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 208) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = v1[3];
  uint64_t v23 = v1[2];
  uint64_t v19 = (uint64_t)v1 + v17;
  uint64_t v20 = *(void *)((char *)v1 + ((*(void *)(v16 + 64) + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v21 = (void *)swift_task_alloc();
  v3[24] = v21;
  *uint64_t v21 = v3;
  v21[1] = sub_24EBBE068;
  return sub_24EBB6E34(a1, v23, v18, v19, v20, v33, v32, v31);
}

uint64_t sub_24EBBCD00(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1[5];
  uint64_t v36 = v1[4];
  uint64_t v5 = v1[7];
  uint64_t v35 = v1[6];
  uint64_t v6 = v1[9];
  uint64_t v34 = v1[8];
  uint64_t v7 = v1[11];
  uint64_t v33 = v1[10];
  uint64_t v8 = v1[13];
  uint64_t v32 = v1[12];
  uint64_t v9 = v1[15];
  uint64_t v31 = v1[14];
  uint64_t v10 = v1[17];
  uint64_t v30 = v1[16];
  uint64_t v12 = v1[19];
  uint64_t v11 = v1[18];
  uint64_t v14 = v1[20];
  uint64_t v13 = v1[21];
  uint64_t v15 = v1[22];
  uint64_t v16 = v1[23];
  uint64_t v17 = v1[24];
  uint64_t v18 = v1[25];
  v3[2] = v36;
  v3[3] = v4;
  v3[4] = v35;
  v3[5] = v5;
  v3[6] = v34;
  v3[7] = v6;
  v3[8] = v33;
  v3[9] = v7;
  v3[10] = v32;
  v3[11] = v8;
  v3[12] = v31;
  v3[13] = v9;
  v3[14] = v30;
  v3[15] = v10;
  v3[16] = v11;
  v3[17] = v12;
  v3[18] = v14;
  v3[19] = v13;
  v3[20] = v15;
  v3[21] = v16;
  v3[22] = v17;
  v3[23] = v18;
  uint64_t v19 = *(void *)(type metadata accessor for NewAndFeaturedView() - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 208) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v29 = v1[2];
  uint64_t v27 = (uint64_t)v1 + v20;
  uint64_t v28 = v1[3];
  uint64_t v21 = (char *)v1 + ((*(void *)(v19 + 64) + v20 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = *(void *)v21;
  uint64_t v26 = *((void *)v21 + 1);
  char v23 = v21[16];
  uint64_t v24 = (void *)swift_task_alloc();
  v3[24] = v24;
  void *v24 = v3;
  v24[1] = sub_24EBBE068;
  return sub_24EBB7D9C(a1, v29, v28, v27, v22, v26, v23, v36);
}

uint64_t sub_24EBBCF50(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v32 = v1[5];
  uint64_t v33 = v1[4];
  uint64_t v31 = v1[6];
  uint64_t v4 = v1[8];
  uint64_t v30 = v1[7];
  uint64_t v5 = v1[10];
  uint64_t v29 = v1[9];
  uint64_t v6 = v1[12];
  uint64_t v28 = v1[11];
  uint64_t v7 = v1[14];
  uint64_t v27 = v1[13];
  uint64_t v8 = v1[16];
  uint64_t v26 = v1[15];
  uint64_t v9 = v1[18];
  uint64_t v25 = v1[17];
  uint64_t v24 = v1[19];
  uint64_t v10 = v1[20];
  uint64_t v11 = v1[21];
  uint64_t v13 = v1[22];
  uint64_t v12 = v1[23];
  uint64_t v14 = v1[24];
  uint64_t v15 = v1[25];
  v3[2] = v33;
  v3[3] = v32;
  v3[4] = v31;
  v3[5] = v30;
  v3[6] = v4;
  v3[7] = v29;
  v3[8] = v5;
  v3[9] = v28;
  v3[10] = v6;
  v3[11] = v27;
  v3[12] = v7;
  v3[13] = v26;
  v3[14] = v8;
  v3[15] = v25;
  v3[16] = v9;
  v3[17] = v24;
  v3[18] = v10;
  v3[19] = v11;
  v3[20] = v13;
  v3[21] = v12;
  v3[22] = v14;
  v3[23] = v15;
  uint64_t v16 = *(void *)(type metadata accessor for NewAndFeaturedView() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 208) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = v1[3];
  uint64_t v23 = v1[2];
  uint64_t v19 = (uint64_t)v1 + v17;
  uint64_t v20 = *(void *)((char *)v1 + ((*(void *)(v16 + 64) + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v21 = (void *)swift_task_alloc();
  v3[24] = v21;
  *uint64_t v21 = v3;
  v21[1] = sub_24EBBE068;
  return sub_24EBB798C(a1, v23, v18, v19, v20, v33, v32, v31);
}

uint64_t sub_24EBBD194(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1[5];
  uint64_t v36 = v1[4];
  uint64_t v5 = v1[7];
  uint64_t v35 = v1[6];
  uint64_t v6 = v1[9];
  uint64_t v34 = v1[8];
  uint64_t v7 = v1[11];
  uint64_t v33 = v1[10];
  uint64_t v8 = v1[13];
  uint64_t v32 = v1[12];
  uint64_t v9 = v1[15];
  uint64_t v31 = v1[14];
  uint64_t v10 = v1[17];
  uint64_t v30 = v1[16];
  uint64_t v12 = v1[19];
  uint64_t v11 = v1[18];
  uint64_t v14 = v1[20];
  uint64_t v13 = v1[21];
  uint64_t v15 = v1[22];
  uint64_t v16 = v1[23];
  uint64_t v17 = v1[24];
  uint64_t v18 = v1[25];
  v3[2] = v36;
  v3[3] = v4;
  v3[4] = v35;
  v3[5] = v5;
  v3[6] = v34;
  v3[7] = v6;
  v3[8] = v33;
  v3[9] = v7;
  v3[10] = v32;
  v3[11] = v8;
  v3[12] = v31;
  v3[13] = v9;
  v3[14] = v30;
  v3[15] = v10;
  v3[16] = v11;
  v3[17] = v12;
  v3[18] = v14;
  v3[19] = v13;
  v3[20] = v15;
  v3[21] = v16;
  v3[22] = v17;
  v3[23] = v18;
  uint64_t v19 = *(void *)(type metadata accessor for NewAndFeaturedView() - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 208) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v29 = v1[2];
  uint64_t v27 = (uint64_t)v1 + v20;
  uint64_t v28 = v1[3];
  uint64_t v21 = (char *)v1 + ((*(void *)(v19 + 64) + v20 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = *(void *)v21;
  uint64_t v26 = *((void *)v21 + 1);
  char v23 = v21[16];
  uint64_t v24 = (void *)swift_task_alloc();
  v3[24] = v24;
  void *v24 = v3;
  v24[1] = sub_24EBBE068;
  return sub_24EBB7D9C(a1, v29, v28, v27, v22, v26, v23, v36);
}

uint64_t sub_24EBBD3E4(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v32 = v1[5];
  uint64_t v33 = v1[4];
  uint64_t v31 = v1[6];
  uint64_t v4 = v1[8];
  uint64_t v30 = v1[7];
  uint64_t v5 = v1[10];
  uint64_t v29 = v1[9];
  uint64_t v6 = v1[12];
  uint64_t v28 = v1[11];
  uint64_t v7 = v1[14];
  uint64_t v27 = v1[13];
  uint64_t v8 = v1[16];
  uint64_t v26 = v1[15];
  uint64_t v9 = v1[18];
  uint64_t v25 = v1[17];
  uint64_t v24 = v1[19];
  uint64_t v10 = v1[20];
  uint64_t v11 = v1[21];
  uint64_t v13 = v1[22];
  uint64_t v12 = v1[23];
  uint64_t v14 = v1[24];
  uint64_t v15 = v1[25];
  v3[2] = v33;
  v3[3] = v32;
  v3[4] = v31;
  v3[5] = v30;
  v3[6] = v4;
  v3[7] = v29;
  v3[8] = v5;
  v3[9] = v28;
  v3[10] = v6;
  v3[11] = v27;
  v3[12] = v7;
  v3[13] = v26;
  v3[14] = v8;
  v3[15] = v25;
  v3[16] = v9;
  v3[17] = v24;
  v3[18] = v10;
  v3[19] = v11;
  v3[20] = v13;
  v3[21] = v12;
  v3[22] = v14;
  v3[23] = v15;
  uint64_t v16 = *(void *)(type metadata accessor for NewAndFeaturedView() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 208) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = v1[3];
  uint64_t v23 = v1[2];
  uint64_t v19 = (uint64_t)v1 + v17;
  uint64_t v20 = *(void *)((char *)v1 + ((*(void *)(v16 + 64) + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v21 = (void *)swift_task_alloc();
  v3[24] = v21;
  *uint64_t v21 = v3;
  v21[1] = sub_24EBBE068;
  return sub_24EBB798C(a1, v23, v18, v19, v20, v33, v32, v31);
}

uint64_t objectdestroy_180Tm()
{
  uint64_t v1 = (int *)type metadata accessor for NewAndFeaturedView();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 208) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_24EC21DA0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  unint64_t v5 = v0 + v2 + v1[49];
  uint64_t v6 = sub_24EC21D10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(unint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  unint64_t v9 = v0 + v2 + v1[50];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  sub_24EB72454();
  uint64_t v10 = v3 + v1[52];
  uint64_t v11 = sub_24EC21E70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v3 + v1[53];
  uint64_t v13 = sub_24EC22210();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  sub_24EBBC584();
  return swift_deallocObject();
}

uint64_t sub_24EBBD904(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1[5];
  uint64_t v36 = v1[4];
  uint64_t v5 = v1[7];
  uint64_t v35 = v1[6];
  uint64_t v6 = v1[9];
  uint64_t v34 = v1[8];
  uint64_t v7 = v1[11];
  uint64_t v33 = v1[10];
  uint64_t v8 = v1[13];
  uint64_t v32 = v1[12];
  uint64_t v9 = v1[15];
  uint64_t v31 = v1[14];
  uint64_t v10 = v1[17];
  uint64_t v30 = v1[16];
  uint64_t v12 = v1[19];
  uint64_t v11 = v1[18];
  uint64_t v14 = v1[20];
  uint64_t v13 = v1[21];
  uint64_t v15 = v1[22];
  uint64_t v16 = v1[23];
  uint64_t v17 = v1[24];
  uint64_t v18 = v1[25];
  v3[2] = v36;
  v3[3] = v4;
  v3[4] = v35;
  v3[5] = v5;
  v3[6] = v34;
  v3[7] = v6;
  v3[8] = v33;
  v3[9] = v7;
  v3[10] = v32;
  v3[11] = v8;
  v3[12] = v31;
  v3[13] = v9;
  v3[14] = v30;
  v3[15] = v10;
  v3[16] = v11;
  v3[17] = v12;
  v3[18] = v14;
  v3[19] = v13;
  v3[20] = v15;
  v3[21] = v16;
  v3[22] = v17;
  v3[23] = v18;
  uint64_t v19 = *(void *)(type metadata accessor for NewAndFeaturedView() - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 208) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v29 = v1[2];
  uint64_t v27 = (uint64_t)v1 + v20;
  uint64_t v28 = v1[3];
  uint64_t v21 = (char *)v1 + ((*(void *)(v19 + 64) + v20 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = *(void *)v21;
  uint64_t v26 = *((void *)v21 + 1);
  char v23 = v21[16];
  uint64_t v24 = (void *)swift_task_alloc();
  v3[24] = v24;
  void *v24 = v3;
  v24[1] = sub_24EBBE068;
  return sub_24EBB7D9C(a1, v29, v28, v27, v22, v26, v23, v36);
}

uint64_t objectdestroy_189Tm()
{
  uint64_t v1 = (int *)type metadata accessor for NewAndFeaturedView();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 208) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_24EC21DA0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  unint64_t v5 = v0 + v2 + v1[49];
  uint64_t v6 = sub_24EC21D10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(unint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  unint64_t v9 = v0 + v2 + v1[50];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  sub_24EB72454();
  uint64_t v10 = v3 + v1[52];
  uint64_t v11 = sub_24EC21E70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v3 + v1[53];
  uint64_t v13 = sub_24EC22210();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  return swift_deallocObject();
}

uint64_t sub_24EBBDE20(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v32 = v1[5];
  uint64_t v33 = v1[4];
  uint64_t v31 = v1[6];
  uint64_t v4 = v1[8];
  uint64_t v30 = v1[7];
  uint64_t v5 = v1[10];
  uint64_t v29 = v1[9];
  uint64_t v6 = v1[12];
  uint64_t v28 = v1[11];
  uint64_t v7 = v1[14];
  uint64_t v27 = v1[13];
  uint64_t v8 = v1[16];
  uint64_t v26 = v1[15];
  uint64_t v9 = v1[18];
  uint64_t v25 = v1[17];
  uint64_t v24 = v1[19];
  uint64_t v10 = v1[20];
  uint64_t v11 = v1[21];
  uint64_t v13 = v1[22];
  uint64_t v12 = v1[23];
  uint64_t v14 = v1[24];
  uint64_t v15 = v1[25];
  v3[2] = v33;
  v3[3] = v32;
  v3[4] = v31;
  v3[5] = v30;
  v3[6] = v4;
  v3[7] = v29;
  v3[8] = v5;
  v3[9] = v28;
  v3[10] = v6;
  v3[11] = v27;
  v3[12] = v7;
  v3[13] = v26;
  v3[14] = v8;
  v3[15] = v25;
  v3[16] = v9;
  v3[17] = v24;
  v3[18] = v10;
  v3[19] = v11;
  v3[20] = v13;
  v3[21] = v12;
  v3[22] = v14;
  v3[23] = v15;
  uint64_t v16 = *(void *)(type metadata accessor for NewAndFeaturedView() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 208) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = v1[3];
  uint64_t v23 = v1[2];
  uint64_t v19 = (uint64_t)v1 + v17;
  uint64_t v20 = *(void *)((char *)v1 + ((*(void *)(v16 + 64) + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v21 = (void *)swift_task_alloc();
  v3[24] = v21;
  *uint64_t v21 = v3;
  v21[1] = sub_24EBBE068;
  return sub_24EBB798C(a1, v23, v18, v19, v20, v33, v32, v31);
}

BOOL static CreatePlanBannerVisibility.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24EBBE080(char a1)
{
  return *(void *)&aHidden_0[8 * a1];
}

uint64_t sub_24EBBE0A0()
{
  return sub_24EBBE080(*v0);
}

uint64_t sub_24EBBE0A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBBF27C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBBE0D0(uint64_t a1)
{
  unint64_t v2 = sub_24EBBE614();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBBE10C(uint64_t a1)
{
  unint64_t v2 = sub_24EBBE614();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBBE148(uint64_t a1)
{
  unint64_t v2 = sub_24EBBE710();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBBE184(uint64_t a1)
{
  unint64_t v2 = sub_24EBBE710();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBBE1C0(uint64_t a1)
{
  unint64_t v2 = sub_24EBBE6BC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBBE1FC(uint64_t a1)
{
  unint64_t v2 = sub_24EBBE6BC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBBE238(uint64_t a1)
{
  unint64_t v2 = sub_24EBBE668();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBBE274(uint64_t a1)
{
  unint64_t v2 = sub_24EBBE668();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CreatePlanBannerVisibility.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947180);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947188);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947190);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947198);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBBE614();
  sub_24EC23050();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_24EBBE6BC();
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_24EBBE668();
      unint64_t v17 = v23;
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_24EBBE710();
    sub_24EC22EC0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_24EBBE614()
{
  unint64_t result = qword_2699471A0;
  if (!qword_2699471A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699471A0);
  }
  return result;
}

unint64_t sub_24EBBE668()
{
  unint64_t result = qword_2699471A8;
  if (!qword_2699471A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699471A8);
  }
  return result;
}

unint64_t sub_24EBBE6BC()
{
  unint64_t result = qword_2699471B0;
  if (!qword_2699471B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699471B0);
  }
  return result;
}

unint64_t sub_24EBBE710()
{
  unint64_t result = qword_2699471B8;
  if (!qword_2699471B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699471B8);
  }
  return result;
}

uint64_t CreatePlanBannerVisibility.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699471C0);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699471C8);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699471D0);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699471D8);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBBE614();
  uint64_t v12 = (uint64_t)v39;
  sub_24EC23040();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v39 = a1;
  uint64_t v15 = v11;
  uint64_t v16 = sub_24EC22EA0();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_24EC22D50();
    swift_allocError();
    uint64_t v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269946108);
    void *v23 = &type metadata for CreatePlanBannerVisibility;
    sub_24EC22E10();
    sub_24EC22D40();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_24EBBE6BC();
      uint64_t v18 = v30;
      sub_24EC22E00();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_24EBBE668();
      uint64_t v25 = v30;
      sub_24EC22E00();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_24EBBE710();
    uint64_t v24 = v30;
    sub_24EC22E00();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_24EBBED1C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return CreatePlanBannerVisibility.init(from:)(a1, a2);
}

uint64_t sub_24EBBED34(void *a1)
{
  return CreatePlanBannerVisibility.encode(to:)(a1);
}

uint64_t CreatePlanBannerVisibility.hash(into:)()
{
  return sub_24EC23000();
}

uint64_t CreatePlanBannerVisibility.hashValue.getter()
{
  return sub_24EC23030();
}

unint64_t sub_24EBBEDC4()
{
  unint64_t result = qword_2699471E0;
  if (!qword_2699471E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699471E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CreatePlanBannerVisibility()
{
  return &type metadata for CreatePlanBannerVisibility;
}

unsigned char *_s15FitnessBrowsing26CreatePlanBannerVisibilityOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBBEEFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CreatePlanBannerVisibility.CodingKeys()
{
  return &type metadata for CreatePlanBannerVisibility.CodingKeys;
}

ValueMetadata *type metadata accessor for CreatePlanBannerVisibility.HiddenCodingKeys()
{
  return &type metadata for CreatePlanBannerVisibility.HiddenCodingKeys;
}

ValueMetadata *type metadata accessor for CreatePlanBannerVisibility.UnknownCodingKeys()
{
  return &type metadata for CreatePlanBannerVisibility.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for CreatePlanBannerVisibility.VisibleCodingKeys()
{
  return &type metadata for CreatePlanBannerVisibility.VisibleCodingKeys;
}

unint64_t sub_24EBBEF68()
{
  unint64_t result = qword_2699471E8;
  if (!qword_2699471E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699471E8);
  }
  return result;
}

unint64_t sub_24EBBEFC0()
{
  unint64_t result = qword_2699471F0;
  if (!qword_2699471F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699471F0);
  }
  return result;
}

unint64_t sub_24EBBF018()
{
  unint64_t result = qword_2699471F8;
  if (!qword_2699471F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699471F8);
  }
  return result;
}

unint64_t sub_24EBBF070()
{
  unint64_t result = qword_269947200;
  if (!qword_269947200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947200);
  }
  return result;
}

unint64_t sub_24EBBF0C8()
{
  unint64_t result = qword_269947208;
  if (!qword_269947208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947208);
  }
  return result;
}

unint64_t sub_24EBBF120()
{
  unint64_t result = qword_269947210;
  if (!qword_269947210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947210);
  }
  return result;
}

unint64_t sub_24EBBF178()
{
  unint64_t result = qword_269947218;
  if (!qword_269947218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947218);
  }
  return result;
}

unint64_t sub_24EBBF1D0()
{
  unint64_t result = qword_269947220;
  if (!qword_269947220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947220);
  }
  return result;
}

unint64_t sub_24EBBF228()
{
  unint64_t result = qword_269947228;
  if (!qword_269947228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947228);
  }
  return result;
}

uint64_t sub_24EBBF27C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6E6564646968 && a2 == 0xE600000000000000;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C6269736976 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EBBF3BC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269947250);
  sub_24EB74350(&qword_269947258, &qword_269947250);
  return sub_24EC222E0();
}

uint64_t BrowseView.init(store:artworkViewBuilder:canvasViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)a7 = sub_24EB68D8C;
  *(void *)(a7 + 8) = result;
  *(unsigned char *)(a7 + 16) = 0;
  *(void *)(a7 + 24) = a3;
  *(void *)(a7 + 32) = a4;
  *(void *)(a7 + 40) = a5;
  *(void *)(a7 + 48) = a6;
  return result;
}

uint64_t sub_24EBBF4D4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t BrowseView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269947230);
  uint64_t v4 = a1[3];
  sub_24EC224F0();
  sub_24EC21E50();
  uint64_t v34 = sub_24EC224F0();
  uint64_t v5 = sub_24EC22840();
  uint64_t v40 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v34 - v6;
  uint64_t v8 = sub_24EC22380();
  uint64_t v44 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v38 = (char *)&v34 - v9;
  uint64_t v10 = sub_24EB74350(&qword_269947238, &qword_269947230);
  uint64_t v11 = a1[5];
  uint64_t v61 = v10;
  uint64_t v62 = v11;
  uint64_t v12 = v11;
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v14 = sub_24EBBFB48();
  uint64_t v59 = WitnessTable;
  unint64_t v60 = v14;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v56 = swift_getWitnessTable();
  uint64_t v57 = MEMORY[0x263F1A240];
  uint64_t v39 = swift_getWitnessTable();
  *(void *)&long long v63 = v8;
  *((void *)&v63 + 1) = MEMORY[0x263F8D4F8];
  *(void *)&long long v64 = v39;
  *((void *)&v64 + 1) = MEMORY[0x263F8D510];
  uint64_t v41 = MEMORY[0x263F1B270];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v43 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v37 = (char *)&v34 - v15;
  long long v16 = v2[1];
  long long v63 = *v2;
  long long v64 = v16;
  long long v65 = v2[2];
  uint64_t v66 = *((void *)v2 + 6);
  uint64_t v46 = a1[2];
  uint64_t v17 = v46;
  uint64_t v18 = v4;
  uint64_t v36 = v4;
  uint64_t v47 = v4;
  uint64_t v48 = a1[4];
  uint64_t v19 = v48;
  uint64_t v35 = v12;
  uint64_t v49 = v12;
  uint64_t v50 = &v63;
  sub_24EC22830();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v17;
  *(void *)(v20 + 24) = v18;
  *(void *)(v20 + 32) = v19;
  *(void *)(v20 + 40) = v12;
  long long v21 = v64;
  *(_OWORD *)(v20 + 48) = v63;
  *(_OWORD *)(v20 + 64) = v21;
  *(_OWORD *)(v20 + 80) = v65;
  *(void *)(v20 + 96) = v66;
  sub_24EBC0A1C((uint64_t)&v63);
  uint64_t v22 = v38;
  sub_24EC22770();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v5);
  long long v52 = v63;
  long long v53 = v64;
  long long v54 = v65;
  uint64_t v55 = v66;
  sub_24EBBF3BC();
  swift_getKeyPath();
  sub_24EC229E0();
  swift_release();
  swift_release();
  char v51 = v52;
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v36;
  *(void *)(v23 + 16) = v17;
  *(void *)(v23 + 24) = v24;
  uint64_t v25 = v35;
  *(void *)(v23 + 32) = v19;
  *(void *)(v23 + 40) = v25;
  long long v26 = v64;
  *(_OWORD *)(v23 + 48) = v63;
  *(_OWORD *)(v23 + 64) = v26;
  *(_OWORD *)(v23 + 80) = v65;
  *(void *)(v23 + 96) = v66;
  sub_24EBC0A1C((uint64_t)&v63);
  char v27 = v37;
  uint64_t v28 = MEMORY[0x263F8D4F8];
  uint64_t v29 = v39;
  uint64_t v30 = MEMORY[0x263F8D510];
  sub_24EC22790();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v22, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269947248);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_24EC28530;
  *(void *)(v31 + 32) = 0x69566573776F7242;
  *(void *)(v31 + 40) = 0xEA00000000007765;
  *(void *)&long long v52 = v8;
  *((void *)&v52 + 1) = v28;
  *(void *)&long long v53 = v29;
  *((void *)&v53 + 1) = v30;
  swift_getOpaqueTypeConformance2();
  uint64_t v32 = OpaqueTypeMetadata2;
  sub_24EC22670();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v27, v32);
}

unint64_t sub_24EBBFB48()
{
  unint64_t result = qword_269947240;
  if (!qword_269947240)
  {
    sub_24EC21E50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947240);
  }
  return result;
}

uint64_t sub_24EBBFBA0@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v71 = a6;
  uint64_t v11 = sub_24EC21E50();
  uint64_t v63 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v62 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v56 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  unint64_t v60 = (char *)&v54 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269947230);
  uint64_t v18 = sub_24EC224F0();
  uint64_t v67 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v66 = (char *)&v54 - v19;
  uint64_t v65 = v17;
  uint64_t v59 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v58 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for BrowseLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v24 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = v11;
  uint64_t v70 = sub_24EC224F0();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  long long v26 = (char *)&v54 - v25;
  long long v27 = a1[1];
  long long v86 = *a1;
  long long v87 = v27;
  long long v88 = a1[2];
  uint64_t v89 = *((void *)a1 + 6);
  uint64_t v55 = a2;
  uint64_t v82 = a2;
  uint64_t v83 = a3;
  uint64_t v64 = a3;
  uint64_t v57 = a4;
  uint64_t v84 = a4;
  uint64_t v85 = a5;
  uint64_t v28 = a5;
  type metadata accessor for BrowseView();
  sub_24EBBF3BC();
  swift_getKeyPath();
  sub_24EC229E0();
  swift_release();
  swift_release();
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2)
  {
    uint64_t v32 = v18;
    if (EnumCaseMultiPayload)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269946780);
      swift_bridgeObjectRelease();
      uint64_t v38 = sub_24EBC115C((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for BrowseContent);
      uint64_t v39 = (uint64_t)v56;
      (*((void (**)(uint64_t))a1 + 5))(v38);
      uint64_t v40 = v60;
      uint64_t v41 = v64;
      sub_24EB68678(v39, v64, a5);
      char v42 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
      v42(v39, v41);
      sub_24EB68678(v40, v41, a5);
      uint64_t v43 = sub_24EB74350(&qword_269947238, &qword_269947230);
      uint64_t v44 = (uint64_t)v66;
      sub_24EB687AC(v39, v65, v41);
      v42(v39, v41);
      uint64_t v74 = v43;
      uint64_t v75 = a5;
      swift_getWitnessTable();
      sub_24EBBFB48();
      sub_24EB686B4(v44, v32);
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v44, v32);
      v42((uint64_t)v40, v41);
    }
    else
    {
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      uint64_t v33 = v64;
      *(&v54 - 8) = v55;
      *(&v54 - 7) = v33;
      *(&v54 - 6) = v57;
      *(&v54 - 5) = a5;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269947260);
      unint64_t v52 = sub_24EBC11D0();
      uint64_t v53 = MEMORY[0x263F1BA00];
      uint64_t v50 = MEMORY[0x263F1BA08];
      uint64_t v51 = MEMORY[0x263F1A820];
      uint64_t v34 = (uint64_t)v58;
      sub_24EC22500();
      swift_bridgeObjectRelease();
      uint64_t v35 = sub_24EB74350(&qword_269947238, &qword_269947230);
      uint64_t v36 = (uint64_t)v66;
      uint64_t v37 = v65;
      sub_24EB686B4(v34, v65);
      uint64_t v72 = v35;
      uint64_t v73 = a5;
      swift_getWitnessTable();
      sub_24EBBFB48();
      sub_24EB686B4(v36, v32);
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v36, v32);
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v34, v37);
    }
  }
  else
  {
    uint64_t v30 = (uint64_t)v62;
    sub_24EC21E40();
    uint64_t v80 = sub_24EB74350(&qword_269947238, &qword_269947230);
    uint64_t v81 = a5;
    swift_getWitnessTable();
    sub_24EBBFB48();
    uint64_t v31 = v68;
    sub_24EB687AC(v30, v18, v68);
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v30, v31);
  }
  uint64_t v78 = sub_24EB74350(&qword_269947238, &qword_269947230);
  uint64_t v79 = v28;
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v46 = sub_24EBBFB48();
  uint64_t v76 = WitnessTable;
  unint64_t v77 = v46;
  uint64_t v47 = v70;
  uint64_t v48 = swift_getWitnessTable();
  sub_24EB68678(v26, v47, v48);
  return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v26, v47);
}

uint64_t sub_24EBC049C@<X0>(uint64_t a1@<X8>)
{
  return sub_24EBBFBA0(*(long long **)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_24EBC04AC@<X0>(uint64_t a1@<X8>)
{
  sub_24EC22460();
  uint64_t result = sub_24EC22650();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

double sub_24EBC0524@<D0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24EC21DC0();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_24EC22AA0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = sub_24EC22A80();
  MEMORY[0x270FA5388](v6 - 8);
  long long v9 = *a1;
  type metadata accessor for BrowseView();
  sub_24EBBF3BC();
  swift_getKeyPath();
  sub_24EC229E0();
  swift_release();
  swift_release();
  if (v9 == 1)
  {
    sub_24EC22A70();
    sub_24EC22A60();
    sub_24EC22A50();
    sub_24EC22A60();
    sub_24EC22A90();
    if (qword_269945EA0 == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  sub_24EC22A40();
  if (qword_269945EA0 != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  long long v10 = *a1;
  long long v11 = a1[1];
  long long v12 = a1[2];
  id v7 = (id)qword_269961E80;
  sub_24EBBF3BC();
  swift_getKeyPath();
  sub_24EC229E0();
  swift_release();
  swift_release();
  sub_24EC22610();
  sub_24EC224E0();
  double result = *(double *)&v10;
  *(_OWORD *)a2 = v10;
  *(_OWORD *)(a2 + 16) = v11;
  *(unsigned char *)(a2 + 32) = v12;
  return result;
}

uint64_t sub_24EBC08F0(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for BrowseAction();
  MEMORY[0x270FA5388](v10);
  long long v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = a1[1];
  long long v16 = *a1;
  long long v17 = v13;
  long long v18 = a1[2];
  uint64_t v19 = *((void *)a1 + 6);
  v15[0] = a2;
  v15[1] = a3;
  v15[2] = a4;
  v15[3] = a5;
  type metadata accessor for BrowseView();
  sub_24EBBF3BC();
  swift_storeEnumTagMultiPayload();
  sub_24EC229F0();
  swift_release();
  return sub_24EBC115C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for BrowseAction);
}

uint64_t sub_24EBC0A04()
{
  return sub_24EBC0B68((uint64_t (*)(void *, void, void, void, void))sub_24EBC08F0);
}

uint64_t sub_24EBC0A1C(uint64_t a1)
{
  return a1;
}

uint64_t sub_24EBC0A70()
{
  return swift_release();
}

uint64_t objectdestroy_2Tm()
{
  sub_24EB72454();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24EBC0B50()
{
  return sub_24EBC0B68((uint64_t (*)(void *, void, void, void, void))sub_24EBC0A70);
}

uint64_t sub_24EBC0B68(uint64_t (*a1)(void *, void, void, void, void))
{
  return a1(v1 + 6, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_24EBC0B80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EBC0BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

uint64_t sub_24EBC0BCC()
{
  sub_24EB72454();
  swift_release();
  return swift_release();
}

uint64_t sub_24EBC0C18(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24EB724BC();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = a2[3];
  uint64_t v7 = a2[6];
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  *(void *)(a1 + 48) = v7;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_24EBC0C98(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24EB724BC();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_24EB72454();
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = a2[6];
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_24EBC0D2C(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_24EB72454();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t sub_24EBC0D94(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24EBC0DDC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for BrowseView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24EBC0E40()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EBC1020(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for BrowseAction();
  MEMORY[0x270FA5388](v10);
  long long v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = a1[1];
  long long v16 = *a1;
  long long v17 = v13;
  long long v18 = a1[2];
  uint64_t v19 = *((void *)a1 + 6);
  v15[0] = a2;
  v15[1] = a3;
  v15[2] = a4;
  v15[3] = a5;
  type metadata accessor for BrowseView();
  sub_24EBBF3BC();
  swift_storeEnumTagMultiPayload();
  sub_24EC229F0();
  swift_release();
  return sub_24EBC115C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for BrowseAction);
}

uint64_t sub_24EBC1138()
{
  return sub_24EBC1020(*(long long **)(v0 + 48), *(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_24EBC115C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

double sub_24EBC11BC@<D0>(uint64_t a1@<X8>)
{
  return sub_24EBC0524(*(long long **)(v1 + 48), a1);
}

unint64_t sub_24EBC11D0()
{
  unint64_t result = qword_269947268;
  if (!qword_269947268)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269947260);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947268);
  }
  return result;
}

__n128 CreatePlanBannerFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a2 + 32) = result;
  return result;
}

uint64_t CreatePlanBannerFeature.dispose(localState:sharedState:)(uint64_t result)
{
  *(unsigned char *)(result + 56) = 1;
  return result;
}

void CreatePlanBannerFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, unint64_t *a3, unsigned __int8 *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947270);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v75 - v13;
  MEMORY[0x270FA5388](v15);
  long long v17 = (char *)v75 - v16;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v75 - v19;
  int v21 = *a4;
  long long v22 = v4[1];
  long long v88 = *v4;
  long long v89 = v22;
  long long v90 = v4[2];
  switch(v21)
  {
    case 5:
      if (*(unsigned char *)(a2 + 56) == 1)
      {
        uint64_t v36 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269947278);
        uint64_t v37 = &v14[v36[16]];
        uint64_t v81 = &v14[v36[20]];
        uint64_t v38 = &v14[v36[24]];
        char v87 = 3;
        unint64_t v86 = sub_24EBC1B70();
        sub_24EC22CE0();
        uint64_t v39 = *MEMORY[0x263F39590];
        uint64_t v40 = sub_24EC229D0();
        uint64_t v41 = *(void *)(v40 - 8);
        char v42 = *(void (**)(char *, void, uint64_t))(v41 + 104);
        unsigned int v85 = v39;
        uint64_t v83 = v42;
        uint64_t v84 = v40;
        uint64_t v82 = v41 + 104;
        ((void (*)(char *, uint64_t))v42)(v37, v39);
        *(void *)uint64_t v38 = &unk_269947288;
        *((void *)v38 + 1) = 0;
        sub_24EC22B90();
        uint64_t v43 = *MEMORY[0x263F39578];
        uint64_t v44 = sub_24EC229C0();
        uint64_t v45 = *(void *)(v44 - 8);
        unint64_t v46 = *(void (**)(char *, void, uint64_t))(v45 + 104);
        uint64_t v79 = v44;
        unint64_t v77 = v46;
        v75[1] = v45 + 104;
        ((void (*)(char *, uint64_t))v46)(v81, v43);
        uint64_t v47 = *(void (**)(void))(v9 + 104);
        LODWORD(v81) = *MEMORY[0x263F39530];
        uint64_t v80 = (void (*)(char *, void, uint64_t))v47;
        v47(v14);
        unint64_t v48 = *a3;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v48 = sub_24EBC33C8(0, *(void *)(v48 + 16) + 1, 1, v48, &qword_269947308, &qword_269947270);
        }
        unint64_t v50 = *(void *)(v48 + 16);
        unint64_t v49 = *(void *)(v48 + 24);
        if (v50 >= v49 >> 1) {
          unint64_t v48 = sub_24EBC33C8(v49 > 1, v50 + 1, 1, v48, &qword_269947308, &qword_269947270);
        }
        *(void *)(v48 + 16) = v50 + 1;
        unint64_t v52 = *(void (**)(unint64_t, char *, uint64_t))(v9 + 32);
        uint64_t v51 = v9 + 32;
        unint64_t v78 = (*(unsigned __int8 *)(v51 + 48) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 48);
        uint64_t v76 = *(void *)(v51 + 40);
        unint64_t v53 = v48 + v78 + v76 * v50;
        uint64_t v54 = v52;
        v52(v53, v14, v8);
        *a3 = v48;
        uint64_t v55 = &v11[v36[16]];
        uint64_t v56 = &v11[v36[20]];
        uint64_t v57 = &v11[v36[24]];
        char v87 = 1;
        sub_24EC22CE0();
        sub_24EC22B90();
        v83(v55, v85, v84);
        v77(v56, *MEMORY[0x263F39570], v79);
        uint64_t v58 = (_OWORD *)swift_allocObject();
        long long v59 = v89;
        v58[1] = v88;
        v58[2] = v59;
        v58[3] = v90;
        *(void *)uint64_t v57 = &unk_269947298;
        *((void *)v57 + 1) = v58;
        v80(v11, v81, v8);
        unint64_t v60 = *a3;
        sub_24EBC2F34((uint64_t)&v88);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v60 = sub_24EBC33C8(0, *(void *)(v60 + 16) + 1, 1, v60, &qword_269947308, &qword_269947270);
        }
        unint64_t v62 = *(void *)(v60 + 16);
        unint64_t v61 = *(void *)(v60 + 24);
        if (v62 >= v61 >> 1) {
          unint64_t v60 = sub_24EBC33C8(v61 > 1, v62 + 1, 1, v60, &qword_269947308, &qword_269947270);
        }
        *(void *)(v60 + 16) = v62 + 1;
        v54(v60 + v78 + v62 * v76, v11, v8);
        *a3 = v60;
      }
      break;
    case 4:
      uint64_t v63 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269947278);
      uint64_t v64 = &v17[v63[16]];
      uint64_t v65 = &v17[v63[20]];
      uint64_t v66 = &v17[v63[24]];
      char v87 = 0;
      sub_24EBC1B70();
      sub_24EC22CE0();
      uint64_t v67 = *MEMORY[0x263F39580];
      uint64_t v68 = sub_24EC229D0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v68 - 8) + 104))(v64, v67, v68);
      uint64_t v69 = (_OWORD *)swift_allocObject();
      long long v70 = v89;
      v69[1] = v88;
      v69[2] = v70;
      v69[3] = v90;
      *(void *)uint64_t v66 = &unk_2699472A8;
      *((void *)v66 + 1) = v69;
      sub_24EBC2F34((uint64_t)&v88);
      sub_24EC22B90();
      uint64_t v71 = *MEMORY[0x263F39578];
      uint64_t v72 = sub_24EC229C0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 104))(v65, v71, v72);
      (*(void (**)(char *, void, uint64_t))(v9 + 104))(v17, *MEMORY[0x263F39530], v8);
      unint64_t v33 = *a3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v33 = sub_24EBC33C8(0, *(void *)(v33 + 16) + 1, 1, v33, &qword_269947308, &qword_269947270);
      }
      unint64_t v74 = *(void *)(v33 + 16);
      unint64_t v73 = *(void *)(v33 + 24);
      if (v74 >= v73 >> 1) {
        unint64_t v33 = sub_24EBC33C8(v73 > 1, v74 + 1, 1, v33, &qword_269947308, &qword_269947270);
      }
      *(void *)(v33 + 16) = v74 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v33+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v74, v17, v8);
      goto LABEL_24;
    case 3:
      uint64_t v23 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269947278);
      uint64_t v24 = &v20[v23[16]];
      uint64_t v25 = &v20[v23[20]];
      long long v26 = &v20[v23[24]];
      char v87 = 2;
      sub_24EBC1B70();
      sub_24EC22CE0();
      uint64_t v27 = *MEMORY[0x263F39590];
      uint64_t v28 = sub_24EC229D0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v24, v27, v28);
      uint64_t v29 = (_OWORD *)swift_allocObject();
      long long v30 = v89;
      v29[1] = v88;
      v29[2] = v30;
      v29[3] = v90;
      *(void *)long long v26 = &unk_2699472B8;
      *((void *)v26 + 1) = v29;
      sub_24EBC2F34((uint64_t)&v88);
      sub_24EC22B90();
      uint64_t v31 = *MEMORY[0x263F39578];
      uint64_t v32 = sub_24EC229C0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(v25, v31, v32);
      (*(void (**)(char *, void, uint64_t))(v9 + 104))(v20, *MEMORY[0x263F39530], v8);
      unint64_t v33 = *a3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v33 = sub_24EBC33C8(0, *(void *)(v33 + 16) + 1, 1, v33, &qword_269947308, &qword_269947270);
      }
      unint64_t v35 = *(void *)(v33 + 16);
      unint64_t v34 = *(void *)(v33 + 24);
      if (v35 >= v34 >> 1) {
        unint64_t v33 = sub_24EBC33C8(v34 > 1, v35 + 1, 1, v33, &qword_269947308, &qword_269947270);
      }
      *(void *)(v33 + 16) = v35 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v33+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v35, v20, v8);
LABEL_24:
      *a3 = v33;
      return;
    default:
      *(unsigned char *)(a2 + 56) = v21;
      break;
  }
}

unint64_t sub_24EBC1B70()
{
  unint64_t result = qword_269947280;
  if (!qword_269947280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947280);
  }
  return result;
}

uint64_t sub_24EBC1BC4(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = sub_24EC22B80();
  v2[4] = sub_24EC22B70();
  char v6 = (uint64_t (*)(void *))(*(void *)(a2 + 32) + **(int **)(a2 + 32));
  char v4 = (void *)swift_task_alloc();
  v2[5] = v4;
  *char v4 = v2;
  v4[1] = sub_24EBC1CC0;
  return v6(v2 + 10);
}

uint64_t sub_24EBC1CC0()
{
  long long v2 = (void *)*v1;
  v2[6] = v0;
  swift_task_dealloc();
  uint64_t v4 = sub_24EC22B50();
  v2[7] = v4;
  v2[8] = v3;
  if (v0) {
    uint64_t v5 = sub_24EBC2064;
  }
  else {
    uint64_t v5 = sub_24EBC1E20;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24EBC1E20()
{
  *(unsigned char *)(v0 + 81) = *(unsigned char *)(v0 + 80);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947300);
  void *v1 = v0;
  v1[1] = sub_24EBC1EE0;
  return MEMORY[0x270F252C8](v0 + 81, v2);
}

uint64_t sub_24EBC1EE0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return MEMORY[0x270FA2498](sub_24EBC2000, v3, v2);
}

uint64_t sub_24EBC2000()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EBC2064()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EBC20C8(uint64_t a1, uint64_t a2)
{
  v2[2] = sub_24EC22B80();
  v2[3] = sub_24EC22B70();
  char v6 = (uint64_t (*)(void))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24EBC21B0;
  return v6();
}

uint64_t sub_24EBC21B0()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_24EC22B50();
  if (v0) {
    uint64_t v4 = sub_24EBC2370;
  }
  else {
    uint64_t v4 = sub_24EBC230C;
  }
  return MEMORY[0x270FA2498](v4, v3, v2);
}

uint64_t sub_24EBC230C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EBC2370()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EBC23D4()
{
  *(void *)(v0 + 16) = sub_24EC22B80();
  *(void *)(v0 + 24) = sub_24EC22B70();
  *(unsigned char *)(v0 + 40) = 3;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947300);
  void *v1 = v0;
  v1[1] = sub_24EBC24B0;
  return MEMORY[0x270F252C8](v0 + 40, v2);
}

uint64_t sub_24EBC24B0()
{
  swift_task_dealloc();
  uint64_t v1 = sub_24EC22B50();
  return MEMORY[0x270FA2498](sub_24EBC3C58, v1, v0);
}

uint64_t sub_24EBC25EC(uint64_t a1, void *a2)
{
  v2[12] = a1;
  v2[13] = sub_24EC22B80();
  v2[14] = sub_24EC22B70();
  uint64_t v6 = (uint64_t (*)(void *))(*a2 + *(int *)*a2);
  uint64_t v4 = (void *)swift_task_alloc();
  v2[15] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24EBC26E8;
  return v6(v2 + 7);
}

uint64_t sub_24EBC26E8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v3 = sub_24EC22B50();
  *(void *)(v1 + 128) = v3;
  *(void *)(v1 + 136) = v2;
  return MEMORY[0x270FA2498](sub_24EBC282C, v3, v2);
}

uint64_t sub_24EBC282C()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[5] = swift_getAssociatedTypeWitness();
  v0[6] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  sub_24EC22BD0();
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  uint64_t v5 = sub_24EC22B70();
  v0[18] = v5;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v0[5]);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[19] = (uint64_t)v6;
  void *v6 = v0;
  v6[1] = sub_24EBC2A1C;
  uint64_t v7 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 21, v5, v7);
}

uint64_t sub_24EBC2A1C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 136);
  uint64_t v3 = *(void *)(v1 + 128);
  return MEMORY[0x270FA2498](sub_24EBC2B60, v3, v2);
}

uint64_t sub_24EBC2B60()
{
  if (*(unsigned char *)(v0 + 168) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    *(unsigned char *)(v0 + 169) = 3;
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v3;
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947300);
    *uint64_t v3 = v0;
    v3[1] = sub_24EBC2C78;
    return MEMORY[0x270F252C8](v0 + 169, v4);
  }
}

uint64_t sub_24EBC2C78()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 136);
  uint64_t v3 = *(void *)(v1 + 128);
  return MEMORY[0x270FA2498](sub_24EBC2D98, v3, v2);
}

uint64_t sub_24EBC2D98()
{
  uint64_t v1 = sub_24EC22B70();
  v0[18] = v1;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v0[5]);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[19] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24EBC2A1C;
  uint64_t v3 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 21, v1, v3);
}

void sub_24EBC2E84(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a2 + 56) = 1;
}

uint64_t sub_24EBC2E98(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24EBC3C54;
  return sub_24EBC25EC(a1, (void *)(v1 + 16));
}

uint64_t sub_24EBC2F34(uint64_t a1)
{
  return a1;
}

uint64_t sub_24EBC2F84(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24EBBC9C4;
  return sub_24EBC20C8(a1, v1 + 16);
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24EBC306C(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24EBC3C54;
  return sub_24EBC1BC4(a1, v1 + 16);
}

unint64_t sub_24EBC310C()
{
  unint64_t result = qword_2699472C0;
  if (!qword_2699472C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699472C0);
  }
  return result;
}

unint64_t sub_24EBC3164()
{
  unint64_t result = qword_2699472C8;
  if (!qword_2699472C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699472C8);
  }
  return result;
}

unint64_t sub_24EBC31BC()
{
  unint64_t result = qword_2699472D0;
  if (!qword_2699472D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699472D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CreatePlanBannerFeature()
{
  return &type metadata for CreatePlanBannerFeature;
}

unsigned char *storeEnumTagSinglePayload for CreatePlanBannerFeature.TaskIdentifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBC32F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CreatePlanBannerFeature.TaskIdentifier()
{
  return &type metadata for CreatePlanBannerFeature.TaskIdentifier;
}

unint64_t sub_24EBC332C()
{
  unint64_t result = qword_2699472D8;
  if (!qword_2699472D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699472D8);
  }
  return result;
}

uint64_t sub_24EBC3380(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24EBC3668(a1, a2, a3, a4, &qword_2699472E8, (uint64_t (*)(void))type metadata accessor for BrowseSectionDescriptor, (uint64_t (*)(void))type metadata accessor for BrowseSectionDescriptor);
}

uint64_t sub_24EBC33B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24EBC33C8(a1, a2, a3, a4, &qword_2699472F0, &qword_2699472F8);
}

uint64_t sub_24EBC33C8(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = sub_24EC22DC0();
    __break(1u);
    return result;
  }
  _OWORD v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24EBC38EC(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_24EBC3634(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24EBC3668(a1, a2, a3, a4, &qword_2699472E0, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem, (uint64_t (*)(void))type metadata accessor for BrowseLazyItem);
}

uint64_t sub_24EBC3668(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    BOOL v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  BOOL v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_24EC22DC0();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24EBC3A44(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_24EBC38EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_24EC22DD0();
  __break(1u);
  return result;
}

uint64_t sub_24EBC3A44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_24EC22DD0();
  __break(1u);
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

BOOL static BrowseGalleryDestination.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_24EBC3C6C(char a1)
{
  if (a1) {
    return 0x5472656E69617274;
  }
  else {
    return 0x6169726F74696465;
  }
}

uint64_t sub_24EBC3CB0()
{
  return sub_24EBC3C6C(*v0);
}

uint64_t sub_24EBC3CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBC42CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBC3CE0(uint64_t a1)
{
  unint64_t v2 = sub_24EBC40F8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBC3D1C(uint64_t a1)
{
  unint64_t v2 = sub_24EBC40F8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBC3D58(uint64_t a1)
{
  unint64_t v2 = sub_24EBC41A0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBC3D94(uint64_t a1)
{
  unint64_t v2 = sub_24EBC41A0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBC3DD0(uint64_t a1)
{
  unint64_t v2 = sub_24EBC414C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBC3E0C(uint64_t a1)
{
  unint64_t v2 = sub_24EBC414C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseGalleryDestination.encode(to:)(void *a1, int a2)
{
  int v18 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947310);
  uint64_t v16 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947318);
  uint64_t v6 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947320);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBC40F8();
  sub_24EC23050();
  unint64_t v13 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  if (v18)
  {
    char v20 = 1;
    sub_24EBC414C();
    sub_24EC22EC0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    char v19 = 0;
    sub_24EBC41A0();
    sub_24EC22EC0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  }
  return (*v13)(v12, v9);
}

unint64_t sub_24EBC40F8()
{
  unint64_t result = qword_269947328;
  if (!qword_269947328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947328);
  }
  return result;
}

unint64_t sub_24EBC414C()
{
  unint64_t result = qword_269947330;
  if (!qword_269947330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947330);
  }
  return result;
}

unint64_t sub_24EBC41A0()
{
  unint64_t result = qword_269947338;
  if (!qword_269947338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947338);
  }
  return result;
}

uint64_t BrowseGalleryDestination.init(from:)(uint64_t a1)
{
  return sub_24EBC43D0(a1) & 1;
}

uint64_t sub_24EBC4210@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_24EBC43D0(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_24EBC4240(void *a1)
{
  return BrowseGalleryDestination.encode(to:)(a1, *v1);
}

uint64_t BrowseGalleryDestination.hash(into:)()
{
  return sub_24EC23000();
}

uint64_t BrowseGalleryDestination.hashValue.getter()
{
  return sub_24EC23030();
}

uint64_t sub_24EBC42CC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6169726F74696465 && a2 == 0xE90000000000006CLL;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5472656E69617274 && a2 == 0xEB00000000737069)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EBC43D0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947380);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947388);
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947390);
  uint64_t v24 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)a1, *(void *)(a1 + 24));
  sub_24EBC40F8();
  uint64_t v12 = v26;
  sub_24EC23040();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v13 = v25;
  uint64_t v21 = v6;
  uint64_t v26 = a1;
  uint64_t v14 = sub_24EC22EA0();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v16 = sub_24EC22D50();
    swift_allocError();
    int v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269946108);
    *int v18 = &type metadata for BrowseGalleryDestination;
    sub_24EC22E10();
    sub_24EC22D40();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x263F8DCB0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
    a1 = v26;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1(a1);
    return a1;
  }
  a1 = *(unsigned __int8 *)(v14 + 32);
  if (a1)
  {
    LODWORD(v25) = *(unsigned __int8 *)(v14 + 32);
    char v28 = 1;
    sub_24EBC414C();
    sub_24EC22E00();
    uint64_t v15 = v24;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v9);
    a1 = v25;
  }
  else
  {
    char v27 = 0;
    sub_24EBC41A0();
    sub_24EC22E00();
    uint64_t v19 = v24;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
  }
  __swift_destroy_boxed_opaque_existential_1(v26);
  return a1;
}

unint64_t sub_24EBC4824()
{
  unint64_t result = qword_269947340;
  if (!qword_269947340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947340);
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseGalleryDestination()
{
  return &type metadata for BrowseGalleryDestination;
}

unsigned char *_s15FitnessBrowsing24BrowseGalleryDestinationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBC4958);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseGalleryDestination.CodingKeys()
{
  return &type metadata for BrowseGalleryDestination.CodingKeys;
}

ValueMetadata *type metadata accessor for BrowseGalleryDestination.EditorialCodingKeys()
{
  return &type metadata for BrowseGalleryDestination.EditorialCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseGalleryDestination.TrainerTipsCodingKeys()
{
  return &type metadata for BrowseGalleryDestination.TrainerTipsCodingKeys;
}

unint64_t sub_24EBC49B4()
{
  unint64_t result = qword_269947348;
  if (!qword_269947348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947348);
  }
  return result;
}

unint64_t sub_24EBC4A0C()
{
  unint64_t result = qword_269947350;
  if (!qword_269947350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947350);
  }
  return result;
}

unint64_t sub_24EBC4A64()
{
  unint64_t result = qword_269947358;
  if (!qword_269947358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947358);
  }
  return result;
}

unint64_t sub_24EBC4ABC()
{
  unint64_t result = qword_269947360;
  if (!qword_269947360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947360);
  }
  return result;
}

unint64_t sub_24EBC4B14()
{
  unint64_t result = qword_269947368;
  if (!qword_269947368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947368);
  }
  return result;
}

unint64_t sub_24EBC4B6C()
{
  unint64_t result = qword_269947370;
  if (!qword_269947370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947370);
  }
  return result;
}

unint64_t sub_24EBC4BC4()
{
  unint64_t result = qword_269947378;
  if (!qword_269947378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947378);
  }
  return result;
}

void *static BrowseFontSymbolicTrait.allCases.getter()
{
  return &unk_270083A80;
}

uint64_t BrowseFontSymbolicTrait.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000011;
  }
  else {
    return 0x6C6F427469617274;
  }
}

uint64_t sub_24EBC4C80(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = BrowseFontSymbolicTrait.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == BrowseFontSymbolicTrait.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_24EC22F70();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24EBC4D0C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s15FitnessBrowsing23BrowseFontSymbolicTraitO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_24EBC4D3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = BrowseFontSymbolicTrait.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_24EBC4D68(void *a1@<X8>)
{
  *a1 = &unk_270083AA8;
}

uint64_t sub_24EBC4D78()
{
  return sub_24EC22B00();
}

uint64_t sub_24EBC4DD8()
{
  return sub_24EC22AF0();
}

uint64_t sub_24EBC4E28()
{
  char v1 = *v0;
  sub_24EC22FF0();
  BrowseFontSymbolicTrait.rawValue.getter(v1);
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  return sub_24EC23030();
}

uint64_t sub_24EBC4E8C()
{
  BrowseFontSymbolicTrait.rawValue.getter(*v0);
  sub_24EC22AB0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EBC4EE0()
{
  char v1 = *v0;
  sub_24EC22FF0();
  BrowseFontSymbolicTrait.rawValue.getter(v1);
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  return sub_24EC23030();
}

uint64_t _s15FitnessBrowsing23BrowseFontSymbolicTraitO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_24EC22DF0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_24EBC4F90()
{
  unint64_t result = qword_269947398;
  if (!qword_269947398)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699473A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947398);
  }
  return result;
}

unint64_t sub_24EBC4FF0()
{
  unint64_t result = qword_2699473A8;
  if (!qword_2699473A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699473A8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BrowseFontSymbolicTrait(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBC5110);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseFontSymbolicTrait()
{
  return &type metadata for BrowseFontSymbolicTrait;
}

unint64_t sub_24EBC5148()
{
  unint64_t result = qword_2699473B0;
  if (!qword_2699473B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699473B0);
  }
  return result;
}

uint64_t NewAndFeaturedItemContext.identifier.getter()
{
  uint64_t v1 = *v0;
  sub_24EBBC8CC();
  return v1;
}

uint64_t NewAndFeaturedItemContext.hash(into:)()
{
  sub_24EC23000();
  return sub_24EC22AB0();
}

uint64_t sub_24EBC5234(char a1)
{
  if (a1) {
    return 0x6C6F686563616C70;
  }
  else {
    return 1835365481;
  }
}

uint64_t sub_24EBC526C()
{
  return sub_24EBC5234(*v0);
}

uint64_t sub_24EBC5274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBC6678(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBC529C(uint64_t a1)
{
  unint64_t v2 = sub_24EBC5E5C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBC52D8(uint64_t a1)
{
  unint64_t v2 = sub_24EBC5E5C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBC5318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBC6780(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EBC5344(uint64_t a1)
{
  unint64_t v2 = sub_24EBC5F04();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBC5380(uint64_t a1)
{
  unint64_t v2 = sub_24EBC5F04();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBC53BC(uint64_t a1)
{
  unint64_t v2 = sub_24EBC5EB0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBC53F8(uint64_t a1)
{
  unint64_t v2 = sub_24EBC5EB0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t NewAndFeaturedItemContext.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699473B8);
  uint64_t v20 = *(void *)(v3 - 8);
  uint64_t v21 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699473C0);
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699473C8);
  uint64_t v9 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v1;
  uint64_t v22 = v1[1];
  uint64_t v23 = v12;
  char v13 = *((unsigned char *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBC5E5C();
  sub_24EC23050();
  if (v13)
  {
    char v26 = 1;
    sub_24EBC5EB0();
    uint64_t v14 = v24;
    sub_24EC22EC0();
    uint64_t v15 = v21;
    sub_24EC22F00();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v15);
  }
  else
  {
    char v25 = 0;
    sub_24EBC5F04();
    uint64_t v14 = v24;
    sub_24EC22EC0();
    uint64_t v16 = v19;
    sub_24EC22F00();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v16);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v14);
}

uint64_t NewAndFeaturedItemContext.hashValue.getter()
{
  return sub_24EC23030();
}

uint64_t NewAndFeaturedItemContext.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699473E8);
  uint64_t v38 = *(void *)(v3 - 8);
  uint64_t v39 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699473F0);
  uint64_t v37 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699473F8);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v40 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_24EBC5E5C();
  uint64_t v14 = v41;
  sub_24EC23040();
  if (v14) {
    goto LABEL_6;
  }
  uint64_t v35 = v6;
  uint64_t v15 = v39;
  uint64_t v41 = v10;
  uint64_t v16 = v12;
  uint64_t v17 = sub_24EC22EA0();
  if (*(void *)(v17 + 16) != 1)
  {
    uint64_t v19 = sub_24EC22D50();
    swift_allocError();
    uint64_t v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269946108);
    *uint64_t v21 = &type metadata for NewAndFeaturedItemContext;
    sub_24EC22E10();
    sub_24EC22D40();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, *MEMORY[0x263F8DCB0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v9);
LABEL_6:
    uint64_t v22 = (uint64_t)v40;
    return __swift_destroy_boxed_opaque_existential_1(v22);
  }
  uint64_t v34 = v17;
  char v18 = *(unsigned char *)(v17 + 32);
  if (v18)
  {
    char v43 = 1;
    sub_24EBC5EB0();
    sub_24EC22E00();
    uint64_t v26 = sub_24EC22E50();
    uint64_t v28 = v27;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v5, v15);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v9);
  }
  else
  {
    char v42 = 0;
    sub_24EBC5F04();
    uint64_t v24 = v8;
    char v25 = v16;
    sub_24EC22E00();
    uint64_t v29 = v35;
    uint64_t v30 = sub_24EC22E50();
    uint64_t v28 = v31;
    uint64_t v32 = v24;
    uint64_t v26 = v30;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v32, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v25, v9);
  }
  uint64_t v22 = (uint64_t)v40;
  unint64_t v33 = v36;
  *uint64_t v36 = v26;
  v33[1] = v28;
  *((unsigned char *)v33 + 16) = v18;
  return __swift_destroy_boxed_opaque_existential_1(v22);
}

uint64_t sub_24EBC5C20@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return NewAndFeaturedItemContext.init(from:)(a1, a2);
}

uint64_t sub_24EBC5C38(void *a1)
{
  return NewAndFeaturedItemContext.encode(to:)(a1);
}

uint64_t sub_24EBC5C50()
{
  return sub_24EC23030();
}

uint64_t sub_24EBC5CB4()
{
  sub_24EC23000();
  return sub_24EC22AB0();
}

uint64_t sub_24EBC5D08()
{
  return sub_24EC23030();
}

uint64_t _s15FitnessBrowsing25NewAndFeaturedItemContextO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (a1[2])
  {
    if (a2[2])
    {
      if (v2 != v4 || v3 != v5)
      {
LABEL_15:
        char v7 = sub_24EC22F70();
        goto LABEL_17;
      }
LABEL_16:
      char v7 = 1;
      goto LABEL_17;
    }
  }
  else if ((a2[2] & 1) == 0)
  {
    if (v2 != v4 || v3 != v5) {
      goto LABEL_15;
    }
    goto LABEL_16;
  }
  char v7 = 0;
LABEL_17:
  sub_24EBBC8CC();
  sub_24EBBC8CC();
  sub_24EBBC584();
  sub_24EBBC584();
  return v7 & 1;
}

unint64_t sub_24EBC5E5C()
{
  unint64_t result = qword_2699473D0;
  if (!qword_2699473D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699473D0);
  }
  return result;
}

unint64_t sub_24EBC5EB0()
{
  unint64_t result = qword_2699473D8;
  if (!qword_2699473D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699473D8);
  }
  return result;
}

unint64_t sub_24EBC5F04()
{
  unint64_t result = qword_2699473E0;
  if (!qword_2699473E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699473E0);
  }
  return result;
}

unint64_t sub_24EBC5F5C()
{
  unint64_t result = qword_26B1D8A38;
  if (!qword_26B1D8A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D8A38);
  }
  return result;
}

uint64_t destroy for NewAndFeaturedItemContext()
{
  return sub_24EBBC584();
}

uint64_t _s15FitnessBrowsing25NewAndFeaturedItemContextOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_24EBBC8CC();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for NewAndFeaturedItemContext(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_24EBBC8CC();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_24EBBC584();
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for NewAndFeaturedItemContext(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_24EBBC584();
  return a1;
}

uint64_t getEnumTagSinglePayload for NewAndFeaturedItemContext(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NewAndFeaturedItemContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24EBC6150(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_24EBC6158(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for NewAndFeaturedItemContext()
{
  return &type metadata for NewAndFeaturedItemContext;
}

unsigned char *storeEnumTagSinglePayload for NewAndFeaturedItemContext.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBC6240);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewAndFeaturedItemContext.CodingKeys()
{
  return &type metadata for NewAndFeaturedItemContext.CodingKeys;
}

ValueMetadata *type metadata accessor for NewAndFeaturedItemContext.ItemCodingKeys()
{
  return &type metadata for NewAndFeaturedItemContext.ItemCodingKeys;
}

unsigned char *_s15FitnessBrowsing25NewAndFeaturedItemContextO14ItemCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EBC6328);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NewAndFeaturedItemContext.PlaceholderCodingKeys()
{
  return &type metadata for NewAndFeaturedItemContext.PlaceholderCodingKeys;
}

unint64_t sub_24EBC6364()
{
  unint64_t result = qword_269947400;
  if (!qword_269947400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947400);
  }
  return result;
}

unint64_t sub_24EBC63BC()
{
  unint64_t result = qword_269947408;
  if (!qword_269947408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947408);
  }
  return result;
}

unint64_t sub_24EBC6414()
{
  unint64_t result = qword_269947410;
  if (!qword_269947410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947410);
  }
  return result;
}

unint64_t sub_24EBC646C()
{
  unint64_t result = qword_269947418;
  if (!qword_269947418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947418);
  }
  return result;
}

unint64_t sub_24EBC64C4()
{
  unint64_t result = qword_269947420;
  if (!qword_269947420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947420);
  }
  return result;
}

unint64_t sub_24EBC651C()
{
  unint64_t result = qword_269947428;
  if (!qword_269947428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947428);
  }
  return result;
}

unint64_t sub_24EBC6574()
{
  unint64_t result = qword_269947430;
  if (!qword_269947430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947430);
  }
  return result;
}

unint64_t sub_24EBC65CC()
{
  unint64_t result = qword_269947438;
  if (!qword_269947438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947438);
  }
  return result;
}

unint64_t sub_24EBC6624()
{
  unint64_t result = qword_269947440;
  if (!qword_269947440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269947440);
  }
  return result;
}

uint64_t sub_24EBC6678(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1835365481 && a2 == 0xE400000000000000;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F686563616C70 && a2 == 0xEB00000000726564)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EBC6764()
{
  return 0x696669746E656469;
}

uint64_t sub_24EBC6780(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24EBC6814(uint64_t a1)
{
  return a1;
}

uint64_t NewAndFeaturedFeature.environment.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  *(void *)a1 = *(void *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  *(void *)(a1 + 56) = v2;
  swift_retain();
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t sub_24EBC68C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 2:
      sub_24EC23000();
      sub_24EC23000();
      goto LABEL_7;
    case 4:
      sub_24EC23000();
      uint64_t result = sub_24EC22AB0();
      break;
    default:
      sub_24EC23000();
LABEL_7:
      uint64_t result = sub_24EC23000();
      break;
  }
  return result;
}

uint64_t sub_24EBC69DC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a3)
  {
    case 1:
      uint64_t result = a6 == 1 && ((a4 ^ a1) & 1) == 0;
      break;
    case 2:
      uint64_t result = a6 == 2 && a1 == a4 && ((a5 ^ a2) & 1) == 0;
      break;
    case 3:
      uint64_t result = a6 == 3 && ((a4 ^ a1) & 1) == 0;
      break;
    case 4:
      if (a6 == 4)
      {
        if (a1 == a4 && a2 == a5) {
          uint64_t result = 1;
        }
        else {
          uint64_t result = sub_24EC22F70();
        }
      }
      else
      {
        uint64_t result = 0;
      }
      break;
    case 5:
      uint64_t result = a6 == 5 && ((a4 ^ a1) & 1) == 0;
      break;
    case 6:
      uint64_t result = a6 == 6 && ((a4 ^ a1) & 1) == 0;
      break;
    case 7:
      uint64_t result = a6 == 7 && ((a4 ^ a1) & 1) == 0;
      break;
    default:
      if (a6) {
        uint64_t result = 0;
      }
      else {
        uint64_t result = ((a4 ^ a1) & 1) == 0;
      }
      break;
  }
  return result;
}

uint64_t sub_24EBC6B20(uint64_t a1, uint64_t a2, char a3)
{
  sub_24EC22FF0();
  sub_24EBC68C8((uint64_t)v7, a1, a2, a3);
  return sub_24EC23030();
}

uint64_t sub_24EBC6C28()
{
  return sub_24EBC6B20(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_24EBC6C8C(uint64_t a1)
{
  return sub_24EBC68C8(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

uint64_t sub_24EBC6CE0()
{
  sub_24EC22FF0();
  sub_24EBC68C8((uint64_t)v2, *(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
  return sub_24EC23030();
}

uint64_t sub_24EBC6D50(uint64_t a1, uint64_t a2)
{
  return sub_24EBC69DC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16)) & 1;
}

__n128 NewAndFeaturedFeature.init(environment:fetchItemForPlaceholders:mediaType:)@<Q0>(__n128 *a1@<X0>, char a2@<W3>, __n128 *a3@<X8>)
{
  unsigned __int8 v11 = a2 & 1;
  sub_24EBA93F4();
  sub_24EBA9448();
  sub_24EBA949C();
  sub_24EC21EF0();
  swift_getWitnessTable();
  sub_24EC21F20();
  sub_24EC220A0();
  swift_retain();
  __n128 v9 = a1[1];
  __n128 v10 = *a1;
  __n128 v7 = a1[3];
  __n128 v8 = a1[2];
  sub_24EC22090();
  uint64_t v5 = sub_24EC21F10();
  swift_release();
  *a3 = v10;
  a3[1] = v9;
  __n128 result = v7;
  a3[2] = v8;
  a3[3] = v7;
  a3[4].n128_u64[0] = v5;
  a3[4].n128_u8[8] = v11;
  return result;
}

uint64_t NewAndFeaturedFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v276 = a4;
  uint64_t v272 = a3;
  uint64_t v273 = a2;
  uint64_t v6 = sub_24EC22020();
  uint64_t v265 = *(void *)(v6 - 8);
  uint64_t v266 = (char *)v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v260 = (char *)&v251 - ((unint64_t)(v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v258 = v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v264 = (char *)&v251 - v9;
  uint64_t v10 = sub_24EC21EA0();
  uint64_t v256 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v259 = (uint64_t)&v251 - ((unint64_t)(v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v257 = v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v268 = (char *)&v251 - v13;
  uint64_t v282 = (_OWORD *)a5[8];
  uint64_t v263 = (char *)*((void *)v282 - 1);
  MEMORY[0x270FA5388](v14);
  uint64_t v262 = (char *)&v251 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v255 = v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v267 = (char *)&v251 - v17;
  uint64_t v19 = (char *)a5[2];
  uint64_t v21 = a5[4];
  uint64_t v20 = (ValueMetadata *)a5[5];
  uint64_t v290 = a5[3];
  uint64_t v18 = v290;
  uint64_t v291 = v21;
  uint64_t v292 = v20;
  unint64_t v293 = v19;
  uint64_t v23 = (char *)a5[10];
  uint64_t v288 = (_OWORD *)a5[7];
  uint64_t v22 = v288;
  uint64_t v289 = v23;
  uint64_t v24 = (char *)a5[11];
  unint64_t v287 = a5[12];
  char v25 = (char *)v287;
  uint64_t v284 = (char *)a5[13];
  uint64_t v285 = v24;
  unint64_t v26 = sub_24EBA93F4();
  uint64_t v281 = (char *)v26;
  unint64_t v27 = sub_24EBA9448();
  unint64_t v280 = sub_24EBA949C();
  uint64_t v28 = (char *)a5[14];
  uint64_t v29 = a5[17];
  uint64_t v283 = a5[16];
  uint64_t v286 = v29;
  uint64_t v30 = a5[19];
  v297 = v19;
  uint64_t v298 = v18;
  uint64_t v299 = v21;
  v300 = &type metadata for NewAndFeaturedItemContext;
  uint64_t v31 = v292;
  p_Kind = &v292->Kind;
  uint64_t v302 = v22;
  uint64_t v32 = v282;
  unint64_t v33 = v289;
  unint64_t v303 = v282;
  unint64_t v304 = v289;
  uint64_t v34 = v285;
  unint64_t v305 = v285;
  unint64_t v306 = v25;
  uint64_t v35 = v284;
  unint64_t v307 = (unint64_t)v284;
  unint64_t v308 = v26;
  v309 = (char *)v27;
  unint64_t v310 = (char *)v280;
  v311 = v28;
  unint64_t v312 = v283;
  uint64_t v36 = v28;
  uint64_t v313 = v29;
  uint64_t v314 = v30;
  uint64_t State = type metadata accessor for NewAndFeaturedLoadState();
  uint64_t v269 = *(void *)(State - 8);
  MEMORY[0x270FA5388](State);
  int v261 = (char *)&v251 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  uint64_t v253 = (char *)&v251 - v39;
  v297 = v293;
  uint64_t v298 = v290;
  uint64_t v299 = v291;
  v300 = &type metadata for NewAndFeaturedItemContext;
  p_Kind = &v31->Kind;
  uint64_t v302 = v288;
  unint64_t v303 = v32;
  unint64_t v304 = v33;
  unint64_t v305 = v34;
  unint64_t v306 = (char *)v287;
  unint64_t v307 = (unint64_t)v35;
  unint64_t v308 = (unint64_t)v281;
  v309 = (char *)v27;
  uint64_t WitnessTable = (char *)v27;
  uint64_t v278 = v30;
  unint64_t v310 = (char *)v280;
  v311 = v36;
  uint64_t v279 = (uint64_t)v36;
  unint64_t v312 = v283;
  uint64_t v313 = v286;
  uint64_t v314 = v30;
  uint64_t v40 = type metadata accessor for NewAndFeaturedAction();
  uint64_t v41 = sub_24EC22990();
  uint64_t v270 = *(void *)(v41 - 8);
  uint64_t v271 = v41;
  MEMORY[0x270FA5388](v41);
  char v43 = (char *)&v251 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v44);
  unint64_t v46 = (char *)&v251 - v45;
  uint64_t v47 = sub_24EC21DF0();
  uint64_t v254 = *(void *)(v47 - 8);
  uint64_t v48 = *(void *)(v254 + 64);
  MEMORY[0x270FA5388](v47);
  unint64_t v49 = (char *)&v251 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v50);
  unint64_t v52 = (char *)&v251 - v51;
  MEMORY[0x270FA5388](v53);
  uint64_t v55 = (char *)&v251 - v54;
  long long v56 = v275[3];
  long long v321 = v275[2];
  *(_OWORD *)v322 = v56;
  *(_OWORD *)&v322[9] = *(_OWORD *)((char *)v275 + 57);
  long long v57 = v275[1];
  long long v319 = *v275;
  long long v320 = v57;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))((char *)&v251 - v54, v276, v40);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v266 = v43;
      uint64_t v86 = *((void *)v55 + 1);
      uint64_t v275 = *(_OWORD **)v55;
      uint64_t v276 = v86;
      LODWORD(v268) = v55[16];
      char v87 = (char *)a5[6];
      long long v88 = (char *)a5[9];
      long long v89 = (char *)a5[15];
      uint64_t v90 = a5[18];
      v297 = v293;
      uint64_t v91 = v289;
      uint64_t v298 = v290;
      uint64_t v299 = v291;
      v300 = &type metadata for NewAndFeaturedItemContext;
      p_Kind = &v292->Kind;
      uint64_t v302 = v87;
      uint64_t v267 = v87;
      uint64_t v93 = (char *)v287;
      uint64_t v92 = v288;
      uint64_t v94 = v282;
      unint64_t v303 = v288;
      unint64_t v304 = (char *)v282;
      uint64_t v263 = v88;
      uint64_t v264 = v89;
      unint64_t v305 = v88;
      unint64_t v306 = v289;
      uint64_t v95 = v284;
      uint64_t v96 = v285;
      unint64_t v307 = (unint64_t)v285;
      unint64_t v308 = v287;
      v309 = v284;
      unint64_t v310 = v281;
      uint64_t v97 = v278;
      v311 = WitnessTable;
      unint64_t v312 = v280;
      uint64_t v313 = v279;
      uint64_t v314 = (uint64_t)v89;
      uint64_t v315 = v283;
      unint64_t v98 = v286;
      uint64_t v316 = v286;
      uint64_t v265 = v90;
      uint64_t v317 = v90;
      uint64_t v318 = v278;
      uint64_t v99 = type metadata accessor for NewAndFeaturedState();
      uint64_t v100 = v253;
      (*(void (**)(char *, char *, uint64_t))(v269 + 16))(v253, &v273[*(int *)(v99 + 212)], State);
      v297 = v293;
      uint64_t v298 = v290;
      uint64_t v299 = v291;
      v300 = &type metadata for NewAndFeaturedItemContext;
      p_Kind = &v292->Kind;
      uint64_t v302 = v94;
      unint64_t v303 = v92;
      uint64_t v101 = v92;
      unint64_t v304 = v91;
      unint64_t v305 = v96;
      unint64_t v306 = v93;
      unint64_t v307 = (unint64_t)v95;
      uint64_t v102 = (char *)v283;
      unint64_t v308 = (unint64_t)v281;
      v309 = WitnessTable;
      uint64_t v103 = (char *)v279;
      unint64_t v310 = (char *)v280;
      v311 = (char *)v279;
      unint64_t v312 = v98;
      uint64_t v313 = v283;
      uint64_t v314 = v97;
      uint64_t v104 = sub_24EC22080();
      uint64_t v105 = *(void *)(v104 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v100, 2, v104))
      {
        (*(void (**)(char *, uint64_t))(v105 + 8))(v100, v104);
        uint64_t v230 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269947278);
        uint64_t v231 = v266;
        unint64_t v280 = (unint64_t)&v266[v230[12]];
        uint64_t State = (uint64_t)&v266[v230[16]];
        uint64_t v281 = &v266[v230[20]];
        uint64_t WitnessTable = &v266[v230[24]];
        uint64_t v294 = v275;
        uint64_t v295 = v276;
        char v296 = 4;
        uint64_t v232 = v290;
        v297 = v293;
        uint64_t v298 = v290;
        uint64_t v299 = v291;
        v300 = v292;
        p_Kind = v267;
        uint64_t v302 = v101;
        uint64_t v233 = v263;
        uint64_t v234 = v264;
        unint64_t v303 = v282;
        unint64_t v304 = v263;
        uint64_t v235 = v284;
        unint64_t v305 = v289;
        unint64_t v306 = v285;
        unint64_t v307 = v287;
        unint64_t v308 = (unint64_t)v284;
        v309 = v103;
        unint64_t v310 = v264;
        v311 = v102;
        unint64_t v312 = v286;
        uint64_t v236 = v265;
        uint64_t v237 = v278;
        uint64_t v313 = v265;
        uint64_t v314 = v278;
        type metadata accessor for NewAndFeaturedFeature.TaskIdentifier();
        uint64_t v238 = v102;
        swift_getWitnessTable();
        sub_24EC22DE0();
        uint64_t v239 = *MEMORY[0x263F39580];
        uint64_t v240 = sub_24EC229D0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v240 - 8) + 104))(State, v239, v240);
        uint64_t v241 = swift_allocObject();
        *(void *)(v241 + 16) = v293;
        *(void *)(v241 + 24) = v232;
        uint64_t v242 = v292;
        *(void *)(v241 + 32) = v291;
        *(void *)(v241 + 40) = v242;
        uint64_t v243 = v288;
        *(void *)(v241 + 48) = v267;
        *(void *)(v241 + 56) = v243;
        *(void *)(v241 + 64) = v282;
        *(void *)(v241 + 72) = v233;
        unint64_t v244 = v285;
        *(void *)(v241 + 80) = v289;
        *(void *)(v241 + 88) = v244;
        *(void *)(v241 + 96) = v287;
        *(void *)(v241 + 104) = v235;
        *(void *)(v241 + 112) = v279;
        *(void *)(v241 + 120) = v234;
        uint64_t v245 = v286;
        *(void *)(v241 + 128) = v238;
        *(void *)(v241 + 136) = v245;
        *(void *)(v241 + 144) = v236;
        *(void *)(v241 + 152) = v237;
        long long v246 = *(_OWORD *)v322;
        *(_OWORD *)(v241 + 192) = v321;
        *(_OWORD *)(v241 + 208) = v246;
        *(_OWORD *)(v241 + 217) = *(_OWORD *)&v322[9];
        long long v247 = v320;
        *(_OWORD *)(v241 + 160) = v319;
        *(_OWORD *)(v241 + 176) = v247;
        *(void *)(v241 + 240) = v275;
        *(void *)(v241 + 248) = v276;
        *(unsigned char *)(v241 + 256) = (_BYTE)v268;
        uint64_t v248 = WitnessTable;
        *(void *)uint64_t WitnessTable = &unk_269947490;
        *((void *)v248 + 1) = v241;
        sub_24EBCCECC((uint64_t)&v319);
        sub_24EC22B90();
        uint64_t v249 = *MEMORY[0x263F39578];
        uint64_t v250 = sub_24EC229C0();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v250 - 8) + 104))(v281, v249, v250);
        (*(void (**)(char *, void, uint64_t))(v270 + 104))(v231, *MEMORY[0x263F39530], v271);
        sub_24EC22B40();
        goto LABEL_10;
      }
      sub_24EBBC584();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v269 + 8))(v100, State);
      break;
    case 2u:
      uint64_t v106 = (_OWORD *)a5[6];
      uint64_t v107 = (char *)a5[9];
      uint64_t v108 = a5[15];
      uint64_t v109 = a5[18];
      v297 = v293;
      uint64_t v298 = v290;
      uint64_t v299 = v291;
      v300 = &type metadata for NewAndFeaturedItemContext;
      p_Kind = &v292->Kind;
      uint64_t v302 = v106;
      uint64_t v110 = (char *)v287;
      uint64_t v111 = v282;
      uint64_t v112 = v283;
      unint64_t v303 = v288;
      unint64_t v304 = (char *)v282;
      unint64_t v305 = v107;
      unint64_t v306 = v289;
      uint64_t v114 = v284;
      uint64_t v113 = v285;
      unint64_t v307 = (unint64_t)v285;
      unint64_t v308 = v287;
      v309 = v284;
      unint64_t v310 = v281;
      uint64_t v115 = v278;
      v311 = WitnessTable;
      unint64_t v312 = v280;
      uint64_t v313 = v279;
      uint64_t v314 = v108;
      uint64_t v315 = v283;
      unint64_t v116 = v286;
      uint64_t v316 = v286;
      uint64_t v317 = v109;
      uint64_t v318 = v278;
      uint64_t v117 = &v273[*(int *)(type metadata accessor for NewAndFeaturedState() + 212)];
      (*(void (**)(char *, uint64_t))(v269 + 8))(v117, State);
      v297 = v293;
      uint64_t v298 = v290;
      uint64_t v299 = v291;
      v300 = &type metadata for NewAndFeaturedItemContext;
      p_Kind = &v292->Kind;
      uint64_t v302 = v111;
      unint64_t v303 = v288;
      unint64_t v304 = v289;
      unint64_t v305 = v113;
      unint64_t v306 = v110;
      unint64_t v307 = (unint64_t)v114;
      unint64_t v308 = (unint64_t)v281;
      v309 = WitnessTable;
      unint64_t v310 = (char *)v280;
      v311 = (char *)v279;
      unint64_t v312 = v116;
      uint64_t v313 = v112;
      uint64_t v314 = v115;
      uint64_t v118 = sub_24EC22080();
      uint64_t v119 = *(void *)(v118 - 8);
      (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v117, v55, v118);
      uint64_t result = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v117, 0, 2, v118);
      break;
    case 3u:
      uint64_t v120 = a5[9];
      uint64_t v275 = (_OWORD *)a5[6];
      uint64_t v276 = v120;
      uint64_t v269 = a5[15];
      uint64_t State = a5[18];
      v297 = v293;
      uint64_t v298 = v290;
      uint64_t v299 = v291;
      v300 = &type metadata for NewAndFeaturedItemContext;
      p_Kind = &v292->Kind;
      uint64_t v302 = v275;
      uint64_t v121 = v282;
      uint64_t v122 = (char *)v283;
      unint64_t v303 = v288;
      unint64_t v304 = (char *)v282;
      unint64_t v305 = (char *)v120;
      unint64_t v306 = v289;
      unint64_t v307 = (unint64_t)v285;
      unint64_t v308 = v287;
      v309 = v284;
      unint64_t v310 = v281;
      uint64_t v123 = (char *)v279;
      v311 = WitnessTable;
      unint64_t v312 = v280;
      uint64_t v313 = v279;
      uint64_t v314 = v269;
      uint64_t v315 = v283;
      uint64_t v316 = v286;
      uint64_t v317 = State;
      uint64_t v318 = v278;
      uint64_t v124 = (int *)type metadata accessor for NewAndFeaturedState();
      uint64_t v125 = v273;
      uint64_t v126 = &v273[v124[55]];
      int v261 = (char *)*((void *)v263 + 2);
      ((void (*)(char *, char *, _OWORD *))v261)(v267, v126, v121);
      sub_24EB754C0((uint64_t)&v125[v124[52]], (uint64_t)v268);
      uint64_t v127 = &v125[v124[49]];
      uint64_t v128 = v264;
      uint64_t v129 = *(void (**)(char *, char *, char *))(v265 + 16);
      uint64_t v130 = v266;
      v129(v264, v127, v266);
      uint64_t v131 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269947278);
      unint64_t v280 = (unint64_t)&v46[v131[12]];
      uint64_t v273 = &v46[v131[16]];
      uint64_t v281 = &v46[v131[20]];
      uint64_t WitnessTable = &v46[v131[24]];
      uint64_t v294 = (_OWORD *)v322[24];
      uint64_t v295 = 0;
      char v296 = 3;
      v297 = v293;
      uint64_t v298 = v290;
      uint64_t v299 = v291;
      v300 = v292;
      p_Kind = v275;
      uint64_t v302 = v288;
      unint64_t v303 = v121;
      unint64_t v304 = (char *)v276;
      unint64_t v305 = v289;
      unint64_t v306 = v285;
      unint64_t v307 = v287;
      unint64_t v308 = (unint64_t)v284;
      v309 = v123;
      unint64_t v310 = (char *)v269;
      v311 = v122;
      unint64_t v312 = v286;
      uint64_t v313 = State;
      uint64_t v314 = v278;
      type metadata accessor for NewAndFeaturedFeature.TaskIdentifier();
      uint64_t v252 = v46;
      swift_getWitnessTable();
      sub_24EC22DE0();
      uint64_t v132 = *MEMORY[0x263F39580];
      uint64_t v133 = sub_24EC229D0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v133 - 8) + 104))(v273, v132, v133);
      uint64_t v134 = v260;
      v129(v260, v128, v130);
      uint64_t v135 = v259;
      sub_24EB754C0((uint64_t)v268, v259);
      ((void (*)(char *, char *, _OWORD *))v261)(v262, v267, v121);
      uint64_t v136 = v265;
      unint64_t v137 = (*(unsigned __int8 *)(v265 + 80) + 233) & ~(unint64_t)*(unsigned __int8 *)(v265 + 80);
      unint64_t v138 = (unint64_t)&v258[*(unsigned __int8 *)(v256 + 80) + v137] & ~(unint64_t)*(unsigned __int8 *)(v256 + 80);
      uint64_t v139 = v263;
      unint64_t v140 = (unint64_t)&v257[v263[80] + v138] & ~(unint64_t)v263[80];
      uint64_t v141 = swift_allocObject();
      uint64_t v142 = v290;
      *(void *)(v141 + 16) = v293;
      *(void *)(v141 + 24) = v142;
      uint64_t v143 = v292;
      *(void *)(v141 + 32) = v291;
      *(void *)(v141 + 40) = v143;
      uint64_t v144 = v288;
      *(void *)(v141 + 48) = v275;
      *(void *)(v141 + 56) = v144;
      uint64_t v145 = v276;
      *(void *)(v141 + 64) = v121;
      *(void *)(v141 + 72) = v145;
      uint64_t v146 = v285;
      *(void *)(v141 + 80) = v289;
      *(void *)(v141 + 88) = v146;
      uint64_t v147 = v284;
      *(void *)(v141 + 96) = v287;
      *(void *)(v141 + 104) = v147;
      uint64_t v148 = v269;
      *(void *)(v141 + 112) = v279;
      *(void *)(v141 + 120) = v148;
      uint64_t v149 = v286;
      *(void *)(v141 + 128) = v283;
      *(void *)(v141 + 136) = v149;
      uint64_t v150 = v278;
      *(void *)(v141 + 144) = State;
      *(void *)(v141 + 152) = v150;
      long long v151 = *(_OWORD *)v322;
      *(_OWORD *)(v141 + 192) = v321;
      *(_OWORD *)(v141 + 208) = v151;
      *(_OWORD *)(v141 + 217) = *(_OWORD *)&v322[9];
      long long v152 = v320;
      *(_OWORD *)(v141 + 160) = v319;
      *(_OWORD *)(v141 + 176) = v152;
      uint64_t v153 = v134;
      uint64_t v154 = v266;
      (*(void (**)(unint64_t, char *, char *))(v136 + 32))(v141 + v137, v153, v266);
      sub_24EB75B60(v135, v141 + v138);
      (*((void (**)(unint64_t, char *, _OWORD *))v139 + 4))(v141 + v140, v262, v121);
      uint64_t v155 = WitnessTable;
      *(void *)uint64_t WitnessTable = &unk_269947480;
      *((void *)v155 + 1) = v141;
      sub_24EBCCECC((uint64_t)&v319);
      sub_24EC22B90();
      uint64_t v156 = *MEMORY[0x263F39578];
      uint64_t v157 = sub_24EC229C0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v157 - 8) + 104))(v281, v156, v157);
      (*(void (**)(char *, void, uint64_t))(v270 + 104))(v252, *MEMORY[0x263F39530], v271);
      sub_24EC22B40();
      sub_24EC22B30();
      (*(void (**)(char *, char *))(v136 + 8))(v264, v154);
      sub_24EB77D7C((uint64_t)v268);
      uint64_t result = (*((uint64_t (**)(char *, _OWORD *))v139 + 1))(v267, v121);
      break;
    case 4u:
      uint64_t v252 = v46;
      uint64_t v158 = (_OWORD *)a5[6];
      uint64_t v159 = a5[9];
      uint64_t v160 = (char *)a5[15];
      uint64_t v161 = a5[18];
      uint64_t v162 = v290;
      uint64_t v163 = v291;
      v297 = v293;
      uint64_t v298 = v290;
      uint64_t v299 = v291;
      v300 = &type metadata for NewAndFeaturedItemContext;
      p_Kind = &v292->Kind;
      uint64_t v275 = v158;
      uint64_t v276 = v159;
      uint64_t v164 = (char *)v287;
      uint64_t v165 = v288;
      uint64_t v302 = v158;
      unint64_t v303 = v288;
      uint64_t v166 = v282;
      unint64_t v304 = (char *)v282;
      unint64_t v305 = (char *)v159;
      uint64_t v168 = v285;
      unint64_t v167 = v286;
      unint64_t v306 = v289;
      unint64_t v307 = (unint64_t)v285;
      unint64_t v308 = v287;
      v309 = v284;
      uint64_t v169 = v278;
      unint64_t v310 = v281;
      v311 = WitnessTable;
      unint64_t v312 = v280;
      uint64_t v313 = v279;
      uint64_t v267 = v160;
      uint64_t v268 = (char *)v161;
      uint64_t v314 = (uint64_t)v160;
      uint64_t v315 = v283;
      uint64_t v316 = v286;
      uint64_t v317 = v161;
      uint64_t v318 = v278;
      uint64_t v170 = type metadata accessor for NewAndFeaturedState();
      uint64_t v171 = v269;
      (*(void (**)(char *, char *, uint64_t))(v269 + 16))(v261, &v273[*(int *)(v170 + 212)], State);
      v297 = v293;
      uint64_t v298 = v162;
      uint64_t v299 = v163;
      v300 = &type metadata for NewAndFeaturedItemContext;
      p_Kind = &v292->Kind;
      uint64_t v302 = v166;
      unint64_t v303 = v165;
      uint64_t v172 = v289;
      unint64_t v304 = v289;
      unint64_t v305 = v168;
      unint64_t v306 = v164;
      uint64_t v174 = (char *)v283;
      unint64_t v173 = (unint64_t)v284;
      unint64_t v307 = (unint64_t)v284;
      unint64_t v308 = (unint64_t)v281;
      uint64_t v175 = v279;
      v309 = WitnessTable;
      unint64_t v310 = (char *)v280;
      v311 = (char *)v279;
      unint64_t v312 = v167;
      unint64_t v176 = v167;
      uint64_t v313 = v283;
      uint64_t v314 = v169;
      uint64_t v177 = sub_24EC22080();
      unint64_t v178 = v261;
      LODWORD(v166) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v177 - 8) + 48))(v261, 2, v177);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v171 + 8))(v178, State);
      if (v166 == 2)
      {
        unint64_t v179 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269947278);
        uint64_t v180 = v172;
        uint64_t v181 = (char *)v175;
        uint64_t v182 = v252;
        uint64_t v265 = (uint64_t)&v252[v179[12]];
        unint64_t v183 = v173;
        unint64_t v184 = v176;
        uint64_t v262 = &v252[v179[16]];
        uint64_t v264 = &v252[v179[20]];
        uint64_t v263 = &v252[v179[24]];
        uint64_t v281 = (char *)v322[24];
        uint64_t v294 = (_OWORD *)v322[24];
        uint64_t v295 = 0;
        char v296 = 0;
        unint64_t v185 = v292;
        v297 = v293;
        uint64_t v298 = v290;
        uint64_t v299 = v291;
        v300 = v292;
        p_Kind = v275;
        uint64_t v302 = v288;
        unint64_t v303 = v282;
        unint64_t v304 = (char *)v276;
        uint64_t v186 = v285;
        unint64_t v305 = v180;
        unint64_t v306 = v285;
        unint64_t v307 = v287;
        unint64_t v308 = v173;
        v309 = v181;
        unint64_t v310 = v267;
        v311 = v174;
        unint64_t v312 = v184;
        uint64_t v187 = v278;
        uint64_t v313 = (uint64_t)v268;
        uint64_t v314 = v278;
        unint64_t v280 = type metadata accessor for NewAndFeaturedFeature.TaskIdentifier();
        uint64_t WitnessTable = (char *)swift_getWitnessTable();
        sub_24EC22DE0();
        LODWORD(v273) = *MEMORY[0x263F39590];
        uint64_t v188 = v273;
        uint64_t v189 = v174;
        uint64_t v269 = sub_24EC229D0();
        uint64_t v190 = *(void *)(v269 - 8);
        uint64_t v266 = *(char **)(v190 + 104);
        uint64_t State = v190 + 104;
        ((void (*)(char *, uint64_t, uint64_t))v266)(v262, v188, v269);
        uint64_t v191 = (void *)swift_allocObject();
        uint64_t v192 = v290;
        v191[2] = v293;
        v191[3] = v192;
        v191[4] = v291;
        v191[5] = v185;
        uint64_t v193 = v288;
        v191[6] = v275;
        v191[7] = v193;
        uint64_t v194 = v282;
        uint64_t v195 = v276;
        v191[8] = v282;
        v191[9] = v195;
        v191[10] = v289;
        v191[11] = v186;
        v191[12] = v287;
        v191[13] = v183;
        uint64_t v196 = v267;
        uint64_t v197 = (uint64_t)v268;
        v191[14] = v279;
        v191[15] = v196;
        uint64_t v198 = v286;
        v191[16] = v189;
        v191[17] = v198;
        v191[18] = v197;
        v191[19] = v187;
        uint64_t v199 = v263;
        *(void *)uint64_t v263 = &unk_269947450;
        *((void *)v199 + 1) = v191;
        sub_24EC22B90();
        LODWORD(v260) = *MEMORY[0x263F39578];
        uint64_t v200 = v260;
        uint64_t v259 = sub_24EC229C0();
        uint64_t v201 = *(void *)(v259 - 8);
        uint64_t v265 = *(void *)(v201 + 104);
        int v261 = (char *)(v201 + 104);
        ((void (*)(char *, uint64_t, uint64_t))v265)(v264, v200, v259);
        LODWORD(v264) = *MEMORY[0x263F39530];
        uint64_t v202 = *(char **)(v270 + 104);
        v270 += 104;
        uint64_t v263 = v202;
        ((void (*)(char *))v202)(v182);
        uint64_t v262 = (char *)sub_24EC22B40();
        sub_24EC22B30();
        uint64_t v258 = &v182[v179[12]];
        uint64_t v203 = &v182[v179[16]];
        uint64_t v257 = &v182[v179[20]];
        uint64_t v204 = &v182[v179[24]];
        v297 = v281;
        uint64_t v298 = 0;
        LOBYTE(v299) = 5;
        sub_24EC22DE0();
        ((void (*)(char *, void, uint64_t))v266)(v203, v273, v269);
        uint64_t v205 = swift_allocObject();
        uint64_t v206 = v290;
        *(void *)(v205 + 16) = v293;
        *(void *)(v205 + 24) = v206;
        uint64_t v207 = v292;
        *(void *)(v205 + 32) = v291;
        *(void *)(v205 + 40) = v207;
        uint64_t v208 = v288;
        *(void *)(v205 + 48) = v275;
        *(void *)(v205 + 56) = v208;
        uint64_t v209 = v276;
        *(void *)(v205 + 64) = v194;
        *(void *)(v205 + 72) = v209;
        *(void *)(v205 + 80) = v289;
        *(void *)(v205 + 88) = v186;
        uint64_t v210 = v284;
        *(void *)(v205 + 96) = v287;
        *(void *)(v205 + 104) = v210;
        *(void *)(v205 + 112) = v279;
        *(void *)(v205 + 120) = v196;
        uint64_t v211 = v286;
        *(void *)(v205 + 128) = v283;
        *(void *)(v205 + 136) = v211;
        *(void *)(v205 + 144) = v197;
        *(void *)(v205 + 152) = v187;
        long long v212 = *(_OWORD *)v322;
        *(_OWORD *)(v205 + 192) = v321;
        *(_OWORD *)(v205 + 208) = v212;
        *(_OWORD *)(v205 + 217) = *(_OWORD *)&v322[9];
        long long v213 = v320;
        *(_OWORD *)(v205 + 160) = v319;
        *(_OWORD *)(v205 + 176) = v213;
        *(void *)uint64_t v204 = &unk_269947460;
        *((void *)v204 + 1) = v205;
        sub_24EBCCECC((uint64_t)&v319);
        sub_24EC22B90();
        uint64_t v214 = v260;
        uint64_t v215 = v259;
        ((void (*)(char *, void, uint64_t))v265)(v257, v260, v259);
        ((void (*)(char *, void, uint64_t))v263)(v182, v264, v271);
        sub_24EC22B30();
        uint64_t v216 = &v182[v179[16]];
        uint64_t v258 = &v182[v179[20]];
        uint64_t v217 = &v182[v179[24]];
        v297 = v281;
        uint64_t v298 = 0;
        LOBYTE(v299) = 6;
        sub_24EC22DE0();
        ((void (*)(char *, void, uint64_t))v266)(v216, v273, v269);
        uint64_t v218 = swift_allocObject();
        uint64_t v219 = v290;
        *(void *)(v218 + 16) = v293;
        *(void *)(v218 + 24) = v219;
        uint64_t v220 = v292;
        *(void *)(v218 + 32) = v291;
        *(void *)(v218 + 40) = v220;
        uint64_t v221 = v288;
        *(void *)(v218 + 48) = v275;
        *(void *)(v218 + 56) = v221;
        uint64_t v222 = v276;
        *(void *)(v218 + 64) = v282;
        *(void *)(v218 + 72) = v222;
        uint64_t v223 = v285;
        *(void *)(v218 + 80) = v289;
        *(void *)(v218 + 88) = v223;
        uint64_t v224 = v284;
        *(void *)(v218 + 96) = v287;
        *(void *)(v218 + 104) = v224;
        unint64_t v225 = v267;
        *(void *)(v218 + 112) = v279;
        *(void *)(v218 + 120) = v225;
        uint64_t v226 = v286;
        *(void *)(v218 + 128) = v283;
        *(void *)(v218 + 136) = v226;
        uint64_t v227 = v278;
        *(void *)(v218 + 144) = v268;
        *(void *)(v218 + 152) = v227;
        long long v228 = *(_OWORD *)v322;
        *(_OWORD *)(v218 + 192) = v321;
        *(_OWORD *)(v218 + 208) = v228;
        *(_OWORD *)(v218 + 217) = *(_OWORD *)&v322[9];
        long long v229 = v320;
        *(_OWORD *)(v218 + 160) = v319;
        *(_OWORD *)(v218 + 176) = v229;
        *(void *)uint64_t v217 = &unk_269947470;
        *((void *)v217 + 1) = v218;
        sub_24EBCCECC((uint64_t)&v319);
        sub_24EC22B90();
        ((void (*)(char *, uint64_t, uint64_t))v265)(v258, v214, v215);
        ((void (*)(char *, void, uint64_t))v263)(v182, v264, v271);
LABEL_10:
        uint64_t result = sub_24EC22B30();
      }
      break;
    default:
      uint64_t v276 = v47;
      long long v59 = *(_OWORD **)v55;
      unint64_t v60 = v52;
      uint64_t v251 = v52;
      MEMORY[0x253349950](v59, 0);
      unint64_t v61 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269947278);
      unint64_t v280 = (unint64_t)&v46[v61[12]];
      uint64_t v268 = &v46[v61[16]];
      uint64_t v281 = &v46[v61[20]];
      uint64_t WitnessTable = &v46[v61[24]];
      uint64_t v294 = v59;
      uint64_t v295 = v322[24];
      char v296 = 2;
      unint64_t v62 = (_OWORD *)a5[9];
      uint64_t State = a5[6];
      uint64_t v275 = v62;
      uint64_t v273 = (char *)a5[15];
      uint64_t v269 = a5[18];
      v297 = v293;
      uint64_t v298 = v290;
      uint64_t v299 = v291;
      v300 = v292;
      p_Kind = (_OWORD *)State;
      uint64_t v63 = v254;
      uint64_t v64 = v282;
      uint64_t v302 = v288;
      unint64_t v303 = v282;
      unint64_t v304 = (char *)v62;
      uint64_t v65 = v284;
      unint64_t v305 = v289;
      unint64_t v306 = v285;
      unint64_t v307 = v287;
      unint64_t v308 = (unint64_t)v284;
      v309 = (char *)v279;
      unint64_t v310 = v273;
      uint64_t v252 = v46;
      uint64_t v66 = v283;
      v311 = (char *)v283;
      unint64_t v312 = v286;
      uint64_t v313 = v269;
      uint64_t v314 = v278;
      type metadata accessor for NewAndFeaturedFeature.TaskIdentifier();
      swift_getWitnessTable();
      sub_24EC22DE0();
      uint64_t v67 = *MEMORY[0x263F39590];
      uint64_t v68 = sub_24EC229D0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v68 - 8) + 104))(v268, v67, v68);
      uint64_t v69 = v276;
      (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v49, v60, v276);
      unint64_t v70 = (*(unsigned __int8 *)(v63 + 80) + 233) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
      uint64_t v71 = swift_allocObject();
      uint64_t v72 = v290;
      *(void *)(v71 + 16) = v293;
      *(void *)(v71 + 24) = v72;
      unint64_t v73 = v292;
      *(void *)(v71 + 32) = v291;
      *(void *)(v71 + 40) = v73;
      unint64_t v74 = v288;
      *(void *)(v71 + 48) = State;
      *(void *)(v71 + 56) = v74;
      uint64_t v75 = v275;
      *(void *)(v71 + 64) = v64;
      *(void *)(v71 + 72) = v75;
      uint64_t v76 = v285;
      *(void *)(v71 + 80) = v289;
      *(void *)(v71 + 88) = v76;
      *(void *)(v71 + 96) = v287;
      *(void *)(v71 + 104) = v65;
      unint64_t v77 = v273;
      *(void *)(v71 + 112) = v279;
      *(void *)(v71 + 120) = v77;
      uint64_t v78 = v286;
      *(void *)(v71 + 128) = v66;
      *(void *)(v71 + 136) = v78;
      uint64_t v79 = v278;
      *(void *)(v71 + 144) = v269;
      *(void *)(v71 + 152) = v79;
      long long v80 = *(_OWORD *)v322;
      *(_OWORD *)(v71 + 192) = v321;
      *(_OWORD *)(v71 + 208) = v80;
      *(_OWORD *)(v71 + 217) = *(_OWORD *)&v322[9];
      long long v81 = v320;
      *(_OWORD *)(v71 + 160) = v319;
      *(_OWORD *)(v71 + 176) = v81;
      (*(void (**)(unint64_t, char *, uint64_t))(v63 + 32))(v71 + v70, v49, v69);
      uint64_t v82 = WitnessTable;
      *(void *)uint64_t WitnessTable = &unk_2699474A0;
      *((void *)v82 + 1) = v71;
      sub_24EBCCECC((uint64_t)&v319);
      sub_24EC22B90();
      uint64_t v83 = *MEMORY[0x263F39578];
      uint64_t v84 = sub_24EC229C0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v84 - 8) + 104))(v281, v83, v84);
      (*(void (**)(char *, void, uint64_t))(v270 + 104))(v252, *MEMORY[0x263F39530], v271);
      sub_24EC22B40();
      sub_24EC22B30();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v251, v69);
      break;
  }
  return result;
}

uint64_t type metadata accessor for NewAndFeaturedFeature.TaskIdentifier()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24EBC8A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[57] = v39;
  v8[58] = v40;
  v8[55] = v37;
  v8[56] = v38;
  v8[53] = v35;
  v8[54] = v36;
  v8[51] = v33;
  v8[52] = v34;
  v8[49] = v31;
  v8[50] = v32;
  v8[47] = v29;
  v8[48] = v30;
  v8[45] = a8;
  v8[46] = v28;
  v8[43] = a6;
  v8[44] = a7;
  v8[41] = a4;
  v8[42] = a5;
  v8[40] = a1;
  unint64_t v13 = sub_24EBA93F4();
  unint64_t v14 = sub_24EBA9448();
  unint64_t v15 = sub_24EBA949C();
  v8[2] = a4;
  v8[3] = a5;
  v8[4] = a6;
  v8[5] = &type metadata for NewAndFeaturedItemContext;
  v8[6] = a7;
  v8[7] = v28;
  v8[8] = v29;
  v8[9] = v31;
  v8[10] = v32;
  v8[11] = v33;
  v8[12] = v34;
  v8[13] = v13;
  v8[14] = v14;
  v8[15] = v15;
  unint64_t v16 = v15;
  unsigned char v8[16] = v35;
  v8[17] = v37;
  v8[18] = v38;
  v8[19] = v40;
  uint64_t v17 = type metadata accessor for NewAndFeaturedAction();
  v8[59] = v17;
  v8[60] = *(void *)(v17 - 8);
  uint64_t v18 = swift_task_alloc();
  v8[20] = a4;
  v8[61] = v18;
  v8[21] = a5;
  v8[22] = a6;
  v8[23] = &type metadata for NewAndFeaturedItemContext;
  v8[24] = a7;
  v8[25] = v29;
  v8[26] = v28;
  v8[27] = v31;
  v8[28] = v32;
  v8[29] = v33;
  v8[30] = v34;
  v8[31] = v13;
  v8[32] = v14;
  v8[33] = v16;
  v8[34] = v35;
  v8[35] = v38;
  v8[36] = v37;
  v8[37] = v40;
  uint64_t v19 = sub_24EC22080();
  v8[62] = v19;
  uint64_t v20 = sub_24EC22C90();
  v8[63] = v20;
  v8[64] = *(void *)(v20 - 8);
  v8[65] = swift_task_alloc();
  v8[66] = *(void *)(v19 - 8);
  v8[67] = swift_task_alloc();
  v8[68] = sub_24EC22B80();
  v8[69] = sub_24EC22B70();
  v8[70] = *(void *)(a2 + 64);
  unint64_t v26 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x263F3DE00] + MEMORY[0x263F3DE00]);
  uint64_t v21 = (void *)swift_task_alloc();
  v8[71] = v21;
  *uint64_t v21 = v8;
  v21[1] = sub_24EBC8D94;
  return v26(a3);
}

uint64_t sub_24EBC8D94()
{
  uint64_t v2 = (void *)*v1;
  unsigned char v2[72] = v0;
  swift_task_dealloc();
  uint64_t v4 = sub_24EC22B50();
  v2[73] = v4;
  v2[74] = v3;
  if (v0) {
    uint64_t v5 = sub_24EBC95A0;
  }
  else {
    uint64_t v5 = sub_24EBC8EF8;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24EBC8EF8()
{
  uint64_t v1 = (_OWORD *)swift_task_alloc();
  long long v2 = *(_OWORD *)(v0 + 328);
  long long v3 = *(_OWORD *)(v0 + 344);
  long long v4 = *(_OWORD *)(v0 + 360);
  long long v5 = *(_OWORD *)(v0 + 376);
  long long v6 = *(_OWORD *)(v0 + 392);
  long long v7 = *(_OWORD *)(v0 + 408);
  long long v8 = *(_OWORD *)(v0 + 424);
  long long v9 = *(_OWORD *)(v0 + 440);
  long long v10 = *(_OWORD *)(v0 + 456);
  unint64_t v14 = (uint64_t (*)(uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), _OWORD *, uint64_t))((int)*MEMORY[0x263F3DE10] + MEMORY[0x263F3DE10]);
  *(void *)(v0 + 600) = v1;
  v1[1] = v2;
  v1[2] = v3;
  v1[3] = v4;
  v1[4] = v5;
  v1[5] = v6;
  v1[6] = v7;
  v1[7] = v8;
  v1[8] = v9;
  v1[9] = v10;
  unsigned __int8 v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 608) = v11;
  uint64_t v12 = sub_24EC22B40();
  *(void *)(v0 + 616) = v12;
  *unsigned __int8 v11 = v0;
  v11[1] = sub_24EBC9024;
  return v14(v0 + 304, sub_24EBCF164, v1, v12);
}

uint64_t sub_24EBC9024()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 592);
  uint64_t v3 = *(void *)(v1 + 584);
  return MEMORY[0x270FA2498](sub_24EBC9168, v3, v2);
}

uint64_t sub_24EBC9168()
{
  uint64_t v1 = v0[66];
  uint64_t v2 = v0[65];
  uint64_t v3 = v0[62];
  v0[39] = v0[38];
  swift_getWitnessTable();
  sub_24EC22C40();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v2, 1, v3) == 1)
  {
    swift_release();
    (*(void (**)(void, void))(v0[64] + 8))(v0[65], v0[63]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = v0[67];
    uint64_t v7 = v0[66];
    uint64_t v9 = v0[61];
    uint64_t v8 = v0[62];
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 32))(v6, v0[65], v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v9, v6, v8);
    swift_storeEnumTagMultiPayload();
    long long v10 = (void *)swift_task_alloc();
    v0[78] = v10;
    uint64_t v11 = sub_24EC229B0();
    *long long v10 = v0;
    v10[1] = sub_24EBC9374;
    uint64_t v12 = v0[61];
    return MEMORY[0x270F252C8](v12, v11);
  }
}

uint64_t sub_24EBC9374()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 488);
  uint64_t v3 = *(void *)(*v0 + 480);
  uint64_t v4 = *(void *)(*v0 + 472);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 592);
  uint64_t v6 = *(void *)(v1 + 584);
  return MEMORY[0x270FA2498](sub_24EBC94F8, v6, v5);
}

uint64_t sub_24EBC94F8()
{
  swift_release();
  (*(void (**)(void, void))(v0[66] + 8))(v0[67], v0[62]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24EBC95A0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EBC9630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 80) = a5;
  *(void *)(v5 + 24) = a3;
  *(void *)(v5 + 32) = a4;
  *(void *)(v5 + 16) = a2;
  sub_24EC22B80();
  *(void *)(v5 + 40) = sub_24EC22B70();
  uint64_t v7 = sub_24EC22B50();
  *(void *)(v5 + 48) = v7;
  *(void *)(v5 + 56) = v6;
  return MEMORY[0x270FA2498](sub_24EBC96D4, v7, v6);
}

uint64_t sub_24EBC96D4()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = *(int **)(v0[2] + 48);
  sub_24EBBC8CC();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[8] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_24EBC97CC;
  uint64_t v4 = v0[3];
  return v6(v4, v1);
}

uint64_t sub_24EBC97CC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v5 = sub_24EBC9954;
  }
  else
  {
    sub_24EBBC584();
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v5 = sub_24EBC98F0;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_24EBC98F0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EBC9954()
{
  sub_24EBBC584();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EBC99CC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[101] = v42;
  v8[100] = v41;
  v8[99] = v40;
  v8[98] = v39;
  v8[97] = v38;
  v8[96] = v37;
  v8[95] = v36;
  v8[94] = v35;
  v8[93] = v34;
  v8[92] = v33;
  v8[91] = v32;
  v8[90] = v31;
  v8[89] = v30;
  v8[88] = v29;
  v8[87] = v28;
  v8[86] = a8;
  v8[85] = a7;
  v8[84] = a6;
  v8[83] = a5;
  v8[82] = a4;
  v8[81] = a3;
  v8[80] = a2;
  v8[79] = a1;
  unint64_t v12 = sub_24EBA93F4();
  v8[102] = v12;
  unint64_t v13 = sub_24EBA9448();
  v8[103] = v13;
  unint64_t v14 = sub_24EBA949C();
  v8[104] = v14;
  v8[2] = a6;
  v8[3] = a7;
  v8[4] = a8;
  v8[5] = &type metadata for NewAndFeaturedItemContext;
  v8[6] = v28;
  v8[7] = v30;
  v8[8] = v31;
  v8[9] = v33;
  v8[10] = v34;
  v8[11] = v35;
  v8[12] = v36;
  v8[13] = v12;
  v8[14] = v13;
  v8[15] = v14;
  unsigned char v8[16] = v37;
  v8[17] = v39;
  v8[18] = v40;
  v8[19] = v42;
  uint64_t v15 = type metadata accessor for NewAndFeaturedAction();
  v8[105] = v15;
  v8[106] = *(void *)(v15 - 8);
  uint64_t v16 = swift_task_alloc();
  v8[20] = a6;
  v8[107] = v16;
  v8[21] = a7;
  v8[22] = a8;
  v8[23] = &type metadata for NewAndFeaturedItemContext;
  v8[24] = v28;
  v8[25] = v31;
  v8[26] = v30;
  v8[27] = v33;
  v8[28] = v34;
  v8[29] = v35;
  v8[30] = v36;
  v8[31] = v12;
  v8[32] = v13;
  v8[33] = v14;
  v8[34] = v37;
  v8[35] = v40;
  v8[36] = v39;
  v8[37] = v42;
  uint64_t v17 = sub_24EC22080();
  v8[108] = v17;
  uint64_t v18 = sub_24EC22C90();
  v8[109] = v18;
  v8[110] = *(void *)(v18 - 8);
  v8[111] = swift_task_alloc();
  v8[112] = *(void *)(v17 - 8);
  v8[113] = swift_task_alloc();
  sub_24EC22C90();
  v8[114] = swift_task_alloc();
  uint64_t v19 = sub_24EC21F40();
  v8[115] = v19;
  v8[116] = *(void *)(v19 - 8);
  v8[117] = swift_task_alloc();
  v8[70] = a6;
  v8[71] = v30;
  v8[72] = v34;
  v8[73] = v39;
  v8[118] = sub_24EC21F50();
  sub_24EC22C90();
  v8[119] = swift_task_alloc();
  uint64_t v20 = sub_24EC22020();
  v8[120] = v20;
  v8[121] = *(void *)(v20 - 8);
  v8[122] = swift_task_alloc();
  v8[123] = sub_24EC22B80();
  v8[124] = sub_24EC22B70();
  unint64_t v26 = (uint64_t (*)(void))(*a2 + *(int *)*a2);
  uint64_t v21 = (void *)swift_task_alloc();
  v8[125] = v21;
  *uint64_t v21 = v8;
  v21[1] = sub_24EBC9EC0;
  return v26();
}

uint64_t sub_24EBC9EC0(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 1008) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_24EC22B50();
    uint64_t v7 = v6;
    uint64_t v8 = sub_24EBCAE6C;
    uint64_t v9 = v5;
    uint64_t v10 = v7;
  }
  else
  {
    v4[127] = a1;
    uint64_t v11 = sub_24EC22B50();
    uint64_t v10 = v12;
    v4[128] = v11;
    v4[129] = v12;
    uint64_t v8 = sub_24EBCA054;
    uint64_t v9 = v11;
  }
  return MEMORY[0x270FA2498](v8, v9, v10);
}

uint64_t sub_24EBCA054()
{
  uint64_t v1 = *(void *)(v0 + 1016);
  uint64_t v40 = *(void *)(v0 + 976);
  uint64_t v2 = *(void *)(v0 + 968);
  uint64_t v21 = *(void *)(v0 + 960);
  uint64_t v3 = *(void *)(v0 + 944);
  uint64_t v38 = *(void *)(v0 + 936);
  uint64_t v39 = *(void *)(v0 + 952);
  uint64_t v4 = *(void *)(v0 + 928);
  uint64_t v24 = *(void *)(v0 + 824);
  uint64_t v25 = *(void *)(v0 + 832);
  uint64_t v23 = *(void *)(v0 + 816);
  uint64_t v20 = *(void *)(v0 + 808);
  uint64_t v37 = *(void *)(v0 + 784);
  uint64_t v19 = *(void *)(v0 + 760);
  uint64_t v31 = *(void *)(v0 + 744);
  uint64_t v32 = *(void *)(v0 + 752);
  uint64_t v5 = *(void *)(v0 + 712);
  uint64_t v29 = *(void *)(v0 + 688);
  uint64_t v30 = *(void *)(v0 + 736);
  uint64_t v34 = *(void *)(v0 + 680);
  uint64_t v35 = *(void *)(v0 + 672);
  uint64_t v6 = *(void *)(v0 + 640);
  *(void *)(v0 + 1040) = *(void *)(v6 + 64);
  *(void *)(v0 + 304) = v35;
  *(void *)(v0 + 312) = v34;
  int64x2_t v33 = *(int64x2_t *)(v0 + 696);
  int64x2_t v17 = *(int64x2_t *)(v0 + 792);
  *(void *)(v0 + 320) = v29;
  *(void *)(v0 + 328) = &type metadata for NewAndFeaturedItemContext;
  *(void *)(v0 + 352) = v5;
  *(void *)(v0 + 360) = v30;
  *(void *)(v0 + 368) = v31;
  *(void *)(v0 + 376) = v32;
  *(void *)(v0 + 384) = v19;
  *(void *)(v0 + 392) = v23;
  *(void *)(v0 + 400) = v24;
  *(void *)(v0 + 408) = v25;
  *(void *)(v0 + 432) = v37;
  *(void *)(v0 + 440) = v20;
  int64x2_t v16 = *(int64x2_t *)(v0 + 720);
  *(int64x2_t *)(v0 + 336) = vzip1q_s64(v33, v16);
  int64x2_t v36 = *(int64x2_t *)(v0 + 768);
  *(int64x2_t *)(v0 + 416) = vzip1q_s64(v36, v17);
  uint64_t v15 = *(void *)(v0 + 920);
  uint64_t v26 = *(void *)(v0 + 912);
  uint64_t v27 = *(void *)(v0 + 664);
  uint64_t v18 = *(void *)(v0 + 656);
  uint64_t v7 = *(void *)(v0 + 648);
  sub_24EC21EF0();
  sub_24EC22F60();
  swift_allocObject();
  uint64_t v28 = sub_24EC22B10();
  *(void *)(v0 + 1048) = v28;
  sub_24EC22D20();
  *(void *)(v0 + 592) = 0;
  *(void *)(v0 + 600) = 0xE000000000000000;
  sub_24EC22AC0();
  *(unsigned char *)(v0 + 1096) = *(unsigned char *)(v6 + 72);
  sub_24EC22DB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v40, v7, v21);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v39, 1, 1, v3);
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v38, *MEMORY[0x263F3DE38], v15);
  *(void *)(v0 + 608) = v1;
  uint64_t v8 = swift_task_alloc();
  *(void *)(v8 + 16) = v35;
  *(void *)(v8 + 24) = v34;
  *(void *)(v8 + 32) = v29;
  *(int64x2_t *)(v8 + 40) = v33;
  *(void *)(v8 + 56) = v5;
  *(int64x2_t *)(v8 + 64) = v16;
  *(void *)(v8 + 80) = v30;
  *(void *)(v8 + 88) = v31;
  *(void *)(v8 + 96) = v32;
  *(void *)(v8 + 104) = v19;
  *(int64x2_t *)(v8 + 112) = v36;
  *(void *)(v8 + 128) = v37;
  *(int64x2_t *)(v8 + 136) = v17;
  *(void *)(v8 + 152) = v20;
  *(void *)(v8 + 160) = v18;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946580);
  *(void *)(v0 + 448) = v35;
  *(void *)(v0 + 456) = v34;
  *(void *)(v0 + 464) = v29;
  *(void *)(v0 + 472) = &type metadata for NewAndFeaturedItemContext;
  *(void *)(v0 + 480) = v33.i64[0];
  *(void *)(v0 + 488) = v30;
  *(void *)(v0 + 496) = v31;
  *(void *)(v0 + 504) = v32;
  *(void *)(v0 + 512) = v19;
  *(void *)(v0 + 520) = v23;
  *(void *)(v0 + 528) = v24;
  *(void *)(v0 + 536) = v25;
  *(void *)(v0 + 544) = v36.i64[0];
  *(void *)(v0 + 552) = v20;
  uint64_t v9 = sub_24EC21EB0();
  unint64_t v10 = sub_24EBCF200();
  sub_24EBCB0B4((void (*)(char *, char *))sub_24EBCF1A8, v8, v22, v9, MEMORY[0x263F8E628], v10, MEMORY[0x263F8E658], v11);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v12 = *(void *)(v16.i64[0] - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v26, v27, v16.i64[0]);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v26, 0, 1, v16.i64[0]);
  sub_24EC21EC0();
  sub_24EC22B40();
  uint64_t v41 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x263F3DE08] + MEMORY[0x263F3DE08]);
  unint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 1056) = v13;
  *unint64_t v13 = v0;
  v13[1] = sub_24EBCA5FC;
  return v41(v28);
}

uint64_t sub_24EBCA5FC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 1032);
  uint64_t v3 = *(void *)(v1 + 1024);
  return MEMORY[0x270FA2498](sub_24EBCA740, v3, v2);
}

uint64_t sub_24EBCA740()
{
  uint64_t v1 = (_OWORD *)swift_task_alloc();
  unint64_t v13 = (uint64_t (*)(uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), _OWORD *, uint64_t))((int)*MEMORY[0x263F3DE10] + MEMORY[0x263F3DE10]);
  *(void *)(v0 + 1064) = v1;
  long long v2 = *(_OWORD *)(v0 + 688);
  long long v3 = *(_OWORD *)(v0 + 704);
  long long v4 = *(_OWORD *)(v0 + 720);
  long long v5 = *(_OWORD *)(v0 + 736);
  long long v6 = *(_OWORD *)(v0 + 752);
  long long v7 = *(_OWORD *)(v0 + 768);
  long long v8 = *(_OWORD *)(v0 + 784);
  long long v9 = *(_OWORD *)(v0 + 800);
  v1[1] = *(_OWORD *)(v0 + 672);
  v1[2] = v2;
  v1[3] = v3;
  v1[4] = v4;
  v1[5] = v5;
  v1[6] = v6;
  v1[7] = v7;
  v1[8] = v8;
  v1[9] = v9;
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 1072) = v10;
  uint64_t v11 = sub_24EC22B40();
  *(void *)(v0 + 1080) = v11;
  *unint64_t v10 = v0;
  v10[1] = sub_24EBCA868;
  return v13(v0 + 624, sub_24EBCF164, v1, v11);
}

uint64_t sub_24EBCA868()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 1032);
  uint64_t v3 = *(void *)(v1 + 1024);
  return MEMORY[0x270FA2498](sub_24EBCA9AC, v3, v2);
}

uint64_t sub_24EBCA9AC()
{
  uint64_t v1 = v0[112];
  uint64_t v2 = v0[111];
  uint64_t v3 = v0[108];
  v0[77] = v0[78];
  swift_getWitnessTable();
  sub_24EC22C40();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v2, 1, v3) == 1)
  {
    swift_release();
    (*(void (**)(void, void))(v0[110] + 8))(v0[111], v0[109]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = v0[113];
    uint64_t v7 = v0[112];
    uint64_t v8 = v0[108];
    uint64_t v9 = v0[107];
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 32))(v6, v0[111], v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v9, v6, v8);
    swift_storeEnumTagMultiPayload();
    unint64_t v10 = (void *)swift_task_alloc();
    v0[136] = v10;
    uint64_t v11 = sub_24EC229B0();
    *unint64_t v10 = v0;
    v10[1] = sub_24EBCABFC;
    uint64_t v12 = v0[107];
    return MEMORY[0x270F252C8](v12, v11);
  }
}

uint64_t sub_24EBCABFC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 856);
  uint64_t v3 = *(void *)(*v0 + 848);
  uint64_t v4 = *(void *)(*v0 + 840);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 1032);
  uint64_t v6 = *(void *)(v1 + 1024);
  return MEMORY[0x270FA2498](sub_24EBCAD80, v6, v5);
}

uint64_t sub_24EBCAD80()
{
  swift_release();
  (*(void (**)(void, void))(v0[112] + 8))(v0[113], v0[108]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24EBCAE6C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EBCAF3C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v35 = a6;
  uint64_t v36 = a19;
  uint64_t v34 = a14;
  long long v31 = a11;
  uint64_t v22 = sub_24EC21EA0();
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v24 = (char *)&v31 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *a1;
  uint64_t v26 = a1[1];
  uint64_t v37 = v25;
  uint64_t v38 = v26;
  LOBYTE(v39) = 1;
  sub_24EB754C0(a2, (uint64_t)v24);
  unint64_t v27 = sub_24EBA93F4();
  unint64_t v28 = sub_24EBA9448();
  unint64_t v29 = sub_24EBA949C();
  swift_bridgeObjectRetain();
  sub_24EC21FB0();
  uint64_t v37 = a3;
  uint64_t v38 = v32;
  uint64_t v39 = v33;
  uint64_t v40 = &type metadata for NewAndFeaturedItemContext;
  uint64_t v41 = v35;
  long long v42 = v31;
  uint64_t v43 = a12;
  uint64_t v44 = a13;
  unint64_t v45 = v27;
  unint64_t v46 = v28;
  unint64_t v47 = v29;
  uint64_t v48 = v34;
  uint64_t v49 = v36;
  sub_24EC21EB0();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24EBCB0B4(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v26 - v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  MEMORY[0x270FA5388](v15);
  int64x2_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_24EC22C10();
  if (!v18) {
    return sub_24EC22B20();
  }
  uint64_t v19 = v18;
  uint64_t v43 = sub_24EC22D90();
  uint64_t v32 = sub_24EC22DA0();
  sub_24EC22D70();
  uint64_t v36 = v8;
  uint64_t result = sub_24EC22C00();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v34 = (void (**)(char *))(v33 + 2);
    uint64_t v35 = v14;
    ++v33;
    while (1)
    {
      uint64_t v21 = (void (*)(char *, void))sub_24EC22C60();
      uint64_t v22 = v11;
      uint64_t v23 = v11;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_24EC22D80();
      sub_24EC22C20();
      --v19;
      uint64_t v11 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

uint64_t sub_24EBCB4B4@<X0>(uint64_t *a1@<X8>)
{
  sub_24EBA93F4();
  sub_24EBA9448();
  sub_24EBA949C();
  sub_24EC21EF0();
  sub_24EC22B40();
  sub_24EC22080();
  swift_getWitnessTable();
  uint64_t result = sub_24EC22AE0();
  *a1 = result;
  return result;
}

uint64_t sub_24EBCB6C0@<X0>(uint64_t a1@<X8>)
{
  sub_24EBA93F4();
  sub_24EBA9448();
  sub_24EBA949C();
  sub_24EC21EF0();
  sub_24EC21ED0();
  uint64_t v1 = sub_24EC22080();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v1 - 8) + 56))(a1, 0, 1, v1);
}

uint64_t sub_24EBCB880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 160) = a1;
  unint64_t v13 = sub_24EBA93F4();
  unint64_t v14 = sub_24EBA9448();
  unint64_t v15 = sub_24EBA949C();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  *(void *)(v8 + 32) = a4;
  *(void *)(v8 + 40) = &type metadata for NewAndFeaturedItemContext;
  *(void *)(v8 + 48) = a5;
  *(void *)(v8 + 56) = a7;
  *(void *)(v8 + 64) = a8;
  *(_OWORD *)(v8 + 72) = v23;
  *(void *)(v8 + 88) = v24;
  *(void *)(v8 + 96) = v25;
  *(void *)(v8 + 104) = v13;
  *(void *)(v8 + 112) = v14;
  *(void *)(v8 + 120) = v15;
  *(void *)(v8 + 128) = v26;
  *(void *)(v8 + 136) = v27;
  *(void *)(v8 + 144) = v28;
  *(void *)(v8 + 152) = v29;
  uint64_t v16 = type metadata accessor for NewAndFeaturedAction();
  *(void *)(v8 + 168) = v16;
  *(void *)(v8 + 176) = *(void *)(v16 - 8);
  *(void *)(v8 + 184) = swift_task_alloc();
  sub_24EC22B80();
  *(void *)(v8 + 192) = sub_24EC22B70();
  uint64_t v18 = sub_24EC22B50();
  *(void *)(v8 + 200) = v18;
  *(void *)(v8 + 208) = v17;
  return MEMORY[0x270FA2498](sub_24EBCBA38, v18, v17);
}

uint64_t sub_24EBCBA38()
{
  swift_storeEnumTagMultiPayload();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v1;
  uint64_t v2 = sub_24EC229B0();
  void *v1 = v0;
  v1[1] = sub_24EBCBAF8;
  uint64_t v3 = *(void *)(v0 + 184);
  return MEMORY[0x270F252C8](v3, v2);
}

uint64_t sub_24EBCBAF8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 184);
  uint64_t v3 = *(void *)(*v0 + 176);
  uint64_t v4 = *(void *)(*v0 + 168);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 208);
  uint64_t v6 = *(void *)(v1 + 200);
  return MEMORY[0x270FA2498](sub_24EBCBC7C, v6, v5);
}

uint64_t sub_24EBCBC7C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EBCBCE8()
{
  return swift_deallocObject();
}

uint64_t sub_24EBCBCF8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_24EBC3C54;
  return sub_24EBCB880(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_24EBCBE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[65] = v34;
  v8[63] = v32;
  v8[64] = v33;
  v8[61] = v30;
  v8[62] = v31;
  v8[59] = v28;
  v8[60] = v29;
  v8[57] = v26;
  v8[58] = v27;
  v8[55] = v24;
  v8[56] = v25;
  v8[53] = a8;
  v8[54] = v23;
  v8[51] = a6;
  v8[52] = a7;
  v8[49] = a4;
  v8[50] = a5;
  v8[47] = a2;
  v8[48] = a3;
  unint64_t v13 = sub_24EBA93F4();
  v8[66] = v13;
  unint64_t v14 = sub_24EBA9448();
  v8[67] = v14;
  unint64_t v15 = sub_24EBA949C();
  v8[68] = v15;
  v8[2] = a3;
  v8[3] = a4;
  v8[4] = a5;
  v8[5] = &type metadata for NewAndFeaturedItemContext;
  v8[6] = a6;
  v8[7] = v23;
  v8[8] = a8;
  v8[9] = v25;
  v8[10] = v26;
  v8[11] = v27;
  v8[12] = v28;
  v8[13] = v13;
  v8[14] = v14;
  v8[15] = v15;
  unsigned char v8[16] = v29;
  v8[17] = v32;
  v8[18] = v31;
  v8[19] = v34;
  v8[69] = sub_24EC21EF0();
  uint64_t v16 = sub_24EC22C90();
  v8[70] = v16;
  v8[71] = *(void *)(v16 - 8);
  v8[72] = swift_task_alloc();
  v8[73] = sub_24EC22B80();
  v8[74] = sub_24EC22B70();
  uint64_t v21 = (uint64_t (*)(void *))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  uint64_t v17 = (void *)swift_task_alloc();
  v8[75] = v17;
  *uint64_t v17 = v8;
  v17[1] = sub_24EBCC094;
  return v21(v8 + 34);
}

uint64_t sub_24EBCC094()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 608) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_24EC22B50();
  if (v0)
  {
    uint64_t v5 = sub_24EBCCD24;
  }
  else
  {
    *(void *)(v2 + 616) = v3;
    *(void *)(v2 + 624) = v4;
    uint64_t v5 = sub_24EBCC1FC;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_24EBCC1FC()
{
  uint64_t v1 = v0[37];
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v0 + 34, v1);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[42] = swift_getAssociatedTypeWitness();
  v0[43] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 39);
  sub_24EC22BD0();
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 34));
  uint64_t v5 = sub_24EC22B70();
  v0[79] = v5;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 39), v0[42]);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[80] = v6;
  void *v6 = v0;
  v6[1] = sub_24EBCC3EC;
  uint64_t v7 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 46, v5, v7);
}

uint64_t sub_24EBCC3EC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 648) = v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 624);
  uint64_t v4 = *(void *)(v2 + 616);
  return MEMORY[0x270FA2498](sub_24EBCC530, v4, v3);
}

uint64_t sub_24EBCC530()
{
  uint64_t v1 = v0[46];
  v0[82] = v1;
  if (!v1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 39));
    swift_task_dealloc();
    uint64_t v4 = v0[1];
    __asm { BRAA            X1, X16 }
  }
  v0[83] = *(void *)(v0[47] + 64);
  swift_getWitnessTable();
  sub_24EC21F20();
  swift_getWitnessTable();
  uint64_t v3 = sub_24EC22B50();
  return MEMORY[0x270FA2498](sub_24EBCC660, v3, v2);
}

uint64_t sub_24EBCC660()
{
  v0[84] = sub_24EC21F00();
  uint64_t v1 = v0[78];
  uint64_t v2 = v0[77];
  return MEMORY[0x270FA2498](sub_24EBCC6CC, v2, v1);
}

uint64_t sub_24EBCC6CC()
{
  uint64_t v1 = *(void *)(v0 + 576);
  uint64_t v2 = *(void *)(v0 + 552);
  *(void *)(v0 + 352) = *(void *)(v0 + 672);
  sub_24EC22B40();
  swift_getWitnessTable();
  sub_24EC22C40();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 576);
    uint64_t v5 = *(void *)(v0 + 568);
    uint64_t v6 = *(void *)(v0 + 560);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = sub_24EC22B70();
    *(void *)(v0 + 632) = v7;
    __swift_mutable_project_boxed_opaque_existential_1(v0 + 312, *(void *)(v0 + 336));
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 640) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_24EBCC3EC;
    uint64_t v9 = MEMORY[0x263F8F500];
    return MEMORY[0x270FA1E88](v0 + 368, v7, v9);
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 576);
    uint64_t v11 = *(void *)(v0 + 552);
    uint64_t v34 = *(void *)(v0 + 544);
    uint64_t v31 = *(void *)(v0 + 512);
    uint64_t v32 = *(void *)(v0 + 520);
    uint64_t v12 = *(void *)(v0 + 456);
    uint64_t v29 = *(void *)(v0 + 464);
    uint64_t v30 = *(void *)(v0 + 472);
    uint64_t v13 = *(void *)(v0 + 448);
    uint64_t v28 = *(void *)(v0 + 440);
    uint64_t v15 = *(void *)(v0 + 392);
    uint64_t v14 = *(void *)(v0 + 400);
    uint64_t v16 = *(void *)(v0 + 384);
    long long v33 = *(_OWORD *)(v0 + 528);
    long long v24 = *(_OWORD *)(v0 + 408);
    long long v25 = *(_OWORD *)(v0 + 424);
    long long v26 = *(_OWORD *)(v0 + 480);
    long long v27 = *(_OWORD *)(v0 + 496);
    uint64_t v35 = *(void *)(v0 + 656);
    uint64_t v17 = sub_24EC21EE0();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v10, v11);
    *(void *)(v0 + 360) = v17;
    uint64_t v18 = swift_task_alloc();
    *(void *)(v18 + 16) = v16;
    *(void *)(v18 + 24) = v15;
    *(void *)(v18 + 32) = v14;
    *(_OWORD *)(v18 + 40) = v24;
    *(_OWORD *)(v18 + 56) = v25;
    *(void *)(v18 + 72) = v28;
    *(void *)(v18 + 80) = v13;
    *(void *)(v18 + 88) = v12;
    *(void *)(v18 + 96) = v29;
    *(void *)(v18 + 104) = v30;
    *(_OWORD *)(v18 + 112) = v26;
    *(_OWORD *)(v18 + 128) = v27;
    *(void *)(v18 + 144) = v31;
    *(void *)(v18 + 152) = v32;
    *(void *)(v0 + 160) = v16;
    *(void *)(v0 + 168) = v15;
    *(void *)(v0 + 176) = v14;
    *(void *)(v0 + 184) = &type metadata for NewAndFeaturedItemContext;
    *(void *)(v0 + 192) = v24;
    *(void *)(v0 + 200) = v13;
    *(void *)(v0 + 208) = v12;
    *(void *)(v0 + 216) = v29;
    *(void *)(v0 + 224) = v30;
    *(_OWORD *)(v0 + 232) = v33;
    *(void *)(v0 + 248) = v34;
    *(void *)(v0 + 256) = v26;
    *(void *)(v0 + 264) = v32;
    sub_24EC21EB0();
    sub_24EC22B40();
    swift_getWitnessTable();
    uint64_t v19 = sub_24EC22AE0();
    swift_task_dealloc();
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_24EBCE8B8(v19, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_24EBCEB30(v20);
    *(void *)(v0 + 680) = v21;
    swift_bridgeObjectRelease();
    uint64_t v36 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x263F3DE18] + MEMORY[0x263F3DE18]);
    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 688) = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_24EBCCAF8;
    return v36(v21);
  }
}

uint64_t sub_24EBCCAF8()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    MEMORY[0x25334ADD0](v0);
    uint64_t v3 = *(void *)(v2 + 624);
    uint64_t v4 = *(void *)(v2 + 616);
    uint64_t v5 = sub_24EBCF36C;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 624);
    uint64_t v4 = *(void *)(v2 + 616);
    uint64_t v5 = sub_24EBCCC38;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24EBCCC38()
{
  uint64_t v1 = sub_24EC22B70();
  v0[79] = v1;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 39), v0[42]);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[80] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24EBCC3EC;
  uint64_t v3 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 46, v1, v3);
}

uint64_t sub_24EBCCD24()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EBCCD98(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_24EBC3C54;
  return sub_24EBCBE2C(a1, (uint64_t)(v1 + 20), v3, v4, v5, v6, v7, v8);
}

uint64_t sub_24EBCCECC(uint64_t a1)
{
  return a1;
}

double sub_24EBCCF34@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  *((void *)&v51 + 1) = a3;
  *(void *)&long long v51 = a2;
  uint64_t v54 = a1;
  uint64_t v55 = a6;
  uint64_t v70 = a17;
  uint64_t v56 = a12;
  uint64_t v50 = a11;
  uint64_t v52 = a9;
  uint64_t v53 = a10;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947538);
  uint64_t v48 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  unint64_t v47 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v22 = sub_24EBA93F4();
  unint64_t v23 = sub_24EBA9448();
  unint64_t v24 = sub_24EBA949C();
  *(void *)&long long v57 = a2;
  *((void *)&v57 + 1) = a3;
  uint64_t v58 = a4;
  long long v59 = &type metadata for NewAndFeaturedItemContext;
  uint64_t v60 = a5;
  uint64_t v61 = a8;
  uint64_t v25 = a5;
  uint64_t v27 = v52;
  uint64_t v26 = v53;
  uint64_t v62 = v52;
  uint64_t v63 = v53;
  uint64_t v64 = a11;
  unint64_t v65 = v22;
  unint64_t v66 = v23;
  unint64_t v67 = v24;
  uint64_t v68 = v56;
  uint64_t v69 = v70;
  uint64_t v45 = sub_24EC21FA0();
  uint64_t v46 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v29 = (char *)&v45 - v28;
  long long v57 = v51;
  uint64_t v58 = a4;
  long long v59 = &type metadata for NewAndFeaturedItemContext;
  uint64_t v60 = v25;
  uint64_t v61 = a8;
  uint64_t v62 = v27;
  uint64_t v63 = v26;
  uint64_t v64 = v50;
  unint64_t v65 = v22;
  unint64_t v66 = v23;
  unint64_t v67 = v24;
  uint64_t v68 = v56;
  uint64_t v69 = v70;
  uint64_t v30 = sub_24EC21EB0();
  double v31 = MEMORY[0x270FA5388](v30);
  long long v33 = (char *)&v45 - v32;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v34 + 16))((char *)&v45 - v32, v54, v30, v31);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v35 = v48;
    uint64_t v36 = v47;
    uint64_t v37 = v33;
    uint64_t v38 = v49;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v47, v37, v49);
    sub_24EC21FC0();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v38);
  }
  else
  {
    uint64_t v39 = v46;
    uint64_t v40 = v33;
    uint64_t v41 = v45;
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v29, v40, v45);
    MEMORY[0x253349B10](&v57, v41);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v41);
  }
  double result = *(double *)&v57;
  char v43 = v58;
  uint64_t v44 = v55;
  *uint64_t v55 = v57;
  *((unsigned char *)v44 + 16) = v43;
  return result;
}

uint64_t sub_24EBCD2C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[30] = a1;
  unint64_t v11 = sub_24EBA93F4();
  unint64_t v12 = sub_24EBA9448();
  unint64_t v13 = sub_24EBA949C();
  v8[2] = a3;
  v8[3] = a4;
  v8[4] = a5;
  v8[5] = &type metadata for NewAndFeaturedItemContext;
  v8[6] = a6;
  v8[7] = a8;
  v8[8] = v23;
  v8[9] = v24;
  v8[10] = v25;
  v8[11] = v26;
  v8[12] = v27;
  v8[13] = v11;
  v8[14] = v12;
  v8[15] = v13;
  unsigned char v8[16] = v28;
  v8[17] = v29;
  v8[18] = v30;
  v8[19] = v31;
  uint64_t v14 = type metadata accessor for NewAndFeaturedAction();
  v8[31] = v14;
  v8[32] = *(void *)(v14 - 8);
  v8[33] = swift_task_alloc();
  v8[34] = sub_24EC22B80();
  v8[35] = sub_24EC22B70();
  uint64_t v21 = (uint64_t (*)(void *))(*(void *)(a2 + 32) + **(int **)(a2 + 32));
  uint64_t v15 = (void *)swift_task_alloc();
  v8[36] = v15;
  *uint64_t v15 = v8;
  v15[1] = sub_24EBCD4E8;
  return v21(v8 + 25);
}

uint64_t sub_24EBCD4E8()
{
  uint64_t v2 = (void *)*v1;
  v2[37] = v0;
  swift_task_dealloc();
  uint64_t v4 = sub_24EC22B50();
  v2[38] = v4;
  v2[39] = v3;
  if (v0) {
    uint64_t v5 = sub_24EBCDD0C;
  }
  else {
    uint64_t v5 = sub_24EBCD648;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24EBCD648()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v0 + 25, v1);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[23] = swift_getAssociatedTypeWitness();
  v0[24] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 20);
  sub_24EC22BD0();
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 25));
  uint64_t v5 = sub_24EC22B70();
  v0[40] = v5;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 20), v0[23]);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[41] = (uint64_t)v6;
  void *v6 = v0;
  v6[1] = sub_24EBCD838;
  uint64_t v7 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 43, v5, v7);
}

uint64_t sub_24EBCD838()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 312);
  uint64_t v3 = *(void *)(v1 + 304);
  return MEMORY[0x270FA2498](sub_24EBCD97C, v3, v2);
}

uint64_t sub_24EBCD97C()
{
  if (*(unsigned char *)(v0 + 344) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 160);
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v3;
    uint64_t v4 = sub_24EC229B0();
    *uint64_t v3 = v0;
    v3[1] = sub_24EBCDA9C;
    uint64_t v5 = *(void *)(v0 + 264);
    return MEMORY[0x270F252C8](v5, v4);
  }
}

uint64_t sub_24EBCDA9C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 264);
  uint64_t v3 = *(void *)(*v0 + 256);
  uint64_t v4 = *(void *)(*v0 + 248);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 312);
  uint64_t v6 = *(void *)(v1 + 304);
  return MEMORY[0x270FA2498](sub_24EBCDC20, v6, v5);
}

uint64_t sub_24EBCDC20()
{
  uint64_t v1 = sub_24EC22B70();
  v0[40] = v1;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 20), v0[23]);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[41] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24EBCD838;
  uint64_t v3 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 43, v1, v3);
}

uint64_t sub_24EBCDD0C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t objectdestroy_3Tm_1()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24EBCDDD8(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_24EBC3C54;
  return sub_24EBCD2C8(a1, (uint64_t)(v1 + 20), v3, v4, v5, v6, v7, v8);
}

uint64_t sub_24EBCDF0C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = sub_24EC22020();
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 233) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_24EC21EA0() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v12 = *(void *)(v6 + 64);
  uint64_t v13 = v1;
  uint64_t v8 = *(void *)(v1 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v10 = sub_24EC22190();
      goto LABEL_12;
    case 1u:
      uint64_t v10 = sub_24EC221D0();
      goto LABEL_12;
    case 2u:
      uint64_t v10 = sub_24EC221E0();
      goto LABEL_12;
    case 3u:
    case 5u:
      uint64_t v10 = sub_24EC221A0();
      goto LABEL_12;
    case 4u:
      uint64_t v10 = sub_24EC22220();
      goto LABEL_12;
    case 6u:
      uint64_t v10 = sub_24EC221B0();
      goto LABEL_12;
    case 7u:
      uint64_t v10 = sub_24EC22240();
      goto LABEL_12;
    case 8u:
      uint64_t v10 = sub_24EC22230();
      goto LABEL_12;
    case 9u:
      uint64_t v10 = sub_24EC22170();
      goto LABEL_12;
    case 0xAu:
      uint64_t v10 = sub_24EC221C0();
LABEL_12:
      (*(void (**)(unint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v0 + v7, v10);
      break;
    default:
      break;
  }
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + ((v7 + v12 + v9) & ~v9), v13);
  return swift_deallocObject();
}

uint64_t sub_24EBCE200(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v19 = v1[3];
  uint64_t v17 = v1[4];
  uint64_t v5 = v1[8];
  uint64_t v6 = *(void *)(sub_24EC22020() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 233) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(sub_24EC21EA0() - 8);
  unint64_t v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = v1 + 20;
  uint64_t v12 = (uint64_t)v1 + v7;
  uint64_t v13 = (uint64_t)v1 + v10;
  uint64_t v14 = (uint64_t)v1
      + ((v10 + *(void *)(v9 + 64) + *(unsigned __int8 *)(*(void *)(v5 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  *uint64_t v15 = v2;
  v15[1] = sub_24EBC3C54;
  return sub_24EBC99CC(a1, v11, v12, v13, v14, v4, v19, v17);
}

uint64_t sub_24EBCE43C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_24EBBC584();
  return swift_deallocObject();
}

uint64_t sub_24EBCE4A8()
{
  uint64_t v3 = *(void *)(v0 + 240);
  uint64_t v2 = v0 + 240;
  uint64_t v4 = v2 - 80;
  uint64_t v5 = *(void *)(v2 + 8);
  LOBYTE(v2) = *(unsigned char *)(v2 + 16);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *(void *)uint64_t v6 = v1;
  *(unsigned char *)(v6 + 80) = v2;
  *(void *)(v6 + 24) = v3;
  *(void *)(v6 + 32) = v5;
  *(void *)(v6 + 8) = sub_24EBBC9C4;
  *(void *)(v6 + 16) = v4;
  sub_24EC22B80();
  *(void *)(v6 + 40) = sub_24EC22B70();
  uint64_t v8 = sub_24EC22B50();
  *(void *)(v6 + 48) = v8;
  *(void *)(v6 + 56) = v7;
  return MEMORY[0x270FA2498](sub_24EBC96D4, v8, v7);
}

uint64_t sub_24EBCE5AC()
{
  uint64_t v1 = sub_24EC21DF0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 233) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_24EBCE698(uint64_t a1)
{
  uint64_t v5 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = *(void *)(sub_24EC21DF0() - 8);
  uint64_t v10 = (uint64_t)(v1 + 20);
  uint64_t v11 = (uint64_t)v1 + ((*(unsigned __int8 *)(v9 + 80) + 233) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_24EBC3C54;
  return sub_24EBC8A44(a1, v10, v11, v5, v4, v6, v7, v8);
}

uint64_t NewAndFeaturedFeature.dispose(localState:sharedState:)(uint64_t a1, uint64_t a2, void *a3)
{
  return nullsub_1(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7], a3[8], a3[9], a3[10], a3[11], a3[12], a3[13], a3[14], a3[15], a3[16], a3[17], a3[18],
           a3[19]);
}

uint64_t sub_24EBCE864(uint64_t a1, uint64_t a2, void *a3)
{
  return nullsub_1(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7], a3[8], a3[9], a3[10], a3[11], a3[12], a3[13], a3[14], a3[15], a3[16], a3[17], a3[18],
           a3[19]);
}

uint64_t sub_24EBCE8B8(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v3 = a2;
    unint64_t v4 = 0;
    uint64_t v29 = result + 32;
    uint64_t v5 = a2 + 56;
    uint64_t v27 = MEMORY[0x263F8EE78];
    unint64_t v30 = *(void *)(result + 16);
    while (1)
    {
      if (v4 <= v2) {
        unint64_t v6 = v2;
      }
      else {
        unint64_t v6 = v4;
      }
      unint64_t v7 = v4;
      unint64_t v28 = v6;
      while (1)
      {
        if (v7 == v6)
        {
          __break(1u);
          return result;
        }
        unint64_t v4 = v7 + 1;
        if (*(void *)(v3 + 16)) {
          break;
        }
LABEL_8:
        unint64_t v7 = v4;
        if (v4 == v2) {
          return v27;
        }
      }
      uint64_t v8 = v29 + 24 * v7;
      uint64_t v9 = *(void *)v8;
      uint64_t v10 = *(void *)(v8 + 8);
      char v11 = *(unsigned char *)(v8 + 16);
      sub_24EC22FF0();
      sub_24EBBC8CC();
      sub_24EBBC8CC();
      sub_24EC22AB0();
      uint64_t v12 = sub_24EC23030();
      uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v14 = v12 & ~v13;
      if (((*(void *)(v5 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
        goto LABEL_7;
      }
      uint64_t v15 = *(void *)(a2 + 48);
      uint64_t v16 = (void *)(v15 + 16 * v14);
      BOOL v17 = *v16 == v9 && v10 == v16[1];
      if (!v17 && (sub_24EC22F70() & 1) == 0) {
        break;
      }
LABEL_25:
      sub_24EBBC584();
      uint64_t v23 = v27;
      double result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        double result = sub_24EC10584(0, *(void *)(v27 + 16) + 1, 1);
        uint64_t v23 = v27;
      }
      unint64_t v25 = *(void *)(v23 + 16);
      unint64_t v24 = *(void *)(v23 + 24);
      if (v25 >= v24 >> 1)
      {
        double result = sub_24EC10584(v24 > 1, v25 + 1, 1);
        uint64_t v23 = v27;
      }
      *(void *)(v23 + 16) = v25 + 1;
      uint64_t v27 = v23;
      uint64_t v26 = v23 + 24 * v25;
      *(void *)(v26 + 32) = v9;
      *(void *)(v26 + 40) = v10;
      *(unsigned char *)(v26 + 48) = v11;
      unint64_t v2 = v30;
      uint64_t v3 = a2;
      if (v4 == v30) {
        return v27;
      }
    }
    uint64_t v18 = ~v13;
    for (unint64_t i = v14 + 1; ; unint64_t i = v20 + 1)
    {
      uint64_t v20 = i & v18;
      if (((*(void *)(v5 + (((i & v18) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v18)) & 1) == 0) {
        break;
      }
      uint64_t v21 = (void *)(v15 + 16 * v20);
      BOOL v22 = *v21 == v9 && v10 == v21[1];
      if (v22 || (sub_24EC22F70() & 1) != 0) {
        goto LABEL_25;
      }
    }
LABEL_7:
    sub_24EBBC584();
    double result = sub_24EBBC584();
    unint64_t v2 = v30;
    uint64_t v3 = a2;
    unint64_t v6 = v28;
    goto LABEL_8;
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_24EBCEB30(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_24EBA949C();
  uint64_t result = sub_24EC22BF0();
  uint64_t v9 = result;
  if (v2)
  {
    unint64_t v4 = (char *)(a1 + 48);
    do
    {
      uint64_t v5 = *((void *)v4 - 2);
      uint64_t v6 = *((void *)v4 - 1);
      char v7 = *v4;
      v4 += 24;
      sub_24EBBC8CC();
      sub_24EC10980((uint64_t)&v8, v5, v6, v7);
      sub_24EBBC584();
      --v2;
    }
    while (v2);
    return v9;
  }
  return result;
}

uint64_t sub_24EBCEBD8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EBCEBF4()
{
  return swift_getWitnessTable();
}

unint64_t sub_24EBCEC14()
{
  unint64_t result = qword_2699474A8[0];
  if (!qword_2699474A8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2699474A8);
  }
  return result;
}

uint64_t sub_24EBCEC68()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EBCEC84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 160);
}

uint64_t sub_24EBCEC8C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24EBCECE0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v3 = *(void *)(a2 + 56);
  uint64_t v4 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 56) = v3;
  *(void *)(a1 + 64) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_24EBCED7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_24EBCEE50(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t sub_24EBCEED0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 73)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24EBCEF18(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 73) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for NewAndFeaturedFeature()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24EBCEF88(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 4) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24EBCEFA0(uint64_t a1)
{
  return sub_24EBCEFB0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_24EBCEFB0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 4) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24EBCEFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24EBCEF88(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_24EBCF014(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24EBCEF88(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24EBCEFB0(v6, v7, v8);
  return a1;
}

uint64_t sub_24EBCF06C(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_24EBCEFB0(v4, v5, v6);
  return a1;
}

uint64_t sub_24EBCF0B4(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 249);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 7) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t sub_24EBCF0FC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 249;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24EBCF140(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

uint64_t sub_24EBCF148()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EBCF164@<X0>(uint64_t *a1@<X8>)
{
  return sub_24EBCF25C(a1);
}

uint64_t sub_24EBCF190@<X0>(uint64_t a1@<X8>)
{
  return sub_24EBCF2B8(a1);
}

uint64_t sub_24EBCF1A8(uint64_t *a1)
{
  return sub_24EBCAF3C(a1, *(void *)(v1 + 160), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(_OWORD *)(v1 + 80), *(void *)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 120), *(void *)(v1 + 128), *(void *)(v1 + 136), *(void *)(v1 + 144), *(void *)(v1 + 152));
}

unint64_t sub_24EBCF200()
{
  unint64_t result = qword_269947530;
  if (!qword_269947530)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946580);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947530);
  }
  return result;
}

uint64_t sub_24EBCF25C@<X0>(uint64_t *a1@<X8>)
{
  return sub_24EBCB4B4(a1);
}

uint64_t sub_24EBCF2B8@<X0>(uint64_t a1@<X8>)
{
  return sub_24EBCB6C0(a1);
}

double sub_24EBCF314@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_24EBCCF34(a1, v2[2], v2[3], v2[4], v2[5], a2, v2[9], v2[10], v2[11], v2[12], v2[13], v2[14], v2[15], v2[16], v2[17], v2[18], v2[19]);
}

uint64_t BrowseEditorialDescriptor.content.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BrowseEditorialDescriptor.displayStyle.getter()
{
  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t BrowseEditorialDescriptor.galleryDestination.getter()
{
  return *(unsigned __int8 *)(v0 + 10);
}

uint64_t BrowseEditorialDescriptor.galleryDisplayStyle.getter()
{
  return *(unsigned __int8 *)(v0 + 11);
}

uint64_t BrowseEditorialDescriptor.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BrowseEditorialDescriptor.preferredInsetBehavior.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t BrowseEditorialDescriptor.subtitle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrowseEditorialDescriptor() + 40);
  return sub_24EBD0AF4(v3, a1);
}

uint64_t BrowseEditorialDescriptor.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrowseEditorialDescriptor() + 44);
  uint64_t v4 = sub_24EC21D10();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t BrowseEditorialDescriptor.init(content:displayStyle:galleryDestination:galleryDisplayStyle:identifier:preferredInsetBehavior:subtitle:title:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  *(void *)a9 = a1;
  *(unsigned char *)(a9 + 8) = a2 & 1;
  *(unsigned char *)(a9 + 9) = a3;
  *(unsigned char *)(a9 + 10) = a4;
  *(unsigned char *)(a9 + 11) = a5;
  *(void *)(a9 + 16) = a6;
  *(void *)(a9 + 24) = a7;
  *(unsigned char *)(a9 + 32) = a8;
  uint64_t v12 = type metadata accessor for BrowseEditorialDescriptor();
  sub_24EBD0B5C(a10, a9 + *(int *)(v12 + 40));
  uint64_t v13 = a9 + *(int *)(v12 + 44);
  uint64_t v14 = sub_24EC21D10();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32);
  return v15(v13, a11, v14);
}

unint64_t sub_24EBCF564(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x5379616C70736964;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x696669746E656469;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 0x656C746974627573;
      break;
    case 7:
      unint64_t result = 0x656C746974;
      break;
    default:
      unint64_t result = 0x746E65746E6F63;
      break;
  }
  return result;
}

unint64_t sub_24EBCF66C()
{
  return sub_24EBCF564(*v0);
}

uint64_t sub_24EBCF674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBD1F08(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EBCF69C(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_24EBCF6A8(uint64_t a1)
{
  unint64_t v2 = sub_24EBD0BC4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBCF6E4(uint64_t a1)
{
  unint64_t v2 = sub_24EBD0BC4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseEditorialDescriptor.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947540);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBD0BC4();
  sub_24EC23050();
  char v9 = *((unsigned char *)v3 + 8);
  uint64_t v11 = *v3;
  char v12 = v9;
  char v13 = 0;
  sub_24EBD0C18();
  sub_24EC22F40();
  if (!v2)
  {
    LOBYTE(v11) = *((unsigned char *)v3 + 9);
    char v13 = 1;
    sub_24EB7DBAC();
    sub_24EC22F40();
    LOBYTE(v11) = *((unsigned char *)v3 + 10);
    char v13 = 2;
    sub_24EBD0C6C();
    sub_24EC22EF0();
    LOBYTE(v11) = *((unsigned char *)v3 + 11);
    char v13 = 3;
    sub_24EC22EF0();
    LOBYTE(v11) = 4;
    sub_24EC22F00();
    LOBYTE(v11) = *((unsigned char *)v3 + 32);
    char v13 = 5;
    sub_24EBD0CC0();
    sub_24EC22EF0();
    type metadata accessor for BrowseEditorialDescriptor();
    LOBYTE(v11) = 6;
    sub_24EC21D10();
    sub_24EBD222C(&qword_2699465E0, MEMORY[0x263F06828]);
    sub_24EC22EF0();
    LOBYTE(v11) = 7;
    sub_24EC22F40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t BrowseEditorialDescriptor.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = sub_24EC21D10();
  uint64_t v29 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
  MEMORY[0x270FA5388](v6 - 8);
  char v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947568);
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for BrowseEditorialDescriptor();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  uint64_t v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_24EBD0BC4();
  long long v33 = v11;
  uint64_t v16 = v35;
  sub_24EC23040();
  if (v16) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  }
  uint64_t v27 = v5;
  unint64_t v28 = v8;
  uint64_t v35 = v12;
  uint64_t v17 = (uint64_t)v14;
  uint64_t v18 = v31;
  char v38 = 0;
  sub_24EBD0D14();
  uint64_t v19 = v32;
  sub_24EC22E90();
  char v20 = v37;
  *(void *)uint64_t v17 = v36;
  *(unsigned char *)(v17 + 8) = v20;
  char v38 = 1;
  sub_24EB7EBCC();
  sub_24EC22E90();
  *(unsigned char *)(v17 + 9) = v36;
  char v38 = 2;
  sub_24EBD0D68();
  sub_24EC22E40();
  *(unsigned char *)(v17 + 10) = v36;
  char v38 = 3;
  sub_24EC22E40();
  *(unsigned char *)(v17 + 11) = v36;
  LOBYTE(v36) = 4;
  *(void *)(v17 + 16) = sub_24EC22E50();
  *(void *)(v17 + 24) = v21;
  char v38 = 5;
  sub_24EBD0DBC();
  sub_24EC22E40();
  *(unsigned char *)(v17 + 32) = v36;
  LOBYTE(v36) = 6;
  sub_24EBD222C(&qword_269946658, MEMORY[0x263F06828]);
  uint64_t v22 = (uint64_t)v28;
  sub_24EC22E40();
  uint64_t v23 = v35;
  sub_24EBD0B5C(v22, v17 + *(int *)(v35 + 40));
  LOBYTE(v36) = 7;
  unint64_t v24 = v27;
  sub_24EC22E90();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v33, v19);
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v17 + *(int *)(v23 + 44), v24, v3);
  sub_24EBD0E10(v17, v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  return sub_24EBD0E74(v17);
}

uint64_t sub_24EBD0010@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BrowseEditorialDescriptor.init(from:)(a1, a2);
}

uint64_t sub_24EBD0028(void *a1)
{
  return BrowseEditorialDescriptor.encode(to:)(a1);
}

uint64_t BrowseEditorialDescriptor.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24EC21D10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)v1;
  if (v1[8])
  {
    sub_24EC23000();
    swift_bridgeObjectRetain();
    sub_24EB61EF4(a1, v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24EC23000();
    sub_24EC23000();
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      uint64_t v18 = v7;
      uint64_t v19 = v5;
      swift_bridgeObjectRetain();
      uint64_t v13 = v11 + 48;
      do
      {
        uint64_t v14 = *(void *)(v13 - 16);
        v13 += 24;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24EB61EF4(a1, v14);
        sub_24EC22AB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
      uint64_t v7 = v18;
      uint64_t v5 = v19;
    }
  }
  BrowseDisplayStyle.rawValue.getter(v2[9]);
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  if (v2[10] == 2)
  {
    sub_24EC23010();
  }
  else
  {
    sub_24EC23010();
    sub_24EC23000();
  }
  int v15 = v2[11];
  sub_24EC23010();
  if (v15 != 36)
  {
    BrowseDisplayStyle.rawValue.getter(v15);
    sub_24EC22AB0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  if (v2[32] == 2)
  {
    sub_24EC23010();
  }
  else
  {
    sub_24EC23010();
    sub_24EC23000();
  }
  uint64_t v16 = type metadata accessor for BrowseEditorialDescriptor();
  sub_24EBD0AF4((uint64_t)&v2[*(int *)(v16 + 40)], (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_24EC23010();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_24EC23010();
    sub_24EBD222C(&qword_2699466B8, MEMORY[0x263F06828]);
    sub_24EC22A20();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_24EBD222C(&qword_2699466B8, MEMORY[0x263F06828]);
  return sub_24EC22A20();
}

uint64_t BrowseEditorialDescriptor.hashValue.getter()
{
  sub_24EC22FF0();
  BrowseEditorialDescriptor.hash(into:)((uint64_t)v1);
  return sub_24EC23030();
}

uint64_t sub_24EBD0478()
{
  sub_24EC22FF0();
  BrowseEditorialDescriptor.hash(into:)((uint64_t)v1);
  return sub_24EC23030();
}

uint64_t sub_24EBD04BC()
{
  sub_24EC22FF0();
  BrowseEditorialDescriptor.hash(into:)((uint64_t)v1);
  return sub_24EC23030();
}

uint64_t _s15FitnessBrowsing25BrowseEditorialDescriptorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EC21D10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v52[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946708);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = &v52[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = &v52[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = &v52[-v16];
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = &v52[-v18];
  uint64_t v20 = *(void *)a1;
  uint64_t v21 = *(void *)a2;
  if (*(unsigned char *)(a1 + 8))
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0 || (sub_24EB61540(v20, v21) & 1) == 0) {
      goto LABEL_38;
    }
  }
  else if ((*(unsigned char *)(a2 + 8) & 1) != 0 || (sub_24EB60AA4(v20, v21) & 1) == 0)
  {
    goto LABEL_38;
  }
  uint64_t v56 = v4;
  uint64_t v57 = v5;
  uint64_t v55 = v10;
  char v22 = *(unsigned char *)(a2 + 9);
  uint64_t v23 = BrowseDisplayStyle.rawValue.getter(*(unsigned char *)(a1 + 9));
  uint64_t v25 = v24;
  if (v23 == BrowseDisplayStyle.rawValue.getter(v22) && v25 == v26)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v27 = v57;
  }
  else
  {
    char v28 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v29 = 0;
    uint64_t v27 = v57;
    if ((v28 & 1) == 0) {
      return v29 & 1;
    }
  }
  int v30 = *(unsigned __int8 *)(a1 + 10);
  int v31 = *(unsigned __int8 *)(a2 + 10);
  if (v30 == 2)
  {
    if (v31 != 2) {
      goto LABEL_38;
    }
  }
  else
  {
    char v29 = 0;
    if (v31 == 2 || ((v31 ^ v30) & 1) != 0) {
      return v29 & 1;
    }
  }
  int v32 = *(unsigned __int8 *)(a1 + 11);
  int v33 = *(unsigned __int8 *)(a2 + 11);
  if (v32 == 36)
  {
    if (v33 != 36) {
      goto LABEL_38;
    }
  }
  else
  {
    if (v33 == 36) {
      goto LABEL_38;
    }
    uint64_t v34 = BrowseDisplayStyle.rawValue.getter(v32);
    uint64_t v36 = v35;
    if (v34 == BrowseDisplayStyle.rawValue.getter(v33) && v36 == v37)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v27 = v57;
    }
    else
    {
      char v38 = sub_24EC22F70();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v29 = 0;
      uint64_t v27 = v57;
      if ((v38 & 1) == 0) {
        return v29 & 1;
      }
    }
  }
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
    || (v39 = sub_24EC22F70(), char v29 = 0, (v39 & 1) != 0))
  {
    int v40 = *(unsigned __int8 *)(a1 + 32);
    int v41 = *(unsigned __int8 *)(a2 + 32);
    if (v40 == 2)
    {
      if (v41 != 2) {
        goto LABEL_38;
      }
      goto LABEL_32;
    }
    char v29 = 0;
    if (v41 != 2 && ((v41 ^ v40) & 1) == 0)
    {
LABEL_32:
      uint64_t v42 = type metadata accessor for BrowseEditorialDescriptor();
      sub_24EBD0AF4(a1 + *(int *)(v42 + 40), (uint64_t)v19);
      uint64_t v54 = v42;
      sub_24EBD0AF4(a2 + *(int *)(v42 + 40), (uint64_t)v17);
      uint64_t v43 = *(int *)(v8 + 48);
      uint64_t v44 = (uint64_t)v55;
      uint64_t v45 = (uint64_t)&v55[v43];
      sub_24EBD0AF4((uint64_t)v19, (uint64_t)v55);
      sub_24EBD0AF4((uint64_t)v17, v45);
      uint64_t v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
      if (v46(v44, 1, v56) == 1)
      {
        sub_24EB742F4((uint64_t)v17, &qword_2699465B8);
        sub_24EB742F4((uint64_t)v19, &qword_2699465B8);
        if (v46(v45, 1, v56) == 1)
        {
          sub_24EB742F4((uint64_t)v55, &qword_2699465B8);
LABEL_41:
          char v29 = sub_24EC21D00();
          return v29 & 1;
        }
        goto LABEL_37;
      }
      sub_24EBD0AF4(v44, (uint64_t)v14);
      if (v46(v45, 1, v56) == 1)
      {
        sub_24EB742F4((uint64_t)v17, &qword_2699465B8);
        sub_24EB742F4((uint64_t)v19, &qword_2699465B8);
        (*(void (**)(unsigned char *, uint64_t))(v57 + 8))(v14, v56);
LABEL_37:
        sub_24EB742F4((uint64_t)v55, &qword_269946708);
        goto LABEL_38;
      }
      uint64_t v48 = v57;
      uint64_t v49 = v45;
      uint64_t v50 = v56;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v57 + 32))(v7, v49, v56);
      sub_24EBD222C(&qword_269946710, MEMORY[0x263F06828]);
      int v53 = sub_24EC22A30();
      long long v51 = *(void (**)(unsigned char *, uint64_t))(v48 + 8);
      v51(v7, v50);
      sub_24EB742F4((uint64_t)v17, &qword_2699465B8);
      sub_24EB742F4((uint64_t)v19, &qword_2699465B8);
      v51(v14, v50);
      sub_24EB742F4(v44, &qword_2699465B8);
      if (v53) {
        goto LABEL_41;
      }
LABEL_38:
      char v29 = 0;
    }
  }
  return v29 & 1;
}

uint64_t type metadata accessor for BrowseEditorialDescriptor()
{
  uint64_t result = qword_269947590;
  if (!qword_269947590) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24EBD0AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EBD0B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24EBD0BC4()
{
  unint64_t result = qword_269947548;
  if (!qword_269947548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947548);
  }
  return result;
}

unint64_t sub_24EBD0C18()
{
  unint64_t result = qword_269947550;
  if (!qword_269947550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947550);
  }
  return result;
}

unint64_t sub_24EBD0C6C()
{
  unint64_t result = qword_269947558;
  if (!qword_269947558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947558);
  }
  return result;
}

unint64_t sub_24EBD0CC0()
{
  unint64_t result = qword_269947560;
  if (!qword_269947560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947560);
  }
  return result;
}

unint64_t sub_24EBD0D14()
{
  unint64_t result = qword_269947570;
  if (!qword_269947570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947570);
  }
  return result;
}

unint64_t sub_24EBD0D68()
{
  unint64_t result = qword_269947578;
  if (!qword_269947578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947578);
  }
  return result;
}

unint64_t sub_24EBD0DBC()
{
  unint64_t result = qword_269947580;
  if (!qword_269947580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947580);
  }
  return result;
}

uint64_t sub_24EBD0E10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseEditorialDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EBD0E74(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BrowseEditorialDescriptor();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EBD0ED0()
{
  return sub_24EBD222C(&qword_269947588, (void (*)(uint64_t))type metadata accessor for BrowseEditorialDescriptor);
}

char *initializeBufferWithCopyOfBuffer for BrowseEditorialDescriptor(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (char *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    char v7 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 9) = *((unsigned char *)a2 + 9);
    *(_WORD *)(a1 + 10) = *((_WORD *)a2 + 5);
    uint64_t v8 = a2[2];
    uint64_t v9 = a2[3];
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v10 = *(int *)(a3 + 40);
    __dst = (void *)(a1 + v10);
    uint64_t v11 = (char *)a2 + v10;
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    uint64_t v12 = sub_24EC21D10();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(&v4[*(int *)(a3 + 44)], (uint64_t)a2 + *(int *)(a3 + 44), v12);
    }
    else
    {
      uint64_t v17 = *(void (**)(void *, char *, uint64_t))(v13 + 16);
      v17(__dst, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
      v17(&v4[*(int *)(a3 + 44)], (char *)a2 + *(int *)(a3 + 44), v12);
    }
  }
  return v4;
}

uint64_t destroy for BrowseEditorialDescriptor(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_24EC21D10();
  uint64_t v11 = *(void *)(v5 - 8);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v4, 1, v5);
  char v7 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  if (!v6)
  {
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v7(v4, v5);
    char v7 = v10;
  }
  uint64_t v8 = a1 + *(int *)(a2 + 44);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(v8, v5);
}

uint64_t initializeWithCopy for BrowseEditorialDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(_WORD *)(a1 + 10) = *(_WORD *)(a2 + 10);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(int *)(a3 + 40);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  uint64_t v11 = sub_24EC21D10();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44), v11);
  }
  else
  {
    uint64_t v15 = *(void (**)(void *, const void *, uint64_t))(v12 + 16);
    v15(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    v15((void *)(a1 + *(int *)(a3 + 44)), (const void *)(a2 + *(int *)(a3 + 44)), v11);
  }
  return a1;
}

uint64_t assignWithCopy for BrowseEditorialDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  *(unsigned char *)(a1 + 11) = *(unsigned char *)(a2 + 11);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 40);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_24EC21D10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24))(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44), v10);
  return a1;
}

uint64_t initializeWithTake for BrowseEditorialDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_24EC21D10();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44), v9);
  }
  else
  {
    uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
    v12(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    v12((void *)(a1 + *(int *)(a3 + 44)), (const void *)(a2 + *(int *)(a3 + 44)), v9);
  }
  return a1;
}

uint64_t assignWithTake for BrowseEditorialDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(_WORD *)(a1 + 10) = *(_WORD *)(a2 + 10);
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(int *)(a3 + 40);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_24EC21D10();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40))(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44), v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for BrowseEditorialDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EBD18FC);
}

uint64_t sub_24EBD18FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 40);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_24EC21D10();
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 44);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for BrowseEditorialDescriptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EBD1A40);
}

uint64_t sub_24EBD1A40(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 40);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_24EC21D10();
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 44);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_24EBD1B70()
{
  sub_24EBBA7EC();
  if (v0 <= 0x3F)
  {
    sub_24EC21D10();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for BrowseEditorialDescriptor.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BrowseEditorialDescriptor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBD1DC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseEditorialDescriptor.CodingKeys()
{
  return &type metadata for BrowseEditorialDescriptor.CodingKeys;
}

unint64_t sub_24EBD1E04()
{
  unint64_t result = qword_2699475A0;
  if (!qword_2699475A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699475A0);
  }
  return result;
}

unint64_t sub_24EBD1E5C()
{
  unint64_t result = qword_2699475A8;
  if (!qword_2699475A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699475A8);
  }
  return result;
}

unint64_t sub_24EBD1EB4()
{
  unint64_t result = qword_2699475B0;
  if (!qword_2699475B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699475B0);
  }
  return result;
}

uint64_t sub_24EBD1F08(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5379616C70736964 && a2 == 0xEC000000656C7974 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024EC310D0 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024EC310F0 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024EC31110 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_24EBD222C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t BrowseArtwork.backgroundColor.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24EB741CC(v1, a1, &qword_269946768);
}

uint64_t BrowseArtwork.templateURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for BrowseArtwork();
  return sub_24EB741CC(v1 + *(int *)(v3 + 20), a1, &qword_269946770);
}

uint64_t type metadata accessor for BrowseArtwork()
{
  uint64_t result = qword_26B1D86F8;
  if (!qword_26B1D86F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t BrowseArtwork.init(backgroundColor:templateURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_24EB7D0B0(a1, a3, &qword_269946768);
  uint64_t v5 = type metadata accessor for BrowseArtwork();
  return sub_24EB7D0B0(a2, a3 + *(int *)(v5 + 20), &qword_269946770);
}

uint64_t sub_24EBD237C(char a1)
{
  if (a1) {
    return 0x6574616C706D6574;
  }
  else {
    return 0x756F72676B636162;
  }
}

uint64_t sub_24EBD23C8()
{
  return sub_24EBD237C(*v0);
}

uint64_t sub_24EBD23D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBD5570(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBD23F8(uint64_t a1)
{
  unint64_t v2 = sub_24EBD26C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBD2434(uint64_t a1)
{
  unint64_t v2 = sub_24EBD26C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBD2470@<X0>(uint64_t a1@<X8>)
{
  return sub_24EB741CC(v1, a1, &qword_269946768);
}

uint64_t sub_24EBD2498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24EB741CC(v2 + *(int *)(a1 + 20), a2, &qword_269946770);
}

uint64_t BrowseArtwork.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699475B8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBD26C4();
  sub_24EC23050();
  v8[15] = 0;
  sub_24EC21E00();
  sub_24EBD5684(&qword_2699475C8, MEMORY[0x263F3E0F0]);
  sub_24EC22EF0();
  if (!v1)
  {
    type metadata accessor for BrowseArtwork();
    v8[14] = 1;
    sub_24EC21D30();
    sub_24EBD5684(&qword_269946140, MEMORY[0x263F06EA8]);
    sub_24EC22EF0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24EBD26C4()
{
  unint64_t result = qword_2699475C0;
  if (!qword_2699475C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699475C0);
  }
  return result;
}

uint64_t BrowseArtwork.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v23 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699475D0);
  uint64_t v22 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for BrowseArtwork();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBD26C4();
  sub_24EC23040();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v20 = v11;
  uint64_t v14 = (uint64_t)v13;
  uint64_t v15 = v22;
  sub_24EC21E00();
  char v26 = 0;
  sub_24EBD5684(&qword_2699475D8, MEMORY[0x263F3E0F0]);
  uint64_t v16 = (uint64_t)v23;
  uint64_t v17 = v24;
  sub_24EC22E40();
  sub_24EB7D0B0(v16, v14, &qword_269946768);
  sub_24EC21D30();
  char v25 = 1;
  sub_24EBD5684(&qword_269946150, MEMORY[0x263F06EA8]);
  sub_24EC22E40();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v17);
  sub_24EB7D0B0((uint64_t)v6, v14 + *(int *)(v20 + 20), &qword_269946770);
  sub_24EBD2AA4(v14, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_24EBD2B08(v14);
}

uint64_t sub_24EBD2AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseArtwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EBD2B08(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BrowseArtwork();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EBD2B64@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BrowseArtwork.init(from:)(a1, a2);
}

uint64_t sub_24EBD2B7C(void *a1)
{
  return BrowseArtwork.encode(to:)(a1);
}

uint64_t BrowseArtwork.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24EC21D30();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v19 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24EC21E00();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EB741CC(v1, (uint64_t)v14, &qword_269946768);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
  {
    sub_24EC23010();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    sub_24EC23010();
    sub_24EBD5684(&qword_269946E28, MEMORY[0x263F3E0F0]);
    sub_24EC22A20();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v15 = type metadata accessor for BrowseArtwork();
  sub_24EB741CC(v1 + *(int *)(v15 + 20), (uint64_t)v7, &qword_269946770);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v7, 1, v2) == 1) {
    return sub_24EC23010();
  }
  uint64_t v17 = v19;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v19, v7, v2);
  sub_24EC23010();
  sub_24EBD5684(&qword_269946158, MEMORY[0x263F06EA8]);
  sub_24EC22A20();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v17, v2);
}

uint64_t BrowseArtwork.hashValue.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24EC21D30();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24EC21E00();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EC22FF0();
  sub_24EB741CC(v1, (uint64_t)v15, &qword_269946768);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
  {
    sub_24EC23010();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    sub_24EC23010();
    sub_24EBD5684(&qword_269946E28, MEMORY[0x263F3E0F0]);
    sub_24EC22A20();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v16 = type metadata accessor for BrowseArtwork();
  sub_24EB741CC(v1 + *(int *)(v16 + 20), (uint64_t)v8, &qword_269946770);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_24EC23010();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_24EC23010();
    sub_24EBD5684(&qword_269946158, MEMORY[0x263F06EA8]);
    sub_24EC22A20();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_24EC23030();
}

uint64_t sub_24EBD32C4(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a2;
  uint64_t v3 = v2;
  uint64_t v4 = sub_24EC21D30();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v19 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24EC21E00();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EB741CC(v3, (uint64_t)v16, &qword_269946768);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10) == 1)
  {
    sub_24EC23010();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v16, v10);
    sub_24EC23010();
    sub_24EBD5684(&qword_269946E28, MEMORY[0x263F3E0F0]);
    sub_24EC22A20();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  sub_24EB741CC(v3 + *(int *)(v20 + 20), (uint64_t)v9, &qword_269946770);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4) == 1) {
    return sub_24EC23010();
  }
  uint64_t v18 = v19;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v19, v9, v4);
  sub_24EC23010();
  sub_24EBD5684(&qword_269946158, MEMORY[0x263F06EA8]);
  sub_24EC22A20();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v18, v4);
}

uint64_t sub_24EBD3654(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a2;
  uint64_t v3 = sub_24EC21D30();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v19 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24EC21E00();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EC22FF0();
  sub_24EB741CC(v2, (uint64_t)v15, &qword_269946768);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
  {
    sub_24EC23010();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    sub_24EC23010();
    sub_24EBD5684(&qword_269946E28, MEMORY[0x263F3E0F0]);
    sub_24EC22A20();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  sub_24EB741CC(v2 + *(int *)(v20 + 20), (uint64_t)v8, &qword_269946770);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v8, 1, v3) == 1)
  {
    sub_24EC23010();
  }
  else
  {
    uint64_t v16 = v19;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v19, v8, v3);
    sub_24EC23010();
    sub_24EBD5684(&qword_269946158, MEMORY[0x263F06EA8]);
    sub_24EC22A20();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v16, v3);
  }
  return sub_24EC23030();
}

BOOL _s15FitnessBrowsing13BrowseArtworkV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v59 = sub_24EC21D30();
  uint64_t v57 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v49 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699475F8);
  MEMORY[0x270FA5388](v52);
  uint64_t v58 = (uint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v50 = (uint64_t)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v55 = (uint64_t)&v48 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v56 = (uint64_t)&v48 - v11;
  uint64_t v12 = sub_24EC21E00();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  long long v51 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947600);
  uint64_t v16 = v15 - 8;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  char v25 = (char *)&v48 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v48 - v26;
  uint64_t v53 = a1;
  sub_24EB741CC(a1, (uint64_t)&v48 - v26, &qword_269946768);
  uint64_t v54 = a2;
  sub_24EB741CC(a2, (uint64_t)v25, &qword_269946768);
  uint64_t v28 = (uint64_t)&v18[*(int *)(v16 + 56)];
  sub_24EB741CC((uint64_t)v27, (uint64_t)v18, &qword_269946768);
  sub_24EB741CC((uint64_t)v25, v28, &qword_269946768);
  char v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v29((uint64_t)v18, 1, v12) != 1)
  {
    sub_24EB741CC((uint64_t)v18, (uint64_t)v22, &qword_269946768);
    if (v29(v28, 1, v12) != 1)
    {
      int v32 = v51;
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v51, v28, v12);
      sub_24EBD5684(&qword_269947610, MEMORY[0x263F3E0F0]);
      char v33 = sub_24EC22A30();
      uint64_t v34 = *(void (**)(char *, uint64_t))(v13 + 8);
      v34(v32, v12);
      sub_24EB742F4((uint64_t)v25, &qword_269946768);
      sub_24EB742F4((uint64_t)v27, &qword_269946768);
      v34(v22, v12);
      sub_24EB742F4((uint64_t)v18, &qword_269946768);
      if ((v33 & 1) == 0) {
        return 0;
      }
      goto LABEL_8;
    }
    sub_24EB742F4((uint64_t)v25, &qword_269946768);
    sub_24EB742F4((uint64_t)v27, &qword_269946768);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v22, v12);
LABEL_6:
    int v30 = &qword_269947600;
    uint64_t v31 = (uint64_t)v18;
LABEL_14:
    sub_24EB742F4(v31, v30);
    return 0;
  }
  sub_24EB742F4((uint64_t)v25, &qword_269946768);
  sub_24EB742F4((uint64_t)v27, &qword_269946768);
  if (v29(v28, 1, v12) != 1) {
    goto LABEL_6;
  }
  sub_24EB742F4((uint64_t)v18, &qword_269946768);
LABEL_8:
  uint64_t v35 = type metadata accessor for BrowseArtwork();
  uint64_t v36 = v56;
  sub_24EB741CC(v53 + *(int *)(v35 + 20), v56, &qword_269946770);
  uint64_t v37 = v55;
  sub_24EB741CC(v54 + *(int *)(v35 + 20), v55, &qword_269946770);
  uint64_t v38 = v58;
  uint64_t v39 = v58 + *(int *)(v52 + 48);
  sub_24EB741CC(v36, v58, &qword_269946770);
  sub_24EB741CC(v37, v39, &qword_269946770);
  uint64_t v40 = v57;
  int v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
  uint64_t v42 = v59;
  if (v41(v38, 1, v59) == 1)
  {
    sub_24EB742F4(v37, &qword_269946770);
    sub_24EB742F4(v36, &qword_269946770);
    if (v41(v39, 1, v42) == 1)
    {
      sub_24EB742F4(v38, &qword_269946770);
      return 1;
    }
    goto LABEL_13;
  }
  uint64_t v43 = v50;
  sub_24EB741CC(v38, v50, &qword_269946770);
  if (v41(v39, 1, v42) == 1)
  {
    sub_24EB742F4(v37, &qword_269946770);
    sub_24EB742F4(v36, &qword_269946770);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v43, v42);
LABEL_13:
    int v30 = &qword_2699475F8;
    uint64_t v31 = v38;
    goto LABEL_14;
  }
  uint64_t v45 = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v49, v39, v42);
  sub_24EBD5684(&qword_269947608, MEMORY[0x263F06EA8]);
  char v46 = sub_24EC22A30();
  unint64_t v47 = *(void (**)(char *, uint64_t))(v40 + 8);
  v47(v45, v42);
  sub_24EB742F4(v37, &qword_269946770);
  sub_24EB742F4(v36, &qword_269946770);
  v47((char *)v43, v42);
  sub_24EB742F4(v38, &qword_269946770);
  return (v46 & 1) != 0;
}

uint64_t sub_24EBD4154()
{
  return sub_24EBD5684(&qword_26B1D86F0, (void (*)(uint64_t))type metadata accessor for BrowseArtwork);
}

uint64_t sub_24EBD419C()
{
  return sub_24EBD5684(&qword_26B1D86D8, (void (*)(uint64_t))type metadata accessor for BrowseArtwork);
}

uint64_t sub_24EBD41E4()
{
  return sub_24EBD5684(&qword_26B1D86E0, (void (*)(uint64_t))type metadata accessor for BrowseArtwork);
}

uint64_t sub_24EBD422C()
{
  return sub_24EBD5684(&qword_26B1D86E8, (void (*)(uint64_t))type metadata accessor for BrowseArtwork);
}

uint64_t *initializeBufferWithCopyOfBuffer for BrowseArtwork(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24EC21E00();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_24EC21D30();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
  }
  return a1;
}

uint64_t destroy for BrowseArtwork(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EC21E00();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = sub_24EC21D30();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

char *initializeWithCopy for BrowseArtwork(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EC21E00();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_24EC21D30();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

char *assignWithCopy for BrowseArtwork(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EC21E00();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_24EC21D30();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

char *initializeWithTake for BrowseArtwork(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EC21E00();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_24EC21D30();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

char *assignWithTake for BrowseArtwork(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EC21E00();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_24EC21D30();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for BrowseArtwork(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EBD4FF0);
}

uint64_t sub_24EBD4FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for BrowseArtwork(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EBD5104);
}

uint64_t sub_24EBD5104(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_24EBD5210()
{
  sub_24EBD5310(319, &qword_26B1D8620, MEMORY[0x263F3E0F0]);
  if (v0 <= 0x3F)
  {
    sub_24EBD5310(319, &qword_26B1D8610, MEMORY[0x263F06EA8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_24EBD5310(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24EC22C90();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for BrowseArtwork.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBD5430);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseArtwork.CodingKeys()
{
  return &type metadata for BrowseArtwork.CodingKeys;
}

unint64_t sub_24EBD546C()
{
  unint64_t result = qword_2699475E0;
  if (!qword_2699475E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699475E0);
  }
  return result;
}

unint64_t sub_24EBD54C4()
{
  unint64_t result = qword_2699475E8;
  if (!qword_2699475E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699475E8);
  }
  return result;
}

unint64_t sub_24EBD551C()
{
  unint64_t result = qword_2699475F0;
  if (!qword_2699475F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699475F0);
  }
  return result;
}

uint64_t sub_24EBD5570(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574616C706D6574 && a2 == 0xEB000000004C5255)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EBD5684(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL static DynamicBrickDisplayStyle.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_24EBD56DC(char a1)
{
  return *(void *)&aBottomlecenter[8 * a1];
}

uint64_t sub_24EBD56FC(uint64_t a1)
{
  unint64_t v2 = sub_24EBD5F1C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBD5738(uint64_t a1)
{
  unint64_t v2 = sub_24EBD5F1C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBD5774(uint64_t a1)
{
  unint64_t v2 = sub_24EBD5EC8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBD57B0(uint64_t a1)
{
  unint64_t v2 = sub_24EBD5EC8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBD57EC(uint64_t a1)
{
  unint64_t v2 = sub_24EBD5E74();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBD5828(uint64_t a1)
{
  unint64_t v2 = sub_24EBD5E74();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBD5864()
{
  return sub_24EBD56DC(*v0);
}

uint64_t sub_24EBD586C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBD6040(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBD5894(uint64_t a1)
{
  unint64_t v2 = sub_24EBD5DCC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBD58D0(uint64_t a1)
{
  unint64_t v2 = sub_24EBD5DCC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBD590C(uint64_t a1)
{
  unint64_t v2 = sub_24EBD5E20();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBD5948(uint64_t a1)
{
  unint64_t v2 = sub_24EBD5E20();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DynamicBrickDisplayStyle.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v31 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947618);
  uint64_t v29 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v28 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947620);
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  MEMORY[0x270FA5388](v5);
  char v25 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947628);
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947630);
  uint64_t v22 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947638);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBD5DCC();
  sub_24EC23050();
  switch((char)v31)
  {
    case 1:
      char v33 = 1;
      sub_24EBD5EC8();
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
      break;
    case 2:
      char v34 = 2;
      sub_24EBD5E74();
      uint64_t v17 = v25;
      sub_24EC22EC0();
      uint64_t v19 = v26;
      uint64_t v18 = v27;
      goto LABEL_5;
    case 3:
      char v35 = 3;
      sub_24EBD5E20();
      uint64_t v17 = v28;
      sub_24EC22EC0();
      uint64_t v19 = v29;
      uint64_t v18 = v30;
LABEL_5:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_24EBD5F1C();
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v10);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

unint64_t sub_24EBD5DCC()
{
  unint64_t result = qword_269947640;
  if (!qword_269947640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947640);
  }
  return result;
}

unint64_t sub_24EBD5E20()
{
  unint64_t result = qword_269947648;
  if (!qword_269947648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947648);
  }
  return result;
}

unint64_t sub_24EBD5E74()
{
  unint64_t result = qword_269947650;
  if (!qword_269947650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947650);
  }
  return result;
}

unint64_t sub_24EBD5EC8()
{
  unint64_t result = qword_269947658;
  if (!qword_269947658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947658);
  }
  return result;
}

unint64_t sub_24EBD5F1C()
{
  unint64_t result = qword_269947660;
  if (!qword_269947660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947660);
  }
  return result;
}

char *DynamicBrickDisplayStyle.init(from:)(void *a1)
{
  return sub_24EBD620C(a1);
}

char *sub_24EBD5F88@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_24EBD620C(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_24EBD5FB4(void *a1)
{
  return DynamicBrickDisplayStyle.encode(to:)(a1, *v1);
}

uint64_t DynamicBrickDisplayStyle.hash(into:)()
{
  return sub_24EC23000();
}

uint64_t DynamicBrickDisplayStyle.hashValue.getter()
{
  return sub_24EC23030();
}

uint64_t sub_24EBD6040(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x654C6D6F74746F62 && a2 == 0xED0000676E696461;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265746E6563 && a2 == 0xE600000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x654C7265746E6563 && a2 == 0xED0000676E696461 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x696461654C706F74 && a2 == 0xEA0000000000676ELL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

char *sub_24EBD620C(void *a1)
{
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699476C8);
  uint64_t v45 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v44 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699476D0);
  uint64_t v42 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v43 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699476D8);
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699476E0);
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699476E8);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  char v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_24EBD5DCC();
  uint64_t v15 = v47;
  sub_24EC23040();
  if (v15) {
    goto LABEL_7;
  }
  uint64_t v35 = v7;
  uint64_t v36 = v9;
  uint64_t v16 = v43;
  uint64_t v17 = v44;
  uint64_t v47 = 0;
  uint64_t v18 = v45;
  uint64_t v19 = v11;
  uint64_t v20 = v13;
  uint64_t v21 = sub_24EC22EA0();
  uint64_t v22 = (char *)v21;
  if (*(void *)(v21 + 16) != 1)
  {
    uint64_t v25 = sub_24EC22D50();
    swift_allocError();
    uint64_t v13 = v22;
    uint64_t v26 = v10;
    uint64_t v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269946108);
    *uint64_t v28 = &type metadata for DynamicBrickDisplayStyle;
    sub_24EC22E10();
    sub_24EC22D40();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v28, *MEMORY[0x263F8DCB0], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v26);
LABEL_7:
    uint64_t v29 = (uint64_t)v46;
    goto LABEL_8;
  }
  uint64_t v13 = (char *)*(unsigned __int8 *)(v21 + 32);
  switch(*(unsigned char *)(v21 + 32))
  {
    case 1:
      char v49 = 1;
      sub_24EBD5EC8();
      uint64_t v31 = v47;
      sub_24EC22E00();
      if (v31) {
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v39);
      goto LABEL_14;
    case 2:
      char v50 = 2;
      sub_24EBD5E74();
      uint64_t v32 = v47;
      sub_24EC22E00();
      if (v32) {
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v40);
      goto LABEL_14;
    case 3:
      char v51 = 3;
      sub_24EBD5E20();
      uint64_t v33 = v47;
      sub_24EC22E00();
      if (v33) {
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v18 + 8))(v17, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v10);
      uint64_t v29 = (uint64_t)v46;
      break;
    default:
      char v48 = 0;
      sub_24EBD5F1C();
      uint64_t v23 = v36;
      uint64_t v24 = v47;
      sub_24EC22E00();
      if (v24)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v10);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v35);
LABEL_14:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v10);
      uint64_t v29 = (uint64_t)v46;
      break;
  }
LABEL_8:
  __swift_destroy_boxed_opaque_existential_1(v29);
  return v13;
}

unint64_t sub_24EBD6848()
{
  unint64_t result = qword_269947668;
  if (!qword_269947668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947668);
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicBrickDisplayStyle()
{
  return &type metadata for DynamicBrickDisplayStyle;
}

unsigned char *_s15FitnessBrowsing24DynamicBrickDisplayStyleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBD697CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicBrickDisplayStyle.CodingKeys()
{
  return &type metadata for DynamicBrickDisplayStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for DynamicBrickDisplayStyle.BottomLeadingCodingKeys()
{
  return &type metadata for DynamicBrickDisplayStyle.BottomLeadingCodingKeys;
}

ValueMetadata *type metadata accessor for DynamicBrickDisplayStyle.CenterCodingKeys()
{
  return &type metadata for DynamicBrickDisplayStyle.CenterCodingKeys;
}

ValueMetadata *type metadata accessor for DynamicBrickDisplayStyle.CenterLeadingCodingKeys()
{
  return &type metadata for DynamicBrickDisplayStyle.CenterLeadingCodingKeys;
}

ValueMetadata *type metadata accessor for DynamicBrickDisplayStyle.TopLeadingCodingKeys()
{
  return &type metadata for DynamicBrickDisplayStyle.TopLeadingCodingKeys;
}

unint64_t sub_24EBD69F8()
{
  unint64_t result = qword_269947670;
  if (!qword_269947670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947670);
  }
  return result;
}

unint64_t sub_24EBD6A50()
{
  unint64_t result = qword_269947678;
  if (!qword_269947678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947678);
  }
  return result;
}

unint64_t sub_24EBD6AA8()
{
  unint64_t result = qword_269947680;
  if (!qword_269947680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947680);
  }
  return result;
}

unint64_t sub_24EBD6B00()
{
  unint64_t result = qword_269947688;
  if (!qword_269947688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947688);
  }
  return result;
}

unint64_t sub_24EBD6B58()
{
  unint64_t result = qword_269947690;
  if (!qword_269947690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947690);
  }
  return result;
}

unint64_t sub_24EBD6BB0()
{
  unint64_t result = qword_269947698;
  if (!qword_269947698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947698);
  }
  return result;
}

unint64_t sub_24EBD6C08()
{
  unint64_t result = qword_2699476A0;
  if (!qword_2699476A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699476A0);
  }
  return result;
}

unint64_t sub_24EBD6C60()
{
  unint64_t result = qword_2699476A8;
  if (!qword_2699476A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699476A8);
  }
  return result;
}

unint64_t sub_24EBD6CB8()
{
  unint64_t result = qword_2699476B0;
  if (!qword_2699476B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699476B0);
  }
  return result;
}

unint64_t sub_24EBD6D10()
{
  unint64_t result = qword_2699476B8;
  if (!qword_2699476B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699476B8);
  }
  return result;
}

unint64_t sub_24EBD6D68()
{
  unint64_t result = qword_2699476C0;
  if (!qword_2699476C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699476C0);
  }
  return result;
}

uint64_t BrowseItemPlaceholder.displayStyle.getter()
{
  return *v0;
}

uint64_t BrowseItemPlaceholder.editorialCardIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BrowseItemPlaceholder.groupTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BrowseItemPlaceholder.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BrowseItemPlaceholder.referenceIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BrowseItemPlaceholder.referenceType.getter()
{
  return *(unsigned __int8 *)(v0 + 72);
}

void __swiftcall BrowseItemPlaceholder.init(displayStyle:editorialCardIdentifier:groupTitle:identifier:referenceIdentifier:referenceType:)(FitnessBrowsing::BrowseItemPlaceholder *__return_ptr retstr, FitnessBrowsing::BrowseDisplayStyle displayStyle, Swift::String_optional editorialCardIdentifier, Swift::String_optional groupTitle, Swift::String identifier, Swift::String referenceIdentifier, FitnessBrowsing::BrowseItemReferenceType referenceType)
{
  retstr->displayStyle = displayStyle;
  retstr->editorialCardIdentifier = editorialCardIdentifier;
  retstr->groupTitle = groupTitle;
  retstr->identifier = identifier;
  retstr->referenceIdentifier = referenceIdentifier;
  retstr->referenceType = referenceType;
}

unint64_t sub_24EBD6EB0(char a1)
{
  unint64_t result = 0xD000000000000017;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0x74695470756F7267;
      break;
    case 3:
      unint64_t result = 0x696669746E656469;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0x636E657265666572;
      break;
    default:
      unint64_t result = 0x5379616C70736964;
      break;
  }
  return result;
}

unint64_t sub_24EBD6FA8()
{
  return sub_24EBD6EB0(*v0);
}

uint64_t sub_24EBD6FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBD8198(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBD6FD8(uint64_t a1)
{
  unint64_t v2 = sub_24EBD72F0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBD7014(uint64_t a1)
{
  unint64_t v2 = sub_24EBD72F0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseItemPlaceholder.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699476F0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  uint64_t v9 = *((void *)v1 + 1);
  uint64_t v20 = *((void *)v1 + 2);
  uint64_t v21 = v9;
  uint64_t v10 = *((void *)v1 + 3);
  uint64_t v18 = *((void *)v1 + 4);
  uint64_t v19 = v10;
  uint64_t v17 = *((void *)v1 + 5);
  uint64_t v11 = *((void *)v1 + 6);
  v15[1] = *((void *)v1 + 7);
  v15[2] = *((void *)v1 + 8);
  v15[3] = v11;
  int v16 = v1[72];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBD72F0();
  sub_24EC23050();
  char v29 = v8;
  char v28 = 0;
  sub_24EB7DBAC();
  sub_24EC22F40();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v13 = v5;
  char v14 = v16;
  char v27 = 1;
  sub_24EC22ED0();
  char v26 = 2;
  sub_24EC22ED0();
  char v25 = 3;
  sub_24EC22F00();
  char v24 = 4;
  sub_24EC22F00();
  char v23 = v14;
  char v22 = 5;
  sub_24EB7DCA8();
  sub_24EC22F40();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v7, v4);
}

unint64_t sub_24EBD72F0()
{
  unint64_t result = qword_2699476F8;
  if (!qword_2699476F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699476F8);
  }
  return result;
}

uint64_t BrowseItemPlaceholder.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947700);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBD72F0();
  sub_24EC23040();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v6;
  }
  else
  {
    char v37 = 0;
    sub_24EB7EBCC();
    sub_24EC22E90();
    int v9 = v38;
    char v36 = 1;
    uint64_t v10 = sub_24EC22E20();
    uint64_t v13 = v12;
    uint64_t v30 = v10;
    char v35 = 2;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_24EC22E20();
    uint64_t v29 = v14;
    char v34 = 3;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_24EC22E50();
    int v26 = v9;
    uint64_t v15 = v29;
    char v33 = 4;
    uint64_t v27 = v16;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_24EC22E50();
    uint64_t v19 = v18;
    uint64_t v23 = v17;
    char v31 = 5;
    sub_24EB7ED2C();
    uint64_t v24 = v19;
    swift_bridgeObjectRetain();
    sub_24EC22E90();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v20 = v32;
    *(unsigned char *)a2 = v26;
    *(void *)(a2 + 8) = v30;
    *(void *)(a2 + 16) = v13;
    uint64_t v21 = v27;
    *(void *)(a2 + 24) = v28;
    *(void *)(a2 + 32) = v15;
    uint64_t v22 = v24;
    *(void *)(a2 + 40) = v25;
    *(void *)(a2 + 48) = v21;
    *(void *)(a2 + 56) = v23;
    *(void *)(a2 + 64) = v22;
    *(unsigned char *)(a2 + 72) = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24EBD775C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BrowseItemPlaceholder.init(from:)(a1, a2);
}

uint64_t sub_24EBD7774(void *a1)
{
  return BrowseItemPlaceholder.encode(to:)(a1);
}

uint64_t BrowseItemPlaceholder.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  BrowseDisplayStyle.rawValue.getter(*(unsigned char *)v0);
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_24EC23010();
    swift_bridgeObjectRetain();
    sub_24EC22AB0();
    swift_bridgeObjectRelease();
    if (v2)
    {
LABEL_3:
      sub_24EC23010();
      swift_bridgeObjectRetain();
      sub_24EC22AB0();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_24EC23010();
    if (v2) {
      goto LABEL_3;
    }
  }
  sub_24EC23010();
LABEL_6:
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  sub_24EC22AB0();
  return swift_bridgeObjectRelease();
}

uint64_t BrowseItemPlaceholder.hashValue.getter()
{
  return sub_24EC23030();
}

uint64_t sub_24EBD798C()
{
  return sub_24EC23030();
}

uint64_t sub_24EBD7A04()
{
  return sub_24EC23030();
}

uint64_t _s15FitnessBrowsing21BrowseItemPlaceholderV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v23 = *(void *)(a1 + 48);
  uint64_t v24 = *(void *)(a1 + 24);
  char v17 = *(unsigned char *)(a1 + 72);
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v25 = *(void *)(a2 + 40);
  uint64_t v26 = *(void *)(a1 + 40);
  uint64_t v21 = *(void *)(a1 + 56);
  uint64_t v22 = *(void *)(a2 + 48);
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v20 = *(void *)(a2 + 56);
  uint64_t v18 = *(void *)(a2 + 64);
  char v16 = *(unsigned char *)(a2 + 72);
  char v9 = *(unsigned char *)a2;
  uint64_t v10 = BrowseDisplayStyle.rawValue.getter(*(unsigned char *)a1);
  uint64_t v12 = v11;
  if (v10 == BrowseDisplayStyle.rawValue.getter(v9) && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v14 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      return 0;
    }
  }
  if (v3)
  {
    if (!v6 || (v2 != v5 || v3 != v6) && (sub_24EC22F70() & 1) == 0) {
      return 0;
    }
  }
  else if (v6)
  {
    return 0;
  }
  if (!v4)
  {
    if (!v8) {
      goto LABEL_19;
    }
    return 0;
  }
  if (!v8 || (v24 != v7 || v4 != v8) && (sub_24EC22F70() & 1) == 0) {
    return 0;
  }
LABEL_19:
  if ((v26 != v25 || v23 != v22) && (sub_24EC22F70() & 1) == 0
    || (v21 != v20 || v19 != v18) && (sub_24EC22F70() & 1) == 0)
  {
    return 0;
  }
  return sub_24EC04AA8(v17, v16);
}

unint64_t sub_24EBD7C90()
{
  unint64_t result = qword_269947708;
  if (!qword_269947708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947708);
  }
  return result;
}

uint64_t destroy for BrowseItemPlaceholder()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BrowseItemPlaceholder(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BrowseItemPlaceholder(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t assignWithTake for BrowseItemPlaceholder(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for BrowseItemPlaceholder(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 73)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BrowseItemPlaceholder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 73) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseItemPlaceholder()
{
  return &type metadata for BrowseItemPlaceholder;
}

unsigned char *storeEnumTagSinglePayload for BrowseItemPlaceholder.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBD8058);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseItemPlaceholder.CodingKeys()
{
  return &type metadata for BrowseItemPlaceholder.CodingKeys;
}

unint64_t sub_24EBD8094()
{
  unint64_t result = qword_269947710;
  if (!qword_269947710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947710);
  }
  return result;
}

unint64_t sub_24EBD80EC()
{
  unint64_t result = qword_269947718;
  if (!qword_269947718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947718);
  }
  return result;
}

unint64_t sub_24EBD8144()
{
  unint64_t result = qword_269947720;
  if (!qword_269947720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947720);
  }
  return result;
}

uint64_t sub_24EBD8198(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x5379616C70736964 && a2 == 0xEC000000656C7974;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000024EC31130 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74695470756F7267 && a2 == 0xEA0000000000656CLL || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024EC30DA0 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x636E657265666572 && a2 == 0xED00006570795465)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

FitnessBrowsing::BrowseFontDesign_optional __swiftcall BrowseFontDesign.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_24EC22DF0();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.value = FitnessBrowsing_BrowseFontDesign_rounded;
  }
  else {
    v2.value = FitnessBrowsing_BrowseFontDesign_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

void *static BrowseFontDesign.allCases.getter()
{
  return &unk_270083B20;
}

uint64_t BrowseFontDesign.rawValue.getter(char a1)
{
  if (a1) {
    return 0x6465646E756F72;
  }
  else {
    return 0x746C7561666564;
  }
}

uint64_t sub_24EBD84B0(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = BrowseFontDesign.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == BrowseFontDesign.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_24EC22F70();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24EBD853C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_24EC22DF0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_24EBD859C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = BrowseFontDesign.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_24EBD85CC()
{
  unint64_t result = qword_269947728;
  if (!qword_269947728)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269947730);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947728);
  }
  return result;
}

void sub_24EBD8628(void *a1@<X8>)
{
  *a1 = &unk_270083B48;
}

uint64_t sub_24EBD8638()
{
  return sub_24EC22B00();
}

uint64_t sub_24EBD8698()
{
  return sub_24EC22AF0();
}

unint64_t sub_24EBD86EC()
{
  unint64_t result = qword_269947738;
  if (!qword_269947738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947738);
  }
  return result;
}

uint64_t sub_24EBD8740()
{
  char v1 = *v0;
  sub_24EC22FF0();
  BrowseFontDesign.rawValue.getter(v1);
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  return sub_24EC23030();
}

uint64_t sub_24EBD87A4()
{
  BrowseFontDesign.rawValue.getter(*v0);
  sub_24EC22AB0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EBD87F8()
{
  char v1 = *v0;
  sub_24EC22FF0();
  BrowseFontDesign.rawValue.getter(v1);
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  return sub_24EC23030();
}

unsigned char *storeEnumTagSinglePayload for BrowseFontDesign(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBD8924);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseFontDesign()
{
  return &type metadata for BrowseFontDesign;
}

unint64_t sub_24EBD895C()
{
  unint64_t result = qword_269947740;
  if (!qword_269947740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947740);
  }
  return result;
}

uint64_t BrowseDetailVideoLinkItem.attributedTitle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24EC21D10();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t BrowseDetailVideoLinkItem.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for BrowseDetailVideoLinkItem() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for BrowseDetailVideoLinkItem()
{
  uint64_t result = qword_26B1D8A18;
  if (!qword_26B1D8A18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t BrowseDetailVideoLinkItem.videoAsset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for BrowseDetailVideoLinkItem();
  return sub_24EBD93B0(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(void))type metadata accessor for VideoAsset);
}

uint64_t BrowseDetailVideoLinkItem.init(attributedTitle:identifier:videoAsset:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_24EC21D10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a5, a1, v10);
  uint64_t v11 = type metadata accessor for BrowseDetailVideoLinkItem();
  uint64_t v12 = (void *)(a5 + *(int *)(v11 + 20));
  void *v12 = a2;
  v12[1] = a3;
  uint64_t v13 = a5 + *(int *)(v11 + 24);
  return sub_24EBD8B9C(a4, v13);
}

uint64_t sub_24EBD8B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VideoAsset();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EBD8C00(char a1)
{
  return qword_24EC2A7B0[a1];
}

uint64_t sub_24EBD8C20()
{
  return sub_24EBD8C00(*v0);
}

uint64_t sub_24EBD8C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBDA6C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBD8C50(uint64_t a1)
{
  unint64_t v2 = sub_24EBD8EFC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBD8C8C(uint64_t a1)
{
  unint64_t v2 = sub_24EBD8EFC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseDetailVideoLinkItem.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947748);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBD8EFC();
  sub_24EC23050();
  v8[15] = 0;
  sub_24EC21D10();
  sub_24EBD9A94(&qword_2699465E0, MEMORY[0x263F06828]);
  sub_24EC22F40();
  if (!v1)
  {
    type metadata accessor for BrowseDetailVideoLinkItem();
    v8[14] = 1;
    sub_24EC22F00();
    v8[13] = 2;
    type metadata accessor for VideoAsset();
    sub_24EBD9A94(&qword_269947758, (void (*)(uint64_t))type metadata accessor for VideoAsset);
    sub_24EC22F40();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24EBD8EFC()
{
  unint64_t result = qword_269947750;
  if (!qword_269947750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947750);
  }
  return result;
}

uint64_t BrowseDetailVideoLinkItem.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v22 = type metadata accessor for VideoAsset();
  MEMORY[0x270FA5388](v22);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_24EC21D10();
  uint64_t v24 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v25 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947760);
  uint64_t v23 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  char v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for BrowseDetailVideoLinkItem();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBD8EFC();
  sub_24EC23040();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v19 = v5;
  uint64_t v20 = v9;
  uint64_t v12 = v24;
  char v30 = 0;
  sub_24EBD9A94(&qword_269946658, MEMORY[0x263F06828]);
  uint64_t v13 = v25;
  sub_24EC22E90();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v11, v13, v27);
  char v29 = 1;
  uint64_t v14 = sub_24EC22E50();
  uint64_t v15 = (uint64_t *)&v11[*(int *)(v20 + 20)];
  *uint64_t v15 = v14;
  v15[1] = v16;
  char v28 = 2;
  sub_24EBD9A94(&qword_269947768, (void (*)(uint64_t))type metadata accessor for VideoAsset);
  sub_24EC22E90();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v26);
  sub_24EBD8B9C((uint64_t)v19, (uint64_t)&v11[*(int *)(v20 + 24)]);
  sub_24EBD93B0((uint64_t)v11, v21, (uint64_t (*)(void))type metadata accessor for BrowseDetailVideoLinkItem);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_24EBD9418((uint64_t)v11);
}

uint64_t sub_24EBD93B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EBD9418(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BrowseDetailVideoLinkItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EBD9474@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BrowseDetailVideoLinkItem.init(from:)(a1, a2);
}

uint64_t sub_24EBD948C(void *a1)
{
  return BrowseDetailVideoLinkItem.encode(to:)(a1);
}

uint64_t BrowseDetailVideoLinkItem.hash(into:)()
{
  sub_24EC21D10();
  sub_24EBD9A94(&qword_2699466B8, MEMORY[0x263F06828]);
  sub_24EC22A20();
  uint64_t v1 = type metadata accessor for BrowseDetailVideoLinkItem();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  uint64_t v2 = v0 + *(int *)(v1 + 24);
  sub_24EC22AB0();
  if (*(void *)(v2 + 24))
  {
    sub_24EC23010();
    swift_bridgeObjectRetain();
    sub_24EC22AB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24EC23010();
  }
  type metadata accessor for VideoAsset();
  sub_24EC21D30();
  sub_24EBD9A94(&qword_269946158, MEMORY[0x263F06EA8]);
  return sub_24EC22A20();
}

uint64_t static BrowseDetailVideoLinkItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_24EC21D00() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for BrowseDetailVideoLinkItem();
  uint64_t v5 = *(int *)(v4 + 20);
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  char v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (!v9 && (sub_24EC22F70() & 1) == 0) {
    return 0;
  }
  uint64_t v10 = *(int *)(v4 + 24);
  return _s15FitnessBrowsing10VideoAssetV2eeoiySbAC_ACtFZ_0((void *)(a1 + v10), (void *)(a2 + v10));
}

uint64_t BrowseDetailVideoLinkItem.hashValue.getter()
{
  sub_24EC22FF0();
  sub_24EC21D10();
  sub_24EBD9A94(&qword_2699466B8, MEMORY[0x263F06828]);
  sub_24EC22A20();
  uint64_t v1 = type metadata accessor for BrowseDetailVideoLinkItem();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  uint64_t v2 = v0 + *(int *)(v1 + 24);
  sub_24EC22AB0();
  if (*(void *)(v2 + 24))
  {
    sub_24EC23010();
    swift_bridgeObjectRetain();
    sub_24EC22AB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24EC23010();
  }
  type metadata accessor for VideoAsset();
  sub_24EC21D30();
  sub_24EBD9A94(&qword_269946158, MEMORY[0x263F06EA8]);
  sub_24EC22A20();
  return sub_24EC23030();
}

uint64_t sub_24EBD9840(uint64_t a1, uint64_t a2)
{
  sub_24EC22FF0();
  sub_24EC21D10();
  sub_24EBD9A94(&qword_2699466B8, MEMORY[0x263F06828]);
  sub_24EC22A20();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2 + *(int *)(a2 + 24);
  sub_24EC22AB0();
  if (*(void *)(v4 + 24))
  {
    sub_24EC23010();
    swift_bridgeObjectRetain();
    sub_24EC22AB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24EC23010();
  }
  type metadata accessor for VideoAsset();
  sub_24EC21D30();
  sub_24EBD9A94(&qword_269946158, MEMORY[0x263F06EA8]);
  sub_24EC22A20();
  return sub_24EC23030();
}

uint64_t sub_24EBD99B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_24EC21D00() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  BOOL v9 = (void *)(a2 + v6);
  BOOL v10 = v7 == *v9 && v8 == v9[1];
  if (!v10 && (sub_24EC22F70() & 1) == 0) {
    return 0;
  }
  uint64_t v11 = *(int *)(a3 + 24);
  return _s15FitnessBrowsing10VideoAssetV2eeoiySbAC_ACtFZ_0((void *)(a1 + v11), (void *)(a2 + v11));
}

uint64_t sub_24EBD9A4C()
{
  return sub_24EBD9A94(&qword_269947770, (void (*)(uint64_t))type metadata accessor for BrowseDetailVideoLinkItem);
}

uint64_t sub_24EBD9A94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for BrowseDetailVideoLinkItem(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24EC21D10();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    BOOL v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *BOOL v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (char *)a2 + v9;
    uint64_t v15 = *(uint64_t *)((char *)a2 + v9);
    uint64_t v16 = *(uint64_t *)((char *)a2 + v9 + 8);
    *uint64_t v13 = v15;
    v13[1] = v16;
    uint64_t v17 = *((void *)v14 + 3);
    v13[2] = *((void *)v14 + 2);
    v13[3] = v17;
    uint64_t v18 = *(int *)(type metadata accessor for VideoAsset() + 24);
    uint64_t v19 = (char *)v13 + v18;
    uint64_t v20 = &v14[v18];
    uint64_t v21 = sub_24EC21D30();
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22(v19, v20, v21);
  }
  return a1;
}

uint64_t destroy for BrowseDetailVideoLinkItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EC21D10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + *(int *)(type metadata accessor for VideoAsset() + 24);
  uint64_t v7 = sub_24EC21D30();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  return v8(v6, v7);
}

uint64_t initializeWithCopy for BrowseDetailVideoLinkItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EC21D10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  BOOL v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = a2 + v8;
  uint64_t v14 = *(void *)(a2 + v8);
  uint64_t v15 = *(void *)(a2 + v8 + 8);
  void *v12 = v14;
  v12[1] = v15;
  uint64_t v16 = *(void *)(v13 + 24);
  v12[2] = *(void *)(v13 + 16);
  v12[3] = v16;
  uint64_t v17 = *(int *)(type metadata accessor for VideoAsset() + 24);
  uint64_t v18 = (char *)v12 + v17;
  uint64_t v19 = v13 + v17;
  uint64_t v20 = sub_24EC21D30();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21(v18, v19, v20);
  return a1;
}

uint64_t assignWithCopy for BrowseDetailVideoLinkItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EC21D10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[2] = v12[2];
  void v11[3] = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(int *)(type metadata accessor for VideoAsset() + 24);
  uint64_t v14 = (char *)v11 + v13;
  uint64_t v15 = (char *)v12 + v13;
  uint64_t v16 = sub_24EC21D30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

uint64_t initializeWithTake for BrowseDetailVideoLinkItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EC21D10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for VideoAsset() + 24);
  uint64_t v12 = (char *)v8 + v11;
  uint64_t v13 = (char *)v9 + v11;
  uint64_t v14 = sub_24EC21D30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for BrowseDetailVideoLinkItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EC21D10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = v14[3];
  v13[2] = v14[2];
  v13[3] = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(int *)(type metadata accessor for VideoAsset() + 24);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)v14 + v17;
  uint64_t v20 = sub_24EC21D30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for BrowseDetailVideoLinkItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EBDA174);
}

uint64_t sub_24EBDA174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EC21D10();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for VideoAsset();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for BrowseDetailVideoLinkItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EBDA2B8);
}

uint64_t sub_24EBDA2B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24EC21D10();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for VideoAsset();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_24EBDA3E8()
{
  uint64_t result = sub_24EC21D10();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for VideoAsset();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BrowseDetailVideoLinkItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBDA584);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseDetailVideoLinkItem.CodingKeys()
{
  return &type metadata for BrowseDetailVideoLinkItem.CodingKeys;
}

unint64_t sub_24EBDA5C0()
{
  unint64_t result = qword_269947778;
  if (!qword_269947778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947778);
  }
  return result;
}

unint64_t sub_24EBDA618()
{
  unint64_t result = qword_269947780;
  if (!qword_269947780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947780);
  }
  return result;
}

unint64_t sub_24EBDA670()
{
  unint64_t result = qword_269947788;
  if (!qword_269947788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947788);
  }
  return result;
}

uint64_t sub_24EBDA6C4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7475626972747461 && a2 == 0xEF656C7469546465;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7373416F65646976 && a2 == 0xEA00000000007465)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t static BrowseError.== infix(_:_:)()
{
  return 1;
}

uint64_t BrowseError.hash(into:)()
{
  return sub_24EC23000();
}

uint64_t BrowseError.hashValue.getter()
{
  return sub_24EC23030();
}

unint64_t sub_24EBDA8A8()
{
  unint64_t result = qword_269947790;
  if (!qword_269947790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947790);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BrowseError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EBDA9A8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseError()
{
  return &type metadata for BrowseError;
}

__n128 BrowseEnvironment.init(fetchEditorialCollectionDetail:fetchEditorialGalleryItems:fetchSectionDescriptors:makeAllowedContentRatingsUpdatedStream:makeAppDidEnterBackgroundStream:makeBrowsingIdentityUpdatedStream:makeCatalogUpdatedStream:makeSignificantTimeChangeStream:makeStorefrontLanguageUpdatedStream:makeTrainerTipJournalsUpdatedStream:makeWheelchairStatusUpdatedStream:refreshCanvas:refreshCanvasItems:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, long long a11, long long a12, long long a13, long long a14, long long a15, long long a16, __n128 a17, uint64_t a18, uint64_t a19)
{
  __n128 result = a17;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(_OWORD *)(a9 + 80) = a11;
  *(_OWORD *)(a9 + 96) = a12;
  *(_OWORD *)(a9 + 112) = a13;
  *(_OWORD *)(a9 + 128) = a14;
  *(_OWORD *)(a9 + 144) = a15;
  *(_OWORD *)(a9 + 160) = a16;
  *(__n128 *)(a9 + 176) = a17;
  *(void *)(a9 + 192) = a18;
  *(void *)(a9 + 200) = a19;
  return result;
}

uint64_t destroy for BrowseEnvironment()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for BrowseEnvironment(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  uint64_t v3 = *(void *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(void *)(a1 + 200) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for BrowseEnvironment(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_retain();
  swift_release();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_retain();
  swift_release();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_retain();
  swift_release();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_retain();
  swift_release();
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_retain();
  swift_release();
  uint64_t v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_retain();
  swift_release();
  uint64_t v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  swift_retain();
  swift_release();
  uint64_t v15 = a2[23];
  a1[22] = a2[22];
  a1[23] = v15;
  swift_retain();
  swift_release();
  uint64_t v16 = a2[25];
  a1[24] = a2[24];
  a1[25] = v16;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy208_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

_OWORD *assignWithTake for BrowseEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  a1[7] = a2[7];
  swift_release();
  a1[8] = a2[8];
  swift_release();
  a1[9] = a2[9];
  swift_release();
  a1[10] = a2[10];
  swift_release();
  a1[11] = a2[11];
  swift_release();
  a1[12] = a2[12];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BrowseEnvironment(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 208)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BrowseEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 208) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseEnvironment()
{
  return &type metadata for BrowseEnvironment;
}

uint64_t BrowseGalleryDescriptor.copyWith(displayStyle:identifier:items:preferredInsetBehavior:title:)@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8 = v7;
  uint64_t v49 = a4;
  uint64_t v50 = a6;
  int v48 = a5;
  uint64_t v51 = a2;
  int v52 = a1;
  LODWORD(v47) = a1;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_24EC21D10();
  uint64_t v14 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v45 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for BrowseGalleryDescriptor();
  MEMORY[0x270FA5388](v44);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v43 - v19;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v43 - v22;
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v43 - v25;
  MEMORY[0x270FA5388](v27);
  char v29 = (unsigned __int8 *)&v43 - v28;
  sub_24EBDB330(v8, (uint64_t)&v43 - v28);
  if (v47 == 36) {
    int v52 = *v29;
  }
  sub_24EBDB394((uint64_t)v29);
  sub_24EBDB330(v8, (uint64_t)v26);
  if (a3)
  {
    uint64_t v47 = a3;
  }
  else
  {
    uint64_t v30 = *((void *)v26 + 2);
    uint64_t v51 = *((void *)v26 + 1);
    uint64_t v47 = v30;
    swift_bridgeObjectRetain();
  }
  int v31 = v48;
  swift_bridgeObjectRetain();
  sub_24EBDB394((uint64_t)v26);
  sub_24EBDB330(v8, (uint64_t)v23);
  if (v49)
  {
    uint64_t v32 = v49;
  }
  else
  {
    uint64_t v32 = *((void *)v23 + 3);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_24EBDB394((uint64_t)v23);
  sub_24EBDB330(v8, (uint64_t)v20);
  if (v31 == 2) {
    char v33 = v20[32];
  }
  else {
    char v33 = v31 & 1;
  }
  uint64_t v34 = v46;
  sub_24EBDB394((uint64_t)v20);
  sub_24EBD0AF4(v50, (uint64_t)v13);
  sub_24EBDB330(v8, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v34) == 1)
  {
    uint64_t v35 = v44;
    char v36 = v45;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v45, &v17[*(int *)(v44 + 32)], v34);
    sub_24EBDB394((uint64_t)v17);
    sub_24EBDB3F0((uint64_t)v13);
    uint64_t v37 = v35;
    unsigned __int8 v38 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    uint64_t v39 = v51;
    char v40 = v52;
  }
  else
  {
    sub_24EBDB394((uint64_t)v17);
    unsigned __int8 v38 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    char v36 = v45;
    v38(v45, v13, v34);
    uint64_t v39 = v51;
    char v40 = v52;
    uint64_t v37 = v44;
  }
  uint64_t v41 = v47;
  *(unsigned char *)a7 = v40;
  *(void *)(a7 + 8) = v39;
  *(void *)(a7 + 16) = v41;
  *(void *)(a7 + 24) = v32;
  *(unsigned char *)(a7 + 32) = v33;
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v38)(a7 + *(int *)(v37 + 32), v36, v34);
}

uint64_t sub_24EBDB330(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseGalleryDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EBDB394(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BrowseGalleryDescriptor();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EBDB3F0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t CreatePlanBannerDescriptor.actionTitle.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CreatePlanBannerDescriptor.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CreatePlanBannerDescriptor.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall CreatePlanBannerDescriptor.init(actionTitle:subtitle:title:)(FitnessBrowsing::CreatePlanBannerDescriptor *__return_ptr retstr, Swift::String_optional actionTitle, Swift::String_optional subtitle, Swift::String_optional title)
{
  retstr->actionTitle = actionTitle;
  retstr->subtitle = subtitle;
  retstr->title = title;
}

uint64_t sub_24EBDB4F4(char a1)
{
  return *(void *)&aActiontisubtit[8 * a1];
}

uint64_t sub_24EBDB514()
{
  return sub_24EBDB4F4(*v0);
}

uint64_t sub_24EBDB51C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBDC260(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBDB544(uint64_t a1)
{
  unint64_t v2 = sub_24EBDBD58();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBDB580(uint64_t a1)
{
  unint64_t v2 = sub_24EBDBD58();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CreatePlanBannerDescriptor.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947798);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  void v11[3] = v1[3];
  v11[4] = v7;
  uint64_t v8 = v1[4];
  v11[1] = v1[5];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBDBD58();
  sub_24EC23050();
  char v14 = 0;
  uint64_t v9 = v11[5];
  sub_24EC22ED0();
  if (!v9)
  {
    char v13 = 1;
    sub_24EC22ED0();
    char v12 = 2;
    sub_24EC22ED0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t CreatePlanBannerDescriptor.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699477A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBDBD58();
  sub_24EC23040();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v27 = 0;
  uint64_t v9 = sub_24EC22E20();
  uint64_t v11 = v10;
  uint64_t v24 = v9;
  char v26 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_24EC22E20();
  uint64_t v14 = v13;
  uint64_t v22 = v12;
  char v25 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = v14;
  uint64_t v15 = sub_24EC22E20();
  uint64_t v17 = v16;
  uint64_t v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  uint64_t v19 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EBDBA00@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return CreatePlanBannerDescriptor.init(from:)(a1, a2);
}

uint64_t sub_24EBDBA18(void *a1)
{
  return CreatePlanBannerDescriptor.encode(to:)(a1);
}

uint64_t CreatePlanBannerDescriptor.hash(into:)()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[5];
  if (v0[1])
  {
    sub_24EC23010();
    swift_bridgeObjectRetain();
    sub_24EC22AB0();
    swift_bridgeObjectRelease();
    if (v1) {
      goto LABEL_3;
    }
LABEL_8:
    sub_24EC23010();
    if (v2) {
      goto LABEL_4;
    }
    return sub_24EC23010();
  }
  sub_24EC23010();
  if (!v1) {
    goto LABEL_8;
  }
LABEL_3:
  sub_24EC23010();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  if (!v2) {
    return sub_24EC23010();
  }
LABEL_4:
  sub_24EC23010();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  return swift_bridgeObjectRelease();
}

uint64_t CreatePlanBannerDescriptor.hashValue.getter()
{
  return sub_24EC23030();
}

uint64_t sub_24EBDBB98()
{
  return sub_24EC23030();
}

uint64_t sub_24EBDBBF0()
{
  return sub_24EC23030();
}

uint64_t _s15FitnessBrowsing26CreatePlanBannerDescriptorV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v11 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v12 = a2[5];
  if (!v3)
  {
    if (v8) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v8) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v8 || (char v13 = sub_24EC22F70(), result = 0, (v13 & 1) != 0))
  {
LABEL_8:
    if (v6)
    {
      if (!v11) {
        return 0;
      }
      if (v4 != v9 || v6 != v11)
      {
        char v15 = sub_24EC22F70();
        uint64_t result = 0;
        if ((v15 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v11)
    {
      return 0;
    }
    if (v7)
    {
      if (v12 && (v5 == v10 && v7 == v12 || (sub_24EC22F70() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v12)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_24EBDBD58()
{
  unint64_t result = qword_2699477A0;
  if (!qword_2699477A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699477A0);
  }
  return result;
}

unint64_t sub_24EBDBDB0()
{
  unint64_t result = qword_2699477B0;
  if (!qword_2699477B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699477B0);
  }
  return result;
}

uint64_t destroy for CreatePlanBannerDescriptor()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for CreatePlanBannerDescriptor(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CreatePlanBannerDescriptor(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for CreatePlanBannerDescriptor(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CreatePlanBannerDescriptor(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CreatePlanBannerDescriptor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CreatePlanBannerDescriptor()
{
  return &type metadata for CreatePlanBannerDescriptor;
}

unsigned char *storeEnumTagSinglePayload for CreatePlanBannerDescriptor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBDC120);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CreatePlanBannerDescriptor.CodingKeys()
{
  return &type metadata for CreatePlanBannerDescriptor.CodingKeys;
}

unint64_t sub_24EBDC15C()
{
  unint64_t result = qword_2699477B8;
  if (!qword_2699477B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699477B8);
  }
  return result;
}

unint64_t sub_24EBDC1B4()
{
  unint64_t result = qword_2699477C0;
  if (!qword_2699477C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699477C0);
  }
  return result;
}

unint64_t sub_24EBDC20C()
{
  unint64_t result = qword_2699477C8;
  if (!qword_2699477C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699477C8);
  }
  return result;
}

uint64_t sub_24EBDC260(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x69546E6F69746361 && a2 == 0xEB00000000656C74;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_24EBDC3B0(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x615472656E6E6162;
      break;
    case 2:
      unint64_t result = 0x6570704177656976;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EBDC458(uint64_t a1)
{
  unint64_t v2 = sub_24EBDCCD0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBDC494(uint64_t a1)
{
  unint64_t v2 = sub_24EBDCCD0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBDC4D0(uint64_t a1)
{
  unint64_t v2 = sub_24EBDCC7C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBDC50C(uint64_t a1)
{
  unint64_t v2 = sub_24EBDCC7C();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_24EBDC548()
{
  return sub_24EBDC3B0(*v0);
}

uint64_t sub_24EBDC550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBDDFD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBDC578(uint64_t a1)
{
  unint64_t v2 = sub_24EBDCB80();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBDC5B4(uint64_t a1)
{
  unint64_t v2 = sub_24EBDCB80();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBDC5F0(uint64_t a1)
{
  unint64_t v2 = sub_24EBDCC28();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBDC62C(uint64_t a1)
{
  unint64_t v2 = sub_24EBDCC28();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBDC668(uint64_t a1)
{
  unint64_t v2 = sub_24EBDCBD4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBDC6A4(uint64_t a1)
{
  unint64_t v2 = sub_24EBDCBD4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CreatePlanBannerAction.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699477D0);
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  MEMORY[0x270FA5388](v4);
  char v29 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699477D8);
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v28 = v6;
  MEMORY[0x270FA5388](v6);
  char v26 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699477E0);
  uint64_t v24 = *(void *)(v8 - 8);
  uint64_t v25 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699477E8);
  uint64_t v23 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  char v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699477F0);
  uint64_t v32 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v17 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBDCB80();
  sub_24EC23050();
  switch(v17)
  {
    case 5:
      char v35 = 2;
      sub_24EBDCC28();
      uint64_t v18 = v26;
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v28);
      break;
    case 4:
      char v34 = 1;
      sub_24EBDCC7C();
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v25);
      break;
    case 3:
      char v33 = 0;
      sub_24EBDCCD0();
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v11);
      break;
    default:
      char v37 = 3;
      sub_24EBDCBD4();
      uint64_t v19 = v29;
      sub_24EC22EC0();
      char v36 = v17;
      sub_24EB8B3E0();
      uint64_t v20 = v31;
      sub_24EC22F40();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v20);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v16, v14);
}

unint64_t sub_24EBDCB80()
{
  unint64_t result = qword_2699477F8;
  if (!qword_2699477F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699477F8);
  }
  return result;
}

unint64_t sub_24EBDCBD4()
{
  unint64_t result = qword_269947800;
  if (!qword_269947800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947800);
  }
  return result;
}

unint64_t sub_24EBDCC28()
{
  unint64_t result = qword_269947808;
  if (!qword_269947808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947808);
  }
  return result;
}

unint64_t sub_24EBDCC7C()
{
  unint64_t result = qword_269947810;
  if (!qword_269947810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947810);
  }
  return result;
}

unint64_t sub_24EBDCCD0()
{
  unint64_t result = qword_269947818;
  if (!qword_269947818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947818);
  }
  return result;
}

uint64_t CreatePlanBannerAction.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947820);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  uint64_t v44 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v46 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947828);
  uint64_t v38 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v45 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947830);
  uint64_t v40 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947838);
  uint64_t v39 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947840);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  int v48 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_24EBDCB80();
  uint64_t v17 = v49;
  sub_24EC23040();
  if (!v17)
  {
    uint64_t v18 = v11;
    uint64_t v36 = v9;
    uint64_t v37 = 0;
    uint64_t v19 = v8;
    uint64_t v21 = v45;
    uint64_t v20 = v46;
    uint64_t v22 = v47;
    uint64_t v49 = v13;
    uint64_t v23 = sub_24EC22EA0();
    if (*(void *)(v23 + 16) == 1)
    {
      switch(*(unsigned char *)(v23 + 32))
      {
        case 1:
          char v51 = 1;
          sub_24EBDCC7C();
          uint64_t v29 = v37;
          sub_24EC22E00();
          if (v29) {
            goto LABEL_10;
          }
          (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v42);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v49 + 8))(v15, v12);
          char v30 = 4;
          goto LABEL_18;
        case 2:
          char v52 = 2;
          sub_24EBDCC28();
          uint64_t v31 = v37;
          sub_24EC22E00();
          if (v31) {
            goto LABEL_10;
          }
          (*(void (**)(char *, uint64_t))(v38 + 8))(v21, v41);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v49 + 8))(v15, v12);
          char v30 = 5;
          goto LABEL_18;
        case 3:
          char v54 = 3;
          sub_24EBDCBD4();
          uint64_t v33 = v37;
          sub_24EC22E00();
          if (v33) {
            goto LABEL_5;
          }
          sub_24EB8B808();
          uint64_t v34 = v43;
          sub_24EC22E90();
          uint64_t v35 = v49;
          (*(void (**)(char *, uint64_t))(v44 + 8))(v20, v34);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v12);
          char v30 = v53;
          goto LABEL_18;
        default:
          char v50 = 0;
          sub_24EBDCCD0();
          uint64_t v24 = v37;
          sub_24EC22E00();
          if (v24)
          {
LABEL_5:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v49 + 8))(v15, v12);
            uint64_t v25 = (uint64_t)v48;
            return __swift_destroy_boxed_opaque_existential_1(v25);
          }
          (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v36);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v49 + 8))(v15, v12);
          char v30 = 3;
LABEL_18:
          *uint64_t v22 = v30;
          break;
      }
    }
    else
    {
      uint64_t v26 = sub_24EC22D50();
      swift_allocError();
      uint64_t v28 = v27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269946108);
      *uint64_t v28 = &type metadata for CreatePlanBannerAction;
      sub_24EC22E10();
      sub_24EC22D40();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v28, *MEMORY[0x263F8DCB0], v26);
      swift_willThrow();
LABEL_10:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v15, v12);
    }
  }
  uint64_t v25 = (uint64_t)v48;
  return __swift_destroy_boxed_opaque_existential_1(v25);
}

uint64_t sub_24EBDD49C@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return CreatePlanBannerAction.init(from:)(a1, a2);
}

uint64_t sub_24EBDD4B4(void *a1)
{
  return CreatePlanBannerAction.encode(to:)(a1);
}

uint64_t CreatePlanBannerAction.hash(into:)()
{
  if (*v0 - 3 >= 3) {
    sub_24EC23000();
  }
  return sub_24EC23000();
}

BOOL static CreatePlanBannerAction.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  switch(v2)
  {
    case 5:
      return v3 == 5;
    case 4:
      return v3 == 4;
    case 3:
      return v3 == 3;
  }
  if ((v3 - 3) < 3) {
    return 0;
  }
  return v2 == v3;
}

uint64_t CreatePlanBannerAction.hashValue.getter()
{
  int v1 = *v0;
  sub_24EC22FF0();
  if ((v1 - 3) >= 3) {
    sub_24EC23000();
  }
  sub_24EC23000();
  return sub_24EC23030();
}

uint64_t sub_24EBDD5E8()
{
  int v1 = *v0;
  sub_24EC22FF0();
  if ((v1 - 3) >= 3) {
    sub_24EC23000();
  }
  sub_24EC23000();
  return sub_24EC23030();
}

uint64_t sub_24EBDD64C()
{
  if (*v0 - 3 >= 3) {
    sub_24EC23000();
  }
  return sub_24EC23000();
}

uint64_t sub_24EBDD694()
{
  sub_24EC22FF0();
  if (*v0 - 3 >= 3) {
    sub_24EC23000();
  }
  sub_24EC23000();
  return sub_24EC23030();
}

unint64_t sub_24EBDD6F8()
{
  unint64_t result = qword_269947848;
  if (!qword_269947848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947848);
  }
  return result;
}

BOOL sub_24EBDD74C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  switch(v2)
  {
    case 5:
      return v3 == 5;
    case 4:
      return v3 == 4;
    case 3:
      return v3 == 3;
  }
  if ((v3 - 3) < 3) {
    return 0;
  }
  return v2 == v3;
}

uint64_t getEnumTagSinglePayload for CreatePlanBannerAction(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB)
  {
    unsigned int v2 = a2 + 5;
    if (a2 + 5 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 5;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 5;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24EBDD864);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 5;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 3) {
    unsigned int v8 = v7 - 2;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 4) {
    return v8 - 3;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for CreatePlanBannerAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 5;
  if (a3 + 5 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFB) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v7 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x24EBDD94CLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

uint64_t sub_24EBDD974(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 3) {
    return v1 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *sub_24EBDD988(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CreatePlanBannerAction()
{
  return &type metadata for CreatePlanBannerAction;
}

unsigned char *storeEnumTagSinglePayload for CreatePlanBannerAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBDDA74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CreatePlanBannerAction.CodingKeys()
{
  return &type metadata for CreatePlanBannerAction.CodingKeys;
}

ValueMetadata *type metadata accessor for CreatePlanBannerAction.ActivePlanChangedCodingKeys()
{
  return &type metadata for CreatePlanBannerAction.ActivePlanChangedCodingKeys;
}

ValueMetadata *type metadata accessor for CreatePlanBannerAction.BannerTappedCodingKeys()
{
  return &type metadata for CreatePlanBannerAction.BannerTappedCodingKeys;
}

ValueMetadata *type metadata accessor for CreatePlanBannerAction.ViewAppearedCodingKeys()
{
  return &type metadata for CreatePlanBannerAction.ViewAppearedCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for CreatePlanBannerAction.VisibilityChangedCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EBDDB78);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CreatePlanBannerAction.VisibilityChangedCodingKeys()
{
  return &type metadata for CreatePlanBannerAction.VisibilityChangedCodingKeys;
}

unint64_t sub_24EBDDBB4()
{
  unint64_t result = qword_269947850;
  if (!qword_269947850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947850);
  }
  return result;
}

unint64_t sub_24EBDDC0C()
{
  unint64_t result = qword_269947858;
  if (!qword_269947858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947858);
  }
  return result;
}

unint64_t sub_24EBDDC64()
{
  unint64_t result = qword_269947860;
  if (!qword_269947860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947860);
  }
  return result;
}

unint64_t sub_24EBDDCBC()
{
  unint64_t result = qword_269947868;
  if (!qword_269947868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947868);
  }
  return result;
}

unint64_t sub_24EBDDD14()
{
  unint64_t result = qword_269947870;
  if (!qword_269947870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947870);
  }
  return result;
}

unint64_t sub_24EBDDD6C()
{
  unint64_t result = qword_269947878;
  if (!qword_269947878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947878);
  }
  return result;
}

unint64_t sub_24EBDDDC4()
{
  unint64_t result = qword_269947880;
  if (!qword_269947880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947880);
  }
  return result;
}

unint64_t sub_24EBDDE1C()
{
  unint64_t result = qword_269947888;
  if (!qword_269947888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947888);
  }
  return result;
}

unint64_t sub_24EBDDE74()
{
  unint64_t result = qword_269947890;
  if (!qword_269947890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947890);
  }
  return result;
}

unint64_t sub_24EBDDECC()
{
  unint64_t result = qword_269947898;
  if (!qword_269947898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947898);
  }
  return result;
}

unint64_t sub_24EBDDF24()
{
  unint64_t result = qword_2699478A0;
  if (!qword_2699478A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699478A0);
  }
  return result;
}

unint64_t sub_24EBDDF7C()
{
  unint64_t result = qword_2699478A8;
  if (!qword_2699478A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699478A8);
  }
  return result;
}

uint64_t sub_24EBDDFD0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000024EC31150 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x615472656E6E6162 && a2 == 0xEC00000064657070 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6570704177656976 && a2 == 0xEC00000064657261 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024EC31170)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t BrowseLocalState.lastBackgroundTimeStamp.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24EBDE18C(v1, a1);
}

uint64_t sub_24EBDE18C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699478B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t BrowseLocalState.lastBackgroundTimeStamp.setter(uint64_t a1)
{
  return sub_24EBDE1FC(a1, v1);
}

uint64_t sub_24EBDE1FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699478B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*BrowseLocalState.lastBackgroundTimeStamp.modify())(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void)
{
  return nullsub_1;
}

uint64_t BrowseLocalState.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_24EC21D70();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

unint64_t sub_24EBDE2F0()
{
  return 0xD000000000000017;
}

uint64_t sub_24EBDE30C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBDF8F0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EBDE338(uint64_t a1)
{
  unint64_t v2 = sub_24EBDE510();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBDE374(uint64_t a1)
{
  unint64_t v2 = sub_24EBDE510();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseLocalState.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699478B8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBDE510();
  sub_24EC23050();
  sub_24EC21D70();
  sub_24EBDF978(&qword_2699478C8);
  sub_24EC22EF0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_24EBDE510()
{
  unint64_t result = qword_2699478C0;
  if (!qword_2699478C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699478C0);
  }
  return result;
}

uint64_t BrowseLocalState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v14 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699478B0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v16 = (uint64_t)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699478D0);
  uint64_t v15 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unsigned int v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for BrowseLocalState();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24EC21D70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBDE510();
  sub_24EC23040();
  if (!v2)
  {
    sub_24EBDF978(&qword_2699478D8);
    sub_24EC22E40();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
    sub_24EBDE1FC(v16, (uint64_t)v11);
    sub_24EBDE880((uint64_t)v11, v14);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_24EBDE824((uint64_t)v11);
}

uint64_t type metadata accessor for BrowseLocalState()
{
  uint64_t result = qword_2699478E0;
  if (!qword_2699478E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24EBDE824(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BrowseLocalState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EBDE880(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseLocalState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EBDE8E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BrowseLocalState.init(from:)(a1, a2);
}

uint64_t sub_24EBDE8FC(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699478B8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBDE510();
  sub_24EC23050();
  sub_24EC21D70();
  sub_24EBDF978(&qword_2699478C8);
  sub_24EC22EF0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

BOOL _s15FitnessBrowsing16BrowseLocalStateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EC21D70();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947910);
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699478B0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v26 - v16;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v26 - v19;
  sub_24EBDE18C(a1, (uint64_t)&v26 - v19);
  sub_24EBDE18C(a2, (uint64_t)v17);
  uint64_t v21 = (uint64_t)&v11[*(int *)(v9 + 56)];
  sub_24EBDE18C((uint64_t)v20, (uint64_t)v11);
  sub_24EBDE18C((uint64_t)v17, v21);
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22((uint64_t)v11, 1, v4) == 1)
  {
    sub_24EB742F4((uint64_t)v17, &qword_2699478B0);
    sub_24EB742F4((uint64_t)v20, &qword_2699478B0);
    if (v22(v21, 1, v4) == 1)
    {
      sub_24EB742F4((uint64_t)v11, &qword_2699478B0);
      return 1;
    }
    goto LABEL_6;
  }
  sub_24EBDE18C((uint64_t)v11, (uint64_t)v14);
  if (v22(v21, 1, v4) == 1)
  {
    sub_24EB742F4((uint64_t)v17, &qword_2699478B0);
    sub_24EB742F4((uint64_t)v20, &qword_2699478B0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_6:
    sub_24EB742F4((uint64_t)v11, &qword_269947910);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v21, v4);
  sub_24EBDF978(&qword_269947918);
  char v23 = sub_24EC22A30();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
  v24(v7, v4);
  sub_24EB742F4((uint64_t)v17, &qword_2699478B0);
  sub_24EB742F4((uint64_t)v20, &qword_2699478B0);
  v24(v14, v4);
  sub_24EB742F4((uint64_t)v11, &qword_2699478B0);
  return (v23 & 1) != 0;
}

uint64_t *initializeBufferWithCopyOfBuffer for BrowseLocalState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699478B0) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = sub_24EC21D70();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for BrowseLocalState(uint64_t a1)
{
  uint64_t v2 = sub_24EC21D70();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *initializeWithCopy for BrowseLocalState(void *a1, const void *a2)
{
  uint64_t v4 = sub_24EC21D70();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699478B0);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *assignWithCopy for BrowseLocalState(void *a1, void *a2)
{
  uint64_t v4 = sub_24EC21D70();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699478B0);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *initializeWithTake for BrowseLocalState(void *a1, const void *a2)
{
  uint64_t v4 = sub_24EC21D70();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699478B0);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *assignWithTake for BrowseLocalState(void *a1, void *a2)
{
  uint64_t v4 = sub_24EC21D70();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699478B0);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for BrowseLocalState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EBDF538);
}

uint64_t sub_24EBDF538(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699478B0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for BrowseLocalState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EBDF5BC);
}

uint64_t sub_24EBDF5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699478B0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

void sub_24EBDF630()
{
  sub_24EBDF6BC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_24EBDF6BC()
{
  if (!qword_2699478F0)
  {
    sub_24EC21D70();
    unint64_t v0 = sub_24EC22C90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2699478F0);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for BrowseLocalState.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EBDF7B0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseLocalState.CodingKeys()
{
  return &type metadata for BrowseLocalState.CodingKeys;
}

unint64_t sub_24EBDF7EC()
{
  unint64_t result = qword_2699478F8;
  if (!qword_2699478F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699478F8);
  }
  return result;
}

unint64_t sub_24EBDF844()
{
  unint64_t result = qword_269947900;
  if (!qword_269947900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947900);
  }
  return result;
}

unint64_t sub_24EBDF89C()
{
  unint64_t result = qword_269947908;
  if (!qword_269947908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947908);
  }
  return result;
}

uint64_t sub_24EBDF8F0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000017 && a2 == 0x800000024EC31190)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_24EBDF978(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24EC21D70();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EBDF9BC(char a1)
{
  if (!a1) {
    return 0xD000000000000019;
  }
  if (a1 == 1) {
    return 0xD000000000000010;
  }
  return 0xD000000000000012;
}

unint64_t sub_24EBDFA1C()
{
  return sub_24EBDF9BC(*v0);
}

uint64_t sub_24EBDFA24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBE3BCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBDFA4C(uint64_t a1)
{
  unint64_t v2 = sub_24EBE05D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBDFA88(uint64_t a1)
{
  unint64_t v2 = sub_24EBE05D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBDFAC4(uint64_t a1)
{
  unint64_t v2 = sub_24EBE06CC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBDFB00(uint64_t a1)
{
  unint64_t v2 = sub_24EBE06CC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBDFB3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB8E358(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EBDFB68(uint64_t a1)
{
  unint64_t v2 = sub_24EBE0678();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBDFBA4(uint64_t a1)
{
  unint64_t v2 = sub_24EBE0678();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBDFBE0(uint64_t a1)
{
  unint64_t v2 = sub_24EBE0624();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBDFC1C(uint64_t a1)
{
  unint64_t v2 = sub_24EBE0624();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseContent.sectionDescriptors.getter()
{
  uint64_t v1 = type metadata accessor for BrowseGalleryDescriptor();
  MEMORY[0x270FA5388](v1 - 8);
  char v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for EditorialCollectionDetail();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for BrowseContent();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EBE157C(v0, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for BrowseContent);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_24EBE1040((uint64_t)v9, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for BrowseGalleryDescriptor);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2699472E8);
      uint64_t v11 = *(void *)(type metadata accessor for BrowseSectionDescriptor() - 8);
      unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_24EC28530;
      sub_24EBE157C((uint64_t)v3, v13 + v12, (uint64_t (*)(void))type metadata accessor for BrowseGalleryDescriptor);
      swift_storeEnumTagMultiPayload();
      sub_24EBE2C0C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for BrowseGalleryDescriptor);
    }
    else
    {
      return *(void *)v9;
    }
  }
  else
  {
    sub_24EBE1040((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for EditorialCollectionDetail);
    uint64_t v13 = *(void *)&v6[*(int *)(v4 + 24)];
    swift_bridgeObjectRetain();
    sub_24EBE2C0C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for EditorialCollectionDetail);
  }
  return v13;
}

uint64_t type metadata accessor for BrowseContent()
{
  uint64_t result = qword_26B1D8710;
  if (!qword_26B1D8710) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t BrowseContent.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947920);
  uint64_t v40 = *(void *)(v2 - 8);
  uint64_t v41 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v39 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947928);
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v36 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for BrowseGalleryDescriptor();
  MEMORY[0x270FA5388](v34);
  uint64_t v35 = (uint64_t)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947930);
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v33 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for EditorialCollectionDetail();
  MEMORY[0x270FA5388](v10);
  unint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for BrowseContent();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (uint64_t *)((char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947938);
  uint64_t v43 = *(void *)(v16 - 8);
  uint64_t v44 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBE05D0();
  sub_24EC23050();
  sub_24EBE157C(v42, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for BrowseContent);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v20 = v35;
      sub_24EBE1040((uint64_t)v15, v35, (uint64_t (*)(void))type metadata accessor for BrowseGalleryDescriptor);
      char v47 = 1;
      sub_24EBE0678();
      uint64_t v21 = v36;
      uint64_t v22 = v44;
      sub_24EC22EC0();
      sub_24EBE1AE8(&qword_269946E98, (void (*)(uint64_t))type metadata accessor for BrowseGalleryDescriptor);
      uint64_t v23 = v38;
      sub_24EC22F40();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v21, v23);
      sub_24EBE2C0C(v20, (uint64_t (*)(void))type metadata accessor for BrowseGalleryDescriptor);
      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v18, v22);
    }
    else
    {
      uint64_t v27 = *v15;
      char v48 = 2;
      sub_24EBE0624();
      uint64_t v28 = v39;
      uint64_t v29 = v44;
      sub_24EC22EC0();
      uint64_t v45 = v27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269946DC8);
      sub_24EBE0FAC(&qword_269946DD0, &qword_269946DD8);
      uint64_t v30 = v41;
      sub_24EC22F40();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v28, v30);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v29);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_24EBE1040((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for EditorialCollectionDetail);
    char v46 = 0;
    sub_24EBE06CC();
    uint64_t v25 = v44;
    sub_24EC22EC0();
    sub_24EBE1AE8(&qword_269947960, (void (*)(uint64_t))type metadata accessor for EditorialCollectionDetail);
    uint64_t v26 = v33;
    sub_24EC22F40();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v26);
    sub_24EBE2C0C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for EditorialCollectionDetail);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v18, v25);
  }
}

unint64_t sub_24EBE05D0()
{
  unint64_t result = qword_269947940;
  if (!qword_269947940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947940);
  }
  return result;
}

unint64_t sub_24EBE0624()
{
  unint64_t result = qword_269947948;
  if (!qword_269947948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947948);
  }
  return result;
}

unint64_t sub_24EBE0678()
{
  unint64_t result = qword_269947950;
  if (!qword_269947950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947950);
  }
  return result;
}

unint64_t sub_24EBE06CC()
{
  unint64_t result = qword_269947958;
  if (!qword_269947958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947958);
  }
  return result;
}

uint64_t BrowseContent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947968);
  uint64_t v54 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v60 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947970);
  uint64_t v53 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v59 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947978);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v49 = v5;
  uint64_t v50 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v57 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947980);
  uint64_t v56 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BrowseContent();
  MEMORY[0x270FA5388](v10);
  unint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v46 - v14;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v46 - v17;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v46 - v20;
  uint64_t v22 = a1[3];
  uint64_t v61 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_24EBE05D0();
  uint64_t v23 = v62;
  sub_24EC23040();
  if (!v23)
  {
    char v47 = v18;
    char v48 = v15;
    char v46 = v12;
    uint64_t v25 = v57;
    uint64_t v24 = v58;
    uint64_t v26 = v59;
    uint64_t v27 = v60;
    uint64_t v62 = v10;
    uint64_t v28 = sub_24EC22EA0();
    if (*(void *)(v28 + 16) == 1)
    {
      if (*(unsigned char *)(v28 + 32))
      {
        if (*(unsigned char *)(v28 + 32) != 1)
        {
          uint64_t v59 = (char *)v28;
          char v66 = 2;
          sub_24EBE0624();
          sub_24EC22E00();
          uint64_t v42 = v24;
          __swift_instantiateConcreteTypeFromMangledName(&qword_269946DC8);
          sub_24EBE0FAC(&qword_269946DF0, &qword_269946DF8);
          uint64_t v43 = v52;
          sub_24EC22E90();
          uint64_t v44 = v56;
          (*(void (**)(char *, uint64_t))(v54 + 8))(v27, v43);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v42);
          uint64_t v45 = (uint64_t)v46;
          *char v46 = v63;
          swift_storeEnumTagMultiPayload();
          sub_24EBE1040(v45, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for BrowseContent);
          uint64_t v37 = (uint64_t)v61;
LABEL_12:
          sub_24EBE1040((uint64_t)v21, v55, (uint64_t (*)(void))type metadata accessor for BrowseContent);
          return __swift_destroy_boxed_opaque_existential_1(v37);
        }
        char v65 = 1;
        sub_24EBE0678();
        uint64_t v29 = v24;
        sub_24EC22E00();
        type metadata accessor for BrowseGalleryDescriptor();
        sub_24EBE1AE8(&qword_269946F18, (void (*)(uint64_t))type metadata accessor for BrowseGalleryDescriptor);
        uint64_t v35 = (uint64_t)v48;
        uint64_t v36 = v51;
        sub_24EC22E90();
        (*(void (**)(char *, uint64_t))(v53 + 8))(v26, v36);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v56 + 8))(v9, v29);
        uint64_t v37 = (uint64_t)v61;
        swift_storeEnumTagMultiPayload();
        uint64_t v38 = v35;
      }
      else
      {
        char v64 = 0;
        sub_24EBE06CC();
        sub_24EC22E00();
        type metadata accessor for EditorialCollectionDetail();
        uint64_t v60 = v9;
        sub_24EBE1AE8(&qword_269947988, (void (*)(uint64_t))type metadata accessor for EditorialCollectionDetail);
        uint64_t v39 = (uint64_t)v47;
        uint64_t v40 = v24;
        uint64_t v41 = v49;
        sub_24EC22E90();
        (*(void (**)(char *, uint64_t))(v50 + 8))(v25, v41);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v56 + 8))(v60, v40);
        uint64_t v37 = (uint64_t)v61;
        swift_storeEnumTagMultiPayload();
        uint64_t v38 = v39;
      }
      sub_24EBE1040(v38, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for BrowseContent);
      goto LABEL_12;
    }
    uint64_t v30 = v9;
    uint64_t v31 = sub_24EC22D50();
    swift_allocError();
    uint64_t v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269946108);
    *uint64_t v33 = v62;
    sub_24EC22E10();
    sub_24EC22D40();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v31 - 8) + 104))(v33, *MEMORY[0x263F8DCB0], v31);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v30, v24);
  }
  uint64_t v37 = (uint64_t)v61;
  return __swift_destroy_boxed_opaque_existential_1(v37);
}

uint64_t sub_24EBE0FAC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269946DC8);
    sub_24EBE1AE8(a2, (void (*)(uint64_t))type metadata accessor for BrowseSectionDescriptor);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EBE1040(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EBE10A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BrowseContent.init(from:)(a1, a2);
}

uint64_t sub_24EBE10C0(void *a1)
{
  return BrowseContent.encode(to:)(a1);
}

uint64_t BrowseContent.hash(into:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for BrowseGalleryDescriptor();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for BrowseSectionDescriptor();
  uint64_t v30 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v29 - v10;
  uint64_t v12 = type metadata accessor for EditorialCollectionDetail();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for BrowseContent();
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (uint64_t *)((char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24EBE157C(v1, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for BrowseContent);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_24EBE1040((uint64_t)v17, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for BrowseGalleryDescriptor);
      sub_24EC23000();
      BrowseDisplayStyle.rawValue.getter(*v5);
      sub_24EC22AB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24EC22AB0();
      swift_bridgeObjectRelease();
      uint64_t v19 = *((void *)v5 + 3);
      swift_bridgeObjectRetain();
      sub_24EB61EF4(a1, v19);
      swift_bridgeObjectRelease();
      sub_24EC23000();
      sub_24EC21D10();
      sub_24EBE1AE8(&qword_2699466B8, MEMORY[0x263F06828]);
      sub_24EC22A20();
      return sub_24EBE2C0C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for BrowseGalleryDescriptor);
    }
    else
    {
      uint64_t v25 = *v17;
      sub_24EC23000();
      sub_24EC23000();
      uint64_t v26 = *(void *)(v25 + 16);
      if (v26)
      {
        uint64_t v27 = v25 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
        uint64_t v28 = *(void *)(v30 + 72);
        do
        {
          sub_24EBE157C(v27, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for BrowseSectionDescriptor);
          BrowseSectionDescriptor.hash(into:)(a1);
          sub_24EBE2C0C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for BrowseSectionDescriptor);
          v27 += v28;
          --v26;
        }
        while (v26);
      }
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_24EBE1040((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for EditorialCollectionDetail);
    sub_24EC23000();
    sub_24EB9C640(a1);
    EditorialCollection.hash(into:)();
    uint64_t v21 = *(void *)&v14[*(int *)(v12 + 24)];
    sub_24EC23000();
    uint64_t v22 = *(void *)(v21 + 16);
    if (v22)
    {
      uint64_t v23 = v21 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
      uint64_t v24 = *(void *)(v30 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_24EBE157C(v23, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for BrowseSectionDescriptor);
        BrowseSectionDescriptor.hash(into:)(a1);
        sub_24EBE2C0C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for BrowseSectionDescriptor);
        v23 += v24;
        --v22;
      }
      while (v22);
      swift_bridgeObjectRelease();
    }
    return sub_24EBE2C0C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for EditorialCollectionDetail);
  }
}

uint64_t sub_24EBE157C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t BrowseContent.hashValue.getter()
{
  sub_24EC22FF0();
  BrowseContent.hash(into:)((uint64_t)v1);
  return sub_24EC23030();
}

uint64_t sub_24EBE1628()
{
  sub_24EC22FF0();
  BrowseContent.hash(into:)((uint64_t)v1);
  return sub_24EC23030();
}

uint64_t sub_24EBE166C()
{
  sub_24EC22FF0();
  BrowseContent.hash(into:)((uint64_t)v1);
  return sub_24EC23030();
}

uint64_t _s15FitnessBrowsing13BrowseContentO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseGalleryDescriptor();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v31 = (uint64_t)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for EditorialCollectionDetail();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for BrowseContent();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (uint64_t *)((char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v30 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v30 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699479F8);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t *)&v21[*(int *)(v19 + 56)];
  sub_24EBE157C(a1, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for BrowseContent);
  sub_24EBE157C(a2, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for BrowseContent);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_24EBE157C((uint64_t)v21, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for BrowseContent);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v24 = v31;
        sub_24EBE1040((uint64_t)v22, v31, (uint64_t (*)(void))type metadata accessor for BrowseGalleryDescriptor);
        char v25 = _s15FitnessBrowsing23BrowseGalleryDescriptorV2eeoiySbAC_ACtFZ_0((uint64_t)v15, v24);
        uint64_t v26 = type metadata accessor for BrowseGalleryDescriptor;
        sub_24EBE2C0C(v24, (uint64_t (*)(void))type metadata accessor for BrowseGalleryDescriptor);
        uint64_t v27 = (uint64_t)v15;
LABEL_13:
        sub_24EBE2C0C(v27, (uint64_t (*)(void))v26);
        goto LABEL_14;
      }
      sub_24EBE2C0C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for BrowseGalleryDescriptor);
    }
    else
    {
      sub_24EBE157C((uint64_t)v21, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for BrowseContent);
      uint64_t v28 = *v12;
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        char v25 = sub_24EB61AE0(v28, *v22);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_14:
        sub_24EBE2C0C((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for BrowseContent);
        return v25 & 1;
      }
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_24EBE157C((uint64_t)v21, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for BrowseContent);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_24EBE1040((uint64_t)v22, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for EditorialCollectionDetail);
      char v25 = _s15FitnessBrowsing25EditorialCollectionDetailV2eeoiySbAC_ACtFZ_0((uint64_t)v17, (uint64_t)v8);
      uint64_t v26 = type metadata accessor for EditorialCollectionDetail;
      sub_24EBE2C0C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for EditorialCollectionDetail);
      uint64_t v27 = (uint64_t)v17;
      goto LABEL_13;
    }
    sub_24EBE2C0C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for EditorialCollectionDetail);
  }
  sub_24EBE3D10((uint64_t)v21);
  char v25 = 0;
  return v25 & 1;
}

uint64_t sub_24EBE1AA0()
{
  return sub_24EBE1AE8(&qword_269947990, (void (*)(uint64_t))type metadata accessor for BrowseContent);
}

uint64_t sub_24EBE1AE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for BrowseContent(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v7 = a2[2];
      a1[1] = a2[1];
      a1[2] = v7;
      a1[3] = a2[3];
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v8 = *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_24EC21D10();
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
    }
    else
    {
      uint64_t v14 = type metadata accessor for BrowseArtwork();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946778);
        memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        uint64_t v17 = sub_24EC21E00();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
        {
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
          memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v18 + 16))(a1, a2, v17);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
        }
        uint64_t v20 = *(int *)(v14 + 20);
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        uint64_t v23 = sub_24EC21D30();
        uint64_t v24 = *(void *)(v23 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
        {
          uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
          memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
      }
      uint64_t v39 = type metadata accessor for EditorialCollectionDetail();
      uint64_t v26 = *(int *)(v39 + 20);
      uint64_t v27 = (void *)((char *)a1 + v26);
      uint64_t v28 = (char *)a2 + v26;
      uint64_t v29 = *(void *)((char *)a2 + v26 + 8);
      *uint64_t v27 = *(void *)((char *)a2 + v26);
      v27[1] = v29;
      uint64_t v30 = *(void *)((char *)a2 + v26 + 24);
      v27[2] = *(void *)((char *)a2 + v26 + 16);
      v27[3] = v30;
      uint64_t v31 = *(void *)((char *)a2 + v26 + 40);
      v27[4] = *(void *)((char *)a2 + v26 + 32);
      v27[5] = v31;
      uint64_t v32 = *(void *)((char *)a2 + v26 + 56);
      v27[6] = *(void *)((char *)a2 + v26 + 48);
      v27[7] = v32;
      uint64_t v33 = *(int *)(type metadata accessor for EditorialCollection() + 32);
      uint64_t v37 = &v28[v33];
      uint64_t v38 = (char *)v27 + v33;
      uint64_t v34 = sub_24EC21D30();
      uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35(v38, v37, v34);
      *(void *)((char *)a1 + *(int *)(v39 + 24)) = *(void *)((char *)a2 + *(int *)(v39 + 24));
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for BrowseContent(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
LABEL_10:
    return swift_bridgeObjectRelease();
  }
  if (result != 1)
  {
    if (result) {
      return result;
    }
    uint64_t v3 = type metadata accessor for BrowseArtwork();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(a1, 1, v3))
    {
      uint64_t v4 = sub_24EC21E00();
      uint64_t v5 = *(void *)(v4 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
        (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
      }
      uint64_t v6 = a1 + *(int *)(v3 + 20);
      uint64_t v7 = sub_24EC21D30();
      uint64_t v8 = *(void *)(v7 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
      }
    }
    uint64_t v9 = a1 + *(int *)(type metadata accessor for EditorialCollectionDetail() + 20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v9 + *(int *)(type metadata accessor for EditorialCollection() + 32);
    uint64_t v11 = sub_24EC21D30();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
  uint64_t v13 = sub_24EC21D10();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
  return v14(v12, v13);
}

void *initializeWithCopy for BrowseContent(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = a2[2];
    a1[1] = a2[1];
    a1[2] = v5;
    a1[3] = a2[3];
    *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v6 = *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_24EC21D10();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  else
  {
    uint64_t v11 = type metadata accessor for BrowseArtwork();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946778);
      memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_24EC21E00();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
        memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v15 + 16))(a1, a2, v14);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
      }
      uint64_t v17 = *(int *)(v11 + 20);
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_24EC21D30();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
        memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
    }
    uint64_t v36 = type metadata accessor for EditorialCollectionDetail();
    uint64_t v23 = *(int *)(v36 + 20);
    uint64_t v24 = (void *)((char *)a1 + v23);
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = *(void *)((char *)a2 + v23 + 8);
    void *v24 = *(void *)((char *)a2 + v23);
    v24[1] = v26;
    uint64_t v27 = *(void *)((char *)a2 + v23 + 24);
    v24[2] = *(void *)((char *)a2 + v23 + 16);
    v24[3] = v27;
    uint64_t v28 = *(void *)((char *)a2 + v23 + 40);
    v24[4] = *(void *)((char *)a2 + v23 + 32);
    v24[5] = v28;
    uint64_t v29 = *(void *)((char *)a2 + v23 + 56);
    v24[6] = *(void *)((char *)a2 + v23 + 48);
    v24[7] = v29;
    uint64_t v30 = *(int *)(type metadata accessor for EditorialCollection() + 32);
    uint64_t v35 = (char *)v24 + v30;
    uint64_t v31 = &v25[v30];
    uint64_t v32 = sub_24EC21D30();
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33(v35, v31, v32);
    *(void *)((char *)a1 + *(int *)(v36 + 24)) = *(void *)((char *)a2 + *(int *)(v36 + 24));
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for BrowseContent(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_24EBE2C0C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for BrowseContent);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v5 = *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
      uint64_t v6 = (char *)a1 + v5;
      uint64_t v7 = (char *)a2 + v5;
      uint64_t v8 = sub_24EC21D10();
      uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v9(v6, v7, v8);
    }
    else
    {
      uint64_t v10 = type metadata accessor for BrowseArtwork();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946778);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        uint64_t v13 = sub_24EC21E00();
        uint64_t v14 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
        {
          uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
          memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v14 + 16))(a1, a2, v13);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
        }
        uint64_t v16 = *(int *)(v10 + 20);
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = sub_24EC21D30();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
          memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      uint64_t v31 = type metadata accessor for EditorialCollectionDetail();
      uint64_t v22 = *(int *)(v31 + 20);
      uint64_t v23 = (void *)((char *)a1 + v22);
      uint64_t v24 = (char *)a2 + v22;
      void *v23 = *(void *)((char *)a2 + v22);
      v23[1] = *(void *)((char *)a2 + v22 + 8);
      void v23[2] = *(void *)((char *)a2 + v22 + 16);
      v23[3] = *(void *)((char *)a2 + v22 + 24);
      v23[4] = *(void *)((char *)a2 + v22 + 32);
      v23[5] = *(void *)((char *)a2 + v22 + 40);
      v23[6] = *(void *)((char *)a2 + v22 + 48);
      v23[7] = *(void *)((char *)a2 + v22 + 56);
      uint64_t v25 = *(int *)(type metadata accessor for EditorialCollection() + 32);
      uint64_t v30 = (char *)v23 + v25;
      uint64_t v26 = &v24[v25];
      uint64_t v27 = sub_24EC21D30();
      uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v28(v30, v26, v27);
      *(void *)((char *)a1 + *(int *)(v31 + 24)) = *(void *)((char *)a2 + *(int *)(v31 + 24));
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24EBE2C0C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *initializeWithTake for BrowseContent(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *((void *)a1 + 3) = *((void *)a2 + 3);
    a1[32] = a2[32];
    uint64_t v10 = *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = sub_24EC21D10();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
LABEL_15:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for BrowseArtwork();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946778);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_24EC21E00();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
        memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(a1, a2, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
      }
      uint64_t v17 = *(int *)(v7 + 20);
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = sub_24EC21D30();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
        memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v23 = type metadata accessor for EditorialCollectionDetail();
    uint64_t v24 = *(int *)(v23 + 20);
    uint64_t v25 = &a1[v24];
    uint64_t v26 = &a2[v24];
    long long v27 = *(_OWORD *)&a2[v24 + 16];
    *(_OWORD *)uint64_t v25 = *(_OWORD *)&a2[v24];
    *((_OWORD *)v25 + 1) = v27;
    long long v28 = *(_OWORD *)&a2[v24 + 48];
    *((_OWORD *)v25 + 2) = *(_OWORD *)&a2[v24 + 32];
    *((_OWORD *)v25 + 3) = v28;
    uint64_t v29 = *(int *)(type metadata accessor for EditorialCollection() + 32);
    uint64_t v30 = &v25[v29];
    uint64_t v31 = &v26[v29];
    uint64_t v32 = sub_24EC21D30();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
    *(void *)&a1[*(int *)(v23 + 24)] = *(void *)&a2[*(int *)(v23 + 24)];
    goto LABEL_15;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *assignWithTake for BrowseContent(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EBE2C0C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for BrowseContent);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *((void *)a1 + 3) = *((void *)a2 + 3);
      a1[32] = a2[32];
      uint64_t v10 = *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      uint64_t v13 = sub_24EC21D10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
LABEL_16:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = type metadata accessor for BrowseArtwork();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946778);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        uint64_t v14 = sub_24EC21E00();
        uint64_t v15 = *(void *)(v14 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
        {
          uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
          memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v15 + 32))(a1, a2, v14);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
        }
        uint64_t v17 = *(int *)(v7 + 20);
        uint64_t v18 = &a1[v17];
        uint64_t v19 = &a2[v17];
        uint64_t v20 = sub_24EC21D30();
        uint64_t v21 = *(void *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        {
          uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
          memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v23 = type metadata accessor for EditorialCollectionDetail();
      uint64_t v24 = *(int *)(v23 + 20);
      uint64_t v25 = &a1[v24];
      uint64_t v26 = &a2[v24];
      long long v27 = *(_OWORD *)&a2[v24 + 16];
      *(_OWORD *)uint64_t v25 = *(_OWORD *)&a2[v24];
      *((_OWORD *)v25 + 1) = v27;
      long long v28 = *(_OWORD *)&a2[v24 + 48];
      *((_OWORD *)v25 + 2) = *(_OWORD *)&a2[v24 + 32];
      *((_OWORD *)v25 + 3) = v28;
      uint64_t v29 = *(int *)(type metadata accessor for EditorialCollection() + 32);
      uint64_t v30 = &v25[v29];
      uint64_t v31 = &v26[v29];
      uint64_t v32 = sub_24EC21D30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
      *(void *)&a1[*(int *)(v23 + 24)] = *(void *)&a2[*(int *)(v23 + 24)];
      goto LABEL_16;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_24EBE34E0()
{
  uint64_t result = type metadata accessor for EditorialCollectionDetail();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for BrowseGalleryDescriptor();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BrowseContent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBE367CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseContent.CodingKeys()
{
  return &type metadata for BrowseContent.CodingKeys;
}

ValueMetadata *type metadata accessor for BrowseContent.EditorialCollectionDetailCodingKeys()
{
  return &type metadata for BrowseContent.EditorialCollectionDetailCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseContent.EditorialGalleryCodingKeys()
{
  return &type metadata for BrowseContent.EditorialGalleryCodingKeys;
}

unsigned char *_s15FitnessBrowsing13BrowseContentO35EditorialCollectionDetailCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EBE3774);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseContent.SectionDescriptorsCodingKeys()
{
  return &type metadata for BrowseContent.SectionDescriptorsCodingKeys;
}

unint64_t sub_24EBE37B0()
{
  unint64_t result = qword_269947998;
  if (!qword_269947998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947998);
  }
  return result;
}

unint64_t sub_24EBE3808()
{
  unint64_t result = qword_2699479A0;
  if (!qword_2699479A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699479A0);
  }
  return result;
}

unint64_t sub_24EBE3860()
{
  unint64_t result = qword_2699479A8;
  if (!qword_2699479A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699479A8);
  }
  return result;
}

unint64_t sub_24EBE38B8()
{
  unint64_t result = qword_2699479B0;
  if (!qword_2699479B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699479B0);
  }
  return result;
}

unint64_t sub_24EBE3910()
{
  unint64_t result = qword_2699479B8;
  if (!qword_2699479B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699479B8);
  }
  return result;
}

unint64_t sub_24EBE3968()
{
  unint64_t result = qword_2699479C0;
  if (!qword_2699479C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699479C0);
  }
  return result;
}

unint64_t sub_24EBE39C0()
{
  unint64_t result = qword_2699479C8;
  if (!qword_2699479C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699479C8);
  }
  return result;
}

unint64_t sub_24EBE3A18()
{
  unint64_t result = qword_2699479D0;
  if (!qword_2699479D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699479D0);
  }
  return result;
}

unint64_t sub_24EBE3A70()
{
  unint64_t result = qword_2699479D8;
  if (!qword_2699479D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699479D8);
  }
  return result;
}

unint64_t sub_24EBE3AC8()
{
  unint64_t result = qword_2699479E0;
  if (!qword_2699479E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699479E0);
  }
  return result;
}

unint64_t sub_24EBE3B20()
{
  unint64_t result = qword_2699479E8;
  if (!qword_2699479E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699479E8);
  }
  return result;
}

unint64_t sub_24EBE3B78()
{
  unint64_t result = qword_2699479F0;
  if (!qword_2699479F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699479F0);
  }
  return result;
}

uint64_t sub_24EBE3BCC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000019 && a2 == 0x800000024EC311B0 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024EC311D0 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024EC30EA0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EBE3D10(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699479F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EBE3D74(char a1)
{
  return *(void *)&aHeaderartext[8 * a1];
}

uint64_t sub_24EBE3D94()
{
  return sub_24EBE3D74(*v0);
}

uint64_t sub_24EBE3D9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBE7888(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBE3DC4(uint64_t a1)
{
  unint64_t v2 = sub_24EBE595C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBE3E00(uint64_t a1)
{
  unint64_t v2 = sub_24EBE595C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBE3E3C(uint64_t a1)
{
  unint64_t v2 = sub_24EBE5ABC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBE3E78(uint64_t a1)
{
  unint64_t v2 = sub_24EBE5ABC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBE3EB4(uint64_t a1)
{
  unint64_t v2 = sub_24EBE5A68();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBE3EF0(uint64_t a1)
{
  unint64_t v2 = sub_24EBE5A68();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBE3F2C(uint64_t a1)
{
  unint64_t v2 = sub_24EBE5A14();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBE3F68(uint64_t a1)
{
  unint64_t v2 = sub_24EBE5A14();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseDetailContent.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947A00);
  uint64_t v40 = *(void *)(v2 - 8);
  uint64_t v41 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v39 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for BrowseDetailVideoLinkItem();
  MEMORY[0x270FA5388](v37);
  uint64_t v38 = (uint64_t)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947A08);
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v34 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for BrowseDetailTextItem();
  MEMORY[0x270FA5388](v32);
  uint64_t v33 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947A10);
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for BrowseDetailArtworkItem();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for BrowseDetailContent();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947A18);
  uint64_t v43 = *(void *)(v17 - 8);
  uint64_t v44 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBE595C();
  sub_24EC23050();
  sub_24EBE59B0(v42, (uint64_t)v16);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v21 = type metadata accessor for BrowseDetailTextItem;
      uint64_t v22 = v33;
      sub_24EBE5B10((uint64_t)v16, v33, (uint64_t (*)(void))type metadata accessor for BrowseDetailTextItem);
      char v46 = 1;
      sub_24EBE5A68();
      uint64_t v23 = v34;
      uint64_t v24 = v44;
      sub_24EC22EC0();
      sub_24EBE7A40(&qword_269947A40, (void (*)(uint64_t))type metadata accessor for BrowseDetailTextItem);
      uint64_t v25 = v36;
      sub_24EC22F40();
      uint64_t v26 = v35;
    }
    else
    {
      uint64_t v21 = type metadata accessor for BrowseDetailVideoLinkItem;
      uint64_t v22 = v38;
      sub_24EBE5B10((uint64_t)v16, v38, (uint64_t (*)(void))type metadata accessor for BrowseDetailVideoLinkItem);
      char v47 = 2;
      sub_24EBE5A14();
      uint64_t v23 = v39;
      uint64_t v24 = v44;
      sub_24EC22EC0();
      sub_24EBE7A40(&qword_269947A30, (void (*)(uint64_t))type metadata accessor for BrowseDetailVideoLinkItem);
      uint64_t v25 = v41;
      sub_24EC22F40();
      uint64_t v26 = v40;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
    sub_24EBE6A18(v22, (uint64_t (*)(void))v21);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v24);
  }
  else
  {
    sub_24EBE5B10((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for BrowseDetailArtworkItem);
    char v45 = 0;
    sub_24EBE5ABC();
    uint64_t v27 = v44;
    sub_24EC22EC0();
    sub_24EBE7A40(&qword_269947A50, (void (*)(uint64_t))type metadata accessor for BrowseDetailArtworkItem);
    uint64_t v28 = v31;
    sub_24EC22F40();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v28);
    sub_24EBE6A18((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for BrowseDetailArtworkItem);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v27);
  }
}

uint64_t BrowseDetailContent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947A58);
  uint64_t v58 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  char v64 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947A60);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  uint64_t v57 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v63 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947A68);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v53 = v7;
  uint64_t v54 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v61 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947A70);
  uint64_t v60 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for BrowseDetailContent();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v49 - v16;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v49 - v19;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v49 - v22;
  uint64_t v24 = a1[3];
  char v65 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_24EBE595C();
  uint64_t v25 = v66;
  sub_24EC23040();
  if (v25) {
    goto LABEL_9;
  }
  uint64_t v50 = v17;
  uint64_t v51 = v14;
  char v66 = v20;
  uint64_t v26 = v61;
  uint64_t v27 = v62;
  uint64_t v28 = v63;
  uint64_t v29 = v64;
  uint64_t v52 = v23;
  uint64_t v30 = sub_24EC22EA0();
  uint64_t v31 = v30;
  uint64_t v32 = v27;
  if (*(void *)(v30 + 16) != 1)
  {
    uint64_t v38 = sub_24EC22D50();
    swift_allocError();
    uint64_t v39 = v11;
    uint64_t v41 = v40;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269946108);
    *uint64_t v41 = v12;
    sub_24EC22E10();
    sub_24EC22D40();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v38 - 8) + 104))(v41, *MEMORY[0x263F8DCB0], v38);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v39, v27);
LABEL_9:
    uint64_t v36 = (uint64_t)v65;
    return __swift_destroy_boxed_opaque_existential_1(v36);
  }
  if (*(unsigned char *)(v30 + 32))
  {
    if (*(unsigned char *)(v30 + 32) == 1)
    {
      char v68 = 1;
      sub_24EBE5A68();
      uint64_t v33 = v28;
      sub_24EC22E00();
      char v66 = (char *)v12;
      type metadata accessor for BrowseDetailTextItem();
      sub_24EBE7A40(&qword_269947A80, (void (*)(uint64_t))type metadata accessor for BrowseDetailTextItem);
      uint64_t v34 = (uint64_t)v50;
      uint64_t v35 = v56;
      sub_24EC22E90();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v33, v35);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v32);
      uint64_t v36 = (uint64_t)v65;
      swift_storeEnumTagMultiPayload();
      uint64_t v37 = v34;
    }
    else
    {
      char v69 = 2;
      sub_24EBE5A14();
      sub_24EC22E00();
      char v66 = (char *)v31;
      type metadata accessor for BrowseDetailVideoLinkItem();
      sub_24EBE7A40(&qword_269947A78, (void (*)(uint64_t))type metadata accessor for BrowseDetailVideoLinkItem);
      uint64_t v45 = (uint64_t)v51;
      uint64_t v46 = v55;
      sub_24EC22E90();
      uint64_t v47 = v60;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v29, v46);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v11, v27);
      swift_storeEnumTagMultiPayload();
      uint64_t v37 = v45;
      uint64_t v36 = (uint64_t)v65;
    }
  }
  else
  {
    char v67 = 0;
    sub_24EBE5ABC();
    sub_24EC22E00();
    type metadata accessor for BrowseDetailArtworkItem();
    sub_24EBE7A40(&qword_269947A88, (void (*)(uint64_t))type metadata accessor for BrowseDetailArtworkItem);
    uint64_t v42 = v53;
    sub_24EC22E90();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v26, v42);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v27);
    uint64_t v36 = (uint64_t)v65;
    uint64_t v43 = (uint64_t)v66;
    swift_storeEnumTagMultiPayload();
    uint64_t v37 = v43;
  }
  uint64_t v48 = (uint64_t)v52;
  sub_24EBE5B10(v37, (uint64_t)v52, (uint64_t (*)(void))type metadata accessor for BrowseDetailContent);
  sub_24EBE5B10(v48, v59, (uint64_t (*)(void))type metadata accessor for BrowseDetailContent);
  return __swift_destroy_boxed_opaque_existential_1(v36);
}

uint64_t sub_24EBE4E50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BrowseDetailContent.init(from:)(a1, a2);
}

uint64_t sub_24EBE4E68(void *a1)
{
  return BrowseDetailContent.encode(to:)(a1);
}

uint64_t BrowseDetailContent.hash(into:)()
{
  uint64_t v1 = type metadata accessor for BrowseDetailVideoLinkItem();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for BrowseDetailTextItem();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for BrowseDetailArtworkItem();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BrowseDetailContent();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EBE59B0(v0, (uint64_t)v12);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_24EBE5B10((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for BrowseDetailTextItem);
      sub_24EC23000();
      BrowseDetailTextItem.hash(into:)();
      uint64_t v14 = (uint64_t)v6;
      uint64_t v15 = type metadata accessor for BrowseDetailTextItem;
    }
    else
    {
      sub_24EBE5B10((uint64_t)v12, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for BrowseDetailVideoLinkItem);
      sub_24EC23000();
      sub_24EC21D10();
      sub_24EBE7A40(&qword_2699466B8, MEMORY[0x263F06828]);
      sub_24EC22A20();
      swift_bridgeObjectRetain();
      sub_24EC22AB0();
      swift_bridgeObjectRelease();
      uint64_t v16 = &v3[*(int *)(v1 + 24)];
      sub_24EC22AB0();
      if (*((void *)v16 + 3))
      {
        sub_24EC23010();
        swift_bridgeObjectRetain();
        sub_24EC22AB0();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_24EC23010();
      }
      type metadata accessor for VideoAsset();
      sub_24EC21D30();
      sub_24EBE7A40(&qword_269946158, MEMORY[0x263F06EA8]);
      sub_24EC22A20();
      uint64_t v15 = type metadata accessor for BrowseDetailVideoLinkItem;
      uint64_t v14 = (uint64_t)v3;
    }
  }
  else
  {
    sub_24EBE5B10((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for BrowseDetailArtworkItem);
    sub_24EC23000();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
    sub_24EC21E20();
    swift_bridgeObjectRetain();
    sub_24EC22AB0();
    swift_bridgeObjectRelease();
    uint64_t v14 = (uint64_t)v9;
    uint64_t v15 = type metadata accessor for BrowseDetailArtworkItem;
  }
  return sub_24EBE6A18(v14, (uint64_t (*)(void))v15);
}

uint64_t BrowseDetailContent.hashValue.getter()
{
  return sub_24EC23030();
}

uint64_t sub_24EBE52A0()
{
  return sub_24EC23030();
}

uint64_t sub_24EBE52E4()
{
  return sub_24EC23030();
}

uint64_t _s15FitnessBrowsing19BrowseDetailContentO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v52 = a2;
  uint64_t v50 = type metadata accessor for BrowseDetailVideoLinkItem();
  MEMORY[0x270FA5388](v50);
  uint64_t v51 = (uint64_t)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for BrowseDetailTextItem();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for BrowseDetailArtworkItem();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BrowseDetailContent();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v49 - v14;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v49 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947B08);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (uint64_t)&v21[*(int *)(v22 + 56)];
  sub_24EBE59B0(a1, (uint64_t)v21);
  sub_24EBE59B0(v52, v23);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_24EBE59B0((uint64_t)v21, (uint64_t)v18);
    if (swift_getEnumCaseMultiPayload())
    {
      uint64_t v26 = type metadata accessor for BrowseDetailArtworkItem;
      uint64_t v27 = (uint64_t)v18;
LABEL_25:
      sub_24EBE6A18(v27, (uint64_t (*)(void))v26);
      sub_24EBE79E0((uint64_t)v21);
LABEL_38:
      char v25 = 0;
      return v25 & 1;
    }
    sub_24EBE5B10(v23, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for BrowseDetailArtworkItem);
    type metadata accessor for BrowseArtwork();
    sub_24EBE7A40(&qword_26B1D86D0, (void (*)(uint64_t))type metadata accessor for BrowseArtwork);
    if ((sub_24EC21E10() & 1) == 0
      || ((uint64_t v39 = *(int *)(v7 + 20),
           uint64_t v40 = *(void *)&v18[v39],
           uint64_t v41 = *(void *)&v18[v39 + 8],
           uint64_t v42 = &v9[v39],
           v40 != *(void *)v42)
       || v41 != *((void *)v42 + 1))
      && (sub_24EC22F70() & 1) == 0)
    {
      uint64_t v45 = type metadata accessor for BrowseDetailArtworkItem;
      sub_24EBE6A18((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for BrowseDetailArtworkItem);
      uint64_t v46 = (uint64_t)v18;
LABEL_37:
      sub_24EBE6A18(v46, (uint64_t (*)(void))v45);
      sub_24EBE6A18((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for BrowseDetailContent);
      goto LABEL_38;
    }
    uint64_t v43 = type metadata accessor for BrowseDetailArtworkItem;
    sub_24EBE6A18((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for BrowseDetailArtworkItem);
    uint64_t v44 = (uint64_t)v18;
LABEL_31:
    sub_24EBE6A18(v44, (uint64_t (*)(void))v43);
    sub_24EBE6A18((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for BrowseDetailContent);
    char v25 = 1;
    return v25 & 1;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_24EBE59B0((uint64_t)v21, (uint64_t)v12);
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      uint64_t v26 = type metadata accessor for BrowseDetailVideoLinkItem;
      uint64_t v27 = (uint64_t)v12;
      goto LABEL_25;
    }
    uint64_t v28 = v51;
    sub_24EBE5B10(v23, v51, (uint64_t (*)(void))type metadata accessor for BrowseDetailVideoLinkItem);
    if ((sub_24EC21D00() & 1) == 0) {
      goto LABEL_36;
    }
    uint64_t v29 = *(int *)(v50 + 20);
    uint64_t v30 = *(void *)&v12[v29];
    uint64_t v31 = *(void *)&v12[v29 + 8];
    uint64_t v32 = (void *)(v28 + v29);
    BOOL v33 = v30 == *v32 && v31 == v32[1];
    if (!v33 && (sub_24EC22F70() & 1) == 0) {
      goto LABEL_36;
    }
    uint64_t v34 = *(int *)(v50 + 24);
    uint64_t v35 = &v12[v34];
    uint64_t v36 = v28 + v34;
    if ((*(void *)&v12[v34] != *(void *)(v28 + v34) || *(void *)&v12[v34 + 8] != *(void *)(v28 + v34 + 8))
      && (sub_24EC22F70() & 1) == 0)
    {
      goto LABEL_36;
    }
    uint64_t v37 = *((void *)v35 + 3);
    uint64_t v38 = *(void *)(v36 + 24);
    if (v37)
    {
      if (!v38 || (*((void *)v35 + 2) != *(void *)(v36 + 16) || v37 != v38) && (sub_24EC22F70() & 1) == 0) {
        goto LABEL_36;
      }
    }
    else if (v38)
    {
      goto LABEL_36;
    }
    uint64_t v47 = type metadata accessor for VideoAsset();
    if (MEMORY[0x2533498A0](&v35[*(int *)(v47 + 24)], v36 + *(int *)(v47 + 24)))
    {
      uint64_t v43 = type metadata accessor for BrowseDetailVideoLinkItem;
      sub_24EBE6A18(v28, (uint64_t (*)(void))type metadata accessor for BrowseDetailVideoLinkItem);
      uint64_t v44 = (uint64_t)v12;
      goto LABEL_31;
    }
LABEL_36:
    uint64_t v45 = type metadata accessor for BrowseDetailVideoLinkItem;
    sub_24EBE6A18(v28, (uint64_t (*)(void))type metadata accessor for BrowseDetailVideoLinkItem);
    uint64_t v46 = (uint64_t)v12;
    goto LABEL_37;
  }
  sub_24EBE59B0((uint64_t)v21, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v26 = type metadata accessor for BrowseDetailTextItem;
    uint64_t v27 = (uint64_t)v15;
    goto LABEL_25;
  }
  sub_24EBE5B10(v23, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for BrowseDetailTextItem);
  char v25 = _s15FitnessBrowsing20BrowseDetailTextItemV2eeoiySbAC_ACtFZ_0((uint64_t)v15, (uint64_t)v6);
  sub_24EBE6A18((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for BrowseDetailTextItem);
  sub_24EBE6A18((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for BrowseDetailTextItem);
  sub_24EBE6A18((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for BrowseDetailContent);
  return v25 & 1;
}

uint64_t type metadata accessor for BrowseDetailContent()
{
  uint64_t result = qword_269947A98;
  if (!qword_269947A98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24EBE595C()
{
  unint64_t result = qword_269947A20;
  if (!qword_269947A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947A20);
  }
  return result;
}

uint64_t sub_24EBE59B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseDetailContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24EBE5A14()
{
  unint64_t result = qword_269947A28;
  if (!qword_269947A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947A28);
  }
  return result;
}

unint64_t sub_24EBE5A68()
{
  unint64_t result = qword_269947A38;
  if (!qword_269947A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947A38);
  }
  return result;
}

unint64_t sub_24EBE5ABC()
{
  unint64_t result = qword_269947A48;
  if (!qword_269947A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947A48);
  }
  return result;
}

uint64_t sub_24EBE5B10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EBE5B78()
{
  return sub_24EBE7A40(&qword_269947A90, (void (*)(uint64_t))type metadata accessor for BrowseDetailContent);
}

uint64_t *initializeBufferWithCopyOfBuffer for BrowseDetailContent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v12 = sub_24EC21D10();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      uint64_t v13 = type metadata accessor for BrowseDetailVideoLinkItem();
      uint64_t v14 = *(int *)(v13 + 20);
      uint64_t v15 = (uint64_t *)((char *)a1 + v14);
      uint64_t v16 = (uint64_t *)((char *)a2 + v14);
      uint64_t v17 = v16[1];
      *uint64_t v15 = *v16;
      v15[1] = v17;
      uint64_t v18 = *(int *)(v13 + 24);
      uint64_t v19 = (uint64_t *)((char *)a1 + v18);
      uint64_t v20 = (uint64_t *)((char *)a2 + v18);
      uint64_t v21 = *(uint64_t *)((char *)a2 + v18);
      uint64_t v22 = v20[1];
      *uint64_t v19 = v21;
      v19[1] = v22;
      uint64_t v23 = v20[3];
      v19[2] = v20[2];
      v19[3] = v23;
      uint64_t v24 = *(int *)(type metadata accessor for VideoAsset() + 24);
      char v25 = (char *)v19 + v24;
      uint64_t v26 = (char *)v20 + v24;
      uint64_t v27 = sub_24EC21D30();
      uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v28(v25, v26, v27);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_24EC21D10();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
      if (v9(a2, 1, v7))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v35 = type metadata accessor for BrowseDetailTextItem();
      uint64_t v36 = *(int *)(v35 + 20);
      uint64_t v37 = (char *)a1 + v36;
      uint64_t v38 = (char *)a2 + v36;
      if (v9((uint64_t *)((char *)a2 + v36), 1, v7))
      {
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v37, v38, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
      }
      uint64_t v40 = *(int *)(v35 + 24);
      uint64_t v41 = (uint64_t *)((char *)a1 + v40);
      uint64_t v42 = (uint64_t *)((char *)a2 + v40);
      uint64_t v43 = v42[1];
      *uint64_t v41 = *v42;
      v41[1] = v43;
      swift_bridgeObjectRetain();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v29 = (uint64_t *)&unk_2699466D0;
      }
      else {
        uint64_t v29 = (uint64_t *)&unk_2699466C8;
      }
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(v29);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
      swift_storeEnumTagMultiPayload();
      uint64_t v31 = *(int *)(type metadata accessor for BrowseDetailArtworkItem() + 20);
      uint64_t v32 = (uint64_t *)((char *)a1 + v31);
      BOOL v33 = (uint64_t *)((char *)a2 + v31);
      uint64_t v34 = v33[1];
      *uint64_t v32 = *v33;
      v32[1] = v34;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for BrowseDetailContent(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v5 = sub_24EC21D10();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
    uint64_t v6 = type metadata accessor for BrowseDetailVideoLinkItem();
    swift_bridgeObjectRelease();
    uint64_t v7 = a1 + *(int *)(v6 + 24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + *(int *)(type metadata accessor for VideoAsset() + 24);
    uint64_t v9 = sub_24EC21D30();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    return v10(v8, v9);
  }
  else
  {
    if (result == 1)
    {
      uint64_t v11 = sub_24EC21D10();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
      if (!v13(a1, 1, v11)) {
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
      }
      uint64_t v14 = a1 + *(int *)(type metadata accessor for BrowseDetailTextItem() + 20);
      if (!v13(v14, 1, v11)) {
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v11);
      }
    }
    else
    {
      if (result) {
        return result;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v3 = (uint64_t *)&unk_2699466D0;
      }
      else {
        uint64_t v3 = (uint64_t *)&unk_2699466C8;
      }
      uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(v3);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      type metadata accessor for BrowseDetailArtworkItem();
    }
    return swift_bridgeObjectRelease();
  }
}

char *initializeWithCopy for BrowseDetailContent(char *a1, char *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = sub_24EC21D10();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    uint64_t v10 = type metadata accessor for BrowseDetailVideoLinkItem();
    uint64_t v11 = *(int *)(v10 + 20);
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    uint64_t v14 = *((void *)v13 + 1);
    *(void *)uint64_t v12 = *(void *)v13;
    *((void *)v12 + 1) = v14;
    uint64_t v15 = *(int *)(v10 + 24);
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    uint64_t v18 = *(void *)&a2[v15];
    uint64_t v19 = *((void *)v17 + 1);
    *(void *)uint64_t v16 = v18;
    *((void *)v16 + 1) = v19;
    uint64_t v20 = *((void *)v17 + 3);
    *((void *)v16 + 2) = *((void *)v17 + 2);
    *((void *)v16 + 3) = v20;
    uint64_t v21 = *(int *)(type metadata accessor for VideoAsset() + 24);
    uint64_t v38 = &v16[v21];
    uint64_t v22 = &v17[v21];
    uint64_t v23 = sub_24EC21D30();
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24(v38, v22, v23);
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = sub_24EC21D10();
      uint64_t v6 = *(void *)(v5 - 8);
      uint64_t v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
      uint64_t v37 = v6;
      if (v7(a2, 1, v5))
      {
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      }
      uint64_t v28 = type metadata accessor for BrowseDetailTextItem();
      uint64_t v29 = *(int *)(v28 + 20);
      uint64_t v30 = &a1[v29];
      uint64_t v31 = &a2[v29];
      if (v7(&a2[v29], 1, v5))
      {
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v30, v31, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v30, 0, 1, v5);
      }
      uint64_t v27 = *(int *)(v28 + 24);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        char v25 = (uint64_t *)&unk_2699466D0;
      }
      else {
        char v25 = (uint64_t *)&unk_2699466C8;
      }
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(v25);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
      swift_storeEnumTagMultiPayload();
      uint64_t v27 = *(int *)(type metadata accessor for BrowseDetailArtworkItem() + 20);
    }
    BOOL v33 = &a1[v27];
    uint64_t v34 = &a2[v27];
    uint64_t v35 = *((void *)v34 + 1);
    *(void *)BOOL v33 = *(void *)v34;
    *((void *)v33 + 1) = v35;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *assignWithCopy for BrowseDetailContent(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_24EBE6A18((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for BrowseDetailContent);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = sub_24EC21D10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      uint64_t v10 = type metadata accessor for BrowseDetailVideoLinkItem();
      uint64_t v11 = *(int *)(v10 + 20);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      *(void *)uint64_t v12 = *(void *)v13;
      *((void *)v12 + 1) = *((void *)v13 + 1);
      uint64_t v14 = *(int *)(v10 + 24);
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      *(void *)uint64_t v15 = *(void *)&a2[v14];
      *((void *)v15 + 1) = *(void *)&a2[v14 + 8];
      *((void *)v15 + 2) = *(void *)&a2[v14 + 16];
      *((void *)v15 + 3) = *(void *)&a2[v14 + 24];
      uint64_t v17 = *(int *)(type metadata accessor for VideoAsset() + 24);
      BOOL v33 = &v15[v17];
      uint64_t v18 = &v16[v17];
      uint64_t v19 = sub_24EC21D30();
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20(v33, v18, v19);
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v5 = sub_24EC21D10();
        uint64_t v6 = *(void *)(v5 - 8);
        uint64_t v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
        uint64_t v32 = v6;
        if (v7(a2, 1, v5))
        {
          uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
        }
        uint64_t v24 = type metadata accessor for BrowseDetailTextItem();
        uint64_t v25 = *(int *)(v24 + 20);
        uint64_t v26 = &a1[v25];
        uint64_t v27 = &a2[v25];
        if (v7(&a2[v25], 1, v5))
        {
          uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
          memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v26, v27, v5);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v26, 0, 1, v5);
        }
        uint64_t v23 = *(int *)(v24 + 24);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v21 = (uint64_t *)&unk_2699466D0;
        }
        else {
          uint64_t v21 = (uint64_t *)&unk_2699466C8;
        }
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(v21);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
        swift_storeEnumTagMultiPayload();
        uint64_t v23 = *(int *)(type metadata accessor for BrowseDetailArtworkItem() + 20);
      }
      uint64_t v29 = &a1[v23];
      uint64_t v30 = &a2[v23];
      *(void *)uint64_t v29 = *(void *)v30;
      *((void *)v29 + 1) = *((void *)v30 + 1);
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24EBE6A18(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *initializeWithTake for BrowseDetailContent(char *a1, char *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = sub_24EC21D10();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    uint64_t v10 = type metadata accessor for BrowseDetailVideoLinkItem();
    *(_OWORD *)&a1[*(int *)(v10 + 20)] = *(_OWORD *)&a2[*(int *)(v10 + 20)];
    uint64_t v11 = *(int *)(v10 + 24);
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    long long v14 = *(_OWORD *)&a2[v11 + 16];
    *(_OWORD *)uint64_t v12 = *(_OWORD *)&a2[v11];
    *((_OWORD *)v12 + 1) = v14;
    uint64_t v15 = *(int *)(type metadata accessor for VideoAsset() + 24);
    uint64_t v16 = &v12[v15];
    uint64_t v17 = &v13[v15];
    uint64_t v18 = sub_24EC21D30();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = sub_24EC21D10();
      uint64_t v6 = *(void *)(v5 - 8);
      uint64_t v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
      uint64_t v28 = v6;
      if (v7(a2, 1, v5))
      {
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(a1, a2, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      }
      uint64_t v22 = type metadata accessor for BrowseDetailTextItem();
      uint64_t v23 = *(int *)(v22 + 20);
      uint64_t v24 = &a1[v23];
      uint64_t v25 = &a2[v23];
      if (v7(&a2[v23], 1, v5))
      {
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v24, v25, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v24, 0, 1, v5);
      }
      uint64_t v21 = *(int *)(v22 + 24);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v19 = (uint64_t *)&unk_2699466D0;
      }
      else {
        uint64_t v19 = (uint64_t *)&unk_2699466C8;
      }
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(v19);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
      swift_storeEnumTagMultiPayload();
      uint64_t v21 = *(int *)(type metadata accessor for BrowseDetailArtworkItem() + 20);
    }
    *(_OWORD *)&a1[v21] = *(_OWORD *)&a2[v21];
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *assignWithTake for BrowseDetailContent(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_24EBE6A18((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for BrowseDetailContent);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = sub_24EC21D10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      uint64_t v10 = type metadata accessor for BrowseDetailVideoLinkItem();
      *(_OWORD *)&a1[*(int *)(v10 + 20)] = *(_OWORD *)&a2[*(int *)(v10 + 20)];
      uint64_t v11 = *(int *)(v10 + 24);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      long long v14 = *(_OWORD *)&a2[v11 + 16];
      *(_OWORD *)uint64_t v12 = *(_OWORD *)&a2[v11];
      *((_OWORD *)v12 + 1) = v14;
      uint64_t v15 = *(int *)(type metadata accessor for VideoAsset() + 24);
      uint64_t v16 = &v12[v15];
      uint64_t v17 = &v13[v15];
      uint64_t v18 = sub_24EC21D30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v5 = sub_24EC21D10();
        uint64_t v6 = *(void *)(v5 - 8);
        uint64_t v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
        uint64_t v28 = v6;
        if (v7(a2, 1, v5))
        {
          uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v6 + 32))(a1, a2, v5);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
        }
        uint64_t v22 = type metadata accessor for BrowseDetailTextItem();
        uint64_t v23 = *(int *)(v22 + 20);
        uint64_t v24 = &a1[v23];
        uint64_t v25 = &a2[v23];
        if (v7(&a2[v23], 1, v5))
        {
          uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
          memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v24, v25, v5);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v24, 0, 1, v5);
        }
        uint64_t v21 = *(int *)(v22 + 24);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v19 = (uint64_t *)&unk_2699466D0;
        }
        else {
          uint64_t v19 = (uint64_t *)&unk_2699466C8;
        }
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(v19);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
        swift_storeEnumTagMultiPayload();
        uint64_t v21 = *(int *)(type metadata accessor for BrowseDetailArtworkItem() + 20);
      }
      *(_OWORD *)&a1[v21] = *(_OWORD *)&a2[v21];
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24EBE716C()
{
  uint64_t result = type metadata accessor for BrowseDetailArtworkItem();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for BrowseDetailTextItem();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for BrowseDetailVideoLinkItem();
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BrowseDetailContent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBE7338);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseDetailContent.CodingKeys()
{
  return &type metadata for BrowseDetailContent.CodingKeys;
}

ValueMetadata *type metadata accessor for BrowseDetailContent.HeaderArtworkCodingKeys()
{
  return &type metadata for BrowseDetailContent.HeaderArtworkCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseDetailContent.TextCodingKeys()
{
  return &type metadata for BrowseDetailContent.TextCodingKeys;
}

unsigned char *_s15FitnessBrowsing19BrowseDetailContentO23HeaderArtworkCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EBE7430);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseDetailContent.VideoLinkCodingKeys()
{
  return &type metadata for BrowseDetailContent.VideoLinkCodingKeys;
}

unint64_t sub_24EBE746C()
{
  unint64_t result = qword_269947AA8;
  if (!qword_269947AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947AA8);
  }
  return result;
}

unint64_t sub_24EBE74C4()
{
  unint64_t result = qword_269947AB0;
  if (!qword_269947AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947AB0);
  }
  return result;
}

unint64_t sub_24EBE751C()
{
  unint64_t result = qword_269947AB8;
  if (!qword_269947AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947AB8);
  }
  return result;
}

unint64_t sub_24EBE7574()
{
  unint64_t result = qword_269947AC0;
  if (!qword_269947AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947AC0);
  }
  return result;
}

unint64_t sub_24EBE75CC()
{
  unint64_t result = qword_269947AC8;
  if (!qword_269947AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947AC8);
  }
  return result;
}

unint64_t sub_24EBE7624()
{
  unint64_t result = qword_269947AD0;
  if (!qword_269947AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947AD0);
  }
  return result;
}

unint64_t sub_24EBE767C()
{
  unint64_t result = qword_269947AD8;
  if (!qword_269947AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947AD8);
  }
  return result;
}

unint64_t sub_24EBE76D4()
{
  unint64_t result = qword_269947AE0;
  if (!qword_269947AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947AE0);
  }
  return result;
}

unint64_t sub_24EBE772C()
{
  unint64_t result = qword_269947AE8;
  if (!qword_269947AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947AE8);
  }
  return result;
}

unint64_t sub_24EBE7784()
{
  unint64_t result = qword_269947AF0;
  if (!qword_269947AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947AF0);
  }
  return result;
}

unint64_t sub_24EBE77DC()
{
  unint64_t result = qword_269947AF8;
  if (!qword_269947AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947AF8);
  }
  return result;
}

unint64_t sub_24EBE7834()
{
  unint64_t result = qword_269947B00;
  if (!qword_269947B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947B00);
  }
  return result;
}

uint64_t sub_24EBE7888(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7241726564616568 && a2 == 0xED00006B726F7774;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1954047348 && a2 == 0xE400000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E694C6F65646976 && a2 == 0xE90000000000006BLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EBE79E0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947B08);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EBE7A40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t BrowseLazyItem.identifier.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for BrowseItem();
  MEMORY[0x270FA5388](v2);
  unsigned int v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BrowseLazyItem();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EBE7BCC(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = *((void *)v7 + 7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24EB628E0((uint64_t)v7, (uint64_t)v4);
    uint64_t v8 = *(void *)&v4[*(int *)(v2 + 64)];
    swift_bridgeObjectRetain();
    sub_24EBE7C30((uint64_t)v4);
  }
  return v8;
}

uint64_t sub_24EBE7BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseLazyItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EBE7C30(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BrowseItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t BrowseLazyItem.referenceType.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for BrowseItem();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BrowseLazyItem();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EBE7BCC(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = v7[72];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24EB628E0((uint64_t)v7, (uint64_t)v4);
    uint64_t v8 = v4[*(int *)(v2 + 68)];
    sub_24EBE7C30((uint64_t)v4);
  }
  return v8;
}

uint64_t BrowseGalleryDescriptor.init(displayStyle:identifier:items:preferredInsetBehavior:title:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(unsigned char *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  *(unsigned char *)(a7 + 32) = a5 & 1;
  uint64_t v8 = a7 + *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
  uint64_t v9 = sub_24EC21D10();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  return v10(v8, a6, v9);
}

uint64_t BrowseGalleryDescriptor.displayStyle.getter()
{
  return *v0;
}

uint64_t BrowseGalleryDescriptor.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BrowseGalleryDescriptor.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BrowseGalleryDescriptor.preferredInsetBehavior.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t BrowseGalleryDescriptor.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
  uint64_t v4 = sub_24EC21D10();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

unint64_t sub_24EBE7F20(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696669746E656469;
      break;
    case 2:
      unint64_t result = 0x736D657469;
      break;
    case 3:
      return result;
    case 4:
      unint64_t result = 0x656C746974;
      break;
    default:
      unint64_t result = 0x5379616C70736964;
      break;
  }
  return result;
}

unint64_t sub_24EBE7FD8()
{
  return sub_24EBE7F20(*v0);
}

uint64_t sub_24EBE7FE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBE9794(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBE8008(uint64_t a1)
{
  unint64_t v2 = sub_24EBE8D94();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBE8044(uint64_t a1)
{
  unint64_t v2 = sub_24EBE8D94();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseGalleryDescriptor.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947B10);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBE8D94();
  sub_24EC23050();
  char v14 = *v3;
  char v13 = 0;
  sub_24EB7DBAC();
  sub_24EC22F40();
  if (!v2)
  {
    char v12 = 1;
    sub_24EC22F00();
    uint64_t v11 = *((void *)v3 + 3);
    v10[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269945F10);
    sub_24EBE8DE8(&qword_269945F18, &qword_269945F20);
    sub_24EC22F40();
    v10[14] = v3[32];
    v10[13] = 3;
    sub_24EBD0CC0();
    sub_24EC22F40();
    type metadata accessor for BrowseGalleryDescriptor();
    v10[12] = 4;
    sub_24EC21D10();
    sub_24EBE8EC4(&qword_2699465E0, MEMORY[0x263F06828]);
    sub_24EC22F40();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t BrowseGalleryDescriptor.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v3 = sub_24EC21D10();
  uint64_t v22 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947B20);
  uint64_t v23 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for BrowseGalleryDescriptor();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  uint64_t v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_24EBE8D94();
  char v12 = v27;
  sub_24EC23040();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  uint64_t v27 = v5;
  uint64_t v13 = (uint64_t)v10;
  uint64_t v15 = v23;
  uint64_t v14 = v24;
  char v34 = 0;
  sub_24EB7EBCC();
  sub_24EC22E90();
  *(unsigned char *)uint64_t v13 = v35;
  char v33 = 1;
  *(void *)(v13 + 8) = sub_24EC22E50();
  *(void *)(v13 + 16) = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269945F10);
  char v32 = 2;
  sub_24EBE8DE8(&qword_269945F30, &qword_269945F38);
  sub_24EC22E90();
  *(void *)(v13 + 24) = v28;
  char v30 = 3;
  sub_24EBD0DBC();
  sub_24EC22E90();
  *(unsigned char *)(v13 + 32) = v31;
  char v29 = 4;
  sub_24EBE8EC4(&qword_269946658, MEMORY[0x263F06828]);
  uint64_t v17 = v27;
  uint64_t v18 = v3;
  uint64_t v19 = v25;
  sub_24EC22E90();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v19);
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v13 + *(int *)(v8 + 32), v17, v18);
  sub_24EBDB330(v13, v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return sub_24EBDB394(v13);
}

uint64_t sub_24EBE87AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BrowseGalleryDescriptor.init(from:)(a1, a2);
}

uint64_t sub_24EBE87C4(void *a1)
{
  return BrowseGalleryDescriptor.encode(to:)(a1);
}

uint64_t BrowseGalleryDescriptor.hash(into:)(uint64_t a1)
{
  BrowseDisplayStyle.rawValue.getter(*(unsigned char *)v1);
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v1 + 24);
  swift_bridgeObjectRetain();
  sub_24EB61EF4(a1, v3);
  swift_bridgeObjectRelease();
  sub_24EC23000();
  type metadata accessor for BrowseGalleryDescriptor();
  sub_24EC21D10();
  sub_24EBE8EC4(&qword_2699466B8, MEMORY[0x263F06828]);
  return sub_24EC22A20();
}

uint64_t BrowseGalleryDescriptor.hashValue.getter()
{
  sub_24EC22FF0();
  BrowseDisplayStyle.rawValue.getter(*(unsigned char *)v0);
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_24EB61EF4((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_24EC23000();
  type metadata accessor for BrowseGalleryDescriptor();
  sub_24EC21D10();
  sub_24EBE8EC4(&qword_2699466B8, MEMORY[0x263F06828]);
  sub_24EC22A20();
  return sub_24EC23030();
}

uint64_t sub_24EBE8A08(uint64_t a1)
{
  BrowseDisplayStyle.rawValue.getter(*(unsigned char *)v1);
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v1 + 24);
  swift_bridgeObjectRetain();
  sub_24EB61EF4(a1, v3);
  swift_bridgeObjectRelease();
  sub_24EC23000();
  sub_24EC21D10();
  sub_24EBE8EC4(&qword_2699466B8, MEMORY[0x263F06828]);
  return sub_24EC22A20();
}

uint64_t sub_24EBE8B10()
{
  sub_24EC22FF0();
  BrowseDisplayStyle.rawValue.getter(*(unsigned char *)v0);
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_24EB61EF4((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_24EC23000();
  sub_24EC21D10();
  sub_24EBE8EC4(&qword_2699466B8, MEMORY[0x263F06828]);
  sub_24EC22A20();
  return sub_24EC23030();
}

uint64_t _s15FitnessBrowsing23BrowseGalleryDescriptorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)a2;
  uint64_t v5 = BrowseDisplayStyle.rawValue.getter(*(unsigned char *)a1);
  uint64_t v7 = v6;
  if (v5 == BrowseDisplayStyle.rawValue.getter(v4) && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  if ((*(void *)(a1 + 8) != *(void *)(a2 + 8) || *(void *)(a1 + 16) != *(void *)(a2 + 16))
    && (sub_24EC22F70() & 1) == 0
    || (sub_24EB61540(*(void *)(a1 + 24), *(void *)(a2 + 24)) & 1) == 0
    || *(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32))
  {
    return 0;
  }
  type metadata accessor for BrowseGalleryDescriptor();
  return sub_24EC21D00();
}

uint64_t type metadata accessor for BrowseGalleryDescriptor()
{
  uint64_t result = qword_26B1D8988;
  if (!qword_26B1D8988) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24EBE8D94()
{
  unint64_t result = qword_269947B18;
  if (!qword_269947B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947B18);
  }
  return result;
}

uint64_t sub_24EBE8DE8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269945F10);
    sub_24EBE8EC4(a2, (void (*)(uint64_t))type metadata accessor for BrowseLazyItem);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EBE8E7C()
{
  return sub_24EBE8EC4(&qword_269947B28, (void (*)(uint64_t))type metadata accessor for BrowseGalleryDescriptor);
}

uint64_t sub_24EBE8EC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for BrowseGalleryDescriptor(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = a2[3];
    uint64_t v6 = *(int *)(a3 + 32);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v9 = sub_24EC21D10();
    char v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for BrowseGalleryDescriptor(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_24EC21D10();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for BrowseGalleryDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_24EC21D10();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for BrowseGalleryDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_24EC21D10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for BrowseGalleryDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_24EC21D10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for BrowseGalleryDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24EC21D10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for BrowseGalleryDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EBE9364);
}

uint64_t sub_24EBE9364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24EC21D10();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for BrowseGalleryDescriptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EBE9428);
}

uint64_t sub_24EBE9428(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24EC21D10();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24EBE94D0()
{
  uint64_t result = sub_24EC21D10();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BrowseGalleryDescriptor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBE9654);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseGalleryDescriptor.CodingKeys()
{
  return &type metadata for BrowseGalleryDescriptor.CodingKeys;
}

unint64_t sub_24EBE9690()
{
  unint64_t result = qword_269947B30;
  if (!qword_269947B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947B30);
  }
  return result;
}

unint64_t sub_24EBE96E8()
{
  unint64_t result = qword_269947B38;
  if (!qword_269947B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947B38);
  }
  return result;
}

unint64_t sub_24EBE9740()
{
  unint64_t result = qword_269947B40;
  if (!qword_269947B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947B40);
  }
  return result;
}

uint64_t sub_24EBE9794(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x5379616C70736964 && a2 == 0xEC000000656C7974;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024EC31110 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t type metadata accessor for LocalizationBundle()
{
  return self;
}

id sub_24EBE99C0()
{
  type metadata accessor for LocalizationBundle();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_269961E80 = (uint64_t)result;
  return result;
}

uint64_t NewAndFeaturedDescriptor.canonicalIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NewAndFeaturedDescriptor.displayStyle.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t NewAndFeaturedDescriptor.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NewAndFeaturedDescriptor.mediaType.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t NewAndFeaturedDescriptor.subtitle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewAndFeaturedDescriptor() + 32);
  return sub_24EBD0AF4(v3, a1);
}

uint64_t NewAndFeaturedDescriptor.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewAndFeaturedDescriptor() + 36);
  uint64_t v4 = sub_24EC21D10();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t NewAndFeaturedDescriptor.init(canonicalIdentifier:displayStyle:identifier:mediaType:subtitle:title:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 40) = a6 & 1;
  uint64_t v12 = type metadata accessor for NewAndFeaturedDescriptor();
  sub_24EBD0B5C(a7, a9 + *(int *)(v12 + 32));
  uint64_t v13 = a9 + *(int *)(v12 + 36);
  uint64_t v14 = sub_24EC21D10();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32);
  return v15(v13, a8, v14);
}

unint64_t sub_24EBE9BF8(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x5379616C70736964;
      break;
    case 2:
      unint64_t result = 0x696669746E656469;
      break;
    case 3:
      unint64_t result = 0x707954616964656DLL;
      break;
    case 4:
      unint64_t result = 0x656C746974627573;
      break;
    case 5:
      unint64_t result = 0x656C746974;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24EBE9CD4()
{
  return sub_24EBE9BF8(*v0);
}

uint64_t sub_24EBE9CDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBEBEA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBE9D04(uint64_t a1)
{
  unint64_t v2 = sub_24EBEAD90();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBE9D40(uint64_t a1)
{
  unint64_t v2 = sub_24EBEAD90();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t NewAndFeaturedDescriptor.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947B48);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBEAD90();
  sub_24EC23050();
  char v18 = 0;
  sub_24EC22F00();
  if (!v2)
  {
    char v17 = *(unsigned char *)(v3 + 16);
    char v16 = 1;
    sub_24EB7DBAC();
    sub_24EC22F40();
    char v15 = 2;
    sub_24EC22F00();
    char v14 = *(unsigned char *)(v3 + 40);
    char v13 = 3;
    sub_24EBEADE4();
    sub_24EC22F40();
    type metadata accessor for NewAndFeaturedDescriptor();
    char v12 = 4;
    sub_24EC21D10();
    sub_24EBEC118(&qword_2699465E0, MEMORY[0x263F06828]);
    sub_24EC22EF0();
    char v11 = 5;
    sub_24EC22F40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t NewAndFeaturedDescriptor.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v3 = sub_24EC21D10();
  uint64_t v26 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947B60);
  uint64_t v28 = *(void *)(v9 - 8);
  uint64_t v29 = v9;
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for NewAndFeaturedDescriptor();
  MEMORY[0x270FA5388](v12);
  char v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  char v31 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_24EBEAD90();
  char v30 = v11;
  uint64_t v16 = v32;
  sub_24EC23040();
  if (v16) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  }
  char v17 = v8;
  uint64_t v19 = v28;
  uint64_t v18 = v29;
  uint64_t v32 = v12;
  char v40 = 0;
  *(void *)char v14 = sub_24EC22E50();
  *((void *)v14 + 1) = v20;
  char v38 = 1;
  sub_24EB7EBCC();
  sub_24EC22E90();
  unsigned char v14[16] = v39;
  char v37 = 2;
  *((void *)v14 + 3) = sub_24EC22E50();
  *((void *)v14 + 4) = v21;
  char v35 = 3;
  sub_24EBEAE38();
  sub_24EC22E90();
  v14[40] = v36;
  char v34 = 4;
  sub_24EBEC118(&qword_269946658, MEMORY[0x263F06828]);
  sub_24EC22E40();
  uint64_t v22 = (uint64_t)v17;
  uint64_t v23 = v32;
  sub_24EBD0B5C(v22, (uint64_t)&v14[*(int *)(v32 + 32)]);
  char v33 = 5;
  sub_24EC22E90();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v30, v18);
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v14[*(int *)(v23 + 36)], v5, v3);
  sub_24EBEAE8C((uint64_t)v14, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return sub_24EBEAEF0((uint64_t)v14);
}

uint64_t sub_24EBEA4EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return NewAndFeaturedDescriptor.init(from:)(a1, a2);
}

uint64_t sub_24EBEA504(void *a1)
{
  return NewAndFeaturedDescriptor.encode(to:)(a1);
}

uint64_t NewAndFeaturedDescriptor.hash(into:)()
{
  uint64_t v1 = sub_24EC21D10();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  BrowseDisplayStyle.rawValue.getter(*(unsigned char *)(v0 + 16));
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  sub_24EC23000();
  uint64_t v8 = type metadata accessor for NewAndFeaturedDescriptor();
  sub_24EBD0AF4(v0 + *(int *)(v8 + 32), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_24EC23010();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_24EC23010();
    sub_24EBEC118(&qword_2699466B8, MEMORY[0x263F06828]);
    sub_24EC22A20();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_24EBEC118(&qword_2699466B8, MEMORY[0x263F06828]);
  return sub_24EC22A20();
}

uint64_t NewAndFeaturedDescriptor.hashValue.getter()
{
  return sub_24EC23030();
}

uint64_t sub_24EBEA808()
{
  return sub_24EC23030();
}

uint64_t sub_24EBEA84C()
{
  return sub_24EC23030();
}

uint64_t _s15FitnessBrowsing24NewAndFeaturedDescriptorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EC21D10();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  uint64_t v40 = v5;
  MEMORY[0x270FA5388](v4);
  char v38 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946708);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v35[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = &v35[-v15];
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = &v35[-v17];
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v19 = sub_24EC22F70(), v20 = 0, (v19 & 1) != 0))
  {
    char v21 = *(unsigned char *)(a2 + 16);
    uint64_t v22 = BrowseDisplayStyle.rawValue.getter(*(unsigned char *)(a1 + 16));
    uint64_t v24 = v23;
    if (v22 == BrowseDisplayStyle.rawValue.getter(v21) && v24 == v25)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v26 = sub_24EC22F70();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v20 = 0;
      if ((v26 & 1) == 0) {
        return v20 & 1;
      }
    }
    if (*(void *)(a1 + 24) == *(void *)(a2 + 24) && *(void *)(a1 + 32) == *(void *)(a2 + 32)
      || (v27 = sub_24EC22F70(), char v20 = 0, (v27 & 1) != 0))
    {
      if (*(unsigned __int8 *)(a1 + 40) == *(unsigned __int8 *)(a2 + 40))
      {
        uint64_t v28 = type metadata accessor for NewAndFeaturedDescriptor();
        sub_24EBD0AF4(a1 + *(int *)(v28 + 32), (uint64_t)v18);
        uint64_t v37 = v28;
        sub_24EBD0AF4(a2 + *(int *)(v28 + 32), (uint64_t)v16);
        uint64_t v29 = (uint64_t)&v9[*(int *)(v7 + 48)];
        sub_24EBD0AF4((uint64_t)v18, (uint64_t)v9);
        sub_24EBD0AF4((uint64_t)v16, v29);
        uint64_t v30 = v39;
        char v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
        if (v31((uint64_t)v9, 1, v39) == 1)
        {
          sub_24EB742F4((uint64_t)v16, &qword_2699465B8);
          sub_24EB742F4((uint64_t)v18, &qword_2699465B8);
          if (v31(v29, 1, v30) == 1)
          {
            sub_24EB742F4((uint64_t)v9, &qword_2699465B8);
LABEL_21:
            char v20 = sub_24EC21D00();
            return v20 & 1;
          }
        }
        else
        {
          sub_24EBD0AF4((uint64_t)v9, (uint64_t)v13);
          if (v31(v29, 1, v30) != 1)
          {
            uint64_t v33 = v40;
            (*(void (**)(unsigned char *, uint64_t, uint64_t))(v40 + 32))(v38, v29, v30);
            sub_24EBEC118(&qword_269946710, MEMORY[0x263F06828]);
            int v36 = sub_24EC22A30();
            char v34 = *(void (**)(unsigned char *, uint64_t))(v33 + 8);
            v34(v38, v30);
            sub_24EB742F4((uint64_t)v16, &qword_2699465B8);
            sub_24EB742F4((uint64_t)v18, &qword_2699465B8);
            v34(v13, v30);
            sub_24EB742F4((uint64_t)v9, &qword_2699465B8);
            if (v36) {
              goto LABEL_21;
            }
            goto LABEL_18;
          }
          sub_24EB742F4((uint64_t)v16, &qword_2699465B8);
          sub_24EB742F4((uint64_t)v18, &qword_2699465B8);
          (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v13, v30);
        }
        sub_24EB742F4((uint64_t)v9, &qword_269946708);
      }
LABEL_18:
      char v20 = 0;
    }
  }
  return v20 & 1;
}

uint64_t type metadata accessor for NewAndFeaturedDescriptor()
{
  uint64_t result = qword_269947B78;
  if (!qword_269947B78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24EBEAD90()
{
  unint64_t result = qword_269947B50;
  if (!qword_269947B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947B50);
  }
  return result;
}

unint64_t sub_24EBEADE4()
{
  unint64_t result = qword_269947B58;
  if (!qword_269947B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947B58);
  }
  return result;
}

unint64_t sub_24EBEAE38()
{
  unint64_t result = qword_269947B68;
  if (!qword_269947B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947B68);
  }
  return result;
}

uint64_t sub_24EBEAE8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewAndFeaturedDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EBEAEF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NewAndFeaturedDescriptor();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EBEAF4C()
{
  return sub_24EBEC118(&qword_269947B70, (void (*)(uint64_t))type metadata accessor for NewAndFeaturedDescriptor);
}

char *initializeBufferWithCopyOfBuffer for NewAndFeaturedDescriptor(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (char *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2[3];
    uint64_t v9 = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v10 = *(int *)(a3 + 32);
    __dst = (void *)(a1 + v10);
    uint64_t v11 = (char *)a2 + v10;
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = v9;
    uint64_t v12 = sub_24EC21D10();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(&v4[*(int *)(a3 + 36)], (uint64_t)a2 + *(int *)(a3 + 36), v12);
    }
    else
    {
      uint64_t v17 = *(void (**)(void *, char *, uint64_t))(v13 + 16);
      v17(__dst, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
      v17(&v4[*(int *)(a3 + 36)], (char *)a2 + *(int *)(a3 + 36), v12);
    }
  }
  return v4;
}

uint64_t destroy for NewAndFeaturedDescriptor(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_24EC21D10();
  uint64_t v11 = *(void *)(v5 - 8);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v4, 1, v5);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  if (!v6)
  {
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v7(v4, v5);
    uint64_t v7 = v10;
  }
  uint64_t v8 = a1 + *(int *)(a2 + 36);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(v8, v5);
}

uint64_t initializeWithCopy for NewAndFeaturedDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  uint64_t v11 = sub_24EC21D10();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(a1 + *(int *)(a3 + 36), a2 + *(int *)(a3 + 36), v11);
  }
  else
  {
    uint64_t v15 = *(void (**)(void *, const void *, uint64_t))(v12 + 16);
    v15(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    v15((void *)(a1 + *(int *)(a3 + 36)), (const void *)(a2 + *(int *)(a3 + 36)), v11);
  }
  return a1;
}

uint64_t assignWithCopy for NewAndFeaturedDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_24EC21D10();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(a1 + *(int *)(a3 + 36), a2 + *(int *)(a3 + 36), v9);
  return a1;
}

uint64_t initializeWithTake for NewAndFeaturedDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_24EC21D10();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(a1 + *(int *)(a3 + 36), a2 + *(int *)(a3 + 36), v9);
  }
  else
  {
    int v12 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
    v12(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    v12((void *)(a1 + *(int *)(a3 + 36)), (const void *)(a2 + *(int *)(a3 + 36)), v9);
  }
  return a1;
}

uint64_t assignWithTake for NewAndFeaturedDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_24EC21D10();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40))(a1 + *(int *)(a3 + 36), a2 + *(int *)(a3 + 36), v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for NewAndFeaturedDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EBEB938);
}

uint64_t sub_24EBEB938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_24EC21D10();
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for NewAndFeaturedDescriptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EBEBA7C);
}

uint64_t sub_24EBEBA7C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_24EC21D10();
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_24EBEBBAC()
{
  sub_24EBBA7EC();
  if (v0 <= 0x3F)
  {
    sub_24EC21D10();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for NewAndFeaturedDescriptor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBEBD60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewAndFeaturedDescriptor.CodingKeys()
{
  return &type metadata for NewAndFeaturedDescriptor.CodingKeys;
}

unint64_t sub_24EBEBD9C()
{
  unint64_t result = qword_269947B88;
  if (!qword_269947B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947B88);
  }
  return result;
}

unint64_t sub_24EBEBDF4()
{
  unint64_t result = qword_269947B90;
  if (!qword_269947B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947B90);
  }
  return result;
}

unint64_t sub_24EBEBE4C()
{
  unint64_t result = qword_269947B98;
  if (!qword_269947B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947B98);
  }
  return result;
}

uint64_t sub_24EBEBEA0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x800000024EC31240 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5379616C70736964 && a2 == 0xEC000000656C7974 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x707954616964656DLL && a2 == 0xE900000000000065 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_24EBEC118(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL static BrowseSizeClass.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24EBEC174(char a1)
{
  return *(void *)&aCompact_0[8 * a1];
}

uint64_t sub_24EBEC194()
{
  return sub_24EBEC174(*v0);
}

uint64_t sub_24EBEC19C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBED36C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBEC1C4(uint64_t a1)
{
  unint64_t v2 = sub_24EBEC708();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBEC200(uint64_t a1)
{
  unint64_t v2 = sub_24EBEC708();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBEC23C(uint64_t a1)
{
  unint64_t v2 = sub_24EBEC804();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBEC278(uint64_t a1)
{
  unint64_t v2 = sub_24EBEC804();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBEC2B4(uint64_t a1)
{
  unint64_t v2 = sub_24EBEC7B0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBEC2F0(uint64_t a1)
{
  unint64_t v2 = sub_24EBEC7B0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBEC32C(uint64_t a1)
{
  unint64_t v2 = sub_24EBEC75C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBEC368(uint64_t a1)
{
  unint64_t v2 = sub_24EBEC75C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseSizeClass.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947BA0);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947BA8);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947BB0);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947BB8);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBEC708();
  sub_24EC23050();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_24EBEC7B0();
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_24EBEC75C();
      uint64_t v17 = v23;
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_24EBEC804();
    sub_24EC22EC0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_24EBEC708()
{
  unint64_t result = qword_269947BC0;
  if (!qword_269947BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947BC0);
  }
  return result;
}

unint64_t sub_24EBEC75C()
{
  unint64_t result = qword_269947BC8;
  if (!qword_269947BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947BC8);
  }
  return result;
}

unint64_t sub_24EBEC7B0()
{
  unint64_t result = qword_269947BD0;
  if (!qword_269947BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947BD0);
  }
  return result;
}

unint64_t sub_24EBEC804()
{
  unint64_t result = qword_269947BD8;
  if (!qword_269947BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947BD8);
  }
  return result;
}

uint64_t BrowseSizeClass.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  char v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947BE0);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947BE8);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947BF0);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947BF8);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBEC708();
  uint64_t v12 = (uint64_t)v39;
  sub_24EC23040();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v39 = a1;
  uint64_t v15 = v11;
  uint64_t v16 = sub_24EC22EA0();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_24EC22D50();
    swift_allocError();
    uint64_t v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269946108);
    void *v23 = &type metadata for BrowseSizeClass;
    sub_24EC22E10();
    sub_24EC22D40();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_24EBEC7B0();
      uint64_t v18 = v30;
      sub_24EC22E00();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_24EBEC75C();
      uint64_t v25 = v30;
      sub_24EC22E00();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_24EBEC804();
    uint64_t v24 = v30;
    sub_24EC22E00();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_24EBECE10@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return BrowseSizeClass.init(from:)(a1, a2);
}

uint64_t sub_24EBECE28(void *a1)
{
  return BrowseSizeClass.encode(to:)(a1);
}

uint64_t BrowseSizeClass.hash(into:)()
{
  return sub_24EC23000();
}

uint64_t BrowseSizeClass.hashValue.getter()
{
  return sub_24EC23030();
}

unint64_t sub_24EBECEB8()
{
  unint64_t result = qword_269947C00;
  if (!qword_269947C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947C00);
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseSizeClass()
{
  return &type metadata for BrowseSizeClass;
}

unsigned char *_s15FitnessBrowsing15BrowseSizeClassOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBECFECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseSizeClass.CodingKeys()
{
  return &type metadata for BrowseSizeClass.CodingKeys;
}

ValueMetadata *type metadata accessor for BrowseSizeClass.CompactCodingKeys()
{
  return &type metadata for BrowseSizeClass.CompactCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseSizeClass.RegularCodingKeys()
{
  return &type metadata for BrowseSizeClass.RegularCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseSizeClass.TvCodingKeys()
{
  return &type metadata for BrowseSizeClass.TvCodingKeys;
}

unint64_t sub_24EBED058()
{
  unint64_t result = qword_269947C08;
  if (!qword_269947C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947C08);
  }
  return result;
}

unint64_t sub_24EBED0B0()
{
  unint64_t result = qword_269947C10;
  if (!qword_269947C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947C10);
  }
  return result;
}

unint64_t sub_24EBED108()
{
  unint64_t result = qword_269947C18;
  if (!qword_269947C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947C18);
  }
  return result;
}

unint64_t sub_24EBED160()
{
  unint64_t result = qword_269947C20;
  if (!qword_269947C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947C20);
  }
  return result;
}

unint64_t sub_24EBED1B8()
{
  unint64_t result = qword_269947C28;
  if (!qword_269947C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947C28);
  }
  return result;
}

unint64_t sub_24EBED210()
{
  unint64_t result = qword_269947C30;
  if (!qword_269947C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947C30);
  }
  return result;
}

unint64_t sub_24EBED268()
{
  unint64_t result = qword_269947C38;
  if (!qword_269947C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947C38);
  }
  return result;
}

unint64_t sub_24EBED2C0()
{
  unint64_t result = qword_269947C40;
  if (!qword_269947C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947C40);
  }
  return result;
}

unint64_t sub_24EBED318()
{
  unint64_t result = qword_269947C48;
  if (!qword_269947C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947C48);
  }
  return result;
}

uint64_t sub_24EBED36C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x746361706D6F63 && a2 == 0xE700000000000000;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72616C75676572 && a2 == 0xE700000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 30324 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t BrowseTextAttributes.fontDescriptor.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_24EB7CDA8(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  return v1;
}

uint64_t BrowseTextAttributes.foregroundColor.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BrowseTextAttributes.textAlignment.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t BrowseTextAttributes.init(fontDescriptor:foregroundColor:textAlignment:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  *(void *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(unsigned char *)(a8 + 24) = a4;
  *(void *)(a8 + 32) = a5;
  *(void *)(a8 + 40) = a6;
  *(unsigned char *)(a8 + 48) = a7;
  return result;
}

uint64_t sub_24EBED540(char a1)
{
  return *(void *)&aFontdescforegr[8 * a1];
}

uint64_t sub_24EBED560()
{
  return sub_24EBED540(*v0);
}

uint64_t sub_24EBED568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBEE6EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBED590(uint64_t a1)
{
  unint64_t v2 = sub_24EBED7F0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBED5CC(uint64_t a1)
{
  unint64_t v2 = sub_24EBED7F0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseTextAttributes.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947C50);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v14 = *v1;
  uint64_t v7 = *((void *)v1 + 2);
  char v8 = *((unsigned char *)v1 + 24);
  uint64_t v9 = *((void *)v1 + 4);
  v13[0] = *((void *)v1 + 5);
  v13[1] = v9;
  int v19 = *((unsigned __int8 *)v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBED7F0();
  sub_24EC23050();
  long long v16 = v14;
  uint64_t v17 = v7;
  char v18 = v8;
  char v20 = 0;
  sub_24EBED844();
  uint64_t v10 = v15;
  sub_24EC22EF0();
  if (!v10)
  {
    char v11 = v19;
    LOBYTE(v16) = 1;
    sub_24EC22ED0();
    LOBYTE(v16) = v11;
    char v20 = 2;
    sub_24EBED898();
    sub_24EC22F40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24EBED7F0()
{
  unint64_t result = qword_269947C58;
  if (!qword_269947C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947C58);
  }
  return result;
}

unint64_t sub_24EBED844()
{
  unint64_t result = qword_269947C60;
  if (!qword_269947C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947C60);
  }
  return result;
}

unint64_t sub_24EBED898()
{
  unint64_t result = qword_269947C68;
  if (!qword_269947C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947C68);
  }
  return result;
}

uint64_t BrowseTextAttributes.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947C70);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBED7F0();
  sub_24EC23040();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v36 = 0;
  sub_24EBEDC30();
  sub_24EC22E40();
  uint64_t v29 = a2;
  uint64_t v9 = v31;
  uint64_t v10 = v32;
  uint64_t v11 = v33;
  int v12 = v34;
  LOBYTE(v31) = 1;
  uint64_t v30 = v9;
  sub_24EB7CDA8(v9, v32, v33, v34);
  uint64_t v13 = sub_24EC22E20();
  uint64_t v15 = v14;
  uint64_t v26 = v13;
  int v35 = v12;
  uint64_t v28 = v11;
  uint64_t v16 = v30;
  char v36 = 2;
  sub_24EBEDC84();
  swift_bridgeObjectRetain();
  uint64_t v17 = v15;
  uint64_t v27 = 0;
  sub_24EC22E90();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LOBYTE(v15) = v31;
  uint64_t v18 = v16;
  uint64_t v19 = v16;
  uint64_t v20 = v10;
  uint64_t v21 = v10;
  uint64_t v22 = v28;
  LOBYTE(v10) = v35;
  sub_24EB7CDA8(v19, v21, v28, v35);
  sub_24EB7EA38(v18, v20, v22, v10);
  uint64_t v23 = v29;
  *uint64_t v29 = v18;
  v23[1] = v20;
  void v23[2] = v22;
  *((unsigned char *)v23 + 24) = v10;
  v23[4] = v26;
  v23[5] = v17;
  *((unsigned char *)v23 + 48) = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_24EB7EA38(v18, v20, v22, v10);
  return swift_bridgeObjectRelease();
}

unint64_t sub_24EBEDC30()
{
  unint64_t result = qword_269947C78;
  if (!qword_269947C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947C78);
  }
  return result;
}

unint64_t sub_24EBEDC84()
{
  unint64_t result = qword_269947C80;
  if (!qword_269947C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947C80);
  }
  return result;
}

uint64_t sub_24EBEDCD8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return BrowseTextAttributes.init(from:)(a1, a2);
}

uint64_t sub_24EBEDCF0(void *a1)
{
  return BrowseTextAttributes.encode(to:)(a1);
}

uint64_t BrowseTextAttributes.hash(into:)(uint64_t a1)
{
  int v3 = *(unsigned __int8 *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 40);
  if (v3 == 255)
  {
    sub_24EC23010();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)(v1 + 8);
    uint64_t v5 = *(void *)(v1 + 16);
    uint64_t v7 = *(void *)v1;
    sub_24EC23010();
    sub_24EB7CDBC(v7, v6, v5, v3);
    BrowseFontDescriptor.hash(into:)(a1, v7, v6, v5, v3);
    sub_24EB7EA38(v7, v6, v5, v3);
    if (v4)
    {
LABEL_3:
      sub_24EC23010();
      swift_bridgeObjectRetain();
      sub_24EC22AB0();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  sub_24EC23010();
LABEL_6:
  sub_24EC22AB0();
  return swift_bridgeObjectRelease();
}

uint64_t BrowseTextAttributes.hashValue.getter()
{
  uint64_t v1 = *((void *)v0 + 2);
  char v2 = *((unsigned char *)v0 + 24);
  char v3 = *((unsigned char *)v0 + 48);
  long long v6 = *v0;
  uint64_t v7 = v1;
  char v8 = v2;
  long long v9 = v0[2];
  char v10 = v3;
  sub_24EC22FF0();
  BrowseTextAttributes.hash(into:)((uint64_t)v5);
  return sub_24EC23030();
}

uint64_t sub_24EBEDEAC()
{
  uint64_t v1 = *((void *)v0 + 2);
  char v2 = *((unsigned char *)v0 + 24);
  char v3 = *((unsigned char *)v0 + 48);
  long long v6 = *v0;
  uint64_t v7 = v1;
  char v8 = v2;
  long long v9 = v0[2];
  char v10 = v3;
  sub_24EC22FF0();
  BrowseTextAttributes.hash(into:)((uint64_t)v5);
  return sub_24EC23030();
}

uint64_t sub_24EBEDF1C()
{
  uint64_t v1 = *((void *)v0 + 2);
  char v2 = *((unsigned char *)v0 + 24);
  char v3 = *((unsigned char *)v0 + 48);
  long long v6 = *v0;
  uint64_t v7 = v1;
  char v8 = v2;
  long long v9 = v0[2];
  char v10 = v3;
  sub_24EC22FF0();
  BrowseTextAttributes.hash(into:)((uint64_t)v5);
  return sub_24EC23030();
}

uint64_t _s15FitnessBrowsing20BrowseTextAttributesV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  char v5 = *(unsigned char *)(a1 + 48);
  int v6 = *(unsigned __int8 *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  if (v2 == 255)
  {
    if (v6 != 255) {
      return 0;
    }
  }
  else
  {
    if (v6 == 255) {
      return 0;
    }
    uint64_t v10 = *(void *)a1;
    uint64_t v11 = *(void *)(a1 + 8);
    char v23 = *(unsigned char *)(a2 + 48);
    char v24 = *(unsigned char *)(a1 + 48);
    uint64_t v12 = *(void *)(a1 + 16);
    uint64_t v13 = *(void *)a2;
    uint64_t v14 = *(void *)(a2 + 8);
    uint64_t v15 = *(void *)(a2 + 16);
    uint64_t v20 = *(void *)(a2 + 32);
    uint64_t v21 = *(void *)(a2 + 40);
    uint64_t v22 = *(void *)(a1 + 40);
    sub_24EB7CDA8(*(void *)a2, v14, v15, v6);
    sub_24EB7CDA8(v10, v11, v12, v2);
    char v16 = _s15FitnessBrowsing20BrowseFontDescriptorO2eeoiySbAC_ACtFZ_0(v10, v11, v12, v2, v13, v14, v15, v6);
    uint64_t v17 = v13;
    char v9 = v23;
    sub_24EB7EA38(v17, v14, v15, v6);
    uint64_t v18 = v12;
    char v5 = v24;
    sub_24EB7EA38(v10, v11, v18, v2);
    uint64_t v7 = v20;
    uint64_t v8 = v21;
    uint64_t v3 = v22;
    if ((v16 & 1) == 0) {
      return 0;
    }
  }
  if (!v3)
  {
    if (!v8) {
      goto LABEL_11;
    }
    return 0;
  }
  if (!v8 || (v4 != v7 || v3 != v8) && (sub_24EC22F70() & 1) == 0) {
    return 0;
  }
LABEL_11:
  return sub_24EC04998(v5, v9);
}

unint64_t sub_24EBEE118()
{
  unint64_t result = qword_269947C88;
  if (!qword_269947C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947C88);
  }
  return result;
}

uint64_t destroy for BrowseTextAttributes(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 24);
  if (v1 != 255) {
    sub_24EB7EA4C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), v1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BrowseTextAttributes(uint64_t a1, uint64_t *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v4 == 255)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  }
  else
  {
    uint64_t v5 = *a2;
    uint64_t v6 = a2[1];
    uint64_t v7 = a2[2];
    sub_24EB7CDBC(*a2, v6, v7, v4);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7;
    *(unsigned char *)(a1 + 24) = v4;
  }
  uint64_t v8 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BrowseTextAttributes(uint64_t a1, long long *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    if (v4 == 255)
    {
      long long v16 = *a2;
      *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
      *(_OWORD *)a1 = v16;
    }
    else
    {
      uint64_t v12 = *(void *)a2;
      uint64_t v13 = *((void *)a2 + 1);
      uint64_t v14 = *((void *)a2 + 2);
      sub_24EB7CDBC(*(void *)a2, v13, v14, v4);
      *(void *)a1 = v12;
      *(void *)(a1 + 8) = v13;
      *(void *)(a1 + 16) = v14;
      *(unsigned char *)(a1 + 24) = v4;
    }
  }
  else if (v4 == 255)
  {
    sub_24EB834A4(a1);
    long long v15 = *(long long *)((char *)a2 + 9);
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 9) = v15;
  }
  else
  {
    uint64_t v5 = *(void *)a2;
    uint64_t v6 = *((void *)a2 + 1);
    uint64_t v7 = *((void *)a2 + 2);
    sub_24EB7CDBC(*(void *)a2, v6, v7, v4);
    uint64_t v8 = *(void *)a1;
    uint64_t v9 = *(void *)(a1 + 8);
    uint64_t v10 = *(void *)(a1 + 16);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7;
    unsigned __int8 v11 = *(unsigned char *)(a1 + 24);
    *(unsigned char *)(a1 + 24) = v4;
    sub_24EB7EA4C(v8, v9, v10, v11);
  }
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for BrowseTextAttributes(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 == 255) {
    goto LABEL_5;
  }
  int v5 = *(unsigned __int8 *)(a2 + 24);
  if (v5 == 255)
  {
    sub_24EB834A4(a1);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    goto LABEL_6;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v5;
  sub_24EB7EA4C(v7, v8, v9, v4);
LABEL_6:
  uint64_t v10 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for BrowseTextAttributes(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BrowseTextAttributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(void *)(result + 40) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseTextAttributes()
{
  return &type metadata for BrowseTextAttributes;
}

unsigned char *storeEnumTagSinglePayload for BrowseTextAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBEE5ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseTextAttributes.CodingKeys()
{
  return &type metadata for BrowseTextAttributes.CodingKeys;
}

unint64_t sub_24EBEE5E8()
{
  unint64_t result = qword_269947C90;
  if (!qword_269947C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947C90);
  }
  return result;
}

unint64_t sub_24EBEE640()
{
  unint64_t result = qword_269947C98;
  if (!qword_269947C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947C98);
  }
  return result;
}

unint64_t sub_24EBEE698()
{
  unint64_t result = qword_269947CA0;
  if (!qword_269947CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947CA0);
  }
  return result;
}

uint64_t sub_24EBEE6EC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x63736544746E6F66 && a2 == 0xEE00726F74706972;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x756F726765726F66 && a2 == 0xEF726F6C6F43646ELL || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x67696C4174786574 && a2 == 0xED0000746E656D6ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void *static BrowseTextAlignment.allCases.getter()
{
  return &unk_270083C08;
}

uint64_t BrowseTextAlignment.rawValue.getter(char a1)
{
  return *(void *)&aCenter_3[8 * a1];
}

uint64_t sub_24EBEE8AC(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = BrowseTextAlignment.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == BrowseTextAlignment.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_24EC22F70();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24EBEE938()
{
  char v1 = *v0;
  sub_24EC22FF0();
  BrowseTextAlignment.rawValue.getter(v1);
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  return sub_24EC23030();
}

uint64_t sub_24EBEE99C()
{
  BrowseTextAlignment.rawValue.getter(*v0);
  sub_24EC22AB0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EBEE9F0()
{
  char v1 = *v0;
  sub_24EC22FF0();
  BrowseTextAlignment.rawValue.getter(v1);
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  return sub_24EC23030();
}

uint64_t sub_24EBEEA50@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s15FitnessBrowsing19BrowseTextAlignmentO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_24EBEEA80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = BrowseTextAlignment.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_24EBEEAAC(void *a1@<X8>)
{
  *a1 = &unk_270083C30;
}

uint64_t sub_24EBEEABC()
{
  return sub_24EC22B00();
}

uint64_t sub_24EBEEB1C()
{
  return sub_24EC22AF0();
}

uint64_t _s15FitnessBrowsing19BrowseTextAlignmentO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_24EC22DF0();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

unint64_t sub_24EBEEBBC()
{
  unint64_t result = qword_269947CA8;
  if (!qword_269947CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947CA8);
  }
  return result;
}

unint64_t sub_24EBEEC14()
{
  unint64_t result = qword_269947CB0;
  if (!qword_269947CB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269947CB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947CB0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BrowseTextAlignment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBEED3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseTextAlignment()
{
  return &type metadata for BrowseTextAlignment;
}

unint64_t sub_24EBEED74()
{
  unint64_t result = qword_269947CC0;
  if (!qword_269947CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947CC0);
  }
  return result;
}

uint64_t BrowseDetailDescriptor.content.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24EBEFA10(v1, a1, (uint64_t (*)(void))type metadata accessor for BrowseDetailContent);
}

uint64_t BrowseDetailDescriptor.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for BrowseDetailDescriptor() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BrowseDetailDescriptor.preferredInsetBehavior.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for BrowseDetailDescriptor() + 24));
}

uint64_t BrowseDetailDescriptor.init(content:identifier:preferredInsetBehavior:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  sub_24EBEF958(a1, a5);
  uint64_t result = type metadata accessor for BrowseDetailDescriptor();
  uint64_t v10 = (void *)(a5 + *(int *)(result + 20));
  *uint64_t v10 = a2;
  v10[1] = a3;
  *(unsigned char *)(a5 + *(int *)(result + 24)) = a4;
  return result;
}

uint64_t sub_24EBEEEBC(char a1)
{
  if (!a1) {
    return 0x746E65746E6F63;
  }
  if (a1 == 1) {
    return 0x696669746E656469;
  }
  return 0xD000000000000016;
}

uint64_t sub_24EBEEF1C()
{
  return sub_24EBEEEBC(*v0);
}

uint64_t sub_24EBEEF24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBF160C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBEEF4C(uint64_t a1)
{
  unint64_t v2 = sub_24EBEF9BC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBEEF88(uint64_t a1)
{
  unint64_t v2 = sub_24EBEF9BC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseDetailDescriptor.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947CC8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBEF9BC();
  sub_24EC23050();
  v11[15] = 0;
  type metadata accessor for BrowseDetailContent();
  sub_24EBEFB20(&qword_269946D18, (void (*)(uint64_t))type metadata accessor for BrowseDetailContent);
  sub_24EC22F40();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for BrowseDetailDescriptor();
    v11[14] = 1;
    sub_24EC22F00();
    v11[13] = *(unsigned char *)(v3 + *(int *)(v9 + 24));
    v11[12] = 2;
    sub_24EBD0CC0();
    sub_24EC22EF0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t BrowseDetailDescriptor.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v4 = type metadata accessor for BrowseDetailContent();
  MEMORY[0x270FA5388](v4);
  uint64_t v22 = (uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947CD8);
  uint64_t v20 = *(void *)(v6 - 8);
  uint64_t v21 = v6;
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for BrowseDetailDescriptor();
  MEMORY[0x270FA5388](v9);
  unsigned __int8 v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBEF9BC();
  sub_24EC23040();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v12 = v20;
  uint64_t v13 = (uint64_t)v11;
  char v26 = 0;
  sub_24EBEFB20(&qword_269946D40, (void (*)(uint64_t))type metadata accessor for BrowseDetailContent);
  uint64_t v14 = v21;
  sub_24EC22E90();
  sub_24EBEF958(v22, v13);
  char v25 = 1;
  uint64_t v15 = sub_24EC22E50();
  long long v16 = (uint64_t *)(v13 + *(int *)(v9 + 20));
  uint64_t *v16 = v15;
  v16[1] = v17;
  char v23 = 2;
  sub_24EBD0DBC();
  sub_24EC22E40();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v14);
  *(unsigned char *)(v13 + *(int *)(v9 + 24)) = v24;
  sub_24EBEFA10(v13, v19, (uint64_t (*)(void))type metadata accessor for BrowseDetailDescriptor);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_24EBEFA78(v13, (uint64_t (*)(void))type metadata accessor for BrowseDetailDescriptor);
}

uint64_t sub_24EBEF548@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BrowseDetailDescriptor.init(from:)(a1, a2);
}

uint64_t sub_24EBEF560(void *a1)
{
  return BrowseDetailDescriptor.encode(to:)(a1);
}

uint64_t BrowseDetailDescriptor.hash(into:)()
{
  BrowseDetailContent.hash(into:)();
  uint64_t v1 = type metadata accessor for BrowseDetailDescriptor();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v0 + *(int *)(v1 + 24)) == 2) {
    return sub_24EC23010();
  }
  sub_24EC23010();
  return sub_24EC23000();
}

uint64_t BrowseDetailDescriptor.hashValue.getter()
{
  sub_24EC22FF0();
  BrowseDetailContent.hash(into:)();
  uint64_t v1 = type metadata accessor for BrowseDetailDescriptor();
  sub_24EC22AB0();
  if (*(unsigned char *)(v0 + *(int *)(v1 + 24)) == 2)
  {
    sub_24EC23010();
  }
  else
  {
    sub_24EC23010();
    sub_24EC23000();
  }
  return sub_24EC23030();
}

uint64_t sub_24EBEF6B8(uint64_t a1)
{
  sub_24EC22FF0();
  BrowseDetailContent.hash(into:)();
  sub_24EC22AB0();
  if (*(unsigned char *)(v1 + *(int *)(a1 + 24)) == 2)
  {
    sub_24EC23010();
  }
  else
  {
    sub_24EC23010();
    sub_24EC23000();
  }
  return sub_24EC23030();
}

uint64_t sub_24EBEF74C(uint64_t a1, uint64_t a2)
{
  BrowseDetailContent.hash(into:)();
  sub_24EC22AB0();
  if (*(unsigned char *)(v2 + *(int *)(a2 + 24)) == 2) {
    return sub_24EC23010();
  }
  sub_24EC23010();
  return sub_24EC23000();
}

uint64_t sub_24EBEF7C8(uint64_t a1, uint64_t a2)
{
  sub_24EC22FF0();
  BrowseDetailContent.hash(into:)();
  sub_24EC22AB0();
  if (*(unsigned char *)(v2 + *(int *)(a2 + 24)) == 2)
  {
    sub_24EC23010();
  }
  else
  {
    sub_24EC23010();
    sub_24EC23000();
  }
  return sub_24EC23030();
}

uint64_t _s15FitnessBrowsing22BrowseDetailDescriptorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((static BrowseDetailContent.== infix(_:_:)(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for BrowseDetailDescriptor();
  uint64_t v5 = *(int *)(v4 + 20);
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  char v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (char v10 = sub_24EC22F70(), result = 0, (v10 & 1) != 0))
  {
    uint64_t v12 = *(int *)(v4 + 24);
    int v13 = *(unsigned __int8 *)(a1 + v12);
    int v14 = *(unsigned __int8 *)(a2 + v12);
    if (v13 == 2)
    {
      if (v14 != 2) {
        return 0;
      }
    }
    else
    {
      int v15 = (v14 ^ v13) & 1;
      if (v14 == 2 || v15 != 0) {
        return 0;
      }
    }
    return 1;
  }
  return result;
}

uint64_t type metadata accessor for BrowseDetailDescriptor()
{
  uint64_t result = qword_269947CE8;
  if (!qword_269947CE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24EBEF958(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseDetailContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24EBEF9BC()
{
  unint64_t result = qword_269947CD0;
  if (!qword_269947CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947CD0);
  }
  return result;
}

uint64_t sub_24EBEFA10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EBEFA78(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24EBEFAD8()
{
  return sub_24EBEFB20(&qword_269947CE0, (void (*)(uint64_t))type metadata accessor for BrowseDetailDescriptor);
}

uint64_t sub_24EBEFB20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for BrowseDetailDescriptor(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    type metadata accessor for BrowseDetailContent();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v13 = sub_24EC21D10();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      uint64_t v14 = type metadata accessor for BrowseDetailVideoLinkItem();
      uint64_t v15 = *(int *)(v14 + 20);
      long long v16 = (uint64_t *)((char *)a1 + v15);
      uint64_t v17 = (uint64_t *)((char *)a2 + v15);
      uint64_t v18 = v17[1];
      void *v16 = *v17;
      v16[1] = v18;
      uint64_t v19 = *(int *)(v14 + 24);
      uint64_t v20 = (uint64_t *)((char *)a1 + v19);
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = *(uint64_t *)((char *)a2 + v19 + 8);
      *uint64_t v20 = *(uint64_t *)((char *)a2 + v19);
      v20[1] = v22;
      uint64_t v23 = *(uint64_t *)((char *)a2 + v19 + 24);
      v20[2] = *(uint64_t *)((char *)a2 + v19 + 16);
      v20[3] = v23;
      uint64_t v24 = *(int *)(type metadata accessor for VideoAsset() + 24);
      uint64_t v44 = &v21[v24];
      uint64_t v46 = (char *)v20 + v24;
      uint64_t v25 = sub_24EC21D30();
      char v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26(v46, v44, v25);
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v8 = sub_24EC21D10();
        uint64_t v9 = *(void *)(v8 - 8);
        char v10 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48);
        uint64_t v45 = v9;
        if (v10(a2, 1, v8))
        {
          uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
        }
        uint64_t v30 = type metadata accessor for BrowseDetailTextItem();
        uint64_t v31 = *(int *)(v30 + 20);
        uint64_t v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        if (v10((uint64_t *)((char *)a2 + v31), 1, v8))
        {
          uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
          memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v32, v33, v8);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v32, 0, 1, v8);
        }
        uint64_t v29 = *(int *)(v30 + 24);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v27 = (uint64_t *)&unk_2699466D0;
        }
        else {
          uint64_t v27 = (uint64_t *)&unk_2699466C8;
        }
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(v27);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
        swift_storeEnumTagMultiPayload();
        uint64_t v29 = *(int *)(type metadata accessor for BrowseDetailArtworkItem() + 20);
      }
      int v35 = (uint64_t *)((char *)a1 + v29);
      char v36 = (uint64_t *)((char *)a2 + v29);
      uint64_t v37 = v36[1];
      *int v35 = *v36;
      v35[1] = v37;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = *(int *)(a3 + 20);
    uint64_t v39 = *(int *)(a3 + 24);
    char v40 = (uint64_t *)((char *)a1 + v38);
    char v41 = (uint64_t *)((char *)a2 + v38);
    uint64_t v42 = v41[1];
    *char v40 = *v41;
    v40[1] = v42;
    *((unsigned char *)a1 + v39) = *((unsigned char *)a2 + v39);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for BrowseDetailDescriptor(uint64_t a1)
{
  type metadata accessor for BrowseDetailContent();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v5 = sub_24EC21D10();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
    uint64_t v6 = type metadata accessor for BrowseDetailVideoLinkItem();
    swift_bridgeObjectRelease();
    uint64_t v7 = a1 + *(int *)(v6 + 24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + *(int *)(type metadata accessor for VideoAsset() + 24);
    uint64_t v9 = sub_24EC21D30();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = sub_24EC21D10();
      uint64_t v11 = *(void *)(v10 - 8);
      uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
      if (!v12(a1, 1, v10)) {
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
      }
      uint64_t v13 = a1 + *(int *)(type metadata accessor for BrowseDetailTextItem() + 20);
      if (!v12(v13, 1, v10)) {
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
      }
    }
    else
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_14;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v3 = (uint64_t *)&unk_2699466D0;
      }
      else {
        uint64_t v3 = (uint64_t *)&unk_2699466C8;
      }
      uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(v3);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      type metadata accessor for BrowseDetailArtworkItem();
    }
    swift_bridgeObjectRelease();
  }
LABEL_14:
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for BrowseDetailDescriptor(char *a1, char *a2, uint64_t a3)
{
  type metadata accessor for BrowseDetailContent();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v11 = sub_24EC21D10();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
    uint64_t v12 = type metadata accessor for BrowseDetailVideoLinkItem();
    uint64_t v13 = *(int *)(v12 + 20);
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = *(int *)(v12 + 24);
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = *(void *)&a2[v17 + 8];
    *(void *)uint64_t v18 = *(void *)&a2[v17];
    *((void *)v18 + 1) = v20;
    uint64_t v21 = *(void *)&a2[v17 + 24];
    *((void *)v18 + 2) = *(void *)&a2[v17 + 16];
    *((void *)v18 + 3) = v21;
    uint64_t v22 = *(int *)(type metadata accessor for VideoAsset() + 24);
    uint64_t v43 = &v19[v22];
    uint64_t v45 = &v18[v22];
    uint64_t v23 = sub_24EC21D30();
    uint64_t v24 = a3;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25(v45, v43, v23);
    a3 = v24;
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_24EC21D10();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
      uint64_t v44 = v8;
      if (v9(a2, 1, v7))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v29 = type metadata accessor for BrowseDetailTextItem();
      uint64_t v30 = *(int *)(v29 + 20);
      uint64_t v31 = &a1[v30];
      uint64_t v32 = &a2[v30];
      if (v9(&a2[v30], 1, v7))
      {
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v31, v32, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v31, 0, 1, v7);
      }
      uint64_t v28 = *(int *)(v29 + 24);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        char v26 = (uint64_t *)&unk_2699466D0;
      }
      else {
        char v26 = (uint64_t *)&unk_2699466C8;
      }
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(v26);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
      swift_storeEnumTagMultiPayload();
      uint64_t v28 = *(int *)(type metadata accessor for BrowseDetailArtworkItem() + 20);
    }
    uint64_t v34 = &a1[v28];
    int v35 = &a2[v28];
    uint64_t v36 = *((void *)v35 + 1);
    *(void *)uint64_t v34 = *(void *)v35;
    *((void *)v34 + 1) = v36;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = *(int *)(a3 + 20);
  uint64_t v38 = *(int *)(a3 + 24);
  uint64_t v39 = &a1[v37];
  char v40 = &a2[v37];
  uint64_t v41 = *((void *)v40 + 1);
  *(void *)uint64_t v39 = *(void *)v40;
  *((void *)v39 + 1) = v41;
  a1[v38] = a2[v38];
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for BrowseDetailDescriptor(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EBEFA78((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for BrowseDetailContent);
    type metadata accessor for BrowseDetailContent();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v11 = sub_24EC21D10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = type metadata accessor for BrowseDetailVideoLinkItem();
      uint64_t v13 = *(int *)(v12 + 20);
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      *(void *)uint64_t v14 = *(void *)v15;
      *((void *)v14 + 1) = *((void *)v15 + 1);
      uint64_t v16 = *(int *)(v12 + 24);
      uint64_t v17 = &a1[v16];
      uint64_t v18 = &a2[v16];
      *(void *)uint64_t v17 = *(void *)&a2[v16];
      *((void *)v17 + 1) = *(void *)&a2[v16 + 8];
      *((void *)v17 + 2) = *(void *)&a2[v16 + 16];
      *((void *)v17 + 3) = *(void *)&a2[v16 + 24];
      uint64_t v19 = *(int *)(type metadata accessor for VideoAsset() + 24);
      uint64_t v36 = &v18[v19];
      uint64_t v38 = &v17[v19];
      uint64_t v20 = sub_24EC21D30();
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21(v38, v36, v20);
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v7 = sub_24EC21D10();
        uint64_t v8 = *(void *)(v7 - 8);
        uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
        uint64_t v37 = v8;
        if (v9(a2, 1, v7))
        {
          uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
          memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        }
        uint64_t v25 = type metadata accessor for BrowseDetailTextItem();
        uint64_t v26 = *(int *)(v25 + 20);
        uint64_t v27 = &a1[v26];
        uint64_t v28 = &a2[v26];
        if (v9(&a2[v26], 1, v7))
        {
          uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
          memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v27, v28, v7);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v27, 0, 1, v7);
        }
        uint64_t v24 = *(int *)(v25 + 24);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v22 = (uint64_t *)&unk_2699466D0;
        }
        else {
          uint64_t v22 = (uint64_t *)&unk_2699466C8;
        }
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(v22);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        swift_storeEnumTagMultiPayload();
        uint64_t v24 = *(int *)(type metadata accessor for BrowseDetailArtworkItem() + 20);
      }
      uint64_t v30 = &a1[v24];
      uint64_t v31 = &a2[v24];
      *(void *)uint64_t v30 = *(void *)v31;
      *((void *)v30 + 1) = *((void *)v31 + 1);
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v32 = *(int *)(a3 + 20);
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  *(void *)uint64_t v33 = *(void *)v34;
  *((void *)v33 + 1) = *((void *)v34 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *initializeWithTake for BrowseDetailDescriptor(char *a1, char *a2, uint64_t a3)
{
  type metadata accessor for BrowseDetailContent();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v11 = sub_24EC21D10();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
    uint64_t v12 = type metadata accessor for BrowseDetailVideoLinkItem();
    *(_OWORD *)&a1[*(int *)(v12 + 20)] = *(_OWORD *)&a2[*(int *)(v12 + 20)];
    uint64_t v13 = *(int *)(v12 + 24);
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    long long v16 = *(_OWORD *)&a2[v13 + 16];
    *(_OWORD *)uint64_t v14 = *(_OWORD *)&a2[v13];
    *((_OWORD *)v14 + 1) = v16;
    uint64_t v17 = *(int *)(type metadata accessor for VideoAsset() + 24);
    uint64_t v18 = &v14[v17];
    uint64_t v19 = &v15[v17];
    uint64_t v20 = sub_24EC21D30();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = sub_24EC21D10();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    uint64_t v31 = v8;
    uint64_t v32 = a3;
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v24 = type metadata accessor for BrowseDetailTextItem();
    uint64_t v25 = *(int *)(v24 + 20);
    uint64_t v26 = &a1[v25];
    uint64_t v27 = &a2[v25];
    if (v9(&a2[v25], 1, v7))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v26, v27, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v26, 0, 1, v7);
    }
    *(_OWORD *)&a1[*(int *)(v24 + 24)] = *(_OWORD *)&a2[*(int *)(v24 + 24)];
    a3 = v32;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v21 = (uint64_t *)&unk_2699466D0;
    }
    else {
      uint64_t v21 = (uint64_t *)&unk_2699466C8;
    }
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(v21);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(a1, a2, v22);
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = type metadata accessor for BrowseDetailArtworkItem();
    *(_OWORD *)&a1[*(int *)(v23 + 20)] = *(_OWORD *)&a2[*(int *)(v23 + 20)];
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  a1[v29] = a2[v29];
  return a1;
}

char *assignWithTake for BrowseDetailDescriptor(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EBEFA78((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for BrowseDetailContent);
    type metadata accessor for BrowseDetailContent();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = sub_24EC21D10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      uint64_t v11 = type metadata accessor for BrowseDetailVideoLinkItem();
      *(_OWORD *)&a1[*(int *)(v11 + 20)] = *(_OWORD *)&a2[*(int *)(v11 + 20)];
      uint64_t v12 = *(int *)(v11 + 24);
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      long long v15 = *(_OWORD *)&a2[v12 + 16];
      *(_OWORD *)uint64_t v13 = *(_OWORD *)&a2[v12];
      *((_OWORD *)v13 + 1) = v15;
      uint64_t v16 = *(int *)(type metadata accessor for VideoAsset() + 24);
      uint64_t v17 = &v13[v16];
      uint64_t v18 = &v14[v16];
      uint64_t v19 = sub_24EC21D30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v7 = sub_24EC21D10();
        uint64_t v8 = *(void *)(v7 - 8);
        int v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
        uint64_t v34 = v8;
        if (v35(a2, 1, v7))
        {
          uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        }
        uint64_t v23 = type metadata accessor for BrowseDetailTextItem();
        uint64_t v24 = *(int *)(v23 + 20);
        uint64_t v25 = &a1[v24];
        uint64_t v26 = &a2[v24];
        if (v35(&a2[v24], 1, v7))
        {
          uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699465B8);
          memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v25, v26, v7);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v25, 0, 1, v7);
        }
        uint64_t v22 = *(int *)(v23 + 24);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2699465C0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v20 = (uint64_t *)&unk_2699466D0;
        }
        else {
          uint64_t v20 = (uint64_t *)&unk_2699466C8;
        }
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(v20);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
        swift_storeEnumTagMultiPayload();
        uint64_t v22 = *(int *)(type metadata accessor for BrowseDetailArtworkItem() + 20);
      }
      *(_OWORD *)&a1[v22] = *(_OWORD *)&a2[v22];
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v28 = *(int *)(a3 + 20);
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  uint64_t v32 = *(void *)v30;
  uint64_t v31 = *((void *)v30 + 1);
  *(void *)uint64_t v29 = v32;
  *((void *)v29 + 1) = v31;
  swift_bridgeObjectRelease();
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t getEnumTagSinglePayload for BrowseDetailDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EBF11C8);
}

uint64_t sub_24EBF11C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for BrowseDetailContent();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for BrowseDetailDescriptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EBF12A0);
}

uint64_t sub_24EBF12A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for BrowseDetailContent();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_24EBF1360()
{
  uint64_t result = type metadata accessor for BrowseDetailContent();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BrowseDetailDescriptor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBF14CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseDetailDescriptor.CodingKeys()
{
  return &type metadata for BrowseDetailDescriptor.CodingKeys;
}

unint64_t sub_24EBF1508()
{
  unint64_t result = qword_269947CF8;
  if (!qword_269947CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947CF8);
  }
  return result;
}

unint64_t sub_24EBF1560()
{
  unint64_t result = qword_269947D00;
  if (!qword_269947D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947D00);
  }
  return result;
}

unint64_t sub_24EBF15B8()
{
  unint64_t result = qword_269947D08;
  if (!qword_269947D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947D08);
  }
  return result;
}

uint64_t sub_24EBF160C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024EC31110)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t BrowseGalleryDestination.transformed.getter(char a1)
{
  return a1 & 1;
}

BOOL static BrowseItemMediaType.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_24EBF1770(char a1)
{
  return *(void *)&aGuidedruguided[8 * a1];
}

uint64_t sub_24EBF1790()
{
  return sub_24EBF1770(*v0);
}

uint64_t sub_24EBF1798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBF20D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBF17C0(uint64_t a1)
{
  unint64_t v2 = sub_24EBF1E60();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBF17FC(uint64_t a1)
{
  unint64_t v2 = sub_24EBF1E60();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBF1838(uint64_t a1)
{
  unint64_t v2 = sub_24EBF1FB0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBF1874(uint64_t a1)
{
  unint64_t v2 = sub_24EBF1FB0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBF18B0(uint64_t a1)
{
  unint64_t v2 = sub_24EBF1F5C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBF18EC(uint64_t a1)
{
  unint64_t v2 = sub_24EBF1F5C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBF1928(uint64_t a1)
{
  unint64_t v2 = sub_24EBF1F08();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBF1964(uint64_t a1)
{
  unint64_t v2 = sub_24EBF1F08();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBF19A0(uint64_t a1)
{
  unint64_t v2 = sub_24EBF1EB4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBF19DC(uint64_t a1)
{
  unint64_t v2 = sub_24EBF1EB4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseItemMediaType.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v31 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947D10);
  uint64_t v29 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v28 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947D18);
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v25 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947D20);
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947D28);
  uint64_t v22 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947D30);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBF1E60();
  sub_24EC23050();
  switch((char)v31)
  {
    case 1:
      char v33 = 1;
      sub_24EBF1F5C();
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
      break;
    case 2:
      char v34 = 2;
      sub_24EBF1F08();
      uint64_t v17 = v25;
      sub_24EC22EC0();
      uint64_t v19 = v26;
      uint64_t v18 = v27;
      goto LABEL_5;
    case 3:
      char v35 = 3;
      sub_24EBF1EB4();
      uint64_t v17 = v28;
      sub_24EC22EC0();
      uint64_t v19 = v29;
      uint64_t v18 = v30;
LABEL_5:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_24EBF1FB0();
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v10);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

unint64_t sub_24EBF1E60()
{
  unint64_t result = qword_269947D38;
  if (!qword_269947D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947D38);
  }
  return result;
}

unint64_t sub_24EBF1EB4()
{
  unint64_t result = qword_269947D40;
  if (!qword_269947D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947D40);
  }
  return result;
}

unint64_t sub_24EBF1F08()
{
  unint64_t result = qword_269947D48;
  if (!qword_269947D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947D48);
  }
  return result;
}

unint64_t sub_24EBF1F5C()
{
  unint64_t result = qword_269947D50;
  if (!qword_269947D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947D50);
  }
  return result;
}

unint64_t sub_24EBF1FB0()
{
  unint64_t result = qword_269947D58;
  if (!qword_269947D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947D58);
  }
  return result;
}

char *BrowseItemMediaType.init(from:)(void *a1)
{
  return sub_24EBF2284(a1);
}

char *sub_24EBF201C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_24EBF2284(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_24EBF2048(void *a1)
{
  return BrowseItemMediaType.encode(to:)(a1, *v1);
}

uint64_t BrowseItemMediaType.hash(into:)()
{
  return sub_24EC23000();
}

uint64_t BrowseItemMediaType.hashValue.getter()
{
  return sub_24EC23030();
}

uint64_t sub_24EBF20D4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7552646564697567 && a2 == 0xE90000000000006ELL;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6157646564697567 && a2 == 0xEA00000000006B6CLL || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697461746964656DLL && a2 == 0xEA00000000006E6FLL || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F65646976 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

char *sub_24EBF2284(void *a1)
{
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947DC0);
  uint64_t v45 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v44 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947DC8);
  uint64_t v42 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v43 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947DD0);
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947DD8);
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947DE0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_24EBF1E60();
  uint64_t v15 = v47;
  sub_24EC23040();
  if (v15) {
    goto LABEL_7;
  }
  uint64_t v35 = v7;
  uint64_t v36 = v9;
  uint64_t v16 = v43;
  uint64_t v17 = v44;
  uint64_t v47 = 0;
  uint64_t v18 = v45;
  uint64_t v19 = v11;
  uint64_t v20 = v13;
  uint64_t v21 = sub_24EC22EA0();
  uint64_t v22 = (char *)v21;
  if (*(void *)(v21 + 16) != 1)
  {
    uint64_t v25 = sub_24EC22D50();
    swift_allocError();
    uint64_t v13 = v22;
    uint64_t v26 = v10;
    uint64_t v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269946108);
    *uint64_t v28 = &type metadata for BrowseItemMediaType;
    sub_24EC22E10();
    sub_24EC22D40();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v28, *MEMORY[0x263F8DCB0], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v26);
LABEL_7:
    uint64_t v29 = (uint64_t)v46;
    goto LABEL_8;
  }
  uint64_t v13 = (char *)*(unsigned __int8 *)(v21 + 32);
  switch(*(unsigned char *)(v21 + 32))
  {
    case 1:
      char v49 = 1;
      sub_24EBF1F5C();
      uint64_t v31 = v47;
      sub_24EC22E00();
      if (v31) {
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v39);
      goto LABEL_14;
    case 2:
      char v50 = 2;
      sub_24EBF1F08();
      uint64_t v32 = v47;
      sub_24EC22E00();
      if (v32) {
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v40);
      goto LABEL_14;
    case 3:
      char v51 = 3;
      sub_24EBF1EB4();
      uint64_t v33 = v47;
      sub_24EC22E00();
      if (v33) {
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v18 + 8))(v17, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v10);
      uint64_t v29 = (uint64_t)v46;
      break;
    default:
      char v48 = 0;
      sub_24EBF1FB0();
      uint64_t v23 = v36;
      uint64_t v24 = v47;
      sub_24EC22E00();
      if (v24)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v10);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v35);
LABEL_14:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v10);
      uint64_t v29 = (uint64_t)v46;
      break;
  }
LABEL_8:
  __swift_destroy_boxed_opaque_existential_1(v29);
  return v13;
}

unint64_t sub_24EBF28C0()
{
  unint64_t result = qword_269947D60;
  if (!qword_269947D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947D60);
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseItemMediaType()
{
  return &type metadata for BrowseItemMediaType;
}

unsigned char *_s15FitnessBrowsing19BrowseItemMediaTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBF29F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseItemMediaType.CodingKeys()
{
  return &type metadata for BrowseItemMediaType.CodingKeys;
}

ValueMetadata *type metadata accessor for BrowseItemMediaType.GuidedRunCodingKeys()
{
  return &type metadata for BrowseItemMediaType.GuidedRunCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseItemMediaType.GuidedWalkCodingKeys()
{
  return &type metadata for BrowseItemMediaType.GuidedWalkCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseItemMediaType.MeditationCodingKeys()
{
  return &type metadata for BrowseItemMediaType.MeditationCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseItemMediaType.VideoCodingKeys()
{
  return &type metadata for BrowseItemMediaType.VideoCodingKeys;
}

unint64_t sub_24EBF2A70()
{
  unint64_t result = qword_269947D68;
  if (!qword_269947D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947D68);
  }
  return result;
}

unint64_t sub_24EBF2AC8()
{
  unint64_t result = qword_269947D70;
  if (!qword_269947D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947D70);
  }
  return result;
}

unint64_t sub_24EBF2B20()
{
  unint64_t result = qword_269947D78;
  if (!qword_269947D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947D78);
  }
  return result;
}

unint64_t sub_24EBF2B78()
{
  unint64_t result = qword_269947D80;
  if (!qword_269947D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947D80);
  }
  return result;
}

unint64_t sub_24EBF2BD0()
{
  unint64_t result = qword_269947D88;
  if (!qword_269947D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947D88);
  }
  return result;
}

unint64_t sub_24EBF2C28()
{
  unint64_t result = qword_269947D90;
  if (!qword_269947D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947D90);
  }
  return result;
}

unint64_t sub_24EBF2C80()
{
  unint64_t result = qword_269947D98;
  if (!qword_269947D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947D98);
  }
  return result;
}

unint64_t sub_24EBF2CD8()
{
  unint64_t result = qword_269947DA0;
  if (!qword_269947DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947DA0);
  }
  return result;
}

unint64_t sub_24EBF2D30()
{
  unint64_t result = qword_269947DA8;
  if (!qword_269947DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947DA8);
  }
  return result;
}

unint64_t sub_24EBF2D88()
{
  unint64_t result = qword_269947DB0;
  if (!qword_269947DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947DB0);
  }
  return result;
}

unint64_t sub_24EBF2DE0()
{
  unint64_t result = qword_269947DB8;
  if (!qword_269947DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947DB8);
  }
  return result;
}

BOOL static BrowsePlatform.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_24EBF2E44(char a1)
{
  return *(void *)&aPhone_0[8 * a1];
}

uint64_t sub_24EBF2E64()
{
  return sub_24EBF2E44(*v0);
}

uint64_t sub_24EBF2E6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBF37A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBF2E94(uint64_t a1)
{
  unint64_t v2 = sub_24EBF3534();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBF2ED0(uint64_t a1)
{
  unint64_t v2 = sub_24EBF3534();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBF2F0C(uint64_t a1)
{
  unint64_t v2 = sub_24EBF3684();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBF2F48(uint64_t a1)
{
  unint64_t v2 = sub_24EBF3684();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBF2F84(uint64_t a1)
{
  unint64_t v2 = sub_24EBF3630();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBF2FC0(uint64_t a1)
{
  unint64_t v2 = sub_24EBF3630();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBF2FFC(uint64_t a1)
{
  unint64_t v2 = sub_24EBF3588();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBF3038(uint64_t a1)
{
  unint64_t v2 = sub_24EBF3588();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBF3074(uint64_t a1)
{
  unint64_t v2 = sub_24EBF35DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBF30B0(uint64_t a1)
{
  unint64_t v2 = sub_24EBF35DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowsePlatform.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v31 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947DE8);
  uint64_t v29 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v28 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947DF0);
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v25 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947DF8);
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947E00);
  uint64_t v22 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947E08);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBF3534();
  sub_24EC23050();
  switch((char)v31)
  {
    case 1:
      char v33 = 1;
      sub_24EBF3630();
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
      break;
    case 2:
      char v34 = 2;
      sub_24EBF35DC();
      uint64_t v17 = v25;
      sub_24EC22EC0();
      uint64_t v19 = v26;
      uint64_t v18 = v27;
      goto LABEL_5;
    case 3:
      char v35 = 3;
      sub_24EBF3588();
      uint64_t v17 = v28;
      sub_24EC22EC0();
      uint64_t v19 = v29;
      uint64_t v18 = v30;
LABEL_5:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_24EBF3684();
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v10);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

unint64_t sub_24EBF3534()
{
  unint64_t result = qword_269947E10;
  if (!qword_269947E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947E10);
  }
  return result;
}

unint64_t sub_24EBF3588()
{
  unint64_t result = qword_269947E18;
  if (!qword_269947E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947E18);
  }
  return result;
}

unint64_t sub_24EBF35DC()
{
  unint64_t result = qword_269947E20;
  if (!qword_269947E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947E20);
  }
  return result;
}

unint64_t sub_24EBF3630()
{
  unint64_t result = qword_269947E28;
  if (!qword_269947E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947E28);
  }
  return result;
}

unint64_t sub_24EBF3684()
{
  unint64_t result = qword_269947E30;
  if (!qword_269947E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947E30);
  }
  return result;
}

char *BrowsePlatform.init(from:)(void *a1)
{
  return sub_24EBF391C(a1);
}

char *sub_24EBF36F0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_24EBF391C(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_24EBF371C(void *a1)
{
  return BrowsePlatform.encode(to:)(a1, *v1);
}

uint64_t BrowsePlatform.hash(into:)()
{
  return sub_24EC23000();
}

uint64_t BrowsePlatform.hashValue.getter()
{
  return sub_24EC23030();
}

uint64_t sub_24EBF37A8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x656E6F6870 && a2 == 0xE500000000000000;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74656C626174 && a2 == 0xE600000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6863746177 && a2 == 0xE500000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 30324 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

char *sub_24EBF391C(void *a1)
{
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947E98);
  uint64_t v45 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v44 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947EA0);
  uint64_t v42 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v43 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947EA8);
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947EB0);
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947EB8);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_24EBF3534();
  uint64_t v15 = v47;
  sub_24EC23040();
  if (v15) {
    goto LABEL_7;
  }
  uint64_t v35 = v7;
  uint64_t v36 = v9;
  uint64_t v16 = v43;
  uint64_t v17 = v44;
  uint64_t v47 = 0;
  uint64_t v18 = v45;
  uint64_t v19 = v11;
  uint64_t v20 = v13;
  uint64_t v21 = sub_24EC22EA0();
  uint64_t v22 = (char *)v21;
  if (*(void *)(v21 + 16) != 1)
  {
    uint64_t v25 = sub_24EC22D50();
    swift_allocError();
    uint64_t v13 = v22;
    uint64_t v26 = v10;
    uint64_t v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269946108);
    *uint64_t v28 = &type metadata for BrowsePlatform;
    sub_24EC22E10();
    sub_24EC22D40();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v28, *MEMORY[0x263F8DCB0], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v26);
LABEL_7:
    uint64_t v29 = (uint64_t)v46;
    goto LABEL_8;
  }
  uint64_t v13 = (char *)*(unsigned __int8 *)(v21 + 32);
  switch(*(unsigned char *)(v21 + 32))
  {
    case 1:
      char v49 = 1;
      sub_24EBF3630();
      uint64_t v31 = v47;
      sub_24EC22E00();
      if (v31) {
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v39);
      goto LABEL_14;
    case 2:
      char v50 = 2;
      sub_24EBF35DC();
      uint64_t v32 = v47;
      sub_24EC22E00();
      if (v32) {
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v40);
      goto LABEL_14;
    case 3:
      char v51 = 3;
      sub_24EBF3588();
      uint64_t v33 = v47;
      sub_24EC22E00();
      if (v33) {
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v18 + 8))(v17, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v10);
      uint64_t v29 = (uint64_t)v46;
      break;
    default:
      char v48 = 0;
      sub_24EBF3684();
      uint64_t v23 = v36;
      uint64_t v24 = v47;
      sub_24EC22E00();
      if (v24)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v10);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v35);
LABEL_14:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v10);
      uint64_t v29 = (uint64_t)v46;
      break;
  }
LABEL_8:
  __swift_destroy_boxed_opaque_existential_1(v29);
  return v13;
}

unint64_t sub_24EBF3F58()
{
  unint64_t result = qword_269947E38;
  if (!qword_269947E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947E38);
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowsePlatform()
{
  return &type metadata for BrowsePlatform;
}

unsigned char *_s15FitnessBrowsing14BrowsePlatformOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBF408CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowsePlatform.CodingKeys()
{
  return &type metadata for BrowsePlatform.CodingKeys;
}

ValueMetadata *type metadata accessor for BrowsePlatform.PhoneCodingKeys()
{
  return &type metadata for BrowsePlatform.PhoneCodingKeys;
}

ValueMetadata *type metadata accessor for BrowsePlatform.TabletCodingKeys()
{
  return &type metadata for BrowsePlatform.TabletCodingKeys;
}

ValueMetadata *type metadata accessor for BrowsePlatform.WatchCodingKeys()
{
  return &type metadata for BrowsePlatform.WatchCodingKeys;
}

ValueMetadata *type metadata accessor for BrowsePlatform.TvCodingKeys()
{
  return &type metadata for BrowsePlatform.TvCodingKeys;
}

unint64_t sub_24EBF4108()
{
  unint64_t result = qword_269947E40;
  if (!qword_269947E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947E40);
  }
  return result;
}

unint64_t sub_24EBF4160()
{
  unint64_t result = qword_269947E48;
  if (!qword_269947E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947E48);
  }
  return result;
}

unint64_t sub_24EBF41B8()
{
  unint64_t result = qword_269947E50;
  if (!qword_269947E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947E50);
  }
  return result;
}

unint64_t sub_24EBF4210()
{
  unint64_t result = qword_269947E58;
  if (!qword_269947E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947E58);
  }
  return result;
}

unint64_t sub_24EBF4268()
{
  unint64_t result = qword_269947E60;
  if (!qword_269947E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947E60);
  }
  return result;
}

unint64_t sub_24EBF42C0()
{
  unint64_t result = qword_269947E68;
  if (!qword_269947E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947E68);
  }
  return result;
}

unint64_t sub_24EBF4318()
{
  unint64_t result = qword_269947E70;
  if (!qword_269947E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947E70);
  }
  return result;
}

unint64_t sub_24EBF4370()
{
  unint64_t result = qword_269947E78;
  if (!qword_269947E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947E78);
  }
  return result;
}

unint64_t sub_24EBF43C8()
{
  unint64_t result = qword_269947E80;
  if (!qword_269947E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947E80);
  }
  return result;
}

unint64_t sub_24EBF4420()
{
  unint64_t result = qword_269947E88;
  if (!qword_269947E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947E88);
  }
  return result;
}

unint64_t sub_24EBF4478()
{
  unint64_t result = qword_269947E90;
  if (!qword_269947E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947E90);
  }
  return result;
}

uint64_t sub_24EBF44CC()
{
  uint64_t v0 = sub_24EC222B0();
  __swift_allocate_value_buffer(v0, qword_269961E88);
  __swift_project_value_buffer(v0, (uint64_t)qword_269961E88);
  return sub_24EC222A0();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_24EBF45DC(char a1)
{
  if (!a1) {
    return 0x63696D616E7964;
  }
  if (a1 == 1) {
    return 0xD000000000000019;
  }
  return 0x6D6574737973;
}

uint64_t sub_24EBF4634(char a1)
{
  return *(void *)&aTextstyldesign[8 * a1];
}

uint64_t sub_24EBF4654(char a1)
{
  return *(void *)&aTextstylweight[8 * a1];
}

uint64_t sub_24EBF4674(char a1)
{
  return *(void *)&aFontsizeweight[8 * a1];
}

uint64_t sub_24EBF4694()
{
  return sub_24EBF45DC(*v0);
}

uint64_t sub_24EBF469C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBF5974(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBF46C4(uint64_t a1)
{
  unint64_t v2 = sub_24EBF5050();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBF4700(uint64_t a1)
{
  unint64_t v2 = sub_24EBF5050();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBF473C()
{
  return sub_24EBF4634(*v0);
}

uint64_t sub_24EBF4744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBF5AB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBF476C(uint64_t a1)
{
  unint64_t v2 = sub_24EBF52F0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBF47A8(uint64_t a1)
{
  unint64_t v2 = sub_24EBF52F0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBF47E4()
{
  return sub_24EBF4654(*v0);
}

uint64_t sub_24EBF47EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBF5C14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBF4814(uint64_t a1)
{
  unint64_t v2 = sub_24EBF5248();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBF4850(uint64_t a1)
{
  unint64_t v2 = sub_24EBF5248();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBF488C()
{
  return sub_24EBF4674(*v0);
}

uint64_t sub_24EBF4894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBF5DC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBF48BC(uint64_t a1)
{
  unint64_t v2 = sub_24EBF50A4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBF48F8(uint64_t a1)
{
  unint64_t v2 = sub_24EBF50A4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseFontDescriptor.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v42 = a2;
  uint64_t v31 = a4;
  uint64_t v32 = a3;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947EC0);
  uint64_t v34 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v38 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947EC8);
  uint64_t v33 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v36 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947ED0);
  uint64_t v9 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947ED8);
  uint64_t v40 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBF5050();
  uint64_t v15 = v14;
  sub_24EC23050();
  if (!a5)
  {
    uint64_t v22 = v9;
    LOBYTE(v44) = 0;
    sub_24EBF52F0();
    sub_24EC22EC0();
    char v23 = BYTE1(v42);
    LOBYTE(v44) = v42;
    char v43 = 0;
    sub_24EBF529C();
    uint64_t v24 = v35;
    uint64_t v25 = v41;
    sub_24EC22F40();
    if (!v25)
    {
      LOBYTE(v44) = v23 & 1;
      char v43 = 1;
      sub_24EBF51A0();
      sub_24EC22F40();
      uint64_t v44 = v32;
      char v43 = 2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269947F08);
      sub_24EBF7324(&qword_269947F10, (void (*)(void))sub_24EBF51F4);
      sub_24EC22F40();
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v15, v12);
  }
  if (a5 != 1)
  {
    LOBYTE(v44) = 2;
    sub_24EBF50A4();
    uint64_t v26 = v38;
    sub_24EC22EC0();
    uint64_t v44 = v42;
    char v43 = 0;
    sub_24EBF50F8();
    uint64_t v27 = v39;
    uint64_t v28 = v41;
    sub_24EC22F40();
    if (!v28)
    {
      char v29 = BYTE1(v32);
      LOBYTE(v44) = v32;
      char v43 = 1;
      sub_24EBF514C();
      sub_24EC22F40();
      LOBYTE(v44) = v29 & 1;
      char v43 = 2;
      sub_24EBF51A0();
      sub_24EC22F40();
      uint64_t v44 = v31;
      char v43 = 3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269947F08);
      sub_24EBF7324(&qword_269947F10, (void (*)(void))sub_24EBF51F4);
      sub_24EC22F40();
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v27);
    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v15, v12);
  }
  LOBYTE(v44) = 1;
  sub_24EBF5248();
  uint64_t v16 = v36;
  uint64_t v17 = v15;
  sub_24EC22EC0();
  int v18 = v42;
  LOBYTE(v44) = v42;
  char v43 = 0;
  sub_24EBF529C();
  uint64_t v19 = v37;
  uint64_t v20 = v41;
  sub_24EC22F40();
  if (!v20)
  {
    LOBYTE(v44) = BYTE1(v18);
    char v43 = 1;
    sub_24EBF514C();
    sub_24EC22F40();
    LOBYTE(v44) = BYTE2(v18) & 1;
    char v43 = 2;
    sub_24EBF51A0();
    sub_24EC22F40();
    uint64_t v44 = v32;
    char v43 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269947F08);
    sub_24EBF7324(&qword_269947F10, (void (*)(void))sub_24EBF51F4);
    sub_24EC22F40();
  }
  (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v17, v12);
}

unint64_t sub_24EBF5050()
{
  unint64_t result = qword_269947EE0;
  if (!qword_269947EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947EE0);
  }
  return result;
}

unint64_t sub_24EBF50A4()
{
  unint64_t result = qword_269947EE8;
  if (!qword_269947EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947EE8);
  }
  return result;
}

unint64_t sub_24EBF50F8()
{
  unint64_t result = qword_269947EF0;
  if (!qword_269947EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947EF0);
  }
  return result;
}

unint64_t sub_24EBF514C()
{
  unint64_t result = qword_269947EF8;
  if (!qword_269947EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947EF8);
  }
  return result;
}

unint64_t sub_24EBF51A0()
{
  unint64_t result = qword_269947F00;
  if (!qword_269947F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947F00);
  }
  return result;
}

unint64_t sub_24EBF51F4()
{
  unint64_t result = qword_269947F18;
  if (!qword_269947F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947F18);
  }
  return result;
}

unint64_t sub_24EBF5248()
{
  unint64_t result = qword_269947F20;
  if (!qword_269947F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947F20);
  }
  return result;
}

unint64_t sub_24EBF529C()
{
  unint64_t result = qword_269947F28;
  if (!qword_269947F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947F28);
  }
  return result;
}

unint64_t sub_24EBF52F0()
{
  unint64_t result = qword_269947F30;
  if (!qword_269947F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947F30);
  }
  return result;
}

void *BrowseFontDescriptor.init(from:)(void *a1)
{
  unint64_t result = sub_24EBF5F74(a1);
  if (v1) {
    return (void *)v3;
  }
  return result;
}

void *sub_24EBF536C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_24EBF5F74(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7;
  }
  return result;
}

uint64_t sub_24EBF53A0(void *a1)
{
  return BrowseFontDescriptor.encode(to:)(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t BrowseFontDescriptor.hash(into:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  if (!a5)
  {
    sub_24EC23000();
    BrowseFontTextStyle.rawValue.getter(a2);
    goto LABEL_5;
  }
  if (a5 == 1)
  {
    sub_24EC23000();
    BrowseFontTextStyle.rawValue.getter(a2);
    sub_24EC22AB0();
    swift_bridgeObjectRelease();
LABEL_5:
    sub_24EC22AB0();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_24EC23000();
  sub_24EC23020();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  a3 = a4;
LABEL_7:
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  return sub_24EB7F848(a1, a3);
}

uint64_t BrowseFontDescriptor.hashValue.getter(char a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_24EC22FF0();
  BrowseFontDescriptor.hash(into:)((uint64_t)v9, a1, a2, a3, a4);
  return sub_24EC23030();
}

uint64_t sub_24EBF55B0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  char v4 = *((unsigned char *)v0 + 24);
  sub_24EC22FF0();
  BrowseFontDescriptor.hash(into:)((uint64_t)v6, v1, v2, v3, v4);
  return sub_24EC23030();
}

uint64_t sub_24EBF5614(uint64_t a1)
{
  return BrowseFontDescriptor.hash(into:)(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_24EBF5624()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  char v4 = *((unsigned char *)v0 + 24);
  sub_24EC22FF0();
  BrowseFontDescriptor.hash(into:)((uint64_t)v6, v1, v2, v3, v4);
  return sub_24EC23030();
}

uint64_t sub_24EBF5684(uint64_t a1, uint64_t a2)
{
  return _s15FitnessBrowsing20BrowseFontDescriptorO2eeoiySbAC_ACtFZ_0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24));
}

uint64_t _s15FitnessBrowsing20BrowseFontDescriptorO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  int v9 = a5;
  int v11 = a1;
  if (a4)
  {
    if (a4 != 1)
    {
      if (a8 != 2 || *(double *)&a1 != *(double *)&a5 || (sub_24EC04A20(a2, a6) & 1) == 0) {
        return 0;
      }
      if ((a2 & 0x100) != 0) {
        uint64_t v22 = 0x6465646E756F72;
      }
      else {
        uint64_t v22 = 0x746C7561666564;
      }
      if ((a6 & 0x100) != 0) {
        uint64_t v23 = 0x6465646E756F72;
      }
      else {
        uint64_t v23 = 0x746C7561666564;
      }
      if (v22 == v23)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v32 = sub_24EC22F70();
        swift_bridgeObjectRelease_n();
        if ((v32 & 1) == 0) {
          return 0;
        }
      }
      uint64_t v30 = a3;
      uint64_t v31 = a7;
      goto LABEL_42;
    }
    if (a8 != 1) {
      return 0;
    }
    unint64_t v12 = BrowseFontTextStyle.rawValue.getter(a1);
    uint64_t v14 = v13;
    if (v12 == BrowseFontTextStyle.rawValue.getter(v9) && v14 == v15)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v24 = sub_24EC22F70();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0) {
        return 0;
      }
    }
    if ((sub_24EC04A20(SBYTE1(v11), SBYTE1(v9)) & 1) == 0) {
      return 0;
    }
    if ((*(void *)&v11 & 0x10000) != 0) {
      uint64_t v25 = 0x6465646E756F72;
    }
    else {
      uint64_t v25 = 0x746C7561666564;
    }
    BOOL v26 = (*(void *)&v9 & 0x10000) == 0;
  }
  else
  {
    if (a8) {
      return 0;
    }
    unint64_t v16 = BrowseFontTextStyle.rawValue.getter(a1);
    uint64_t v18 = v17;
    if (v16 == BrowseFontTextStyle.rawValue.getter(v9) && v18 == v19)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v27 = sub_24EC22F70();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v27 & 1) == 0) {
        return 0;
      }
    }
    if ((v11 & 0x100) != 0) {
      uint64_t v25 = 0x6465646E756F72;
    }
    else {
      uint64_t v25 = 0x746C7561666564;
    }
    BOOL v26 = (v9 & 0x100) == 0;
  }
  if (v26) {
    uint64_t v28 = 0x746C7561666564;
  }
  else {
    uint64_t v28 = 0x6465646E756F72;
  }
  if (v25 != v28)
  {
    char v29 = sub_24EC22F70();
    swift_bridgeObjectRelease_n();
    if (v29) {
      goto LABEL_39;
    }
    return 0;
  }
  swift_bridgeObjectRelease_n();
LABEL_39:
  uint64_t v30 = a2;
  uint64_t v31 = a6;
LABEL_42:
  return sub_24EC1BD44(v30, v31);
}

uint64_t sub_24EBF5974(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x63696D616E7964 && a2 == 0xE700000000000000;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000024EC31280 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D6574737973 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EBF5AB4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6C79745374786574 && a2 == 0xE900000000000065;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6769736564 && a2 == 0xE600000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x63696C6F626D7973 && a2 == 0xEE00737469617254)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EBF5C14(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6C79745374786574 && a2 == 0xE900000000000065;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746867696577 && a2 == 0xE600000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6769736564 && a2 == 0xE600000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x63696C6F626D7973 && a2 == 0xEE00737469617254)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24EBF5DC8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x657A6953746E6F66 && a2 == 0xE800000000000000;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746867696577 && a2 == 0xE600000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6769736564 && a2 == 0xE600000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x63696C6F626D7973 && a2 == 0xEE00737469617254)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

void *sub_24EBF5F74(void *a1)
{
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947FA0);
  uint64_t v39 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v40 = (char *)v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947FA8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  uint64_t v38 = v4;
  MEMORY[0x270FA5388](v3);
  char v6 = (void *)((char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947FB0);
  uint64_t v35 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  int v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947FB8);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v41 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_24EBF5050();
  uint64_t v15 = v42;
  sub_24EC23040();
  if (!v15)
  {
    unint64_t v16 = v40;
    uint64_t v42 = v11;
    uint64_t v17 = sub_24EC22EA0();
    if (*(void *)(v17 + 16) == 1)
    {
      int v18 = *(unsigned __int8 *)(v17 + 32);
      v34[1] = v18;
      if (v18)
      {
        if (v18 == 1)
        {
          LOBYTE(v47) = 1;
          sub_24EBF5248();
          sub_24EC22E00();
          LOBYTE(v47) = 0;
          sub_24EBF73E8();
          uint64_t v19 = v37;
          sub_24EC22E90();
          char v27 = v6;
          uint64_t v28 = v44;
          LOBYTE(v47) = 1;
          sub_24EBF727C();
          sub_24EC22E90();
          uint64_t v29 = v46;
          LOBYTE(v47) = 2;
          sub_24EBF72D0();
          sub_24EC22E90();
          LODWORD(v40) = v45;
          __swift_instantiateConcreteTypeFromMangledName(&qword_269947F08);
          char v43 = 3;
          sub_24EBF7324(&qword_269947FD8, (void (*)(void))sub_24EBF7394);
          sub_24EC22E90();
          uint64_t v39 = v29;
          (*(void (**)(void *, uint64_t))(v38 + 8))(v27, v19);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v10);
          uint64_t v33 = 0x10000;
          if (!v40) {
            uint64_t v33 = 0;
          }
          char v6 = (void *)(v28 | (v39 << 8) | v33);
        }
        else
        {
          LOBYTE(v47) = 2;
          sub_24EBF50A4();
          sub_24EC22E00();
          uint64_t v38 = v10;
          LOBYTE(v44) = 0;
          sub_24EBF7228();
          uint64_t v25 = v36;
          sub_24EC22E90();
          uint64_t v26 = v42;
          char v6 = v47;
          LOBYTE(v44) = 1;
          sub_24EBF727C();
          sub_24EC22E90();
          LOBYTE(v44) = 2;
          sub_24EBF72D0();
          sub_24EC22E90();
          LODWORD(v37) = v45;
          __swift_instantiateConcreteTypeFromMangledName(&qword_269947F08);
          char v43 = 3;
          sub_24EBF7324(&qword_269947FD8, (void (*)(void))sub_24EBF7394);
          sub_24EC22E90();
          (*(void (**)(char *, uint64_t))(v39 + 8))(v16, v25);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v38);
        }
      }
      else
      {
        LOBYTE(v47) = 0;
        sub_24EBF52F0();
        sub_24EC22E00();
        LOBYTE(v47) = 0;
        sub_24EBF73E8();
        uint64_t v23 = v7;
        sub_24EC22E90();
        uint64_t v24 = v42;
        uint64_t v30 = v44;
        LOBYTE(v47) = 1;
        sub_24EBF72D0();
        sub_24EC22E90();
        uint64_t v31 = v35;
        uint64_t v38 = v10;
        LODWORD(v40) = v46;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269947F08);
        unsigned __int8 v45 = 2;
        sub_24EBF7324(&qword_269947FD8, (void (*)(void))sub_24EBF7394);
        sub_24EC22E90();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v23);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v38);
        uint64_t v32 = 256;
        if (!v40) {
          uint64_t v32 = 0;
        }
        char v6 = (void *)(v32 | v30);
      }
    }
    else
    {
      uint64_t v20 = sub_24EC22D50();
      swift_allocError();
      char v6 = v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269946108);
      void *v6 = &type metadata for BrowseFontDescriptor;
      sub_24EC22E10();
      sub_24EC22D40();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v6, *MEMORY[0x263F8DCB0], v20);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v10);
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return v6;
}

unint64_t sub_24EBF698C()
{
  unint64_t result = qword_269947F38;
  if (!qword_269947F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947F38);
  }
  return result;
}

uint64_t destroy for BrowseFontDescriptor(uint64_t a1)
{
  return sub_24EB7EA4C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for BrowseFontDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_24EB7CDBC(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for BrowseFontDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_24EB7CDBC(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_24EB7EA4C(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for BrowseFontDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_24EB7EA4C(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for BrowseFontDescriptor(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BrowseFontDescriptor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24EBF6BB8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_24EBF6BC0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for BrowseFontDescriptor()
{
  return &type metadata for BrowseFontDescriptor;
}

ValueMetadata *type metadata accessor for BrowseFontDescriptor.CodingKeys()
{
  return &type metadata for BrowseFontDescriptor.CodingKeys;
}

unsigned char *_s15FitnessBrowsing20BrowseFontDescriptorO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBF6CB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseFontDescriptor.DynamicCodingKeys()
{
  return &type metadata for BrowseFontDescriptor.DynamicCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseFontDescriptor.DynamicWithWeightOverrideCodingKeys()
{
  return &type metadata for BrowseFontDescriptor.DynamicWithWeightOverrideCodingKeys;
}

unsigned char *_s15FitnessBrowsing20BrowseFontDescriptorO35DynamicWithWeightOverrideCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBF6DD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseFontDescriptor.SystemCodingKeys()
{
  return &type metadata for BrowseFontDescriptor.SystemCodingKeys;
}

unint64_t sub_24EBF6E0C()
{
  unint64_t result = qword_269947F40;
  if (!qword_269947F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947F40);
  }
  return result;
}

unint64_t sub_24EBF6E64()
{
  unint64_t result = qword_269947F48;
  if (!qword_269947F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947F48);
  }
  return result;
}

unint64_t sub_24EBF6EBC()
{
  unint64_t result = qword_269947F50;
  if (!qword_269947F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947F50);
  }
  return result;
}

unint64_t sub_24EBF6F14()
{
  unint64_t result = qword_269947F58;
  if (!qword_269947F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947F58);
  }
  return result;
}

unint64_t sub_24EBF6F6C()
{
  unint64_t result = qword_269947F60;
  if (!qword_269947F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947F60);
  }
  return result;
}

unint64_t sub_24EBF6FC4()
{
  unint64_t result = qword_269947F68;
  if (!qword_269947F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947F68);
  }
  return result;
}

unint64_t sub_24EBF701C()
{
  unint64_t result = qword_269947F70;
  if (!qword_269947F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947F70);
  }
  return result;
}

unint64_t sub_24EBF7074()
{
  unint64_t result = qword_269947F78;
  if (!qword_269947F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947F78);
  }
  return result;
}

unint64_t sub_24EBF70CC()
{
  unint64_t result = qword_269947F80;
  if (!qword_269947F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947F80);
  }
  return result;
}

unint64_t sub_24EBF7124()
{
  unint64_t result = qword_269947F88;
  if (!qword_269947F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947F88);
  }
  return result;
}

unint64_t sub_24EBF717C()
{
  unint64_t result = qword_269947F90;
  if (!qword_269947F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947F90);
  }
  return result;
}

unint64_t sub_24EBF71D4()
{
  unint64_t result = qword_269947F98;
  if (!qword_269947F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947F98);
  }
  return result;
}

unint64_t sub_24EBF7228()
{
  unint64_t result = qword_269947FC0;
  if (!qword_269947FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947FC0);
  }
  return result;
}

unint64_t sub_24EBF727C()
{
  unint64_t result = qword_269947FC8;
  if (!qword_269947FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947FC8);
  }
  return result;
}

unint64_t sub_24EBF72D0()
{
  unint64_t result = qword_269947FD0;
  if (!qword_269947FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947FD0);
  }
  return result;
}

uint64_t sub_24EBF7324(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269947F08);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EBF7394()
{
  unint64_t result = qword_269947FE0;
  if (!qword_269947FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947FE0);
  }
  return result;
}

unint64_t sub_24EBF73E8()
{
  unint64_t result = qword_269947FE8;
  if (!qword_269947FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269947FE8);
  }
  return result;
}

uint64_t sub_24EBF7440(char a1)
{
  if (!a1) {
    return 0xD000000000000019;
  }
  if (a1 == 1) {
    return 0xD000000000000010;
  }
  return 0x6169726F74696465;
}

uint64_t sub_24EBF74AC(char a1)
{
  return *(void *)&aIdentifidispla[8 * a1];
}

uint64_t sub_24EBF74CC()
{
  return sub_24EBF7440(*v0);
}

uint64_t sub_24EBF74D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBF9EF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBF74FC(uint64_t a1)
{
  unint64_t v2 = sub_24EBF8FB0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBF7538(uint64_t a1)
{
  unint64_t v2 = sub_24EBF8FB0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBF7574(uint64_t a1)
{
  unint64_t v2 = sub_24EBF90AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBF75B0(uint64_t a1)
{
  unint64_t v2 = sub_24EBF90AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBF75EC()
{
  return sub_24EBF74AC(*v0);
}

uint64_t sub_24EBF75F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBFA058(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBF761C(uint64_t a1)
{
  unint64_t v2 = sub_24EBF9058();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBF7658(uint64_t a1)
{
  unint64_t v2 = sub_24EBF9058();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBF7694(uint64_t a1)
{
  unint64_t v2 = sub_24EBF9004();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBF76D0(uint64_t a1)
{
  unint64_t v2 = sub_24EBF9004();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseIdentifier.underlyingValue.getter()
{
  uint64_t v1 = type metadata accessor for BrowseIdentifier();
  MEMORY[0x270FA5388](v1);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EBF8F4C(v0, (uint64_t)v3);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return *(void *)v3;
  }
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = &v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269946760) + 64)];
  uint64_t v6 = sub_24EC21D10();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return v4;
}

uint64_t BrowseIdentifier.encode(to:)(void *a1)
{
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947FF0);
  uint64_t v30 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  int v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269947FF8);
  uint64_t v31 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v34 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_24EC21D10();
  uint64_t v37 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v36 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269948000);
  uint64_t v32 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for BrowseIdentifier();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269948008);
  uint64_t v39 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EBF8FB0();
  sub_24EC23050();
  sub_24EBF8F4C(v42, (uint64_t)v11);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      LODWORD(v42) = v11[16];
      uint64_t v15 = &v11[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269946760) + 64)];
      unint64_t v16 = v36;
      uint64_t v17 = v37;
      uint64_t v18 = v35;
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v36, v15, v35);
      char v48 = 1;
      sub_24EBF9058();
      uint64_t v19 = v34;
      uint64_t v20 = v41;
      sub_24EC22EC0();
      char v47 = 0;
      uint64_t v21 = v40;
      sub_24EC22F00();
      swift_bridgeObjectRelease();
      if (v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v19, v38);
        (*(void (**)(char *, uint64_t))(v17 + 8))(v16, v18);
      }
      else
      {
        char v46 = v42;
        char v45 = 1;
        sub_24EB7DBAC();
        uint64_t v25 = v38;
        sub_24EC22F40();
        char v44 = 2;
        sub_24EBF91AC(&qword_2699465E0, MEMORY[0x263F06828]);
        uint64_t v26 = v36;
        uint64_t v27 = v18;
        sub_24EC22F40();
        uint64_t v28 = v37;
        (*(void (**)(char *, uint64_t))(v31 + 8))(v19, v25);
        (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v27);
      }
    }
    else
    {
      char v49 = 2;
      sub_24EBF9004();
      uint64_t v20 = v41;
      sub_24EC22EC0();
      uint64_t v24 = v33;
      sub_24EC22F00();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v3, v24);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v13, v20);
  }
  else
  {
    char v43 = 0;
    sub_24EBF90AC();
    uint64_t v22 = v41;
    sub_24EC22EC0();
    sub_24EC22F00();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v13, v22);
  }
}

uint64_t BrowseIdentifier.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_269948030);
  uint64_t v60 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  char v68 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_269948038);
  uint64_t v61 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  char v64 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_269948040);
  uint64_t v59 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  char v66 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_269948048);
  uint64_t v65 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for BrowseIdentifier();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (uint64_t *)((char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (uint64_t *)((char *)&v54 - v12);
  MEMORY[0x270FA5388](v14);
  unint64_t v16 = (uint64_t *)((char *)&v54 - v15);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v54 - v18;
  uint64_t v20 = a1[3];
  uint64_t v70 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_24EBF8FB0();
  uint64_t v21 = v71;
  sub_24EC23040();
  if (!v21)
  {
    uint64_t v54 = v16;
    uint64_t v55 = v10;
    uint64_t v22 = v68;
    uint64_t v23 = v69;
    uint64_t v56 = v13;
    uint64_t v57 = v19;
    uint64_t v25 = v66;
    uint64_t v24 = v67;
    uint64_t v71 = v8;
    uint64_t v26 = v65;
    uint64_t v27 = sub_24EC22EA0();
    if (*(void *)(v27 + 16) == 1)
    {
      if (*(unsigned char *)(v27 + 32))
      {
        if (*(unsigned char *)(v27 + 32) == 1)
        {
          char v76 = 1;
          sub_24EBF9058();
          sub_24EC22E00();
          char v68 = v7;
          char v75 = 0;
          uint64_t v38 = sub_24EC22E50();
          char v47 = v56;
          *uint64_t v56 = v38;
          v47[1] = v48;
          char v74 = 1;
          sub_24EB7EBCC();
          char v49 = v64;
          sub_24EC22E90();
          __swift_instantiateConcreteTypeFromMangledName(&qword_269946760);
          sub_24EC21D10();
          char v73 = 2;
          sub_24EBF91AC(&qword_269946658, MEMORY[0x263F06828]);
          sub_24EC22E90();
          (*(void (**)(char *, uint64_t))(v61 + 8))(v49, v24);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v26 + 8))(v68, v69);
          swift_storeEnumTagMultiPayload();
          uint64_t v50 = (uint64_t)v70;
          uint64_t v52 = (uint64_t)v57;
          uint64_t v51 = v58;
          uint64_t v53 = (uint64_t)v47;
LABEL_12:
          sub_24EBF9100(v53, v52);
          sub_24EBF9100(v52, v51);
          uint64_t v36 = v50;
          return __swift_destroy_boxed_opaque_existential_1(v36);
        }
        char v77 = 2;
        sub_24EBF9004();
        uint64_t v34 = v22;
        sub_24EC22E00();
        uint64_t v35 = v63;
        uint64_t v43 = sub_24EC22E50();
        uint64_t v45 = v44;
        (*(void (**)(char *, uint64_t))(v60 + 8))(v34, v35);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v23);
        char v46 = v55;
        *uint64_t v55 = v43;
        v46[1] = v45;
        swift_storeEnumTagMultiPayload();
        uint64_t v53 = (uint64_t)v46;
      }
      else
      {
        char v72 = 0;
        sub_24EBF90AC();
        uint64_t v31 = v25;
        sub_24EC22E00();
        uint64_t v32 = v23;
        uint64_t v33 = v62;
        uint64_t v39 = sub_24EC22E50();
        uint64_t v41 = v40;
        (*(void (**)(char *, uint64_t))(v59 + 8))(v31, v33);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v32);
        uint64_t v42 = v54;
        *uint64_t v54 = v39;
        v42[1] = v41;
        swift_storeEnumTagMultiPayload();
        uint64_t v53 = (uint64_t)v42;
      }
      uint64_t v50 = (uint64_t)v70;
      uint64_t v52 = (uint64_t)v57;
      uint64_t v51 = v58;
      goto LABEL_12;
    }
    uint64_t v28 = sub_24EC22D50();
    swift_allocError();
    uint64_t v30 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269946108);
    *uint64_t v30 = v71;
    sub_24EC22E10();
    sub_24EC22D40();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, *MEMORY[0x263F8DCB0], v28);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v23);
  }
  uint64_t v36 = (uint64_t)v70;
  return __swift_destroy_boxed_opaque_existential_1(v36);
}

uint64_t sub_24EBF8740@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BrowseIdentifier.init(from:)(a1, a2);
}

uint64_t sub_24EBF8758(void *a1)
{
  return BrowseIdentifier.encode(to:)(a1);
}

uint64_t BrowseIdentifier.hash(into:)()
{
  uint64_t v1 = sub_24EC21D10();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BrowseIdentifier();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EBF8F4C(v0, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    char v8 = v7[16];
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946760);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, &v7[*(int *)(v9 + 64)], v1);
    sub_24EC23000();
    sub_24EC22AB0();
    swift_bridgeObjectRelease();
    BrowseDisplayStyle.rawValue.getter(v8);
    sub_24EC22AB0();
    swift_bridgeObjectRelease();
    sub_24EBF91AC(&qword_2699466B8, MEMORY[0x263F06828]);
    sub_24EC22A20();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    sub_24EC23000();
    sub_24EC22AB0();
    return swift_bridgeObjectRelease();
  }
}

uint64_t BrowseIdentifier.hashValue.getter()
{
  return sub_24EC23030();
}

uint64_t sub_24EBF89EC()
{
  return sub_24EC23030();
}

uint64_t sub_24EBF8A30()
{
  return sub_24EC23030();
}

uint64_t _s15FitnessBrowsing16BrowseIdentifierO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EC21D10();
  uint64_t v52 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v51 = (char *)&v48 - v8;
  uint64_t v9 = type metadata accessor for BrowseIdentifier();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (uint64_t *)((char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v48 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (uint64_t *)((char *)&v48 - v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(qword_2699480B8);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t)&v21[*(int *)(v19 + 56)];
  sub_24EBF8F4C(a1, (uint64_t)v21);
  sub_24EBF8F4C(a2, v22);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_24EBF8F4C((uint64_t)v21, (uint64_t)v15);
      uint64_t v24 = *((void *)v15 + 1);
      uint64_t v50 = *(void *)v15;
      int v25 = v15[16];
      uint64_t v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269946760) + 64);
      uint64_t v27 = &v15[v26];
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        int v49 = v25;
        uint64_t v29 = *(void *)v22;
        uint64_t v28 = *(void *)(v22 + 8);
        int v48 = *(unsigned __int8 *)(v22 + 16);
        uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
        v30(v51, v27, v4);
        v30(v7, (char *)(v22 + v26), v4);
        if (v50 == v29 && v24 == v28)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v32 = sub_24EC22F70();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v32 & 1) == 0) {
            goto LABEL_29;
          }
        }
        uint64_t v38 = BrowseDisplayStyle.rawValue.getter(v49);
        uint64_t v40 = v39;
        if (v38 == BrowseDisplayStyle.rawValue.getter(v48) && v40 == v41)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v43 = sub_24EC22F70();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v43 & 1) == 0)
          {
LABEL_29:
            uint64_t v44 = *(void (**)(char *, uint64_t))(v52 + 8);
            v44(v7, v4);
            v44(v51, v4);
LABEL_30:
            sub_24EBF95F0((uint64_t)v21);
            goto LABEL_31;
          }
        }
        char v46 = v51;
        char v37 = sub_24EC21D00();
        char v47 = *(void (**)(char *, uint64_t))(v52 + 8);
        v47(v7, v4);
        v47(v46, v4);
        sub_24EBF95F0((uint64_t)v21);
        return v37 & 1;
      }
      (*(void (**)(char *, uint64_t))(v52 + 8))(&v15[v26], v4);
LABEL_20:
      swift_bridgeObjectRelease();
      sub_24EBFA1B0((uint64_t)v21);
LABEL_31:
      char v37 = 0;
      return v37 & 1;
    }
    sub_24EBF8F4C((uint64_t)v21, (uint64_t)v12);
    uint64_t v33 = *v12;
    uint64_t v34 = v12[1];
    if (swift_getEnumCaseMultiPayload() != 2) {
      goto LABEL_20;
    }
  }
  else
  {
    sub_24EBF8F4C((uint64_t)v21, (uint64_t)v17);
    uint64_t v33 = *v17;
    uint64_t v34 = v17[1];
    if (swift_getEnumCaseMultiPayload()) {
      goto LABEL_20;
    }
  }
  if (v33 == *(void *)v22 && v34 == *(void *)(v22 + 8))
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v36 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v36 & 1) == 0) {
      goto LABEL_30;
    }
  }
  sub_24EBF95F0((uint64_t)v21);
  char v37 = 1;
  return v37 & 1;
}

uint64_t type metadata accessor for BrowseIdentifier()
{
  uint64_t result = qword_26B1D7DA0;
  if (!qword_26B1D7DA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24EBF8F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24EBF8FB0()
{
  unint64_t result = qword_269948010;
  if (!qword_269948010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948010);
  }
  return result;
}

unint64_t sub_24EBF9004()
{
  unint64_t result = qword_269948018;
  if (!qword_269948018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948018);
  }
  return result;
}

unint64_t sub_24EBF9058()
{
  unint64_t result = qword_269948020;
  if (!qword_269948020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948020);
  }
  return result;
}

unint64_t sub_24EBF90AC()
{
  unint64_t result = qword_269948028;
  if (!qword_269948028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948028);
  }
  return result;
}

uint64_t sub_24EBF9100(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EBF9164()
{
  return sub_24EBF91AC(&qword_269948050, (void (*)(uint64_t))type metadata accessor for BrowseIdentifier);
}

uint64_t sub_24EBF91AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for BrowseIdentifier(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)a1 = *a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v6;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      swift_bridgeObjectRetain();
      uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269946760) + 64);
      uint64_t v8 = a1 + v7;
      uint64_t v9 = (uint64_t)a2 + v7;
      uint64_t v10 = sub_24EC21D10();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      uint64_t v12 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v12;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for BrowseIdentifier(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
LABEL_4:
    return swift_bridgeObjectRelease();
  }
  if (result != 1)
  {
    if (result) {
      return result;
    }
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  uint64_t v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269946760) + 64);
  uint64_t v4 = sub_24EC21D10();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  return v5(v3, v4);
}

uint64_t initializeWithCopy for BrowseIdentifier(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    swift_bridgeObjectRetain();
    uint64_t v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269946760) + 64);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = a2 + v5;
    uint64_t v8 = sub_24EC21D10();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    uint64_t v9 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v9;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for BrowseIdentifier(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_24EBF95F0(a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      swift_bridgeObjectRetain();
      uint64_t v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269946760) + 64);
      uint64_t v5 = a1 + v4;
      uint64_t v6 = a2 + v4;
      uint64_t v7 = sub_24EC21D10();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24EBF95F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BrowseIdentifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *initializeWithTake for BrowseIdentifier(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[16] = a2[16];
    uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269946760) + 64);
    uint64_t v7 = &a1[v6];
    uint64_t v8 = &a2[v6];
    uint64_t v9 = sub_24EC21D10();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for BrowseIdentifier(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EBF95F0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269946760) + 64);
      uint64_t v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      uint64_t v9 = sub_24EC21D10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24EBF981C()
{
  uint64_t v3 = &unk_24EC2DE28;
  uint64_t result = sub_24EC21D10();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    uint64_t v4 = &v2;
    uint64_t v5 = &unk_24EC2DE28;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseIdentifier.CodingKeys()
{
  return &type metadata for BrowseIdentifier.CodingKeys;
}

ValueMetadata *type metadata accessor for BrowseIdentifier.EditorialCollectionDetailCodingKeys()
{
  return &type metadata for BrowseIdentifier.EditorialCollectionDetailCodingKeys;
}

unsigned char *_s15FitnessBrowsing16BrowseIdentifierO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBF99C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseIdentifier.EditorialGalleryCodingKeys()
{
  return &type metadata for BrowseIdentifier.EditorialGalleryCodingKeys;
}

unsigned char *_s15FitnessBrowsing16BrowseIdentifierO35EditorialCollectionDetailCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EBF9A98);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseIdentifier.EditorialPageCodingKeys()
{
  return &type metadata for BrowseIdentifier.EditorialPageCodingKeys;
}

unint64_t sub_24EBF9AD4()
{
  unint64_t result = qword_269948058;
  if (!qword_269948058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948058);
  }
  return result;
}

unint64_t sub_24EBF9B2C()
{
  unint64_t result = qword_269948060;
  if (!qword_269948060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948060);
  }
  return result;
}

unint64_t sub_24EBF9B84()
{
  unint64_t result = qword_269948068;
  if (!qword_269948068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948068);
  }
  return result;
}

unint64_t sub_24EBF9BDC()
{
  unint64_t result = qword_269948070;
  if (!qword_269948070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948070);
  }
  return result;
}

unint64_t sub_24EBF9C34()
{
  unint64_t result = qword_269948078;
  if (!qword_269948078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948078);
  }
  return result;
}

unint64_t sub_24EBF9C8C()
{
  unint64_t result = qword_269948080;
  if (!qword_269948080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948080);
  }
  return result;
}

unint64_t sub_24EBF9CE4()
{
  unint64_t result = qword_269948088;
  if (!qword_269948088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948088);
  }
  return result;
}

unint64_t sub_24EBF9D3C()
{
  unint64_t result = qword_269948090;
  if (!qword_269948090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948090);
  }
  return result;
}

unint64_t sub_24EBF9D94()
{
  unint64_t result = qword_269948098;
  if (!qword_269948098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948098);
  }
  return result;
}

unint64_t sub_24EBF9DEC()
{
  unint64_t result = qword_2699480A0;
  if (!qword_2699480A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699480A0);
  }
  return result;
}

unint64_t sub_24EBF9E44()
{
  unint64_t result = qword_2699480A8;
  if (!qword_2699480A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699480A8);
  }
  return result;
}

unint64_t sub_24EBF9E9C()
{
  unint64_t result = qword_2699480B0;
  if (!qword_2699480B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699480B0);
  }
  return result;
}

uint64_t sub_24EBF9EF0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000019 && a2 == 0x800000024EC311B0 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024EC311D0 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6169726F74696465 && a2 == 0xED0000656761506CLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EBFA058(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5379616C70736964 && a2 == 0xEC000000656C7974 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EBFA1B0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_2699480B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EBFA210(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x657070416D657469 && a2 == 0xEC00000064657261;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x707061546D657469 && a2 == 0xEA00000000006465 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024EC312A0 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000024EC312C0 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4164694477656976 && a2 == 0xED00007261657070)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_24EBFA444(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x707061546D657469;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 4:
      unint64_t result = 0x4164694477656976;
      break;
    default:
      unint64_t result = 0x657070416D657469;
      break;
  }
  return result;
}

uint64_t sub_24EBFA510(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7865646E69 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24EBFA590(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E6564496D657469 && a2 == 0xEE00726569666974)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

unint64_t sub_24EBFA630()
{
  return sub_24EBFA444(*v0);
}

uint64_t sub_24EBFA68C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EBFA210(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBFA6EC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24EBFE874();
  *a1 = result;
  return result;
}

uint64_t sub_24EBFA748(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24EBFA79C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24EBFA7F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_24EBFA9C0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24EBFA510, a4);
}

uint64_t sub_24EBFA80C@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_24EBFAC14(a1, (uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24EB91734, a2);
}

uint64_t sub_24EBFA824(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24EBFA878(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24EBFA8D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_24EBFA9C0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24EBFA590, a4);
}

uint64_t sub_24EBFA8E8@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_24EBFAC14(a1, (uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24EB7C164, a2);
}

uint64_t sub_24EBFA900(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24EBFA954(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24EBFA9A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_24EBFA9C0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24EB95E84, a4);
}

uint64_t sub_24EBFA9C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void)@<X4>, unsigned char *a5@<X8>)
{
  uint64_t result = a4(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7], a3[8], a3[9], a3[10], a3[11], a3[12], a3[13], a3[14], a3[15], a3[16], a3[17], a3[18],
             a3[19]);
  *a5 = result & 1;
  return result;
}

uint64_t sub_24EBFAA2C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24EBFAA80(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24EBFAAD4@<X0>(void *a1@<X2>, unsigned char *a2@<X8>)
{
  return sub_24EBFAB94(a1, (uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24EB91734, a2);
}

uint64_t sub_24EBFAAEC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24EBFAB40(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24EBFAB94@<X0>(void *a1@<X2>, uint64_t (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void)@<X4>, unsigned char *a3@<X8>)
{
  char v4 = a2(a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18], a1[19]);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v4 & 1;
  return result;
}

uint64_t sub_24EBFAC14@<X0>(void *a1@<X1>, uint64_t (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void)@<X3>, unsigned char *a3@<X8>)
{
  uint64_t result = a2(a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18], a1[19]);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EBFAC7C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24EBFACD0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t NewAndFeaturedAction.encode(to:)(void *a1, void *a2)
{
  uint64_t v120 = a2;
  unint64_t v116 = a1;
  uint64_t v2 = a2[2];
  uint64_t v3 = a2[3];
  uint64_t v5 = a2[4];
  uint64_t v4 = a2[5];
  uint64_t v6 = a2[7];
  uint64_t v132 = a2[6];
  uint64_t v134 = v6;
  uint64_t v7 = a2[9];
  uint64_t v131 = a2[8];
  uint64_t v8 = a2[11];
  uint64_t v128 = a2[10];
  uint64_t v127 = v8;
  uint64_t v9 = a2[13];
  uint64_t v126 = a2[12];
  uint64_t v125 = v9;
  uint64_t v10 = a2[15];
  uint64_t v135 = a2[14];
  uint64_t v136 = v2;
  uint64_t v11 = a2[16];
  uint64_t v12 = a2[17];
  uint64_t v14 = a2[18];
  uint64_t v13 = a2[19];
  uint64_t v119 = v14;
  uint64_t v122 = v13;
  uint64_t v15 = v2;
  uint64_t v129 = v2;
  uint64_t v137 = v3;
  uint64_t v138 = v5;
  uint64_t v124 = v3;
  uint64_t v133 = v5;
  uint64_t v139 = v4;
  uint64_t v140 = v132;
  uint64_t v16 = v4;
  uint64_t v154 = v4;
  uint64_t v141 = v6;
  uint64_t v142 = v131;
  uint64_t v143 = v7;
  uint64_t v144 = v128;
  uint64_t v130 = v7;
  uint64_t v145 = v8;
  uint64_t v146 = v126;
  uint64_t v147 = v9;
  uint64_t v148 = v135;
  uint64_t v149 = v10;
  uint64_t v150 = v11;
  uint64_t v121 = v10;
  uint64_t v118 = v11;
  uint64_t v151 = v12;
  uint64_t v152 = v14;
  uint64_t v123 = v12;
  uint64_t v153 = v13;
  uint64_t v115 = type metadata accessor for NewAndFeaturedAction.ViewDidAppearCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v113 = sub_24EC22F50();
  uint64_t v112 = *(void *)(v113 - 8);
  MEMORY[0x270FA5388](v113);
  uint64_t v111 = (char *)&v86 - v17;
  uint64_t v136 = v15;
  uint64_t v137 = v3;
  uint64_t v138 = v5;
  uint64_t v139 = v16;
  uint64_t v18 = v132;
  uint64_t v140 = v132;
  uint64_t v141 = v134;
  uint64_t v19 = v131;
  uint64_t v142 = v131;
  uint64_t v143 = v7;
  uint64_t v20 = v128;
  uint64_t v21 = v127;
  uint64_t v144 = v128;
  uint64_t v145 = v127;
  uint64_t v22 = v126;
  uint64_t v146 = v126;
  uint64_t v147 = v9;
  uint64_t v148 = v135;
  uint64_t v149 = v10;
  uint64_t v150 = v11;
  uint64_t v151 = v12;
  uint64_t v23 = v119;
  uint64_t v24 = v122;
  uint64_t v152 = v119;
  uint64_t v153 = v122;
  uint64_t updated = type metadata accessor for NewAndFeaturedAction.UpdateLazySectionDescriptorsCodingKeys();
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v110 = updated;
  uint64_t v109 = v26;
  uint64_t v108 = sub_24EC22F50();
  uint64_t v107 = *(void *)(v108 - 8);
  MEMORY[0x270FA5388](v108);
  uint64_t v106 = (char *)&v86 - v27;
  uint64_t v28 = v129;
  uint64_t v136 = v129;
  uint64_t v137 = v124;
  uint64_t v138 = v133;
  uint64_t v139 = v154;
  uint64_t v140 = v18;
  uint64_t v141 = v134;
  uint64_t v142 = v19;
  uint64_t v143 = v130;
  uint64_t v144 = v20;
  uint64_t v145 = v21;
  uint64_t v146 = v22;
  uint64_t v29 = v125;
  uint64_t v147 = v125;
  uint64_t v148 = v135;
  uint64_t v30 = v121;
  uint64_t v31 = v118;
  uint64_t v149 = v121;
  uint64_t v150 = v118;
  uint64_t v151 = v123;
  uint64_t v152 = v23;
  uint64_t v153 = v24;
  uint64_t v32 = type metadata accessor for NewAndFeaturedAction.LoadedDescriptorCodingKeys();
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v102 = v32;
  uint64_t v101 = v33;
  uint64_t v105 = sub_24EC22F50();
  uint64_t v104 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v103 = (char *)&v86 - v34;
  uint64_t v35 = v124;
  uint64_t v136 = v28;
  uint64_t v137 = v124;
  uint64_t v36 = v133;
  uint64_t v37 = v134;
  uint64_t v138 = v133;
  uint64_t v139 = v154;
  uint64_t v38 = v132;
  uint64_t v39 = v131;
  uint64_t v140 = v132;
  uint64_t v141 = v131;
  uint64_t v40 = v130;
  uint64_t v142 = v134;
  uint64_t v143 = v130;
  uint64_t v144 = v128;
  uint64_t v145 = v127;
  uint64_t v146 = v126;
  uint64_t v147 = v29;
  uint64_t v148 = v135;
  uint64_t v149 = v30;
  uint64_t v150 = v31;
  uint64_t v41 = v119;
  uint64_t v42 = v123;
  uint64_t v151 = v119;
  uint64_t v152 = v123;
  uint64_t v43 = v122;
  uint64_t v153 = v122;
  uint64_t v100 = sub_24EC22080();
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  unint64_t v98 = (char *)&v86 - v44;
  uint64_t v136 = v129;
  uint64_t v137 = v35;
  uint64_t v138 = v36;
  uint64_t v139 = v154;
  uint64_t v140 = v38;
  uint64_t v141 = v37;
  uint64_t v142 = v39;
  uint64_t v143 = v40;
  uint64_t v45 = v128;
  uint64_t v46 = v127;
  uint64_t v144 = v128;
  uint64_t v145 = v127;
  uint64_t v47 = v126;
  uint64_t v48 = v125;
  uint64_t v146 = v126;
  uint64_t v147 = v125;
  uint64_t v49 = v121;
  uint64_t v148 = v135;
  uint64_t v149 = v121;
  uint64_t v50 = v118;
  uint64_t v150 = v118;
  uint64_t v151 = v42;
  uint64_t v152 = v41;
  uint64_t v153 = v43;
  uint64_t v51 = type metadata accessor for NewAndFeaturedAction.ItemTappedCodingKeys();
  uint64_t v52 = swift_getWitnessTable();
  uint64_t v94 = v51;
  uint64_t v92 = v52;
  uint64_t v97 = sub_24EC22F50();
  uint64_t v96 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  uint64_t v93 = (char *)&v86 - v53;
  uint64_t v95 = *(void *)(v154 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v91 = (char *)&v86 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = v124;
  uint64_t v136 = v129;
  uint64_t v137 = v124;
  uint64_t v138 = v133;
  uint64_t v139 = v57;
  uint64_t v58 = v135;
  uint64_t v140 = v132;
  uint64_t v141 = v134;
  uint64_t v142 = v131;
  uint64_t v143 = v130;
  uint64_t v144 = v45;
  uint64_t v145 = v46;
  uint64_t v146 = v47;
  uint64_t v147 = v48;
  uint64_t v148 = v135;
  uint64_t v149 = v49;
  uint64_t v59 = v123;
  uint64_t v150 = v50;
  uint64_t v151 = v123;
  uint64_t v60 = v122;
  uint64_t v152 = v41;
  uint64_t v153 = v122;
  uint64_t v61 = type metadata accessor for NewAndFeaturedAction.ItemAppearedCodingKeys();
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v88 = v61;
  uint64_t v86 = v62;
  uint64_t v90 = sub_24EC22F50();
  uint64_t v89 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  char v87 = (char *)&v86 - v63;
  uint64_t v64 = *(v120 - 1);
  MEMORY[0x270FA5388](v65);
  uint64_t v67 = (char *)&v86 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = v129;
  uint64_t v137 = v56;
  uint64_t v138 = v133;
  uint64_t v139 = v154;
  uint64_t v140 = v132;
  uint64_t v141 = v134;
  uint64_t v142 = v131;
  uint64_t v143 = v130;
  uint64_t v144 = v128;
  uint64_t v145 = v127;
  uint64_t v146 = v126;
  uint64_t v147 = v48;
  uint64_t v148 = v58;
  uint64_t v149 = v121;
  uint64_t v150 = v50;
  uint64_t v151 = v59;
  uint64_t v152 = v41;
  uint64_t v153 = v60;
  type metadata accessor for NewAndFeaturedAction.CodingKeys();
  swift_getWitnessTable();
  uint64_t v68 = sub_24EC22F50();
  uint64_t v134 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v70 = (char *)&v86 - v69;
  __swift_project_boxed_opaque_existential_1(v116, v116[3]);
  sub_24EC23050();
  (*(void (**)(char *, uint64_t, void *))(v64 + 16))(v67, v117, v120);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v73 = v95;
      char v74 = v91;
      uint64_t v75 = v154;
      (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v91, v67, v154);
      LOBYTE(v136) = 1;
      char v76 = v93;
      sub_24EC22EC0();
      uint64_t v77 = v97;
      sub_24EC22F40();
      (*(void (**)(char *, uint64_t))(v96 + 8))(v76, v77);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v75);
      break;
    case 2u:
      uint64_t v78 = v99;
      uint64_t v79 = v98;
      uint64_t v80 = v100;
      (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v98, v67, v100);
      LOBYTE(v136) = 2;
      long long v81 = v103;
      sub_24EC22EC0();
      swift_getWitnessTable();
      uint64_t v82 = v105;
      sub_24EC22F40();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v81, v82);
      (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v80);
      break;
    case 3u:
      LOBYTE(v136) = 3;
      uint64_t v83 = v106;
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v107 + 8))(v83, v108);
      break;
    case 4u:
      LOBYTE(v136) = 4;
      uint64_t v84 = v111;
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v112 + 8))(v84, v113);
      break;
    default:
      LOBYTE(v136) = 0;
      uint64_t v71 = v87;
      sub_24EC22EC0();
      uint64_t v72 = v90;
      sub_24EC22F30();
      (*(void (**)(char *, uint64_t))(v89 + 8))(v71, v72);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v134 + 8))(v70, v68);
}

uint64_t type metadata accessor for NewAndFeaturedAction.ViewDidAppearCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for NewAndFeaturedAction.UpdateLazySectionDescriptorsCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for NewAndFeaturedAction.LoadedDescriptorCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for NewAndFeaturedAction.ItemTappedCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for NewAndFeaturedAction.ItemAppearedCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for NewAndFeaturedAction.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t NewAndFeaturedAction.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v172 = a8;
  uint64_t v155 = a1;
  uint64_t v137 = a9;
  uint64_t v191 = a20;
  uint64_t v170 = a19;
  uint64_t v171 = a18;
  uint64_t v169 = a17;
  uint64_t v168 = a16;
  uint64_t v167 = a15;
  uint64_t v160 = a14;
  uint64_t v165 = a13;
  uint64_t v162 = a10;
  *(void *)&long long v175 = a2;
  *((void *)&v175 + 1) = a3;
  uint64_t v156 = a2;
  uint64_t v166 = a3;
  *(void *)&long long v176 = a4;
  *((void *)&v176 + 1) = a5;
  uint64_t v177 = a6;
  uint64_t v178 = a7;
  uint64_t v158 = a6;
  uint64_t v159 = a7;
  uint64_t v179 = a8;
  uint64_t v180 = a10;
  uint64_t v181 = a11;
  uint64_t v182 = a12;
  uint64_t v163 = a11;
  uint64_t v164 = a12;
  uint64_t v183 = a13;
  uint64_t v184 = a14;
  uint64_t v185 = a15;
  uint64_t v186 = a16;
  uint64_t v187 = a17;
  uint64_t v188 = a18;
  uint64_t v189 = a19;
  uint64_t v190 = a20;
  uint64_t v148 = type metadata accessor for NewAndFeaturedAction.ViewDidAppearCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v131 = sub_24EC22EB0();
  uint64_t v130 = *(void *)(v131 - 8);
  MEMORY[0x270FA5388](v131);
  uint64_t v135 = (char *)&v118 - v26;
  *(void *)&long long v175 = a2;
  *((void *)&v175 + 1) = a3;
  *(void *)&long long v176 = a4;
  *((void *)&v176 + 1) = a5;
  uint64_t v157 = a4;
  uint64_t v161 = a5;
  uint64_t v177 = a6;
  uint64_t v178 = a7;
  uint64_t v27 = v172;
  uint64_t v179 = v172;
  uint64_t v180 = a10;
  uint64_t v181 = a11;
  uint64_t v182 = a12;
  uint64_t v183 = a13;
  uint64_t v184 = a14;
  uint64_t v185 = a15;
  uint64_t v186 = a16;
  uint64_t v187 = a17;
  uint64_t v188 = a18;
  uint64_t v189 = a19;
  uint64_t v190 = a20;
  uint64_t updated = type metadata accessor for NewAndFeaturedAction.UpdateLazySectionDescriptorsCodingKeys();
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v146 = updated;
  uint64_t v145 = v29;
  uint64_t v128 = sub_24EC22EB0();
  uint64_t v126 = *(void *)(v128 - 8);
  MEMORY[0x270FA5388](v128);
  uint64_t v134 = (char *)&v118 - v30;
  uint64_t v31 = v156;
  *(void *)&long long v175 = v156;
  *((void *)&v175 + 1) = v166;
  *(void *)&long long v176 = a4;
  *((void *)&v176 + 1) = a5;
  uint64_t v32 = v158;
  uint64_t v33 = v159;
  uint64_t v177 = v158;
  uint64_t v178 = v159;
  uint64_t v179 = v27;
  uint64_t v180 = a10;
  uint64_t v181 = v163;
  uint64_t v182 = v164;
  uint64_t v183 = a13;
  uint64_t v184 = a14;
  uint64_t v34 = v168;
  uint64_t v185 = a15;
  uint64_t v186 = v168;
  uint64_t v35 = v169;
  uint64_t v187 = v169;
  uint64_t v188 = a18;
  uint64_t v36 = v170;
  uint64_t v189 = v170;
  uint64_t v190 = v191;
  uint64_t v37 = type metadata accessor for NewAndFeaturedAction.LoadedDescriptorCodingKeys();
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v144 = v37;
  uint64_t v143 = v38;
  uint64_t v129 = sub_24EC22EB0();
  uint64_t v127 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129);
  uint64_t v138 = (char *)&v118 - v39;
  *(void *)&long long v175 = v31;
  *((void *)&v175 + 1) = v166;
  *(void *)&long long v176 = v157;
  *((void *)&v176 + 1) = v161;
  uint64_t v177 = v32;
  uint64_t v178 = v33;
  uint64_t v40 = v162;
  uint64_t v179 = v172;
  uint64_t v180 = v162;
  uint64_t v41 = v163;
  uint64_t v42 = v164;
  uint64_t v181 = v163;
  uint64_t v182 = v164;
  uint64_t v183 = v165;
  uint64_t v184 = v160;
  uint64_t v185 = v167;
  uint64_t v186 = v34;
  uint64_t v187 = v35;
  uint64_t v188 = v171;
  uint64_t v189 = v36;
  uint64_t v190 = v191;
  uint64_t v43 = type metadata accessor for NewAndFeaturedAction.ItemTappedCodingKeys();
  uint64_t v44 = swift_getWitnessTable();
  uint64_t v142 = v43;
  uint64_t v141 = v44;
  uint64_t v125 = sub_24EC22EB0();
  uint64_t v123 = *(void *)(v125 - 8);
  MEMORY[0x270FA5388](v125);
  uint64_t v133 = (char *)&v118 - v45;
  uint64_t v46 = v166;
  *(void *)&long long v175 = v156;
  *((void *)&v175 + 1) = v166;
  uint64_t v47 = v157;
  uint64_t v48 = v161;
  *(void *)&long long v176 = v157;
  *((void *)&v176 + 1) = v161;
  uint64_t v177 = v158;
  uint64_t v178 = v159;
  uint64_t v49 = v172;
  uint64_t v179 = v172;
  uint64_t v180 = v40;
  uint64_t v181 = v41;
  uint64_t v182 = v42;
  uint64_t v50 = v165;
  uint64_t v51 = v160;
  uint64_t v183 = v165;
  uint64_t v184 = v160;
  uint64_t v52 = v167;
  uint64_t v185 = v167;
  uint64_t v186 = v168;
  uint64_t v53 = v171;
  uint64_t v187 = v169;
  uint64_t v188 = v171;
  uint64_t v189 = v170;
  uint64_t v190 = v191;
  uint64_t v54 = type metadata accessor for NewAndFeaturedAction.ItemAppearedCodingKeys();
  uint64_t v55 = swift_getWitnessTable();
  uint64_t v140 = v54;
  uint64_t v139 = v55;
  uint64_t v124 = sub_24EC22EB0();
  uint64_t v122 = *(void *)(v124 - 8);
  MEMORY[0x270FA5388](v124);
  uint64_t v132 = (char *)&v118 - v56;
  uint64_t v57 = v156;
  *(void *)&long long v175 = v156;
  *((void *)&v175 + 1) = v46;
  *(void *)&long long v176 = v47;
  *((void *)&v176 + 1) = v48;
  uint64_t v58 = v158;
  uint64_t v59 = v159;
  uint64_t v177 = v158;
  uint64_t v178 = v159;
  uint64_t v179 = v49;
  uint64_t v180 = v162;
  uint64_t v181 = v163;
  uint64_t v182 = v164;
  uint64_t v183 = v50;
  uint64_t v184 = v51;
  uint64_t v60 = v168;
  uint64_t v185 = v52;
  uint64_t v186 = v168;
  uint64_t v61 = v169;
  uint64_t v187 = v169;
  uint64_t v188 = v53;
  uint64_t v62 = v170;
  uint64_t v63 = v191;
  uint64_t v189 = v170;
  uint64_t v190 = v191;
  *(void *)&long long v152 = type metadata accessor for NewAndFeaturedAction.CodingKeys();
  uint64_t v153 = swift_getWitnessTable();
  uint64_t v151 = sub_24EC22EB0();
  uint64_t v149 = *(void *)(v151 - 8);
  MEMORY[0x270FA5388](v151);
  uint64_t v65 = (char *)&v118 - v64;
  *(void *)&long long v175 = v57;
  *((void *)&v175 + 1) = v166;
  *(void *)&long long v176 = v157;
  *((void *)&v176 + 1) = v161;
  uint64_t v177 = v58;
  uint64_t v178 = v59;
  uint64_t v179 = v172;
  uint64_t v180 = v162;
  uint64_t v181 = v163;
  uint64_t v182 = v164;
  uint64_t v183 = v165;
  uint64_t v184 = v51;
  uint64_t v185 = v167;
  uint64_t v186 = v60;
  uint64_t v187 = v61;
  uint64_t v188 = v171;
  uint64_t v189 = v62;
  uint64_t v190 = v63;
  uint64_t v66 = type metadata accessor for NewAndFeaturedAction();
  uint64_t v136 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v68 = (char *)&v118 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v69);
  uint64_t v71 = (char *)&v118 - v70;
  MEMORY[0x270FA5388](v72);
  char v74 = (uint64_t *)((char *)&v118 - v73);
  MEMORY[0x270FA5388](v75);
  uint64_t v77 = (char *)&v118 - v76;
  __swift_project_boxed_opaque_existential_1(v155, v155[3]);
  uint64_t v150 = v65;
  uint64_t v78 = v154;
  sub_24EC23040();
  if (v78) {
    goto LABEL_7;
  }
  uint64_t v119 = v74;
  uint64_t v121 = v71;
  uint64_t v120 = v68;
  uint64_t v153 = (uint64_t)v77;
  uint64_t v154 = v66;
  uint64_t v79 = v191;
  uint64_t v80 = v160;
  uint64_t v81 = v161;
  uint64_t v82 = v150;
  *(void *)&long long v175 = sub_24EC22EA0();
  sub_24EC22B40();
  swift_getWitnessTable();
  *(void *)&long long v173 = sub_24EC22CD0();
  *((void *)&v173 + 1) = v83;
  *(void *)&long long v174 = v84;
  *((void *)&v174 + 1) = v85;
  sub_24EC22CC0();
  swift_getWitnessTable();
  sub_24EC22C30();
  if (v175 == 5 || (long long v152 = v173, v175 = v173, v176 = v174, (sub_24EC22C50() & 1) == 0))
  {
    uint64_t v92 = sub_24EC22D50();
    swift_allocError();
    uint64_t v94 = v93;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269946108);
    *uint64_t v94 = v154;
    uint64_t v95 = v82;
    uint64_t v96 = v151;
    sub_24EC22E10();
    sub_24EC22D40();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v92 - 8) + 104))(v94, *MEMORY[0x263F8DCB0], v92);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v149 + 8))(v95, v96);
LABEL_7:
    uint64_t v97 = v155;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
  }
  uint64_t v86 = v80;
  uint64_t v87 = v159;
  uint64_t v88 = v172;
  switch((int)v172)
  {
    case 1:
      LOBYTE(v175) = 1;
      uint64_t v99 = v133;
      uint64_t v100 = v151;
      sub_24EC22E00();
      uint64_t v101 = v125;
      sub_24EC22E90();
      uint64_t v102 = v149;
      (*(void (**)(char *, uint64_t))(v123 + 8))(v99, v101);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v82, v100);
      uint64_t v117 = v121;
      uint64_t v114 = v154;
      swift_storeEnumTagMultiPayload();
      uint64_t v115 = v136;
      uint64_t v116 = v153;
      (*(void (**)(uint64_t, char *, uint64_t))(v136 + 32))(v153, v117, v114);
      goto LABEL_14;
    case 2:
      LOBYTE(v175) = 2;
      sub_24EC22E00();
      *(void *)&long long v175 = v156;
      *((void *)&v175 + 1) = v166;
      *(void *)&long long v176 = v157;
      *((void *)&v176 + 1) = v81;
      uint64_t v177 = v158;
      uint64_t v178 = v88;
      uint64_t v179 = v87;
      uint64_t v180 = v162;
      uint64_t v181 = v163;
      uint64_t v182 = v164;
      uint64_t v183 = v165;
      uint64_t v184 = v86;
      uint64_t v185 = v167;
      uint64_t v186 = v168;
      uint64_t v187 = v169;
      uint64_t v188 = v170;
      uint64_t v189 = v171;
      uint64_t v190 = v79;
      sub_24EC22080();
      swift_getWitnessTable();
      uint64_t v107 = v120;
      uint64_t v108 = v129;
      uint64_t v109 = v138;
      sub_24EC22E90();
      (*(void (**)(char *, uint64_t))(v127 + 8))(v109, v108);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v149 + 8))(v82, v151);
      uint64_t v114 = v154;
      swift_storeEnumTagMultiPayload();
      uint64_t v115 = v136;
      uint64_t v116 = v153;
      (*(void (**)(uint64_t, char *, uint64_t))(v136 + 32))(v153, v107, v114);
      goto LABEL_14;
    case 3:
      LOBYTE(v175) = 3;
      uint64_t v103 = v134;
      uint64_t v104 = v151;
      sub_24EC22E00();
      (*(void (**)(char *, uint64_t))(v126 + 8))(v103, v128);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v149 + 8))(v82, v104);
      uint64_t v116 = v153;
      uint64_t v114 = v154;
      goto LABEL_13;
    case 4:
      LOBYTE(v175) = 4;
      uint64_t v105 = v135;
      uint64_t v106 = v151;
      sub_24EC22E00();
      (*(void (**)(char *, uint64_t))(v130 + 8))(v105, v131);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v149 + 8))(v82, v106);
      uint64_t v116 = v153;
      uint64_t v114 = v154;
LABEL_13:
      swift_storeEnumTagMultiPayload();
      uint64_t v110 = v155;
      uint64_t v111 = v137;
      uint64_t v115 = v136;
      break;
    default:
      LOBYTE(v175) = 0;
      uint64_t v89 = v132;
      uint64_t v90 = v151;
      sub_24EC22E00();
      uint64_t v91 = v124;
      uint64_t v112 = sub_24EC22E80();
      (*(void (**)(char *, uint64_t))(v122 + 8))(v89, v91);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v149 + 8))(v82, v90);
      uint64_t v113 = v119;
      *uint64_t v119 = v112;
      uint64_t v114 = v154;
      swift_storeEnumTagMultiPayload();
      uint64_t v115 = v136;
      uint64_t v116 = v153;
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v136 + 32))(v153, v113, v114);
LABEL_14:
      uint64_t v110 = v155;
      uint64_t v111 = v137;
      break;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v115 + 32))(v111, v116, v114);
  uint64_t v97 = v110;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
}

uint64_t type metadata accessor for NewAndFeaturedAction()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24EBFCEBC@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return NewAndFeaturedAction.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a2[6], a2[7], a2[8], a3, a2[9], a2[10], a2[11], a2[12], a2[13], a2[14], a2[15], a2[16], a2[17], a2[18],
           a2[19]);
}

uint64_t sub_24EBFCF18(void *a1, void *a2)
{
  return NewAndFeaturedAction.encode(to:)(a1, a2);
}

uint64_t NewAndFeaturedAction.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 152);
  long long v5 = *(_OWORD *)(a2 + 16);
  uint64_t v24 = *(void *)(a2 + 32);
  long long v22 = *(_OWORD *)(a2 + 40);
  long long v23 = v5;
  long long v25 = v22;
  int8x16_t v26 = vextq_s8(*(int8x16_t *)(a2 + 56), *(int8x16_t *)(a2 + 56), 8uLL);
  long long v27 = *(_OWORD *)(a2 + 72);
  long long v28 = *(_OWORD *)(a2 + 88);
  long long v29 = *(_OWORD *)(a2 + 104);
  long long v21 = *(_OWORD *)(a2 + 120);
  long long v30 = v21;
  int8x16_t v31 = vextq_s8(*(int8x16_t *)(a2 + 136), *(int8x16_t *)(a2 + 136), 8uLL);
  uint64_t v32 = v4;
  uint64_t v6 = sub_24EC22080();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = v22;
  uint64_t v11 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v19 + 16))(v18, v2, a2, v16);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v18, v10);
      sub_24EC23000();
      sub_24EC22A20();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      break;
    case 2u:
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v18, v6);
      sub_24EC23000();
      swift_getWitnessTable();
      sub_24EC22A20();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      break;
    case 3u:
    case 4u:
      goto LABEL_5;
    default:
      sub_24EC23000();
LABEL_5:
      uint64_t result = sub_24EC23000();
      break;
  }
  return result;
}

uint64_t static NewAndFeaturedAction.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v77 = a8;
  uint64_t v78 = a5;
  uint64_t v79 = a7;
  uint64_t v72 = a2;
  uint64_t v71 = a1;
  uint64_t v75 = a20;
  uint64_t v76 = a19;
  uint64_t v73 = a18;
  uint64_t v74 = a17;
  uint64_t v80 = a16;
  uint64_t v81 = a3;
  uint64_t v82 = a4;
  uint64_t v83 = a5;
  uint64_t v84 = a6;
  uint64_t v85 = a7;
  uint64_t v86 = a9;
  uint64_t v87 = a8;
  uint64_t v88 = a10;
  uint64_t v89 = a11;
  uint64_t v90 = a12;
  uint64_t v91 = a13;
  uint64_t v92 = a14;
  uint64_t v93 = a15;
  uint64_t v94 = a16;
  uint64_t v95 = a17;
  uint64_t v96 = a19;
  uint64_t v97 = a18;
  uint64_t v98 = a20;
  uint64_t v68 = sub_24EC22080();
  uint64_t v67 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v56 = (char *)&v54 - v23;
  uint64_t v66 = *(void *)(a6 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v55 = (char *)&v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = a3;
  uint64_t v81 = a3;
  uint64_t v82 = a4;
  uint64_t v65 = a4;
  uint64_t v83 = v78;
  uint64_t v84 = a6;
  uint64_t v69 = a6;
  uint64_t v85 = v79;
  uint64_t v86 = v77;
  uint64_t v63 = a9;
  uint64_t v87 = a9;
  uint64_t v88 = a10;
  uint64_t v57 = a10;
  uint64_t v58 = a11;
  uint64_t v89 = a11;
  uint64_t v90 = a12;
  uint64_t v59 = a12;
  uint64_t v60 = a13;
  uint64_t v91 = a13;
  uint64_t v92 = a14;
  uint64_t v61 = a14;
  uint64_t v62 = a15;
  uint64_t v93 = a15;
  uint64_t v94 = v80;
  uint64_t v95 = v74;
  uint64_t v96 = v73;
  uint64_t v97 = v76;
  uint64_t v98 = v75;
  uint64_t v26 = type metadata accessor for NewAndFeaturedAction();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  long long v29 = (char *)&v54 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v54 - v31;
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (uint64_t *)((char *)&v54 - v34);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v37 = *(void *)(TupleTypeMetadata2 - 8);
  double v38 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v40 = (char *)&v54 - v39;
  uint64_t v42 = (uint64_t *)((char *)&v54 + *(int *)(v41 + 48) - v39);
  uint64_t v70 = v27;
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, double))(v27 + 16);
  v43((char *)&v54 - v39, v71, v26, v38);
  ((void (*)(void *, uint64_t, uint64_t))v43)(v42, v72, v26);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      ((void (*)(char *, char *, uint64_t))v43)(v32, v40, v26);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v45 = v66;
        uint64_t v46 = v55;
        uint64_t v47 = v69;
        (*(void (**)(char *, void *, uint64_t))(v66 + 32))(v55, v42, v69);
        char v44 = sub_24EC22A30();
        uint64_t v48 = *(void (**)(char *, uint64_t))(v45 + 8);
        v48(v46, v47);
        v48(v32, v47);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v66 + 8))(v32, v69);
      goto LABEL_15;
    case 2u:
      ((void (*)(char *, char *, uint64_t))v43)(v29, v40, v26);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v49 = v67;
        uint64_t v50 = v56;
        uint64_t v51 = v68;
        (*(void (**)(char *, void *, uint64_t))(v67 + 32))(v56, v42, v68);
        char v44 = sub_24EC22030();
        uint64_t v52 = *(void (**)(char *, uint64_t))(v49 + 8);
        v52(v50, v51);
        v52(v29, v51);
LABEL_12:
        uint64_t v37 = v70;
        TupleTypeMetadata2 = v26;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v67 + 8))(v29, v68);
LABEL_15:
        char v44 = 0;
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(v40, TupleTypeMetadata2);
      return v44 & 1;
    case 3u:
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_15;
      }
      goto LABEL_11;
    case 4u:
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_15;
      }
LABEL_11:
      char v44 = 1;
      goto LABEL_12;
    default:
      ((void (*)(void *, char *, uint64_t))v43)(v35, v40, v26);
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_15;
      }
      char v44 = *v35 == *v42;
      goto LABEL_12;
  }
}

uint64_t NewAndFeaturedAction.hashValue.getter(uint64_t a1)
{
  sub_24EC22FF0();
  NewAndFeaturedAction.hash(into:)((uint64_t)v3, a1);
  return sub_24EC23030();
}

uint64_t sub_24EBFDA0C(uint64_t a1, uint64_t a2)
{
  sub_24EC22FF0();
  NewAndFeaturedAction.hash(into:)((uint64_t)v4, a2);
  return sub_24EC23030();
}

uint64_t sub_24EBFDA50()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EBFDA6C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return static NewAndFeaturedAction.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7], a3[8], a3[9], a3[10], a3[11], a3[12], a3[13], a3[14], a3[15], a3[16], a3[17], a3[18],
           a3[19]) & 1;
}

uint64_t sub_24EBFDAC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 152);
}

uint64_t sub_24EBFDAC8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24EC22080();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_24EBFDC00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = sub_24EC22080();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *))(*(void *)(*(void *)(a3 + 40) - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
  }
  return a1;
}

uint64_t sub_24EBFDDA8(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v6 = sub_24EC22080();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  else if (result == 1)
  {
    int v5 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a2 + 40) - 8) + 8);
    return v5(a1);
  }
  return result;
}

void *sub_24EBFDEC0(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v7 = sub_24EC22080();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(void *, const void *))(*(void *)(*(void *)(a3 + 40) - 8) + 16))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_24EBFE024(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = *(void *)(a3 - 8);
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, a3);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = sub_24EC22080();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(void *, const void *))(*(void *)(*(void *)(a3 + 40) - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

void *sub_24EBFE1DC(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v7 = sub_24EC22080();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(void *, const void *))(*(void *)(*(void *)(a3 + 40) - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_24EBFE340(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = *(void *)(a3 - 8);
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, a3);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = sub_24EC22080();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(void *, const void *))(*(void *)(*(void *)(a3 + 40) - 8) + 32))(a1, a2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

unsigned char *sub_24EBFE4F8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBFE5C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

unsigned char *sub_24EBFE5F0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EBFE68CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EBFE6B4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EBFE6D0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EBFE6EC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EBFE708()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EBFE724()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EBFE740()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EBFE75C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EBFE778()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EBFE794()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EBFE7B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EBFE7CC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EBFE7E8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EBFE804()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EBFE820()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EBFE83C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EBFE858()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EBFE874()
{
  return 5;
}

uint64_t sub_24EBFE87C()
{
  return 0x7865646E69;
}

uint64_t sub_24EBFE890()
{
  return 0x6E6564496D657469;
}

uint64_t BrowseItemReferenceType.rawValue.getter(char a1)
{
  return *(void *)&aEditoriaeditor_2[8 * a1];
}

uint64_t sub_24EBFE8D8(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = BrowseItemReferenceType.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == BrowseItemReferenceType.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_24EC22F70();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24EBFE964@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s15FitnessBrowsing23BrowseItemReferenceTypeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_24EBFE994@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = BrowseItemReferenceType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_24EBFE9C0()
{
  return sub_24EC22B00();
}

uint64_t sub_24EBFEA20()
{
  return sub_24EC22AF0();
}

uint64_t sub_24EBFEA70()
{
  char v1 = *v0;
  sub_24EC22FF0();
  BrowseItemReferenceType.rawValue.getter(v1);
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  return sub_24EC23030();
}

uint64_t sub_24EBFEAD4()
{
  BrowseItemReferenceType.rawValue.getter(*v0);
  sub_24EC22AB0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EBFEB28()
{
  char v1 = *v0;
  sub_24EC22FF0();
  BrowseItemReferenceType.rawValue.getter(v1);
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  return sub_24EC23030();
}

uint64_t _s15FitnessBrowsing23BrowseItemReferenceTypeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_24EC22DF0();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

unint64_t sub_24EBFEBD8()
{
  unint64_t result = qword_269948440;
  if (!qword_269948440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948440);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BrowseItemReferenceType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EBFECF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseItemReferenceType()
{
  return &type metadata for BrowseItemReferenceType;
}

unint64_t sub_24EBFED30()
{
  unint64_t result = qword_269948448;
  if (!qword_269948448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948448);
  }
  return result;
}

uint64_t sub_24EBFED88(char a1)
{
  return *(void *)&aIdle_1[8 * a1];
}

uint64_t sub_24EBFEDA8(char a1)
{
  if (!a1) {
    return 0x746E65746E6F63;
  }
  if (a1 == 1) {
    return 0xD000000000000016;
  }
  return 0xD000000000000010;
}

uint64_t sub_24EBFEE04()
{
  return sub_24EBFED88(*v0);
}

uint64_t sub_24EBFEE0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EC03320(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBFEE34(uint64_t a1)
{
  unint64_t v2 = sub_24EC00B90();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBFEE70(uint64_t a1)
{
  unint64_t v2 = sub_24EC00B90();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBFEEB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EC034C4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EBFEEDC(uint64_t a1)
{
  unint64_t v2 = sub_24EC00C8C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBFEF18(uint64_t a1)
{
  unint64_t v2 = sub_24EC00C8C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBFEF54()
{
  return sub_24EBFEDA8(*v0);
}

uint64_t sub_24EBFEF5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EC03558(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EBFEF84(uint64_t a1)
{
  unint64_t v2 = sub_24EC00C38();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBFEFC0(uint64_t a1)
{
  unint64_t v2 = sub_24EC00C38();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBFEFFC(uint64_t a1)
{
  unint64_t v2 = sub_24EC00BE4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBFF038(uint64_t a1)
{
  unint64_t v2 = sub_24EC00BE4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EBFF074(uint64_t a1)
{
  unint64_t v2 = sub_24EC00CE0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EBFF0B0(uint64_t a1)
{
  unint64_t v2 = sub_24EC00CE0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseLoadState.preferredInsetBehavior.getter()
{
  uint64_t State = type metadata accessor for BrowseLoadState();
  MEMORY[0x270FA5388](State);
  int v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EC00ACC(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = 0;
  unsigned int v6 = type metadata accessor for BrowseLoadState;
  if ((EnumCaseMultiPayload - 2) >= 2)
  {
    if (EnumCaseMultiPayload)
    {
      char v7 = v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269946780) + 48)];
      swift_bridgeObjectRelease();
      uint64_t v5 = v7 & 1;
      unsigned int v6 = type metadata accessor for BrowseContent;
    }
    sub_24EC00B30((uint64_t)v3, (uint64_t (*)(void))v6);
  }
  return v5;
}

uint64_t BrowseLoadState.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269948450);
  uint64_t v37 = *(void *)(v2 - 8);
  uint64_t v38 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v35 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269948458);
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v40 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for BrowseContent();
  MEMORY[0x270FA5388](v36);
  uint64_t v39 = (uint64_t)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269948460);
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269948468);
  uint64_t v32 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for BrowseLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_269948470);
  uint64_t v45 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EC00B90();
  sub_24EC23050();
  sub_24EC00ACC(v46, (uint64_t)v15);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946780);
      char v22 = v15[*(int *)(v21 + 48)];
      uint64_t v23 = *(void *)&v15[*(int *)(v21 + 64)];
      uint64_t v24 = (uint64_t)v15;
      uint64_t v25 = v39;
      sub_24EC00D34(v24, v39, (uint64_t (*)(void))type metadata accessor for BrowseContent);
      LOBYTE(v47) = 2;
      sub_24EC00C38();
      uint64_t v26 = v40;
      uint64_t v27 = v43;
      sub_24EC22EC0();
      LOBYTE(v47) = 0;
      sub_24EC00E78(&qword_269948490, (void (*)(uint64_t))type metadata accessor for BrowseContent);
      uint64_t v28 = v42;
      uint64_t v29 = v44;
      sub_24EC22F40();
      if (v29)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v26, v28);
        sub_24EC00B30(v25, (uint64_t (*)(void))type metadata accessor for BrowseContent);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v17, v27);
      }
      else
      {
        LOBYTE(v47) = v22;
        char v48 = 1;
        sub_24EBD0CC0();
        sub_24EC22EF0();
        uint64_t v47 = v23;
        char v48 = 2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269948498);
        sub_24EC00D9C(&qword_2699484A0, &qword_2699484A8);
        sub_24EC22F40();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v26, v28);
        sub_24EC00B30(v25, (uint64_t (*)(void))type metadata accessor for BrowseContent);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v17, v27);
        uint64_t result = swift_bridgeObjectRelease();
      }
      break;
    case 2u:
      LOBYTE(v47) = 0;
      sub_24EC00CE0();
      uint64_t v30 = v43;
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v10);
      goto LABEL_9;
    case 3u:
      LOBYTE(v47) = 3;
      sub_24EC00BE4();
      uint64_t v31 = v35;
      uint64_t v30 = v43;
      sub_24EC22EC0();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v31, v38);
LABEL_9:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v17, v30);
      break;
    default:
      LOBYTE(v47) = 1;
      sub_24EC00C8C();
      uint64_t v18 = v43;
      sub_24EC22EC0();
      uint64_t v19 = v34;
      sub_24EC22F00();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v19);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v17, v18);
      break;
  }
  return result;
}

uint64_t BrowseLoadState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699484C0);
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v52 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v55 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699484C8);
  uint64_t v56 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v59 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699484D0);
  uint64_t v46 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v58 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699484D8);
  uint64_t v47 = *(void *)(v7 - 8);
  uint64_t v48 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v54 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699484E0);
  uint64_t v57 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for BrowseLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (uint64_t *)((char *)&v44 - v16);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v44 - v19;
  uint64_t v21 = a1[3];
  uint64_t v60 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_24EC00B90();
  uint64_t v22 = (uint64_t)v61;
  sub_24EC23040();
  if (v22) {
    goto LABEL_9;
  }
  uint64_t v44 = v17;
  uint64_t v45 = v14;
  uint64_t v24 = v58;
  uint64_t v23 = v59;
  uint64_t v61 = v20;
  uint64_t v25 = sub_24EC22EA0();
  if (*(void *)(v25 + 16) != 1)
  {
    uint64_t v28 = sub_24EC22D50();
    swift_allocError();
    uint64_t v30 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269946108);
    *uint64_t v30 = State;
    sub_24EC22E10();
    sub_24EC22D40();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, *MEMORY[0x263F8DCB0], v28);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v11, v9);
LABEL_9:
    uint64_t v35 = (uint64_t)v60;
    return __swift_destroy_boxed_opaque_existential_1(v35);
  }
  switch(*(unsigned char *)(v25 + 32))
  {
    case 1:
      char v63 = 1;
      sub_24EC00C8C();
      sub_24EC22E00();
      uint64_t v31 = v49;
      uint64_t v38 = sub_24EC22E50();
      uint64_t v40 = v39;
      (*(void (**)(char *, uint64_t))(v46 + 8))(v24, v31);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v11, v9);
      uint64_t v41 = v44;
      *uint64_t v44 = v38;
      v41[1] = v40;
      swift_storeEnumTagMultiPayload();
      uint64_t v42 = (uint64_t)v41;
      goto LABEL_13;
    case 2:
      char v67 = 2;
      sub_24EC00C38();
      sub_24EC22E00();
      uint64_t v55 = (char *)State;
      uint64_t v58 = v11;
      type metadata accessor for BrowseContent();
      char v66 = 0;
      sub_24EC00E78(&qword_2699484E8, (void (*)(uint64_t))type metadata accessor for BrowseContent);
      uint64_t v32 = (uint64_t)v45;
      uint64_t v33 = v50;
      sub_24EC22E90();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269946780);
      char v65 = 1;
      sub_24EBD0DBC();
      sub_24EC22E40();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269948498);
      char v64 = 2;
      sub_24EC00D9C(&qword_2699484F0, &qword_2699484F8);
      sub_24EC22E90();
      uint64_t v43 = v57;
      (*(void (**)(char *, uint64_t))(v56 + 8))(v23, v33);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v58, v9);
      swift_storeEnumTagMultiPayload();
      uint64_t v42 = v32;
LABEL_13:
      uint64_t v27 = (uint64_t)v61;
      sub_24EC00D34(v42, (uint64_t)v61, (uint64_t (*)(void))type metadata accessor for BrowseLoadState);
      goto LABEL_12;
    case 3:
      char v68 = 3;
      sub_24EC00BE4();
      uint64_t v34 = v55;
      sub_24EC22E00();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v52);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v11, v9);
      uint64_t v27 = (uint64_t)v61;
      goto LABEL_11;
    default:
      char v62 = 0;
      sub_24EC00CE0();
      uint64_t v26 = v54;
      sub_24EC22E00();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v26, v48);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v11, v9);
      uint64_t v27 = (uint64_t)v61;
LABEL_11:
      swift_storeEnumTagMultiPayload();
LABEL_12:
      uint64_t v37 = (uint64_t)v60;
      sub_24EC00D34(v27, v53, (uint64_t (*)(void))type metadata accessor for BrowseLoadState);
      uint64_t v35 = v37;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v35);
}

uint64_t sub_24EC00394@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BrowseLoadState.init(from:)(a1, a2);
}

uint64_t sub_24EC003AC(void *a1)
{
  return BrowseLoadState.encode(to:)(a1);
}

uint64_t BrowseLoadState.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for BrowseContent();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for BrowseLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EC00ACC(v2, (uint64_t)v9);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946780);
      int v12 = v9[*(int *)(v11 + 48)];
      uint64_t v13 = *(void *)&v9[*(int *)(v11 + 64)];
      sub_24EC00D34((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for BrowseContent);
      sub_24EC23000();
      BrowseContent.hash(into:)((uint64_t)a1);
      sub_24EC23010();
      if (v12 != 2) {
        sub_24EC23000();
      }
      sub_24EB7FA1C(a1, v13);
      sub_24EC00B30((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for BrowseContent);
      goto LABEL_7;
    case 2u:
    case 3u:
      uint64_t result = sub_24EC23000();
      break;
    default:
      sub_24EC23000();
      sub_24EC22AB0();
LABEL_7:
      uint64_t result = swift_bridgeObjectRelease();
      break;
  }
  return result;
}

uint64_t BrowseLoadState.hashValue.getter()
{
  sub_24EC22FF0();
  BrowseLoadState.hash(into:)(v1);
  return sub_24EC23030();
}

uint64_t sub_24EC00608()
{
  sub_24EC22FF0();
  BrowseLoadState.hash(into:)(v1);
  return sub_24EC23030();
}

uint64_t sub_24EC0064C()
{
  sub_24EC22FF0();
  BrowseLoadState.hash(into:)(v1);
  return sub_24EC23030();
}

uint64_t _s15FitnessBrowsing15BrowseLoadStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseContent();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for BrowseLoadState();
  uint64_t v8 = MEMORY[0x270FA5388](State);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  int v12 = (uint64_t *)((char *)&v33 - v11);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269948570);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = &v16[*(int *)(v14 + 56)];
  sub_24EC00ACC(a1, (uint64_t)v16);
  sub_24EC00ACC(a2, (uint64_t)v17);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_24EC00ACC((uint64_t)v16, (uint64_t)v10);
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946780);
      uint64_t v21 = *(int *)(v20 + 48);
      int v22 = v10[v21];
      uint64_t v23 = *(int *)(v20 + 64);
      uint64_t v24 = *(void *)&v10[v23];
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        swift_bridgeObjectRelease();
        sub_24EC00B30((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BrowseContent);
        goto LABEL_14;
      }
      int v25 = v17[v21];
      uint64_t v26 = *(void *)&v17[v23];
      sub_24EC00D34((uint64_t)v17, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for BrowseContent);
      char v27 = _s15FitnessBrowsing13BrowseContentO2eeoiySbAC_ACtFZ_0((uint64_t)v10, (uint64_t)v6);
      sub_24EC00B30((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BrowseContent);
      if ((v27 & 1) == 0) {
        goto LABEL_29;
      }
      if (v22 != 2)
      {
        if (v25 != 2 && ((v25 ^ v22) & 1) == 0) {
          goto LABEL_12;
        }
LABEL_29:
        sub_24EC00B30((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for BrowseContent);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
      if (v25 != 2) {
        goto LABEL_29;
      }
LABEL_12:
      char v28 = sub_24EC1C080(v24, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24EC00B30((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for BrowseContent);
      sub_24EC00B30((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for BrowseLoadState);
      return v28 & 1;
    case 2u:
      if (swift_getEnumCaseMultiPayload() == 2) {
        goto LABEL_23;
      }
      goto LABEL_14;
    case 3u:
      if (swift_getEnumCaseMultiPayload() == 3) {
        goto LABEL_23;
      }
      goto LABEL_14;
    default:
      sub_24EC00ACC((uint64_t)v16, (uint64_t)v12);
      uint64_t v19 = *v12;
      uint64_t v18 = v12[1];
      if (swift_getEnumCaseMultiPayload())
      {
        swift_bridgeObjectRelease();
LABEL_14:
        sub_24EC0369C((uint64_t)v16);
        goto LABEL_15;
      }
      if (v19 == *(void *)v17 && v18 == *((void *)v17 + 1))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v30 = sub_24EC22F70();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v30 & 1) == 0)
        {
LABEL_30:
          sub_24EC00B30((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for BrowseLoadState);
LABEL_15:
          char v28 = 0;
          return v28 & 1;
        }
      }
LABEL_23:
      sub_24EC00B30((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for BrowseLoadState);
      char v28 = 1;
      return v28 & 1;
  }
}

uint64_t type metadata accessor for BrowseLoadState()
{
  uint64_t result = qword_26B1D8738;
  if (!qword_26B1D8738) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24EC00ACC(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for BrowseLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 16))(a2, a1, State);
  return a2;
}

uint64_t sub_24EC00B30(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_24EC00B90()
{
  unint64_t result = qword_269948478;
  if (!qword_269948478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948478);
  }
  return result;
}

unint64_t sub_24EC00BE4()
{
  unint64_t result = qword_269948480;
  if (!qword_269948480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948480);
  }
  return result;
}

unint64_t sub_24EC00C38()
{
  unint64_t result = qword_269948488;
  if (!qword_269948488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948488);
  }
  return result;
}

unint64_t sub_24EC00C8C()
{
  unint64_t result = qword_2699484B0;
  if (!qword_2699484B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699484B0);
  }
  return result;
}

unint64_t sub_24EC00CE0()
{
  unint64_t result = qword_2699484B8;
  if (!qword_2699484B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699484B8);
  }
  return result;
}

uint64_t sub_24EC00D34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EC00D9C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269948498);
    sub_24EC00E78(a2, MEMORY[0x263F07A30]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EC00E30()
{
  return sub_24EC00E78(&qword_269948500, (void (*)(uint64_t))type metadata accessor for BrowseLoadState);
}

uint64_t sub_24EC00E78(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for BrowseLoadState(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for BrowseContent();
      int v10 = swift_getEnumCaseMultiPayload();
      if (v10 == 2)
      {
        *a1 = *a2;
        swift_bridgeObjectRetain();
      }
      else if (v10 == 1)
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v11 = a2[2];
        a1[1] = a2[1];
        a1[2] = v11;
        a1[3] = a2[3];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v12 = *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = sub_24EC21D10();
        uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v16(v13, v14, v15);
      }
      else
      {
        uint64_t v17 = type metadata accessor for BrowseArtwork();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
        {
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946778);
          memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          uint64_t v20 = sub_24EC21E00();
          uint64_t v21 = *(void *)(v20 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(a2, 1, v20))
          {
            uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
            memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(v21 + 16))(a1, a2, v20);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(a1, 0, 1, v20);
          }
          uint64_t v23 = *(int *)(v17 + 20);
          uint64_t v24 = (char *)a1 + v23;
          int v25 = (char *)a2 + v23;
          uint64_t v26 = sub_24EC21D30();
          uint64_t v27 = *(void *)(v26 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
          {
            uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
            memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
          }
          (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
        }
        uint64_t v43 = type metadata accessor for EditorialCollectionDetail();
        uint64_t v29 = *(int *)(v43 + 20);
        char v30 = (void *)((char *)a1 + v29);
        uint64_t v31 = (char *)a2 + v29;
        uint64_t v32 = *(void *)((char *)a2 + v29 + 8);
        *char v30 = *(void *)((char *)a2 + v29);
        v30[1] = v32;
        uint64_t v33 = *(void *)((char *)a2 + v29 + 24);
        v30[2] = *(void *)((char *)a2 + v29 + 16);
        v30[3] = v33;
        uint64_t v34 = *(void *)((char *)a2 + v29 + 40);
        v30[4] = *(void *)((char *)a2 + v29 + 32);
        v30[5] = v34;
        uint64_t v35 = *(void *)((char *)a2 + v29 + 56);
        void v30[6] = *(void *)((char *)a2 + v29 + 48);
        v30[7] = v35;
        uint64_t v36 = *(int *)(type metadata accessor for EditorialCollection() + 32);
        uint64_t v41 = &v31[v36];
        uint64_t v42 = (char *)v30 + v36;
        uint64_t v37 = sub_24EC21D30();
        uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v38(v42, v41, v37);
        *(void *)((char *)a1 + *(int *)(v43 + 24)) = *(void *)((char *)a2 + *(int *)(v43 + 24));
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946780);
      *((unsigned char *)a1 + *(int *)(v39 + 48)) = *((unsigned char *)a2 + *(int *)(v39 + 48));
      *(void *)((char *)a1 + *(int *)(v39 + 64)) = *(void *)((char *)a2 + *(int *)(v39 + 64));
      swift_bridgeObjectRetain();
      goto LABEL_22;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
LABEL_22:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t destroy for BrowseLoadState(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 1)
  {
    if (result) {
      return result;
    }
    goto LABEL_17;
  }
  type metadata accessor for BrowseContent();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      goto LABEL_14;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = a1 + *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
      uint64_t v14 = sub_24EC21D10();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
      break;
    case 0:
      uint64_t v4 = type metadata accessor for BrowseArtwork();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
      {
        uint64_t v5 = sub_24EC21E00();
        uint64_t v6 = *(void *)(v5 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5)) {
          (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
        }
        uint64_t v7 = a1 + *(int *)(v4 + 20);
        uint64_t v8 = sub_24EC21D30();
        uint64_t v9 = *(void *)(v8 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
          (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
        }
      }
      uint64_t v10 = a1 + *(int *)(type metadata accessor for EditorialCollectionDetail() + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = v10 + *(int *)(type metadata accessor for EditorialCollection() + 32);
      uint64_t v12 = sub_24EC21D30();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
LABEL_14:
      swift_bridgeObjectRelease();
      break;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269946780);
LABEL_17:
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for BrowseLoadState(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for BrowseContent();
    int v8 = swift_getEnumCaseMultiPayload();
    if (v8 == 2)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else if (v8 == 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v9 = a2[2];
      a1[1] = a2[1];
      a1[2] = v9;
      a1[3] = a2[3];
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v10 = *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_24EC21D10();
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
    }
    else
    {
      uint64_t v15 = type metadata accessor for BrowseArtwork();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946778);
        memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        uint64_t v18 = sub_24EC21E00();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(a2, 1, v18))
        {
          uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
          memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v19 + 16))(a1, a2, v18);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(a1, 0, 1, v18);
        }
        uint64_t v21 = *(int *)(v15 + 20);
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        uint64_t v24 = sub_24EC21D30();
        uint64_t v25 = *(void *)(v24 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
        {
          uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
          memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
      }
      uint64_t v41 = type metadata accessor for EditorialCollectionDetail();
      uint64_t v27 = *(int *)(v41 + 20);
      uint64_t v28 = (void *)((char *)a1 + v27);
      uint64_t v29 = (char *)a2 + v27;
      uint64_t v30 = *(void *)((char *)a2 + v27 + 8);
      *uint64_t v28 = *(void *)((char *)a2 + v27);
      v28[1] = v30;
      uint64_t v31 = *(void *)((char *)a2 + v27 + 24);
      v28[2] = *(void *)((char *)a2 + v27 + 16);
      v28[3] = v31;
      uint64_t v32 = *(void *)((char *)a2 + v27 + 40);
      v28[4] = *(void *)((char *)a2 + v27 + 32);
      v28[5] = v32;
      uint64_t v33 = *(void *)((char *)a2 + v27 + 56);
      v28[6] = *(void *)((char *)a2 + v27 + 48);
      v28[7] = v33;
      uint64_t v34 = *(int *)(type metadata accessor for EditorialCollection() + 32);
      uint64_t v39 = &v29[v34];
      uint64_t v40 = (char *)v28 + v34;
      uint64_t v35 = sub_24EC21D30();
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36(v40, v39, v35);
      *(void *)((char *)a1 + *(int *)(v41 + 24)) = *(void *)((char *)a2 + *(int *)(v41 + 24));
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946780);
    *((unsigned char *)a1 + *(int *)(v37 + 48)) = *((unsigned char *)a2 + *(int *)(v37 + 48));
    *(void *)((char *)a1 + *(int *)(v37 + 64)) = *(void *)((char *)a2 + *(int *)(v37 + 64));
    swift_bridgeObjectRetain();
    goto LABEL_20;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
LABEL_20:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *assignWithCopy for BrowseLoadState(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EC00B30((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for BrowseLoadState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for BrowseContent();
      int v7 = swift_getEnumCaseMultiPayload();
      if (v7 == 2)
      {
        *a1 = *a2;
        swift_bridgeObjectRetain();
      }
      else if (v7 == 1)
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v8 = *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_24EC21D10();
        uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v12(v9, v10, v11);
      }
      else
      {
        uint64_t v13 = type metadata accessor for BrowseArtwork();
        uint64_t v14 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
        {
          uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946778);
          memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          uint64_t v16 = sub_24EC21E00();
          uint64_t v17 = *(void *)(v16 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16))
          {
            uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
            memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(v17 + 16))(a1, a2, v16);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
          }
          uint64_t v19 = *(int *)(v13 + 20);
          uint64_t v20 = (char *)a1 + v19;
          uint64_t v21 = (char *)a2 + v19;
          uint64_t v22 = sub_24EC21D30();
          uint64_t v23 = *(void *)(v22 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
          {
            uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
            memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
          }
          (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
        }
        uint64_t v35 = type metadata accessor for EditorialCollectionDetail();
        uint64_t v25 = *(int *)(v35 + 20);
        uint64_t v26 = (void *)((char *)a1 + v25);
        uint64_t v27 = (char *)a2 + v25;
        *uint64_t v26 = *(void *)((char *)a2 + v25);
        v26[1] = *(void *)((char *)a2 + v25 + 8);
        void v26[2] = *(void *)((char *)a2 + v25 + 16);
        _OWORD v26[3] = *(void *)((char *)a2 + v25 + 24);
        v26[4] = *(void *)((char *)a2 + v25 + 32);
        v26[5] = *(void *)((char *)a2 + v25 + 40);
        v26[6] = *(void *)((char *)a2 + v25 + 48);
        v26[7] = *(void *)((char *)a2 + v25 + 56);
        uint64_t v28 = *(int *)(type metadata accessor for EditorialCollection() + 32);
        uint64_t v33 = &v27[v28];
        uint64_t v34 = (char *)v26 + v28;
        uint64_t v29 = sub_24EC21D30();
        uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v30(v34, v33, v29);
        *(void *)((char *)a1 + *(int *)(v35 + 24)) = *(void *)((char *)a2 + *(int *)(v35 + 24));
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946780);
      *((unsigned char *)a1 + *(int *)(v31 + 48)) = *((unsigned char *)a2 + *(int *)(v31 + 48));
      *(void *)((char *)a1 + *(int *)(v31 + 64)) = *(void *)((char *)a2 + *(int *)(v31 + 64));
      swift_bridgeObjectRetain();
      goto LABEL_21;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
LABEL_21:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *initializeWithTake for BrowseLoadState(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for BrowseContent();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *((void *)a1 + 3) = *((void *)a2 + 3);
      a1[32] = a2[32];
      uint64_t v11 = *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = sub_24EC21D10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_18:
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946780);
        a1[*(int *)(v34 + 48)] = a2[*(int *)(v34 + 48)];
        *(void *)&a1[*(int *)(v34 + 64)] = *(void *)&a2[*(int *)(v34 + 64)];
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      uint64_t v8 = type metadata accessor for BrowseArtwork();
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946778);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        uint64_t v15 = sub_24EC21E00();
        uint64_t v16 = *(void *)(v15 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
        {
          uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
          memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v16 + 32))(a1, a2, v15);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
        }
        uint64_t v18 = *(int *)(v8 + 20);
        uint64_t v19 = &a1[v18];
        uint64_t v20 = &a2[v18];
        uint64_t v21 = sub_24EC21D30();
        uint64_t v22 = *(void *)(v21 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
        {
          uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
          memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      uint64_t v24 = type metadata accessor for EditorialCollectionDetail();
      uint64_t v25 = *(int *)(v24 + 20);
      uint64_t v26 = &a1[v25];
      uint64_t v27 = &a2[v25];
      long long v28 = *(_OWORD *)&a2[v25 + 16];
      *(_OWORD *)uint64_t v26 = *(_OWORD *)&a2[v25];
      *((_OWORD *)v26 + 1) = v28;
      long long v29 = *(_OWORD *)&a2[v25 + 48];
      *((_OWORD *)v26 + 2) = *(_OWORD *)&a2[v25 + 32];
      *((_OWORD *)v26 + 3) = v29;
      uint64_t v30 = *(int *)(type metadata accessor for EditorialCollection() + 32);
      uint64_t v31 = &v26[v30];
      uint64_t v32 = &v27[v30];
      uint64_t v33 = sub_24EC21D30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      *(void *)&a1[*(int *)(v24 + 24)] = *(void *)&a2[*(int *)(v24 + 24)];
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_18;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *assignWithTake for BrowseLoadState(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EC00B30((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for BrowseLoadState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for BrowseContent();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        *a1 = *a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        a1[32] = a2[32];
        uint64_t v11 = *(int *)(type metadata accessor for BrowseGalleryDescriptor() + 32);
        uint64_t v12 = &a1[v11];
        uint64_t v13 = &a2[v11];
        uint64_t v14 = sub_24EC21D10();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_19:
          uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946780);
          a1[*(int *)(v34 + 48)] = a2[*(int *)(v34 + 48)];
          *(void *)&a1[*(int *)(v34 + 64)] = *(void *)&a2[*(int *)(v34 + 64)];
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        uint64_t v8 = type metadata accessor for BrowseArtwork();
        uint64_t v9 = *(void *)(v8 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
        {
          uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946778);
          memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
        }
        else
        {
          uint64_t v15 = sub_24EC21E00();
          uint64_t v16 = *(void *)(v15 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
          {
            uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946768);
            memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v16 + 32))(a1, a2, v15);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
          }
          uint64_t v18 = *(int *)(v8 + 20);
          uint64_t v19 = &a1[v18];
          uint64_t v20 = &a2[v18];
          uint64_t v21 = sub_24EC21D30();
          uint64_t v22 = *(void *)(v21 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
          {
            uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946770);
            memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
        }
        uint64_t v24 = type metadata accessor for EditorialCollectionDetail();
        uint64_t v25 = *(int *)(v24 + 20);
        uint64_t v26 = &a1[v25];
        uint64_t v27 = &a2[v25];
        long long v28 = *(_OWORD *)&a2[v25 + 16];
        *(_OWORD *)uint64_t v26 = *(_OWORD *)&a2[v25];
        *((_OWORD *)v26 + 1) = v28;
        long long v29 = *(_OWORD *)&a2[v25 + 48];
        *((_OWORD *)v26 + 2) = *(_OWORD *)&a2[v25 + 32];
        *((_OWORD *)v26 + 3) = v29;
        uint64_t v30 = *(int *)(type metadata accessor for EditorialCollection() + 32);
        uint64_t v31 = &v26[v30];
        uint64_t v32 = &v27[v30];
        uint64_t v33 = sub_24EC21D30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
        *(void *)&a1[*(int *)(v24 + 24)] = *(void *)&a2[*(int *)(v24 + 24)];
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_19;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_24EC02AF8()
{
  v2[4] = &unk_24EC2ED20;
  uint64_t result = type metadata accessor for BrowseContent();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BrowseLoadState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EC02C78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseLoadState.CodingKeys()
{
  return &type metadata for BrowseLoadState.CodingKeys;
}

ValueMetadata *type metadata accessor for BrowseLoadState.IdleCodingKeys()
{
  return &type metadata for BrowseLoadState.IdleCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for BrowseLoadState.FailedToLoadCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EC02D5CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseLoadState.FailedToLoadCodingKeys()
{
  return &type metadata for BrowseLoadState.FailedToLoadCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for BrowseLoadState.FetchedCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EC02E60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseLoadState.FetchedCodingKeys()
{
  return &type metadata for BrowseLoadState.FetchedCodingKeys;
}

ValueMetadata *type metadata accessor for BrowseLoadState.FetchingCodingKeys()
{
  return &type metadata for BrowseLoadState.FetchingCodingKeys;
}

unint64_t sub_24EC02EAC()
{
  unint64_t result = qword_269948508;
  if (!qword_269948508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948508);
  }
  return result;
}

unint64_t sub_24EC02F04()
{
  unint64_t result = qword_269948510;
  if (!qword_269948510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948510);
  }
  return result;
}

unint64_t sub_24EC02F5C()
{
  unint64_t result = qword_269948518;
  if (!qword_269948518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948518);
  }
  return result;
}

unint64_t sub_24EC02FB4()
{
  unint64_t result = qword_269948520;
  if (!qword_269948520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948520);
  }
  return result;
}

unint64_t sub_24EC0300C()
{
  unint64_t result = qword_269948528;
  if (!qword_269948528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948528);
  }
  return result;
}

unint64_t sub_24EC03064()
{
  unint64_t result = qword_269948530;
  if (!qword_269948530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948530);
  }
  return result;
}

unint64_t sub_24EC030BC()
{
  unint64_t result = qword_269948538;
  if (!qword_269948538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948538);
  }
  return result;
}

unint64_t sub_24EC03114()
{
  unint64_t result = qword_269948540;
  if (!qword_269948540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948540);
  }
  return result;
}

unint64_t sub_24EC0316C()
{
  unint64_t result = qword_269948548;
  if (!qword_269948548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948548);
  }
  return result;
}

unint64_t sub_24EC031C4()
{
  unint64_t result = qword_269948550;
  if (!qword_269948550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948550);
  }
  return result;
}

unint64_t sub_24EC0321C()
{
  unint64_t result = qword_269948558;
  if (!qword_269948558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948558);
  }
  return result;
}

unint64_t sub_24EC03274()
{
  unint64_t result = qword_269948560;
  if (!qword_269948560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948560);
  }
  return result;
}

unint64_t sub_24EC032CC()
{
  unint64_t result = qword_269948568;
  if (!qword_269948568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948568);
  }
  return result;
}

uint64_t sub_24EC03320(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1701602409 && a2 == 0xE400000000000000;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F5464656C696166 && a2 == 0xEC00000064616F4CLL || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656863746566 && a2 == 0xE700000000000000 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x676E696863746566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24EC034C4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24EC03544()
{
  return 0x726F727265;
}

uint64_t sub_24EC03558(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
  if (v3 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024EC31110 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024EC312E0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EC0369C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269948570);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t BrowseMarketingDescriptor.placementIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BrowseMarketingDescriptor.preferredInsetBehavior.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

FitnessBrowsing::BrowseMarketingDescriptor __swiftcall BrowseMarketingDescriptor.init(placementIdentifier:preferredInsetBehavior:)(Swift::String placementIdentifier, FitnessBrowsing::BrowseInsetBehavior_optional preferredInsetBehavior)
{
  *(Swift::String *)uint64_t v2 = placementIdentifier;
  *(FitnessBrowsing::BrowseInsetBehavior_optional *)(v2 + 16) = preferredInsetBehavior;
  result.placementIdentifier = placementIdentifier;
  result.preferredInsetBehavior = preferredInsetBehavior;
  return result;
}

unint64_t sub_24EC03744()
{
  if (*v0) {
    return 0xD000000000000016;
  }
  else {
    return 0xD000000000000013;
  }
}

uint64_t sub_24EC03784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EC04368(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EC037AC(uint64_t a1)
{
  unint64_t v2 = sub_24EC03F3C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EC037E8(uint64_t a1)
{
  unint64_t v2 = sub_24EC03F3C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowseMarketingDescriptor.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269948578);
  uint64_t v9 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EC03F3C();
  sub_24EC23050();
  char v13 = 0;
  sub_24EC22F00();
  if (!v2)
  {
    char v12 = v10;
    char v11 = 1;
    sub_24EBD0CC0();
    sub_24EC22EF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v4);
}

uint64_t BrowseMarketingDescriptor.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269948588);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EC03F3C();
  sub_24EC23040();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v17 = 0;
  uint64_t v9 = sub_24EC22E50();
  uint64_t v11 = v10;
  char v15 = 1;
  sub_24EBD0DBC();
  swift_bridgeObjectRetain();
  sub_24EC22E40();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v12 = v16;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EC03BB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BrowseMarketingDescriptor.init(from:)(a1, a2);
}

uint64_t sub_24EC03BC8(void *a1)
{
  return BrowseMarketingDescriptor.encode(to:)(a1);
}

uint64_t BrowseMarketingDescriptor.hash(into:)()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  if (v1 == 2) {
    return sub_24EC23010();
  }
  sub_24EC23010();
  return sub_24EC23000();
}

uint64_t BrowseMarketingDescriptor.hashValue.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_24EC22FF0();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  sub_24EC23010();
  if (v1 != 2) {
    sub_24EC23000();
  }
  return sub_24EC23030();
}

uint64_t sub_24EC03CFC()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_24EC22FF0();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  sub_24EC23010();
  if (v1 != 2) {
    sub_24EC23000();
  }
  return sub_24EC23030();
}

uint64_t sub_24EC03D98()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  if (v1 == 2) {
    return sub_24EC23010();
  }
  sub_24EC23010();
  return sub_24EC23000();
}

uint64_t sub_24EC03E18()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_24EC22FF0();
  swift_bridgeObjectRetain();
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  sub_24EC23010();
  if (v1 != 2) {
    sub_24EC23000();
  }
  return sub_24EC23030();
}

uint64_t _s15FitnessBrowsing25BrowseMarketingDescriptorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a2 + 16);
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = sub_24EC22F70(), result = 0, (v5 & 1) != 0))
  {
    if (v2 == 2)
    {
      if (v3 != 2) {
        return 0;
      }
    }
    else if (v3 == 2 || ((v3 ^ v2) & 1) != 0)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

unint64_t sub_24EC03F3C()
{
  unint64_t result = qword_269948580;
  if (!qword_269948580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948580);
  }
  return result;
}

unint64_t sub_24EC03F94()
{
  unint64_t result = qword_269948590;
  if (!qword_269948590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948590);
  }
  return result;
}

uint64_t destroy for BrowseMarketingDescriptor()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s15FitnessBrowsing25BrowseMarketingDescriptorVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BrowseMarketingDescriptor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for BrowseMarketingDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for BrowseMarketingDescriptor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BrowseMarketingDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseMarketingDescriptor()
{
  return &type metadata for BrowseMarketingDescriptor;
}

unsigned char *storeEnumTagSinglePayload for BrowseMarketingDescriptor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EC04228);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseMarketingDescriptor.CodingKeys()
{
  return &type metadata for BrowseMarketingDescriptor.CodingKeys;
}

unint64_t sub_24EC04264()
{
  unint64_t result = qword_269948598;
  if (!qword_269948598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269948598);
  }
  return result;
}

unint64_t sub_24EC042BC()
{
  unint64_t result = qword_2699485A0;
  if (!qword_2699485A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699485A0);
  }
  return result;
}

unint64_t sub_24EC04314()
{
  unint64_t result = qword_2699485A8;
  if (!qword_2699485A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699485A8);
  }
  return result;
}

uint64_t sub_24EC04368(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x800000024EC31300 || (sub_24EC22F70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024EC31110)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_24EC22F70();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EC04454()
{
  sub_24EC22AB0();
  return swift_bridgeObjectRelease();
}

FitnessBrowsing::BrowseEditorialGalleryMetricsBehavior_optional __swiftcall BrowseEditorialGalleryMetricsBehavior.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_24EC22DF0();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.value = FitnessBrowsing_BrowseEditorialGalleryMetricsBehavior_trainerTipsQuarantine;
  }
  else {
    v2.value = FitnessBrowsing_BrowseEditorialGalleryMetricsBehavior_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t BrowseEditorialGalleryMetricsBehavior.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000015;
  }
  else {
    return 0x746C7561666564;
  }
}

uint64_t sub_24EC04554(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = BrowseEditorialGalleryMetricsBehavior.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == BrowseEditorialGalleryMetricsBehavior.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_24EC22F70();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24EC045E0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_24EC22DF0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_24EC04640@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = BrowseEditorialGalleryMetricsBehavior.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_24EC0466C()
{
  return sub_24EC22B00();
}

uint64_t sub_24EC046CC()
{
  return sub_24EC22AF0();
}

unint64_t sub_24EC04720()
{
  unint64_t result = qword_2699485B0;
  if (!qword_2699485B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699485B0);
  }
  return result;
}

uint64_t sub_24EC04774()
{
  char v1 = *v0;
  sub_24EC22FF0();
  BrowseEditorialGalleryMetricsBehavior.rawValue.getter(v1);
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  return sub_24EC23030();
}

uint64_t sub_24EC047D8()
{
  return sub_24EC04454();
}

uint64_t sub_24EC047E0()
{
  char v1 = *v0;
  sub_24EC22FF0();
  BrowseEditorialGalleryMetricsBehavior.rawValue.getter(v1);
  sub_24EC22AB0();
  swift_bridgeObjectRelease();
  return sub_24EC23030();
}

unsigned char *storeEnumTagSinglePayload for BrowseEditorialGalleryMetricsBehavior(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EC0490CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseEditorialGalleryMetricsBehavior()
{
  return &type metadata for BrowseEditorialGalleryMetricsBehavior;
}

unint64_t sub_24EC04944()
{
  unint64_t result = qword_2699485B8;
  if (!qword_2699485B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699485B8);
  }
  return result;
}

uint64_t sub_24EC04998(char a1, char a2)
{
  if (*(void *)&aCenter_4[8 * a1] == *(void *)&aCenter_4[8 * a2] && qword_24EC2F760[a1] == qword_24EC2F760[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_24EC22F70();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_24EC04A20(char a1, char a2)
{
  if (*(void *)&aUltraligthin_1[8 * a1] == *(void *)&aUltraligthin_1[8 * a2]
    && *(void *)&aHt_1[8 * a1] == *(void *)&aHt_1[8 * a2])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_24EC22F70();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_24EC04AA8(char a1, char a2)
{
  if (*(void *)&aEditoriaeditor_3[8 * a1] == *(void *)&aEditoriaeditor_3[8 * a2]
    && qword_24EC2F860[a1] == qword_24EC2F860[a2])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_24EC22F70();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t BrowseFeature.environment.getter@<X0>(_OWORD *a1@<X8>)
{
  long long v2 = v1[9];
  long long v3 = v1[11];
  long long v29 = v1[10];
  long long v30 = v3;
  long long v4 = v1[11];
  long long v31 = v1[12];
  long long v5 = v1[5];
  long long v6 = v1[7];
  long long v25 = v1[6];
  long long v7 = v25;
  long long v26 = v6;
  long long v8 = v1[7];
  long long v9 = v1[9];
  long long v27 = v1[8];
  long long v10 = v27;
  long long v28 = v9;
  long long v11 = v1[1];
  long long v12 = v1[3];
  long long v21 = v1[2];
  long long v13 = v21;
  long long v22 = v12;
  long long v14 = v1[3];
  long long v15 = v1[5];
  long long v23 = v1[4];
  long long v16 = v23;
  long long v24 = v15;
  long long v17 = v1[1];
  v20[0] = *v1;
  long long v18 = v20[0];
  v20[1] = v17;
  a1[10] = v29;
  a1[11] = v4;
  a1[12] = v1[12];
  a1[6] = v7;
  a1[7] = v8;
  a1[8] = v10;
  a1[9] = v2;
  a1[2] = v13;
  a1[3] = v14;
  a1[4] = v16;
  a1[5] = v5;
  *a1 = v18;
  a1[1] = v11;
  return sub_24EC130B4((uint64_t)v20);
}

uint64_t sub_24EC04BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      uint64_t result = sub_24EC23000();
      break;
    default:
      sub_24EC23000();
      uint64_t result = sub_24EC22AB0();
      break;
  }
  return result;
}

uint64_t sub_24EC04CD8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_24EC22FF0();
  sub_24EC04BC4((uint64_t)v4, v1, v2);
  return sub_24EC23030();
}

uint64_t sub_24EC04D24(uint64_t a1)
{
  return sub_24EC04BC4(a1, *v1, v1[1]);
}

uint64_t sub_24EC04D2C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_24EC22FF0();
  sub_24EC04BC4((uint64_t)v4, v1, v2);
  return sub_24EC23030();
}

uint64_t sub_24EC04D74(uint64_t *a1, uint64_t a2)
{
  return sub_24EC12778(*a1, a1[1], *(void *)a2, *(void *)(a2 + 8));
}

__n128 BrowseFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v2 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(a2 + 160) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(a2 + 176) = v2;
  *(_OWORD *)(a2 + 192) = *(_OWORD *)(a1 + 192);
  long long v3 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a2 + 112) = v3;
  long long v4 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(a2 + 128) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(a2 + 144) = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v5;
  long long v6 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 80) = v6;
  __n128 result = *(__n128 *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t BrowseFeature.reduce(localState:sharedState:sideEffects:action:)(char *a1, char *a2, unint64_t *a3, uint64_t (*a4)())
{
  uint64_t v412 = a2;
  v413 = a4;
  v407 = a1;
  v408 = a3;
  uint64_t v393 = sub_24EC21D10();
  uint64_t v391 = *(void *)(v393 - 8);
  MEMORY[0x270FA5388](v393);
  uint64_t v380 = v5;
  uint64_t v381 = (char *)&v376 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v390 = (char *)&v376 - v7;
  uint64_t v401 = type metadata accessor for BrowseIdentifier();
  MEMORY[0x270FA5388](v401);
  uint64_t v383 = (uint64_t)&v376 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  v400 = (char **)((char *)&v376 - v10);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699478B0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v404 = (char *)&v376 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24EC21D70();
  v405 = *(void (***)(void *, void *, void))(v13 - 8);
  unint64_t v406 = (void (*)(void, void, void))v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v376 = (char *)&v376 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v398 = (char *)&v376 - v16;
  uint64_t v17 = type metadata accessor for BrowseContent();
  uint64_t v384 = *(void *)(v17 - 8);
  uint64_t v18 = *(void *)(v384 + 64);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v385 = (uint64_t)&v376 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v399 = (uint64_t)&v376 - v20;
  MEMORY[0x270FA5388](v21);
  unint64_t v403 = (unint64_t)&v376 - v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699472F8);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v409 = v23;
  uint64_t v410 = v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v386 = (char *)&v376 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v377 = (char *)&v376 - v27;
  MEMORY[0x270FA5388](v28);
  v397 = (char *)&v376 - v29;
  MEMORY[0x270FA5388](v30);
  uint64_t v378 = (char *)&v376 - v31;
  MEMORY[0x270FA5388](v32);
  v396 = (char *)&v376 - v33;
  MEMORY[0x270FA5388](v34);
  uint64_t v382 = (char *)&v376 - v35;
  MEMORY[0x270FA5388](v36);
  uint64_t v395 = (char *)&v376 - v37;
  MEMORY[0x270FA5388](v38);
  v394 = (char *)&v376 - v39;
  MEMORY[0x270FA5388](v40);
  v392 = (char *)&v376 - v41;
  MEMORY[0x270FA5388](v42);
  uint64_t v389 = (char *)&v376 - v43;
  MEMORY[0x270FA5388](v44);
  uint64_t v387 = (char *)&v376 - v45;
  MEMORY[0x270FA5388](v46);
  uint64_t v388 = (char *)&v376 - v47;
  MEMORY[0x270FA5388](v48);
  uint64_t v379 = (char *)&v376 - v49;
  MEMORY[0x270FA5388](v50);
  v402 = (char *)&v376 - v51;
  uint64_t State = (void (*)(char *, char *, uint64_t))type metadata accessor for BrowseLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v53 = (char *)&v376 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v54);
  uint64_t v56 = (char *)&v376 - v55;
  MEMORY[0x270FA5388](v57);
  uint64_t v59 = (char *)&v376 - v58;
  MEMORY[0x270FA5388](v60);
  char v62 = (char *)&v376 - v61;
  MEMORY[0x270FA5388](v63);
  char v65 = (char *)&v376 - v64;
  uint64_t v66 = type metadata accessor for BrowseAction();
  MEMORY[0x270FA5388](v66);
  char v68 = (uint64_t *)((char *)&v376 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v69 = v4[11];
  long long v437 = v4[10];
  long long v438 = v69;
  long long v439 = v4[12];
  long long v70 = v4[7];
  long long v433 = v4[6];
  long long v434 = v70;
  long long v71 = v4[9];
  long long v435 = v4[8];
  long long v436 = v71;
  long long v72 = v4[3];
  long long v429 = v4[2];
  long long v430 = v72;
  long long v73 = v4[5];
  long long v431 = v4[4];
  long long v432 = v73;
  long long v74 = v4[1];
  long long v427 = *v4;
  long long v428 = v74;
  sub_24EC14124((uint64_t)v413, (uint64_t)v68, (uint64_t (*)(void))type metadata accessor for BrowseAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v79 = *(uint64_t *)((char *)v68 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269948688) + 48));
      uint64_t v80 = v403;
      sub_24EC1418C((uint64_t)v68, v403, (uint64_t (*)(void))type metadata accessor for BrowseContent);
      uint64_t v81 = (uint64_t)&v412[*(int *)(type metadata accessor for BrowseState() + 36)];
      sub_24EC14124(v81, (uint64_t)v62, (uint64_t (*)(void))type metadata accessor for BrowseLoadState);
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        sub_24EC14068(v80, (uint64_t (*)(void))type metadata accessor for BrowseContent);
        swift_bridgeObjectRelease();
        uint64_t v124 = type metadata accessor for BrowseLoadState;
        uint64_t v125 = (uint64_t)v62;
        goto LABEL_30;
      }
      sub_24EC14068((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for BrowseLoadState);
      uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_269946780);
      uint64_t v83 = *(int *)(v82 + 48);
      uint64_t v84 = *(int *)(v82 + 64);
      sub_24EC14124(v80, (uint64_t)v59, (uint64_t (*)(void))type metadata accessor for BrowseContent);
      long long v424 = v437;
      long long v425 = v438;
      long long v426 = v439;
      long long v420 = v433;
      long long v421 = v434;
      long long v422 = v435;
      long long v423 = v436;
      long long v416 = v429;
      long long v417 = v430;
      long long v418 = v431;
      long long v419 = v432;
      long long v414 = v427;
      long long v415 = v428;
      uint64_t v85 = v80;
      uint64_t v86 = BrowseContent.sectionDescriptors.getter();
      char v87 = sub_24EC08924(v86);
      swift_bridgeObjectRelease();
      sub_24EC14068(v85, (uint64_t (*)(void))type metadata accessor for BrowseContent);
      v59[v83] = v87;
      *(void *)&v59[v84] = v79;
      swift_storeEnumTagMultiPayload();
      uint64_t result = sub_24EC13A44((uint64_t)v59, v81);
      break;
    case 2u:
      uint64_t v88 = v407;
      sub_24EB742F4((uint64_t)v407, &qword_2699478B0);
      uint64_t v90 = v405;
      uint64_t v89 = v406;
      ((void (**)(char *, uint64_t *, void))v405)[4](v88, v68, v406);
      uint64_t result = ((uint64_t (*)(char *, void, uint64_t, void (*)(void, void, void)))v90[7])(v88, 0, 1, v89);
      break;
    case 3u:
      char v91 = v412[*(int *)(type metadata accessor for BrowseState() + 32)];
      uint64_t v92 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269947278);
      uint64_t v93 = v402;
      uint64_t v94 = &v402[v92[16]];
      uint64_t v95 = &v402[v92[20]];
      uint64_t v96 = &v402[v92[24]];
      long long v414 = xmmword_24EC2F590;
      sub_24EC12BA0();
      sub_24EC22CE0();
      sub_24EC22B90();
      uint64_t v97 = *MEMORY[0x263F39590];
      uint64_t v98 = sub_24EC229D0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v98 - 8) + 104))(v94, v97, v98);
      uint64_t v99 = swift_allocObject();
      long long v100 = v438;
      *(_OWORD *)(v99 + 176) = v437;
      *(_OWORD *)(v99 + 192) = v100;
      *(_OWORD *)(v99 + 208) = v439;
      long long v101 = v434;
      *(_OWORD *)(v99 + 112) = v433;
      *(_OWORD *)(v99 + 128) = v101;
      long long v102 = v436;
      *(_OWORD *)(v99 + 144) = v435;
      *(_OWORD *)(v99 + 160) = v102;
      long long v103 = v430;
      *(_OWORD *)(v99 + 48) = v429;
      *(_OWORD *)(v99 + 64) = v103;
      long long v104 = v432;
      *(_OWORD *)(v99 + 80) = v431;
      *(_OWORD *)(v99 + 96) = v104;
      long long v105 = v428;
      *(_OWORD *)(v99 + 16) = v427;
      *(_OWORD *)(v99 + 32) = v105;
      *(unsigned char *)(v99 + 224) = v91;
      *(void *)uint64_t v96 = &unk_269948698;
      *((void *)v96 + 1) = v99;
      uint64_t v106 = *MEMORY[0x263F39578];
LABEL_8:
      uint64_t v107 = sub_24EC229C0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v107 - 8) + 104))(v95, v106, v107);
      uint64_t v109 = v409;
      uint64_t v108 = v410;
      (*(void (**)(char *, void, uint64_t))(v410 + 104))(v93, *MEMORY[0x263F39530], v409);
      uint64_t v110 = v408;
      unint64_t v111 = *v408;
      sub_24EC130B4((uint64_t)&v427);
LABEL_9:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v111 = sub_24EBC33B4(0, *(void *)(v111 + 16) + 1, 1, v111);
      }
      unint64_t v113 = *(void *)(v111 + 16);
      unint64_t v112 = *(void *)(v111 + 24);
      if (v113 >= v112 >> 1) {
        unint64_t v111 = sub_24EBC33B4(v112 > 1, v113 + 1, 1, v111);
      }
      *(void *)(v111 + 16) = v113 + 1;
      uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v108 + 32))(v111+ ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80))+ *(void *)(v108 + 72) * v113, v93, v109);
      *uint64_t v110 = v111;
      break;
    case 4u:
      uint64_t v114 = (int *)type metadata accessor for BrowseState();
      uint64_t v115 = v412;
      uint64_t v116 = (uint64_t)&v412[v114[9]];
      sub_24EC14124(v116, (uint64_t)v53, (uint64_t (*)(void))type metadata accessor for BrowseLoadState);
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 1:
          uint64_t v126 = *(char **)&v53[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269946780) + 64)];
          v413 = type metadata accessor for BrowseContent;
          uint64_t v127 = v399;
          sub_24EC1418C((uint64_t)v53, v399, (uint64_t (*)(void))type metadata accessor for BrowseContent);
          sub_24EC14068(v116, (uint64_t (*)(void))type metadata accessor for BrowseLoadState);
          swift_storeEnumTagMultiPayload();
          uint64_t v128 = BrowseContent.sectionDescriptors.getter();
          MEMORY[0x270FA5388](v128);
          *(&v376 - 2) = v126;
          unint64_t v130 = sub_24EC128AC(v129, (void (*)(void, char *))sub_24EC0F430, (uint64_t)(&v376 - 4));
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v131 = v115[v114[8]];
          uint64_t v132 = Array<A>.includingMarketingUpsellSectionDescriptors(isSubscribed:)(v131, v130);
          swift_bridgeObjectRelease();
          uint64_t v133 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269947278);
          uint64_t v134 = v386;
          uint64_t v135 = &v386[v133[16]];
          uint64_t v136 = &v386[v133[20]];
          uint64_t v137 = &v386[v133[24]];
          long long v414 = xmmword_24EC2F620;
          sub_24EC12BA0();
          sub_24EC22CE0();
          sub_24EC22B90();
          uint64_t v138 = *MEMORY[0x263F39590];
          uint64_t v139 = sub_24EC229D0();
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v139 - 8) + 104))(v135, v138, v139);
          uint64_t v140 = v127;
          uint64_t v141 = v385;
          sub_24EC14124(v140, v385, (uint64_t (*)(void))type metadata accessor for BrowseContent);
          unint64_t v142 = (*(unsigned __int8 *)(v384 + 80) + 232) & ~(unint64_t)*(unsigned __int8 *)(v384 + 80);
          unint64_t v143 = (v18 + v142 + 7) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v144 = swift_allocObject();
          long long v145 = v435;
          *(_OWORD *)(v144 + 168) = v436;
          long long v146 = v438;
          *(_OWORD *)(v144 + 184) = v437;
          *(_OWORD *)(v144 + 200) = v146;
          *(_OWORD *)(v144 + 216) = v439;
          long long v147 = v431;
          *(_OWORD *)(v144 + 104) = v432;
          long long v148 = v434;
          *(_OWORD *)(v144 + 120) = v433;
          *(_OWORD *)(v144 + 136) = v148;
          *(_OWORD *)(v144 + 152) = v145;
          long long v149 = v427;
          *(_OWORD *)(v144 + 40) = v428;
          long long v150 = v430;
          *(_OWORD *)(v144 + 56) = v429;
          *(_OWORD *)(v144 + 72) = v150;
          *(_OWORD *)(v144 + 88) = v147;
          *(unsigned char *)(v144 + 16) = v131;
          *(_OWORD *)(v144 + 24) = v149;
          sub_24EC1418C(v141, v144 + v142, (uint64_t (*)(void))v413);
          *(void *)(v144 + v143) = v132;
          *(void *)uint64_t v137 = &unk_2699485D0;
          *((void *)v137 + 1) = v144;
          uint64_t v151 = *MEMORY[0x263F39578];
          uint64_t v152 = sub_24EC229C0();
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v152 - 8) + 104))(v136, v151, v152);
          uint64_t v154 = v409;
          uint64_t v153 = v410;
          (*(void (**)(char *, void, uint64_t))(v410 + 104))(v134, *MEMORY[0x263F39530], v409);
          uint64_t v155 = v408;
          unint64_t v156 = *v408;
          sub_24EC130B4((uint64_t)&v427);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v156 = sub_24EBC33B4(0, *(void *)(v156 + 16) + 1, 1, v156);
          }
          unint64_t v158 = *(void *)(v156 + 16);
          unint64_t v157 = *(void *)(v156 + 24);
          if (v158 >= v157 >> 1) {
            unint64_t v156 = sub_24EBC33B4(v157 > 1, v158 + 1, 1, v156);
          }
          *(void *)(v156 + 16) = v158 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v153 + 32))(v156+ ((*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80))+ *(void *)(v153 + 72) * v158, v134, v154);
          *uint64_t v155 = v156;
          uint64_t v124 = type metadata accessor for BrowseContent;
          uint64_t v125 = v399;
          goto LABEL_30;
        case 2:
          return result;
        case 3:
          uint64_t v159 = v383;
          sub_24EC14124((uint64_t)&v115[v114[5]], v383, (uint64_t (*)(void))type metadata accessor for BrowseIdentifier);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v109 = v409;
          uint64_t v108 = v410;
          if (EnumCaseMultiPayload == 2)
          {
            swift_bridgeObjectRelease();
            uint64_t v161 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269947278);
            uint64_t v93 = v377;
            uint64_t v162 = &v377[v161[16]];
            uint64_t v163 = &v377[v161[20]];
            uint64_t v164 = &v377[v161[24]];
            long long v414 = xmmword_24EC2F590;
            sub_24EC12BA0();
            sub_24EC22CE0();
            sub_24EC22B90();
            uint64_t v165 = *MEMORY[0x263F39590];
            uint64_t v166 = sub_24EC229D0();
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v166 - 8) + 104))(v162, v165, v166);
            *(void *)uint64_t v164 = &unk_2699485D8;
            *((void *)v164 + 1) = 0;
            uint64_t v167 = *MEMORY[0x263F39578];
            uint64_t v168 = sub_24EC229C0();
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v168 - 8) + 104))(v163, v167, v168);
            (*(void (**)(char *, void, uint64_t))(v108 + 104))(v93, *MEMORY[0x263F39530], v109);
            uint64_t v110 = v408;
            unint64_t v111 = *v408;
            goto LABEL_9;
          }
          uint64_t v124 = type metadata accessor for BrowseIdentifier;
          uint64_t v125 = v159;
          break;
        default:
          return swift_bridgeObjectRelease();
      }
      goto LABEL_30;
    case 5u:
      uint64_t v117 = type metadata accessor for BrowseState();
      uint64_t v118 = v412;
      uint64_t v119 = (uint64_t)&v412[*(int *)(v117 + 36)];
      sub_24EC14124(v119, (uint64_t)v56, (uint64_t (*)(void))type metadata accessor for BrowseLoadState);
      uint64_t result = swift_getEnumCaseMultiPayload();
      uint64_t v121 = v406;
      uint64_t v120 = v407;
      uint64_t v122 = (uint64_t)v404;
      uint64_t v123 = v405;
      switch((int)result)
      {
        case 1:
          __swift_instantiateConcreteTypeFromMangledName(&qword_269946780);
          swift_bridgeObjectRelease();
          sub_24EB741CC((uint64_t)v120, v122, &qword_2699478B0);
          if (((unsigned int (*)(uint64_t, uint64_t, void))v123[6])(v122, 1, v121) == 1)
          {
            sub_24EB742F4(v122, &qword_2699478B0);
            uint64_t v124 = type metadata accessor for BrowseContent;
            uint64_t v125 = (uint64_t)v56;
            goto LABEL_30;
          }
          ((void (**)(char *, uint64_t, void))v123)[4](v398, v122, v121);
          uint64_t v169 = v376;
          sub_24EC21D60();
          sub_24EC21D40();
          double v171 = v170;
          uint64_t v172 = (void (*)(void, void))v123[1];
          v413 = (uint64_t (*)())(v123 + 1);
          long long v173 = v169;
          long long v174 = v172;
          v172(v173, v121);
          sub_24EB742F4((uint64_t)v120, &qword_2699478B0);
          ((void (*)(char *, uint64_t, uint64_t, void (*)(void, void, void)))v123[7])(v120, 1, 1, v121);
          sub_24EC22BE0();
          double v176 = v175;
          v174(v398, v121);
          uint64_t result = sub_24EC14068((uint64_t)v56, (uint64_t (*)(void))type metadata accessor for BrowseContent);
          if (v176 <= v171) {
            goto LABEL_33;
          }
          return result;
        case 2:
          goto LABEL_33;
        case 3:
          return result;
        default:
          swift_bridgeObjectRelease();
LABEL_33:
          sub_24EC14068(v119, (uint64_t (*)(void))type metadata accessor for BrowseLoadState);
          swift_storeEnumTagMultiPayload();
          uint64_t v177 = (uint64_t)&v118[*(int *)(v117 + 20)];
          uint64_t v178 = v400;
          sub_24EC14124(v177, (uint64_t)v400, (uint64_t (*)(void))type metadata accessor for BrowseIdentifier);
          int v179 = swift_getEnumCaseMultiPayload();
          uint64_t v180 = (unsigned int *)MEMORY[0x263F39590];
          uint64_t v181 = (unsigned int *)MEMORY[0x263F39578];
          uint64_t v182 = (int *)MEMORY[0x263F39530];
          if (!v179)
          {
            long long v212 = (void (*)(void, void, void))*v178;
            uint64_t v213 = v178[1];
            uint64_t v214 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269947278);
            uint64_t v215 = v181;
            uint64_t v93 = v379;
            uint64_t v216 = &v379[v214[16]];
            uint64_t v95 = &v379[v214[20]];
            uint64_t v217 = &v379[v214[24]];
            sub_24EC12BA0();
            long long v414 = 0uLL;
            sub_24EC22CE0();
            sub_24EC22B90();
            uint64_t v218 = *v180;
            uint64_t v219 = sub_24EC229D0();
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v219 - 8) + 104))(v216, v218, v219);
            uint64_t v220 = swift_allocObject();
            long long v221 = v438;
            *(_OWORD *)(v220 + 176) = v437;
            *(_OWORD *)(v220 + 192) = v221;
            *(_OWORD *)(v220 + 208) = v439;
            long long v222 = v434;
            *(_OWORD *)(v220 + 112) = v433;
            *(_OWORD *)(v220 + 128) = v222;
            long long v223 = v436;
            *(_OWORD *)(v220 + 144) = v435;
            *(_OWORD *)(v220 + 160) = v223;
            long long v224 = v430;
            *(_OWORD *)(v220 + 48) = v429;
            *(_OWORD *)(v220 + 64) = v224;
            long long v225 = v432;
            *(_OWORD *)(v220 + 80) = v431;
            *(_OWORD *)(v220 + 96) = v225;
            long long v226 = v428;
            *(_OWORD *)(v220 + 16) = v427;
            *(_OWORD *)(v220 + 32) = v226;
            *(void *)(v220 + 224) = v212;
            *(void *)(v220 + 232) = v213;
            *(void *)uint64_t v217 = &unk_269948680;
            *((void *)v217 + 1) = v220;
            uint64_t v106 = *v215;
            goto LABEL_8;
          }
          if (v179 == 1)
          {
            uint64_t v183 = v178[1];
            unint64_t v406 = (void (*)(void, void, void))*v178;
            uint64_t v184 = v406;
            LODWORD(v413) = *((unsigned __int8 *)v178 + 16);
            uint64_t v185 = (char *)v178 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269946760) + 64);
            uint64_t v186 = v390;
            uint64_t v187 = v391;
            uint64_t State = *(void (**)(char *, char *, uint64_t))(v391 + 32);
            uint64_t v188 = v393;
            State(v390, v185, v393);
            uint64_t v189 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269947278);
            uint64_t v190 = v388;
            uint64_t v191 = &v388[v189[16]];
            uint64_t v412 = &v388[v189[20]];
            v407 = &v388[v189[24]];
            *(void *)&long long v414 = v184;
            *((void *)&v414 + 1) = v183;
            sub_24EC12BA0();
            swift_bridgeObjectRetain();
            sub_24EC22CE0();
            sub_24EC22B90();
            uint64_t v192 = *MEMORY[0x263F39590];
            uint64_t v193 = sub_24EC229D0();
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v193 - 8) + 104))(v191, v192, v193);
            uint64_t v194 = v381;
            (*(void (**)(char *, char *, uint64_t))(v187 + 16))(v381, v186, v188);
            unint64_t v195 = (*(unsigned __int8 *)(v187 + 80) + 248) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80);
            uint64_t v196 = swift_allocObject();
            long long v197 = v438;
            *(_OWORD *)(v196 + 176) = v437;
            *(_OWORD *)(v196 + 192) = v197;
            *(_OWORD *)(v196 + 208) = v439;
            long long v198 = v434;
            *(_OWORD *)(v196 + 112) = v433;
            *(_OWORD *)(v196 + 128) = v198;
            long long v199 = v436;
            *(_OWORD *)(v196 + 144) = v435;
            *(_OWORD *)(v196 + 160) = v199;
            long long v200 = v430;
            *(_OWORD *)(v196 + 48) = v429;
            *(_OWORD *)(v196 + 64) = v200;
            long long v201 = v432;
            *(_OWORD *)(v196 + 80) = v431;
            *(_OWORD *)(v196 + 96) = v201;
            long long v202 = v428;
            *(_OWORD *)(v196 + 16) = v427;
            *(_OWORD *)(v196 + 32) = v202;
            *(unsigned char *)(v196 + 224) = (_BYTE)v413;
            *(void *)(v196 + 232) = v406;
            *(void *)(v196 + 240) = v183;
            State((char *)(v196 + v195), v194, v188);
            uint64_t v203 = v407;
            *(void *)v407 = &unk_269948670;
            *((void *)v203 + 1) = v196;
            uint64_t v204 = *MEMORY[0x263F39578];
            uint64_t v205 = sub_24EC229C0();
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v205 - 8) + 104))(v412, v204, v205);
            uint64_t v207 = v409;
            uint64_t v206 = v410;
            (*(void (**)(char *, void, uint64_t))(v410 + 104))(v190, *MEMORY[0x263F39530], v409);
            uint64_t v208 = v408;
            unint64_t v209 = *v408;
            sub_24EC130B4((uint64_t)&v427);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v209 = sub_24EBC33B4(0, *(void *)(v209 + 16) + 1, 1, v209);
            }
            unint64_t v211 = *(void *)(v209 + 16);
            unint64_t v210 = *(void *)(v209 + 24);
            if (v211 >= v210 >> 1) {
              unint64_t v209 = sub_24EBC33B4(v210 > 1, v211 + 1, 1, v209);
            }
            *(void *)(v209 + 16) = v211 + 1;
            (*(void (**)(unint64_t, char *, uint64_t))(v206 + 32))(v209+ ((*(unsigned __int8 *)(v206 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v206 + 80))+ *(void *)(v206 + 72) * v211, v388, v207);
            *uint64_t v208 = v209;
            uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v391 + 8))(v390, v393);
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v227 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269947278);
            long long v228 = v387;
            long long v229 = &v387[v227[16]];
            uint64_t v230 = &v387[v227[20]];
            uint64_t v231 = &v387[v227[24]];
            long long v414 = xmmword_24EC2F590;
            uint64_t v404 = (char *)sub_24EC12BA0();
            sub_24EC22CE0();
            sub_24EC22B90();
            uint64_t v232 = *v180;
            uint64_t v233 = sub_24EC229D0();
            uint64_t v234 = *(char ***)(*(void *)(v233 - 8) + 104);
            LODWORD(v398) = v232;
            v400 = v234;
            uint64_t v401 = v233;
            ((void (*)(char *, uint64_t))v234)(v229, v232);
            *(void *)uint64_t v231 = &unk_2699485E0;
            *((void *)v231 + 1) = 0;
            uint64_t v235 = *v181;
            uint64_t v236 = (uint64_t (*)(void))sub_24EC229C0();
            uint64_t v237 = *((void *)v236 - 1);
            uint64_t v238 = *(char **)(v237 + 104);
            LODWORD(v399) = v235;
            uint64_t v412 = v238;
            v413 = (uint64_t (*)())v236;
            uint64_t State = (void (*)(char *, char *, uint64_t))(v237 + 104);
            ((void (*)(char *, uint64_t))v238)(v230, v235);
            int v239 = *v182;
            uint64_t v240 = v410;
            uint64_t v241 = *(void (**)(void))(v410 + 104);
            LODWORD(v407) = v239;
            unint64_t v406 = (void (*)(void, void, void))v241;
            v241(v228);
            uint64_t v242 = v408;
            unint64_t v243 = *v408;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v243 = sub_24EBC33B4(0, *(void *)(v243 + 16) + 1, 1, v243);
            }
            unint64_t v245 = *(void *)(v243 + 16);
            unint64_t v244 = *(void *)(v243 + 24);
            if (v245 >= v244 >> 1) {
              unint64_t v243 = sub_24EBC33B4(v244 > 1, v245 + 1, 1, v243);
            }
            *(void *)(v243 + 16) = v245 + 1;
            long long v247 = *(void (***)(void *, void *, void))(v240 + 32);
            uint64_t v246 = v240 + 32;
            unint64_t v403 = (*(unsigned __int8 *)(v246 + 48) + 32) & ~(unint64_t)*(unsigned __int8 *)(v246 + 48);
            uint64_t v248 = v246;
            v402 = *(char **)(v246 + 40);
            uint64_t v249 = v409;
            uint64_t v410 = v248;
            v405 = v247;
            ((void (*)(unint64_t, char *, uint64_t))v247)(v243 + v403 + (void)v402 * v245, v387, v409);
            *uint64_t v242 = v243;
            uint64_t v250 = v389;
            uint64_t v251 = &v389[v227[16]];
            uint64_t v252 = &v389[v227[20]];
            uint64_t v253 = &v389[v227[24]];
            long long v414 = xmmword_24EC2F5A0;
            sub_24EC22CE0();
            sub_24EC22B90();
            ((void (*)(char *, void, uint64_t))v400)(v251, v398, v401);
            uint64_t v254 = (_OWORD *)swift_allocObject();
            long long v255 = v438;
            v254[11] = v437;
            v254[12] = v255;
            v254[13] = v439;
            long long v256 = v434;
            v254[7] = v433;
            v254[8] = v256;
            long long v257 = v436;
            v254[9] = v435;
            v254[10] = v257;
            long long v258 = v430;
            v254[3] = v429;
            v254[4] = v258;
            long long v259 = v432;
            v254[5] = v431;
            v254[6] = v259;
            long long v260 = v428;
            v254[1] = v427;
            v254[2] = v260;
            *(void *)uint64_t v253 = &unk_2699485F0;
            *((void *)v253 + 1) = v254;
            int v261 = v408;
            ((void (*)(char *, void, uint64_t (*)()))v412)(v252, v399, v413);
            v406(v250, v407, v249);
            unint64_t v262 = *v261;
            sub_24EC130B4((uint64_t)&v427);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v262 = sub_24EBC33B4(0, *(void *)(v262 + 16) + 1, 1, v262);
            }
            unint64_t v264 = *(void *)(v262 + 16);
            unint64_t v263 = *(void *)(v262 + 24);
            if (v264 >= v263 >> 1) {
              unint64_t v262 = sub_24EBC33B4(v263 > 1, v264 + 1, 1, v262);
            }
            *(void *)(v262 + 16) = v264 + 1;
            uint64_t v265 = v409;
            ((void (*)(unint64_t, char *, uint64_t))v405)(v262 + v403 + v264 * (void)v402, v389, v409);
            unint64_t *v261 = v262;
            uint64_t v266 = v392;
            uint64_t v267 = &v392[v227[16]];
            uint64_t v268 = &v392[v227[20]];
            uint64_t v269 = &v392[v227[24]];
            long long v414 = xmmword_24EC2F5B0;
            sub_24EC22CE0();
            sub_24EC22B90();
            ((void (*)(char *, void, uint64_t))v400)(v267, v398, v401);
            uint64_t v270 = (_OWORD *)swift_allocObject();
            long long v271 = v438;
            v270[11] = v437;
            v270[12] = v271;
            v270[13] = v439;
            long long v272 = v434;
            v270[7] = v433;
            v270[8] = v272;
            long long v273 = v436;
            v270[9] = v435;
            v270[10] = v273;
            long long v274 = v430;
            v270[3] = v429;
            v270[4] = v274;
            long long v275 = v432;
            v270[5] = v431;
            v270[6] = v275;
            long long v276 = v428;
            v270[1] = v427;
            v270[2] = v276;
            *(void *)uint64_t v269 = &unk_269948600;
            *((void *)v269 + 1) = v270;
            uint64_t v277 = v408;
            ((void (*)(char *, void, uint64_t (*)()))v412)(v268, v399, v413);
            v406(v266, v407, v265);
            unint64_t v278 = *v277;
            sub_24EC130B4((uint64_t)&v427);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v278 = sub_24EBC33B4(0, *(void *)(v278 + 16) + 1, 1, v278);
            }
            unint64_t v280 = *(void *)(v278 + 16);
            unint64_t v279 = *(void *)(v278 + 24);
            if (v280 >= v279 >> 1) {
              unint64_t v278 = sub_24EBC33B4(v279 > 1, v280 + 1, 1, v278);
            }
            *(void *)(v278 + 16) = v280 + 1;
            uint64_t v281 = v409;
            ((void (*)(unint64_t, char *, uint64_t))v405)(v278 + v403 + v280 * (void)v402, v392, v409);
            *uint64_t v277 = v278;
            uint64_t v282 = v394;
            uint64_t v283 = &v394[v227[16]];
            uint64_t v284 = &v394[v227[20]];
            uint64_t v285 = &v394[v227[24]];
            long long v414 = xmmword_24EC2F5C0;
            sub_24EC22CE0();
            sub_24EC22B90();
            ((void (*)(char *, void, uint64_t))v400)(v283, v398, v401);
            uint64_t v286 = (_OWORD *)swift_allocObject();
            long long v287 = v438;
            v286[11] = v437;
            v286[12] = v287;
            v286[13] = v439;
            long long v288 = v434;
            v286[7] = v433;
            v286[8] = v288;
            long long v289 = v436;
            v286[9] = v435;
            v286[10] = v289;
            long long v290 = v430;
            v286[3] = v429;
            v286[4] = v290;
            long long v291 = v432;
            v286[5] = v431;
            v286[6] = v291;
            long long v292 = v428;
            v286[1] = v427;
            v286[2] = v292;
            *(void *)uint64_t v285 = &unk_269948610;
            *((void *)v285 + 1) = v286;
            unint64_t v293 = v408;
            ((void (*)(char *, void, uint64_t (*)()))v412)(v284, v399, v413);
            v406(v282, v407, v281);
            unint64_t v294 = *v293;
            sub_24EC130B4((uint64_t)&v427);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v294 = sub_24EBC33B4(0, *(void *)(v294 + 16) + 1, 1, v294);
            }
            unint64_t v296 = *(void *)(v294 + 16);
            unint64_t v295 = *(void *)(v294 + 24);
            if (v296 >= v295 >> 1) {
              unint64_t v294 = sub_24EBC33B4(v295 > 1, v296 + 1, 1, v294);
            }
            *(void *)(v294 + 16) = v296 + 1;
            uint64_t v297 = v409;
            ((void (*)(unint64_t, char *, uint64_t))v405)(v294 + v403 + v296 * (void)v402, v394, v409);
            *unint64_t v293 = v294;
            uint64_t v298 = v395;
            uint64_t v299 = &v395[v227[16]];
            v300 = &v395[v227[20]];
            uint64_t v301 = &v395[v227[24]];
            long long v414 = xmmword_24EC2F5D0;
            sub_24EC22CE0();
            sub_24EC22B90();
            ((void (*)(char *, void, uint64_t))v400)(v299, v398, v401);
            uint64_t v302 = (_OWORD *)swift_allocObject();
            long long v303 = v438;
            v302[11] = v437;
            v302[12] = v303;
            v302[13] = v439;
            long long v304 = v434;
            v302[7] = v433;
            v302[8] = v304;
            long long v305 = v436;
            v302[9] = v435;
            v302[10] = v305;
            long long v306 = v430;
            v302[3] = v429;
            v302[4] = v306;
            long long v307 = v432;
            v302[5] = v431;
            v302[6] = v307;
            long long v308 = v428;
            v302[1] = v427;
            v302[2] = v308;
            *(void *)uint64_t v301 = &unk_269948620;
            *((void *)v301 + 1) = v302;
            v309 = v408;
            ((void (*)(char *, void, uint64_t (*)()))v412)(v300, v399, v413);
            v406(v298, v407, v297);
            unint64_t v310 = *v309;
            sub_24EC130B4((uint64_t)&v427);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v310 = sub_24EBC33B4(0, *(void *)(v310 + 16) + 1, 1, v310);
            }
            unint64_t v312 = *(void *)(v310 + 16);
            unint64_t v311 = *(void *)(v310 + 24);
            if (v312 >= v311 >> 1) {
              unint64_t v310 = sub_24EBC33B4(v311 > 1, v312 + 1, 1, v310);
            }
            *(void *)(v310 + 16) = v312 + 1;
            uint64_t v313 = v409;
            ((void (*)(unint64_t, char *, uint64_t))v405)(v310 + v403 + v312 * (void)v402, v395, v409);
            unint64_t *v309 = v310;
            uint64_t v314 = v382;
            uint64_t v315 = &v382[v227[16]];
            uint64_t v316 = &v382[v227[20]];
            uint64_t v317 = &v382[v227[24]];
            long long v414 = xmmword_24EC2F5E0;
            sub_24EC22CE0();
            sub_24EC22B90();
            ((void (*)(char *, void, uint64_t))v400)(v315, v398, v401);
            uint64_t v318 = (_OWORD *)swift_allocObject();
            long long v319 = v438;
            v318[11] = v437;
            v318[12] = v319;
            v318[13] = v439;
            long long v320 = v434;
            v318[7] = v433;
            v318[8] = v320;
            long long v321 = v436;
            v318[9] = v435;
            v318[10] = v321;
            long long v322 = v430;
            v318[3] = v429;
            v318[4] = v322;
            long long v323 = v432;
            v318[5] = v431;
            v318[6] = v323;
            long long v324 = v428;
            v318[1] = v427;
            v318[2] = v324;
            *(void *)uint64_t v317 = &unk_269948630;
            *((void *)v317 + 1) = v318;
            v325 = v408;
            ((void (*)(char *, void, uint64_t (*)()))v412)(v316, v399, v413);
            v406(v314, v407, v313);
            unint64_t v326 = *v325;
            sub_24EC130B4((uint64_t)&v427);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v326 = sub_24EBC33B4(0, *(void *)(v326 + 16) + 1, 1, v326);
            }
            unint64_t v328 = *(void *)(v326 + 16);
            unint64_t v327 = *(void *)(v326 + 24);
            if (v328 >= v327 >> 1) {
              unint64_t v326 = sub_24EBC33B4(v327 > 1, v328 + 1, 1, v326);
            }
            *(void *)(v326 + 16) = v328 + 1;
            uint64_t v329 = v409;
            ((void (*)(unint64_t, char *, uint64_t))v405)(v326 + v403 + v328 * (void)v402, v314, v409);
            unint64_t *v325 = v326;
            v330 = v396;
            unint64_t v331 = &v396[v227[16]];
            unint64_t v332 = &v396[v227[20]];
            v333 = &v396[v227[24]];
            long long v414 = xmmword_24EC2F5F0;
            sub_24EC22CE0();
            ((void (*)(char *, void, uint64_t))v400)(v331, *MEMORY[0x263F39580], v401);
            ((void (*)(char *, void, uint64_t (*)()))v412)(v332, *MEMORY[0x263F39570], v413);
            v334 = (_OWORD *)swift_allocObject();
            long long v335 = v438;
            v334[11] = v437;
            v334[12] = v335;
            v334[13] = v439;
            long long v336 = v434;
            v334[7] = v433;
            v334[8] = v336;
            long long v337 = v436;
            v334[9] = v435;
            v334[10] = v337;
            long long v338 = v430;
            v334[3] = v429;
            v334[4] = v338;
            long long v339 = v432;
            v334[5] = v431;
            v334[6] = v339;
            long long v340 = v428;
            v334[1] = v427;
            v334[2] = v340;
            *(void *)v333 = &unk_269948640;
            *((void *)v333 + 1) = v334;
            unint64_t v341 = v408;
            sub_24EC130B4((uint64_t)&v427);
            sub_24EC22B90();
            v406(v330, v407, v329);
            unint64_t v342 = *v341;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v342 = sub_24EBC33B4(0, *(void *)(v342 + 16) + 1, 1, v342);
            }
            v343 = v378;
            unint64_t v345 = *(void *)(v342 + 16);
            unint64_t v344 = *(void *)(v342 + 24);
            if (v345 >= v344 >> 1) {
              unint64_t v342 = sub_24EBC33B4(v344 > 1, v345 + 1, 1, v342);
            }
            *(void *)(v342 + 16) = v345 + 1;
            uint64_t v346 = v409;
            ((void (*)(unint64_t, char *, uint64_t))v405)(v342 + v403 + v345 * (void)v402, v396, v409);
            *unint64_t v341 = v342;
            uint64_t v347 = &v343[v227[16]];
            uint64_t v348 = &v343[v227[20]];
            v349 = &v343[v227[24]];
            long long v414 = xmmword_24EC2F600;
            sub_24EC22CE0();
            sub_24EC22B90();
            ((void (*)(char *, void, uint64_t))v400)(v347, v398, v401);
            uint64_t v350 = (_OWORD *)swift_allocObject();
            long long v351 = v438;
            v350[11] = v437;
            v350[12] = v351;
            v350[13] = v439;
            long long v352 = v434;
            v350[7] = v433;
            v350[8] = v352;
            long long v353 = v436;
            v350[9] = v435;
            v350[10] = v353;
            long long v354 = v430;
            v350[3] = v429;
            v350[4] = v354;
            long long v355 = v432;
            v350[5] = v431;
            v350[6] = v355;
            long long v356 = v428;
            v350[1] = v427;
            v350[2] = v356;
            *(void *)v349 = &unk_269948650;
            *((void *)v349 + 1) = v350;
            uint64_t v357 = v408;
            ((void (*)(char *, void, uint64_t (*)()))v412)(v348, v399, v413);
            v406(v343, v407, v346);
            unint64_t v358 = *v357;
            sub_24EC130B4((uint64_t)&v427);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v358 = sub_24EBC33B4(0, *(void *)(v358 + 16) + 1, 1, v358);
            }
            unint64_t v360 = *(void *)(v358 + 16);
            unint64_t v359 = *(void *)(v358 + 24);
            if (v360 >= v359 >> 1) {
              unint64_t v358 = sub_24EBC33B4(v359 > 1, v360 + 1, 1, v358);
            }
            *(void *)(v358 + 16) = v360 + 1;
            uint64_t v361 = v409;
            ((void (*)(unint64_t, char *, uint64_t))v405)(v358 + v403 + v360 * (void)v402, v343, v409);
            *uint64_t v357 = v358;
            v362 = v397;
            v363 = &v397[v227[16]];
            uint64_t v364 = &v397[v227[20]];
            v365 = &v397[v227[24]];
            long long v414 = xmmword_24EC2F610;
            sub_24EC22CE0();
            sub_24EC22B90();
            ((void (*)(char *, void, uint64_t))v400)(v363, v398, v401);
            uint64_t v366 = (_OWORD *)swift_allocObject();
            long long v367 = v438;
            v366[11] = v437;
            v366[12] = v367;
            v366[13] = v439;
            long long v368 = v434;
            v366[7] = v433;
            v366[8] = v368;
            long long v369 = v436;
            v366[9] = v435;
            v366[10] = v369;
            long long v370 = v430;
            v366[3] = v429;
            v366[4] = v370;
            long long v371 = v432;
            v366[5] = v431;
            v366[6] = v371;
            long long v372 = v428;
            v366[1] = v427;
            v366[2] = v372;
            *(void *)v365 = &unk_269948660;
            *((void *)v365 + 1) = v366;
            ((void (*)(char *, void, uint64_t (*)()))v412)(v364, v399, v413);
            v406(v362, v407, v361);
            unint64_t v373 = *v357;
            sub_24EC130B4((uint64_t)&v427);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v373 = sub_24EBC33B4(0, *(void *)(v373 + 16) + 1, 1, v373);
            }
            unint64_t v375 = *(void *)(v373 + 16);
            unint64_t v374 = *(void *)(v373 + 24);
            if (v375 >= v374 >> 1) {
              unint64_t v373 = sub_24EBC33B4(v374 > 1, v375 + 1, 1, v373);
            }
            *(void *)(v373 + 16) = v375 + 1;
            uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v405)(v373 + v403 + v375 * (void)v402, v397, v361);
            *uint64_t v357 = v373;
          }
          break;
      }
      break;
    default:
      uint64_t v76 = *v68;
      uint64_t v75 = v68[1];
      uint64_t v77 = &v412[*(int *)(type metadata accessor for BrowseState() + 36)];
      sub_24EC14124((uint64_t)v77, (uint64_t)v65, (uint64_t (*)(void))type metadata accessor for BrowseLoadState);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        sub_24EC14068((uint64_t)v65, (uint64_t (*)(void))type metadata accessor for BrowseLoadState);
        sub_24EC14068((uint64_t)v77, (uint64_t (*)(void))type metadata accessor for BrowseLoadState);
        *(void *)uint64_t v77 = v76;
        *((void *)v77 + 1) = v75;
        uint64_t result = swift_storeEnumTagMultiPayload();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v124 = type metadata accessor for BrowseLoadState;
        uint64_t v125 = (uint64_t)v65;
LABEL_30:
        uint64_t result = sub_24EC14068(v125, (uint64_t (*)(void))v124);
      }
      break;
  }
  return result;
}