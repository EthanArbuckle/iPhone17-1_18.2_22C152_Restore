uint64_t sub_25277FC98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v5[13] = a4;
  v5[14] = a5;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v5[15] = swift_task_alloc();
  v6 = sub_2528307F8();
  v5[16] = v6;
  v5[17] = *(void *)(v6 - 8);
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  v5[20] = swift_task_alloc();
  v7 = sub_252830BD8();
  v5[21] = v7;
  v5[22] = *(void *)(v7 - 8);
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25277FE3C, 0, 0);
}

uint64_t sub_25277FE3C()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[20];
  uint64_t v5 = v0[11];
  uint64_t v4 = v0[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_252832B00;
  *(void *)(inited + 32) = 1701603700;
  *(void *)(inited + 40) = 0xE400000000000000;
  *(void *)(inited + 48) = v5;
  *(void *)(inited + 56) = v4;
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_252786E88(inited);
  v0[25] = v7;
  uint64_t KeyPath = swift_getKeyPath();
  v0[26] = KeyPath;
  sub_25279D788(KeyPath, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_252781C54(v0[20], &qword_26B22BD58);
    if (qword_26B22BEE0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_252831158();
    __swift_project_value_buffer(v9, (uint64_t)qword_26B22C058);
    v10 = sub_252831138();
    os_log_type_t v11 = sub_252831618();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_25277D000, v10, v11, "Request URL for Utility Territory Lookup API not found", v12, 2u);
      MEMORY[0x2533BE070](v12, -1, -1);
    }

    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[17] + 56))(v0[10], 1, 1, v0[16]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
  else
  {
    uint64_t v16 = v0[23];
    uint64_t v15 = v0[24];
    uint64_t v17 = v0[21];
    uint64_t v18 = v0[22];
    uint64_t v19 = v0[14];
    (*(void (**)(uint64_t, void, uint64_t))(v18 + 32))(v15, v0[20], v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v16, v15, v17);
    sub_252830798();
    sub_252830778();
    if (v19)
    {
      unint64_t v20 = v0[14];
      uint64_t v21 = HIBYTE(v20) & 0xF;
      if ((v20 & 0x2000000000000000) == 0) {
        uint64_t v21 = v0[13] & 0xFFFFFFFFFFFFLL;
      }
      if (v21) {
        sub_2528307B8();
      }
    }
    sub_252804CA4(v0[18]);
    v25 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))((char *)&dword_269C1D8F8
                                                                              + dword_269C1D8F8);
    v22 = (void *)swift_task_alloc();
    v0[27] = v22;
    void *v22 = v0;
    v22[1] = sub_2527801E0;
    uint64_t v23 = v0[18];
    uint64_t v24 = v0[15];
    return v25(v24, v23, KeyPath, v7);
  }
}

uint64_t sub_2527801E0()
{
  uint64_t v3 = (void *)*v1;
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v4 = v2[18];
  uint64_t v5 = v2[17];
  uint64_t v6 = v2[16];
  if (v0)
  {

    unint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v3[30] = v7;
    v7(v4, v6);
    v8 = sub_252780664;
  }
  else
  {
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v3[28] = v9;
    v3[29] = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v9(v4, v6);
    v8 = sub_252780384;
  }
  return MEMORY[0x270FA2498](v8, 0, 0);
}

uint64_t sub_252780384()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[15];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    unint64_t v20 = (void (*)(uint64_t, uint64_t))v0[28];
    sub_252781C54(v3, &qword_26B22BD40);
    if (qword_26B22BEE0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_26B22C058);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      unint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable to sign Utility Geohash Lookup request", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }
    uint64_t v8 = v0[24];
    uint64_t v9 = v0[21];
    uint64_t v10 = v0[22];
    uint64_t v11 = v0[19];
    uint64_t v12 = v0[16];

    swift_release();
    swift_bridgeObjectRelease();
    v20(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    uint64_t v13 = 1;
  }
  else
  {
    v14 = (void (*)(uint64_t, uint64_t))v0[28];
    uint64_t v21 = v0[24];
    uint64_t v15 = v0[22];
    uint64_t v19 = v0[21];
    uint64_t v16 = v0[19];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[10], v3, v1);
    sub_2528307E8();
    swift_release();
    swift_bridgeObjectRelease();
    v14(v16, v1);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v21, v19);
    uint64_t v13 = 0;
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[17] + 56))(v0[10], v13, 1, v0[16]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_252780664()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[17] + 56))(v0[15], 1, 1, v0[16]);
  uint64_t v12 = (void (*)(uint64_t, uint64_t))v0[30];
  sub_252781C54(v0[15], &qword_26B22BD40);
  if (qword_26B22BEE0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_252831158();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B22C058);
  uint64_t v2 = sub_252831138();
  os_log_type_t v3 = sub_252831618();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_25277D000, v2, v3, "Unable to sign Utility Geohash Lookup request", v4, 2u);
    MEMORY[0x2533BE070](v4, -1, -1);
  }
  uint64_t v5 = v0[24];
  uint64_t v6 = v0[21];
  uint64_t v7 = v0[22];
  uint64_t v8 = v0[19];
  uint64_t v9 = v0[16];

  swift_release();
  swift_bridgeObjectRelease();
  v12(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[17] + 56))(v0[10], 1, 1, v0[16]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_25278087C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[13] = a4;
  v5[14] = a5;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v5[15] = swift_task_alloc();
  uint64_t v6 = sub_2528307F8();
  v5[16] = v6;
  v5[17] = *(void *)(v6 - 8);
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  uint64_t v7 = sub_252830BD8();
  v5[20] = v7;
  v5[21] = *(void *)(v7 - 8);
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  v5[27] = swift_task_alloc();
  v5[28] = swift_task_alloc();
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  v5[32] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_252780A84, 0, 0);
}

uint64_t sub_252780A84()
{
  uint64_t v1 = v0;
  uint64_t v3 = v0[30];
  uint64_t v2 = v0 + 30;
  uint64_t v5 = v2[1];
  uint64_t v4 = v2[2];
  uint64_t v6 = *(v2 - 10);
  uint64_t v7 = *(v2 - 9);
  uint64_t v9 = *(v2 - 19);
  uint64_t v8 = *(v2 - 18);
  v65 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v65(v4, 1, 1, v6);
  uint64_t KeyPath = swift_getKeyPath();
  v2[3] = KeyPath;
  uint64_t v67 = KeyPath;
  sub_25279D788(KeyPath, 0);
  sub_252781C54(v4, &qword_26B22BD58);
  sub_252781B4C(v5, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFF0);
  uint64_t inited = swift_initStackObject();
  v2[4] = inited;
  *(_OWORD *)(inited + 16) = xmmword_252832B00;
  *(void *)(inited + 32) = 0x6E6F69676572;
  *(void *)(inited + 40) = 0xE600000000000000;
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = v8;
  sub_252781BB4(v4, v3);
  uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v12(v3, 1, v6) == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
LABEL_8:
    sub_252781C54(*v2, &qword_26B22BD58);
    if (qword_26B22BEE0 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_252831158();
    __swift_project_value_buffer(v25, (uint64_t)qword_26B22C058);
    uint64_t v26 = sub_252831138();
    os_log_type_t v27 = sub_252831618();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_25277D000, v26, v27, "Unable to create All Utilities In Region URL with required query parameters", v28, 2u);
      MEMORY[0x2533BE070](v28, -1, -1);
    }
    uint64_t v29 = v1[32];
    uint64_t v31 = v1[16];
    uint64_t v30 = v1[17];
    uint64_t v32 = v1[10];
    swift_release();

    sub_252781C54(v29, &qword_26B22BD58);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56))(v32, 1, 1, v31);
LABEL_13:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v33 = (uint64_t (*)(void))v1[1];
    return v33();
  }
  uint64_t v13 = v1[28];
  uint64_t v14 = v1[20];
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1[21] + 32);
  v15(v1[26], v1[30], v14);
  swift_bridgeObjectRetain();
  sub_252830B38();
  sub_252830BA8();
  unsigned int v16 = v12(v13, 1, v14);
  uint64_t v2 = v1 + 29;
  uint64_t v17 = v1[29];
  uint64_t v18 = v1[28];
  if (v16 == 1)
  {
    uint64_t v19 = v1[20];
    sub_252781C54(v18, &qword_26B22BD58);
    v65(v17, 1, 1, v19);
  }
  else
  {
    uint64_t v20 = v1[24];
    v63 = v12;
    uint64_t v21 = v1[20];
    uint64_t v22 = v1[21];
    v15(v20, v18, v21);
    sub_25280F4E4(inited, 1, 0, v17);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    uint64_t v12 = v63;
  }
  uint64_t v23 = v1[29];
  uint64_t v24 = v1[20];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12(v23, 1, v24) == 1)
  {
    (*(void (**)(void, void))(v1[21] + 8))(v1[26], v1[20]);
    goto LABEL_8;
  }
  uint64_t v35 = v1[32];
  uint64_t v36 = v1[29];
  uint64_t v37 = v1[27];
  uint64_t v38 = v1[25];
  uint64_t v40 = v1[20];
  uint64_t v39 = v1[21];
  sub_252781C54(v35, &qword_26B22BD58);
  v15(v38, v36, v40);
  v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16);
  v64(v35, v38, v40);
  v65(v35, 0, 1, v40);
  sub_252781BB4(v35, v37);
  if (v12(v37, 1, v40) == 1)
  {
    sub_252781C54(v1[27], &qword_26B22BD58);
    if (qword_26B22BEE0 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_252831158();
    __swift_project_value_buffer(v41, (uint64_t)qword_26B22C058);
    v42 = sub_252831138();
    os_log_type_t v43 = sub_252831618();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v44 = 0;
      _os_log_impl(&dword_25277D000, v42, v43, "Request URL for Utility Configuration API not found", v44, 2u);
      MEMORY[0x2533BE070](v44, -1, -1);
    }
    uint64_t v45 = v1[32];
    uint64_t v47 = v1[25];
    uint64_t v46 = v1[26];
    uint64_t v49 = v1[20];
    uint64_t v48 = v1[21];
    uint64_t v51 = v1[16];
    uint64_t v50 = v1[17];
    uint64_t v52 = v1[10];
    swift_release();

    v53 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
    v53(v47, v49);
    v53(v46, v49);
    sub_252781C54(v45, &qword_26B22BD58);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(v52, 1, 1, v51);
    goto LABEL_13;
  }
  uint64_t v55 = v1[22];
  uint64_t v54 = v1[23];
  uint64_t v56 = v1[20];
  uint64_t v57 = v1[14];
  v15(v54, v1[27], v56);
  v64(v55, v54, v56);
  sub_252830798();
  sub_252830778();
  if (v57)
  {
    unint64_t v58 = v1[14];
    uint64_t v59 = HIBYTE(v58) & 0xF;
    if ((v58 & 0x2000000000000000) == 0) {
      uint64_t v59 = v1[13] & 0xFFFFFFFFFFFFLL;
    }
    if (v59) {
      sub_2528307B8();
    }
  }
  sub_252804CA4(v1[18]);
  v66 = (char *)&dword_269C1D928 + dword_269C1D928;
  v60 = (void *)swift_task_alloc();
  v1[35] = v60;
  void *v60 = v1;
  v60[1] = sub_252781248;
  uint64_t v61 = v1[18];
  uint64_t v62 = v1[15];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v66)(v62, v61, v67, 0);
}

uint64_t sub_252781248()
{
  uint64_t v3 = (void *)*v1;
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v4 = v2[18];
  uint64_t v5 = v2[17];
  uint64_t v6 = v2[16];
  if (v0)
  {

    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v3[38] = v7;
    v7(v4, v6);
    uint64_t v8 = sub_2527817BC;
  }
  else
  {
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v3[36] = v9;
    v3[37] = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v9(v4, v6);
    uint64_t v8 = sub_2527813EC;
  }
  return MEMORY[0x270FA2498](v8, 0, 0);
}

uint64_t sub_2527813EC()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[15];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v30 = (void (*)(uint64_t, uint64_t))v0[36];
    sub_252781C54(v3, &qword_26B22BD40);
    if (qword_26B22BEE0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_26B22C058);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable to sign Utilities in Region request", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }
    uint64_t v9 = v0[25];
    uint64_t v8 = v0[26];
    uint64_t v10 = v0[23];
    uint64_t v12 = v0[20];
    uint64_t v11 = v0[21];
    uint64_t v13 = v0[19];
    uint64_t v14 = v0[16];
    uint64_t v15 = v0[17];
    uint64_t v26 = v0[10];
    uint64_t v28 = v0[32];
    swift_release();

    v30(v13, v14);
    unsigned int v16 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v16(v10, v12);
    v16(v9, v12);
    v16(v8, v12);
    sub_252781C54(v28, &qword_26B22BD58);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v26, 1, 1, v14);
  }
  else
  {
    uint64_t v25 = (void (*)(uint64_t, uint64_t))v0[36];
    uint64_t v29 = v0[26];
    uint64_t v31 = v0[32];
    uint64_t v27 = v0[25];
    uint64_t v17 = v0[23];
    uint64_t v19 = v0[20];
    uint64_t v18 = v0[21];
    uint64_t v20 = v0[19];
    uint64_t v21 = v0[10];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v21, v3, v1);
    sub_2528307E8();
    swift_release();
    v25(v20, v1);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v22(v17, v19);
    v22(v27, v19);
    v22(v29, v19);
    sub_252781C54(v31, &qword_26B22BD58);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v21, 0, 1, v1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_2527817BC()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[17] + 56))(v0[15], 1, 1, v0[16]);
  uint64_t v18 = (void (*)(uint64_t, uint64_t))v0[38];
  sub_252781C54(v0[15], &qword_26B22BD40);
  if (qword_26B22BEE0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_252831158();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B22C058);
  uint64_t v2 = sub_252831138();
  os_log_type_t v3 = sub_252831618();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_25277D000, v2, v3, "Unable to sign Utilities in Region request", v4, 2u);
    MEMORY[0x2533BE070](v4, -1, -1);
  }
  uint64_t v6 = v0[25];
  uint64_t v5 = v0[26];
  uint64_t v7 = v0[23];
  uint64_t v9 = v0[20];
  uint64_t v8 = v0[21];
  uint64_t v10 = v0[19];
  uint64_t v11 = v0[16];
  uint64_t v12 = v0[17];
  uint64_t v16 = v0[10];
  uint64_t v17 = v0[32];
  swift_release();

  v18(v10, v11);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v13(v7, v9);
  v13(v6, v9);
  v13(v5, v9);
  sub_252781C54(v17, &qword_26B22BD58);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v16, 1, 1, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

void sub_252781A68(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_252781A70@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

BOOL sub_252781A84(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_252781AB4(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_252781AC8(void *result)
{
  *v1 &= *result;
  return result;
}

BOOL sub_252781ADC(void *a1, void *a2)
{
  return *a1 == *a2;
}

void sub_252781AF0(void *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_252781AFC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_252781B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_252781BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_252781C54(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void type metadata accessor for SecCertificate(uint64_t a1)
{
}

void type metadata accessor for SecAccessControl(uint64_t a1)
{
}

void type metadata accessor for CFError(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_252781CFC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_252781D1C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
}

void type metadata accessor for SecKey(uint64_t a1)
{
}

void sub_252781D6C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_252781DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[10] = a8;
  v8[11] = v13;
  v8[8] = a6;
  v8[9] = a7;
  v8[6] = a4;
  v8[7] = a5;
  v8[4] = a2;
  v8[5] = a3;
  v8[3] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v8[12] = swift_task_alloc();
  uint64_t v9 = sub_2528307F8();
  v8[13] = v9;
  v8[14] = *(void *)(v9 - 8);
  v8[15] = swift_task_alloc();
  v8[16] = swift_task_alloc();
  v8[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  v8[18] = swift_task_alloc();
  uint64_t v10 = sub_252830BD8();
  v8[19] = v10;
  v8[20] = *(void *)(v10 - 8);
  v8[21] = swift_task_alloc();
  v8[22] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_252781FA8, 0, 0);
}

uint64_t sub_252781FA8()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 144);
  sub_25279D788(*(void *)(v0 + 80), *(void *)(v0 + 88));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_252781C54(*(void *)(v0 + 144), &qword_26B22BD58);
    if (qword_269C1CED0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D2E0);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Request URL for Token API not found", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }
    uint64_t v8 = *(void *)(v0 + 104);
    uint64_t v9 = *(void *)(v0 + 112);
    uint64_t v10 = *(void *)(v0 + 24);

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v10, 1, 1, v8);
    goto LABEL_25;
  }
  uint64_t v11 = *(void *)(v0 + 40);
  (*(void (**)(void, void, void))(*(void *)(v0 + 160) + 32))(*(void *)(v0 + 176), *(void *)(v0 + 144), *(void *)(v0 + 152));
  if (v11)
  {
    uint64_t v13 = *(void *)(v0 + 32);
    uint64_t v12 = *(void *)(v0 + 40);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_25279FF4C(v13, v12, 0xD000000000000011, 0x800000025283A840, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    char v15 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = 0xD000000000000012;
    uint64_t v17 = 0x800000025283A860;
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + 56);
    if (!v18)
    {
      if (qword_269C1CED0 != -1) {
        swift_once();
      }
      uint64_t v48 = sub_252831158();
      __swift_project_value_buffer(v48, (uint64_t)qword_269C2D2E0);
      v44 = sub_252831138();
      os_log_type_t v45 = sub_252831618();
      if (!os_log_type_enabled(v44, v45)) {
        goto LABEL_24;
      }
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v46 = 0;
      uint64_t v47 = "No authorization code or refresh token provided";
      goto LABEL_23;
    }
    uint64_t v19 = *(void *)(v0 + 48);
    swift_bridgeObjectRetain();
    char v20 = swift_isUniquelyReferenced_nonNull_native();
    sub_25279FF4C(v19, v18, 0x5468736572666572, 0xEC0000006E656B6FLL, v20);
    swift_bridgeObjectRelease();
    char v15 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = 0x5F48534552464552;
    uint64_t v17 = 0xED00004E454B4F54;
  }
  sub_25279FF4C(v16, v17, 0x707954746E617267, 0xE900000000000065, v15);
  swift_bridgeObjectRelease();
  uint64_t v21 = self;
  uint64_t v22 = (void *)sub_252831218();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 16) = 0;
  id v23 = objc_msgSend(v21, sel_dataWithJSONObject_options_error_, v22, 0, v0 + 16);

  id v24 = *(id *)(v0 + 16);
  if (!v23)
  {
    uint64_t v41 = v24;
    v42 = (void *)sub_252830B18();

    swift_willThrow();
    if (qword_269C1CED0 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_252831158();
    __swift_project_value_buffer(v43, (uint64_t)qword_269C2D2E0);
    v44 = sub_252831138();
    os_log_type_t v45 = sub_252831618();
    if (!os_log_type_enabled(v44, v45)) {
      goto LABEL_24;
    }
    uint64_t v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v46 = 0;
    uint64_t v47 = "Unable to encode Token request body";
LABEL_23:
    _os_log_impl(&dword_25277D000, v44, v45, v47, v46, 2u);
    MEMORY[0x2533BE070](v46, -1, -1);
LABEL_24:
    uint64_t v49 = *(void *)(v0 + 176);
    uint64_t v50 = *(void *)(v0 + 152);
    uint64_t v51 = *(void *)(v0 + 160);
    uint64_t v52 = *(void *)(v0 + 104);
    uint64_t v53 = *(void *)(v0 + 112);
    uint64_t v54 = *(void *)(v0 + 24);

    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v49, v50);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56))(v54, 1, 1, v52);
LABEL_25:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v55 = *(uint64_t (**)(void))(v0 + 8);
    return v55();
  }
  uint64_t v25 = *(void *)(v0 + 168);
  uint64_t v26 = *(void *)(v0 + 160);
  uint64_t v56 = *(void *)(v0 + 152);
  uint64_t v57 = *(void *)(v0 + 176);
  uint64_t v27 = *(void *)(v0 + 136);
  uint64_t v29 = *(void *)(v0 + 112);
  uint64_t v28 = *(void *)(v0 + 120);
  uint64_t v30 = *(void *)(v0 + 104);
  uint64_t v58 = *(void *)(v0 + 128);
  uint64_t v31 = sub_252830C68();
  unint64_t v59 = v32;
  uint64_t v60 = v31;
  unint64_t v33 = v32;

  *(void *)(v0 + 184) = v31;
  *(void *)(v0 + 192) = v33;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v25, v57, v56);
  sub_252830798();
  sub_252804CA4(v58);
  v34 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  *(void *)(v0 + 200) = v34;
  *(void *)(v0 + 208) = (v29 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v34(v28, v30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v27, v58, v30);
  sub_2528307B8();
  v34(v58, v30);
  sub_252830778();
  sub_252782DC8(v60, v59);
  sub_2528307D8();
  uint64_t v35 = dword_269C1D910;
  uint64_t v36 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v36;
  *uint64_t v36 = v0;
  v36[1] = sub_252782724;
  uint64_t v37 = *(void *)(v0 + 136);
  uint64_t v38 = *(void *)(v0 + 96);
  uint64_t v39 = *(void *)(v0 + 80);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C1D910 + v35))(v38, v37, v39);
}

uint64_t sub_252782724()
{
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v1 = sub_252782B84;
  }
  else
  {
    uint64_t v1 = sub_252782868;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_252782868()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[12];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_252781C54(v3, &qword_26B22BD40);
    if (qword_269C1CEC8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D2C8);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable to sign Token request", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }
    uint64_t v8 = (void (*)(uint64_t, uint64_t))v0[25];
    uint64_t v10 = v0[23];
    unint64_t v9 = v0[24];
    uint64_t v25 = v0[22];
    uint64_t v12 = v0[19];
    uint64_t v11 = v0[20];
    uint64_t v13 = v0[17];
    uint64_t v14 = v0[13];
    uint64_t v15 = v0[14];
    uint64_t v26 = v0[3];

    sub_252782E20(v10, v9);
    v8(v13, v14);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v25, v12);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v26, 1, 1, v14);
  }
  else
  {
    uint64_t v16 = (void (*)(uint64_t, uint64_t))v0[25];
    uint64_t v18 = v0[23];
    unint64_t v17 = v0[24];
    uint64_t v27 = v0[22];
    uint64_t v19 = v0[20];
    uint64_t v24 = v0[19];
    uint64_t v20 = v0[17];
    uint64_t v21 = v0[3];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v21, v3, v1);
    sub_2528307E8();
    sub_252782E20(v18, v17);
    v16(v20, v1);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v27, v24);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v21, 0, 1, v1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_252782B84()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[14] + 56))(v0[12], 1, 1, v0[13]);
  sub_252781C54(v0[12], &qword_26B22BD40);
  if (qword_269C1CEC8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_252831158();
  __swift_project_value_buffer(v1, (uint64_t)qword_269C2D2C8);
  uint64_t v2 = sub_252831138();
  os_log_type_t v3 = sub_252831618();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_25277D000, v2, v3, "Unable to sign Token request", v4, 2u);
    MEMORY[0x2533BE070](v4, -1, -1);
  }
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v0[25];
  uint64_t v7 = v0[23];
  unint64_t v6 = v0[24];
  uint64_t v15 = v0[22];
  uint64_t v9 = v0[19];
  uint64_t v8 = v0[20];
  uint64_t v10 = v0[17];
  uint64_t v11 = v0[13];
  uint64_t v12 = v0[14];
  uint64_t v16 = v0[3];

  sub_252782E20(v7, v6);
  v5(v10, v11);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v15, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v16, 1, 1, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_252782DC8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_252782E20(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_252782E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2527845D0(a1, (uint64_t)v12);
  if (!v13) {
    goto LABEL_15;
  }
  sub_2527845D0((uint64_t)v12, (uint64_t)v11);
  sub_2527846E4(0, (unint64_t *)&qword_269C1D040);
  if (!swift_dynamicCast())
  {
    sub_2527846E4(0, &qword_269C1D048);
    if (swift_dynamicCast())
    {

      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      goto LABEL_13;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
LABEL_15:
    sub_2527845D0(a1, a2);
    return sub_252784570((uint64_t)v12);
  }
  id v4 = v10;
  objc_msgSend(v4, sel_objCType);
  if (sub_2528313B8() == 99 && v5 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  char v7 = sub_252831A58();
  swift_bridgeObjectRelease();
  if (v7)
  {
LABEL_12:
    unsigned __int8 v8 = objc_msgSend(v4, sel_BOOLValue);
    *(void *)(a2 + 24) = MEMORY[0x263F8D4F8];

    *(unsigned char *)a2 = v8;
    goto LABEL_13;
  }

  sub_2527845D0(a1, a2);
LABEL_13:
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  return sub_252784570((uint64_t)v12);
}

uint64_t sub_252783014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  sub_2527845D0(v3, (uint64_t)&v11);
  if (!*((void *)&v12 + 1))
  {
    uint64_t result = sub_252784570((uint64_t)&v11);
    goto LABEL_7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF28);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_7:
    *a3 = 0u;
    a3[1] = 0u;
    return result;
  }
  if (*(void *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_2527D9A38(a1, a2);
    if (v9)
    {
      sub_252784638(*(void *)(v10 + 56) + 32 * v8, (uint64_t)&v11);
    }
    else
    {
      long long v11 = 0u;
      long long v12 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_252782E78((uint64_t)&v11, (uint64_t)a3);
  return sub_252784570((uint64_t)&v11);
}

void *sub_252783124(CLLocationDegrees a1, CLLocationDegrees a2)
{
  v74[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = sub_252831308();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = (void *)MEMORY[0x2533BDA70](v6);
  sub_252783A20(v74);
  long long v11 = v74[0];
  if (!v74[0])
  {
    if (qword_269C1CE90 != -1) {
LABEL_56:
    }
      swift_once();
    uint64_t v61 = sub_252831158();
    __swift_project_value_buffer(v61, (uint64_t)qword_269C2D250);
    uint64_t v62 = sub_252831138();
    os_log_type_t v63 = sub_252831618();
    if (!os_log_type_enabled(v62, v63)) {
      goto LABEL_53;
    }
    v64 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v64 = 0;
    v65 = "Unable to retrieve geoJSONs from geohash tile";
    goto LABEL_52;
  }
  uint64_t v12 = *((void *)v74[0] + 2);
  if (v12)
  {
    uint64_t v13 = 0;
    v73 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v14 = (void *)MEMORY[0x263F8EE78];
    *(void *)&long long v10 = 138412290;
    long long v68 = v10;
    v71 = v8;
    do
    {
      if (*(void *)(v11[v13 + 4] + 16))
      {
        swift_bridgeObjectRetain();
        sub_2527D9A38(6516580, 0xE300000000000000);
        if (v15)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          sub_2528312E8();
          uint64_t v16 = sub_2528312B8();
          unint64_t v18 = v17;
          swift_bridgeObjectRelease();
          (*v73)(v8, v4);
          if (v18 >> 60 != 15)
          {
            id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F108D8]), sel_init);
            uint64_t v72 = v16;
            uint64_t v20 = (void *)sub_252830C48();
            v74[0] = 0;
            id v21 = objc_msgSend(v19, sel_geoJSONObjectsWithData_error_, v20, v74);

            id v22 = v74[0];
            if (v21)
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D038);
              uint64_t v23 = sub_2528314F8();
              id v24 = v22;

              if ((v23 & 0xC000000000000001) != 0)
              {
                MEMORY[0x2533BD5C0](0, v23);
              }
              else
              {
                if (!*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
                {
                  __break(1u);
                  goto LABEL_56;
                }
                swift_unknownObjectRetain();
              }
              swift_bridgeObjectRelease();
              self;
              uint64_t v25 = (void *)swift_dynamicCastObjCClass();
              if (v25)
              {
                uint64_t v26 = v25;
                if (sub_252783F90(v25, a1, a2))
                {
                  uint64_t v69 = v4;
                  if (qword_269C1CE90 != -1) {
                    swift_once();
                  }
                  v70 = v14;
                  uint64_t v27 = sub_252831158();
                  __swift_project_value_buffer(v27, (uint64_t)qword_269C2D250);
                  uint64_t v28 = sub_252831138();
                  os_log_type_t v29 = sub_252831628();
                  if (os_log_type_enabled(v28, v29))
                  {
                    uint64_t v30 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)uint64_t v30 = 0;
                    _os_log_impl(&dword_25277D000, v28, v29, "Found matching Polygon", v30, 2u);
                    MEMORY[0x2533BE070](v30, -1, -1);
                  }

                  uint64_t v31 = sub_252831138();
                  os_log_type_t v32 = sub_2528315F8();
                  if (os_log_type_enabled(v31, v32))
                  {
                    unint64_t v33 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)unint64_t v33 = 0;
                    _os_log_impl(&dword_25277D000, v31, v32, "Extracting Utility Info", v33, 2u);
                    MEMORY[0x2533BE070](v33, -1, -1);
                  }

                  id v34 = objc_msgSend(v26, sel_properties);
                  if (v34)
                  {
                    uint64_t v35 = v34;
                    uint64_t v36 = sub_252830C68();
                    unint64_t v38 = v37;
                  }
                  else
                  {
                    uint64_t v36 = 0;
                    unint64_t v38 = 0xF000000000000000;
                  }
                  uint64_t v52 = sub_25278432C(v36, v38);
                  uint64_t v54 = v53;
                  sub_252783CC0(v36, v38);
                  if (v54)
                  {
                    uint64_t v14 = v70;
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      uint64_t v14 = sub_252821A90(0, v14[2] + 1, 1, v14);
                    }
                    unint64_t v56 = v14[2];
                    unint64_t v55 = v14[3];
                    if (v56 >= v55 >> 1) {
                      uint64_t v14 = sub_252821A90((void *)(v55 > 1), v56 + 1, 1, v14);
                    }
                    v14[2] = v56 + 1;
                    uint64_t v57 = &v14[2 * v56];
                    v57[4] = v52;
                    v57[5] = v54;
                    sub_252783CC0(v72, v18);
                    swift_unknownObjectRelease();
                    uint64_t v4 = v69;
                    uint64_t v8 = v71;
                  }
                  else
                  {
                    uint64_t v58 = sub_252831138();
                    os_log_type_t v59 = sub_252831618();
                    if (os_log_type_enabled(v58, v59))
                    {
                      uint64_t v60 = (uint8_t *)swift_slowAlloc();
                      *(_WORD *)uint64_t v60 = 0;
                      _os_log_impl(&dword_25277D000, v58, v59, "Unable to extract Utility Information from GeoFeature", v60, 2u);
                      MEMORY[0x2533BE070](v60, -1, -1);
                    }
                    sub_252783CC0(v72, v18);

                    swift_unknownObjectRelease();
                    uint64_t v4 = v69;
                    uint64_t v14 = v70;
                    uint64_t v8 = v71;
                  }
                }
                else
                {
                  sub_252783CC0(v72, v18);
                  swift_unknownObjectRelease();
                  uint64_t v8 = v71;
                }
              }
              else
              {
                swift_unknownObjectRelease();
                sub_252783CC0(v72, v18);
                uint64_t v8 = v71;
              }
            }
            else
            {
              id v39 = v74[0];
              uint64_t v40 = (void *)sub_252830B18();

              swift_willThrow();
              if (qword_269C1CE90 != -1) {
                swift_once();
              }
              uint64_t v41 = sub_252831158();
              __swift_project_value_buffer(v41, (uint64_t)qword_269C2D250);
              id v42 = v40;
              id v43 = v40;
              v44 = sub_252831138();
              os_log_type_t v45 = sub_252831618();
              if (os_log_type_enabled(v44, v45))
              {
                uint64_t v46 = swift_slowAlloc();
                uint64_t v47 = swift_slowAlloc();
                v70 = v14;
                uint64_t v48 = (void *)v47;
                *(_DWORD *)uint64_t v46 = v68;
                id v49 = v40;
                uint64_t v50 = _swift_stdlib_bridgeErrorToNSError();
                *(void *)(v46 + 4) = v50;
                *uint64_t v48 = v50;

                _os_log_impl(&dword_25277D000, v44, v45, "Error while decoding geoJSON File %@", (uint8_t *)v46, 0xCu);
                __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D030);
                swift_arrayDestroy();
                uint64_t v51 = v48;
                uint64_t v14 = v70;
                MEMORY[0x2533BE070](v51, -1, -1);
                MEMORY[0x2533BE070](v46, -1, -1);
                sub_252783CC0(v72, v18);
              }
              else
              {
                sub_252783CC0(v72, v18);
              }
              uint64_t v8 = v71;
            }
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      ++v13;
    }
    while (v12 != v13);
    swift_bridgeObjectRelease();
    if (v14[2]) {
      return v14;
    }
    goto LABEL_48;
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)MEMORY[0x263F8EE78];
  if (!*(void *)(MEMORY[0x263F8EE78] + 16))
  {
LABEL_48:
    swift_bridgeObjectRelease();
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v66 = sub_252831158();
    __swift_project_value_buffer(v66, (uint64_t)qword_269C2D250);
    uint64_t v62 = sub_252831138();
    os_log_type_t v63 = sub_252831628();
    if (!os_log_type_enabled(v62, v63)) {
      goto LABEL_53;
    }
    v64 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v64 = 0;
    v65 = "No matching utility territory polygon in geohash tile.";
LABEL_52:
    _os_log_impl(&dword_25277D000, v62, v63, v65, v64, 2u);
    MEMORY[0x2533BE070](v64, -1, -1);
LABEL_53:

    return 0;
  }
  return v14;
}

void sub_252783A20(void *a1@<X8>)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  id v2 = objc_msgSend(self, sel_defaultManager);
  uint64_t v3 = sub_2527CF6B8();
  unint64_t v5 = v4;

  if (v5 >> 60 != 15)
  {
    uint64_t v6 = self;
    uint64_t v7 = (void *)sub_252830C48();
    *(void *)&long long v17 = 0;
    id v8 = objc_msgSend(v6, sel_JSONObjectWithData_options_error_, v7, 0, &v17);

    id v9 = (id)v17;
    if (v8)
    {
      sub_252831738();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v10 = v9;
      long long v11 = (void *)sub_252830B18();

      swift_willThrow();
      memset(v19, 0, sizeof(v19));
    }
    sub_252783014(1935896420, 0xE400000000000000, &v17);
    if (v18)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C1D060);
      if (swift_dynamicCast())
      {
        sub_252783CC0(v3, v5);
        sub_252784570((uint64_t)v19);
        *a1 = v16;
        return;
      }
    }
    else
    {
      sub_252784570((uint64_t)&v17);
    }
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_252831158();
    __swift_project_value_buffer(v12, (uint64_t)qword_269C2D250);
    uint64_t v13 = sub_252831138();
    os_log_type_t v14 = sub_252831618();
    if (os_log_type_enabled(v13, v14))
    {
      char v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v15 = 0;
      _os_log_impl(&dword_25277D000, v13, v14, "Unable to deserialize Geohash GeoJSON document", v15, 2u);
      MEMORY[0x2533BE070](v15, -1, -1);
    }
    sub_252783CC0(v3, v5);

    sub_252784570((uint64_t)v19);
  }
  *a1 = 0;
}

uint64_t sub_252783CC0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_252782E20(a1, a2);
  }
  return a1;
}

uint64_t sub_252783CD4(void *a1)
{
  id v3 = objc_msgSend(a1, sel_geometry);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D050);
  unint64_t v4 = sub_2528314F8();

  uint64_t v5 = sub_25280A5A0(v4);
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_11;
  }
  if ((v5 & 0xC000000000000001) != 0)
  {
    id v6 = (id)MEMORY[0x2533BD5C0](0, v5);
  }
  else
  {
    if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_22;
    }
    id v6 = *(id *)(v5 + 32);
  }
  uint64_t v7 = v6;
  unint64_t v1 = 0x265382000uLL;
  id v8 = objc_msgSend(v6, sel_polygons);

  sub_2527846E4(0, &qword_269C1D058);
  unint64_t v9 = sub_2528314F8();

  if (v9 >> 62)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2528318C8();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_7:
  swift_bridgeObjectRelease();
  if (v10)
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v11 = (id)MEMORY[0x2533BD5C0](0, v5);
    }
    else {
      id v11 = *(id *)(v5 + 32);
    }
    id v19 = v11;
    swift_bridgeObjectRelease();
    id v20 = [v19 *(SEL *)(v1 + 3264)];

    uint64_t v14 = sub_2528314F8();
    return v14;
  }
  swift_bridgeObjectRelease();
LABEL_11:
  id v12 = objc_msgSend(a1, sel_geometry);
  unint64_t v13 = sub_2528314F8();

  uint64_t v14 = sub_25280A5AC(v13);
  swift_bridgeObjectRelease();
  if (!v14)
  {
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_252831158();
    __swift_project_value_buffer(v15, (uint64_t)qword_269C2D250);
    uint64_t v16 = sub_252831138();
    os_log_type_t v17 = sub_252831608();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_25277D000, v16, v17, "Unable to locate Polygons in current GeoFeature", v18, 2u);
      MEMORY[0x2533BE070](v18, -1, -1);
    }

    return 0;
  }
  return v14;
}

uint64_t sub_252783F90(void *a1, CLLocationDegrees a2, CLLocationDegrees a3)
{
  uint64_t v37 = sub_252830F48();
  uint64_t v6 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  id v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = sub_252783CD4(a1);
  if (!v9)
  {
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_252831158();
    __swift_project_value_buffer(v27, (uint64_t)qword_269C2D250);
    uint64_t v28 = sub_252831138();
    os_log_type_t v29 = sub_252831608();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl(&dword_25277D000, v28, v29, "No multiPolygons for the current Geofeature", v30, 2u);
      MEMORY[0x2533BE070](v30, -1, -1);
    }

    return 0;
  }
  unint64_t v10 = v9;
  if (v9 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_2528318C8();
    if (v11) {
      goto LABEL_4;
    }
    goto LABEL_22;
  }
  uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v11)
  {
LABEL_22:
    swift_bridgeObjectRelease_n();
    return 0;
  }
LABEL_4:
  unint64_t v38 = v10 & 0xC000000000000001;
  uint64_t v36 = (void (**)(char *, void, uint64_t))(v6 + 104);
  unsigned int v35 = *MEMORY[0x263F00040];
  unint64_t v33 = &v41;
  id v34 = v40;
  os_log_type_t v32 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v12 = 4;
  unint64_t v13 = 0x265382000;
  while (1)
  {
    uint64_t v6 = v12 - 4;
    if (v38) {
      id v14 = (id)MEMORY[0x2533BD5C0](v12 - 4, v10);
    }
    else {
      id v14 = *(id *)(v10 + 8 * v12);
    }
    uint64_t v15 = v14;
    uint64_t v16 = v12 - 3;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10A00]), sel_initWithPolygon_, v14);
    v42.latitude = a2;
    v42.longitude = a3;
    MKMapPoint v18 = MKMapPointForCoordinate(v42);
    objc_msgSend(v17, sel_pointForMapPoint_, v18.x, v18.y);
    id v19 = [v17 *(SEL *)(v13 + 3248)];

    if (!v19)
    {

      goto LABEL_6;
    }
    unint64_t v20 = v10;
    uint64_t result = (uint64_t)[v17 *(SEL *)(v13 + 3248)];
    if (!result) {
      break;
    }
    id v22 = (void *)result;
    uint64_t v23 = v37;
    (*v36)(v8, v35, v37);
    id v24 = v34;
    *id v34 = 0;
    v24[1] = 0;
    uint64_t v39 = 0x3FF0000000000000;
    v40[2] = 0x3FF0000000000000;
    uint64_t v25 = v33;
    *unint64_t v33 = 0;
    v25[1] = 0;
    char v26 = sub_252831678();

    (*v32)(v8, v23);
    unint64_t v10 = v20;
    if (v26)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
LABEL_6:
    ++v12;
    unint64_t v13 = 0x265382000uLL;
    if (v16 == v11) {
      goto LABEL_22;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25278432C(uint64_t a1, unint64_t a2)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  if (a2 >> 60 == 15)
  {
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_252831158();
    __swift_project_value_buffer(v2, (uint64_t)qword_269C2D250);
    id v3 = sub_252831138();
    os_log_type_t v4 = sub_252831618();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_25277D000, v3, v4, "Unable to find utility in matching Polygon", v5, 2u);
      MEMORY[0x2533BE070](v5, -1, -1);
    }

    return 0;
  }
  id v8 = self;
  sub_252782DC8(a1, a2);
  unint64_t v9 = (void *)sub_252830C48();
  *(void *)&long long v16 = 0;
  id v10 = objc_msgSend(v8, sel_JSONObjectWithData_options_error_, v9, 0, &v16);

  id v11 = (id)v16;
  if (v10)
  {
    sub_252831738();
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v12 = v11;
    unint64_t v13 = (void *)sub_252830B18();

    swift_willThrow();
    memset(v18, 0, sizeof(v18));
  }
  sub_252783014(25705, 0xE200000000000000, &v16);
  sub_252783CC0(a1, a2);
  sub_252784570((uint64_t)v18);
  if (!v17)
  {
    sub_252784570((uint64_t)&v16);
    return 0;
  }
  if (swift_dynamicCast()) {
    return v15;
  }
  else {
    return 0;
  }
}

uint64_t sub_252784570(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22C010);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2527845D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22C010);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_252784638(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_2527846E4(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t static UtilityServices.fetchUtilityRecords(token:date:recordType:offset:limit:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(v8 + 32) = *a5;
  long long v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v16;
  *long long v16 = v8;
  v16[1] = sub_252784810;
  return sub_252806C0C(a1, a2, a3, a4, (unsigned char *)(v8 + 32), a6, a7, a8);
}

uint64_t sub_252784810()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 24) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_252784944, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_252784944()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

HomeUtilityServices::UtilityRecordType_optional __swiftcall UtilityRecordType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_252831918();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static UtilityRecordType.allCases.getter()
{
  return &unk_2702C3F88;
}

uint64_t UtilityRecordType.rawValue.getter()
{
  uint64_t v1 = 0x696F506567617355;
  if (*v0 != 1) {
    uint64_t v1 = 0x6D75536567617355;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C61767265746E49;
  }
}

uint64_t sub_252784A38(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2527A6E74(*a1, *a2);
}

uint64_t sub_252784A44()
{
  return sub_252831B18();
}

uint64_t sub_252784B00()
{
  sub_252831258();

  return swift_bridgeObjectRelease();
}

uint64_t sub_252784BA8()
{
  return sub_252831B18();
}

HomeUtilityServices::UtilityRecordType_optional sub_252784C60(Swift::String *a1)
{
  return UtilityRecordType.init(rawValue:)(*a1);
}

void sub_252784C6C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xED00006B636F6C42;
  unint64_t v4 = 0xEA0000000000746ELL;
  uint64_t v5 = 0x696F506567617355;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6D75536567617355;
    unint64_t v4 = 0xEC0000007972616DLL;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6C61767265746E49;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

void sub_252784CE4(void *a1@<X8>)
{
  *a1 = &unk_2702C3FB0;
}

uint64_t UtilityRecordsResponse.records.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UtilityRecordsResponse.records.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*UtilityRecordsResponse.records.modify())()
{
  return nullsub_1;
}

uint64_t UtilityRecordsResponse.offset.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_252782DC8(v1, *(void *)(v0 + 16));
  return v1;
}

uint64_t UtilityRecordsResponse.offset.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_252782E20(*(void *)(v2 + 8), *(void *)(v2 + 16));
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*UtilityRecordsResponse.offset.modify())()
{
  return nullsub_1;
}

uint64_t UtilityRecordsResponse.moreToCome.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t UtilityRecordsResponse.moreToCome.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result;
  return result;
}

uint64_t (*UtilityRecordsResponse.moreToCome.modify())()
{
  return nullsub_1;
}

uint64_t UtilityRecordsResponse.init(records:offset:moreToCome:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(unsigned char *)(a5 + 24) = a4;
  return result;
}

unint64_t sub_252784E1C()
{
  unint64_t result = qword_269C1D078;
  if (!qword_269C1D078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D078);
  }
  return result;
}

unint64_t sub_252784E74()
{
  unint64_t result = qword_269C1D080;
  if (!qword_269C1D080)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C1D088);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D080);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for UtilityRecordType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for UtilityRecordType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252785080);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_2527850A8(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_2527850B0(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for UtilityRecordType()
{
  return &type metadata for UtilityRecordType;
}

uint64_t initializeBufferWithCopyOfBuffer for UtilityRecordsResponse(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for UtilityRecordsResponse(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v3 = *(void *)(a1 + 16);

  return sub_252782E20(v2, v3);
}

uint64_t initializeWithCopy for UtilityRecordsResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_252782DC8(v4, v5);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithCopy for UtilityRecordsResponse(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  sub_252782DC8(v4, v5);
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  sub_252782E20(v6, v7);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for UtilityRecordsResponse(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_252782E20(v4, v5);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for UtilityRecordsResponse(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UtilityRecordsResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UtilityRecordsResponse()
{
  return &type metadata for UtilityRecordsResponse;
}

uint64_t static UtilityServices.verifyServiceAddress(_:withSession:)(uint64_t a1, uint64_t a2)
{
  unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269C1DF08 + dword_269C1DF08);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_2527853B0;
  return v7(a1, a2);
}

uint64_t sub_2527853B0(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  unint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_252785630(void *a1, void *a2, void *aBlock)
{
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = _Block_copy(aBlock);
  id v10 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269C1DF08 + dword_269C1DF08);
  id v6 = a1;
  id v7 = a2;
  uint64_t v8 = (void *)swift_task_alloc();
  v3[5] = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_25278570C;
  return v10((uint64_t)v6, (uint64_t)v7);
}

uint64_t sub_25278570C()
{
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void **)(*v1 + 24);
  unint64_t v5 = *(void **)(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();

  if (v2)
  {
    uint64_t v7 = sub_252830B08();

    uint64_t v8 = 0;
    unint64_t v9 = (void *)v7;
  }
  else
  {
    type metadata accessor for MatchedServiceAddress();
    uint64_t v8 = sub_2528314E8();
    swift_bridgeObjectRelease();
    uint64_t v7 = 0;
    unint64_t v9 = (void *)v8;
  }
  id v10 = *(void (***)(void, void, void))(v3 + 32);
  v10[2](v10, v8, v7);

  _Block_release(v10);
  uint64_t v11 = *(uint64_t (**)(void))(v6 + 8);
  return v11();
}

id MatchedServiceAddress.address.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21MatchedServiceAddress_address);
}

uint64_t MatchedServiceAddress.matchType.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21MatchedServiceAddress_matchType);
}

id MatchedServiceAddress.__allocating_init(address:matchType:)(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC19HomeUtilityServices21MatchedServiceAddress_address] = a1;
  *(void *)&v5[OBJC_IVAR____TtC19HomeUtilityServices21MatchedServiceAddress_matchType] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id MatchedServiceAddress.init(address:matchType:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC19HomeUtilityServices21MatchedServiceAddress_address] = a1;
  *(void *)&v2[OBJC_IVAR____TtC19HomeUtilityServices21MatchedServiceAddress_matchType] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for MatchedServiceAddress();
  return objc_msgSendSuper2(&v4, sel_init);
}

id MatchedServiceAddress.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void MatchedServiceAddress.init()()
{
}

BOOL sub_252785A20(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t _s19HomeUtilityServices20NetworkInternalErrorO9hashValueSivg_0()
{
  return sub_252831B18();
}

uint64_t sub_252785A80()
{
  return sub_252831B08();
}

uint64_t sub_252785AAC()
{
  return sub_252831B18();
}

uint64_t sub_252785AF0()
{
  if (*v0) {
    return 0x707954686374616DLL;
  }
  else {
    return 0x73736572646461;
  }
}

uint64_t sub_252785B30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252786828(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252785B58()
{
  return 0;
}

void sub_252785B64(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_252785B70(uint64_t a1)
{
  unint64_t v2 = sub_25278633C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252785BAC(uint64_t a1)
{
  unint64_t v2 = sub_25278633C();

  return MEMORY[0x270FA00B8](a1, v2);
}

id MatchedServiceAddress.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MatchedServiceAddress();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_252785C2C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D0A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25278633C();
  sub_252831B38();
  uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC19HomeUtilityServices21MatchedServiceAddress_address);
  HIBYTE(v10) = 0;
  type metadata accessor for UtilityServiceAddress();
  sub_2527863E4(&qword_269C1D0B8);
  sub_252831A18();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC19HomeUtilityServices21MatchedServiceAddress_matchType);
    HIBYTE(v10) = 1;
    sub_252786390();
    sub_252831A18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id MatchedServiceAddress.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return MatchedServiceAddress.init(from:)(a1);
}

id MatchedServiceAddress.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D0C8);
  uint64_t v15 = *(void *)(v4 - 8);
  uint64_t v16 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25278633C();
  uint64_t v8 = v1;
  id v9 = v7;
  sub_252831B28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

    type metadata accessor for MatchedServiceAddress();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = v15;
    type metadata accessor for UtilityServiceAddress();
    char v18 = 0;
    sub_2527863E4(&qword_269C1D0D0);
    uint64_t v11 = v16;
    sub_252831998();
    *(void *)&v8[OBJC_IVAR____TtC19HomeUtilityServices21MatchedServiceAddress_address] = v19;
    char v18 = 1;
    sub_252786428();
    sub_252831998();
    *(void *)&v8[OBJC_IVAR____TtC19HomeUtilityServices21MatchedServiceAddress_matchType] = v19;

    uint64_t v13 = (objc_class *)type metadata accessor for MatchedServiceAddress();
    v17.receiver = v8;
    v17.super_class = v13;
    id v9 = objc_msgSendSuper2(&v17, sel_init);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v11);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v9;
}

id sub_2527860C4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for MatchedServiceAddress());
  id result = MatchedServiceAddress.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_252786118(void *a1)
{
  return sub_252785C2C(a1);
}

unint64_t ServiceAddressMatchType.init(rawValue:)(unint64_t result)
{
  if (result > 2) {
    return 0;
  }
  return result;
}

uint64_t sub_252786150()
{
  return sub_252831B18();
}

uint64_t sub_252786198()
{
  return sub_252831B08();
}

uint64_t sub_2527861C4()
{
  return sub_252831B18();
}

uint64_t *sub_252786208@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  BOOL v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2) {
    uint64_t v2 = 0;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  return result;
}

uint64_t sub_252786224()
{
  return sub_2528314C8();
}

uint64_t sub_252786284()
{
  return sub_2528314A8();
}

uint64_t type metadata accessor for MatchedServiceAddress()
{
  return self;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_25278633C()
{
  unint64_t result = qword_269C1D0B0;
  if (!qword_269C1D0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D0B0);
  }
  return result;
}

unint64_t sub_252786390()
{
  unint64_t result = qword_269C1D0C0;
  if (!qword_269C1D0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D0C0);
  }
  return result;
}

uint64_t sub_2527863E4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for UtilityServiceAddress();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_252786428()
{
  unint64_t result = qword_269C1D0D8;
  if (!qword_269C1D0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D0D8);
  }
  return result;
}

unint64_t sub_252786480()
{
  unint64_t result = qword_269C1D0E0;
  if (!qword_269C1D0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D0E0);
  }
  return result;
}

uint64_t method lookup function for MatchedServiceAddress(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MatchedServiceAddress);
}

uint64_t dispatch thunk of MatchedServiceAddress.__allocating_init(address:matchType:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of MatchedServiceAddress.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MatchedServiceAddress.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for ServiceAddressMatchType()
{
  return &type metadata for ServiceAddressMatchType;
}

uint64_t getEnumTagSinglePayload for MatchedServiceAddress.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MatchedServiceAddress.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2527866DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_252786704(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MatchedServiceAddress.CodingKeys()
{
  return &type metadata for MatchedServiceAddress.CodingKeys;
}

unint64_t sub_252786724()
{
  unint64_t result = qword_269C1D0E8;
  if (!qword_269C1D0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D0E8);
  }
  return result;
}

unint64_t sub_25278677C()
{
  unint64_t result = qword_269C1D0F0;
  if (!qword_269C1D0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D0F0);
  }
  return result;
}

unint64_t sub_2527867D4()
{
  unint64_t result = qword_269C1D0F8;
  if (!qword_269C1D0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D0F8);
  }
  return result;
}

uint64_t sub_252786828(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73736572646461 && a2 == 0xE700000000000000;
  if (v2 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x707954686374616DLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252786928()
{
  _Block_release(*(const void **)(v0 + 32));

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_252786970()
{
  BOOL v2 = (void *)v0[2];
  int v3 = (void *)v0[3];
  unsigned int v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_252786A30;
  char v6 = (uint64_t (*)(void *, void *, void *))((char *)&dword_269C1D108 + dword_269C1D108);
  return v6(v2, v3, v4);
}

uint64_t sub_252786A30()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_252786B28()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_252786D4C;
  char v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_269C1E7E8 + dword_269C1E7E8);
  return v6(v2, v3, v4);
}

uint64_t objectdestroy_11Tm()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_252786C2C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  char v6 = (int *)v1[4];
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *BOOL v7 = v2;
  v7[1] = sub_252786D4C;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_269C1E7F0 + dword_269C1E7F0);
  return v8(a1, v4, v5, v6);
}

unint64_t sub_252786CF8()
{
  unint64_t result = qword_269C1D128;
  if (!qword_269C1D128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D128);
  }
  return result;
}

unint64_t sub_252786D50(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4B0);
  uint64_t v2 = sub_2528318F8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2527933FC(v6, (uint64_t)&v15, &qword_269C1D4B8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_2527D9A38(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_2527933EC(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_252786E88(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D158);
  uint64_t v2 = (void *)sub_2528318F8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_2527D9A38(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    void *v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_252786FAC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4A0);
  uint64_t v2 = sub_2528318F8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2527933FC(v6, (uint64_t)v15, &qword_269C1D4A8);
    unint64_t result = sub_2527D9B54((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_2527933EC(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_252787170()
{
  id v0 = objc_msgSend(self, sel_ephemeralSessionConfiguration);
  id v1 = objc_msgSend(self, sel_sessionWithConfiguration_, v0);

  return v1;
}

uint64_t static UtilityServices.configuration(_:)(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_252787274;
  return sub_2527BA828(a1);
}

uint64_t sub_252787274(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_2527874E8(void *a1, void *aBlock)
{
  v2[2] = a1;
  v2[3] = _Block_copy(aBlock);
  id v4 = a1;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_252787598;
  return sub_2527BA828((uint64_t)v4);
}

uint64_t sub_252787598(uint64_t a1)
{
  uint64_t v3 = *v1;
  id v4 = *(void **)(*v1 + 16);
  uint64_t v5 = *v1;
  swift_task_dealloc();

  if (a1)
  {
    uint64_t v6 = (void *)sub_252831218();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(void (***)(void, void))(v3 + 24);
  ((void (**)(void, void *))v7)[2](v7, v6);

  _Block_release(v7);
  char v8 = *(uint64_t (**)(void))(v5 + 8);
  return v8();
}

uint64_t static UtilityServices.isSupportedInRegion(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2527BABD8();
  LOBYTE(a2) = sub_252787764(a1, a2, v4);
  swift_bridgeObjectRelease();
  return a2 & 1;
}

uint64_t sub_252787764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_252831AF8();
    sub_252831258();
    uint64_t v6 = sub_252831B18();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      long long v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_252831A58() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_252831A58() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t static UtilityServices.deviceSupportsUtilityOnboarding()()
{
  return DeviceIdentityIsSupported();
}

id UtilityServices.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UtilityServices();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for UtilityServices()
{
  return self;
}

id UtilityServices.__deallocating_deinit()
{
  return sub_25278F1A4(type metadata accessor for UtilityServices);
}

uint64_t static UtilityServices.utilityIDLookup(for:withSession:)(uint64_t a1, double a2, double a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, double, double))((char *)&dword_269C1E020 + dword_269C1E020);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_2527853B0;
  return v9(a1, a2, a3);
}

uint64_t sub_252787C18(void *a1, void *aBlock, double a3, double a4)
{
  v4[2] = a1;
  v4[3] = _Block_copy(aBlock);
  long long v11 = (uint64_t (*)(uint64_t, double, double))((char *)&dword_269C1E020 + dword_269C1E020);
  id v8 = a1;
  uint64_t v9 = (void *)swift_task_alloc();
  v4[4] = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_252787CFC;
  return v11((uint64_t)v8, a3, a4);
}

uint64_t sub_252787CFC()
{
  objc_super v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void **)(*v1 + 16);
  uint64_t v5 = *v1;
  swift_task_dealloc();

  if (v2)
  {
    uint64_t v6 = sub_252830B08();

    uint64_t v7 = 0;
    id v8 = (void *)v6;
  }
  else
  {
    uint64_t v7 = sub_2528314E8();
    swift_bridgeObjectRelease();
    uint64_t v6 = 0;
    id v8 = (void *)v7;
  }
  uint64_t v9 = *(void (***)(void, void, void))(v3 + 24);
  v9[2](v9, v7, v6);

  _Block_release(v9);
  uint64_t v10 = *(uint64_t (**)(void))(v5 + 8);
  return v10();
}

uint64_t static UtilityServices.allUtilitiesInRegion(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C1E010 + dword_269C1E010);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_252793470;
  return v9(a1, a2, a3);
}

uint64_t sub_2527880C8(int a1, void *a2, void *aBlock)
{
  v3[2] = a2;
  v3[3] = _Block_copy(aBlock);
  uint64_t v5 = sub_2528312A8();
  uint64_t v7 = v6;
  v3[4] = v6;
  long long v11 = (uint64_t (*)(uint64_t, uint64_t, id))((char *)&dword_269C1E010 + dword_269C1E010);
  id v8 = a2;
  uint64_t v9 = (void *)swift_task_alloc();
  v3[5] = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_2527881B8;
  return v11(v5, v7, v8);
}

uint64_t sub_2527881B8()
{
  objc_super v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void **)(*v1 + 16);
  uint64_t v5 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v6 = sub_252830B08();

    uint64_t v7 = 0;
    id v8 = (void *)v6;
  }
  else
  {
    type metadata accessor for UtilityRegion();
    uint64_t v7 = sub_2528314E8();
    swift_bridgeObjectRelease();
    uint64_t v6 = 0;
    id v8 = (void *)v7;
  }
  uint64_t v9 = *(void (***)(void, void, void))(v3 + 24);
  v9[2](v9, v7, v6);

  _Block_release(v9);
  uint64_t v10 = *(uint64_t (**)(void))(v5 + 8);
  return v10();
}

uint64_t static UtilityServices.utilityConfiguration(for:withSession:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_252788414;
  return sub_2527F21B4(a1, a2, a3);
}

uint64_t sub_252788414(uint64_t a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v7(a1);
  }
}

uint64_t sub_2527886C4(int a1, void *a2, void *aBlock)
{
  v3[2] = a2;
  v3[3] = _Block_copy(aBlock);
  uint64_t v5 = sub_2528312A8();
  uint64_t v7 = v6;
  v3[4] = v6;
  id v8 = a2;
  uint64_t v9 = (void *)swift_task_alloc();
  v3[5] = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_25278879C;
  return sub_2527F21B4(v5, v7, (uint64_t)v8);
}

uint64_t sub_25278879C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void **)(*v2 + 16);
  uint64_t v7 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  id v8 = *(void (***)(void, void, void))(v5 + 24);
  if (v3)
  {
    uint64_t v9 = (void *)sub_252830B08();

    ((void (**)(void, void, void *))v8)[2](v8, 0, v9);
    _Block_release(v8);
  }
  else
  {
    ((void (**)(void, void *, void))v8)[2](v8, a1, 0);
    _Block_release(v8);
  }
  uint64_t v10 = *(uint64_t (**)(void))(v7 + 8);
  return v10();
}

uint64_t sub_2527889B8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config + 248);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_252788A64()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config + 296);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_252788B18()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config + 240);
  if (v1)
  {
    int64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      uint64_t v19 = MEMORY[0x263F8EE78];
      sub_25278FF14(0, v2, 0);
      uint64_t v3 = v19;
      uint64_t v4 = (uint64_t *)(v1 + 56);
      do
      {
        uint64_t v6 = *(v4 - 3);
        uint64_t v5 = *(v4 - 2);
        uint64_t v8 = *(v4 - 1);
        uint64_t v7 = *v4;
        uint64_t v19 = v3;
        unint64_t v10 = *(void *)(v3 + 16);
        unint64_t v9 = *(void *)(v3 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v10 >= v9 >> 1)
        {
          sub_25278FF14(v9 > 1, v10 + 1, 1);
          uint64_t v3 = v19;
        }
        v4 += 4;
        *(void *)(v3 + 16) = v10 + 1;
        uint64_t v11 = (void *)(v3 + 32 * v10);
        v11[4] = v6;
        v11[5] = v5;
        v11[6] = v8;
        v11[7] = v7;
        --v2;
      }
      while (v2);
    }
    else if (!*(void *)(MEMORY[0x263F8EE78] + 16))
    {
      uint64_t v17 = MEMORY[0x263F8EE80];
      goto LABEL_15;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D158);
    uint64_t v17 = sub_2528318F8();
LABEL_15:
    uint64_t v19 = v17;
    char v18 = (void *)swift_bridgeObjectRetain();
    sub_25278FF54(v18, 1, &v19);
    swift_bridgeObjectRelease();
    return v19;
  }
  if (qword_26B22BF08 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_252831158();
  __swift_project_value_buffer(v12, (uint64_t)qword_26B22C0A0);
  BOOL v13 = sub_252831138();
  os_log_type_t v14 = sub_252831618();
  if (os_log_type_enabled(v13, v14))
  {
    unint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v15 = 0;
    _os_log_impl(&dword_25277D000, v13, v14, "No Alternate Supplier name found in config.", v15, 2u);
    MEMORY[0x2533BE070](v15, -1, -1);
  }

  return 0;
}

uint64_t sub_252788D48(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config + 240);
  if (!v3)
  {
    if (qword_26B22BF08 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_252831158();
    __swift_project_value_buffer(v18, (uint64_t)qword_26B22C0A0);
    uint64_t v19 = sub_252831138();
    os_log_type_t v20 = sub_252831618();
    if (os_log_type_enabled(v19, v20))
    {
      id v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v21 = 0;
      _os_log_impl(&dword_25277D000, v19, v20, "No Alternate Supplier name found in config.", v21, 2u);
      MEMORY[0x2533BE070](v21, -1, -1);
    }

    return 0;
  }
  uint64_t v6 = *(void *)(v3 + 16);
  if (!v6)
  {
LABEL_10:
    if (qword_26B22BF08 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_252831158();
    __swift_project_value_buffer(v10, (uint64_t)qword_26B22C0A0);
    uint64_t v11 = sub_252831138();
    os_log_type_t v12 = sub_252831618();
    if (os_log_type_enabled(v11, v12))
    {
      BOOL v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v13 = 0;
      _os_log_impl(&dword_25277D000, v11, v12, "Could not locate Alternate Supplier id in Utility Config.", v13, 2u);
      MEMORY[0x2533BE070](v13, -1, -1);
    }

    if (qword_26B22BEC0 != -1) {
      swift_once();
    }
    if (byte_26B22C038 == 1)
    {
      swift_bridgeObjectRetain_n();
      os_log_type_t v14 = sub_252831138();
      os_log_type_t v15 = sub_252831618();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        uint64_t v17 = swift_slowAlloc();
        uint64_t v23 = v17;
        *(_DWORD *)uint64_t v16 = 136315138;
        swift_bridgeObjectRetain();
        sub_25278F894(a1, a2, &v23);
        sub_252831698();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_25277D000, v14, v15, "Missing Alternate Supplier ID: %s", v16, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2533BE070](v17, -1, -1);
        MEMORY[0x2533BE070](v16, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    return 0;
  }
  uint64_t v7 = v3 + 56;
  while (1)
  {
    uint64_t v8 = *(void *)(v7 - 8);
    BOOL v9 = *(void *)(v7 - 24) == a1 && *(void *)(v7 - 16) == a2;
    if (v9 || (sub_252831A58() & 1) != 0) {
      break;
    }
    v7 += 32;
    if (!--v6) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRetain();
  return v8;
}

uint64_t sub_25278918C()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config + 112) != 1) {
    return 0;
  }
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v31 = MEMORY[0x263F8EE78];
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config + 152);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    id v21 = (objc_class *)type metadata accessor for TAFField();
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v22 = v2;
    do
    {
      uint64_t v29 = v3;
      uint64_t v5 = v2 + v4;
      uint64_t v7 = *(void *)(v2 + v4 + 32);
      uint64_t v6 = *(void *)(v2 + v4 + 40);
      uint64_t v8 = *(void *)(v2 + v4 + 48);
      uint64_t v9 = *(void *)(v5 + 56);
      uint64_t v10 = *(void *)(v5 + 64);
      uint64_t v11 = *(void *)(v5 + 72);
      uint64_t v12 = *(void *)(v5 + 104);
      uint64_t v23 = *(void *)(v5 + 96);
      char v24 = *(unsigned char *)(v5 + 128);
      uint64_t v25 = *(void *)(v5 + 136);
      uint64_t v13 = *(void *)(v5 + 160);
      uint64_t v27 = *(void *)(v5 + 144);
      uint64_t v28 = *(void *)(v5 + 152);
      char v26 = (*(unsigned char *)(v5 + 168) == 2) | *(unsigned char *)(v5 + 168);
      os_log_type_t v14 = objc_allocWithZone(v21);
      os_log_type_t v15 = &v14[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_type];
      *os_log_type_t v15 = v7;
      v15[1] = v6;
      uint64_t v16 = &v14[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_label];
      *uint64_t v16 = v8;
      v16[1] = v9;
      uint64_t v17 = &v14[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_formKey];
      *uint64_t v17 = v10;
      v17[1] = v11;
      uint64_t v18 = &v14[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_hintText];
      *uint64_t v18 = 0;
      v18[1] = 0xE000000000000000;
      uint64_t v19 = &v14[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_textContextType];
      *uint64_t v19 = v23;
      v19[1] = v12;
      v14[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_isSecure] = v24;
      *(void *)&v14[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_maxCharacterCount] = v25;
      *(void *)&v14[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_minCharacterCount] = v27;
      os_log_type_t v20 = &v14[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_regex];
      *os_log_type_t v20 = v28;
      v20[1] = v13;
      v14[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_required] = v26 & 1;
      v30.receiver = v14;
      v30.super_class = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      objc_msgSendSuper2(&v30, sel_init);
      MEMORY[0x2533BD2B0]();
      if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_252831528();
      }
      sub_252831548();
      sub_252831518();
      v4 += 144;
      uint64_t v3 = v29 - 1;
      uint64_t v2 = v22;
    }
    while (v29 != 1);
    swift_bridgeObjectRelease();
    return v31;
  }
  return result;
}

id sub_25278940C(void *a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(void))
{
  id v6 = a1;
  uint64_t v7 = a3();

  if (v7)
  {
    a4();
    uint64_t v8 = (void *)sub_2528314E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t sub_252789494()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config + 160);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_252831868();
    uint64_t v4 = (objc_class *)type metadata accessor for TAFSection();
    uint64_t v5 = (uint64_t *)(v1 + 48);
    do
    {
      uint64_t v7 = *(v5 - 2);
      uint64_t v6 = *(v5 - 1);
      uint64_t v8 = *v5;
      v5 += 3;
      uint64_t v9 = (char *)objc_allocWithZone(v4);
      uint64_t v10 = &v9[OBJC_IVAR____TtC19HomeUtilityServices10TAFSection_header];
      *(void *)uint64_t v10 = v7;
      *((void *)v10 + 1) = v6;
      *(void *)&v9[OBJC_IVAR____TtC19HomeUtilityServices10TAFSection_fields] = v8;
      v12.receiver = v9;
      v12.super_class = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      objc_msgSendSuper2(&v12, sel_init);
      sub_252831848();
      sub_252831878();
      sub_252831888();
      sub_252831858();
      --v2;
    }
    while (v2);
    uint64_t v3 = v13;
    swift_bridgeObjectRelease();
  }
  return v3;
}

id TAFSection.__allocating_init(header:fields:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  uint64_t v8 = &v7[OBJC_IVAR____TtC19HomeUtilityServices10TAFSection_header];
  *(void *)uint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  *(void *)&v7[OBJC_IVAR____TtC19HomeUtilityServices10TAFSection_fields] = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, sel_init);
}

uint64_t sub_252789760()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_252830DE8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252830DD8();
  uint64_t v6 = sub_252830DC8();
  unint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (qword_26B22BF08 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_252831158();
  __swift_project_value_buffer(v9, (uint64_t)qword_26B22C0A0);
  swift_bridgeObjectRetain_n();
  objc_super v10 = sub_252831138();
  os_log_type_t v11 = sub_252831628();
  if (os_log_type_enabled(v10, v11))
  {
    objc_super v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v19[0] = v13;
    *(_DWORD *)objc_super v12 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_25278F894(v6, v8, v19);
    sub_252831698();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25277D000, v10, v11, "OAuth State UUID set to : %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533BE070](v13, -1, -1);
    MEMORY[0x2533BE070](v12, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config + 88);
  v19[0] = *(void *)(v1 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config + 80);
  v19[1] = v14;
  uint64_t v17 = 0x535F4D4F444E4152;
  unint64_t v18 = 0xEF44495F45544154;
  v16[0] = v6;
  v16[1] = v8;
  sub_25279033C();
  sub_2528316D8();
  swift_bridgeObjectRelease();
  sub_252830BA8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_252789A84()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config + 96);
  uint64_t result = 3600 * v1;
  if ((unsigned __int128)(v1 * (__int128)3600) >> 64 != (3600 * v1) >> 63) {
    __break(1u);
  }
  return result;
}

uint64_t sub_252789ADC()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config + 104);
  uint64_t result = 3600 * v1;
  if ((unsigned __int128)(v1 * (__int128)3600) >> 64 != (3600 * v1) >> 63) {
    __break(1u);
  }
  return result;
}

uint64_t sub_252789B6C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config + 512);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_252789BAC()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config + 112) == 1) {
    return *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config + 168);
  }
  if (qword_26B22BEE0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_252831158();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B22C058);
  uint64_t v3 = sub_252831138();
  os_log_type_t v4 = sub_252831618();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_25277D000, v3, v4, "Current Utility does not support TAF Flow. Check your code!", v5, 2u);
    MEMORY[0x2533BE070](v5, -1, -1);
  }

  return 0;
}

id sub_252789CF0()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config + 248);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config + 256);
  uint64_t v31 = v2;
  uint64_t v32 = v1[35];
  uint64_t v30 = v1[36];
  uint64_t v5 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v6 = (objc_class *)type metadata accessor for UtilityArtwork();
  unint64_t v7 = (char *)objc_allocWithZone(v6);
  unint64_t v8 = &v7[OBJC_IVAR____TtC19HomeUtilityServices14UtilityArtwork_icon];
  *(void *)unint64_t v8 = v5;
  *((void *)v8 + 1) = v4;
  v35.receiver = v7;
  v35.super_class = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v29 = objc_msgSendSuper2(&v35, sel_init);
  uint64_t v10 = v1[55];
  uint64_t v9 = v1[56];
  uint64_t v12 = v1[57];
  uint64_t v11 = v1[58];
  uint64_t v13 = v1[59];
  uint64_t v14 = v1[60];
  uint64_t v15 = v1[61];
  uint64_t v16 = v1[62];
  uint64_t v17 = (objc_class *)type metadata accessor for UtilitySupport();
  unint64_t v18 = (char *)objc_allocWithZone(v17);
  uint64_t v19 = &v18[OBJC_IVAR____TtC19HomeUtilityServices14UtilitySupport_customerServicePhone];
  *(void *)uint64_t v19 = v10;
  *((void *)v19 + 1) = v9;
  os_log_type_t v20 = &v18[OBJC_IVAR____TtC19HomeUtilityServices14UtilitySupport_customerServiceEmail];
  *(void *)os_log_type_t v20 = v12;
  *((void *)v20 + 1) = v11;
  id v21 = &v18[OBJC_IVAR____TtC19HomeUtilityServices14UtilitySupport_customerServiceSMS];
  *(void *)id v21 = v13;
  *((void *)v21 + 1) = v14;
  uint64_t v22 = &v18[OBJC_IVAR____TtC19HomeUtilityServices14UtilitySupport_customerServiceBusinessChat];
  *(void *)uint64_t v22 = v15;
  *((void *)v22 + 1) = v16;
  v34.receiver = v18;
  v34.super_class = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v23 = objc_msgSendSuper2(&v34, sel_init);
  char v24 = (objc_class *)type metadata accessor for UtilityOrganization();
  uint64_t v25 = (char *)objc_allocWithZone(v24);
  char v26 = &v25[OBJC_IVAR____TtC19HomeUtilityServices19UtilityOrganization_name];
  *(void *)char v26 = v31;
  *((void *)v26 + 1) = v3;
  uint64_t v27 = &v25[OBJC_IVAR____TtC19HomeUtilityServices19UtilityOrganization_website];
  *(void *)uint64_t v27 = v32;
  *((void *)v27 + 1) = v30;
  *(void *)&v25[OBJC_IVAR____TtC19HomeUtilityServices19UtilityOrganization_artwork] = v29;
  *(void *)&v25[OBJC_IVAR____TtC19HomeUtilityServices19UtilityOrganization_support] = v23;
  v33.receiver = v25;
  v33.super_class = v24;
  return objc_msgSendSuper2(&v33, sel_init);
}

id UtilityArtwork.__allocating_init(icon:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  uint64_t v6 = &v5[OBJC_IVAR____TtC19HomeUtilityServices14UtilityArtwork_icon];
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

id UtilitySupport.__allocating_init(customerServicePhone:customerServiceEmail:customerServiceSMS:customerServiceBusinessChat:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v17 = (char *)objc_allocWithZone(v8);
  unint64_t v18 = &v17[OBJC_IVAR____TtC19HomeUtilityServices14UtilitySupport_customerServicePhone];
  *(void *)unint64_t v18 = a1;
  *((void *)v18 + 1) = a2;
  uint64_t v19 = &v17[OBJC_IVAR____TtC19HomeUtilityServices14UtilitySupport_customerServiceEmail];
  *(void *)uint64_t v19 = a3;
  *((void *)v19 + 1) = a4;
  os_log_type_t v20 = &v17[OBJC_IVAR____TtC19HomeUtilityServices14UtilitySupport_customerServiceSMS];
  *(void *)os_log_type_t v20 = a5;
  *((void *)v20 + 1) = a6;
  id v21 = &v17[OBJC_IVAR____TtC19HomeUtilityServices14UtilitySupport_customerServiceBusinessChat];
  *(void *)id v21 = a7;
  *((void *)v21 + 1) = a8;
  v23.receiver = v17;
  v23.super_class = v8;
  return objc_msgSendSuper2(&v23, sel_init);
}

id UtilityOrganization.__allocating_init(name:website:artwork:support:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (char *)objc_allocWithZone(v6);
  uint64_t v14 = &v13[OBJC_IVAR____TtC19HomeUtilityServices19UtilityOrganization_name];
  *(void *)uint64_t v14 = a1;
  *((void *)v14 + 1) = a2;
  uint64_t v15 = &v13[OBJC_IVAR____TtC19HomeUtilityServices19UtilityOrganization_website];
  *(void *)uint64_t v15 = a3;
  *((void *)v15 + 1) = a4;
  *(void *)&v13[OBJC_IVAR____TtC19HomeUtilityServices19UtilityOrganization_artwork] = a5;
  *(void *)&v13[OBJC_IVAR____TtC19HomeUtilityServices19UtilityOrganization_support] = a6;
  v17.receiver = v13;
  v17.super_class = v6;
  return objc_msgSendSuper2(&v17, sel_init);
}

uint64_t sub_25278A08C()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config + 216)) {
    return 60;
  }
  else {
    return *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config + 208);
  }
}

uint64_t sub_25278A0C8()
{
  return *(unsigned char *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config + 233) & 1;
}

uint64_t sub_25278A100()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config + 232)) {
    return 0;
  }
  else {
    return *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config + 224);
  }
}

uint64_t sub_25278A120()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_25278A140, 0, 0);
}

uint64_t sub_25278A140()
{
  uint64_t v1 = v0[2] + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config;
  if (*(unsigned char *)(v1 + 112) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFE8);
    uint64_t v2 = swift_allocObject();
    v0[3] = v2;
    *(_OWORD *)(v2 + 16) = xmmword_252832B00;
    uint64_t v3 = *(void *)(v1 + 200);
    *(void *)(v2 + 32) = *(void *)(v1 + 192);
    *(void *)(v2 + 40) = v3;
    swift_bridgeObjectRetain();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[4] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_25278A260;
    return sub_2527E5764(v2, 0);
  }
  else
  {
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6(0);
  }
}

uint64_t sub_25278A260(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v2)
  {

    objc_super v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8(0);
  }
  else
  {
    *(void *)(v6 + 40) = a2;
    *(void *)(v6 + 48) = a1;
    return MEMORY[0x270FA2498](sub_25278A3E4, 0, 0);
  }
}

uint64_t sub_25278A3E4()
{
  unint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  swift_bridgeObjectRelease();
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = v1 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = (uint64_t (*)(BOOL))v0[1];
  return v4(v3 != 0);
}

uint64_t sub_25278A5C8(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  id v4 = a2;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25278A688;
  v5[2] = v4;
  return MEMORY[0x270FA2498](sub_25278A140, 0, 0);
}

uint64_t sub_25278A688(char a1)
{
  uint64_t v3 = *(void (***)(void, void))(*v1 + 24);
  id v4 = *(void **)(*v1 + 16);
  uint64_t v7 = *v1;
  swift_task_dealloc();

  v3[2](v3, a1 & 1);
  _Block_release(v3);
  uint64_t v5 = *(uint64_t (**)(void))(v7 + 8);
  return v5();
}

void UtilityConfiguration.init()()
{
}

uint64_t sub_25278A830()
{
  return 1;
}

uint64_t sub_25278A83C()
{
  return sub_252831B08();
}

uint64_t sub_25278A868()
{
  return 0x6769666E6F63;
}

uint64_t sub_25278A87C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6769666E6F63 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_252831A58();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_25278A90C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_25278A918(uint64_t a1)
{
  unint64_t v2 = sub_252790420();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25278A954(uint64_t a1)
{
  unint64_t v2 = sub_252790420();

  return MEMORY[0x270FA00B8](a1, v2);
}

id UtilityConfiguration.__deallocating_deinit()
{
  return sub_25278F1A4(type metadata accessor for UtilityConfiguration);
}

uint64_t sub_25278A9EC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D210);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252790420();
  sub_252831B38();
  memcpy(v10, (const void *)(v2 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config), sizeof(v10));
  sub_252790474();
  sub_252831A18();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

void *UtilityConfiguration.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return UtilityConfiguration.init(from:)(a1);
}

void *UtilityConfiguration.init(from:)(void *a1)
{
  id v3 = v1;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D228);
  uint64_t v13 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252790420();
  uint64_t v8 = v3;
  sub_252831B28();
  if (v2)
  {

    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    type metadata accessor for UtilityConfiguration();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v9 = v13;
    sub_2527904C8();
    uint64_t v10 = v16;
    sub_252831998();
    memcpy(&v8[OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config], v15, 0x220uLL);

    uint64_t v12 = (objc_class *)type metadata accessor for UtilityConfiguration();
    v14.receiver = v8;
    v14.super_class = v12;
    char v7 = objc_msgSendSuper2(&v14, sel_init);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v10);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_25278AD94@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25278F724(a1, type metadata accessor for UtilityConfiguration, (uint64_t (*)(uint64_t))UtilityConfiguration.init(from:), a2);
}

uint64_t sub_25278ADD4(void *a1)
{
  return sub_25278A9EC(a1);
}

uint64_t UtilityOrganization.name.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices19UtilityOrganization_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UtilityOrganization.website.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices19UtilityOrganization_website);
  swift_bridgeObjectRetain();
  return v1;
}

id UtilityOrganization.artwork.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices19UtilityOrganization_artwork);
}

id UtilityOrganization.support.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices19UtilityOrganization_support);
}

id UtilityOrganization.init(name:website:artwork:support:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v7 = &v6[OBJC_IVAR____TtC19HomeUtilityServices19UtilityOrganization_name];
  *(void *)char v7 = a1;
  *((void *)v7 + 1) = a2;
  uint64_t v8 = &v6[OBJC_IVAR____TtC19HomeUtilityServices19UtilityOrganization_website];
  *(void *)uint64_t v8 = a3;
  *((void *)v8 + 1) = a4;
  *(void *)&v6[OBJC_IVAR____TtC19HomeUtilityServices19UtilityOrganization_artwork] = a5;
  *(void *)&v6[OBJC_IVAR____TtC19HomeUtilityServices19UtilityOrganization_support] = a6;
  v10.receiver = v6;
  v10.super_class = (Class)type metadata accessor for UtilityOrganization();
  return objc_msgSendSuper2(&v10, sel_init);
}

id UtilityOrganization.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void UtilityOrganization.init()()
{
}

BOOL sub_25278AF90(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_25278AFAC()
{
  uint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65746973626577;
      break;
    case 2:
      uint64_t result = 0x6B726F77747261;
      break;
    case 3:
      uint64_t result = 0x74726F70707573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25278B034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252790858(a1, a2);
  *a3 = result;
  return result;
}

void sub_25278B05C(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_25278B068(uint64_t a1)
{
  unint64_t v2 = sub_25279051C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25278B0A4(uint64_t a1)
{
  unint64_t v2 = sub_25279051C();

  return MEMORY[0x270FA00B8](a1, v2);
}

id UtilityOrganization.__deallocating_deinit()
{
  return sub_25278F1A4(type metadata accessor for UtilityOrganization);
}

uint64_t sub_25278B16C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D238);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25279051C();
  sub_252831B38();
  LOBYTE(v11) = 0;
  sub_2528319E8();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_2528319E8();
    uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC19HomeUtilityServices19UtilityOrganization_artwork);
    HIBYTE(v10) = 2;
    type metadata accessor for UtilityArtwork();
    sub_252790570(&qword_269C1D248, (void (*)(void))type metadata accessor for UtilityArtwork);
    sub_252831A18();
    uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC19HomeUtilityServices19UtilityOrganization_support);
    HIBYTE(v10) = 3;
    type metadata accessor for UtilitySupport();
    sub_252790570(&qword_269C1D250, (void (*)(void))type metadata accessor for UtilitySupport);
    sub_252831A18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id UtilityOrganization.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return UtilityOrganization.init(from:)(a1);
}

id UtilityOrganization.init(from:)(void *a1)
{
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D258);
  uint64_t v4 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  objc_super v23 = a1;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_25279051C();
  uint64_t v9 = v1;
  id v10 = v8;
  sub_252831B28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);

    type metadata accessor for UtilityOrganization();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v11 = v4;
    LOBYTE(v26) = 0;
    uint64_t v12 = v22;
    uint64_t v13 = sub_252831968();
    uint64_t v15 = (uint64_t *)&v9[OBJC_IVAR____TtC19HomeUtilityServices19UtilityOrganization_name];
    *uint64_t v15 = v13;
    v15[1] = v16;
    LOBYTE(v26) = 1;
    uint64_t v17 = sub_252831968();
    unint64_t v18 = (uint64_t *)&v9[OBJC_IVAR____TtC19HomeUtilityServices19UtilityOrganization_website];
    *unint64_t v18 = v17;
    v18[1] = v19;
    type metadata accessor for UtilityArtwork();
    char v25 = 2;
    sub_252790570(&qword_269C1D260, (void (*)(void))type metadata accessor for UtilityArtwork);
    sub_252831998();
    *(void *)&v9[OBJC_IVAR____TtC19HomeUtilityServices19UtilityOrganization_artwork] = v26;
    type metadata accessor for UtilitySupport();
    char v25 = 3;
    sub_252790570(&qword_269C1D268, (void (*)(void))type metadata accessor for UtilitySupport);
    sub_252831998();
    *(void *)&v9[OBJC_IVAR____TtC19HomeUtilityServices19UtilityOrganization_support] = v26;

    os_log_type_t v20 = (objc_class *)type metadata accessor for UtilityOrganization();
    v24.receiver = v9;
    v24.super_class = v20;
    id v10 = objc_msgSendSuper2(&v24, sel_init);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
  }
  return v10;
}

uint64_t sub_25278B7E0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25278F724(a1, type metadata accessor for UtilityOrganization, (uint64_t (*)(uint64_t))UtilityOrganization.init(from:), a2);
}

uint64_t sub_25278B820(void *a1)
{
  return sub_25278B16C(a1);
}

uint64_t UtilityArtwork.icon.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices14UtilityArtwork_icon);
  swift_bridgeObjectRetain();
  return v1;
}

id UtilityArtwork.init(icon:)(uint64_t a1, uint64_t a2)
{
  id v3 = &v2[OBJC_IVAR____TtC19HomeUtilityServices14UtilityArtwork_icon];
  *(void *)id v3 = a1;
  *((void *)v3 + 1) = a2;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for UtilityArtwork();
  return objc_msgSendSuper2(&v5, sel_init);
}

void UtilityArtwork.init()()
{
}

uint64_t sub_25278B924()
{
  return sub_252831B18();
}

uint64_t sub_25278B968()
{
  return sub_252831B18();
}

uint64_t sub_25278B9A8()
{
  return 1852793705;
}

uint64_t sub_25278B9B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1852793705 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_252831A58();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_25278BA40(uint64_t a1)
{
  unint64_t v2 = sub_2527905B4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25278BA7C(uint64_t a1)
{
  unint64_t v2 = sub_2527905B4();

  return MEMORY[0x270FA00B8](a1, v2);
}

id UtilityArtwork.__deallocating_deinit()
{
  return sub_25278F1A4(type metadata accessor for UtilityArtwork);
}

uint64_t sub_25278BAE4(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D270);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527905B4();
  sub_252831B38();
  sub_2528319E8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id UtilityArtwork.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return UtilityArtwork.init(from:)(a1);
}

id UtilityArtwork.init(from:)(void *a1)
{
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D280);
  uint64_t v17 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  char v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527905B4();
  uint64_t v7 = v1;
  id v8 = v6;
  sub_252831B28();
  if (v2)
  {

    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    type metadata accessor for UtilityArtwork();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v9 = v17;
    uint64_t v10 = v19;
    uint64_t v11 = sub_252831968();
    uint64_t v13 = (uint64_t *)&v7[OBJC_IVAR____TtC19HomeUtilityServices14UtilityArtwork_icon];
    *uint64_t v13 = v11;
    v13[1] = v14;

    uint64_t v15 = (objc_class *)type metadata accessor for UtilityArtwork();
    v18.receiver = v7;
    v18.super_class = v15;
    id v8 = objc_msgSendSuper2(&v18, sel_init);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v10);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v8;
}

uint64_t sub_25278BE3C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25278F724(a1, type metadata accessor for UtilityArtwork, (uint64_t (*)(uint64_t))UtilityArtwork.init(from:), a2);
}

uint64_t sub_25278BE7C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D270);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527905B4();
  sub_252831B38();
  sub_2528319E8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t UtilitySupport.customerServicePhone.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices14UtilitySupport_customerServicePhone);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UtilitySupport.customerServiceEmail.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices14UtilitySupport_customerServiceEmail);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UtilitySupport.customerServiceSMS.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices14UtilitySupport_customerServiceSMS);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UtilitySupport.customerServiceBusinessChat.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices14UtilitySupport_customerServiceBusinessChat);
  swift_bridgeObjectRetain();
  return v1;
}

id UtilitySupport.init(customerServicePhone:customerServiceEmail:customerServiceSMS:customerServiceBusinessChat:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = &v8[OBJC_IVAR____TtC19HomeUtilityServices14UtilitySupport_customerServicePhone];
  *(void *)uint64_t v9 = a1;
  *((void *)v9 + 1) = a2;
  uint64_t v10 = &v8[OBJC_IVAR____TtC19HomeUtilityServices14UtilitySupport_customerServiceEmail];
  *(void *)uint64_t v10 = a3;
  *((void *)v10 + 1) = a4;
  uint64_t v11 = &v8[OBJC_IVAR____TtC19HomeUtilityServices14UtilitySupport_customerServiceSMS];
  *(void *)uint64_t v11 = a5;
  *((void *)v11 + 1) = a6;
  uint64_t v12 = &v8[OBJC_IVAR____TtC19HomeUtilityServices14UtilitySupport_customerServiceBusinessChat];
  *(void *)uint64_t v12 = a7;
  *((void *)v12 + 1) = a8;
  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for UtilitySupport();
  return objc_msgSendSuper2(&v14, sel_init);
}

void UtilitySupport.init()()
{
}

unint64_t sub_25278C180(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25278C204()
{
  return sub_25278C180(*v0);
}

uint64_t sub_25278C20C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252790A04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25278C234(uint64_t a1)
{
  unint64_t v2 = sub_252790608();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25278C270(uint64_t a1)
{
  unint64_t v2 = sub_252790608();

  return MEMORY[0x270FA00B8](a1, v2);
}

id UtilitySupport.__deallocating_deinit()
{
  return sub_25278F1A4(type metadata accessor for UtilitySupport);
}

uint64_t sub_25278C340(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D288);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252790608();
  sub_252831B38();
  v8[15] = 0;
  sub_2528319E8();
  if (!v1)
  {
    v8[14] = 1;
    sub_2528319E8();
    v8[13] = 2;
    sub_2528319E8();
    v8[12] = 3;
    sub_2528319E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t UtilitySupport.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return UtilitySupport.init(from:)(a1);
}

unint64_t UtilitySupport.init(from:)(void *a1)
{
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D298);
  uint64_t v4 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  uint64_t v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v7);
  unint64_t v8 = sub_252790608();
  uint64_t v9 = v1;
  sub_252831B28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);

    type metadata accessor for UtilitySupport();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = v4;
    char v29 = 0;
    uint64_t v11 = v26;
    uint64_t v12 = sub_252831968();
    objc_super v14 = (uint64_t *)&v9[OBJC_IVAR____TtC19HomeUtilityServices14UtilitySupport_customerServicePhone];
    *objc_super v14 = v12;
    v14[1] = v15;
    char v29 = 1;
    uint64_t v16 = sub_252831968();
    uint64_t v17 = (uint64_t *)&v9[OBJC_IVAR____TtC19HomeUtilityServices14UtilitySupport_customerServiceEmail];
    *uint64_t v17 = v16;
    v17[1] = v18;
    char v29 = 2;
    uint64_t v19 = sub_252831968();
    os_log_type_t v20 = (uint64_t *)&v9[OBJC_IVAR____TtC19HomeUtilityServices14UtilitySupport_customerServiceSMS];
    *os_log_type_t v20 = v19;
    v20[1] = v21;
    char v29 = 3;
    uint64_t v22 = sub_252831968();
    objc_super v23 = (uint64_t *)&v9[OBJC_IVAR____TtC19HomeUtilityServices14UtilitySupport_customerServiceBusinessChat];
    *objc_super v23 = v22;
    v23[1] = v24;

    char v25 = (objc_class *)type metadata accessor for UtilitySupport();
    v28.receiver = v9;
    v28.super_class = v25;
    unint64_t v8 = (unint64_t)objc_msgSendSuper2(&v28, sel_init);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v11);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
  }
  return v8;
}

uint64_t sub_25278C894@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25278F724(a1, type metadata accessor for UtilitySupport, (uint64_t (*)(uint64_t))UtilitySupport.init(from:), a2);
}

uint64_t sub_25278C8D4(void *a1)
{
  return sub_25278C340(a1);
}

uint64_t TAFField.type.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices8TAFField_type);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TAFField.label.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices8TAFField_label);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TAFField.formKey.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices8TAFField_formKey);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TAFField.hintText.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices8TAFField_hintText);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TAFField.textContextType.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices8TAFField_textContextType);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TAFField.isSecure.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices8TAFField_isSecure);
}

uint64_t TAFField.maxCharacterCount.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices8TAFField_maxCharacterCount);
}

uint64_t TAFField.minCharacterCount.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices8TAFField_minCharacterCount);
}

id sub_25278CACC()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = (void *)sub_252831298();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t TAFField.regex.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices8TAFField_regex);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TAFField.required.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices8TAFField_required);
}

id sub_25278CB84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  uint64_t v15 = &v14[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_type];
  *uint64_t v15 = a1;
  v15[1] = a2;
  uint64_t v16 = &v14[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_label];
  *uint64_t v16 = a3;
  v16[1] = a4;
  uint64_t v17 = &v14[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_formKey];
  *uint64_t v17 = a5;
  v17[1] = a6;
  uint64_t v18 = &v14[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_hintText];
  *uint64_t v18 = 0;
  v18[1] = 0xE000000000000000;
  uint64_t v19 = &v14[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_textContextType];
  *uint64_t v19 = a7;
  v19[1] = a8;
  v14[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_isSecure] = a9;
  *(void *)&v14[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_maxCharacterCount] = a10;
  *(void *)&v14[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_minCharacterCount] = a11;
  os_log_type_t v20 = &v14[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_regex];
  *os_log_type_t v20 = a12;
  v20[1] = a13;
  v14[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_required] = a14;
  v22.receiver = v14;
  v22.super_class = (Class)type metadata accessor for TAFField();
  return objc_msgSendSuper2(&v22, sel_init);
}

void TAFField.init()()
{
}

unint64_t sub_25278CDB4(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C6562616CLL;
      break;
    case 2:
      unint64_t result = 0x79654B6D726F66;
      break;
    case 3:
      unint64_t result = 0x74786554746E6968;
      break;
    case 4:
      unint64_t result = 0x746E6F4374786574;
      break;
    case 5:
      unint64_t result = 0x6572756365537369;
      break;
    case 6:
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0x7865676572;
      break;
    case 9:
      unint64_t result = 0x6465726975716572;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25278CEE4()
{
  return sub_25278CDB4(*v0);
}

uint64_t sub_25278CEEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252790B9C(a1, a2);
  *a3 = result;
  return result;
}

void sub_25278CF14(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_25278CF20(uint64_t a1)
{
  unint64_t v2 = sub_25279065C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25278CF5C(uint64_t a1)
{
  unint64_t v2 = sub_25279065C();

  return MEMORY[0x270FA00B8](a1, v2);
}

id TAFField.__deallocating_deinit()
{
  return sub_25278F1A4(type metadata accessor for TAFField);
}

uint64_t sub_25278D054(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D2A0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25279065C();
  sub_252831B38();
  v8[15] = 0;
  sub_2528319E8();
  if (!v1)
  {
    v8[14] = 1;
    sub_2528319E8();
    v8[13] = 2;
    sub_2528319E8();
    v8[12] = 3;
    sub_2528319E8();
    v8[11] = 4;
    sub_2528319E8();
    v8[10] = 5;
    sub_2528319F8();
    v8[9] = 6;
    sub_252831A08();
    v8[8] = 7;
    sub_252831A08();
    v8[7] = 8;
    sub_2528319E8();
    v8[6] = 9;
    sub_2528319F8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

id TAFField.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return TAFField.init(from:)(a1);
}

id TAFField.init(from:)(void *a1)
{
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D2B0);
  uint64_t v4 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25279065C();
  objc_super v33 = v1;
  sub_252831B28();
  if (v2)
  {
    id v31 = v33;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

    type metadata accessor for TAFField();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v7 = v4;
    char v35 = 0;
    uint64_t v8 = sub_252831968();
    uint64_t v10 = v33;
    uint64_t v11 = (uint64_t *)&v33[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_type];
    *uint64_t v11 = v8;
    v11[1] = v12;
    char v35 = 1;
    uint64_t v13 = sub_252831968();
    objc_super v14 = (uint64_t *)&v10[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_label];
    *objc_super v14 = v13;
    v14[1] = v15;
    char v35 = 2;
    uint64_t v16 = sub_252831968();
    uint64_t v17 = (uint64_t *)&v10[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_formKey];
    *uint64_t v17 = v16;
    v17[1] = v18;
    char v35 = 3;
    uint64_t v19 = sub_252831968();
    os_log_type_t v20 = (uint64_t *)&v10[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_hintText];
    *os_log_type_t v20 = v19;
    v20[1] = v21;
    char v35 = 4;
    uint64_t v22 = sub_252831968();
    objc_super v23 = (uint64_t *)&v10[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_textContextType];
    *objc_super v23 = v22;
    v23[1] = v24;
    char v35 = 5;
    v10[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_isSecure] = sub_252831978() & 1;
    char v35 = 6;
    *(void *)&v10[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_maxCharacterCount] = sub_252831988();
    char v35 = 7;
    *(void *)&v10[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_minCharacterCount] = sub_252831988();
    char v35 = 8;
    uint64_t v25 = sub_252831968();
    uint64_t v26 = (uint64_t *)&v10[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_regex];
    *uint64_t v26 = v25;
    v26[1] = v27;
    char v35 = 9;
    char v28 = sub_252831978();
    char v29 = v33;
    v33[OBJC_IVAR____TtC19HomeUtilityServices8TAFField_required] = v28 & 1;

    uint64_t v30 = (objc_class *)type metadata accessor for TAFField();
    v34.receiver = v29;
    v34.super_class = v30;
    id v31 = objc_msgSendSuper2(&v34, sel_init);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v6, v32);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v31;
}

uint64_t sub_25278D994@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25278F724(a1, type metadata accessor for TAFField, (uint64_t (*)(uint64_t))TAFField.init(from:), a2);
}

uint64_t sub_25278D9D4(void *a1)
{
  return sub_25278D054(a1);
}

id TAFAuthorizationField.__allocating_init(formKey:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (char *)objc_allocWithZone(v4);
  uint64_t v10 = &v9[OBJC_IVAR____TtC19HomeUtilityServices21TAFAuthorizationField_formKey];
  *(void *)uint64_t v10 = a1;
  *((void *)v10 + 1) = a2;
  uint64_t v11 = &v9[OBJC_IVAR____TtC19HomeUtilityServices21TAFAuthorizationField_value];
  *(void *)uint64_t v11 = a3;
  *((void *)v11 + 1) = a4;
  v13.receiver = v9;
  v13.super_class = v4;
  return objc_msgSendSuper2(&v13, sel_init);
}

id TAFAuthorizationField.init(formKey:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = &v4[OBJC_IVAR____TtC19HomeUtilityServices21TAFAuthorizationField_formKey];
  *(void *)uint64_t v5 = a1;
  *((void *)v5 + 1) = a2;
  uint64_t v6 = &v4[OBJC_IVAR____TtC19HomeUtilityServices21TAFAuthorizationField_value];
  *(void *)uint64_t v6 = a3;
  *((void *)v6 + 1) = a4;
  v8.receiver = v4;
  v8.super_class = (Class)type metadata accessor for TAFAuthorizationField();
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t TAFAuthorizationField.formKey.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21TAFAuthorizationField_formKey);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TAFAuthorizationField.value.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21TAFAuthorizationField_value);
  swift_bridgeObjectRetain();
  return v1;
}

void TAFAuthorizationField.init()()
{
}

uint64_t sub_25278DBA4()
{
  if (*v0) {
    return 0x65756C6176;
  }
  else {
    return 0x79654B6D726F66;
  }
}

uint64_t sub_25278DBDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252790FA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25278DC04(uint64_t a1)
{
  unint64_t v2 = sub_2527906D4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25278DC40(uint64_t a1)
{
  unint64_t v2 = sub_2527906D4();

  return MEMORY[0x270FA00B8](a1, v2);
}

id TAFAuthorizationField.__deallocating_deinit()
{
  return sub_25278F1A4(type metadata accessor for TAFAuthorizationField);
}

uint64_t sub_25278DCE8(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D2C8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527906D4();
  sub_252831B38();
  v8[15] = 0;
  sub_2528319E8();
  if (!v1)
  {
    v8[14] = 1;
    sub_2528319E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

id TAFAuthorizationField.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return TAFAuthorizationField.init(from:)(a1);
}

id TAFAuthorizationField.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D2D8);
  uint64_t v20 = *(void *)(v4 - 8);
  uint64_t v21 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527906D4();
  objc_super v8 = v1;
  id v9 = v7;
  sub_252831B28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

    type metadata accessor for TAFAuthorizationField();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v11 = v20;
    uint64_t v10 = v21;
    char v23 = 0;
    uint64_t v12 = sub_252831968();
    objc_super v14 = (uint64_t *)&v8[OBJC_IVAR____TtC19HomeUtilityServices21TAFAuthorizationField_formKey];
    *objc_super v14 = v12;
    v14[1] = v15;
    char v23 = 1;
    uint64_t v16 = sub_252831968();
    uint64_t v17 = (uint64_t *)&v8[OBJC_IVAR____TtC19HomeUtilityServices21TAFAuthorizationField_value];
    *uint64_t v17 = v16;
    v17[1] = v18;

    uint64_t v19 = (objc_class *)type metadata accessor for TAFAuthorizationField();
    v22.receiver = v8;
    v22.super_class = v19;
    id v9 = objc_msgSendSuper2(&v22, sel_init);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v10);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v9;
}

uint64_t sub_25278E0E0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25278F724(a1, type metadata accessor for TAFAuthorizationField, (uint64_t (*)(uint64_t))TAFAuthorizationField.init(from:), a2);
}

uint64_t sub_25278E120(void *a1)
{
  return sub_25278DCE8(a1);
}

uint64_t TAFSection.header.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices10TAFSection_header);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TAFSection.fields.getter()
{
  return swift_bridgeObjectRetain();
}

id TAFSection.init(header:fields:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = &v3[OBJC_IVAR____TtC19HomeUtilityServices10TAFSection_header];
  *(void *)uint64_t v4 = a1;
  *((void *)v4 + 1) = a2;
  *(void *)&v3[OBJC_IVAR____TtC19HomeUtilityServices10TAFSection_fields] = a3;
  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for TAFSection();
  return objc_msgSendSuper2(&v6, sel_init);
}

void TAFSection.init()()
{
}

uint64_t sub_25278E240()
{
  if (*v0) {
    return 0x73646C656966;
  }
  else {
    return 0x726564616568;
  }
}

uint64_t sub_25278E26C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252791090(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25278E294(uint64_t a1)
{
  unint64_t v2 = sub_252790728();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25278E2D0(uint64_t a1)
{
  unint64_t v2 = sub_252790728();

  return MEMORY[0x270FA00B8](a1, v2);
}

id TAFSection.__deallocating_deinit()
{
  return sub_25278F1A4(type metadata accessor for TAFSection);
}

uint64_t sub_25278E374(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D2E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  objc_super v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252790728();
  sub_252831B38();
  char v12 = 0;
  sub_2528319E8();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC19HomeUtilityServices10TAFSection_fields);
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF40);
    sub_25279077C(&qword_26B22BF48);
    sub_252831A18();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

id TAFSection.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return TAFSection.init(from:)(a1);
}

id TAFSection.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D2F0);
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252790728();
  objc_super v8 = v1;
  id v9 = v7;
  sub_252831B28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

    type metadata accessor for TAFSection();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v11 = v18;
    uint64_t v10 = v19;
    LOBYTE(v22) = 0;
    uint64_t v12 = sub_252831968();
    objc_super v14 = (uint64_t *)&v8[OBJC_IVAR____TtC19HomeUtilityServices10TAFSection_header];
    *objc_super v14 = v12;
    v14[1] = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF40);
    char v21 = 1;
    sub_25279077C((unint64_t *)&unk_26B22BF50);
    sub_252831998();
    *(void *)&v8[OBJC_IVAR____TtC19HomeUtilityServices10TAFSection_fields] = v22;

    uint64_t v16 = (objc_class *)type metadata accessor for TAFSection();
    v20.receiver = v8;
    v20.super_class = v16;
    id v9 = objc_msgSendSuper2(&v20, sel_init);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v10);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v9;
}

uint64_t sub_25278E7F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25278F724(a1, type metadata accessor for TAFSection, (uint64_t (*)(uint64_t))TAFSection.init(from:), a2);
}

uint64_t sub_25278E838(void *a1)
{
  return sub_25278E374(a1);
}

uint64_t sub_25278E85C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21TAFVerificationFactor__factor + 16);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21TAFVerificationFactor__factor + 24);
  BOOL v3 = v1 == 5459283 && v2 == 0xE300000000000000;
  if (v3 || (sub_252831A58() & 1) != 0) {
    return 1;
  }
  BOOL v5 = v1 == 0x4C49414D45 && v2 == 0xE500000000000000;
  if (v5 || (sub_252831A58() & 1) != 0) {
    return 0;
  }
  if (v1 == 0xD000000000000010 && v2 == 0x800000025283AAC0 || (sub_252831A58() & 1) != 0) {
    return 3;
  }
  if (v1 == 1280065859 && v2 == 0xE400000000000000) {
    return 2;
  }
  if (sub_252831A58()) {
    return 2;
  }
  return 4;
}

uint64_t sub_25278E9B4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21TAFVerificationFactor__factor + 32);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_25278E9F0()
{
  unint64_t result = sub_25282758C();
  if (!result)
  {
    uint64_t v1 = MEMORY[0x263F8EE78];
    return sub_252786D50(v1);
  }
  return result;
}

id TAFVerificationFactor.__allocating_init(dict:)()
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_252831218();
  swift_bridgeObjectRelease();
  *(void *)&v21[0] = 0;
  id v2 = objc_msgSend(v0, sel_dataWithJSONObject_options_error_, v1, 0, v21);

  id v3 = *(id *)&v21[0];
  if (v2)
  {
    uint64_t v4 = sub_252830C68();
    unint64_t v6 = v5;

    sub_252830828();
    swift_allocObject();
    sub_252830818();
    sub_2527907E0();
    sub_252830808();
    swift_release();
    long long v18 = v21[1];
    long long v19 = v21[0];
    long long v16 = v21[3];
    long long v17 = v21[2];
    uint64_t v9 = v22;
    uint64_t v10 = v23;
    uint64_t v11 = (objc_class *)type metadata accessor for TAFVerificationFactor();
    uint64_t v12 = (char *)objc_allocWithZone(v11);
    objc_super v13 = &v12[OBJC_IVAR____TtC19HomeUtilityServices21TAFVerificationFactor__factor];
    *(_OWORD *)objc_super v13 = v19;
    *((_OWORD *)v13 + 1) = v18;
    *((_OWORD *)v13 + 2) = v17;
    *((_OWORD *)v13 + 3) = v16;
    *((void *)v13 + 8) = v9;
    *((void *)v13 + 9) = v10;
    v20.receiver = v12;
    v20.super_class = v11;
    id v14 = objc_msgSendSuper2(&v20, sel_init);
    sub_252782E20(v4, v6);
  }
  else
  {
    uint64_t v7 = v3;
    objc_super v8 = (void *)sub_252830B18();

    swift_willThrow();
    return 0;
  }
  return v14;
}

void TAFVerificationFactor.init()()
{
}

id TAFVerificationFactor.__deallocating_deinit()
{
  return sub_25278F1A4(type metadata accessor for TAFVerificationFactor);
}

unint64_t TAFVerificationFactorType.init(rawValue:)(unint64_t a1)
{
  return sub_252791174(a1);
}

unint64_t sub_25278ED88@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_252791174(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_25278EDBC()
{
  return sub_2528314C8();
}

uint64_t sub_25278EE1C()
{
  return sub_2528314A8();
}

uint64_t UtilityRegion.name.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices13UtilityRegion_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UtilityRegion.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices13UtilityRegion_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UtilityRegion.shortName.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices13UtilityRegion_shortName);
  swift_bridgeObjectRetain();
  return v1;
}

id UtilityRegion.__allocating_init(name:identifier:shortName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  objc_super v13 = (char *)objc_allocWithZone(v6);
  id v14 = &v13[OBJC_IVAR____TtC19HomeUtilityServices13UtilityRegion_name];
  *(void *)id v14 = a1;
  *((void *)v14 + 1) = a2;
  uint64_t v15 = &v13[OBJC_IVAR____TtC19HomeUtilityServices13UtilityRegion_identifier];
  *(void *)uint64_t v15 = a3;
  *((void *)v15 + 1) = a4;
  long long v16 = &v13[OBJC_IVAR____TtC19HomeUtilityServices13UtilityRegion_shortName];
  *(void *)long long v16 = a5;
  *((void *)v16 + 1) = a6;
  v18.receiver = v13;
  v18.super_class = v6;
  return objc_msgSendSuper2(&v18, sel_init);
}

id UtilityRegion.init(name:identifier:shortName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = &v6[OBJC_IVAR____TtC19HomeUtilityServices13UtilityRegion_name];
  *(void *)uint64_t v7 = a1;
  *((void *)v7 + 1) = a2;
  objc_super v8 = &v6[OBJC_IVAR____TtC19HomeUtilityServices13UtilityRegion_identifier];
  *(void *)objc_super v8 = a3;
  *((void *)v8 + 1) = a4;
  uint64_t v9 = &v6[OBJC_IVAR____TtC19HomeUtilityServices13UtilityRegion_shortName];
  *(void *)uint64_t v9 = a5;
  *((void *)v9 + 1) = a6;
  v11.receiver = v6;
  v11.super_class = (Class)type metadata accessor for UtilityRegion();
  return objc_msgSendSuper2(&v11, sel_init);
}

void UtilityRegion.init()()
{
}

uint64_t sub_25278F084()
{
  uint64_t v1 = 0x696669746E656469;
  if (*v0 != 1) {
    uint64_t v1 = 0x6D614E74726F6873;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_25278F0E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252792B14(a1, a2);
  *a3 = result;
  return result;
}

void sub_25278F108(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_25278F114(uint64_t a1)
{
  unint64_t v2 = sub_2527911A8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25278F150(uint64_t a1)
{
  unint64_t v2 = sub_2527911A8();

  return MEMORY[0x270FA00B8](a1, v2);
}

id UtilityRegion.__deallocating_deinit()
{
  return sub_25278F1A4(type metadata accessor for UtilityRegion);
}

id sub_25278F1A4(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_25278F244(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D320);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527911A8();
  sub_252831B38();
  v8[15] = 0;
  sub_2528319E8();
  if (!v1)
  {
    v8[14] = 1;
    sub_2528319E8();
    v8[13] = 2;
    sub_2528319E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

id UtilityRegion.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return UtilityRegion.init(from:)(a1);
}

id UtilityRegion.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D330);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527911A8();
  objc_super v8 = v1;
  id v9 = v7;
  sub_252831B28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

    type metadata accessor for UtilityRegion();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = v24;
    uint64_t v11 = v25;
    char v27 = 0;
    uint64_t v12 = sub_252831968();
    id v14 = v8;
    uint64_t v15 = (uint64_t *)&v8[OBJC_IVAR____TtC19HomeUtilityServices13UtilityRegion_name];
    *uint64_t v15 = v12;
    v15[1] = v16;
    char v27 = 1;
    uint64_t v17 = sub_252831968();
    objc_super v18 = (uint64_t *)&v14[OBJC_IVAR____TtC19HomeUtilityServices13UtilityRegion_identifier];
    *objc_super v18 = v17;
    v18[1] = v19;
    char v27 = 2;
    uint64_t v20 = sub_252831968();
    char v21 = (uint64_t *)&v14[OBJC_IVAR____TtC19HomeUtilityServices13UtilityRegion_shortName];
    *char v21 = v20;
    v21[1] = v22;

    uint64_t v23 = (objc_class *)type metadata accessor for UtilityRegion();
    v26.receiver = v14;
    v26.super_class = v23;
    id v9 = objc_msgSendSuper2(&v26, sel_init);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v11);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v9;
}

uint64_t sub_25278F6E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25278F724(a1, type metadata accessor for UtilityRegion, (uint64_t (*)(uint64_t))UtilityRegion.init(from:), a2);
}

uint64_t sub_25278F724@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  id v8 = objc_allocWithZone((Class)a2());
  uint64_t result = a3(a1);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_25278F784(void *a1)
{
  return sub_25278F244(a1);
}

uint64_t sub_25278F7A8(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_25278F7B8(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_25278F7F4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_25278F81C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_25278F894(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_252831698();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_25278F894(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_25278F968(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_252784638((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_252784638((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_25278F968(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_2528316A8();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_25278FB24(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_252831838();
  if (!v8)
  {
    sub_2528318A8();
    __break(1u);
LABEL_17:
    uint64_t result = sub_252831908();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_25278FB24(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_25278FBBC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_25278FD34(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_25278FD34(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_25278FBBC(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_2527D9954(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_2528317D8();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_2528318A8();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_2528313D8();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_252831908();
    __break(1u);
LABEL_14:
    uint64_t result = sub_2528318A8();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_25278FD34(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFF8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  objc_super v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_252831908();
  __break(1u);
  return result;
}

unsigned char **sub_25278FE84(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t sub_25278FE94(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2528170A0(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_25278FEB4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25281720C(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_25278FED4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25281735C(a1, a2, a3, (void *)*v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_25278FEF4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2528175A4(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_25278FF14(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25281772C(a1, a2, a3, (void *)*v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_25278FF34(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2528178B8(a1, a2, a3, (void *)*v3);
  *unint64_t v3 = result;
  return result;
}

void sub_25278FF54(void *a1, char a2, void *a3)
{
  uint64_t v3 = a1[2];
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v8 = a1[7];
  uint64_t v45 = a1[6];
  swift_bridgeObjectRetain();
  int64_t v9 = (void *)*a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_2527D9A38(v7, v6);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_23;
  }
  char v15 = v10;
  if (v9[3] >= v14)
  {
    if (a2)
    {
      if (v10) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_252822DA0();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v20 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    char v21 = (uint64_t *)(v20[6] + 16 * v11);
    *char v21 = v7;
    v21[1] = v6;
    uint64_t v22 = (void *)(v20[7] + 16 * v11);
    void *v22 = v45;
    v22[1] = v8;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v20[2] = v25;
    uint64_t v26 = v3 - 1;
    if (v3 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    char v27 = a1 + 11;
    while (1)
    {
      uint64_t v29 = *(v27 - 3);
      uint64_t v28 = *(v27 - 2);
      uint64_t v30 = *(v27 - 1);
      uint64_t v31 = *v27;
      uint64_t v32 = (void *)*a3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v33 = sub_2527D9A38(v29, v28);
      uint64_t v35 = v32[2];
      BOOL v36 = (v34 & 1) == 0;
      BOOL v24 = __OFADD__(v35, v36);
      uint64_t v37 = v35 + v36;
      if (v24) {
        break;
      }
      char v38 = v34;
      if (v32[3] < v37)
      {
        sub_25282214C(v37, 1);
        unint64_t v33 = sub_2527D9A38(v29, v28);
        if ((v38 & 1) != (v39 & 1)) {
          goto LABEL_25;
        }
      }
      if (v38) {
        goto LABEL_10;
      }
      uint64_t v40 = (void *)*a3;
      *(void *)(*a3 + 8 * (v33 >> 6) + 64) |= 1 << v33;
      uint64_t v41 = (uint64_t *)(v40[6] + 16 * v33);
      *uint64_t v41 = v29;
      v41[1] = v28;
      CLLocationCoordinate2D v42 = (void *)(v40[7] + 16 * v33);
      void *v42 = v30;
      v42[1] = v31;
      uint64_t v43 = v40[2];
      BOOL v24 = __OFADD__(v43, 1);
      uint64_t v44 = v43 + 1;
      if (v24) {
        goto LABEL_24;
      }
      v27 += 4;
      v40[2] = v44;
      if (!--v26) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_25282214C(v14, a2 & 1);
  uint64_t v16 = sub_2527D9A38(v7, v6);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    objc_super v18 = (void *)swift_allocError();
    swift_willThrow();
    id v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4C0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_252831A98();
  __break(1u);
LABEL_26:
  sub_2528317C8();
  sub_2528313A8();
  sub_252831898();
  sub_2528313A8();
  sub_2528318B8();
  __break(1u);
}

uint64_t type metadata accessor for TAFField()
{
  return self;
}

uint64_t type metadata accessor for TAFSection()
{
  return self;
}

unint64_t sub_25279033C()
{
  unint64_t result = qword_26B22C018;
  if (!qword_26B22C018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22C018);
  }
  return result;
}

uint64_t type metadata accessor for UtilityArtwork()
{
  return self;
}

uint64_t type metadata accessor for UtilitySupport()
{
  return self;
}

uint64_t type metadata accessor for UtilityOrganization()
{
  return self;
}

uint64_t type metadata accessor for UtilityConfiguration()
{
  return self;
}

unint64_t sub_252790420()
{
  unint64_t result = qword_269C1D218;
  if (!qword_269C1D218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D218);
  }
  return result;
}

unint64_t sub_252790474()
{
  unint64_t result = qword_269C1D220;
  if (!qword_269C1D220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D220);
  }
  return result;
}

unint64_t sub_2527904C8()
{
  unint64_t result = qword_269C1D230;
  if (!qword_269C1D230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D230);
  }
  return result;
}

unint64_t sub_25279051C()
{
  unint64_t result = qword_269C1D240;
  if (!qword_269C1D240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D240);
  }
  return result;
}

uint64_t sub_252790570(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2527905B4()
{
  unint64_t result = qword_269C1D278;
  if (!qword_269C1D278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D278);
  }
  return result;
}

unint64_t sub_252790608()
{
  unint64_t result = qword_269C1D290;
  if (!qword_269C1D290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D290);
  }
  return result;
}

unint64_t sub_25279065C()
{
  unint64_t result = qword_269C1D2A8;
  if (!qword_269C1D2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D2A8);
  }
  return result;
}

uint64_t type metadata accessor for TAFAuthorizationField()
{
  return self;
}

unint64_t sub_2527906D4()
{
  unint64_t result = qword_269C1D2D0;
  if (!qword_269C1D2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D2D0);
  }
  return result;
}

unint64_t sub_252790728()
{
  unint64_t result = qword_269C1D2E8;
  if (!qword_269C1D2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D2E8);
  }
  return result;
}

uint64_t sub_25279077C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B22BF40);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2527907E0()
{
  unint64_t result = qword_269C1D300;
  if (!qword_269C1D300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D300);
  }
  return result;
}

uint64_t type metadata accessor for TAFVerificationFactor()
{
  return self;
}

uint64_t sub_252790858(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746973626577 && a2 == 0xE700000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B726F77747261 && a2 == 0xE700000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74726F70707573 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_252790A04(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x800000025283A710 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000025283A730 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000025283B030 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000025283A770)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_252790B9C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79654B6D726F66 && a2 == 0xE700000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74786554746E6968 && a2 == 0xE800000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E6F4374786574 && a2 == 0xEF65707954747865 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6572756365537369 && a2 == 0xE800000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025283B0E0 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025283B100 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7865676572 && a2 == 0xE500000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6465726975716572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_252790FA4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79654B6D726F66 && a2 == 0xE700000000000000;
  if (v2 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252791090(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726564616568 && a2 == 0xE600000000000000;
  if (v2 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73646C656966 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_252791174(unint64_t result)
{
  if (result > 4) {
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for UtilityRegion()
{
  return self;
}

unint64_t sub_2527911A8()
{
  unint64_t result = qword_269C1D328;
  if (!qword_269C1D328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D328);
  }
  return result;
}

unint64_t sub_252791200()
{
  unint64_t result = qword_269C1D338;
  if (!qword_269C1D338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D338);
  }
  return result;
}

uint64_t method lookup function for UtilityServices(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for UtilityServices);
}

uint64_t dispatch thunk of static UtilityServices.defaultURLSession.getter()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t method lookup function for UtilityConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for UtilityConfiguration);
}

uint64_t dispatch thunk of UtilityConfiguration.name.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of UtilityConfiguration.shortName.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of UtilityConfiguration.alternateSuppliers.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of UtilityConfiguration.alternateSupplierName(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of UtilityConfiguration.tafFields.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of UtilityConfiguration.tafSections.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of UtilityConfiguration.OAuthURL.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of UtilityConfiguration.accessTokenValidity.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of UtilityConfiguration.refreshTokenValidity.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of UtilityConfiguration.termsAndAgreement.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of UtilityConfiguration.oneTimePasscodeLength.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of UtilityConfiguration.organizationInformation.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of UtilityConfiguration.initialPollDelayInSeconds.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of UtilityConfiguration.missingDataRetryEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of UtilityConfiguration.authorizationRefreshPeriod.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of UtilityConfiguration.trustedAccountFingerprintEnabled()()
{
  BOOL v2 = *(int **)((*MEMORY[0x263F8EED0] & *v0) + 0xD8);
  char v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_252787274;
  return v5();
}

uint64_t dispatch thunk of UtilityConfiguration.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of UtilityConfiguration.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t method lookup function for UtilityOrganization(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for UtilityOrganization);
}

uint64_t dispatch thunk of UtilityOrganization.__allocating_init(name:website:artwork:support:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of UtilityOrganization.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of UtilityOrganization.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t method lookup function for UtilityArtwork(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for UtilityArtwork);
}

uint64_t dispatch thunk of UtilityArtwork.__allocating_init(icon:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of UtilityArtwork.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of UtilityArtwork.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for UtilitySupport(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for UtilitySupport);
}

uint64_t dispatch thunk of UtilitySupport.__allocating_init(customerServicePhone:customerServiceEmail:customerServiceSMS:customerServiceBusinessChat:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of UtilitySupport.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of UtilitySupport.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t method lookup function for TAFField(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TAFField);
}

uint64_t dispatch thunk of TAFField.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of TAFField.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t method lookup function for TAFAuthorizationField(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TAFAuthorizationField);
}

uint64_t dispatch thunk of TAFAuthorizationField.__allocating_init(formKey:value:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of TAFAuthorizationField.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of TAFAuthorizationField.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t method lookup function for TAFSection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TAFSection);
}

uint64_t dispatch thunk of TAFSection.__allocating_init(header:fields:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of TAFSection.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of TAFSection.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t method lookup function for TAFVerificationFactor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TAFVerificationFactor);
}

uint64_t dispatch thunk of TAFVerificationFactor.factor.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of TAFVerificationFactor.destination.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of TAFVerificationFactor.dictionary.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

ValueMetadata *type metadata accessor for TAFVerificationFactorType()
{
  return &type metadata for TAFVerificationFactorType;
}

uint64_t method lookup function for UtilityRegion(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for UtilityRegion);
}

uint64_t dispatch thunk of UtilityRegion.__allocating_init(name:identifier:shortName:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of UtilityRegion.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of UtilityRegion.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

unsigned char *storeEnumTagSinglePayload for UtilityRegion.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252791CF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UtilityRegion.CodingKeys()
{
  return &type metadata for UtilityRegion.CodingKeys;
}

ValueMetadata *type metadata accessor for TAFSection.CodingKeys()
{
  return &type metadata for TAFSection.CodingKeys;
}

unsigned char *_s19HomeUtilityServices10TAFSectionC10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252791E14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TAFAuthorizationField.CodingKeys()
{
  return &type metadata for TAFAuthorizationField.CodingKeys;
}

uint64_t getEnumTagSinglePayload for TAFField.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TAFField.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252791FA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TAFField.CodingKeys()
{
  return &type metadata for TAFField.CodingKeys;
}

ValueMetadata *type metadata accessor for UtilitySupport.CodingKeys()
{
  return &type metadata for UtilitySupport.CodingKeys;
}

uint64_t sub_252792004()
{
  return 0;
}

ValueMetadata *type metadata accessor for UtilityArtwork.CodingKeys()
{
  return &type metadata for UtilityArtwork.CodingKeys;
}

uint64_t getEnumTagSinglePayload for UtilityPeaks.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s19HomeUtilityServices14UtilitySupportC10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252792178);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UtilityOrganization.CodingKeys()
{
  return &type metadata for UtilityOrganization.CodingKeys;
}

uint64_t getEnumTagSinglePayload for AuthTokenRefreshResponse.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s19HomeUtilityServices14UtilityArtworkC10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25279229CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for UtilityConfiguration.CodingKeys()
{
  return &type metadata for UtilityConfiguration.CodingKeys;
}

unint64_t sub_2527922D8()
{
  unint64_t result = qword_269C1D348;
  if (!qword_269C1D348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D348);
  }
  return result;
}

unint64_t sub_252792330()
{
  unint64_t result = qword_269C1D350;
  if (!qword_269C1D350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D350);
  }
  return result;
}

unint64_t sub_252792388()
{
  unint64_t result = qword_269C1D358;
  if (!qword_269C1D358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D358);
  }
  return result;
}

unint64_t sub_2527923E0()
{
  unint64_t result = qword_269C1D360;
  if (!qword_269C1D360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D360);
  }
  return result;
}

unint64_t sub_252792438()
{
  unint64_t result = qword_269C1D368;
  if (!qword_269C1D368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D368);
  }
  return result;
}

unint64_t sub_252792490()
{
  unint64_t result = qword_269C1D370;
  if (!qword_269C1D370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D370);
  }
  return result;
}

unint64_t sub_2527924E8()
{
  unint64_t result = qword_269C1D378;
  if (!qword_269C1D378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D378);
  }
  return result;
}

unint64_t sub_252792540()
{
  unint64_t result = qword_269C1D380;
  if (!qword_269C1D380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D380);
  }
  return result;
}

unint64_t sub_252792598()
{
  unint64_t result = qword_269C1D388;
  if (!qword_269C1D388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D388);
  }
  return result;
}

unint64_t sub_2527925F0()
{
  unint64_t result = qword_269C1D390;
  if (!qword_269C1D390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D390);
  }
  return result;
}

unint64_t sub_252792648()
{
  unint64_t result = qword_269C1D398;
  if (!qword_269C1D398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D398);
  }
  return result;
}

unint64_t sub_2527926A0()
{
  unint64_t result = qword_269C1D3A0;
  if (!qword_269C1D3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D3A0);
  }
  return result;
}

unint64_t sub_2527926F8()
{
  unint64_t result = qword_269C1D3A8;
  if (!qword_269C1D3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D3A8);
  }
  return result;
}

unint64_t sub_252792750()
{
  unint64_t result = qword_269C1D3B0;
  if (!qword_269C1D3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D3B0);
  }
  return result;
}

unint64_t sub_2527927A8()
{
  unint64_t result = qword_269C1D3B8;
  if (!qword_269C1D3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D3B8);
  }
  return result;
}

unint64_t sub_252792800()
{
  unint64_t result = qword_269C1D3C0;
  if (!qword_269C1D3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D3C0);
  }
  return result;
}

unint64_t sub_252792858()
{
  unint64_t result = qword_269C1D3C8;
  if (!qword_269C1D3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D3C8);
  }
  return result;
}

unint64_t sub_2527928B0()
{
  unint64_t result = qword_269C1D3D0;
  if (!qword_269C1D3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D3D0);
  }
  return result;
}

unint64_t sub_252792908()
{
  unint64_t result = qword_269C1D3D8;
  if (!qword_269C1D3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D3D8);
  }
  return result;
}

unint64_t sub_252792960()
{
  unint64_t result = qword_269C1D3E0;
  if (!qword_269C1D3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D3E0);
  }
  return result;
}

unint64_t sub_2527929B8()
{
  unint64_t result = qword_269C1D3E8;
  if (!qword_269C1D3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D3E8);
  }
  return result;
}

unint64_t sub_252792A10()
{
  unint64_t result = qword_269C1D3F0;
  if (!qword_269C1D3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D3F0);
  }
  return result;
}

unint64_t sub_252792A68()
{
  unint64_t result = qword_269C1D3F8;
  if (!qword_269C1D3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D3F8);
  }
  return result;
}

unint64_t sub_252792AC0()
{
  unint64_t result = qword_269C1D400;
  if (!qword_269C1D400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D400);
  }
  return result;
}

uint64_t sub_252792B14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D614E74726F6873 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_252792C74(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_252792CB8()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_252792CF8()
{
  BOOL v2 = *(const void **)(v0 + 16);
  int v3 = *(void **)(v0 + 24);
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *unsigned int v4 = v1;
  v4[1] = sub_252786A30;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_269C1D408 + dword_269C1D408);
  return v5(v2, v3);
}

uint64_t sub_252792DAC(uint64_t a1)
{
  return a1;
}

uint64_t sub_252792FB0()
{
  uint64_t v2 = v0[2];
  int v3 = (void *)v0[3];
  unsigned int v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_252786D4C;
  char v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_269C1D418 + dword_269C1D418);
  return v6(v2, v3, v4);
}

uint64_t objectdestroy_115Tm()
{
  _Block_release(*(const void **)(v0 + 32));

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2527930C4()
{
  uint64_t v2 = v0[2];
  int v3 = (void *)v0[3];
  unsigned int v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_252786D4C;
  char v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_269C1D438 + dword_269C1D438);
  return v6(v2, v3, v4);
}

uint64_t sub_25279318C()
{
  _Block_release(*(const void **)(v0 + 40));

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_2527931CC()
{
  double v2 = v0[2];
  double v3 = v0[3];
  unsigned int v4 = (void *)*((void *)v0 + 4);
  uint64_t v5 = (void *)*((void *)v0 + 5);
  char v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *char v6 = v1;
  v6[1] = sub_252786D4C;
  uint64_t v7 = (uint64_t (*)(void *, void *, double, double))((char *)&dword_269C1D458 + dword_269C1D458);
  return v7(v4, v5, v2, v3);
}

uint64_t sub_25279329C()
{
  _Block_release(*(const void **)(v0 + 24));

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2527932DC()
{
  double v2 = *(void **)(v0 + 16);
  double v3 = *(void **)(v0 + 24);
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *unsigned int v4 = v1;
  v4[1] = sub_252786D4C;
  uint64_t v5 = (uint64_t (*)(void *, void *))((char *)&dword_269C1D478 + dword_269C1D478);
  return v5(v2, v3);
}

unint64_t sub_252793398()
{
  unint64_t result = qword_269C1D498;
  if (!qword_269C1D498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D498);
  }
  return result;
}

_OWORD *sub_2527933EC(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_2527933FC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2527934A8()
{
  return sub_252831B18();
}

uint64_t sub_2527935BC()
{
  return sub_252831B18();
}

uint64_t sub_2527936C0()
{
  return sub_252831B18();
}

uint64_t sub_252793774()
{
  return sub_252831B18();
}

uint64_t sub_25279384C()
{
  sub_252831258();

  return swift_bridgeObjectRelease();
}

uint64_t sub_252793968()
{
  sub_252831258();

  return swift_bridgeObjectRelease();
}

uint64_t sub_252793A58()
{
  sub_252831258();

  return swift_bridgeObjectRelease();
}

uint64_t sub_252793B10()
{
  return sub_252831B18();
}

uint64_t sub_252793BE4()
{
  return sub_252831B18();
}

uint64_t sub_252793CE4()
{
  return sub_252831B18();
}

uint64_t sub_252793DF4()
{
  return sub_252831B18();
}

uint64_t sub_252793F20()
{
  return sub_252831B18();
}

id UtilitySubscriptionResponse.subscription.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionResponse_subscription);
}

uint64_t UtilitySubscriptionResponse.authorizationToken.getter()
{
  return sub_25279A210(&OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionResponse_authorizationToken);
}

void UtilitySubscriptionResponse.init()()
{
}

uint64_t sub_2527940E8()
{
  if (*v0) {
    return 0xD000000000000012;
  }
  else {
    return 0x7069726373627573;
  }
}

uint64_t sub_252794130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25279D0F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252794158(uint64_t a1)
{
  unint64_t v2 = sub_25279441C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252794194(uint64_t a1)
{
  unint64_t v2 = sub_25279441C();

  return MEMORY[0x270FA00B8](a1, v2);
}

id UtilitySubscriptionResponse.__deallocating_deinit()
{
  return sub_25279A8D8(type metadata accessor for UtilitySubscriptionResponse);
}

uint64_t type metadata accessor for UtilitySubscriptionResponse()
{
  return self;
}

uint64_t sub_25279425C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25279441C();
  sub_252831B38();
  uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionResponse_subscription);
  v10[7] = 0;
  type metadata accessor for UtilitySubscriptionInformation();
  sub_25279B800(&qword_269C1D4E8, (void (*)(void))type metadata accessor for UtilitySubscriptionInformation);
  sub_252831A18();
  if (!v2)
  {
    v10[6] = 1;
    sub_2528319A8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_25279441C()
{
  unint64_t result = qword_269C1D4E0;
  if (!qword_269C1D4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D4E0);
  }
  return result;
}

uint64_t type metadata accessor for UtilitySubscriptionInformation()
{
  return self;
}

id UtilitySubscriptionResponse.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return UtilitySubscriptionResponse.init(from:)(a1);
}

id UtilitySubscriptionResponse.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4F0);
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25279441C();
  uint64_t v8 = v1;
  id v9 = v7;
  sub_252831B28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

    type metadata accessor for UtilitySubscriptionResponse();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = v18;
    type metadata accessor for UtilitySubscriptionInformation();
    char v21 = 0;
    sub_25279B800(&qword_269C1D4F8, (void (*)(void))type metadata accessor for UtilitySubscriptionInformation);
    uint64_t v11 = v19;
    sub_252831998();
    *(void *)&v8[OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionResponse_subscription] = v22;
    LOBYTE(v22) = 1;
    uint64_t v13 = sub_252831928();
    uint64_t v14 = (uint64_t *)&v8[OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionResponse_authorizationToken];
    *uint64_t v14 = v13;
    v14[1] = v15;

    uint64_t v16 = (objc_class *)type metadata accessor for UtilitySubscriptionResponse();
    v20.receiver = v8;
    v20.super_class = v16;
    id v9 = objc_msgSendSuper2(&v20, sel_init);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v11);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v9;
}

uint64_t sub_252794760@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25279B1D8(a1, type metadata accessor for UtilitySubscriptionResponse, (uint64_t (*)(uint64_t))UtilitySubscriptionResponse.init(from:), a2);
}

uint64_t sub_2527947A0(void *a1)
{
  return sub_25279425C(a1);
}

uint64_t UtilitySubscriptionInformation.subscriptionID.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices30UtilitySubscriptionInformation_subscriptionID);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UtilitySubscriptionInformation.state.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices30UtilitySubscriptionInformation_state);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UtilitySubscriptionInformation.startDate.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices30UtilitySubscriptionInformation_startDate);
  swift_bridgeObjectRetain();
  return v1;
}

id UtilitySubscriptionInformation.serviceLocation.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices30UtilitySubscriptionInformation_serviceLocation);
}

uint64_t UtilitySubscriptionInformation.customerAgreements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2527949EC(unsigned __int8 *a1, char *a2)
{
  return sub_2527A672C(*a1, *a2);
}

uint64_t sub_2527949F8()
{
  return sub_2527934A8();
}

uint64_t sub_252794A00()
{
  sub_252831258();

  return swift_bridgeObjectRelease();
}

uint64_t sub_252794AFC()
{
  return sub_252793CE4();
}

uint64_t sub_252794B04@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25279D1FC();
  *a1 = result;
  return result;
}

void sub_252794B3C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEE0064496E6F6974;
  uint64_t v3 = 0x7069726373627573;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6574617473;
      goto LABEL_3;
    case 2:
      *a1 = 0x7461447472617473;
      a1[1] = 0xE900000000000065;
      break;
    case 3:
      *a1 = 0x4C65636976726573;
      a1[1] = 0xEF6E6F697461636FLL;
      break;
    case 4:
      *a1 = 0xD000000000000012;
      a1[1] = 0x800000025283A430;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_252794C14()
{
  unint64_t result = 0x7069726373627573;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6574617473;
      break;
    case 2:
      unint64_t result = 0x7461447472617473;
      break;
    case 3:
      unint64_t result = 0x4C65636976726573;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_252794CDC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25279D1FC();
  *a1 = result;
  return result;
}

void sub_252794D0C(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_252794D18(uint64_t a1)
{
  unint64_t v2 = sub_25279510C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252794D54(uint64_t a1)
{
  unint64_t v2 = sub_25279510C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void UtilitySubscriptionInformation.init()()
{
}

id UtilitySubscriptionInformation.__deallocating_deinit()
{
  return sub_25279A8D8(type metadata accessor for UtilitySubscriptionInformation);
}

uint64_t sub_252794E90(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D528);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25279510C();
  sub_252831B38();
  LOBYTE(v11) = 0;
  sub_2528319E8();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_2528319E8();
    LOBYTE(v11) = 2;
    sub_2528319E8();
    uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC19HomeUtilityServices30UtilitySubscriptionInformation_serviceLocation);
    HIBYTE(v10) = 3;
    type metadata accessor for UtilityServiceLocation();
    sub_25279B800(&qword_269C1D538, (void (*)(void))type metadata accessor for UtilityServiceLocation);
    sub_252831A18();
    uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC19HomeUtilityServices30UtilitySubscriptionInformation_customerAgreements);
    HIBYTE(v10) = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D540);
    sub_252795184();
    sub_252831A18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_25279510C()
{
  unint64_t result = qword_269C1D530;
  if (!qword_269C1D530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D530);
  }
  return result;
}

uint64_t type metadata accessor for UtilityServiceLocation()
{
  return self;
}

unint64_t sub_252795184()
{
  unint64_t result = qword_269C1D548;
  if (!qword_269C1D548)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C1D540);
    sub_25279B800(&qword_269C1D550, (void (*)(void))type metadata accessor for UtilityCustomerAgreement);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D548);
  }
  return result;
}

uint64_t type metadata accessor for UtilityCustomerAgreement()
{
  return self;
}

id UtilitySubscriptionInformation.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return UtilitySubscriptionInformation.init(from:)(a1);
}

id UtilitySubscriptionInformation.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D558);
  uint64_t v26 = *(void *)(v4 - 8);
  uint64_t v27 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  uint64_t v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_25279510C();
  uint64_t v8 = v1;
  id v9 = v6;
  sub_252831B28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    id v25 = v8;

    type metadata accessor for UtilitySubscriptionInformation();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = v26;
    uint64_t v11 = v27;
    LOBYTE(v31) = 0;
    uint64_t v12 = sub_252831968();
    uint64_t v14 = v8;
    uint64_t v15 = (uint64_t *)&v8[OBJC_IVAR____TtC19HomeUtilityServices30UtilitySubscriptionInformation_subscriptionID];
    *uint64_t v15 = v12;
    v15[1] = v16;
    LOBYTE(v31) = 1;
    uint64_t v17 = sub_252831968();
    uint64_t v18 = (uint64_t *)&v8[OBJC_IVAR____TtC19HomeUtilityServices30UtilitySubscriptionInformation_state];
    *uint64_t v18 = v17;
    v18[1] = v19;
    LOBYTE(v31) = 2;
    uint64_t v20 = sub_252831968();
    char v21 = (uint64_t *)&v8[OBJC_IVAR____TtC19HomeUtilityServices30UtilitySubscriptionInformation_startDate];
    *char v21 = v20;
    v21[1] = v22;
    type metadata accessor for UtilityServiceLocation();
    char v30 = 3;
    sub_25279B800(&qword_269C1D560, (void (*)(void))type metadata accessor for UtilityServiceLocation);
    sub_252831998();
    *(void *)&v8[OBJC_IVAR____TtC19HomeUtilityServices30UtilitySubscriptionInformation_serviceLocation] = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D540);
    char v30 = 4;
    sub_2527956A4();
    sub_252831998();
    uint64_t v23 = v10;
    *(void *)&v14[OBJC_IVAR____TtC19HomeUtilityServices30UtilitySubscriptionInformation_customerAgreements] = v31;

    BOOL v24 = (objc_class *)type metadata accessor for UtilitySubscriptionInformation();
    v29.receiver = v14;
    v29.super_class = v24;
    id v25 = objc_msgSendSuper2(&v29, sel_init);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v11);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
  }
  return v25;
}

unint64_t sub_2527956A4()
{
  unint64_t result = qword_269C1D568;
  if (!qword_269C1D568)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C1D540);
    sub_25279B800(&qword_269C1D570, (void (*)(void))type metadata accessor for UtilityCustomerAgreement);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D568);
  }
  return result;
}

uint64_t sub_252795748@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25279B1D8(a1, type metadata accessor for UtilitySubscriptionInformation, (uint64_t (*)(uint64_t))UtilitySubscriptionInformation.init(from:), a2);
}

uint64_t sub_252795788(void *a1)
{
  return sub_252794E90(a1);
}

uint64_t UtilityCustomerAgreement.customerAgreementID.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices24UtilityCustomerAgreement_customerAgreementID);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UtilityCustomerAgreement.accountID.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices24UtilityCustomerAgreement_accountID);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UtilityCustomerAgreement.programs.getter()
{
  return swift_bridgeObjectRetain();
}

id sub_2527958D8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_2528314E8();
  swift_bridgeObjectRelease();

  return v4;
}

uint64_t UtilityCustomerAgreement.meters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2527959D4()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices24UtilityCustomerAgreement_alternateSupplier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_252795AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC19HomeUtilityServices24UtilityCustomerAgreement_alternateSupplier);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_252795B08(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(*a2 + OBJC_IVAR____TtC19HomeUtilityServices24UtilityCustomerAgreement_alternateSupplier);
  swift_beginAccess();
  *uint64_t v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_252795B74())()
{
  return j__swift_endAccess;
}

unint64_t sub_252795D14(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x49746E756F636361;
      break;
    case 2:
      unint64_t result = 0x736D6172676F7270;
      break;
    case 3:
      unint64_t result = 0x73726574656DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_252795DD0(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x49746E756F636361;
      break;
    case 2:
      unint64_t result = 0x736D6172676F7270;
      break;
    case 3:
      unint64_t result = 0x73726574656DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_252795E8C(char *a1, char *a2)
{
  return sub_2527A6930(*a1, *a2);
}

uint64_t sub_252795E98()
{
  return sub_2527935BC();
}

uint64_t sub_252795EA0()
{
  return sub_252793968();
}

uint64_t sub_252795EA8()
{
  return sub_252793BE4();
}

uint64_t sub_252795EB0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25279D1FC();
  *a1 = result;
  return result;
}

unint64_t sub_252795EE8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_252795D14(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_252795F14()
{
  return sub_252795DD0(*v0);
}

uint64_t sub_252795F1C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25279D1FC();
  *a1 = result;
  return result;
}

uint64_t sub_252795F4C(uint64_t a1)
{
  unint64_t v2 = sub_252796360();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252795F88(uint64_t a1)
{
  unint64_t v2 = sub_252796360();

  return MEMORY[0x270FA00B8](a1, v2);
}

void UtilityCustomerAgreement.init()()
{
}

id UtilityCustomerAgreement.__deallocating_deinit()
{
  return sub_25279A8D8(type metadata accessor for UtilityCustomerAgreement);
}

uint64_t sub_2527960C4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D5A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252796360();
  sub_252831B38();
  LOBYTE(v10) = 0;
  sub_2528319E8();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  LOBYTE(v10) = 1;
  sub_2528319E8();
  uint64_t v10 = *(void *)(v3 + OBJC_IVAR____TtC19HomeUtilityServices24UtilityCustomerAgreement_programs);
  char v11 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D5B0);
  sub_2527963B4();
  sub_2528319D8();
  uint64_t v10 = *(void *)(v3 + OBJC_IVAR____TtC19HomeUtilityServices24UtilityCustomerAgreement_meters);
  char v11 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D5C8);
  sub_25279647C();
  sub_252831A18();
  swift_beginAccess();
  char v11 = 4;
  swift_bridgeObjectRetain();
  sub_2528319A8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_bridgeObjectRelease();
}

unint64_t sub_252796360()
{
  unint64_t result = qword_269C1D5A8;
  if (!qword_269C1D5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D5A8);
  }
  return result;
}

unint64_t sub_2527963B4()
{
  unint64_t result = qword_269C1D5B8;
  if (!qword_269C1D5B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C1D5B0);
    sub_25279B800(&qword_269C1D5C0, (void (*)(void))type metadata accessor for UtilityProgram);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D5B8);
  }
  return result;
}

uint64_t type metadata accessor for UtilityProgram()
{
  return self;
}

unint64_t sub_25279647C()
{
  unint64_t result = qword_269C1D5D0;
  if (!qword_269C1D5D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C1D5C8);
    sub_25279B800(&qword_269C1D5D8, (void (*)(void))type metadata accessor for UtilityMeter);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D5D0);
  }
  return result;
}

uint64_t type metadata accessor for UtilityMeter()
{
  return self;
}

char *UtilityCustomerAgreement.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return UtilityCustomerAgreement.init(from:)(a1);
}

char *UtilityCustomerAgreement.init(from:)(void *a1)
{
  id v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D5E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = &v3[OBJC_IVAR____TtC19HomeUtilityServices24UtilityCustomerAgreement_alternateSupplier];
  *(void *)id v9 = 0;
  *((void *)v9 + 1) = 0;
  uint64_t v27 = a1;
  uint64_t v28 = (uint64_t *)v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252796360();
  uint64_t v10 = v3;
  sub_252831B28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);

    swift_bridgeObjectRelease();
    type metadata accessor for UtilityCustomerAgreement();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v11 = v6;
    LOBYTE(v30) = 0;
    uint64_t v12 = v5;
    uint64_t v13 = sub_252831968();
    uint64_t v15 = (uint64_t *)&v10[OBJC_IVAR____TtC19HomeUtilityServices24UtilityCustomerAgreement_customerAgreementID];
    *uint64_t v15 = v13;
    v15[1] = v16;
    LOBYTE(v30) = 1;
    uint64_t v17 = sub_252831968();
    uint64_t v18 = (uint64_t *)&v10[OBJC_IVAR____TtC19HomeUtilityServices24UtilityCustomerAgreement_accountID];
    *uint64_t v18 = v17;
    v18[1] = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D5B0);
    char v31 = 2;
    sub_2527969B4();
    sub_252831958();
    *(void *)&v10[OBJC_IVAR____TtC19HomeUtilityServices24UtilityCustomerAgreement_programs] = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D5C8);
    char v31 = 3;
    sub_252796A58();
    sub_252831998();
    *(void *)&v10[OBJC_IVAR____TtC19HomeUtilityServices24UtilityCustomerAgreement_meters] = v30;
    LOBYTE(v30) = 4;
    uint64_t v20 = sub_252831928();
    uint64_t v22 = v21;
    uint64_t v23 = v12;
    BOOL v24 = v28;
    swift_beginAccess();
    *BOOL v24 = v20;
    v24[1] = v22;

    swift_bridgeObjectRelease();
    id v25 = (objc_class *)type metadata accessor for UtilityCustomerAgreement();
    v29.receiver = v10;
    v29.super_class = v25;
    uint64_t v10 = (char *)objc_msgSendSuper2(&v29, sel_init);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v23);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
  }
  return v10;
}

unint64_t sub_2527969B4()
{
  unint64_t result = qword_269C1D5E8;
  if (!qword_269C1D5E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C1D5B0);
    sub_25279B800(&qword_269C1D5F0, (void (*)(void))type metadata accessor for UtilityProgram);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D5E8);
  }
  return result;
}

unint64_t sub_252796A58()
{
  unint64_t result = qword_269C1D5F8;
  if (!qword_269C1D5F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C1D5C8);
    sub_25279B800(&qword_269C1D600, (void (*)(void))type metadata accessor for UtilityMeter);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D5F8);
  }
  return result;
}

uint64_t sub_252796AFC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25279B1D8(a1, type metadata accessor for UtilityCustomerAgreement, (uint64_t (*)(uint64_t))UtilityCustomerAgreement.init(from:), a2);
}

uint64_t sub_252796B3C(void *a1)
{
  return sub_2527960C4(a1);
}

uint64_t UtilityProgram.programID.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices14UtilityProgram_programID);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UtilityProgram.programDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices14UtilityProgram_programDescription);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UtilityProgram.enrollmentStatus.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices14UtilityProgram_enrollmentStatus);
  swift_bridgeObjectRetain();
  return v1;
}

id UtilityProgram.__allocating_init(programID:programDescription:enrollmentStatus:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (char *)objc_allocWithZone(v6);
  uint64_t v14 = &v13[OBJC_IVAR____TtC19HomeUtilityServices14UtilityProgram_programID];
  *(void *)uint64_t v14 = a1;
  *((void *)v14 + 1) = a2;
  uint64_t v15 = &v13[OBJC_IVAR____TtC19HomeUtilityServices14UtilityProgram_programDescription];
  *(void *)uint64_t v15 = a3;
  *((void *)v15 + 1) = a4;
  uint64_t v16 = &v13[OBJC_IVAR____TtC19HomeUtilityServices14UtilityProgram_enrollmentStatus];
  *(void *)uint64_t v16 = a5;
  *((void *)v16 + 1) = a6;
  v18.receiver = v13;
  v18.super_class = v6;
  return objc_msgSendSuper2(&v18, sel_init);
}

id UtilityProgram.init(programID:programDescription:enrollmentStatus:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = &v6[OBJC_IVAR____TtC19HomeUtilityServices14UtilityProgram_programID];
  *(void *)uint64_t v7 = a1;
  *((void *)v7 + 1) = a2;
  uint64_t v8 = &v6[OBJC_IVAR____TtC19HomeUtilityServices14UtilityProgram_programDescription];
  *(void *)uint64_t v8 = a3;
  *((void *)v8 + 1) = a4;
  id v9 = &v6[OBJC_IVAR____TtC19HomeUtilityServices14UtilityProgram_enrollmentStatus];
  *(void *)id v9 = a5;
  *((void *)v9 + 1) = a6;
  v11.receiver = v6;
  v11.super_class = (Class)type metadata accessor for UtilityProgram();
  return objc_msgSendSuper2(&v11, sel_init);
}

uint64_t sub_252796DEC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2527A624C(*a1, *a2);
}

uint64_t sub_252796DF8()
{
  return sub_2527936C0();
}

uint64_t sub_252796E00()
{
  sub_252831258();

  return swift_bridgeObjectRelease();
}

uint64_t sub_252796EA0()
{
  return sub_252793F20();
}

uint64_t sub_252796EA8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25279D244();
  *a1 = result;
  return result;
}

void sub_252796ED8(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE900000000000064;
  unint64_t v4 = 0xD000000000000012;
  unint64_t v5 = 0x800000025283A4A0;
  if (v2 != 1)
  {
    unint64_t v4 = 0xD000000000000010;
    unint64_t v5 = 0x800000025283A4C0;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = 0x496D6172676F7270;
  }
  if (!v6) {
    unint64_t v3 = v5;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_252796F48()
{
  unint64_t v1 = 0xD000000000000012;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x496D6172676F7270;
  }
}

uint64_t sub_252796FB4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25279D244();
  *a1 = result;
  return result;
}

uint64_t sub_252796FDC(uint64_t a1)
{
  unint64_t v2 = sub_2527972E0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252797018(uint64_t a1)
{
  unint64_t v2 = sub_2527972E0();

  return MEMORY[0x270FA00B8](a1, v2);
}

void UtilityProgram.init()()
{
}

id UtilityProgram.__deallocating_deinit()
{
  return sub_25279A8D8(type metadata accessor for UtilityProgram);
}

uint64_t sub_252797134(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D620);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  BOOL v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527972E0();
  sub_252831B38();
  v8[15] = 0;
  sub_2528319E8();
  if (!v1)
  {
    v8[14] = 1;
    sub_2528319E8();
    v8[13] = 2;
    sub_2528319E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2527972E0()
{
  unint64_t result = qword_269C1D628;
  if (!qword_269C1D628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D628);
  }
  return result;
}

id UtilityProgram.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return UtilityProgram.init(from:)(a1);
}

id UtilityProgram.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D630);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388](v4);
  BOOL v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527972E0();
  uint64_t v8 = v1;
  id v9 = v7;
  sub_252831B28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

    type metadata accessor for UtilityProgram();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = v24;
    uint64_t v11 = v25;
    char v27 = 0;
    uint64_t v12 = sub_252831968();
    uint64_t v14 = v8;
    uint64_t v15 = (uint64_t *)&v8[OBJC_IVAR____TtC19HomeUtilityServices14UtilityProgram_programID];
    *uint64_t v15 = v12;
    v15[1] = v16;
    char v27 = 1;
    uint64_t v17 = sub_252831968();
    objc_super v18 = (uint64_t *)&v14[OBJC_IVAR____TtC19HomeUtilityServices14UtilityProgram_programDescription];
    *objc_super v18 = v17;
    v18[1] = v19;
    char v27 = 2;
    uint64_t v20 = sub_252831968();
    uint64_t v21 = (uint64_t *)&v14[OBJC_IVAR____TtC19HomeUtilityServices14UtilityProgram_enrollmentStatus];
    *uint64_t v21 = v20;
    v21[1] = v22;

    uint64_t v23 = (objc_class *)type metadata accessor for UtilityProgram();
    v26.receiver = v14;
    v26.super_class = v23;
    id v9 = objc_msgSendSuper2(&v26, sel_init);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v11);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v9;
}

uint64_t sub_252797628@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25279B1D8(a1, type metadata accessor for UtilityProgram, (uint64_t (*)(uint64_t))UtilityProgram.init(from:), a2);
}

uint64_t sub_252797668(void *a1)
{
  return sub_252797134(a1);
}

uint64_t UtilityMeter.meterID.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices12UtilityMeter_meterID);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UtilityMeter.serialNumber.getter()
{
  return sub_25279A210(&OBJC_IVAR____TtC19HomeUtilityServices12UtilityMeter_serialNumber);
}

uint64_t UtilityMeter.make.getter()
{
  return sub_25279A210(&OBJC_IVAR____TtC19HomeUtilityServices12UtilityMeter_make);
}

uint64_t UtilityMeter.model.getter()
{
  return sub_25279A210(&OBJC_IVAR____TtC19HomeUtilityServices12UtilityMeter_model);
}

uint64_t UtilityMeter.intervalLengthInSeconds.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices12UtilityMeter_intervalLengthInSeconds);
}

uint64_t UtilityMeter.commodity.getter()
{
  return sub_25279A210(&OBJC_IVAR____TtC19HomeUtilityServices12UtilityMeter_commodity);
}

uint64_t UtilityMeter.usagePointID.getter()
{
  return sub_25279A210(&OBJC_IVAR____TtC19HomeUtilityServices12UtilityMeter_usagePointID);
}

unint64_t sub_252797764(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x754E6C6169726573;
      break;
    case 2:
      unint64_t result = 1701536109;
      break;
    case 3:
      unint64_t result = 0x6C65646F6DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0x7469646F6D6D6F63;
      break;
    case 6:
      unint64_t result = 0x696F506567617375;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25279784C(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x754E6C6169726573;
      break;
    case 2:
      unint64_t result = 1701536109;
      break;
    case 3:
      unint64_t result = 0x6C65646F6DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0x7469646F6D6D6F63;
      break;
    case 6:
      unint64_t result = 0x696F506567617375;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_252797934(char *a1, char *a2)
{
  return sub_2527A64E8(*a1, *a2);
}

uint64_t sub_252797940()
{
  return sub_252793DF4();
}

uint64_t sub_25279794C()
{
  return sub_25279384C();
}

uint64_t sub_252797954()
{
  return sub_252793DF4();
}

uint64_t sub_25279795C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25279D290();
  *a1 = result;
  return result;
}

unint64_t sub_25279798C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_252797764(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_2527979B8()
{
  return sub_25279784C(*v0);
}

uint64_t sub_2527979C0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25279D290();
  *a1 = result;
  return result;
}

void sub_2527979E8(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_2527979F4(uint64_t a1)
{
  unint64_t v2 = sub_252797E08();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252797A30(uint64_t a1)
{
  unint64_t v2 = sub_252797E08();

  return MEMORY[0x270FA00B8](a1, v2);
}

void UtilityMeter.init()()
{
}

id UtilityMeter.__deallocating_deinit()
{
  return sub_25279A8D8(type metadata accessor for UtilityMeter);
}

uint64_t sub_252797B88(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D670);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  BOOL v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252797E08();
  sub_252831B38();
  v8[15] = 0;
  sub_2528319E8();
  if (!v1)
  {
    v8[14] = 1;
    sub_2528319A8();
    v8[13] = 2;
    sub_2528319A8();
    v8[12] = 3;
    sub_2528319A8();
    v8[11] = 4;
    sub_2528319C8();
    v8[10] = 5;
    sub_2528319A8();
    v8[9] = 6;
    sub_2528319A8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_252797E08()
{
  unint64_t result = qword_269C1D678;
  if (!qword_269C1D678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D678);
  }
  return result;
}

unint64_t UtilityMeter.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return UtilityMeter.init(from:)(a1);
}

unint64_t UtilityMeter.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D680);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[3];
  uint64_t v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  unint64_t v9 = sub_252797E08();
  BOOL v36 = v1;
  sub_252831B28();
  if (v2)
  {
    uint64_t v11 = v36;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);

    type metadata accessor for UtilityMeter();
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v38 = 0;
    uint64_t v10 = sub_252831968();
    uint64_t v13 = v36;
    uint64_t v14 = (uint64_t *)&v36[OBJC_IVAR____TtC19HomeUtilityServices12UtilityMeter_meterID];
    *uint64_t v14 = v10;
    v14[1] = v15;
    char v38 = 1;
    uint64_t v16 = sub_252831928();
    uint64_t v17 = (uint64_t *)&v13[OBJC_IVAR____TtC19HomeUtilityServices12UtilityMeter_serialNumber];
    *uint64_t v17 = v16;
    v17[1] = v18;
    char v38 = 2;
    uint64_t v19 = sub_252831928();
    uint64_t v20 = (uint64_t *)&v13[OBJC_IVAR____TtC19HomeUtilityServices12UtilityMeter_make];
    *uint64_t v20 = v19;
    v20[1] = v21;
    char v38 = 3;
    uint64_t v22 = sub_252831928();
    uint64_t v23 = (uint64_t *)&v13[OBJC_IVAR____TtC19HomeUtilityServices12UtilityMeter_model];
    *uint64_t v23 = v22;
    v23[1] = v24;
    char v38 = 4;
    uint64_t v25 = sub_252831948();
    objc_super v26 = &v13[OBJC_IVAR____TtC19HomeUtilityServices12UtilityMeter_intervalLengthInSeconds];
    *(void *)objc_super v26 = v25;
    v26[8] = v27 & 1;
    char v38 = 5;
    uint64_t v28 = sub_252831928();
    objc_super v29 = (uint64_t *)&v13[OBJC_IVAR____TtC19HomeUtilityServices12UtilityMeter_commodity];
    *objc_super v29 = v28;
    v29[1] = v30;
    char v38 = 6;
    uint64_t v31 = sub_252831928();
    uint64_t v32 = (uint64_t *)&v13[OBJC_IVAR____TtC19HomeUtilityServices12UtilityMeter_usagePointID];
    *uint64_t v32 = v31;
    v32[1] = v33;

    char v34 = (objc_class *)type metadata accessor for UtilityMeter();
    v37.receiver = v13;
    v37.super_class = v34;
    unint64_t v9 = (unint64_t)objc_msgSendSuper2(&v37, sel_init);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
  }
  return v9;
}

uint64_t sub_252798318@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25279B1D8(a1, type metadata accessor for UtilityMeter, (uint64_t (*)(uint64_t))UtilityMeter.init(from:), a2);
}

uint64_t sub_252798358(void *a1)
{
  return sub_252797B88(a1);
}

uint64_t UtilitySubscriptionTokenSet.accessToken.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionTokenSet_accessToken);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UtilitySubscriptionTokenSet.expiresIn.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionTokenSet_expiresIn);
}

uint64_t UtilitySubscriptionTokenSet.idToken.getter()
{
  return sub_25279A210(&OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionTokenSet_idToken);
}

uint64_t UtilitySubscriptionTokenSet.refreshToken.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionTokenSet_refreshToken);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UtilitySubscriptionTokenSet.tokenType.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionTokenSet_tokenType);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_25279844C(char a1)
{
  uint64_t result = 0x6F54737365636361;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x4973657269707865;
      break;
    case 2:
      uint64_t result = 0x6E656B6F546469;
      break;
    case 3:
      uint64_t result = 0x5468736572666572;
      break;
    case 4:
      uint64_t result = 0x7079546E656B6F74;
      break;
    case 5:
      uint64_t result = 0x745F737365636361;
      break;
    case 6:
      uint64_t result = 0x5F73657269707865;
      break;
    case 7:
      uint64_t result = 0x6E656B6F745F6469;
      break;
    case 8:
      uint64_t result = 0x5F68736572666572;
      break;
    case 9:
      uint64_t result = 0x79745F6E656B6F74;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2527985B8(char a1)
{
  uint64_t result = 0x6F54737365636361;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x4973657269707865;
      break;
    case 2:
      uint64_t result = 0x6E656B6F546469;
      break;
    case 3:
      uint64_t result = 0x5468736572666572;
      break;
    case 4:
      uint64_t result = 0x7079546E656B6F74;
      break;
    case 5:
      uint64_t result = 0x745F737365636361;
      break;
    case 6:
      uint64_t result = 0x5F73657269707865;
      break;
    case 7:
      uint64_t result = 0x6E656B6F745F6469;
      break;
    case 8:
      uint64_t result = 0x5F68736572666572;
      break;
    case 9:
      uint64_t result = 0x79745F6E656B6F74;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_252798724(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_25279844C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_25279844C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_252831A58();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2527987B0()
{
  char v1 = *v0;
  sub_252831AF8();
  sub_25279844C(v1);
  sub_252831258();
  swift_bridgeObjectRelease();
  return sub_252831B18();
}

uint64_t sub_252798814()
{
  sub_25279844C(*v0);
  sub_252831258();

  return swift_bridgeObjectRelease();
}

uint64_t sub_252798868()
{
  char v1 = *v0;
  sub_252831AF8();
  sub_25279844C(v1);
  sub_252831258();
  swift_bridgeObjectRelease();
  return sub_252831B18();
}

uint64_t sub_2527988C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25279D2DC();
  *a1 = result;
  return result;
}

uint64_t sub_2527988F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25279844C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_252798924()
{
  return sub_2527985B8(*v0);
}

uint64_t sub_25279892C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25279D2DC();
  *a1 = result;
  return result;
}

uint64_t sub_252798954(uint64_t a1)
{
  unint64_t v2 = sub_25279917C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252798990(uint64_t a1)
{
  unint64_t v2 = sub_25279917C();

  return MEMORY[0x270FA00B8](a1, v2);
}

id UtilitySubscriptionTokenSet.__allocating_init(accessToken:expiresIn:idToken:refreshToken:tokenType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v18 = (char *)objc_allocWithZone(v9);
  uint64_t v19 = &v18[OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionTokenSet_accessToken];
  *(void *)uint64_t v19 = a1;
  *((void *)v19 + 1) = a2;
  *(void *)&v18[OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionTokenSet_expiresIn] = a3;
  uint64_t v20 = &v18[OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionTokenSet_refreshToken];
  *(void *)uint64_t v20 = a6;
  *((void *)v20 + 1) = a7;
  uint64_t v21 = &v18[OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionTokenSet_idToken];
  *(void *)uint64_t v21 = a4;
  *((void *)v21 + 1) = a5;
  uint64_t v22 = &v18[OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionTokenSet_tokenType];
  *(void *)uint64_t v22 = a8;
  *((void *)v22 + 1) = a9;
  v24.receiver = v18;
  v24.super_class = v9;
  return objc_msgSendSuper2(&v24, sel_init);
}

id UtilitySubscriptionTokenSet.init(accessToken:expiresIn:idToken:refreshToken:tokenType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = &v9[OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionTokenSet_accessToken];
  *(void *)uint64_t v10 = a1;
  *((void *)v10 + 1) = a2;
  *(void *)&v9[OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionTokenSet_expiresIn] = a3;
  uint64_t v11 = &v9[OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionTokenSet_refreshToken];
  *(void *)uint64_t v11 = a6;
  *((void *)v11 + 1) = a7;
  uint64_t v12 = &v9[OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionTokenSet_idToken];
  *(void *)uint64_t v12 = a4;
  *((void *)v12 + 1) = a5;
  uint64_t v13 = &v9[OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionTokenSet_tokenType];
  *(void *)uint64_t v13 = a8;
  *((void *)v13 + 1) = a9;
  v15.receiver = v9;
  v15.super_class = (Class)type metadata accessor for UtilitySubscriptionTokenSet();
  return objc_msgSendSuper2(&v15, sel_init);
}

uint64_t type metadata accessor for UtilitySubscriptionTokenSet()
{
  return self;
}

unint64_t UtilitySubscriptionTokenSet.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return UtilitySubscriptionTokenSet.init(from:)(a1);
}

unint64_t UtilitySubscriptionTokenSet.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D6B0);
  uint64_t v18 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  uint64_t v19 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v7);
  unint64_t v8 = sub_25279917C();
  unint64_t v9 = v1;
  sub_252831B28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);

    type metadata accessor for UtilitySubscriptionTokenSet();
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v22 = byte_2702C44E8;
    sub_252831998();
    uint64_t v11 = *((void *)&v21 + 1);
    uint64_t v12 = &v9[OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionTokenSet_accessToken];
    *(void *)uint64_t v12 = v21;
    *((void *)v12 + 1) = v11;
    char v22 = byte_2702C4510;
    sub_252831998();
    *(void *)&v9[OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionTokenSet_expiresIn] = v21;
    char v22 = byte_2702C4538;
    sub_252831998();
    *(_OWORD *)&v9[OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionTokenSet_idToken] = v21;
    char v22 = byte_2702C4560;
    sub_252831998();
    uint64_t v13 = *((void *)&v21 + 1);
    uint64_t v14 = &v9[OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionTokenSet_refreshToken];
    *(void *)uint64_t v14 = v21;
    *((void *)v14 + 1) = v13;
    char v22 = byte_2702C4588;
    sub_252831998();
    uint64_t v15 = *((void *)&v21 + 1);
    uint64_t v16 = &v9[OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionTokenSet_tokenType];
    *(void *)uint64_t v16 = v21;
    *((void *)v16 + 1) = v15;

    uint64_t v17 = (objc_class *)type metadata accessor for UtilitySubscriptionTokenSet();
    v20.receiver = v9;
    v20.super_class = v17;
    unint64_t v8 = (unint64_t)objc_msgSendSuper2(&v20, sel_init);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
  }
  return v8;
}

unint64_t sub_25279917C()
{
  unint64_t result = qword_269C1D6B8;
  if (!qword_269C1D6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D6B8);
  }
  return result;
}

unint64_t sub_2527991D0()
{
  unint64_t result = qword_269C1D6C8;
  if (!qword_269C1D6C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C1D6C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D6C8);
  }
  return result;
}

uint64_t sub_25279922C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D6D0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25279917C();
  sub_252831B38();
  LOBYTE(v11) = 0;
  sub_2528319E8();
  if (!v2)
  {
    long long v11 = *(_OWORD *)(v3 + OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionTokenSet_idToken);
    v10[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D6D8);
    sub_252799460();
    sub_252831A18();
    LOBYTE(v11) = 3;
    sub_2528319E8();
    LOBYTE(v11) = 4;
    sub_2528319E8();
    LOBYTE(v11) = 3;
    sub_2528319E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_252799460()
{
  unint64_t result = qword_269C1D6E0;
  if (!qword_269C1D6E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C1D6D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D6E0);
  }
  return result;
}

void UtilitySubscriptionTokenSet.init()()
{
}

id UtilitySubscriptionTokenSet.__deallocating_deinit()
{
  return sub_25279A8D8(type metadata accessor for UtilitySubscriptionTokenSet);
}

uint64_t sub_2527995C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25279B1D8(a1, type metadata accessor for UtilitySubscriptionTokenSet, (uint64_t (*)(uint64_t))UtilitySubscriptionTokenSet.init(from:), a2);
}

uint64_t sub_252799600(void *a1)
{
  return sub_25279922C(a1);
}

uint64_t UtilityServiceLocation.serviceLocationID.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices22UtilityServiceLocation_serviceLocationID);
  swift_bridgeObjectRetain();
  return v1;
}

id UtilityServiceLocation.address.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices22UtilityServiceLocation_address);
}

id UtilityServiceLocation.__allocating_init(serviceLocationID:address:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  unint64_t v8 = &v7[OBJC_IVAR____TtC19HomeUtilityServices22UtilityServiceLocation_serviceLocationID];
  *(void *)unint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  *(void *)&v7[OBJC_IVAR____TtC19HomeUtilityServices22UtilityServiceLocation_address] = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, sel_init);
}

id UtilityServiceLocation.init(serviceLocationID:address:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = &v3[OBJC_IVAR____TtC19HomeUtilityServices22UtilityServiceLocation_serviceLocationID];
  *(void *)uint64_t v4 = a1;
  *((void *)v4 + 1) = a2;
  *(void *)&v3[OBJC_IVAR____TtC19HomeUtilityServices22UtilityServiceLocation_address] = a3;
  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for UtilityServiceLocation();
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t sub_2527997B0(char *a1, char *a2)
{
  return sub_2527A6C1C(*a1, *a2);
}

uint64_t sub_2527997BC()
{
  return sub_252831B18();
}

uint64_t sub_252799844()
{
  sub_252831258();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2527998B8()
{
  return sub_252831B18();
}

uint64_t sub_25279993C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_252831918();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_25279999C(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000011;
  if (*v1) {
    unint64_t v2 = 0x73736572646461;
  }
  unint64_t v3 = 0x800000025283A590;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2527999E0()
{
  if (*v0) {
    return 0x73736572646461;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_252799A20@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_252831918();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_252799A84(uint64_t a1)
{
  unint64_t v2 = sub_252799D84();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252799AC0(uint64_t a1)
{
  unint64_t v2 = sub_252799D84();

  return MEMORY[0x270FA00B8](a1, v2);
}

void UtilityServiceLocation.init()()
{
}

id UtilityServiceLocation.__deallocating_deinit()
{
  return sub_25279A8D8(type metadata accessor for UtilityServiceLocation);
}

uint64_t sub_252799BC4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D6F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252799D84();
  sub_252831B38();
  char v12 = 0;
  sub_2528319E8();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC19HomeUtilityServices22UtilityServiceLocation_address);
    v10[15] = 1;
    type metadata accessor for UtilityServiceAddress();
    sub_25279B800(&qword_269C1D0B8, (void (*)(void))type metadata accessor for UtilityServiceAddress);
    sub_252831A18();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_252799D84()
{
  unint64_t result = qword_269C1D700;
  if (!qword_269C1D700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D700);
  }
  return result;
}

uint64_t type metadata accessor for UtilityServiceAddress()
{
  return self;
}

id UtilityServiceLocation.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return UtilityServiceLocation.init(from:)(a1);
}

id UtilityServiceLocation.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D708);
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252799D84();
  unint64_t v8 = v1;
  id v9 = v7;
  sub_252831B28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

    type metadata accessor for UtilityServiceLocation();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v11 = v18;
    uint64_t v10 = v19;
    LOBYTE(v22) = 0;
    uint64_t v12 = sub_252831968();
    uint64_t v14 = (uint64_t *)&v8[OBJC_IVAR____TtC19HomeUtilityServices22UtilityServiceLocation_serviceLocationID];
    *uint64_t v14 = v12;
    v14[1] = v15;
    type metadata accessor for UtilityServiceAddress();
    char v21 = 1;
    sub_25279B800(&qword_269C1D0D0, (void (*)(void))type metadata accessor for UtilityServiceAddress);
    sub_252831998();
    *(void *)&v8[OBJC_IVAR____TtC19HomeUtilityServices22UtilityServiceLocation_address] = v22;

    uint64_t v16 = (objc_class *)type metadata accessor for UtilityServiceLocation();
    v20.receiver = v8;
    v20.super_class = v16;
    id v9 = objc_msgSendSuper2(&v20, sel_init);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v10);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v9;
}

uint64_t sub_25279A0C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25279B1D8(a1, type metadata accessor for UtilityServiceLocation, (uint64_t (*)(uint64_t))UtilityServiceLocation.init(from:), a2);
}

uint64_t sub_25279A108(void *a1)
{
  return sub_252799BC4(a1);
}

uint64_t UtilityServiceAddress.addressLine1.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_addressLine1);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UtilityServiceAddress.addressLine2.getter()
{
  return sub_25279A210(&OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_addressLine2);
}

id sub_25279A198(uint64_t a1, uint64_t a2, void *a3)
{
  if (*(void *)(a1 + *a3 + 8))
  {
    swift_bridgeObjectRetain();
    id v3 = (void *)sub_252831298();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

uint64_t UtilityServiceAddress.addressLine3.getter()
{
  return sub_25279A210(&OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_addressLine3);
}

uint64_t sub_25279A210(void *a1)
{
  uint64_t v2 = *(void *)(v1 + *a1);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t UtilityServiceAddress.city.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_city);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UtilityServiceAddress.state.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_state);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UtilityServiceAddress.postalCode.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_postalCode);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UtilityServiceAddress.country.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_country);
  swift_bridgeObjectRetain();
  return v1;
}

id UtilityServiceAddress.__allocating_init(addressLine1:addressLine2:addressLine3:city:state:postalCode:country:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v22 = (char *)objc_allocWithZone(v14);
  uint64_t v23 = &v22[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_addressLine1];
  *(void *)uint64_t v23 = a1;
  *((void *)v23 + 1) = a2;
  objc_super v24 = &v22[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_addressLine2];
  *(void *)objc_super v24 = a3;
  *((void *)v24 + 1) = a4;
  uint64_t v25 = &v22[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_addressLine3];
  *(void *)uint64_t v25 = a5;
  *((void *)v25 + 1) = a6;
  objc_super v26 = &v22[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_city];
  *(void *)objc_super v26 = a7;
  *((void *)v26 + 1) = a8;
  char v27 = &v22[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_state];
  *(void *)char v27 = a9;
  *((void *)v27 + 1) = a10;
  uint64_t v28 = &v22[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_postalCode];
  *(void *)uint64_t v28 = a11;
  *((void *)v28 + 1) = a12;
  objc_super v29 = &v22[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_country];
  *(void *)objc_super v29 = a13;
  *((void *)v29 + 1) = a14;
  v32.receiver = v22;
  v32.super_class = v14;
  return objc_msgSendSuper2(&v32, sel_init);
}

id UtilityServiceAddress.init(addressLine1:addressLine2:addressLine3:city:state:postalCode:country:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15 = &v14[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_addressLine1];
  *(void *)uint64_t v15 = a1;
  *((void *)v15 + 1) = a2;
  uint64_t v16 = &v14[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_addressLine2];
  *(void *)uint64_t v16 = a3;
  *((void *)v16 + 1) = a4;
  uint64_t v17 = &v14[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_addressLine3];
  *(void *)uint64_t v17 = a5;
  *((void *)v17 + 1) = a6;
  uint64_t v18 = &v14[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_city];
  *(void *)uint64_t v18 = a7;
  *((void *)v18 + 1) = a8;
  uint64_t v19 = &v14[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_state];
  *(void *)uint64_t v19 = a9;
  *((void *)v19 + 1) = a10;
  objc_super v20 = &v14[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_postalCode];
  *(void *)objc_super v20 = a11;
  *((void *)v20 + 1) = a12;
  char v21 = &v14[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_country];
  *(void *)char v21 = a13;
  *((void *)v21 + 1) = a14;
  v23.receiver = v14;
  v23.super_class = (Class)type metadata accessor for UtilityServiceAddress();
  return objc_msgSendSuper2(&v23, sel_init);
}

id UtilityServiceAddress.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void UtilityServiceAddress.init()()
{
}

uint64_t sub_25279A74C()
{
  uint64_t result = 0x4C73736572646461;
  switch(*v0)
  {
    case 3:
      uint64_t result = 2037672291;
      break;
    case 4:
      uint64_t result = 0x6574617473;
      break;
    case 5:
      uint64_t result = 0x6F436C6174736F70;
      break;
    case 6:
      uint64_t result = 0x7972746E756F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25279A820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25279D328(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25279A848(uint64_t a1)
{
  unint64_t v2 = sub_25279AC44();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25279A884(uint64_t a1)
{
  unint64_t v2 = sub_25279AC44();

  return MEMORY[0x270FA00B8](a1, v2);
}

id UtilityServiceAddress.__deallocating_deinit()
{
  return sub_25279A8D8(type metadata accessor for UtilityServiceAddress);
}

id sub_25279A8D8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_25279A9C8(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D748);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25279AC44();
  sub_252831B38();
  v8[15] = 0;
  sub_2528319E8();
  if (!v1)
  {
    v8[14] = 1;
    sub_2528319A8();
    v8[13] = 2;
    sub_2528319A8();
    v8[12] = 3;
    sub_2528319E8();
    v8[11] = 4;
    sub_2528319E8();
    v8[10] = 5;
    sub_2528319E8();
    v8[9] = 6;
    sub_2528319E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_25279AC44()
{
  unint64_t result = qword_269C1D750;
  if (!qword_269C1D750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D750);
  }
  return result;
}

unint64_t UtilityServiceAddress.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return UtilityServiceAddress.init(from:)(a1);
}

unint64_t UtilityServiceAddress.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D758);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[3];
  uint64_t v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  unint64_t v9 = sub_25279AC44();
  BOOL v36 = v1;
  sub_252831B28();
  if (v2)
  {
    uint64_t v11 = v36;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);

    type metadata accessor for UtilityServiceAddress();
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v38 = 0;
    uint64_t v10 = sub_252831968();
    uint64_t v13 = v36;
    uint64_t v14 = (uint64_t *)&v36[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_addressLine1];
    *uint64_t v14 = v10;
    v14[1] = v15;
    char v38 = 1;
    uint64_t v16 = sub_252831928();
    uint64_t v17 = (uint64_t *)&v13[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_addressLine2];
    *uint64_t v17 = v16;
    v17[1] = v18;
    char v38 = 2;
    uint64_t v19 = sub_252831928();
    objc_super v20 = (uint64_t *)&v13[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_addressLine3];
    *objc_super v20 = v19;
    v20[1] = v21;
    char v38 = 3;
    uint64_t v22 = sub_252831968();
    objc_super v23 = (uint64_t *)&v13[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_city];
    *objc_super v23 = v22;
    v23[1] = v24;
    char v38 = 4;
    uint64_t v25 = sub_252831968();
    objc_super v26 = (uint64_t *)&v13[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_state];
    *objc_super v26 = v25;
    v26[1] = v27;
    char v38 = 5;
    uint64_t v28 = sub_252831968();
    objc_super v29 = (uint64_t *)&v13[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_postalCode];
    *objc_super v29 = v28;
    v29[1] = v30;
    char v38 = 6;
    uint64_t v31 = sub_252831968();
    objc_super v32 = (uint64_t *)&v13[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_country];
    *objc_super v32 = v31;
    v32[1] = v33;

    char v34 = (objc_class *)type metadata accessor for UtilityServiceAddress();
    v37.receiver = v13;
    v37.super_class = v34;
    unint64_t v9 = (unint64_t)objc_msgSendSuper2(&v37, sel_init);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
  }
  return v9;
}

uint64_t sub_25279B198@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25279B1D8(a1, type metadata accessor for UtilityServiceAddress, (uint64_t (*)(uint64_t))UtilityServiceAddress.init(from:), a2);
}

uint64_t sub_25279B1D8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  id v8 = objc_allocWithZone((Class)a2());
  uint64_t result = a3(a1);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_25279B238(void *a1)
{
  return sub_25279A9C8(a1);
}

id AccountVerificationResponse.accessToken.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

uint64_t AccountVerificationResponse.authorizationCode.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccountVerificationResponse.init(accessToken:authorizationCode:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_25279B2C0()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0x6F54737365636361;
  }
}

uint64_t sub_25279B308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25279D634(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25279B330(uint64_t a1)
{
  unint64_t v2 = sub_25279B560();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25279B36C(uint64_t a1)
{
  unint64_t v2 = sub_25279B560();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AccountVerificationResponse.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D760);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  v11[1] = v1[2];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25279B560();
  sub_252831B38();
  uint64_t v14 = v9;
  char v13 = 0;
  type metadata accessor for UtilitySubscriptionTokenSet();
  sub_25279B800(&qword_269C1D770, (void (*)(void))type metadata accessor for UtilitySubscriptionTokenSet);
  sub_2528319D8();
  if (!v2)
  {
    char v12 = 1;
    sub_2528319A8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_25279B560()
{
  unint64_t result = qword_269C1D768;
  if (!qword_269C1D768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D768);
  }
  return result;
}

void AccountVerificationResponse.init(from:)(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D778);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25279B560();
  sub_252831B28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    type metadata accessor for UtilitySubscriptionTokenSet();
    char v15 = 0;
    sub_25279B800(qword_269C1D780, (void (*)(void))type metadata accessor for UtilitySubscriptionTokenSet);
    sub_252831958();
    id v9 = v16;
    char v14 = 1;
    id v13 = v16;
    uint64_t v10 = sub_252831928();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v12;
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_25279B800(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_25279B844(void *a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_25279B85C(void *a1)
{
  return AccountVerificationResponse.encode(to:)(a1);
}

uint64_t sub_25279B874@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = (void *)(*a1 + OBJC_IVAR____TtC19HomeUtilityServices24UtilityCustomerAgreement_alternateSupplier);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for UtilitySubscriptionResponse(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for UtilitySubscriptionResponse);
}

uint64_t dispatch thunk of UtilitySubscriptionResponse.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of UtilitySubscriptionResponse.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t method lookup function for UtilitySubscriptionInformation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for UtilitySubscriptionInformation);
}

uint64_t dispatch thunk of UtilitySubscriptionInformation.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of UtilitySubscriptionInformation.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t method lookup function for UtilityCustomerAgreement(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for UtilityCustomerAgreement);
}

uint64_t dispatch thunk of UtilityCustomerAgreement.alternateSupplier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of UtilityCustomerAgreement.alternateSupplier.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of UtilityCustomerAgreement.alternateSupplier.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of UtilityCustomerAgreement.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of UtilityCustomerAgreement.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t method lookup function for UtilityProgram(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for UtilityProgram);
}

uint64_t dispatch thunk of UtilityProgram.__allocating_init(programID:programDescription:enrollmentStatus:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of UtilityProgram.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of UtilityProgram.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t method lookup function for UtilityMeter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for UtilityMeter);
}

uint64_t dispatch thunk of UtilityMeter.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of UtilityMeter.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t method lookup function for UtilitySubscriptionTokenSet(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for UtilitySubscriptionTokenSet);
}

uint64_t dispatch thunk of UtilitySubscriptionTokenSet.__allocating_init(accessToken:expiresIn:idToken:refreshToken:tokenType:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of UtilitySubscriptionTokenSet.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of UtilitySubscriptionTokenSet.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t method lookup function for UtilityServiceLocation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for UtilityServiceLocation);
}

uint64_t dispatch thunk of UtilityServiceLocation.__allocating_init(serviceLocationID:address:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of UtilityServiceLocation.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of UtilityServiceLocation.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t method lookup function for UtilityServiceAddress(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for UtilityServiceAddress);
}

uint64_t dispatch thunk of UtilityServiceAddress.__allocating_init(addressLine1:addressLine2:addressLine3:city:state:postalCode:country:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of UtilityServiceAddress.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of UtilityServiceAddress.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t destroy for AccountVerificationResponse(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *_s19HomeUtilityServices27AccountVerificationResponseVwCP_0(void *a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AccountVerificationResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AccountVerificationResponse(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountVerificationResponse(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountVerificationResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountVerificationResponse()
{
  return &type metadata for AccountVerificationResponse;
}

ValueMetadata *type metadata accessor for AccountVerificationResponse.CodingKeys()
{
  return &type metadata for AccountVerificationResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for UtilityServiceAddress.CodingKeys()
{
  return &type metadata for UtilityServiceAddress.CodingKeys;
}

ValueMetadata *type metadata accessor for UtilityServiceLocation.CodingKeys()
{
  return &type metadata for UtilityServiceLocation.CodingKeys;
}

uint64_t sub_25279C060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

unsigned char *sub_25279C068(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25279C104);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t _s12ParsingErrorOMa()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *storeEnumTagSinglePayload for UtilitySubscriptionTokenSet.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *__n128 result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25279C210);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UtilitySubscriptionTokenSet.CodingKeys()
{
  return &type metadata for UtilitySubscriptionTokenSet.CodingKeys;
}

uint64_t getEnumTagSinglePayload for VerifiedServiceAddress.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s19HomeUtilityServices21UtilityServiceAddressC10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25279C3A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UtilityMeter.CodingKeys()
{
  return &type metadata for UtilityMeter.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for UtilityProgram.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25279C4A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UtilityProgram.CodingKeys()
{
  return &type metadata for UtilityProgram.CodingKeys;
}

ValueMetadata *type metadata accessor for UtilityCustomerAgreement.CodingKeys()
{
  return &type metadata for UtilityCustomerAgreement.CodingKeys;
}

uint64_t getEnumTagSinglePayload for UtilityTariffType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s19HomeUtilityServices24UtilityCustomerAgreementC10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25279C654);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UtilitySubscriptionInformation.CodingKeys()
{
  return &type metadata for UtilitySubscriptionInformation.CodingKeys;
}

unsigned char *_s19HomeUtilityServices27AccountVerificationResponseV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25279C758);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UtilitySubscriptionResponse.CodingKeys()
{
  return &type metadata for UtilitySubscriptionResponse.CodingKeys;
}

unint64_t sub_25279C794()
{
  unint64_t result = qword_269C1D808;
  if (!qword_269C1D808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D808);
  }
  return result;
}

unint64_t sub_25279C7EC()
{
  unint64_t result = qword_269C1D810;
  if (!qword_269C1D810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D810);
  }
  return result;
}

unint64_t sub_25279C844()
{
  unint64_t result = qword_269C1D818;
  if (!qword_269C1D818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D818);
  }
  return result;
}

unint64_t sub_25279C89C()
{
  unint64_t result = qword_269C1D820;
  if (!qword_269C1D820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D820);
  }
  return result;
}

unint64_t sub_25279C8F4()
{
  unint64_t result = qword_269C1D828;
  if (!qword_269C1D828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D828);
  }
  return result;
}

unint64_t sub_25279C94C()
{
  unint64_t result = qword_269C1D830;
  if (!qword_269C1D830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D830);
  }
  return result;
}

uint64_t sub_25279C9A0()
{
  return swift_getWitnessTable();
}

unint64_t sub_25279C9C0()
{
  unint64_t result = qword_269C1D838;
  if (!qword_269C1D838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D838);
  }
  return result;
}

unint64_t sub_25279CA18()
{
  unint64_t result = qword_269C1D840;
  if (!qword_269C1D840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D840);
  }
  return result;
}

unint64_t sub_25279CA70()
{
  unint64_t result = qword_269C1D848;
  if (!qword_269C1D848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D848);
  }
  return result;
}

unint64_t sub_25279CAC8()
{
  unint64_t result = qword_269C1D850;
  if (!qword_269C1D850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D850);
  }
  return result;
}

unint64_t sub_25279CB20()
{
  unint64_t result = qword_269C1D858;
  if (!qword_269C1D858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D858);
  }
  return result;
}

unint64_t sub_25279CB78()
{
  unint64_t result = qword_269C1D860;
  if (!qword_269C1D860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D860);
  }
  return result;
}

unint64_t sub_25279CBD0()
{
  unint64_t result = qword_269C1D868;
  if (!qword_269C1D868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D868);
  }
  return result;
}

unint64_t sub_25279CC28()
{
  unint64_t result = qword_269C1D870;
  if (!qword_269C1D870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D870);
  }
  return result;
}

unint64_t sub_25279CC80()
{
  unint64_t result = qword_269C1D878;
  if (!qword_269C1D878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D878);
  }
  return result;
}

unint64_t sub_25279CCD8()
{
  unint64_t result = qword_269C1D880;
  if (!qword_269C1D880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D880);
  }
  return result;
}

unint64_t sub_25279CD30()
{
  unint64_t result = qword_269C1D888;
  if (!qword_269C1D888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D888);
  }
  return result;
}

unint64_t sub_25279CD88()
{
  unint64_t result = qword_269C1D890;
  if (!qword_269C1D890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D890);
  }
  return result;
}

unint64_t sub_25279CDE0()
{
  unint64_t result = qword_269C1D898;
  if (!qword_269C1D898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D898);
  }
  return result;
}

unint64_t sub_25279CE38()
{
  unint64_t result = qword_269C1D8A0;
  if (!qword_269C1D8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D8A0);
  }
  return result;
}

unint64_t sub_25279CE90()
{
  unint64_t result = qword_269C1D8A8;
  if (!qword_269C1D8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D8A8);
  }
  return result;
}

unint64_t sub_25279CEE8()
{
  unint64_t result = qword_269C1D8B0;
  if (!qword_269C1D8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D8B0);
  }
  return result;
}

unint64_t sub_25279CF40()
{
  unint64_t result = qword_269C1D8B8;
  if (!qword_269C1D8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D8B8);
  }
  return result;
}

unint64_t sub_25279CF98()
{
  unint64_t result = qword_269C1D8C0;
  if (!qword_269C1D8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D8C0);
  }
  return result;
}

unint64_t sub_25279CFF0()
{
  unint64_t result = qword_269C1D8C8;
  if (!qword_269C1D8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D8C8);
  }
  return result;
}

unint64_t sub_25279D048()
{
  unint64_t result = qword_269C1D8D0;
  if (!qword_269C1D8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D8D0);
  }
  return result;
}

unint64_t sub_25279D0A0()
{
  unint64_t result = qword_269C1D8D8;
  if (!qword_269C1D8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269C1D8D8);
  }
  return result;
}

uint64_t sub_25279D0F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7069726373627573 && a2 == 0xEC0000006E6F6974;
  if (v2 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000025283B750)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25279D1FC()
{
  unint64_t v0 = sub_252831918();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_25279D244()
{
  unint64_t v0 = sub_252831918();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_25279D290()
{
  unint64_t v0 = sub_252831918();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

uint64_t sub_25279D2DC()
{
  unint64_t v0 = sub_252831918();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA) {
    return 10;
  }
  else {
    return v0;
  }
}

uint64_t sub_25279D328(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4C73736572646461 && a2 == 0xEC00000031656E69;
  if (v2 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C73736572646461 && a2 == 0xEC00000032656E69 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4C73736572646461 && a2 == 0xEC00000033656E69 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 2037672291 && a2 == 0xE400000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F436C6174736F70 && a2 == 0xEA00000000006564 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7972746E756F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_25279D634(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F54737365636361 && a2 == 0xEB000000006E656BLL;
  if (v2 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025283A840)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_25279D78C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  MEMORY[0x270FA5388](v5 - 8);
  BOOL v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_252830BD8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BE58);
  MEMORY[0x270FA5388](v12 - 8);
  char v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for UtilityServicesConfigurationsModel();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2527BC6F4((uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    uint64_t v19 = &qword_26B22BE58;
    uint64_t v20 = (uint64_t)v14;
LABEL_5:
    sub_252781C54(v20, v19);
    uint64_t v21 = a3;
    if (qword_26B22BF18 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_252831158();
    __swift_project_value_buffer(v22, (uint64_t)qword_26B22C0B8);
    objc_super v23 = sub_252831138();
    os_log_type_t v24 = sub_252831618();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_25277D000, v23, v24, "Unable to baseURL", v25, 2u);
      MEMORY[0x2533BE070](v25, -1, -1);
    }

    goto LABEL_10;
  }
  sub_2527A05A4((uint64_t)v14, (uint64_t)v18);
  swift_bridgeObjectRetain();
  sub_252830BA8();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_2527A07E0((uint64_t)v18);
    uint64_t v19 = &qword_26B22BD58;
    uint64_t v20 = (uint64_t)v7;
    goto LABEL_5;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  uint64_t v28 = sub_25279FBA4(a1, v36);
  uint64_t v21 = a3;
  if (v29)
  {
    uint64_t v30 = HIBYTE(v29) & 0xF;
    if ((v29 & 0x2000000000000000) == 0) {
      uint64_t v30 = v28 & 0xFFFFFFFFFFFFLL;
    }
    if (v30)
    {
      sub_25280F15C(v28, v29, a3);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      sub_2527A07E0((uint64_t)v18);
      uint64_t v26 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v21, v26, 1, v8);
    }
    swift_bridgeObjectRelease();
  }
  if (qword_26B22BF18 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_252831158();
  __swift_project_value_buffer(v31, (uint64_t)qword_26B22C0B8);
  objc_super v32 = sub_252831138();
  os_log_type_t v33 = sub_252831618();
  if (os_log_type_enabled(v32, v33))
  {
    char v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v34 = 0;
    _os_log_impl(&dword_25277D000, v32, v33, "Unable to generate API Path", v34, 2u);
    MEMORY[0x2533BE070](v34, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_2527A07E0((uint64_t)v18);
LABEL_10:
  uint64_t v26 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v21, v26, 1, v8);
}

uint64_t sub_25279DC54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[12] = a2;
  v3[13] = a3;
  v3[11] = a1;
  return MEMORY[0x270FA2498](sub_25279DC78, 0, 0);
}

uint64_t sub_25279DC78()
{
  if (sub_2527A083C())
  {
    if (qword_26B22BF18 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_252831158();
    v0[14] = __swift_project_value_buffer(v1, (uint64_t)qword_26B22C0B8);
    BOOL v2 = sub_252831138();
    os_log_type_t v3 = sub_252831628();
    if (os_log_type_enabled(v2, v3))
    {
      unsigned int v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v4 = 0;
      _os_log_impl(&dword_25277D000, v2, v3, "Adding BAA", v4, 2u);
      MEMORY[0x2533BE070](v4, -1, -1);
    }

    uint64_t v5 = (void *)swift_task_alloc();
    v0[15] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_25279DE1C;
    uint64_t v6 = v0[11];
    return URLRequest.addBAAHeaders()(v6);
  }
  else
  {
    sub_252814B24(v0[11]);
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_25279DE1C()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    BOOL v2 = sub_2527A0990;
  }
  else {
    BOOL v2 = sub_2527A098C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25279DF30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[12] = a2;
  v3[13] = a3;
  v3[11] = a1;
  return MEMORY[0x270FA2498](sub_25279DF54, 0, 0);
}

uint64_t sub_25279DF54()
{
  if (sub_2527A083C())
  {
    if (qword_26B22BF18 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_252831158();
    v0[14] = __swift_project_value_buffer(v1, (uint64_t)qword_26B22C0B8);
    BOOL v2 = sub_252831138();
    os_log_type_t v3 = sub_252831628();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_25277D000, v2, v3, "Adding BAA", v4, 2u);
      MEMORY[0x2533BE070](v4, -1, -1);
    }

    uint64_t v5 = (void *)swift_task_alloc();
    v0[15] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_25279E0F8;
    uint64_t v6 = v0[11];
    return URLRequest.addBAAHeaders()(v6);
  }
  else
  {
    sub_252814B24(v0[11]);
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_25279E0F8()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    BOOL v2 = sub_25279E2AC;
  }
  else {
    BOOL v2 = sub_25279E20C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25279E20C()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = sub_2528307F8();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 1, v2);
  os_log_type_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_25279E2AC()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(void **)(v0 + 128);
  *(void *)(v0 + 56) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4C0);
  if (swift_dynamicCast())
  {
    os_log_type_t v3 = *(void **)(v0 + 40);
    unsigned __int8 v4 = *(unsigned char *)(v0 + 48);
    sub_2527A057C(v3, v4);
    sub_2527A057C(v3, v4);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      BOOL v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      v24[0] = v8;
      *(_DWORD *)BOOL v7 = 136315138;
      unint64_t v9 = sub_25280A898(v3, v4);
      *(void *)(v0 + 80) = sub_25278F894(v9, v10, v24);
      sub_252831698();
      swift_bridgeObjectRelease();
      sub_2527A0590(v3, v4);
      sub_2527A0590(v3, v4);
      _os_log_impl(&dword_25277D000, v5, v6, "Error while adding BAA Header: %s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533BE070](v8, -1, -1);
      MEMORY[0x2533BE070](v7, -1, -1);

      sub_2527A0590(v3, v4);
    }
    else
    {
      sub_2527A0590(v3, v4);
      sub_2527A0590(v3, v4);
      sub_2527A0590(v3, v4);
    }
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + 128);
    id v12 = v11;
    id v13 = v11;
    char v14 = sub_252831138();
    os_log_type_t v15 = sub_252831618();
    BOOL v16 = os_log_type_enabled(v14, v15);
    uint64_t v17 = *(void **)(v0 + 128);
    if (v16)
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      v24[0] = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      swift_getErrorValue();
      uint64_t v20 = sub_252831AA8();
      *(void *)(v0 + 72) = sub_25278F894(v20, v21, v24);
      sub_252831698();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_25277D000, v14, v15, "Error while adding BAA Header: %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533BE070](v19, -1, -1);
      MEMORY[0x2533BE070](v18, -1, -1);
    }
    else
    {
    }
  }
  swift_willThrow();
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_25279E638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 152) = v15;
  *(_OWORD *)(v8 + 136) = v14;
  *(void *)(v8 + 120) = a7;
  *(void *)(v8 + 128) = a8;
  *(void *)(v8 + 104) = a5;
  *(void *)(v8 + 112) = a6;
  *(void *)(v8 + 88) = a1;
  *(void *)(v8 + 96) = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  *(void *)(v8 + 160) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD70);
  *(void *)(v8 + 168) = swift_task_alloc();
  uint64_t v9 = sub_252830CF8();
  *(void *)(v8 + 176) = v9;
  *(void *)(v8 + 184) = *(void *)(v9 - 8);
  *(void *)(v8 + 192) = swift_task_alloc();
  uint64_t v10 = sub_2528307F8();
  *(void *)(v8 + 200) = v10;
  *(void *)(v8 + 208) = *(void *)(v10 - 8);
  *(void *)(v8 + 216) = swift_task_alloc();
  *(void *)(v8 + 224) = swift_task_alloc();
  *(void *)(v8 + 232) = swift_task_alloc();
  *(void *)(v8 + 240) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  *(void *)(v8 + 248) = swift_task_alloc();
  uint64_t v11 = sub_252830BD8();
  *(void *)(v8 + 256) = v11;
  *(void *)(v8 + 264) = *(void *)(v11 - 8);
  *(void *)(v8 + 272) = swift_task_alloc();
  *(void *)(v8 + 280) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25279E8C0, 0, 0);
}

uint64_t sub_25279E8C0()
{
  uint64_t v1 = v0[32];
  uint64_t v2 = v0[33];
  uint64_t v3 = v0[31];
  sub_25279D78C(v0[18], v0[19], v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_252781C54(v0[31], &qword_26B22BD58);
    if (qword_269C1CEE8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D328);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      BOOL v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Request URL for resend API not found", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }
    uint64_t v8 = v0[25];
    uint64_t v9 = v0[26];
    uint64_t v10 = v0[11];

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v10, 1, 1, v8);
LABEL_19:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v62 = (uint64_t (*)(void))v0[1];
    return v62();
  }
  uint64_t v11 = v0[34];
  uint64_t v12 = v0[35];
  uint64_t v13 = v0[32];
  uint64_t v14 = v0[33];
  uint64_t v16 = v0[28];
  uint64_t v15 = v0[29];
  uint64_t v18 = v0[26];
  uint64_t v17 = v0[27];
  uint64_t v19 = v0[25];
  uint64_t v65 = v0[24];
  uint64_t v69 = (id *)(v0 + 10);
  uint64_t v70 = v0[23];
  uint64_t v68 = v0[21];
  uint64_t v63 = v0[30];
  uint64_t v66 = v0[22];
  uint64_t v67 = v0[15];
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 32))(v12, v0[31], v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v11, v12, v13);
  sub_252830798();
  sub_252804CA4(v16);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v0[36] = v20;
  v0[37] = (v18 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v20(v17, v19);
  unint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  v21(v15, v16, v19);
  sub_2528307B8();
  v20(v16, v19);
  v21(v63, v15, v19);
  sub_2528307B8();
  v64 = v20;
  v20(v15, v19);
  sub_252830778();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_252832B00;
  *(void *)(inited + 32) = 0x7461447472617473;
  *(void *)(inited + 40) = 0xE900000000000065;
  sub_25279F7A4(v65);
  uint64_t v23 = sub_252830C88();
  uint64_t v25 = v24;
  uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
  v26(v65, v66);
  *(void *)(inited + 48) = v23;
  *(void *)(inited + 56) = v25;
  sub_252786E88(inited);
  sub_25279FEE4(v67, v68);
  uint64_t v27 = sub_252830DB8();
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v68, 1, v27) == 1)
  {
    sub_252781C54(v0[21], &qword_26B22BD70);
  }
  else
  {
    uint64_t v29 = v0[24];
    uint64_t v30 = v0[21];
    uint64_t v31 = v0[22];
    sub_25279F7A4(v29);
    uint64_t v32 = sub_252830C88();
    uint64_t v34 = v33;
    v26(v29, v31);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v27);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_25279FF4C(v32, v34, 0x65746144646E65, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  uint64_t v36 = self;
  objc_super v37 = (void *)sub_252831218();
  swift_bridgeObjectRelease();
  *uint64_t v69 = 0;
  id v38 = objc_msgSend(v36, sel_dataWithJSONObject_options_error_, v37, 0, v69);

  id v39 = *v69;
  if (!v38)
  {
    id v49 = v39;
    uint64_t v50 = (void *)sub_252830B18();

    swift_willThrow();
    if (qword_269C1CEE8 != -1) {
      swift_once();
    }
    uint64_t v51 = sub_252831158();
    __swift_project_value_buffer(v51, (uint64_t)qword_269C2D328);
    uint64_t v52 = sub_252831138();
    os_log_type_t v53 = sub_252831618();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v54 = 0;
      _os_log_impl(&dword_25277D000, v52, v53, "Unable to encode Token request body", v54, 2u);
      MEMORY[0x2533BE070](v54, -1, -1);
    }
    uint64_t v55 = v0[35];
    uint64_t v56 = v0[32];
    uint64_t v57 = v0[33];
    uint64_t v58 = v0[30];
    uint64_t v59 = v0[25];
    uint64_t v60 = v0[26];
    uint64_t v61 = v0[11];

    v64(v58, v59);
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v55, v56);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56))(v61, 1, 1, v59);
    goto LABEL_19;
  }
  uint64_t v40 = sub_252830C68();
  unint64_t v42 = v41;

  v0[38] = v40;
  v0[39] = v42;
  sub_252782DC8(v40, v42);
  sub_2528307D8();
  uint64_t v43 = dword_269C1D8E8;
  uint64_t v44 = (void *)swift_task_alloc();
  v0[40] = v44;
  void *v44 = v0;
  v44[1] = sub_25279F0C8;
  uint64_t v45 = v0[30];
  uint64_t v46 = v0[20];
  uint64_t v47 = v0[18];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C1D8E8 + v43))(v46, v45, v47);
}

uint64_t sub_25279F0C8()
{
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v1 = sub_25279F548;
  }
  else
  {
    uint64_t v1 = sub_25279F20C;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_25279F20C()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[20];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_252781C54(v3, &qword_26B22BD40);
    if (qword_269C1CEE8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D328);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      BOOL v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable to sign resend historical data request", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }
    uint64_t v9 = v0[38];
    unint64_t v8 = v0[39];
    uint64_t v10 = (void (*)(uint64_t, uint64_t))v0[36];
    uint64_t v11 = v0[33];
    uint64_t v23 = v0[32];
    uint64_t v24 = v0[35];
    uint64_t v12 = v0[30];
    uint64_t v14 = v0[25];
    uint64_t v13 = v0[26];
    uint64_t v26 = v0[11];

    sub_252782E20(v9, v8);
    v10(v12, v14);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v24, v23);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v26, 1, 1, v14);
  }
  else
  {
    uint64_t v16 = v0[38];
    unint64_t v15 = v0[39];
    uint64_t v17 = (void (*)(uint64_t, uint64_t))v0[36];
    uint64_t v27 = v0[35];
    uint64_t v18 = v0[33];
    uint64_t v25 = v0[32];
    uint64_t v19 = v0[30];
    uint64_t v20 = v0[11];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v20, v3, v1);
    sub_2528307E8();
    sub_252782E20(v16, v15);
    v17(v19, v1);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v27, v25);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v20, 0, 1, v1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_25279F548()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[26] + 56))(v0[20], 1, 1, v0[25]);
  sub_252781C54(v0[20], &qword_26B22BD40);
  if (qword_269C1CEE8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_252831158();
  __swift_project_value_buffer(v1, (uint64_t)qword_269C2D328);
  uint64_t v2 = sub_252831138();
  os_log_type_t v3 = sub_252831618();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_25277D000, v2, v3, "Unable to sign resend historical data request", v4, 2u);
    MEMORY[0x2533BE070](v4, -1, -1);
  }
  uint64_t v6 = v0[38];
  unint64_t v5 = v0[39];
  BOOL v7 = (void (*)(uint64_t, uint64_t))v0[36];
  uint64_t v8 = v0[33];
  uint64_t v14 = v0[32];
  uint64_t v15 = v0[35];
  uint64_t v9 = v0[30];
  uint64_t v11 = v0[25];
  uint64_t v10 = v0[26];
  uint64_t v16 = v0[11];

  sub_252782E20(v6, v5);
  v7(v9, v11);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v15, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v16, 1, 1, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_25279F7A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D8F0);
  MEMORY[0x270FA5388]();
  uint64_t v27 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_252830EB8();
  uint64_t v2 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v23 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_252830CE8();
  uint64_t v4 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_252830CC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_252830CA8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252830CB8();
  MEMORY[0x270FA5388]();
  (*(void (**)(char *, void))(v16 + 104))((char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F072A0]);
  uint64_t v17 = v11;
  uint64_t v18 = v26;
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F07288], v17);
  uint64_t v19 = v6;
  uint64_t v20 = v27;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F072B8], v7);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v19, *MEMORY[0x263F072C8], v25);
  sub_252830EA8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48))(v20, 1, v18);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v23, v20, v18);
    return sub_252830CD8();
  }
  return result;
}

uint64_t sub_25279FBA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2527A0294();
  if (!v4)
  {
    if (qword_26B22BF18 != -1) {
      goto LABEL_33;
    }
    goto LABEL_27;
  }
  uint64_t v5 = v3;
  if (a2)
  {
    uint64_t v18 = a2 + 64;
    uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
    uint64_t v7 = -1;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    uint64_t v8 = v7 & *(void *)(a2 + 64);
    int64_t v19 = (unint64_t)(v6 + 63) >> 6;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v8)
      {
        v8 &= v8 - 1;
      }
      else
      {
        int64_t v10 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_32;
        }
        if (v10 >= v19) {
          goto LABEL_25;
        }
        uint64_t v11 = *(void *)(v18 + 8 * v10);
        ++v9;
        if (!v11)
        {
          int64_t v9 = v10 + 1;
          if (v10 + 1 >= v19) {
            goto LABEL_25;
          }
          uint64_t v11 = *(void *)(v18 + 8 * v9);
          if (!v11)
          {
            int64_t v9 = v10 + 2;
            if (v10 + 2 >= v19) {
              goto LABEL_25;
            }
            uint64_t v11 = *(void *)(v18 + 8 * v9);
            if (!v11)
            {
              int64_t v9 = v10 + 3;
              if (v10 + 3 >= v19) {
                goto LABEL_25;
              }
              uint64_t v11 = *(void *)(v18 + 8 * v9);
              if (!v11)
              {
                int64_t v12 = v10 + 4;
                if (v12 >= v19)
                {
LABEL_25:
                  swift_release();
                  return v5;
                }
                uint64_t v11 = *(void *)(v18 + 8 * v12);
                if (!v11)
                {
                  while (1)
                  {
                    int64_t v9 = v12 + 1;
                    if (__OFADD__(v12, 1)) {
                      break;
                    }
                    if (v9 >= v19) {
                      goto LABEL_25;
                    }
                    uint64_t v11 = *(void *)(v18 + 8 * v9);
                    ++v12;
                    if (v11) {
                      goto LABEL_24;
                    }
                  }
LABEL_32:
                  __break(1u);
LABEL_33:
                  swift_once();
LABEL_27:
                  uint64_t v13 = sub_252831158();
                  __swift_project_value_buffer(v13, (uint64_t)qword_26B22C0B8);
                  uint64_t v14 = sub_252831138();
                  os_log_type_t v15 = sub_252831618();
                  if (os_log_type_enabled(v14, v15))
                  {
                    uint64_t v16 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)uint64_t v16 = 0;
                    _os_log_impl(&dword_25277D000, v14, v15, "Unable decode API Path", v16, 2u);
                    MEMORY[0x2533BE070](v16, -1, -1);
                  }

                  return 0;
                }
                int64_t v9 = v12;
              }
            }
          }
        }
LABEL_24:
        uint64_t v8 = (v11 - 1) & v11;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2528313A8();
      swift_bridgeObjectRelease();
      sub_2528313A8();
      sub_25279033C();
      uint64_t v5 = sub_2528316D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v5;
}

uint64_t sub_25279FEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25279FF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_2527D9A38(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_252822DA0();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      unint64_t v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *unint64_t v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_25282214C(v17, a5 & 1);
  uint64_t v23 = sub_2527D9A38(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_252831A98();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v25 = (uint64_t *)(v20[6] + 16 * v14);
  *uint64_t v25 = a3;
  v25[1] = a4;
  uint64_t v26 = (void *)(v20[7] + 16 * v14);
  *uint64_t v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v29;

  return swift_bridgeObjectRetain();
}

_OWORD *sub_2527A00D4(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  int64_t v10 = (void *)*v4;
  unint64_t v12 = sub_2527D9A38(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_252822F5C();
      goto LABEL_7;
    }
    sub_252822474(v15, a4 & 1);
    uint64_t v21 = sub_2527D9A38(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_252831A98();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    return sub_2527933EC(a1, v19);
  }
LABEL_13:
  sub_2527A0228(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_2527A0228(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_2527933EC(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_2527A0294()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BE58);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UtilityServicesConfigurationsModel();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2527BC6F4((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_252781C54((uint64_t)v2, &qword_26B22BE58);
    if (qword_26B22BF18 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_252831158();
    __swift_project_value_buffer(v7, (uint64_t)qword_26B22C0B8);
    uint64_t v8 = sub_252831138();
    os_log_type_t v9 = sub_252831618();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_25277D000, v8, v9, "Unable to baseURL", v10, 2u);
      MEMORY[0x2533BE070](v10, -1, -1);
    }

    return 0;
  }
  else
  {
    sub_2527A05A4((uint64_t)v2, (uint64_t)v6);
    long long v12 = *(_OWORD *)(v6 + 184);
    long long v13 = *(_OWORD *)(v6 + 216);
    v38[10] = *(_OWORD *)(v6 + 200);
    v38[11] = v13;
    v38[12] = *(_OWORD *)(v6 + 232);
    long long v14 = *(_OWORD *)(v6 + 120);
    long long v15 = *(_OWORD *)(v6 + 152);
    v38[6] = *(_OWORD *)(v6 + 136);
    v38[7] = v15;
    v38[8] = *(_OWORD *)(v6 + 168);
    v38[9] = v12;
    long long v16 = *(_OWORD *)(v6 + 56);
    long long v17 = *(_OWORD *)(v6 + 88);
    v38[2] = *(_OWORD *)(v6 + 72);
    v38[3] = v17;
    v38[4] = *(_OWORD *)(v6 + 104);
    v38[5] = v14;
    v38[0] = *(_OWORD *)(v6 + 40);
    v38[1] = v16;
    long long v18 = *(_OWORD *)(v6 + 184);
    long long v19 = *(_OWORD *)(v6 + 216);
    long long v35 = *(_OWORD *)(v6 + 200);
    long long v36 = v19;
    long long v37 = *(_OWORD *)(v6 + 232);
    long long v20 = *(_OWORD *)(v6 + 120);
    long long v21 = *(_OWORD *)(v6 + 152);
    long long v31 = *(_OWORD *)(v6 + 136);
    long long v32 = v21;
    long long v33 = *(_OWORD *)(v6 + 168);
    long long v34 = v18;
    long long v22 = *(_OWORD *)(v6 + 56);
    long long v23 = *(_OWORD *)(v6 + 88);
    long long v27 = *(_OWORD *)(v6 + 72);
    long long v28 = v23;
    long long v29 = *(_OWORD *)(v6 + 104);
    long long v30 = v20;
    long long v25 = *(_OWORD *)(v6 + 40);
    long long v26 = v22;
    sub_2527A0608((uint64_t)v38);
    swift_retain();
    swift_getAtKeyPath();
    swift_release();
    sub_2527A06F4((uint64_t)v38);
    sub_2527A07E0((uint64_t)v6);
    return v24[0];
  }
}

id sub_2527A057C(id result, unsigned __int8 a2)
{
  if (a2 <= 2u) {
    return result;
  }
  return result;
}

void sub_2527A0590(id a1, unsigned __int8 a2)
{
  if (a2 <= 2u) {
}
  }

uint64_t sub_2527A05A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UtilityServicesConfigurationsModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2527A0608(uint64_t a1)
{
  return a1;
}

uint64_t sub_2527A06F4(uint64_t a1)
{
  return a1;
}

uint64_t sub_2527A07E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UtilityServicesConfigurationsModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2527A083C()
{
  uint64_t v0 = sub_2527A0294();
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    switch(sub_25280DF84())
    {
      case 2u:
      case 3u:
        char v9 = sub_25280E4B8(v2, v3);
        swift_bridgeObjectRelease();
        uint64_t result = v9 & 1;
        break;
      default:
        swift_bridgeObjectRelease();
        return 0;
    }
  }
  else
  {
    if (qword_26B22BF18 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_26B22C0B8);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable decode API Path", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }

    return 0;
  }
  return result;
}

uint64_t sub_2527A0994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[13] = a8;
  v8[14] = v13;
  v8[11] = a6;
  v8[12] = a7;
  v8[10] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v8[15] = swift_task_alloc();
  uint64_t v9 = sub_2528307F8();
  unsigned char v8[16] = v9;
  v8[17] = *(void *)(v9 - 8);
  v8[18] = swift_task_alloc();
  v8[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  v8[20] = swift_task_alloc();
  v8[21] = swift_task_alloc();
  v8[22] = swift_task_alloc();
  uint64_t v10 = sub_252830BD8();
  v8[23] = v10;
  v8[24] = *(void *)(v10 - 8);
  v8[25] = swift_task_alloc();
  v8[26] = swift_task_alloc();
  v8[27] = swift_task_alloc();
  v8[28] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2527A0B74, 0, 0);
}

uint64_t sub_2527A0B74()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[22];
  sub_25279D788(v0[13], v0[14]);
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v4(v3, 1, v1) == 1)
  {
    sub_252781C54(v0[22], &qword_26B22BD58);
    if (qword_269C1CEF0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_252831158();
    __swift_project_value_buffer(v5, (uint64_t)qword_269C2D340);
    os_log_type_t v6 = sub_252831138();
    os_log_type_t v7 = sub_252831618();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_25277D000, v6, v7, "Request URL for peaks API not found", v8, 2u);
      MEMORY[0x2533BE070](v8, -1, -1);
    }
    uint64_t v9 = v0[16];
    uint64_t v10 = v0[17];
    uint64_t v11 = v0[10];

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v11, 1, 1, v9);
LABEL_16:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v36 = (uint64_t (*)(void))v0[1];
    return v36();
  }
  uint64_t v12 = v0[23];
  uint64_t v13 = v0[20];
  uint64_t v14 = v0[12];
  uint64_t v52 = v0[11];
  os_log_type_t v53 = v4;
  long long v15 = *(void (**)(uint64_t, void, uint64_t))(v0[24] + 32);
  v15(v0[28], v0[22], v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFF0);
  uint64_t inited = swift_initStackObject();
  v0[29] = inited;
  *(_OWORD *)(inited + 16) = xmmword_252832B00;
  *(void *)(inited + 32) = 0x7461447472617473;
  *(void *)(inited + 40) = 0xE900000000000065;
  *(void *)(inited + 48) = v52;
  *(void *)(inited + 56) = v14;
  swift_bridgeObjectRetain();
  sub_252830B38();
  sub_252830BA8();
  uint64_t v51 = v15;
  if (v53(v13, 1, v12) == 1)
  {
    uint64_t v17 = v0[23];
    uint64_t v18 = v0[24];
    uint64_t v19 = v0[21];
    sub_252781C54(v0[20], &qword_26B22BD58);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v19, 1, 1, v17);
  }
  else
  {
    uint64_t v20 = v0[26];
    uint64_t v21 = v0[23];
    uint64_t v22 = v0[24];
    uint64_t v23 = v0[21];
    v15(v20, v0[20], v21);
    sub_25280F4E4(inited, 1, 0, v23);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  }
  uint64_t v24 = v0[23];
  uint64_t v25 = v0[21];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v53(v25, 1, v24) == 1)
  {
    sub_252781C54(v0[21], &qword_26B22BD58);
    if (qword_269C1CEF0 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_252831158();
    __swift_project_value_buffer(v26, (uint64_t)qword_269C2D340);
    long long v27 = sub_252831138();
    os_log_type_t v28 = sub_252831618();
    if (os_log_type_enabled(v27, v28))
    {
      long long v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v29 = 0;
      _os_log_impl(&dword_25277D000, v27, v28, "Unable to generate Request URL for peaks API.", v29, 2u);
      MEMORY[0x2533BE070](v29, -1, -1);
    }
    uint64_t v30 = v0[28];
    uint64_t v31 = v0[23];
    uint64_t v32 = v0[24];
    uint64_t v33 = v0[16];
    uint64_t v34 = v0[17];
    uint64_t v35 = v0[10];

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v35, 1, 1, v33);
    goto LABEL_16;
  }
  uint64_t v38 = v0[27];
  uint64_t v40 = v0[24];
  uint64_t v39 = v0[25];
  uint64_t v41 = v0[23];
  uint64_t v43 = v0[18];
  uint64_t v42 = v0[19];
  uint64_t v44 = v0[16];
  uint64_t v45 = v0[17];
  v51(v38, v0[21], v41);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v39, v38, v41);
  sub_252830798();
  sub_252804CA4(v42);
  uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
  v0[30] = v46;
  v0[31] = (v45 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v46(v43, v44);
  sub_252830778();
  uint64_t v54 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C1D920 + dword_269C1D920);
  uint64_t v47 = (void *)swift_task_alloc();
  v0[32] = v47;
  *uint64_t v47 = v0;
  v47[1] = sub_2527A1148;
  uint64_t v48 = v0[19];
  uint64_t v49 = v0[15];
  uint64_t v50 = v0[13];
  return v54(v49, v48, v50);
}

uint64_t sub_2527A1148()
{
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v1 = sub_2527A1578;
  }
  else
  {
    uint64_t v1 = sub_2527A1260;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_2527A1260()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[15];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_252781C54(v3, &qword_26B22BD40);
    if (qword_269C1CEE8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D328);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable to sign Peaks API request", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }
    uint64_t v8 = (void (*)(uint64_t, uint64_t))v0[30];
    uint64_t v9 = v0[27];
    uint64_t v10 = v0[23];
    uint64_t v11 = v0[24];
    uint64_t v12 = v0[19];
    uint64_t v14 = v0[16];
    uint64_t v13 = v0[17];
    uint64_t v24 = v0[28];
    uint64_t v26 = v0[10];

    v8(v12, v14);
    long long v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v15(v9, v10);
    v15(v24, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v26, 1, 1, v14);
  }
  else
  {
    long long v16 = (void (*)(uint64_t, uint64_t))v0[30];
    uint64_t v25 = v0[27];
    uint64_t v27 = v0[28];
    uint64_t v18 = v0[23];
    uint64_t v17 = v0[24];
    uint64_t v19 = v0[19];
    uint64_t v20 = v0[10];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v20, v3, v1);
    sub_2528307E8();
    v16(v19, v1);
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v21(v25, v18);
    v21(v27, v18);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v20, 0, 1, v1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_2527A1578()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[17] + 56))(v0[15], 1, 1, v0[16]);
  sub_252781C54(v0[15], &qword_26B22BD40);
  if (qword_269C1CEE8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_252831158();
  __swift_project_value_buffer(v1, (uint64_t)qword_269C2D328);
  uint64_t v2 = sub_252831138();
  os_log_type_t v3 = sub_252831618();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_25277D000, v2, v3, "Unable to sign Peaks API request", v4, 2u);
    MEMORY[0x2533BE070](v4, -1, -1);
  }
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v0[30];
  uint64_t v6 = v0[27];
  uint64_t v7 = v0[23];
  uint64_t v8 = v0[24];
  uint64_t v9 = v0[19];
  uint64_t v11 = v0[16];
  uint64_t v10 = v0[17];
  uint64_t v15 = v0[28];
  uint64_t v16 = v0[10];

  v5(v9, v11);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v12(v6, v7);
  v12(v15, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v16, 1, 1, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_2527A17AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[12] = a6;
  v7[13] = a7;
  v7[10] = a4;
  v7[11] = a5;
  v7[8] = a2;
  v7[9] = a3;
  v7[7] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v7[14] = swift_task_alloc();
  uint64_t v9 = sub_2528307F8();
  v7[15] = v9;
  v7[16] = *(void *)(v9 - 8);
  v7[17] = swift_task_alloc();
  uint64_t v10 = (void *)swift_task_alloc();
  v7[18] = v10;
  void *v10 = v7;
  v10[1] = sub_2527A18DC;
  return sub_2527BAEF8(a7);
}

uint64_t sub_2527A18DC()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  swift_task_dealloc();
  os_log_type_t v3 = (void *)swift_task_alloc();
  v1[19] = v3;
  *os_log_type_t v3 = v2;
  v3[1] = sub_2527A1A98;
  uint64_t v4 = v1[14];
  uint64_t v5 = v1[12];
  uint64_t v6 = v1[11];
  uint64_t v7 = v1[10];
  uint64_t v8 = v1[9];
  uint64_t v9 = v1[8];
  uint64_t v10 = v1[7];
  return sub_2527B4AA4(v4, v10, v9, v8, v7, v6, v5);
}

uint64_t sub_2527A1A98()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2527A1B94, 0, 0);
}

uint64_t sub_2527A1B94()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[14];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_2527A5E98(v3);
    if (qword_269C1CEE0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D310);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable to generate request URL for ServiceLocation Subscription", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }

    type metadata accessor for NetworkError();
    sub_2527A5EF8((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
    swift_allocError();
    *uint64_t v8 = 0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[17], v3, v1);
    sub_252804F18(0xD00000000000003BLL, 0x800000025283BC40, (uint8_t *)0xD00000000000003ALL, 0x800000025283BC80);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[20] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_2527A1E50;
    uint64_t v12 = v0[17];
    return MEMORY[0x270EF1EB0](v12, 0);
  }
}

uint64_t sub_2527A1E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[21] = a1;
  v5[22] = a2;
  v5[23] = a3;
  v5[24] = v3;
  swift_task_dealloc();
  if (v3) {
    os_log_type_t v6 = sub_2527A5F44;
  }
  else {
    os_log_type_t v6 = sub_2527A1F68;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_2527A1F68()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (!v1)
  {
    if (qword_269C1CEE0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_252831158();
    __swift_project_value_buffer(v10, (uint64_t)qword_269C2D310);
    uint64_t v11 = sub_252831138();
    os_log_type_t v12 = sub_252831618();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_25277D000, v11, v12, "Unable to process ServiceLocation Subscription Response.", v13, 2u);
      MEMORY[0x2533BE070](v13, -1, -1);
    }
    unint64_t v14 = *(void *)(v0 + 176);
    uint64_t v15 = *(void **)(v0 + 184);
    uint64_t v16 = *(void *)(v0 + 168);
    uint64_t v18 = *(void *)(v0 + 128);
    uint64_t v17 = *(void *)(v0 + 136);
    uint64_t v19 = *(void *)(v0 + 120);

    type metadata accessor for NetworkError();
    sub_2527A5EF8((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
    swift_allocError();
    *uint64_t v20 = 2;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_252782E20(v16, v14);
LABEL_47:

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    goto LABEL_48;
  }
  uint64_t v2 = (void *)v1;
  id v3 = *(id *)(v0 + 184);
  unint64_t v4 = 0x265382000uLL;
  id v5 = objc_msgSend(v2, sel_statusCode);
  switch((unint64_t)v5)
  {
    case 0x190uLL:
      if (qword_269C1CEE0 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_252831158();
      __swift_project_value_buffer(v6, (uint64_t)qword_269C2D310);
      uint64_t v7 = sub_252831138();
      os_log_type_t v8 = sub_252831618();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v9 = 0;
        _os_log_impl(&dword_25277D000, v7, v8, "BAD REQUEST | Check request", v9, 2u);
        MEMORY[0x2533BE070](v9, -1, -1);
      }
      goto LABEL_46;
    case 0x191uLL:
      if (qword_269C1CEE0 != -1) {
        swift_once();
      }
      uint64_t v44 = sub_252831158();
      __swift_project_value_buffer(v44, (uint64_t)qword_269C2D310);
      uint64_t v7 = sub_252831138();
      os_log_type_t v45 = sub_252831618();
      if (os_log_type_enabled(v7, v45))
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v46 = 0;
        _os_log_impl(&dword_25277D000, v7, v45, "Request Unauthorized or Access Token Expired.", v46, 2u);
        MEMORY[0x2533BE070](v46, -1, -1);
      }
      goto LABEL_46;
    case 0x192uLL:
    case 0x193uLL:
    case 0x194uLL:
    case 0x195uLL:
    case 0x196uLL:
    case 0x197uLL:
    case 0x198uLL:
    case 0x19AuLL:
    case 0x19BuLL:
    case 0x19DuLL:
    case 0x19EuLL:
    case 0x19FuLL:
    case 0x1A0uLL:
    case 0x1A1uLL:
    case 0x1A2uLL:
    case 0x1A3uLL:
    case 0x1A4uLL:
    case 0x1A5uLL:
    case 0x1A6uLL:
    case 0x1A7uLL:
    case 0x1A8uLL:
    case 0x1A9uLL:
    case 0x1AAuLL:
    case 0x1ABuLL:
    case 0x1ACuLL:
      goto LABEL_23;
    case 0x199uLL:
      if (qword_269C1CEE0 != -1) {
        swift_once();
      }
      uint64_t v47 = sub_252831158();
      __swift_project_value_buffer(v47, (uint64_t)qword_269C2D310);
      uint64_t v7 = sub_252831138();
      os_log_type_t v48 = sub_252831618();
      if (os_log_type_enabled(v7, v48))
      {
        uint64_t v49 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v49 = 0;
        _os_log_impl(&dword_25277D000, v7, v48, "Unable to create Subscription due to too many existing subscriptions", v49, 2u);
        MEMORY[0x2533BE070](v49, -1, -1);
      }
      goto LABEL_46;
    case 0x19CuLL:
      if (qword_269C1CEE0 != -1) {
        swift_once();
      }
      uint64_t v50 = sub_252831158();
      __swift_project_value_buffer(v50, (uint64_t)qword_269C2D310);
      uint64_t v7 = sub_252831138();
      os_log_type_t v51 = sub_252831618();
      if (os_log_type_enabled(v7, v51))
      {
        uint64_t v52 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v52 = 0;
        _os_log_impl(&dword_25277D000, v7, v51, "Access Token expired. Retry after refreshing token", v52, 2u);
        MEMORY[0x2533BE070](v52, -1, -1);
      }
      goto LABEL_46;
    case 0x1ADuLL:
      if (qword_269C1CEE0 != -1) {
        swift_once();
      }
      uint64_t v53 = sub_252831158();
      __swift_project_value_buffer(v53, (uint64_t)qword_269C2D310);
      uint64_t v7 = sub_252831138();
      os_log_type_t v54 = sub_252831618();
      if (os_log_type_enabled(v7, v54))
      {
        uint64_t v55 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v55 = 0;
        _os_log_impl(&dword_25277D000, v7, v54, "TOO MANY REQUESTS | Server rejected calls cause of too many requests being made", v55, 2u);
        MEMORY[0x2533BE070](v55, -1, -1);
      }
LABEL_46:
      unint64_t v56 = *(void *)(v0 + 176);
      uint64_t v15 = *(void **)(v0 + 184);
      uint64_t v57 = *(void *)(v0 + 168);
      uint64_t v18 = *(void *)(v0 + 128);
      uint64_t v17 = *(void *)(v0 + 136);
      uint64_t v19 = *(void *)(v0 + 120);

      type metadata accessor for NetworkError();
      sub_2527A5EF8((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      sub_252782E20(v57, v56);

      goto LABEL_47;
    default:
      if (v5 == (id)500)
      {
        if (qword_269C1CEE0 != -1) {
          swift_once();
        }
        uint64_t v60 = sub_252831158();
        __swift_project_value_buffer(v60, (uint64_t)qword_269C2D310);
        uint64_t v61 = sub_252831138();
        os_log_type_t v62 = sub_252831618();
        if (os_log_type_enabled(v61, v62))
        {
          uint64_t v63 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v63 = 0;
          _os_log_impl(&dword_25277D000, v61, v62, "Internal Server Error", v63, 2u);
          MEMORY[0x2533BE070](v63, -1, -1);
        }
        unint64_t v65 = *(void *)(v0 + 176);
        v64 = *(void **)(v0 + 184);
        uint64_t v66 = *(void *)(v0 + 168);
        uint64_t v67 = *(void *)(v0 + 128);
        uint64_t v74 = *(void *)(v0 + 120);
        uint64_t v75 = *(void *)(v0 + 136);

        goto LABEL_58;
      }
      if (v5 != (id)201)
      {
LABEL_23:
        if (qword_269C1CEE0 != -1) {
          swift_once();
        }
        long long v36 = *(void **)(v0 + 184);
        uint64_t v37 = sub_252831158();
        __swift_project_value_buffer(v37, (uint64_t)qword_269C2D310);
        id v38 = v36;
        uint64_t v39 = sub_252831138();
        os_log_type_t v40 = sub_252831618();
        BOOL v41 = os_log_type_enabled(v39, v40);
        uint64_t v42 = *(void **)(v0 + 184);
        if (v41)
        {
          uint64_t v43 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v43 = 134217984;
          *(void *)(v0 + 40) = objc_msgSend(v2, sel_statusCode);
          sub_252831698();

          unint64_t v4 = 0x265382000;
          _os_log_impl(&dword_25277D000, v39, v40, "Request failed : Status Code %ld", v43, 0xCu);
          MEMORY[0x2533BE070](v43, -1, -1);
        }
        else
        {

          unint64_t v4 = 0x265382000uLL;
        }

        unint64_t v65 = *(void *)(v0 + 176);
        v64 = *(void **)(v0 + 184);
        uint64_t v66 = *(void *)(v0 + 168);
        uint64_t v67 = *(void *)(v0 + 128);
        uint64_t v74 = *(void *)(v0 + 120);
        uint64_t v75 = *(void *)(v0 + 136);
LABEL_58:
        type metadata accessor for NetworkError();
        sub_2527A5EF8((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
        swift_allocError();
        *uint64_t v68 = [v2 *(SEL *)(v4 + 3304)];
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_252782E20(v66, v65);

        (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v75, v74);
        goto LABEL_48;
      }
      if (qword_269C1CEE0 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_252831158();
      *(void *)(v0 + 200) = __swift_project_value_buffer(v21, (uint64_t)qword_269C2D310);
      uint64_t v22 = sub_252831138();
      os_log_type_t v23 = sub_252831628();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl(&dword_25277D000, v22, v23, "ServiceLocation Subscription Response received", v24, 2u);
        MEMORY[0x2533BE070](v24, -1, -1);
      }
      uint64_t v25 = *(void **)(v0 + 192);

      sub_252830828();
      swift_allocObject();
      sub_252830818();
      type metadata accessor for UtilitySubscriptionResponse();
      sub_2527A5EF8(&qword_269C1D958, (void (*)(uint64_t))type metadata accessor for UtilitySubscriptionResponse);
      sub_252830808();
      uint64_t v26 = v25;
      swift_release();
      if (v25)
      {
        uint64_t v27 = sub_252831138();
        os_log_type_t v28 = sub_252831618();
        if (os_log_type_enabled(v27, v28))
        {
          long long v29 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)long long v29 = 0;
          _os_log_impl(&dword_25277D000, v27, v28, "Error while decoding response from server", v29, 2u);
          MEMORY[0x2533BE070](v29, -1, -1);
        }
        unint64_t v30 = *(void *)(v0 + 176);
        uint64_t v31 = *(void **)(v0 + 184);
        uint64_t v32 = *(void *)(v0 + 168);
        uint64_t v34 = *(void *)(v0 + 128);
        uint64_t v33 = *(void *)(v0 + 136);
        uint64_t v35 = *(void *)(v0 + 120);

        sub_252825138(v26);
        swift_willThrow();
        sub_252782E20(v32, v30);

        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
LABEL_48:
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v58 = *(uint64_t (**)(void))(v0 + 8);
        return v58();
      }
      *(void *)(v0 + 208) = *(void *)(v0 + 48);
      id v69 = objc_msgSend(self, sel_ephemeralSessionConfiguration);
      id v70 = objc_msgSend(self, sel_sessionWithConfiguration_, v69);
      *(void *)(v0 + 216) = v70;

      uint64_t v71 = (void *)swift_task_alloc();
      *(void *)(v0 + 224) = v71;
      void *v71 = v0;
      v71[1] = sub_2527A2DE0;
      uint64_t v73 = *(void *)(v0 + 88);
      uint64_t v72 = *(void *)(v0 + 96);
      return sub_2527F21B4(v73, v72, (uint64_t)v70);
  }
}

uint64_t sub_2527A2DE0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(*v2 + 232) = a1;
  swift_task_dealloc();

  if (v1)
  {

    unint64_t v4 = sub_2527A5F48;
  }
  else
  {
    unint64_t v4 = sub_2527A5F40;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2527A2F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[12] = a6;
  v7[13] = a7;
  v7[10] = a4;
  v7[11] = a5;
  v7[8] = a2;
  v7[9] = a3;
  v7[7] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v7[14] = swift_task_alloc();
  uint64_t v9 = sub_2528307F8();
  v7[15] = v9;
  v7[16] = *(void *)(v9 - 8);
  v7[17] = swift_task_alloc();
  uint64_t v10 = (void *)swift_task_alloc();
  v7[18] = v10;
  void *v10 = v7;
  v10[1] = sub_2527A3054;
  return sub_2527BAEF8(a7);
}

uint64_t sub_2527A3054()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v1[19] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_2527A3210;
  uint64_t v4 = v1[14];
  uint64_t v5 = v1[12];
  uint64_t v6 = v1[11];
  uint64_t v7 = v1[10];
  uint64_t v8 = v1[9];
  uint64_t v9 = v1[8];
  uint64_t v10 = v1[7];
  return sub_2527B5A14(v4, v8, v7, v6, v5, v10, v9);
}

uint64_t sub_2527A3210()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2527A330C, 0, 0);
}

uint64_t sub_2527A330C()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[14];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_2527A5E98(v3);
    if (qword_269C1CEE0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D310);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable to generate request URL for  Subscription Details", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }

    type metadata accessor for NetworkError();
    sub_2527A5EF8((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
    swift_allocError();
    *uint64_t v8 = 0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[17], v3, v1);
    sub_252804F18(0xD000000000000047, 0x800000025283BBB0, (uint8_t *)0xD00000000000001ALL, 0x800000025283BC00);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[20] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_2527A35C8;
    uint64_t v12 = v0[17];
    return MEMORY[0x270EF1EB0](v12, 0);
  }
}

uint64_t sub_2527A35C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[21] = a1;
  v5[22] = a2;
  v5[23] = a3;
  v5[24] = v3;
  swift_task_dealloc();
  if (v3) {
    os_log_type_t v6 = sub_2527A4A6C;
  }
  else {
    os_log_type_t v6 = sub_2527A36E0;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_2527A36E0()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (!v1)
  {
    if (qword_269C1CEE0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_252831158();
    __swift_project_value_buffer(v9, (uint64_t)qword_269C2D310);
    uint64_t v10 = sub_252831138();
    os_log_type_t v11 = sub_252831618();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_25277D000, v10, v11, "Unable to process ServiceLocation Subscription Response.", v12, 2u);
      MEMORY[0x2533BE070](v12, -1, -1);
    }
    unint64_t v13 = *(void *)(v0 + 176);
    unint64_t v14 = *(void **)(v0 + 184);
    uint64_t v15 = *(void *)(v0 + 168);
    uint64_t v17 = *(void *)(v0 + 128);
    uint64_t v16 = *(void *)(v0 + 136);
    uint64_t v18 = *(void *)(v0 + 120);

    type metadata accessor for NetworkError();
    sub_2527A5EF8((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
    swift_allocError();
    *uint64_t v19 = 2;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_252782E20(v15, v13);
LABEL_47:

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    goto LABEL_48;
  }
  uint64_t v2 = (void *)v1;
  id v3 = *(id *)(v0 + 184);
  sub_252805814(0xD00000000000001BLL, (char *)0x800000025283BC20, (unint64_t)objc_msgSend(v2, sel_statusCode), qword_2702C45E0);
  id v4 = objc_msgSend(v2, sel_statusCode);
  switch((unint64_t)v4)
  {
    case 0x190uLL:
      if (qword_269C1CEE0 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_252831158();
      __swift_project_value_buffer(v5, (uint64_t)qword_269C2D310);
      os_log_type_t v6 = sub_252831138();
      os_log_type_t v7 = sub_252831618();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl(&dword_25277D000, v6, v7, "BAD REQUEST | Check request", v8, 2u);
        MEMORY[0x2533BE070](v8, -1, -1);
      }
      goto LABEL_46;
    case 0x191uLL:
      if (qword_269C1CEE0 != -1) {
        swift_once();
      }
      uint64_t v43 = sub_252831158();
      __swift_project_value_buffer(v43, (uint64_t)qword_269C2D310);
      os_log_type_t v6 = sub_252831138();
      os_log_type_t v44 = sub_252831618();
      if (os_log_type_enabled(v6, v44))
      {
        os_log_type_t v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v45 = 0;
        _os_log_impl(&dword_25277D000, v6, v44, "Request Unauthorized.", v45, 2u);
        MEMORY[0x2533BE070](v45, -1, -1);
      }
      goto LABEL_46;
    case 0x192uLL:
    case 0x193uLL:
    case 0x195uLL:
    case 0x196uLL:
    case 0x197uLL:
    case 0x198uLL:
    case 0x199uLL:
    case 0x19AuLL:
    case 0x19BuLL:
    case 0x19DuLL:
    case 0x19EuLL:
    case 0x19FuLL:
    case 0x1A0uLL:
    case 0x1A1uLL:
    case 0x1A2uLL:
    case 0x1A3uLL:
    case 0x1A4uLL:
    case 0x1A5uLL:
    case 0x1A6uLL:
    case 0x1A7uLL:
    case 0x1A8uLL:
    case 0x1A9uLL:
    case 0x1AAuLL:
    case 0x1ABuLL:
    case 0x1ACuLL:
      goto LABEL_23;
    case 0x194uLL:
      if (qword_269C1CEE0 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_252831158();
      __swift_project_value_buffer(v46, (uint64_t)qword_269C2D310);
      os_log_type_t v6 = sub_252831138();
      os_log_type_t v47 = sub_252831618();
      if (os_log_type_enabled(v6, v47))
      {
        os_log_type_t v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v48 = 0;
        _os_log_impl(&dword_25277D000, v6, v47, "Subscription Not Found! Proceed to user Off-boarding Actions.", v48, 2u);
        MEMORY[0x2533BE070](v48, -1, -1);
      }
      goto LABEL_46;
    case 0x19CuLL:
      if (qword_269C1CEE0 != -1) {
        swift_once();
      }
      uint64_t v49 = sub_252831158();
      __swift_project_value_buffer(v49, (uint64_t)qword_269C2D310);
      os_log_type_t v6 = sub_252831138();
      os_log_type_t v50 = sub_252831618();
      if (os_log_type_enabled(v6, v50))
      {
        os_log_type_t v51 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v51 = 0;
        _os_log_impl(&dword_25277D000, v6, v50, "Invalid Access Token. Try again after refreshing acces token", v51, 2u);
        MEMORY[0x2533BE070](v51, -1, -1);
      }
      goto LABEL_46;
    case 0x1ADuLL:
      if (qword_269C1CEE0 != -1) {
        swift_once();
      }
      uint64_t v52 = sub_252831158();
      __swift_project_value_buffer(v52, (uint64_t)qword_269C2D310);
      os_log_type_t v6 = sub_252831138();
      os_log_type_t v53 = sub_252831618();
      if (os_log_type_enabled(v6, v53))
      {
        os_log_type_t v54 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v54 = 0;
        _os_log_impl(&dword_25277D000, v6, v53, "TOO MANY REQUESTS | Server rejected calls cause of too many requests being made", v54, 2u);
        MEMORY[0x2533BE070](v54, -1, -1);
      }
LABEL_46:
      unint64_t v55 = *(void *)(v0 + 176);
      unint64_t v14 = *(void **)(v0 + 184);
      uint64_t v56 = *(void *)(v0 + 168);
      uint64_t v17 = *(void *)(v0 + 128);
      uint64_t v16 = *(void *)(v0 + 136);
      uint64_t v18 = *(void *)(v0 + 120);

      type metadata accessor for NetworkError();
      sub_2527A5EF8((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      sub_252782E20(v56, v55);

      goto LABEL_47;
    default:
      if (v4 == (id)500)
      {
        if (qword_269C1CEE0 != -1) {
          swift_once();
        }
        uint64_t v59 = sub_252831158();
        __swift_project_value_buffer(v59, (uint64_t)qword_269C2D310);
        uint64_t v60 = sub_252831138();
        os_log_type_t v61 = sub_252831618();
        if (os_log_type_enabled(v60, v61))
        {
          os_log_type_t v62 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v62 = 0;
          _os_log_impl(&dword_25277D000, v60, v61, "Internal Server Error", v62, 2u);
          MEMORY[0x2533BE070](v62, -1, -1);
        }
        unint64_t v64 = *(void *)(v0 + 176);
        uint64_t v63 = *(void **)(v0 + 184);
        uint64_t v65 = *(void *)(v0 + 168);
        uint64_t v66 = *(void *)(v0 + 128);
        uint64_t v73 = *(void *)(v0 + 120);
        uint64_t v74 = *(void *)(v0 + 136);

        goto LABEL_58;
      }
      if (v4 != (id)200)
      {
LABEL_23:
        if (qword_269C1CEE0 != -1) {
          swift_once();
        }
        uint64_t v35 = *(void **)(v0 + 184);
        uint64_t v36 = sub_252831158();
        __swift_project_value_buffer(v36, (uint64_t)qword_269C2D310);
        id v37 = v35;
        id v38 = sub_252831138();
        os_log_type_t v39 = sub_252831618();
        BOOL v40 = os_log_type_enabled(v38, v39);
        BOOL v41 = *(void **)(v0 + 184);
        if (v40)
        {
          uint64_t v42 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v42 = 134217984;
          *(void *)(v0 + 40) = objc_msgSend(v2, sel_statusCode);
          sub_252831698();

          _os_log_impl(&dword_25277D000, v38, v39, "Request failed : Status Code %ld", v42, 0xCu);
          MEMORY[0x2533BE070](v42, -1, -1);
        }
        else
        {
        }
        unint64_t v64 = *(void *)(v0 + 176);
        uint64_t v63 = *(void **)(v0 + 184);
        uint64_t v65 = *(void *)(v0 + 168);
        uint64_t v66 = *(void *)(v0 + 128);
        uint64_t v73 = *(void *)(v0 + 120);
        uint64_t v74 = *(void *)(v0 + 136);
LABEL_58:
        type metadata accessor for NetworkError();
        sub_2527A5EF8((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
        swift_allocError();
        *uint64_t v67 = objc_msgSend(v2, sel_statusCode);
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_252782E20(v65, v64);

        (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v74, v73);
        goto LABEL_48;
      }
      if (qword_269C1CEE0 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_252831158();
      *(void *)(v0 + 200) = __swift_project_value_buffer(v20, (uint64_t)qword_269C2D310);
      uint64_t v21 = sub_252831138();
      os_log_type_t v22 = sub_252831628();
      if (os_log_type_enabled(v21, v22))
      {
        os_log_type_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v23 = 0;
        _os_log_impl(&dword_25277D000, v21, v22, "ServiceLocation Subscription Response received", v23, 2u);
        MEMORY[0x2533BE070](v23, -1, -1);
      }
      uint64_t v24 = *(void **)(v0 + 192);

      sub_252830828();
      swift_allocObject();
      sub_252830818();
      type metadata accessor for UtilitySubscriptionResponse();
      sub_2527A5EF8(&qword_269C1D958, (void (*)(uint64_t))type metadata accessor for UtilitySubscriptionResponse);
      sub_252830808();
      uint64_t v25 = v24;
      swift_release();
      if (v24)
      {
        uint64_t v26 = sub_252831138();
        os_log_type_t v27 = sub_252831618();
        if (os_log_type_enabled(v26, v27))
        {
          os_log_type_t v28 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v28 = 0;
          _os_log_impl(&dword_25277D000, v26, v27, "Error while decoding response from server", v28, 2u);
          MEMORY[0x2533BE070](v28, -1, -1);
        }
        unint64_t v29 = *(void *)(v0 + 176);
        unint64_t v30 = *(void **)(v0 + 184);
        uint64_t v31 = *(void *)(v0 + 168);
        uint64_t v33 = *(void *)(v0 + 128);
        uint64_t v32 = *(void *)(v0 + 136);
        uint64_t v34 = *(void *)(v0 + 120);

        sub_252825138(v25);
        swift_willThrow();
        sub_252782E20(v31, v29);

        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
LABEL_48:
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v57 = *(uint64_t (**)(void))(v0 + 8);
        return v57();
      }
      *(void *)(v0 + 208) = *(void *)(v0 + 48);
      id v68 = objc_msgSend(self, sel_ephemeralSessionConfiguration);
      id v69 = objc_msgSend(self, sel_sessionWithConfiguration_, v68);
      *(void *)(v0 + 216) = v69;

      id v70 = (void *)swift_task_alloc();
      *(void *)(v0 + 224) = v70;
      void *v70 = v0;
      v70[1] = sub_2527A4588;
      uint64_t v72 = *(void *)(v0 + 88);
      uint64_t v71 = *(void *)(v0 + 96);
      return sub_2527F21B4(v72, v71, (uint64_t)v69);
  }
}

uint64_t sub_2527A4588(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(*v2 + 232) = a1;
  swift_task_dealloc();

  if (v1)
  {

    id v4 = sub_2527A48D8;
  }
  else
  {
    id v4 = sub_2527A46CC;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2527A46CC()
{
  unint64_t v1 = *(void *)(*(void *)(*(void *)(v0 + 208)
                             + OBJC_IVAR____TtC19HomeUtilityServices27UtilitySubscriptionResponse_subscription)
                 + OBJC_IVAR____TtC19HomeUtilityServices30UtilitySubscriptionInformation_customerAgreements);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_2528318C8();
    uint64_t v2 = result;
    if (!result) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_14;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0) {
      uint64_t v5 = (char *)MEMORY[0x2533BD5C0](i, v1);
    }
    else {
      uint64_t v5 = (char *)*(id *)(v1 + 8 * i + 32);
    }
    uint64_t v6 = v5;
    os_log_type_t v7 = (uint64_t *)&v5[OBJC_IVAR____TtC19HomeUtilityServices24UtilityCustomerAgreement_alternateSupplier];
    swift_beginAccess();
    unint64_t v8 = v7[1];
    if (v8
      && (uint64_t v9 = *v7, swift_bridgeObjectRetain(), v10 = sub_252788D48(v9, v8), v12 = v11, swift_bridgeObjectRelease(), v12))
    {
      *os_log_type_t v7 = v10;
      v7[1] = v12;

      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
LABEL_14:
  unint64_t v13 = (void *)v20[29];
  swift_bridgeObjectRelease();

  unint64_t v14 = (void *)v20[23];
  uint64_t v16 = v20[16];
  uint64_t v15 = v20[17];
  uint64_t v17 = v20[15];
  sub_252782E20(v20[21], v20[22]);

  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(uint64_t))v20[1];
  uint64_t v19 = v20[26];
  return v18(v19);
}

uint64_t sub_2527A48D8()
{
  unint64_t v1 = sub_252831138();
  os_log_type_t v2 = sub_252831618();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_25277D000, v1, v2, "Error while trying to fetch UtilityConfiguration.", v3, 2u);
    MEMORY[0x2533BE070](v3, -1, -1);
  }

  id v4 = sub_252831138();
  os_log_type_t v5 = sub_252831618();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_25277D000, v4, v5, "Returning Subscription without altering Alternate Supplier Name", v6, 2u);
    MEMORY[0x2533BE070](v6, -1, -1);
  }

  os_log_type_t v7 = (void *)v0[23];
  uint64_t v9 = v0[16];
  uint64_t v8 = v0[17];
  uint64_t v10 = v0[15];
  sub_252782E20(v0[21], v0[22]);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v12 = v0[26];
  return v11(v12);
}

uint64_t sub_2527A4A6C()
{
  (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_2527A4AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[8] = a6;
  v7[9] = a7;
  v7[6] = a4;
  v7[7] = a5;
  v7[4] = a2;
  v7[5] = a3;
  v7[3] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v7[10] = swift_task_alloc();
  uint64_t v9 = sub_2528307F8();
  v7[11] = v9;
  v7[12] = *(void *)(v9 - 8);
  v7[13] = swift_task_alloc();
  uint64_t v10 = (void *)swift_task_alloc();
  v7[14] = v10;
  void *v10 = v7;
  v10[1] = sub_2527A4C24;
  return sub_2527BAEF8(a7);
}

uint64_t sub_2527A4C24()
{
  unint64_t v1 = (void *)*v0;
  os_log_type_t v2 = (void *)*v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v1[15] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_2527A4DE0;
  uint64_t v4 = v1[10];
  uint64_t v5 = v1[8];
  uint64_t v6 = v1[7];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[5];
  uint64_t v9 = v1[4];
  uint64_t v10 = v1[3];
  return sub_2527B6670(v4, v8, v7, v6, v5, v10, v9);
}

uint64_t sub_2527A4DE0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2527A4EDC, 0, 0);
}

uint64_t sub_2527A4EDC()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[10];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_2527A5E98(v3);
    if (qword_269C1CEE0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D310);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable to generate request URL for  Subscription Details", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }

    type metadata accessor for NetworkError();
    sub_2527A5EF8((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
    swift_allocError();
    *uint64_t v8 = 0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9(0);
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[13], v3, v1);
    sub_252804F18(0xD000000000000048, 0x800000025283BB20, (uint8_t *)0xD00000000000001ELL, 0x800000025283BB70);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[16] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_2527A519C;
    uint64_t v12 = v0[13];
    return MEMORY[0x270EF1EB0](v12, 0);
  }
}

uint64_t sub_2527A519C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v4;
  *(void *)(v7 + 136) = a3;
  *(void *)(v7 + 144) = v3;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v8 = sub_2527A5E0C;
  }
  else
  {
    sub_252782E20(a1, a2);
    uint64_t v8 = sub_2527A52CC;
  }
  return MEMORY[0x270FA2498](v8, 0, 0);
}

uint64_t sub_2527A52CC()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    id v3 = *(id *)(v0 + 136);
    sub_252805814(0xD00000000000001BLL, (char *)0x800000025283BB90, (unint64_t)objc_msgSend(v2, sel_statusCode), qword_2702C4608);
    id v4 = objc_msgSend(v2, sel_statusCode);
    switch((unint64_t)v4)
    {
      case 0x190uLL:
        if (qword_269C1CEE0 != -1) {
          swift_once();
        }
        uint64_t v5 = sub_252831158();
        __swift_project_value_buffer(v5, (uint64_t)qword_269C2D310);
        os_log_type_t v6 = sub_252831138();
        os_log_type_t v7 = sub_252831618();
        if (os_log_type_enabled(v6, v7))
        {
          uint64_t v8 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v8 = 0;
          _os_log_impl(&dword_25277D000, v6, v7, "BAD REQUEST | Check request", v8, 2u);
          MEMORY[0x2533BE070](v8, -1, -1);
        }
        goto LABEL_38;
      case 0x191uLL:
        if (qword_269C1CEE0 != -1) {
          swift_once();
        }
        uint64_t v36 = sub_252831158();
        __swift_project_value_buffer(v36, (uint64_t)qword_269C2D310);
        os_log_type_t v6 = sub_252831138();
        os_log_type_t v37 = sub_252831618();
        if (os_log_type_enabled(v6, v37))
        {
          id v38 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v38 = 0;
          _os_log_impl(&dword_25277D000, v6, v37, "Request Unauthorized or Access Token Expired.", v38, 2u);
          MEMORY[0x2533BE070](v38, -1, -1);
        }
        goto LABEL_38;
      case 0x192uLL:
      case 0x193uLL:
      case 0x194uLL:
      case 0x195uLL:
      case 0x196uLL:
      case 0x197uLL:
      case 0x198uLL:
      case 0x199uLL:
      case 0x19AuLL:
      case 0x19BuLL:
      case 0x19DuLL:
      case 0x19EuLL:
      case 0x19FuLL:
      case 0x1A0uLL:
      case 0x1A1uLL:
      case 0x1A2uLL:
      case 0x1A3uLL:
      case 0x1A4uLL:
      case 0x1A5uLL:
      case 0x1A6uLL:
      case 0x1A7uLL:
      case 0x1A8uLL:
      case 0x1A9uLL:
      case 0x1AAuLL:
      case 0x1ABuLL:
      case 0x1ACuLL:
        goto LABEL_20;
      case 0x19CuLL:
        if (qword_269C1CEE8 != -1) {
          swift_once();
        }
        uint64_t v39 = sub_252831158();
        __swift_project_value_buffer(v39, (uint64_t)qword_269C2D328);
        os_log_type_t v6 = sub_252831138();
        os_log_type_t v40 = sub_252831618();
        if (os_log_type_enabled(v6, v40))
        {
          BOOL v41 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)BOOL v41 = 0;
          _os_log_impl(&dword_25277D000, v6, v40, "Authorization Token expired. Retry after refreshing token", v41, 2u);
          MEMORY[0x2533BE070](v41, -1, -1);
        }
        goto LABEL_38;
      case 0x1ADuLL:
        if (qword_269C1CEE0 != -1) {
          swift_once();
        }
        uint64_t v42 = sub_252831158();
        __swift_project_value_buffer(v42, (uint64_t)qword_269C2D310);
        os_log_type_t v6 = sub_252831138();
        os_log_type_t v43 = sub_252831618();
        if (os_log_type_enabled(v6, v43))
        {
          os_log_type_t v44 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v44 = 0;
          _os_log_impl(&dword_25277D000, v6, v43, "TOO MANY REQUESTS | Server rejected calls cause of too many requests being made", v44, 2u);
          MEMORY[0x2533BE070](v44, -1, -1);
        }
LABEL_38:
        uint64_t v13 = *(void **)(v0 + 136);
        uint64_t v15 = *(void *)(v0 + 96);
        uint64_t v14 = *(void *)(v0 + 104);
        uint64_t v16 = *(void *)(v0 + 88);

        type metadata accessor for NetworkError();
        sub_2527A5EF8((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
        swift_allocError();
        swift_storeEnumTagMultiPayload();
        swift_willThrow();

        goto LABEL_39;
      default:
        if (v4 == (id)500)
        {
          if (qword_269C1CEE0 != -1) {
            swift_once();
          }
          uint64_t v46 = sub_252831158();
          __swift_project_value_buffer(v46, (uint64_t)qword_269C2D310);
          os_log_type_t v47 = sub_252831138();
          os_log_type_t v48 = sub_252831618();
          if (os_log_type_enabled(v47, v48))
          {
            uint64_t v49 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v49 = 0;
            _os_log_impl(&dword_25277D000, v47, v48, "Internal Server Error", v49, 2u);
            MEMORY[0x2533BE070](v49, -1, -1);
          }
          os_log_type_t v50 = *(void **)(v0 + 136);
          uint64_t v52 = *(void *)(v0 + 96);
          uint64_t v51 = *(void *)(v0 + 104);
          uint64_t v53 = *(void *)(v0 + 88);
        }
        else
        {
          if (v4 == (id)204)
          {
            if (qword_269C1CEE0 != -1) {
              swift_once();
            }
            uint64_t v18 = sub_252831158();
            __swift_project_value_buffer(v18, (uint64_t)qword_269C2D310);
            uint64_t v19 = sub_252831138();
            os_log_type_t v20 = sub_252831628();
            if (os_log_type_enabled(v19, v20))
            {
              uint64_t v21 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v21 = 0;
              _os_log_impl(&dword_25277D000, v19, v20, "ServiceLocation Subscription revoked successfully", v21, 2u);
              MEMORY[0x2533BE070](v21, -1, -1);
            }
            os_log_type_t v22 = *(void **)(v0 + 136);
            uint64_t v24 = *(void *)(v0 + 96);
            uint64_t v23 = *(void *)(v0 + 104);
            uint64_t v25 = *(void *)(v0 + 88);

            (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
            swift_task_dealloc();
            swift_task_dealloc();
            uint64_t v26 = *(uint64_t (**)(uint64_t))(v0 + 8);
            uint64_t v27 = 1;
            goto LABEL_41;
          }
LABEL_20:
          if (qword_269C1CEE0 != -1) {
            swift_once();
          }
          os_log_type_t v28 = *(void **)(v0 + 136);
          uint64_t v29 = sub_252831158();
          __swift_project_value_buffer(v29, (uint64_t)qword_269C2D310);
          id v30 = v28;
          uint64_t v31 = sub_252831138();
          os_log_type_t v32 = sub_252831618();
          BOOL v33 = os_log_type_enabled(v31, v32);
          uint64_t v34 = *(void **)(v0 + 136);
          if (v33)
          {
            uint64_t v35 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v35 = 134217984;
            *(void *)(v0 + 16) = objc_msgSend(v2, sel_statusCode);
            sub_252831698();

            _os_log_impl(&dword_25277D000, v31, v32, "Request failed : Status Code %ld", v35, 0xCu);
            MEMORY[0x2533BE070](v35, -1, -1);
          }
          else
          {
          }
          os_log_type_t v50 = *(void **)(v0 + 136);
          uint64_t v52 = *(void *)(v0 + 96);
          uint64_t v51 = *(void *)(v0 + 104);
          uint64_t v53 = *(void *)(v0 + 88);
        }
        type metadata accessor for NetworkError();
        sub_2527A5EF8((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
        swift_allocError();
        *os_log_type_t v54 = objc_msgSend(v2, sel_statusCode);
        swift_storeEnumTagMultiPayload();
        swift_willThrow();

        (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v53);
        goto LABEL_40;
    }
  }
  if (qword_269C1CEE0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_252831158();
  __swift_project_value_buffer(v9, (uint64_t)qword_269C2D310);
  uint64_t v10 = sub_252831138();
  os_log_type_t v11 = sub_252831618();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_25277D000, v10, v11, "Unable to process ServiceLocation Subscription Response.", v12, 2u);
    MEMORY[0x2533BE070](v12, -1, -1);
  }
  uint64_t v13 = *(void **)(v0 + 136);
  uint64_t v15 = *(void *)(v0 + 96);
  uint64_t v14 = *(void *)(v0 + 104);
  uint64_t v16 = *(void *)(v0 + 88);

  type metadata accessor for NetworkError();
  sub_2527A5EF8((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
  swift_allocError();
  *uint64_t v17 = 2;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
LABEL_39:

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
LABEL_40:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v27 = 0;
LABEL_41:
  return v26(v27);
}

uint64_t sub_2527A5E0C()
{
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1(0);
}

uint64_t sub_2527A5E98(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2527A5EF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2527A5F4C(char a1, char a2)
{
  unint64_t v3 = 0xE200000000000000;
  uint64_t v4 = 25705;
  switch(a1)
  {
    case 1:
      uint64_t v4 = 0x7954726F74636166;
      unint64_t v3 = 0xEA00000000006570;
      break;
    case 2:
      uint64_t v4 = 0x74616E6974736564;
      unint64_t v3 = 0xEB000000006E6F69;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v4 = 0x736B6E696C5FLL;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xE200000000000000;
  uint64_t v6 = 25705;
  switch(a2)
  {
    case 1:
      unint64_t v5 = 0xEA00000000006570;
      if (v4 == 0x7954726F74636166) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v6 = 0x74616E6974736564;
      unint64_t v5 = 0xEB000000006E6F69;
      goto LABEL_9;
    case 3:
      unint64_t v5 = 0xE600000000000000;
      if (v4 == 0x736B6E696C5FLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v4 != v6) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v5) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_252831A58();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

BOOL sub_2527A60D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1 == a3;
}

uint64_t sub_2527A60E4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000006C61;
  uint64_t v3 = 0x6E7265746E496171;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E7265746E496171;
  unint64_t v6 = 0xEA00000000006C61;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE300000000000000;
      uint64_t v5 = 7759204;
      break;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1953654115;
      break;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1685025392;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE300000000000000;
      if (v5 == 7759204) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1953654115;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xE400000000000000;
      if (v5 == 1685025392) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_252831A58();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2527A624C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xE900000000000064;
  unint64_t v3 = 0x496D6172676F7270;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000012;
    }
    else {
      unint64_t v5 = 0xD000000000000010;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x800000025283A4A0;
    }
    else {
      unint64_t v6 = 0x800000025283A4C0;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0x496D6172676F7270;
  unint64_t v6 = 0xE900000000000064;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v3 = 0xD000000000000012;
    }
    else {
      unint64_t v3 = 0xD000000000000010;
    }
    if (v7 == 1) {
      unint64_t v2 = 0x800000025283A4A0;
    }
    else {
      unint64_t v2 = 0x800000025283A4C0;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_252831A58();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2527A6358(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000065;
  uint64_t v3 = 0x7461447472617473;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7461447472617473;
  unint64_t v6 = 0xE900000000000065;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x65746144646E65;
      break;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x736B616570;
      break;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x617461646174656DLL;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      if (v5 == 0x65746144646E65) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x736B616570;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xE800000000000000;
      if (v5 == 0x617461646174656DLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_252831A58();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2527A64E8(char a1, char a2)
{
  unint64_t v3 = 0xE200000000000000;
  unint64_t v4 = 25705;
  switch(a1)
  {
    case 1:
      unint64_t v4 = 0x754E6C6169726573;
      uint64_t v5 = 1919246957;
      goto LABEL_8;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v4 = 1701536109;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v4 = 0x6C65646F6DLL;
      break;
    case 4:
      unint64_t v3 = 0x800000025283A4F0;
      unint64_t v4 = 0xD000000000000015;
      break;
    case 5:
      unint64_t v4 = 0x7469646F6D6D6F63;
      unint64_t v3 = 0xE900000000000079;
      break;
    case 6:
      unint64_t v4 = 0x696F506567617375;
      uint64_t v5 = 1682535534;
LABEL_8:
      unint64_t v3 = v5 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE200000000000000;
  uint64_t v7 = 25705;
  switch(a2)
  {
    case 1:
      uint64_t v8 = 0x754E6C6169726573;
      uint64_t v9 = 1919246957;
      goto LABEL_21;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      if (v4 != 1701536109) {
        goto LABEL_24;
      }
      goto LABEL_22;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v4 != 0x6C65646F6DLL) {
        goto LABEL_24;
      }
      goto LABEL_22;
    case 4:
      unint64_t v6 = 0x800000025283A4F0;
      if (v4 != 0xD000000000000015) {
        goto LABEL_24;
      }
      goto LABEL_22;
    case 5:
      uint64_t v7 = 0x7469646F6D6D6F63;
      unint64_t v6 = 0xE900000000000079;
      goto LABEL_18;
    case 6:
      uint64_t v8 = 0x696F506567617375;
      uint64_t v9 = 1682535534;
LABEL_21:
      unint64_t v6 = v9 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      if (v4 == v8) {
        goto LABEL_22;
      }
      goto LABEL_24;
    default:
LABEL_18:
      if (v4 != v7) {
        goto LABEL_24;
      }
LABEL_22:
      if (v3 == v6) {
        char v10 = 1;
      }
      else {
LABEL_24:
      }
        char v10 = sub_252831A58();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
  }
}

uint64_t sub_2527A672C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEE0064496E6F6974;
  uint64_t v3 = 0x7069726373627573;
  uint64_t v4 = a1;
  unint64_t v5 = 0x7069726373627573;
  unint64_t v6 = 0xEE0064496E6F6974;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      unint64_t v5 = 0x6574617473;
      break;
    case 2:
      unint64_t v5 = 0x7461447472617473;
      unint64_t v6 = 0xE900000000000065;
      break;
    case 3:
      unint64_t v5 = 0x4C65636976726573;
      unint64_t v6 = 0xEF6E6F697461636FLL;
      break;
    case 4:
      unint64_t v6 = 0x800000025283A430;
      unint64_t v5 = 0xD000000000000012;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      if (v5 == 0x6574617473) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0xE900000000000065;
      if (v5 != 0x7461447472617473) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v3 = 0x4C65636976726573;
      unint64_t v2 = 0xEF6E6F697461636FLL;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0x800000025283A430;
      if (v5 != 0xD000000000000012) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_252831A58();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2527A6930(char a1, char a2)
{
  unint64_t v3 = 0xD000000000000013;
  unint64_t v4 = 0x800000025283A450;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0x49746E756F636361;
      unint64_t v4 = 0xE900000000000064;
      break;
    case 2:
      unint64_t v4 = 0xE800000000000000;
      unint64_t v3 = 0x736D6172676F7270;
      break;
    case 3:
      unint64_t v4 = 0xE600000000000000;
      unint64_t v3 = 0x73726574656DLL;
      break;
    case 4:
      unint64_t v4 = 0x800000025283A480;
      unint64_t v3 = 0xD000000000000011;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xD000000000000013;
  unint64_t v6 = 0x800000025283A450;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE900000000000064;
      if (v3 == 0x49746E756F636361) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      if (v3 != 0x736D6172676F7270) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      unint64_t v5 = 0x73726574656DLL;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0x800000025283A480;
      if (v3 != 0xD000000000000011) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v3 != v5) {
        goto LABEL_16;
      }
LABEL_13:
      if (v4 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_252831A58();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2527A6B04(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x800000025283A7D0;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0x65646F43646E6573;
    }
    else {
      unint64_t v5 = 0x6F43796669726576;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE800000000000000;
    }
    else {
      unint64_t v6 = 0xEA00000000006564;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0xD000000000000010;
  unint64_t v6 = 0x800000025283A7D0;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v2 = 0x65646F43646E6573;
    }
    else {
      unint64_t v2 = 0x6F43796669726576;
    }
    if (v7 == 1) {
      unint64_t v3 = 0xE800000000000000;
    }
    else {
      unint64_t v3 = 0xEA00000000006564;
    }
  }
LABEL_15:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_252831A58();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2527A6C1C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0x73736572646461;
  }
  else {
    unint64_t v3 = 0xD000000000000011;
  }
  if (v2) {
    unint64_t v4 = 0x800000025283A590;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    unint64_t v5 = 0x73736572646461;
  }
  else {
    unint64_t v5 = 0xD000000000000011;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0x800000025283A590;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_252831A58();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2527A6CC8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 5590868;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 5590868;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x444552454954;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x4445584946;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1413565510;
      break;
    case 4:
      uint64_t v5 = 0x524F505055534E55;
      unint64_t v3 = 0xEB00000000444554;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x444552454954) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x4445584946) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v2 = 1413565510;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xEB00000000444554;
      if (v5 != 0x524F505055534E55) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_252831A58();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2527A6E74(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xED00006B636F6C42;
  uint64_t v3 = 0x6C61767265746E49;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x696F506567617355;
    }
    else {
      uint64_t v5 = 0x6D75536567617355;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEA0000000000746ELL;
    }
    else {
      unint64_t v6 = 0xEC0000007972616DLL;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x6C61767265746E49;
  unint64_t v6 = 0xED00006B636F6C42;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x696F506567617355;
    }
    else {
      uint64_t v3 = 0x6D75536567617355;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xEA0000000000746ELL;
    }
    else {
      unint64_t v2 = 0xEC0000007972616DLL;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_252831A58();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2527A6FB8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6C6562616CLL;
    }
    else {
      uint64_t v3 = 1802396018;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE500000000000000;
    }
    else {
      unint64_t v4 = 0xE400000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6C6562616CLL;
      }
      else {
        uint64_t v6 = 1802396018;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE500000000000000;
      }
      else {
        unint64_t v7 = 0xE400000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x7472617473;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x7472617473)
  {
LABEL_21:
    char v8 = sub_252831A58();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2527A70B4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000014;
  unint64_t v3 = 0x800000025283A710;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000014;
  switch(v4)
  {
    case 1:
      uint64_t v6 = "customerServiceEmail";
      goto LABEL_5;
    case 2:
      unint64_t v5 = 0xD000000000000012;
      uint64_t v6 = "customerServiceSms";
      goto LABEL_5;
    case 3:
      unint64_t v5 = 0xD00000000000001BLL;
      uint64_t v6 = "customerServiceBusinessChat";
LABEL_5:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x800000025283A710;
  switch(a2)
  {
    case 1:
      char v8 = "customerServiceEmail";
      goto LABEL_10;
    case 2:
      unint64_t v2 = 0xD000000000000012;
      char v8 = "customerServiceSms";
      goto LABEL_10;
    case 3:
      unint64_t v2 = 0xD00000000000001BLL;
      char v8 = "customerServiceBusinessChat";
LABEL_10:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_252831A58();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

void sub_2527A7208(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

void sub_2527A7218(uint64_t a1@<X8>)
{
  sub_2527AABA4();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 9) = v4 & 1;
}

uint64_t sub_2527A724C()
{
  return *(void *)v0;
}

void sub_2527A7254(uint64_t a1@<X8>)
{
  sub_2527AABA4();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 9) = v4 & 1;
}

uint64_t sub_2527A728C()
{
  return sub_252831B18();
}

uint64_t sub_2527A72F8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2527AAB50();

  return MEMORY[0x270F44AF0](a1, a2, v4);
}

uint64_t sub_2527A7344()
{
  return sub_252831B18();
}

BOOL sub_2527A73AC(uint64_t a1, uint64_t *a2)
{
  return sub_2527A60D8(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *a2);
}

void sub_2527A73C8()
{
  qword_269C2D170 = (uint64_t)&unk_2702C4630;
}

uint64_t sub_2527A73DC@<X0>(void *a1@<X8>)
{
  if (qword_269C1CE10 != -1) {
    swift_once();
  }
  *a1 = qword_269C2D170;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2527A7448(uint64_t *a1, uint64_t *a2)
{
  return sub_2527AA230(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_2527A745C()
{
  uint64_t v0 = sub_252831128();
  __swift_allocate_value_buffer(v0, qword_269C2D178);
  __swift_project_value_buffer(v0, (uint64_t)qword_269C2D178);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D9D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269C1D9E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_252834DD0;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "NONE";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_252831108();
  char v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "INVALID_TOKEN";
  *(void *)(v10 + 8) = 13;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  os_log_type_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *os_log_type_t v11 = 2;
  *(void *)uint64_t v12 = "SUBSCRIPTION_NOT_FOUND";
  *((void *)v12 + 1) = 22;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 3;
  *(void *)uint64_t v14 = "BAD_REQUEST";
  *((void *)v14 + 1) = 11;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 4;
  *(void *)uint64_t v16 = "INTERNAL_SERVER_ERROR";
  *((void *)v16 + 1) = 21;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 5;
  *(void *)uint64_t v18 = "CLOUDKIT_ERROR";
  *((void *)v18 + 1) = 14;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v2);
  os_log_type_t v20 = (char *)v19 + v1[14];
  *uint64_t v19 = 6;
  *(void *)os_log_type_t v20 = "UNKNOWN_ERROR";
  *((void *)v20 + 1) = 13;
  v20[16] = 2;
  v9();
  return sub_252831118();
}

uint64_t sub_2527A7750@<X0>(uint64_t a1@<X8>)
{
  return sub_2527A9218(&qword_269C1CE18, (uint64_t)qword_269C2D178, a1);
}

uint64_t sub_2527A7774()
{
  uint64_t v0 = sub_252831128();
  __swift_allocate_value_buffer(v0, qword_269C2D190);
  __swift_project_value_buffer(v0, (uint64_t)qword_269C2D190);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D9D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269C1D9E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_252834DE0;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 1;
  *(void *)unint64_t v6 = "localSerialization";
  *(void *)(v6 + 8) = 18;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_252831108();
  char v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "wireSerialization";
  *((void *)v10 + 1) = 17;
  unsigned char v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "pccEncryptedMasterKey";
  *(void *)(v11 + 8) = 21;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_252831118();
}

uint64_t sub_2527A7978()
{
  while (1)
  {
    uint64_t result = sub_252830FD8();
    uint64_t v1 = v0;
    if (v0 || (v3 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 3:
        type metadata accessor for RecordTransport(0);
        sub_252831018();
LABEL_3:
        uint64_t v1 = 0;
        break;
      case 2:
        sub_2527A7B24();
        goto LABEL_3;
      case 1:
        sub_2527A7A58();
        goto LABEL_3;
    }
    uint64_t v0 = v1;
  }
}

uint64_t sub_2527A7A58()
{
  uint64_t result = sub_252831018();
  if (v0) {
    return sub_252783CC0(0, 0xF000000000000000);
  }
  return result;
}

uint64_t sub_2527A7B24()
{
  uint64_t result = sub_252831018();
  if (v0) {
    return sub_252783CC0(0, 0xF000000000000000);
  }
  return result;
}

uint64_t sub_2527A7BF4()
{
  uint64_t v2 = v0[1];
  if ((~v2 & 0x3000000000000000) != 0)
  {
    if ((v2 & 0x2000000000000000) != 0)
    {
      uint64_t result = (uint64_t)sub_2527A7D4C(v0);
      if (v1) {
        return result;
      }
    }
    else
    {
      uint64_t result = (uint64_t)sub_2527A7CC4(v0);
      if (v1) {
        return result;
      }
    }
  }
  uint64_t result = sub_2527A7DF4((uint64_t)v0);
  if (!v1)
  {
    type metadata accessor for RecordTransport(0);
    return sub_252830F78();
  }
  return result;
}

uint64_t *sub_2527A7CC4(uint64_t *result)
{
  uint64_t v1 = result[1];
  if ((v1 & 0x2000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = *result;
    sub_2527A9950(*result, v1);
    sub_2528310C8();
    return (uint64_t *)sub_2527A9958(v2, v1);
  }
  return result;
}

uint64_t *sub_2527A7D4C(uint64_t *result)
{
  uint64_t v1 = result[1];
  if ((~v1 & 0x3000000000000000) == 0 || (v1 & 0x2000000000000000) == 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = *result;
    sub_2527A9950(*result, v1);
    sub_2528310C8();
    return (uint64_t *)sub_2527A9958(v3, v1);
  }
  return result;
}

uint64_t sub_2527A7DF4(uint64_t a1)
{
  uint64_t result = type metadata accessor for RecordTransport(0);
  uint64_t v3 = a1 + *(int *)(result + 24);
  unint64_t v4 = *(void *)(v3 + 8);
  if (v4 >> 60 != 15)
  {
    uint64_t v5 = *(void *)v3;
    sub_252782DC8(*(void *)v3, *(void *)(v3 + 8));
    sub_2528310C8();
    return sub_252783CC0(v5, v4);
  }
  return result;
}

double sub_2527A7E94@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  *a2 = xmmword_252834E00;
  sub_252830F88();
  double result = 0.0;
  *(_OWORD *)((char *)a2 + *(int *)(a1 + 24)) = xmmword_252834DF0;
  return result;
}

uint64_t sub_2527A7EE0()
{
  return 0x725464726F636552;
}

uint64_t sub_2527A7F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_252830F98();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_2527A7F78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 20);
  uint64_t v5 = sub_252830F98();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*sub_2527A7FE8())()
{
  return nullsub_1;
}

uint64_t sub_2527A800C()
{
  return sub_2527A7978();
}

uint64_t sub_2527A8024()
{
  return sub_2527A7BF4();
}

uint64_t sub_2527A8040(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2527A94FC(&qword_269C1D9E8, (void (*)(uint64_t))type metadata accessor for RecordTransport);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2527A80C0@<X0>(uint64_t a1@<X8>)
{
  return sub_2527A9218(&qword_269C1CE20, (uint64_t)qword_269C2D190, a1);
}

uint64_t sub_2527A80E4(uint64_t a1)
{
  uint64_t v2 = sub_2527A94FC(&qword_269C1D9B0, (void (*)(uint64_t))type metadata accessor for RecordTransport);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2527A8154()
{
  sub_2527A94FC(&qword_269C1D9B0, (void (*)(uint64_t))type metadata accessor for RecordTransport);

  return sub_252831088();
}

uint64_t sub_2527A81D8()
{
  uint64_t v0 = sub_252831128();
  __swift_allocate_value_buffer(v0, qword_269C2D1A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_269C2D1A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D9D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269C1D9E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_252834E10;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "token";
  *(void *)(v6 + 8) = 5;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_252831108();
  char v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "limit";
  *(void *)(v10 + 8) = 5;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "offset";
  *((void *)v12 + 1) = 6;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "time";
  *((void *)v14 + 1) = 4;
  v14[16] = 2;
  v9();
  uint64_t v15 = v5 + 4 * v2 + v1[14];
  *(void *)(v5 + 4 * v2) = 5;
  *(void *)uint64_t v15 = "recordType";
  *(void *)(v15 + 8) = 10;
  *(unsigned char *)(v15 + 16) = 2;
  v9();
  return sub_252831118();
}

uint64_t sub_2527A8458()
{
  uint64_t result = sub_252830FD8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 4:
        case 5:
          sub_252831048();
          break;
        case 2:
          sub_252831038();
          break;
        case 3:
          sub_252831028();
          break;
        default:
          break;
      }
      uint64_t result = sub_252830FD8();
    }
  }
  return result;
}

uint64_t sub_2527A8568()
{
  unint64_t v2 = v0[1];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_2528310E8(), !v1))
  {
    if (!v0[2] || (uint64_t result = sub_2528310D8(), !v1))
    {
      uint64_t v5 = v0[3];
      unint64_t v6 = v0[4];
      switch(v6 >> 62)
      {
        case 1uLL:
          if ((int)v5 != v5 >> 32) {
            goto LABEL_13;
          }
          goto LABEL_14;
        case 2uLL:
          if (*(void *)(v5 + 16) != *(void *)(v5 + 24)) {
            goto LABEL_13;
          }
          goto LABEL_14;
        case 3uLL:
          goto LABEL_14;
        default:
          if ((v6 & 0xFF000000000000) == 0) {
            goto LABEL_14;
          }
LABEL_13:
          uint64_t result = sub_2528310C8();
          if (!v1)
          {
LABEL_14:
            unint64_t v7 = v0[6];
            uint64_t v8 = HIBYTE(v7) & 0xF;
            if ((v7 & 0x2000000000000000) == 0) {
              uint64_t v8 = v0[5] & 0xFFFFFFFFFFFFLL;
            }
            if (!v8 || (uint64_t result = sub_2528310E8(), !v1))
            {
              unint64_t v9 = v0[8];
              uint64_t v10 = HIBYTE(v9) & 0xF;
              if ((v9 & 0x2000000000000000) == 0) {
                uint64_t v10 = v0[7] & 0xFFFFFFFFFFFFLL;
              }
              if (!v10 || (uint64_t result = sub_2528310E8(), !v1))
              {
                type metadata accessor for GetRequest(0);
                uint64_t result = sub_252830F78();
              }
            }
          }
          break;
      }
    }
  }
  return result;
}

uint64_t sub_2527A8718@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_OWORD *)(a1 + 32) = xmmword_252834E20;
  *(void *)(a1 + 48) = 0xE000000000000000;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0xE000000000000000;
  return sub_252830F88();
}

uint64_t sub_2527A8758()
{
  return 0x6575716552746547;
}

uint64_t sub_2527A8774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t v5 = sub_252830F98();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_2527A87E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 36);
  uint64_t v5 = sub_252830F98();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*sub_2527A8854())()
{
  return nullsub_1;
}

uint64_t sub_2527A8878()
{
  return sub_2527A8458();
}

uint64_t sub_2527A8890()
{
  return sub_2527A8568();
}

uint64_t sub_2527A88A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2527A94FC(&qword_269C1D9F8, (void (*)(uint64_t))type metadata accessor for GetRequest);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2527A8924@<X0>(uint64_t a1@<X8>)
{
  return sub_2527A9218(&qword_269C1CE28, (uint64_t)qword_269C2D1A8, a1);
}

uint64_t sub_2527A8948(uint64_t a1)
{
  uint64_t v2 = sub_2527A94FC(&qword_269C1D990, (void (*)(uint64_t))type metadata accessor for GetRequest);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2527A89B4()
{
  sub_2527A94FC(&qword_269C1D990, (void (*)(uint64_t))type metadata accessor for GetRequest);

  return sub_252831088();
}

uint64_t sub_2527A8A34()
{
  uint64_t v0 = sub_252831128();
  __swift_allocate_value_buffer(v0, qword_269C2D1C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_269C2D1C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D9D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269C1D9E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_252834E30;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "records";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_252831108();
  unint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "offset";
  *(void *)(v10 + 8) = 6;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "moreToCome";
  *((void *)v12 + 1) = 10;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "error";
  *((void *)v14 + 1) = 5;
  v14[16] = 2;
  v9();
  return sub_252831118();
}

uint64_t sub_2527A8C6C()
{
  uint64_t result = sub_252830FD8();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_252830F38();
          sub_2527A94FC(&qword_269C1DA08, MEMORY[0x263F327D8]);
          uint64_t v4 = v3;
          sub_252831058();
          goto LABEL_5;
        case 2:
          uint64_t v4 = v3;
          sub_252831028();
          goto LABEL_5;
        case 3:
          uint64_t v4 = v3;
          sub_252830FF8();
          goto LABEL_5;
        case 4:
          sub_2527AAB50();
          uint64_t v4 = v3;
          sub_252831008();
LABEL_5:
          uint64_t v3 = v4;
          break;
        default:
          break;
      }
      uint64_t result = sub_252830FD8();
    }
  }
  return result;
}

uint64_t sub_2527A8DF4()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (sub_252830F38(), sub_2527A94FC(&qword_269C1DA08, MEMORY[0x263F327D8]), uint64_t result = sub_2528310F8(), !v1))
  {
    uint64_t v3 = *(void *)(v0 + 8);
    unint64_t v4 = *(void *)(v0 + 16);
    switch(v4 >> 62)
    {
      case 1uLL:
        if ((int)v3 != v3 >> 32) {
          goto LABEL_9;
        }
        goto LABEL_10;
      case 2uLL:
        if (*(void *)(v3 + 16) != *(void *)(v3 + 24)) {
          goto LABEL_9;
        }
        goto LABEL_10;
      case 3uLL:
        goto LABEL_10;
      default:
        if ((v4 & 0xFF000000000000) == 0) {
          goto LABEL_10;
        }
LABEL_9:
        uint64_t result = sub_2528310C8();
        if (!v1)
        {
LABEL_10:
          if (*(unsigned char *)(v0 + 24) != 1 || (uint64_t result = sub_2528310A8(), !v1))
          {
            if (!*(void *)(v0 + 32) || (sub_2527AAB50(), uint64_t result = sub_2528310B8(), !v1))
            {
              type metadata accessor for RecordsResponse(0);
              uint64_t result = sub_252830F78();
            }
          }
        }
        break;
    }
  }
  return result;
}

uint64_t sub_2527A8FD8@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x263F8EE78];
  *(_OWORD *)(a1 + 8) = xmmword_252834E40;
  *(unsigned char *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  return sub_252830F88();
}

uint64_t sub_2527A9020()
{
  return 0x527364726F636552;
}

uint64_t sub_2527A9044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 32);
  uint64_t v5 = sub_252830F98();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_2527A90B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 32);
  uint64_t v5 = sub_252830F98();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*sub_2527A9124())()
{
  return nullsub_1;
}

uint64_t sub_2527A9148()
{
  return sub_2527A8C6C();
}

uint64_t sub_2527A9160()
{
  return sub_2527A8DF4();
}

uint64_t sub_2527A9178(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2527A94FC(&qword_269C1DA00, (void (*)(uint64_t))type metadata accessor for RecordsResponse);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2527A91F4@<X0>(uint64_t a1@<X8>)
{
  return sub_2527A9218(&qword_269C1CE30, (uint64_t)qword_269C2D1C0, a1);
}

uint64_t sub_2527A9218@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_252831128();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_2527A92B4(uint64_t a1)
{
  uint64_t v2 = sub_2527A94FC(&qword_269C1D970, (void (*)(uint64_t))type metadata accessor for RecordsResponse);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2527A9320()
{
  return sub_252831B18();
}

uint64_t sub_2527A9378()
{
  sub_2527A94FC(&qword_269C1D970, (void (*)(uint64_t))type metadata accessor for RecordsResponse);

  return sub_252831088();
}

uint64_t sub_2527A93F4()
{
  return sub_252831B18();
}

uint64_t sub_2527A944C()
{
  return sub_2527A94FC(&qword_269C1D968, (void (*)(uint64_t))type metadata accessor for RecordsResponse);
}

uint64_t type metadata accessor for RecordsResponse(uint64_t a1)
{
  return sub_2527A977C(a1, (uint64_t *)&unk_269C1DA40);
}

uint64_t sub_2527A94B4()
{
  return sub_2527A94FC(&qword_269C1D970, (void (*)(uint64_t))type metadata accessor for RecordsResponse);
}

uint64_t sub_2527A94FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2527A9544()
{
  return sub_2527A94FC(&qword_269C1D978, (void (*)(uint64_t))type metadata accessor for RecordsResponse);
}

uint64_t sub_2527A958C()
{
  return sub_2527A94FC(&qword_269C1D980, (void (*)(uint64_t))type metadata accessor for RecordsResponse);
}

uint64_t sub_2527A95D4()
{
  return sub_2527A94FC(&qword_269C1D988, (void (*)(uint64_t))type metadata accessor for GetRequest);
}

uint64_t type metadata accessor for GetRequest(uint64_t a1)
{
  return sub_2527A977C(a1, (uint64_t *)&unk_269C1DA30);
}

uint64_t sub_2527A963C()
{
  return sub_2527A94FC(&qword_269C1D990, (void (*)(uint64_t))type metadata accessor for GetRequest);
}

uint64_t sub_2527A9684()
{
  return sub_2527A94FC(&qword_269C1D998, (void (*)(uint64_t))type metadata accessor for GetRequest);
}

uint64_t sub_2527A96CC()
{
  return sub_2527A94FC(&qword_269C1D9A0, (void (*)(uint64_t))type metadata accessor for GetRequest);
}

uint64_t sub_2527A9714()
{
  return sub_2527A94FC(&qword_269C1D9A8, (void (*)(uint64_t))type metadata accessor for RecordTransport);
}

uint64_t type metadata accessor for RecordTransport(uint64_t a1)
{
  return sub_2527A977C(a1, (uint64_t *)&unk_269C1DA20);
}

uint64_t sub_2527A977C(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2527A97B4()
{
  return sub_2527A94FC(&qword_269C1D9B0, (void (*)(uint64_t))type metadata accessor for RecordTransport);
}

uint64_t sub_2527A97FC()
{
  return sub_2527A94FC(&qword_269C1D9B8, (void (*)(uint64_t))type metadata accessor for RecordTransport);
}

uint64_t sub_2527A9844()
{
  return sub_2527A94FC(&qword_269C1D9C0, (void (*)(uint64_t))type metadata accessor for RecordTransport);
}

unint64_t sub_2527A9890()
{
  unint64_t result = qword_269C1D9C8;
  if (!qword_269C1D9C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C1D9D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D9C8);
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_2527A9950(uint64_t a1, uint64_t a2)
{
  return sub_252782DC8(a1, a2 & 0xDFFFFFFFFFFFFFFFLL);
}

uint64_t sub_2527A9958(uint64_t a1, uint64_t a2)
{
  if ((~a2 & 0x3000000000000000) != 0) {
    return sub_2527A996C(a1, a2);
  }
  return a1;
}

uint64_t sub_2527A996C(uint64_t a1, uint64_t a2)
{
  return sub_252782E20(a1, a2 & 0xDFFFFFFFFFFFFFFFLL);
}

uint64_t sub_2527A9974@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_252782DC8(a2, a3);
      unint64_t v10 = (char *)sub_2528309E8();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_252830A18();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_252830A08();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x2527A9BD8);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_252782E20(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_2528309E8();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_252830A18();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_252830A08();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_2527A9BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252830F38();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10 == *(void *)(a2 + 16))
  {
    if (!v10 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
      size_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      uint64_t v12 = v6 + 16;
      uint64_t v31 = v7;
      os_log_type_t v32 = v13;
      uint64_t v14 = (v11 + 32) & ~v11;
      uint64_t v15 = *(void *)(v12 + 56);
      uint64_t v33 = v12;
      uint64_t v29 = v15;
      char v30 = (void (**)(uint64_t, uint64_t))(v12 - 8);
      uint64_t v16 = v10 - 1;
      uint64_t v17 = v7;
      do
      {
        uint64_t v18 = a1;
        BOOL v19 = v9;
        int64_t v20 = v9;
        uint64_t v21 = v32;
        v32((uint64_t)v19, a1 + v14, v4);
        uint64_t v22 = a2;
        v21(v17, a2 + v14, v4);
        uint64_t v9 = v20;
        sub_2527A94FC(&qword_269C1DA18, MEMORY[0x263F327D8]);
        char v23 = sub_252831288();
        char v24 = *v30;
        (*v30)(v17, v4);
        v24((uint64_t)v20, v4);
        BOOL v26 = v16-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v14 += v29;
        a2 = v22;
        a1 = v18;
      }
      while (v26);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_2527A9E08(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_2527A9974((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_2527A9EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_2528309E8();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_252830A18();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_252830A08();
  sub_2527A9974(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_2527A9F98(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x2527AA200);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_252782DC8(a3, a4);
                  sub_252782DC8(a1, a2);
                  char v17 = sub_2527A9EE0((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_252782E20(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_252782DC8(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_2527A9EE0(v21, v22, v20, a3, a4);
                  sub_252782E20(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_252782DC8(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_252782DC8(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_2527A9E08(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_252782E20(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_2527AA230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((a2 & 0x2000000000000000) != 0)
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      sub_2527A9950(a1, a2);
      sub_2527A9950(a3, a4);
      uint64_t v8 = a1;
      unint64_t v9 = a2 & 0xDFFFFFFFFFFFFFFFLL;
      uint64_t v10 = a3;
      unint64_t v11 = a4 & 0xDFFFFFFFFFFFFFFFLL;
      goto LABEL_7;
    }
  }
  else if ((a4 & 0x2000000000000000) == 0)
  {
    sub_2527A9950(a1, a2);
    sub_2527A9950(a3, a4);
    uint64_t v8 = a1;
    unint64_t v9 = a2;
    uint64_t v10 = a3;
    unint64_t v11 = a4;
LABEL_7:
    char v12 = sub_2527A9F98(v8, v9, v10, v11);
    sub_2527A996C(a3, a4);
    sub_2527A996C(a1, a2);
    return v12 & 1;
  }
  char v12 = 0;
  return v12 & 1;
}

uint64_t sub_2527AA300(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252830F98();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v18 - v9;
  if ((sub_2527A9BE8(*(void *)a1, *(void *)a2) & 1) == 0
    || (sub_2527A9F98(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a2 + 8), *(void *)(a2 + 16)) & 1) == 0
    || *(unsigned __int8 *)(a1 + 24) != *(unsigned __int8 *)(a2 + 24))
  {
    goto LABEL_7;
  }
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void *)(a2 + 32);
  if (*(unsigned char *)(a2 + 40) == 1)
  {
    switch(v12)
    {
      case 1:
        if (v11 == 1) {
          goto LABEL_10;
        }
        goto LABEL_7;
      case 2:
        if (v11 == 2) {
          goto LABEL_10;
        }
        goto LABEL_7;
      case 3:
        if (v11 == 3) {
          goto LABEL_10;
        }
        goto LABEL_7;
      case 4:
        if (v11 == 4) {
          goto LABEL_10;
        }
        goto LABEL_7;
      case 5:
        if (v11 == 5) {
          goto LABEL_10;
        }
        goto LABEL_7;
      case 6:
        if (v11 == 6) {
          goto LABEL_10;
        }
        goto LABEL_7;
      default:
        if (v11) {
          goto LABEL_7;
        }
        goto LABEL_10;
    }
  }
  if (v11 == v12)
  {
LABEL_10:
    uint64_t v15 = type metadata accessor for RecordsResponse(0);
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v16(v10, a1 + *(int *)(v15 + 32), v4);
    v16(v8, a2 + *(int *)(v15 + 32), v4);
    sub_2527A94FC(&qword_269C1D9F0, MEMORY[0x263F50560]);
    char v13 = sub_252831288();
    char v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v8, v4);
    v17(v10, v4);
  }
  else
  {
LABEL_7:
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_2527AA57C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_252830F98();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t v12 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v14 = *a2;
  uint64_t v13 = a2[1];
  uint64_t v15 = v13 & 0x3000000000000000;
  if ((~v11 & 0x3000000000000000) != 0)
  {
    if (v15 != 0x3000000000000000)
    {
      if ((v11 & 0x2000000000000000) != 0)
      {
        if ((v13 & 0x2000000000000000) == 0) {
          goto LABEL_17;
        }
        unint64_t v34 = v13 & 0xDFFFFFFFFFFFFFFFLL;
        uint64_t v35 = v8;
        sub_2527AA8EC(v12, v11);
        sub_2527AA8EC(v14, v13);
        uint64_t v17 = v12;
        unint64_t v18 = v11 & 0xDFFFFFFFFFFFFFFFLL;
        uint64_t v19 = v14;
        unint64_t v20 = v34;
      }
      else
      {
        if ((v13 & 0x2000000000000000) != 0) {
          goto LABEL_17;
        }
        uint64_t v16 = *a1;
        uint64_t v35 = v8;
        sub_2527AA8EC(v16, v11);
        sub_2527AA8EC(v14, v13);
        uint64_t v17 = v12;
        unint64_t v18 = v11;
        uint64_t v19 = v14;
        unint64_t v20 = v13;
      }
      char v21 = sub_2527A9F98(v17, v18, v19, v20);
      sub_2527A9958(v14, v13);
      sub_2527A9958(v12, v11);
      uint64_t v8 = v35;
      if ((v21 & 1) == 0) {
        goto LABEL_17;
      }
      goto LABEL_12;
    }
LABEL_5:
    sub_2527AA8EC(*a1, a1[1]);
    sub_2527AA8EC(v14, v13);
    sub_2527A9958(v12, v11);
    sub_2527A9958(v14, v13);
    goto LABEL_17;
  }
  if (v15 != 0x3000000000000000) {
    goto LABEL_5;
  }
LABEL_12:
  uint64_t v35 = v8;
  uint64_t v22 = type metadata accessor for RecordTransport(0);
  uint64_t v23 = *(int *)(v22 + 24);
  uint64_t v24 = *(uint64_t *)((char *)a1 + v23);
  unint64_t v25 = *(uint64_t *)((char *)a1 + v23 + 8);
  BOOL v26 = (uint64_t *)((char *)a2 + v23);
  uint64_t v27 = *v26;
  unint64_t v28 = v26[1];
  if (v25 >> 60 == 15)
  {
    if (v28 >> 60 == 15) {
      goto LABEL_20;
    }
    goto LABEL_16;
  }
  if (v28 >> 60 == 15)
  {
LABEL_16:
    sub_2527AA900(v24, v25);
    sub_2527AA900(v27, v28);
    sub_252783CC0(v24, v25);
    sub_252783CC0(v27, v28);
    goto LABEL_17;
  }
  sub_2527AA900(v24, v25);
  sub_2527AA900(v27, v28);
  LODWORD(v34) = sub_2527A9F98(v24, v25, v27, v28);
  sub_252783CC0(v27, v28);
  sub_252783CC0(v24, v25);
  if (v34)
  {
LABEL_20:
    uint64_t v31 = v35;
    os_log_type_t v32 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
    v32(v10, (char *)a1 + *(int *)(v22 + 20), v4);
    v32(v7, (char *)a2 + *(int *)(v22 + 20), v4);
    sub_2527A94FC(&qword_269C1D9F0, MEMORY[0x263F50560]);
    char v29 = sub_252831288();
    uint64_t v33 = *(void (**)(char *, uint64_t))(v31 + 8);
    v33(v7, v4);
    v33(v10, v4);
    return v29 & 1;
  }
LABEL_17:
  char v29 = 0;
  return v29 & 1;
}

uint64_t sub_2527AA8EC(uint64_t a1, uint64_t a2)
{
  if ((~a2 & 0x3000000000000000) != 0) {
    return sub_2527A9950(a1, a2);
  }
  return a1;
}

uint64_t sub_2527AA900(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_252782DC8(a1, a2);
  }
  return a1;
}

uint64_t sub_2527AA914(char *a1, char *a2)
{
  uint64_t v4 = sub_252830F98();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v17 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
  if (v11 || (char v12 = 0, (sub_252831A58() & 1) != 0))
  {
    if (*((void *)a1 + 2) == *((void *)a2 + 2)
      && (sub_2527A9F98(*((void *)a1 + 3), *((void *)a1 + 4), *((void *)a2 + 3), *((void *)a2 + 4)) & 1) != 0)
    {
      if (*((void *)a1 + 5) == *((void *)a2 + 5) && *((void *)a1 + 6) == *((void *)a2 + 6)
        || (char v12 = 0, (sub_252831A58() & 1) != 0))
      {
        if (*((void *)a1 + 7) == *((void *)a2 + 7) && *((void *)a1 + 8) == *((void *)a2 + 8)
          || (char v12 = 0, (sub_252831A58() & 1) != 0))
        {
          uint64_t Request = type metadata accessor for GetRequest(0);
          uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
          v14(v10, &a1[*(int *)(Request + 36)], v4);
          v14(v8, &a2[*(int *)(Request + 36)], v4);
          sub_2527A94FC(&qword_269C1D9F0, MEMORY[0x263F50560]);
          char v12 = sub_252831288();
          uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
          v15(v8, v4);
          v15(v10, v4);
        }
      }
    }
    else
    {
      char v12 = 0;
    }
  }
  return v12 & 1;
}

unint64_t sub_2527AAB50()
{
  unint64_t result = qword_269C1DA10;
  if (!qword_269C1DA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DA10);
  }
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for DataFetchError(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DataFetchError(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_2527AAC1C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_2527AAC38(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DataFetchError()
{
  return &type metadata for DataFetchError;
}

uint64_t *sub_2527AAC68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    if ((~v7 & 0x3000000000000000) != 0)
    {
      uint64_t v9 = *a2;
      sub_2527A9950(*a2, a2[1]);
      *uint64_t v4 = v9;
      v4[1] = v7;
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    uint64_t v10 = *(int *)(a3 + 20);
    BOOL v11 = (char *)v4 + v10;
    char v12 = (char *)a2 + v10;
    uint64_t v13 = sub_252830F98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    unint64_t v17 = *((void *)v16 + 1);
    if (v17 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    }
    else
    {
      uint64_t v18 = *(void *)v16;
      sub_252782DC8(*(void *)v16, *((void *)v16 + 1));
      *(void *)uint64_t v15 = v18;
      *((void *)v15 + 1) = v17;
    }
  }
  return v4;
}

uint64_t sub_2527AADA8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = a1[1];
  if ((~v4 & 0x3000000000000000) != 0) {
    sub_2527A996C(*a1, v4);
  }
  int v5 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_252830F98();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v8 = (uint64_t *)((char *)a1 + *(int *)(a2 + 24));
  unint64_t v9 = v8[1];
  if (v9 >> 60 != 15)
  {
    uint64_t v10 = *v8;
    return sub_252782E20(v10, v9);
  }
  return result;
}

uint64_t *sub_2527AAE68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  if ((~v6 & 0x3000000000000000) != 0)
  {
    uint64_t v7 = *a2;
    sub_2527A9950(*a2, a2[1]);
    *a1 = v7;
    a1[1] = v6;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v8 = *(int *)(a3 + 20);
  unint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_252830F98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  unint64_t v15 = *((void *)v14 + 1);
  if (v15 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  }
  else
  {
    uint64_t v16 = *(void *)v14;
    sub_252782DC8(*(void *)v14, *((void *)v14 + 1));
    *(void *)uint64_t v13 = v16;
    *((void *)v13 + 1) = v15;
  }
  return a1;
}

uint64_t *sub_2527AAF58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = v6 & 0x3000000000000000;
  if ((~a1[1] & 0x3000000000000000) == 0)
  {
    if (v7 != 0x3000000000000000)
    {
      uint64_t v8 = *a2;
      sub_2527A9950(*a2, a2[1]);
      *a1 = v8;
      a1[1] = v6;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 == 0x3000000000000000)
  {
    sub_2527AB0CC(a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  uint64_t v9 = *a2;
  sub_2527A9950(*a2, a2[1]);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  *a1 = v9;
  a1[1] = v6;
  sub_2527A996C(v10, v11);
LABEL_8:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_252830F98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = *(int *)(a3 + 24);
  unint64_t v17 = (uint64_t *)((char *)a1 + v16);
  uint64_t v18 = (uint64_t *)((char *)a2 + v16);
  unint64_t v19 = *(uint64_t *)((char *)a2 + v16 + 8);
  if (*(unint64_t *)((char *)a1 + v16 + 8) >> 60 != 15)
  {
    if (v19 >> 60 != 15)
    {
      uint64_t v21 = *v18;
      sub_252782DC8(v21, v19);
      uint64_t v22 = *v17;
      unint64_t v23 = v17[1];
      *unint64_t v17 = v21;
      v17[1] = v19;
      sub_252782E20(v22, v23);
      return a1;
    }
    sub_2527AB0FC((uint64_t)v17);
    goto LABEL_13;
  }
  if (v19 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)unint64_t v17 = *(_OWORD *)v18;
    return a1;
  }
  uint64_t v20 = *v18;
  sub_252782DC8(v20, v19);
  *unint64_t v17 = v20;
  v17[1] = v19;
  return a1;
}

uint64_t *sub_2527AB0CC(uint64_t *a1)
{
  return a1;
}

uint64_t sub_2527AB0FC(uint64_t a1)
{
  return a1;
}

_OWORD *sub_2527AB150(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_252830F98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t *sub_2527AB1E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = a1[1];
  if ((~v6 & 0x3000000000000000) == 0) {
    goto LABEL_4;
  }
  uint64_t v7 = a2[1];
  if ((~v7 & 0x3000000000000000) == 0)
  {
    sub_2527AB0CC(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  uint64_t v8 = *a1;
  *a1 = *a2;
  a1[1] = v7;
  sub_2527A996C(v8, v6);
LABEL_6:
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_252830F98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (uint64_t *)((char *)a1 + v13);
  uint64_t v15 = (uint64_t *)((char *)a2 + v13);
  unint64_t v16 = *(uint64_t *)((char *)a1 + v13 + 8);
  if (v16 >> 60 != 15)
  {
    unint64_t v17 = v15[1];
    if (v17 >> 60 != 15)
    {
      uint64_t v18 = *v14;
      *uint64_t v14 = *v15;
      v14[1] = v17;
      sub_252782E20(v18, v16);
      return a1;
    }
    sub_2527AB0FC((uint64_t)v14);
  }
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  return a1;
}

uint64_t sub_2527AB2FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2527AB310);
}

uint64_t sub_2527AB310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252830F98();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    uint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24) + 8) >> 60;
    BOOL v13 = ((4 * v12) & 0xC) == 0;
    unsigned int v14 = ((4 * v12) & 0xC | (v12 >> 2)) ^ 0xF;
    if (v13) {
      return 0;
    }
    else {
      return v14;
    }
  }
}

uint64_t sub_2527AB3E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2527AB3F4);
}

uint64_t sub_2527AB3F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_252830F98();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    BOOL v13 = (void *)(a1 + *(int *)(a4 + 24));
    *BOOL v13 = 0;
    v13[1] = (unint64_t)((~a2 >> 2) & 3 | (4 * ~a2)) << 60;
  }
  return result;
}

uint64_t sub_2527AB4C4()
{
  uint64_t result = sub_252830F98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for RecordTransport.OneOf_Contents(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  sub_2527A9950(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for RecordTransport.OneOf_Contents(uint64_t *a1)
{
  return sub_2527A996C(*a1, a1[1]);
}

uint64_t *assignWithCopy for RecordTransport.OneOf_Contents(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  sub_2527A9950(*a2, v4);
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_2527A996C(v5, v6);
  return a1;
}

uint64_t *assignWithTake for RecordTransport.OneOf_Contents(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_2527A996C(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RecordTransport.OneOf_Contents(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 3 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 3);
  }
  unsigned int v3 = ((2 * ((*(void *)(a1 + 8) & 0x1000000000000000) != 0)) | ((*(void *)(a1 + 8) >> 60) >> 1) & 1) ^ 3;
  if (v3 >= 2) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for RecordTransport.OneOf_Contents(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 2)
  {
    *(void *)uint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    if (a3 >= 3) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 3) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)((2 * (a2 & 1)) | 1) << 60;
    }
  }
  return result;
}

uint64_t sub_2527AB6D0(uint64_t a1)
{
  return (*(void *)(a1 + 8) >> 61) & 1;
}

uint64_t sub_2527AB6DC(uint64_t result)
{
  *(void *)(result + 8) &= ~0x2000000000000000uLL;
  return result;
}

uint64_t sub_2527AB6EC(uint64_t result, char a2)
{
  *(void *)(result + 8) = *(void *)(result + 8) & 0xCFFFFFFFFFFFFFFFLL | ((unint64_t)(a2 & 1) << 61);
  return result;
}

ValueMetadata *type metadata accessor for RecordTransport.OneOf_Contents()
{
  return &type metadata for RecordTransport.OneOf_Contents;
}

uint64_t *sub_2527AB714(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    unint64_t v9 = a2[4];
    swift_bridgeObjectRetain();
    sub_252782DC8(v8, v9);
    a1[3] = v8;
    a1[4] = v9;
    uint64_t v10 = a2[6];
    a1[5] = a2[5];
    a1[6] = v10;
    uint64_t v11 = a2[7];
    uint64_t v12 = a2[8];
    uint64_t v13 = *(int *)(a3 + 36);
    unsigned int v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    a1[7] = v11;
    a1[8] = v12;
    uint64_t v16 = sub_252830F98();
    unint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17(v14, v15, v16);
  }
  return a1;
}

uint64_t sub_2527AB83C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  sub_252782E20(*(void *)(a1 + 24), *(void *)(a1 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_252830F98();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_2527AB8CC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  unint64_t v8 = a2[4];
  swift_bridgeObjectRetain();
  sub_252782DC8(v7, v8);
  a1[3] = v7;
  a1[4] = v8;
  uint64_t v9 = a2[6];
  a1[5] = a2[5];
  a1[6] = v9;
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v12 = *(int *)(a3 + 36);
  uint64_t v13 = (char *)a1 + v12;
  unsigned int v14 = (char *)a2 + v12;
  a1[7] = v10;
  a1[8] = v11;
  uint64_t v15 = sub_252830F98();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  return a1;
}

void *sub_2527AB9A4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v6 = a2[3];
  unint64_t v7 = a2[4];
  sub_252782DC8(v6, v7);
  uint64_t v8 = a1[3];
  unint64_t v9 = a1[4];
  a1[3] = v6;
  a1[4] = v7;
  sub_252782E20(v8, v9);
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 36);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_252830F98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_2527ABAAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_252830F98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_2527ABB48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a1 + 24);
  unint64_t v9 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v7;
  sub_252782E20(v8, v9);
  uint64_t v10 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 36);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_252830F98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_2527ABC0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2527ABC20);
}

uint64_t sub_2527ABC20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_252830F98();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2527ABCD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2527ABCE4);
}

uint64_t sub_2527ABCE4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_252830F98();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2527ABD8C()
{
  uint64_t result = sub_252830F98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2527ABE40(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[1];
    unint64_t v9 = a2[2];
    swift_bridgeObjectRetain();
    sub_252782DC8(v8, v9);
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v10 = *(int *)(a3 + 32);
    uint64_t v11 = a1 + v10;
    uint64_t v12 = (uint64_t)a2 + v10;
    uint64_t v13 = sub_252830F98();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  return a1;
}

uint64_t sub_2527ABF44(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  sub_252782E20(*(void *)(a1 + 8), *(void *)(a1 + 16));
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_252830F98();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_2527ABFC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  unint64_t v7 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_252782DC8(v6, v7);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_252830F98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t sub_2527AC080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 8);
  unint64_t v7 = *(void *)(a2 + 16);
  sub_252782DC8(v6, v7);
  uint64_t v8 = *(void *)(a1 + 8);
  unint64_t v9 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  sub_252782E20(v8, v9);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v10;
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_252830F98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t sub_2527AC150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_252830F98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_2527AC1EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_252782E20(v6, v7);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_252830F98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_2527AC2A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2527AC2B4);
}

uint64_t sub_2527AC2B4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_252830F98();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2527AC364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2527AC378);
}

void *sub_2527AC378(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_252830F98();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 32);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2527AC420()
{
  uint64_t result = sub_252830F98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_2527AC4DC()
{
  unint64_t result = qword_269C1DA50;
  if (!qword_269C1DA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DA50);
  }
  return result;
}

unint64_t sub_2527AC534()
{
  unint64_t result = qword_269C1DA58;
  if (!qword_269C1DA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DA58);
  }
  return result;
}

unint64_t sub_2527AC58C()
{
  unint64_t result = qword_269C1DA60;
  if (!qword_269C1DA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DA60);
  }
  return result;
}

uint64_t sub_2527AC5E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_fileHandle;
  *(void *)(v6 + OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_fileHandle) = 0;
  *(unsigned char *)(v6 + OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_atEof) = 0;
  *(void *)(v6 + OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_chunkSize) = a6;
  uint64_t v9 = v6 + OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_encoding;
  uint64_t v10 = sub_252831308();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, a5, v10);
  uint64_t v12 = (void *)sub_252831298();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(self, sel_fileHandleForReadingAtPath_, v12);

  if (!v13)
  {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a5, v10);
    swift_bridgeObjectRelease();
LABEL_9:
    uint64_t v20 = *(void **)(v6 + v8);
    *(void *)(v6 + v8) = 0;

    *(_OWORD *)(v6 + OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_delimData) = xmmword_252834DF0;
    *(void *)(v6 + OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_buffer) = 0;
    swift_release();
    return 0;
  }
  uint64_t v14 = sub_2528312B8();
  unint64_t v16 = v15;
  swift_bridgeObjectRelease();
  if (v16 >> 60 == 15)
  {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a5, v10);
LABEL_8:

    goto LABEL_9;
  }
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF990]), sel_initWithCapacity_, a6);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a5, v10);
  if (!v17)
  {
    sub_252783CC0(v14, v16);
    goto LABEL_8;
  }
  uint64_t v18 = *(void **)(v6 + v8);
  *(void *)(v6 + v8) = v13;

  unint64_t v19 = (uint64_t *)(v6 + OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_delimData);
  *unint64_t v19 = v14;
  v19[1] = v16;
  *(void *)(v6 + OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_buffer) = v17;
  return v6;
}

uint64_t sub_2527AC834()
{
  uint64_t v1 = OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_fileHandle;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_fileHandle), sel_closeFile);
  uint64_t v2 = *(void **)(v0 + v1);
  *(void *)(v0 + v1) = 0;

  uint64_t v3 = v0 + OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_encoding;
  uint64_t v4 = sub_252831308();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  sub_252783CC0(*(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_delimData), *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_delimData + 8));
  uint64_t v5 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v6 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v5, v6);
}

uint64_t sub_2527AC92C()
{
  return type metadata accessor for StreamReader();
}

uint64_t type metadata accessor for StreamReader()
{
  uint64_t result = qword_269C1DA68;
  if (!qword_269C1DA68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2527AC980()
{
  uint64_t result = sub_252831308();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_2527ACA3C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_252831308();
  id result = (id)MEMORY[0x270FA5388](v5);
  uint64_t v9 = OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_fileHandle;
  if (!*(void *)(a1 + OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_fileHandle))
  {
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_atEof;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_atEof) == 1)
  {
    *a2 = 0;
    a2[1] = 0;
    return result;
  }
  uint64_t v11 = *(void **)(a1 + OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_buffer);
  if (!v11) {
    goto LABEL_23;
  }
  unint64_t v12 = *(void *)(a1 + OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_delimData + 8);
  if (v12 >> 60 == 15)
  {
LABEL_24:
    __break(1u);
    JUMPOUT(0x2527ACE70);
  }
  uint64_t v45 = v8;
  uint64_t v46 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v47 = result;
  os_log_type_t v48 = a2;
  uint64_t v50 = *(void *)(a1 + OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_delimData);
  id v13 = (void *)sub_252830C48();
  uint64_t v14 = (char *)objc_msgSend(v11, sel_rangeOfData_options_range_, v13, 0, 0, objc_msgSend(v11, sel_length));
  uint64_t v16 = v15;

  if (v14 != (char *)sub_252830758())
  {
LABEL_17:
    id v33 = objc_msgSend(v11, sel_subdataWithRange_, 0, v14);
    uint64_t v34 = sub_252830C68();
    unint64_t v36 = v35;

    (*(void (**)(char *, uint64_t, id))(v45 + 16))(v46, a1 + OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_encoding, v47);
    uint64_t v37 = sub_2528312C8();
    uint64_t v39 = v38;
    sub_252782E20(v34, v36);
    if (!__OFADD__(v14, v16))
    {
      id result = objc_msgSend(v11, sel_replaceBytesInRange_withBytes_length_, 0, &v14[v16], 0, 0);
      os_log_type_t v40 = v48;
      *os_log_type_t v48 = v37;
      v40[1] = v39;
      return result;
    }
    goto LABEL_21;
  }
  unint64_t v49 = v12;
  uint64_t v43 = v10;
  uint64_t v44 = v2;
  uint64_t v17 = OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_chunkSize;
  while (2)
  {
    uint64_t v21 = *(void **)(a1 + v9);
    if (!v21) {
      goto LABEL_22;
    }
    id v22 = objc_msgSend(v21, sel_readDataOfLength_, *(void *)(a1 + v17));
    uint64_t v23 = sub_252830C68();
    unint64_t v25 = v24;

    switch(v25 >> 62)
    {
      case 1uLL:
        if ((int)v23 == v23 >> 32) {
          goto LABEL_15;
        }
        goto LABEL_9;
      case 2uLL:
        if (*(void *)(v23 + 16) == *(void *)(v23 + 24)) {
          goto LABEL_15;
        }
        goto LABEL_9;
      case 3uLL:
        goto LABEL_15;
      default:
        if ((v25 & 0xFF000000000000) != 0)
        {
LABEL_9:
          uint64_t v18 = (void *)sub_252830C48();
          objc_msgSend(v11, sel_appendData_, v18);

          unint64_t v19 = (void *)sub_252830C48();
          uint64_t v14 = (char *)objc_msgSend(v11, sel_rangeOfData_options_range_, v19, 0, 0, objc_msgSend(v11, sel_length));
          uint64_t v16 = v20;
          sub_252782E20(v23, v25);

          if (v14 != (char *)sub_252830758()) {
            goto LABEL_17;
          }
          continue;
        }
LABEL_15:
        *(unsigned char *)(a1 + v43) = 1;
        if ((uint64_t)objc_msgSend(v11, sel_length) < 1)
        {
          id result = (id)sub_252782E20(v23, v25);
          BOOL v41 = v48;
          *os_log_type_t v48 = 0;
          v41[1] = 0;
        }
        else
        {
          uint64_t v26 = sub_252830C68();
          unint64_t v28 = v27;
          (*(void (**)(char *, uint64_t, id))(v45 + 16))(v46, a1 + OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_encoding, v47);
          uint64_t v29 = sub_2528312C8();
          uint64_t v31 = v30;
          sub_252782E20(v26, v28);
          objc_msgSend(v11, sel_setLength_, 0);
          id result = (id)sub_252782E20(v23, v25);
          os_log_type_t v32 = v48;
          *os_log_type_t v48 = v29;
          v32[1] = v31;
        }
        return result;
    }
  }
}

id sub_2527ACE80()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFB210]), sel_init);
  qword_269C2D208 = (uint64_t)result;
  return result;
}

uint64_t sub_2527ACEB4(void *a1)
{
  unint64_t v1 = objc_msgSend(a1, sel_aa_primaryAppleAccount);
  if (!v1)
  {
    if (qword_269C1CEB8 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_252831158();
    __swift_project_value_buffer(v6, (uint64_t)qword_269C2D298);
    uint64_t v2 = sub_252831138();
    os_log_type_t v7 = sub_252831618();
    if (os_log_type_enabled(v2, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_25277D000, v2, v7, "Unable to retrieve User Primary Apple Account information", v8, 2u);
      MEMORY[0x2533BE070](v8, -1, -1);
    }
    goto LABEL_8;
  }
  uint64_t v2 = v1;
  id v3 = [v1 aa_personID];
  if (!v3)
  {
LABEL_8:

    return 0;
  }
  uint64_t v4 = v3;
  uint64_t v5 = sub_2528312A8();

  return v5;
}

uint64_t sub_2527ACFEC(uint64_t a1)
{
  *(void *)(v1 + 456) = a1;
  return MEMORY[0x270FA2498](sub_2527AD00C, 0, 0);
}

uint64_t sub_2527AD00C()
{
  uint64_t v1 = (void *)v0[57];
  v0[2] = v0;
  v0[7] = v0 + 55;
  v0[3] = sub_2527AD108;
  uint64_t v2 = swift_continuation_init();
  v0[40] = MEMORY[0x263EF8330];
  v0[41] = 0x40000000;
  v0[42] = sub_2527ADEC4;
  v0[43] = &block_descriptor;
  v0[44] = v2;
  objc_msgSend(v1, sel_aa_primaryAppleAccountWithCompletion_, v0 + 40);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2527AD108()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 464) = v1;
  if (v1) {
    uint64_t v2 = sub_2527ADB24;
  }
  else {
    uint64_t v2 = sub_2527AD218;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2527AD218()
{
  uint64_t v1 = *(void **)(v0 + 440);
  *(void *)(v0 + 472) = v1;
  if (!v1)
  {
    if (qword_269C1CEB8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_252831158();
    __swift_project_value_buffer(v14, (uint64_t)qword_269C2D298);
    uint64_t v15 = sub_252831138();
    os_log_type_t v16 = sub_252831618();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_25277D000, v15, v16, "IDMS | Couldn't find primary apple account to generate GSToken.", v17, 2u);
      MEMORY[0x2533BE070](v17, -1, -1);
    }
    goto LABEL_22;
  }
  id v2 = objc_msgSend(*(id *)(v0 + 456), sel_aida_accountForiCloudAccount_, v1);
  *(void *)(v0 + 480) = v2;
  if (!v2)
  {
    if (qword_269C1CEB8 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_252831158();
    __swift_project_value_buffer(v29, (uint64_t)qword_269C2D298);
    uint64_t v15 = sub_252831138();
    os_log_type_t v30 = sub_252831618();
    if (os_log_type_enabled(v15, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_25277D000, v15, v30, "IDMS | Unknown account type or account store, failed to generate GSToken.", v31, 2u);
      MEMORY[0x2533BE070](v31, -1, -1);
    }

LABEL_22:
    uint64_t v11 = 0;
    uint64_t v13 = 0;
    goto LABEL_23;
  }
  id v3 = *(void **)(v0 + 456);
  id v4 = v2;
  uint64_t v5 = (void *)sub_252831298();
  id v6 = objc_msgSend(v3, sel_credentialForAccount_serviceID_, v4, v5);
  *(void *)(v0 + 488) = v6;

  if (v6)
  {
    id v7 = objc_msgSend(v6, sel_token);
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v10 = *(void **)(v0 + 472);
      uint64_t v9 = *(void **)(v0 + 480);
      uint64_t v11 = sub_2528312A8();
      uint64_t v13 = v12;

LABEL_23:
      os_log_type_t v32 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
      return v32(v11, v13);
    }
  }
  if (qword_269C1CEB8 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_252831158();
  *(void *)(v0 + 496) = __swift_project_value_buffer(v18, (uint64_t)qword_269C2D298);
  unint64_t v19 = sub_252831138();
  os_log_type_t v20 = sub_252831618();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl(&dword_25277D000, v19, v20, "IDMS | User account doesn't contain GSToken, so renewing tokens", v21, 2u);
    MEMORY[0x2533BE070](v21, -1, -1);
  }
  id v34 = *(id *)(v0 + 456);

  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DA80);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_252835580;
  *(void *)(v0 + 400) = sub_2528312A8();
  *(void *)(v0 + 408) = v23;
  sub_252831778();
  id v24 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, 0);
  *(void *)(inited + 96) = sub_2527AE03C();
  *(void *)(inited + 72) = v24;
  *(void *)(v0 + 416) = sub_2528312A8();
  *(void *)(v0 + 424) = v25;
  sub_252831778();
  *(void *)(inited + 168) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF40);
  *(void *)(inited + 144) = &unk_2702C46C0;
  sub_252786FAC(inited);
  id v26 = v4;
  uint64_t v27 = sub_252831218();
  *(void *)(v0 + 504) = v27;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 80) = v0;
  *(void *)(v0 + 120) = v0 + 432;
  *(void *)(v0 + 88) = sub_2527AD7B0;
  uint64_t v28 = swift_continuation_init();
  *(void *)(v0 + 360) = MEMORY[0x263EF8330];
  *(void *)(v0 + 368) = 0x40000000;
  *(void *)(v0 + 376) = sub_2527ADF88;
  *(void *)(v0 + 384) = &block_descriptor_1;
  *(void *)(v0 + 392) = v28;
  objc_msgSend(v34, sel_renewCredentialsForAccount_options_completion_, v26, v27, v0 + 360);
  return MEMORY[0x270FA23F0](v0 + 80);
}

uint64_t sub_2527AD7B0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 512) = v1;
  if (v1) {
    id v2 = sub_2527ADC54;
  }
  else {
    id v2 = sub_2527AD8C0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2527AD8C0()
{
  uint64_t v1 = *(void **)(v0 + 480);
  uint64_t v2 = *(void *)(v0 + 432);

  if (!v2)
  {
    uint64_t v10 = *(void **)(v0 + 488);
    uint64_t v11 = *(void **)(v0 + 456);
    id v12 = *(id *)(v0 + 480);
    uint64_t v13 = (void *)sub_252831298();
    id v14 = objc_msgSend(v11, sel_credentialForAccount_serviceID_, v12, v13);

    if (v14)
    {
      id v15 = objc_msgSend(v14, sel_token);
      if (v15)
      {
        os_log_type_t v16 = v15;
        uint64_t v18 = *(void **)(v0 + 472);
        uint64_t v17 = *(void **)(v0 + 480);
        uint64_t v19 = sub_2528312A8();
        uint64_t v21 = v20;

        goto LABEL_13;
      }
    }
    id v22 = sub_252831138();
    os_log_type_t v23 = sub_252831618();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v8 = *(void **)(v0 + 472);
    uint64_t v25 = *(void **)(v0 + 480);
    if (v24)
    {
      id v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v26 = 0;
      _os_log_impl(&dword_25277D000, v22, v23, "IDMS | Error: still no grandslam token even after calling renew credentials.", v26, 2u);
      MEMORY[0x2533BE070](v26, -1, -1);

      goto LABEL_12;
    }

LABEL_11:
    goto LABEL_12;
  }
  id v3 = sub_252831138();
  os_log_type_t v4 = sub_252831618();
  BOOL v5 = os_log_type_enabled(v3, v4);
  id v7 = *(void **)(v0 + 480);
  id v6 = *(void **)(v0 + 488);
  uint64_t v8 = *(void **)(v0 + 472);
  if (!v5)
  {

    goto LABEL_11;
  }
  uint64_t v9 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v9 = 0;
  _os_log_impl(&dword_25277D000, v3, v4, "IDMS | Couldn't renew credentials while constructing GSToken.", v9, 2u);
  MEMORY[0x2533BE070](v9, -1, -1);

LABEL_12:
  uint64_t v19 = 0;
  uint64_t v21 = 0;
LABEL_13:
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v27(v19, v21);
}

uint64_t sub_2527ADB24()
{
  uint64_t v1 = *(void **)(v0 + 464);
  swift_willThrow();

  if (qword_269C1CEB8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_252831158();
  __swift_project_value_buffer(v2, (uint64_t)qword_269C2D298);
  id v3 = sub_252831138();
  os_log_type_t v4 = sub_252831618();
  if (os_log_type_enabled(v3, v4))
  {
    BOOL v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v5 = 0;
    _os_log_impl(&dword_25277D000, v3, v4, "IDMS | Couldn't find primary apple account to generate GSToken.", v5, 2u);
    MEMORY[0x2533BE070](v5, -1, -1);
  }

  id v6 = *(uint64_t (**)(void, void))(v0 + 8);
  return v6(0, 0);
}

uint64_t sub_2527ADC54()
{
  uint64_t v2 = (void *)v0[63];
  uint64_t v1 = (void *)v0[64];
  id v3 = (void *)v0[60];
  swift_willThrow();

  id v4 = v1;
  id v5 = v1;
  id v6 = sub_252831138();
  os_log_type_t v7 = sub_252831618();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (void *)v0[64];
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[56] = v12;
    sub_252831698();
    void *v10 = v12;

    _os_log_impl(&dword_25277D000, v6, v7, "IDMS | Error renewing credentials while constructing GSToken : %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D030);
    swift_arrayDestroy();
    MEMORY[0x2533BE070](v10, -1, -1);
    MEMORY[0x2533BE070](v9, -1, -1);
  }
  else
  {
    uint64_t v13 = (void *)v0[64];
  }
  id v14 = (void *)v0[61];
  id v15 = sub_252831138();
  os_log_type_t v16 = sub_252831618();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v18 = (void *)v0[59];
  uint64_t v19 = (void *)v0[60];
  if (v17)
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_25277D000, v15, v16, "IDMS | Error: still no grandslam token even after calling renew credentials.", v20, 2u);
    MEMORY[0x2533BE070](v20, -1, -1);
  }
  else
  {

    id v14 = v18;
  }

  uint64_t v21 = (uint64_t (*)(void, void))v0[1];
  return v21(0, 0);
}

uint64_t sub_2527ADEC4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4C0);
    uint64_t v5 = swift_allocError();
    *id v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    id v11 = a2;
    uint64_t v8 = *(void *)(*(void *)(v3 + 64) + 40);
    id v9 = a2;
    sub_2527AE07C((uint64_t)&v11, v8);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_2527ADF88(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4C0);
    uint64_t v5 = swift_allocError();
    *id v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    **(void **)(*(void *)(v3 + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

unint64_t sub_2527AE03C()
{
  unint64_t result = qword_269C1D040;
  if (!qword_269C1D040)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269C1D040);
  }
  return result;
}

uint64_t sub_2527AE07C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DA88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t static UtilityServices.utilityPeakPeriods(utilityID:tariffID:start:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *id v15 = v7;
  v15[1] = sub_252786A30;
  return sub_2527E9208(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t UtilityPeaks.start.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UtilityPeaks.end.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UtilityPeaks.periods.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UtilityPeaks.descriptor.getter()
{
  if (!*(void *)(v0 + 48)) {
    return 0;
  }
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

void UtilityPeaks.tariffType.getter(char *a1@<X8>)
{
  if (v1[6])
  {
    uint64_t v4 = v1[9];
    uint64_t v3 = v1[10];
    uint64_t v5 = 5590868;
    char v6 = byte_2702C4738;
    unint64_t v7 = 0xE300000000000000;
    uint64_t v8 = 5590868;
    switch(byte_2702C4738)
    {
      case 1:
        unint64_t v7 = 0xE600000000000000;
        uint64_t v8 = 0x444552454954;
        break;
      case 2:
        unint64_t v7 = 0xE500000000000000;
        uint64_t v8 = 0x4445584946;
        break;
      case 3:
        unint64_t v7 = 0xE400000000000000;
        uint64_t v8 = 1413565510;
        break;
      case 4:
        uint64_t v8 = 0x524F505055534E55;
        unint64_t v7 = 0xEB00000000444554;
        break;
      default:
        break;
    }
    if (v8 == v4 && v3 == v7) {
      goto LABEL_44;
    }
    char v10 = sub_252831A58();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      unint64_t v11 = 0xE300000000000000;
      char v6 = byte_2702C4739;
      uint64_t v12 = 5590868;
      switch(byte_2702C4739)
      {
        case 1:
          unint64_t v11 = 0xE600000000000000;
          uint64_t v12 = 0x444552454954;
          break;
        case 2:
          unint64_t v11 = 0xE500000000000000;
          uint64_t v12 = 0x4445584946;
          break;
        case 3:
          unint64_t v11 = 0xE400000000000000;
          uint64_t v12 = 1413565510;
          break;
        case 4:
          uint64_t v12 = 0x524F505055534E55;
          unint64_t v11 = 0xEB00000000444554;
          break;
        default:
          break;
      }
      if (v12 == v4 && v3 == v11) {
        goto LABEL_44;
      }
      char v13 = sub_252831A58();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        unint64_t v14 = 0xE300000000000000;
        char v6 = byte_2702C473A;
        uint64_t v15 = 5590868;
        switch(byte_2702C473A)
        {
          case 1:
            unint64_t v14 = 0xE600000000000000;
            uint64_t v15 = 0x444552454954;
            break;
          case 2:
            unint64_t v14 = 0xE500000000000000;
            uint64_t v15 = 0x4445584946;
            break;
          case 3:
            unint64_t v14 = 0xE400000000000000;
            uint64_t v15 = 1413565510;
            break;
          case 4:
            uint64_t v15 = 0x524F505055534E55;
            unint64_t v14 = 0xEB00000000444554;
            break;
          default:
            break;
        }
        if (v15 == v4 && v3 == v14) {
          goto LABEL_44;
        }
        char v16 = sub_252831A58();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0)
        {
          unint64_t v17 = 0xE300000000000000;
          char v6 = byte_2702C473B;
          uint64_t v18 = 5590868;
          switch(byte_2702C473B)
          {
            case 1:
              unint64_t v17 = 0xE600000000000000;
              uint64_t v18 = 0x444552454954;
              break;
            case 2:
              unint64_t v17 = 0xE500000000000000;
              uint64_t v18 = 0x4445584946;
              break;
            case 3:
              unint64_t v17 = 0xE400000000000000;
              uint64_t v18 = 1413565510;
              break;
            case 4:
              uint64_t v18 = 0x524F505055534E55;
              unint64_t v17 = 0xEB00000000444554;
              break;
            default:
              break;
          }
          if (v18 == v4 && v3 == v17) {
            goto LABEL_44;
          }
          char v19 = sub_252831A58();
          swift_bridgeObjectRelease();
          if ((v19 & 1) == 0)
          {
            char v6 = byte_2702C473C;
            unint64_t v20 = 0xE300000000000000;
            switch(byte_2702C473C)
            {
              case 1:
                unint64_t v20 = 0xE600000000000000;
                uint64_t v5 = 0x444552454954;
                break;
              case 2:
                unint64_t v20 = 0xE500000000000000;
                uint64_t v5 = 0x4445584946;
                break;
              case 3:
                unint64_t v20 = 0xE400000000000000;
                uint64_t v5 = 1413565510;
                break;
              case 4:
                uint64_t v5 = 0x524F505055534E55;
                unint64_t v20 = 0xEB00000000444554;
                break;
              default:
                break;
            }
            if (v5 == v4 && v3 == v20)
            {
LABEL_44:
              swift_bridgeObjectRelease();
              goto LABEL_45;
            }
            char v21 = sub_252831A58();
            swift_bridgeObjectRelease();
            if ((v21 & 1) == 0) {
              char v6 = 4;
            }
          }
        }
      }
    }
  }
  else
  {
    char v6 = 4;
  }
LABEL_45:
  *a1 = v6;
}

void *static UtilityTariffType.allCases.getter()
{
  return &unk_2702C4740;
}

uint64_t UtilityTariffType.rawValue.getter()
{
  uint64_t result = 5590868;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x444552454954;
      break;
    case 2:
      uint64_t result = 0x4445584946;
      break;
    case 3:
      uint64_t result = 1413565510;
      break;
    case 4:
      uint64_t result = 0x524F505055534E55;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t UtilityPeaks.metadata.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  uint64_t v4 = v1[7];
  uint64_t v5 = v1[8];
  uint64_t v6 = v1[9];
  uint64_t v7 = v1[10];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_2527AE7BC(v2, v3);
}

uint64_t sub_2527AE7BC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2527AE80C(unsigned __int8 *a1, char *a2)
{
  return sub_2527A6358(*a1, *a2);
}

uint64_t sub_2527AE818()
{
  return sub_252831B18();
}

uint64_t sub_2527AE8F4()
{
  sub_252831258();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2527AE9B8()
{
  return sub_252831B18();
}

uint64_t sub_2527AEA90@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2527B1CAC();
  *a1 = result;
  return result;
}

void sub_2527AEAC0(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE900000000000065;
  uint64_t v3 = 0x7461447472617473;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x65746144646E65;
      goto LABEL_3;
    case 2:
      *a1 = 0x736B616570;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0x617461646174656DLL;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_2527AEB5C()
{
  uint64_t result = 0x7461447472617473;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65746144646E65;
      break;
    case 2:
      uint64_t result = 0x736B616570;
      break;
    case 3:
      uint64_t result = 0x617461646174656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2527AEBEC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2527B1CAC();
  *a1 = result;
  return result;
}

uint64_t sub_2527AEC14(uint64_t a1)
{
  unint64_t v2 = sub_2527AEF28();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527AEC50(uint64_t a1)
{
  unint64_t v2 = sub_2527AEF28();

  return MEMORY[0x270FA00B8](a1, v2);
}

void __swiftcall UtilityPeaks.init(start:end:periods:metadata:)(HomeUtilityServices::UtilityPeaks *__return_ptr retstr, Swift::String start, Swift::String end, Swift::OpaquePointer periods, HomeUtilityServices::RateMetaData_optional *metadata)
{
  Swift::String tariffLabel = metadata->value.tariffLabel;
  retstr->metadata.value.tariffProfileId = metadata->value.tariffProfileId;
  retstr->start = start;
  retstr->end = end;
  retstr->periods = periods;
  retstr->metadata.value.Swift::String tariffLabel = tariffLabel;
  retstr->metadata.value.tariffType = metadata->value.tariffType;
}

uint64_t UtilityPeaks.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DA98);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  uint64_t v25 = v1[3];
  uint64_t v26 = v7;
  uint64_t v8 = v1[4];
  uint64_t v23 = v1[5];
  uint64_t v24 = v8;
  uint64_t v9 = v1[6];
  uint64_t v21 = v1[7];
  uint64_t v22 = v9;
  uint64_t v10 = v1[8];
  uint64_t v20 = v1[9];
  uint64_t v11 = v1[10];
  uint64_t v18 = v10;
  uint64_t v19 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527AEF28();
  sub_252831B38();
  LOBYTE(v28) = 0;
  uint64_t v12 = v27;
  sub_2528319E8();
  if (!v12)
  {
    uint64_t v13 = v23;
    uint64_t v14 = v24;
    uint64_t v16 = v21;
    uint64_t v15 = v22;
    LOBYTE(v28) = 1;
    sub_2528319E8();
    uint64_t v28 = v14;
    char v34 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DAA8);
    sub_2527AF448(&qword_269C1DAB0, (void (*)(void))sub_2527AEF7C);
    sub_252831A18();
    uint64_t v28 = v13;
    uint64_t v29 = v15;
    uint64_t v30 = v16;
    uint64_t v31 = v18;
    uint64_t v32 = v20;
    uint64_t v33 = v19;
    char v34 = 3;
    sub_2527AEFD0();
    sub_2528319D8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2527AEF28()
{
  unint64_t result = qword_269C1DAA0;
  if (!qword_269C1DAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DAA0);
  }
  return result;
}

unint64_t sub_2527AEF7C()
{
  unint64_t result = qword_269C1DAB8;
  if (!qword_269C1DAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DAB8);
  }
  return result;
}

unint64_t sub_2527AEFD0()
{
  unint64_t result = qword_269C1DAC0;
  if (!qword_269C1DAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DAC0);
  }
  return result;
}

uint64_t UtilityPeaks.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DAC8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527AEF28();
  sub_252831B28();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  LOBYTE(v35) = 0;
  uint64_t v9 = sub_252831968();
  uint64_t v11 = v10;
  uint64_t v33 = v9;
  LOBYTE(v35) = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_252831968();
  uint64_t v34 = v13;
  uint64_t v32 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DAA8);
  char v41 = 2;
  sub_2527AF448(&qword_269C1DAD0, (void (*)(void))sub_2527AF4B8);
  swift_bridgeObjectRetain();
  sub_252831998();
  uint64_t v14 = v35;
  char v41 = 3;
  sub_2527AF50C();
  uint64_t v31 = v14;
  swift_bridgeObjectRetain();
  sub_252831958();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v35;
  uint64_t v16 = v36;
  uint64_t v27 = v35;
  uint64_t v28 = v37;
  uint64_t v29 = v38;
  uint64_t v30 = v36;
  uint64_t v25 = v40;
  uint64_t v26 = v39;
  swift_bridgeObjectRetain();
  uint64_t v17 = v34;
  swift_bridgeObjectRetain();
  uint64_t v18 = v31;
  swift_bridgeObjectRetain();
  uint64_t v19 = v16;
  uint64_t v20 = v28;
  uint64_t v21 = v25;
  sub_2527AE7BC(v15, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v33;
  a2[1] = v11;
  a2[2] = v32;
  a2[3] = v17;
  uint64_t v22 = v27;
  a2[4] = v18;
  a2[5] = v22;
  a2[6] = v30;
  a2[7] = v20;
  uint64_t v23 = v26;
  a2[8] = v29;
  a2[9] = v23;
  a2[10] = v21;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_2527AF560(v22, v30);
}

uint64_t sub_2527AF448(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C1DAA8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2527AF4B8()
{
  unint64_t result = qword_269C1DAD8;
  if (!qword_269C1DAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DAD8);
  }
  return result;
}

unint64_t sub_2527AF50C()
{
  unint64_t result = qword_269C1DAE0;
  if (!qword_269C1DAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DAE0);
  }
  return result;
}

uint64_t sub_2527AF560(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2527AF5B0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return UtilityPeaks.init(from:)(a1, a2);
}

uint64_t sub_2527AF5C8(void *a1)
{
  return UtilityPeaks.encode(to:)(a1);
}

uint64_t UtilityPeakPeriod.start.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UtilityPeakPeriod.peakPeriodLabel.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UtilityPeakPeriod.rank.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_2527AF648(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2527A6FB8(*a1, *a2);
}

uint64_t sub_2527AF654()
{
  return sub_252831B18();
}

uint64_t sub_2527AF6E8()
{
  sub_252831258();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2527AF768()
{
  return sub_252831B18();
}

uint64_t sub_2527AF7F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2527B1CF8();
  *a1 = result;
  return result;
}

void sub_2527AF828(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x6C6562616CLL;
  if (v2 != 1)
  {
    uint64_t v5 = 1802396018;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x7472617473;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_2527AF878()
{
  uint64_t v1 = 0x6C6562616CLL;
  if (*v0 != 1) {
    uint64_t v1 = 1802396018;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7472617473;
  }
}

uint64_t sub_2527AF8C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2527B1CF8();
  *a1 = result;
  return result;
}

uint64_t sub_2527AF8EC(uint64_t a1)
{
  unint64_t v2 = sub_2527B0C18();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527AF928(uint64_t a1)
{
  unint64_t v2 = sub_2527B0C18();

  return MEMORY[0x270FA00B8](a1, v2);
}

void __swiftcall UtilityPeakPeriod.init(start:peakPeriodLabel:rank:)(HomeUtilityServices::UtilityPeakPeriod *__return_ptr retstr, Swift::String start, Swift::String peakPeriodLabel, Swift::Int rank)
{
  retstr->start = start;
  retstr->peakPeriodLabel = peakPeriodLabel;
  retstr->rank = rank;
}

uint64_t UtilityPeakPeriod.hash(into:)()
{
  return sub_252831B08();
}

uint64_t UtilityPeakPeriod.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DAE8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  BOOL v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  v10[1] = v1[3];
  v10[2] = v7;
  v10[0] = v1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527B0C18();
  sub_252831B38();
  char v13 = 0;
  uint64_t v8 = v10[3];
  sub_2528319E8();
  if (!v8)
  {
    char v12 = 1;
    sub_2528319E8();
    char v11 = 2;
    sub_252831A08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t UtilityPeakPeriod.hashValue.getter()
{
  return sub_252831B18();
}

uint64_t UtilityPeakPeriod.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DAF8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527B0C18();
  sub_252831B28();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v24 = 0;
  uint64_t v9 = sub_252831968();
  uint64_t v11 = v10;
  uint64_t v21 = v9;
  char v23 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_252831968();
  uint64_t v14 = v13;
  uint64_t v19 = v12;
  char v22 = 2;
  swift_bridgeObjectRetain();
  uint64_t v20 = v14;
  uint64_t v15 = sub_252831988();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v16 = v20;
  *a2 = v21;
  a2[1] = v11;
  a2[2] = v19;
  a2[3] = v16;
  a2[4] = v15;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2527AFEC8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return UtilityPeakPeriod.init(from:)(a1, a2);
}

uint64_t sub_2527AFEE0(void *a1)
{
  return UtilityPeakPeriod.encode(to:)(a1);
}

uint64_t sub_2527AFEF8()
{
  return sub_252831B18();
}

uint64_t sub_2527AFF98()
{
  return sub_252831B08();
}

uint64_t sub_2527B0020()
{
  return sub_252831B18();
}

uint64_t RateMetaData.tariffProfileId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RateMetaData.tariffLabel.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RateMetaData.tariffType.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall RateMetaData.init(tariffProfileId:tariffLabel:tariffType:)(HomeUtilityServices::RateMetaData *__return_ptr retstr, Swift::String tariffProfileId, Swift::String tariffLabel, Swift::String tariffType)
{
  retstr->tariffProfileId = tariffProfileId;
  retstr->Swift::String tariffLabel = tariffLabel;
  retstr->tariffType = tariffType;
}

uint64_t sub_2527B0160()
{
  uint64_t v1 = 0x614C666669726174;
  if (*v0 != 1) {
    uint64_t v1 = 0x7954666669726174;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7250666669726174;
  }
}

uint64_t sub_2527B01D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2527B1D44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2527B01FC(uint64_t a1)
{
  unint64_t v2 = sub_2527B0C6C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527B0238(uint64_t a1)
{
  unint64_t v2 = sub_2527B0C6C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RateMetaData.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DB00);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  void v11[3] = v1[3];
  v11[4] = v7;
  uint64_t v8 = v1[4];
  v11[1] = v1[5];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527B0C6C();
  sub_252831B38();
  char v14 = 0;
  uint64_t v9 = v11[5];
  sub_2528319E8();
  if (!v9)
  {
    char v13 = 1;
    sub_2528319E8();
    char v12 = 2;
    sub_2528319E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RateMetaData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DB10);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527B0C6C();
  sub_252831B28();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v27 = 0;
  uint64_t v9 = sub_252831968();
  uint64_t v11 = v10;
  uint64_t v24 = v9;
  char v26 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_252831968();
  uint64_t v14 = v13;
  uint64_t v22 = v12;
  char v25 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = v14;
  uint64_t v15 = sub_252831968();
  uint64_t v17 = v16;
  uint64_t v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2527B06C8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return RateMetaData.init(from:)(a1, a2);
}

uint64_t sub_2527B06E0(void *a1)
{
  return RateMetaData.encode(to:)(a1);
}

HomeUtilityServices::UtilityTariffType_optional __swiftcall UtilityTariffType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_252831918();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_2527B0754(unsigned __int8 *a1, char *a2)
{
  return sub_2527A6CC8(*a1, *a2);
}

uint64_t sub_2527B0760()
{
  return sub_252831B18();
}

uint64_t sub_2527B0848()
{
  sub_252831258();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2527B0918()
{
  return sub_252831B18();
}

HomeUtilityServices::UtilityTariffType_optional sub_2527B09FC(Swift::String *a1)
{
  return UtilityTariffType.init(rawValue:)(*a1);
}

void sub_2527B0A08(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 5590868;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x444552454954;
      goto LABEL_3;
    case 2:
      *a1 = 0x4445584946;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 1413565510;
      a1[1] = 0xE400000000000000;
      break;
    case 4:
      *a1 = 0x524F505055534E55;
      a1[1] = 0xEB00000000444554;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_2527B0AB4()
{
  return sub_2528314B8();
}

uint64_t sub_2527B0B14()
{
  return sub_252831498();
}

void sub_2527B0B64(void *a1@<X8>)
{
  *a1 = &unk_2702C48E8;
}

BOOL _s19HomeUtilityServices0B10PeakPeriodV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  BOOL v8 = *a1 == *a2 && a1[1] == a2[1];
  if (v8 || (char v9 = sub_252831A58(), result = 0, (v9 & 1) != 0))
  {
    if (v2 == v5 && v3 == v6) {
      return v4 == v7;
    }
    char v12 = sub_252831A58();
    BOOL result = 0;
    if (v12) {
      return v4 == v7;
    }
  }
  return result;
}

unint64_t sub_2527B0C18()
{
  unint64_t result = qword_269C1DAF0;
  if (!qword_269C1DAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DAF0);
  }
  return result;
}

unint64_t sub_2527B0C6C()
{
  unint64_t result = qword_269C1DB08;
  if (!qword_269C1DB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DB08);
  }
  return result;
}

unint64_t sub_2527B0CC4()
{
  unint64_t result = qword_269C1DB18;
  if (!qword_269C1DB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DB18);
  }
  return result;
}

unint64_t sub_2527B0D1C()
{
  unint64_t result = qword_269C1DB20;
  if (!qword_269C1DB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DB20);
  }
  return result;
}

unint64_t sub_2527B0D74()
{
  unint64_t result = qword_269C1DB28;
  if (!qword_269C1DB28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C1DB30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DB28);
  }
  return result;
}

uint64_t destroy for UtilityPeaks(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for UtilityPeaks(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  uint64_t v6 = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    a1[5] = a2[5];
    a1[6] = v6;
    uint64_t v7 = a2[8];
    a1[7] = a2[7];
    a1[8] = v7;
    uint64_t v8 = a2[9];
    uint64_t v9 = a2[10];
    a1[9] = v8;
    a1[10] = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 7) = v10;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  }
  return a1;
}

void *assignWithCopy for UtilityPeaks(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 5;
  uint64_t v5 = a2 + 5;
  uint64_t v6 = a2[6];
  if (a1[6])
  {
    if (v6)
    {
      a1[5] = a2[5];
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[7] = a2[7];
      a1[8] = a2[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[9] = a2[9];
      a1[10] = a2[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2527B1074((uint64_t)(a1 + 5));
      long long v8 = *(_OWORD *)(a2 + 7);
      long long v7 = *(_OWORD *)(a2 + 9);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 7) = v8;
      *(_OWORD *)(a1 + 9) = v7;
    }
  }
  else if (v6)
  {
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    a1[9] = a2[9];
    a1[10] = a2[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *v5;
    long long v10 = *(_OWORD *)(a2 + 9);
    *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 9) = v10;
    *uint64_t v4 = v9;
  }
  return a1;
}

uint64_t sub_2527B1074(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for UtilityPeaks(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 48)) {
    goto LABEL_5;
  }
  uint64_t v6 = *(void *)(a2 + 48);
  if (!v6)
  {
    sub_2527B1074(a1 + 40);
LABEL_5:
    long long v9 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v9;
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    return a1;
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UtilityPeaks(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UtilityPeaks(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UtilityPeaks()
{
  return &type metadata for UtilityPeaks;
}

uint64_t destroy for TAFAuthorizationEndpoints()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for UtilityPeakPeriod(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for UtilityPeakPeriod(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for UtilityPeakPeriod(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for UtilityPeakPeriod(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UtilityPeakPeriod(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UtilityPeakPeriod()
{
  return &type metadata for UtilityPeakPeriod;
}

uint64_t destroy for RateMetaData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for RateMetaData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RateMetaData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for RateMetaData(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RateMetaData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RateMetaData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RateMetaData()
{
  return &type metadata for RateMetaData;
}

unsigned char *storeEnumTagSinglePayload for UtilityTariffType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2527B173CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UtilityTariffType()
{
  return &type metadata for UtilityTariffType;
}

ValueMetadata *type metadata accessor for RateMetaData.CodingKeys()
{
  return &type metadata for RateMetaData.CodingKeys;
}

unsigned char *_s19HomeUtilityServices12RateMetaDataV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2527B1858);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UtilityPeakPeriod.CodingKeys()
{
  return &type metadata for UtilityPeakPeriod.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for UtilityPeaks.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2527B195CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UtilityPeaks.CodingKeys()
{
  return &type metadata for UtilityPeaks.CodingKeys;
}

unint64_t sub_2527B1998()
{
  unint64_t result = qword_269C1DB38;
  if (!qword_269C1DB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DB38);
  }
  return result;
}

unint64_t sub_2527B19F0()
{
  unint64_t result = qword_269C1DB40;
  if (!qword_269C1DB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DB40);
  }
  return result;
}

unint64_t sub_2527B1A48()
{
  unint64_t result = qword_269C1DB48;
  if (!qword_269C1DB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DB48);
  }
  return result;
}

unint64_t sub_2527B1AA0()
{
  unint64_t result = qword_269C1DB50;
  if (!qword_269C1DB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DB50);
  }
  return result;
}

unint64_t sub_2527B1AF8()
{
  unint64_t result = qword_269C1DB58;
  if (!qword_269C1DB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DB58);
  }
  return result;
}

unint64_t sub_2527B1B50()
{
  unint64_t result = qword_269C1DB60;
  if (!qword_269C1DB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DB60);
  }
  return result;
}

unint64_t sub_2527B1BA8()
{
  unint64_t result = qword_269C1DB68;
  if (!qword_269C1DB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DB68);
  }
  return result;
}

unint64_t sub_2527B1C00()
{
  unint64_t result = qword_269C1DB70;
  if (!qword_269C1DB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DB70);
  }
  return result;
}

unint64_t sub_2527B1C58()
{
  unint64_t result = qword_269C1DB78;
  if (!qword_269C1DB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DB78);
  }
  return result;
}

uint64_t sub_2527B1CAC()
{
  unint64_t v0 = sub_252831918();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_2527B1CF8()
{
  unint64_t v0 = sub_252831918();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_2527B1D44(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7250666669726174 && a2 == 0xEF6449656C69666FLL;
  if (v2 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614C666669726174 && a2 == 0xEB000000006C6562 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7954666669726174 && a2 == 0xEA00000000006570)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_2527B1EE4()
{
  unint64_t result = qword_269C1DB80;
  if (!qword_269C1DB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DB80);
  }
  return result;
}

unint64_t sub_2527B1F3C()
{
  return 0xD000000000000012;
}

uint64_t sub_2527B1F58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2527B3C58(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2527B1F84(uint64_t a1)
{
  unint64_t v2 = sub_2527B3A28();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527B1FC0(uint64_t a1)
{
  unint64_t v2 = sub_2527B3A28();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2527B1FFC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DB98);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527B3A28();
  sub_252831B28();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v9 = sub_252831968();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_2527B2174(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DBA8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527B3A28();
  sub_252831B38();
  sub_2528319E8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_2527B22AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[10] = a6;
  v7[11] = a7;
  v7[8] = a4;
  v7[9] = a5;
  v7[6] = a2;
  v7[7] = a3;
  v7[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v7[12] = swift_task_alloc();
  uint64_t v9 = sub_2528307F8();
  v7[13] = v9;
  v7[14] = *(void *)(v9 - 8);
  v7[15] = swift_task_alloc();
  uint64_t v10 = (void *)swift_task_alloc();
  v7[16] = v10;
  void *v10 = v7;
  v10[1] = sub_2527B23DC;
  return sub_2527BAEF8(a7);
}

uint64_t sub_2527B23DC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2527B24D8, 0, 0);
}

uint64_t sub_2527B24D8()
{
  uint64_t KeyPath = swift_getKeyPath();
  v0[17] = KeyPath;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[18] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2527B2598;
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[8];
  uint64_t v8 = v0[5];
  uint64_t v9 = v0[6];
  return sub_2527DC2E0(v3, v8, v9, v6, v7, v4, v5, KeyPath);
}

uint64_t sub_2527B2598()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_2527B26B0, 0, 0);
}

uint64_t sub_2527B26B0()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[12];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_2527A5E98(v3);
    if (qword_269C1CEF8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D358);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable to generate request URL for Auth Token Refresh", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }

    type metadata accessor for NetworkError();
    sub_2527B3838();
    swift_allocError();
    *uint64_t v8 = 0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[15], v3, v1);
    sub_252804F18(0xD00000000000003FLL, 0x800000025283BE90, (uint8_t *)0xD00000000000001ELL, 0x800000025283BED0);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[19] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_2527B2940;
    uint64_t v12 = v0[15];
    return MEMORY[0x270EF1EB0](v12, 0);
  }
}

uint64_t sub_2527B2940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[20] = a1;
  v5[21] = a2;
  v5[22] = a3;
  v5[23] = v3;
  swift_task_dealloc();
  if (v3) {
    os_log_type_t v6 = sub_2527B37B0;
  }
  else {
    os_log_type_t v6 = sub_2527B2A58;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_2527B2A58()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    id v3 = *(id *)(v0 + 176);
    sub_252805814(0xD000000000000024, (char *)0x800000025283BEF0, (unint64_t)objc_msgSend(v2, sel_statusCode), qword_2702C4910);
    id v4 = objc_msgSend(v2, sel_statusCode);
    switch((unint64_t)v4)
    {
      case 0x190uLL:
        if (qword_269C1CEF8 != -1) {
          swift_once();
        }
        uint64_t v5 = sub_252831158();
        __swift_project_value_buffer(v5, (uint64_t)qword_269C2D358);
        os_log_type_t v6 = sub_252831138();
        os_log_type_t v7 = sub_252831618();
        if (os_log_type_enabled(v6, v7))
        {
          uint64_t v8 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v8 = 0;
          _os_log_impl(&dword_25277D000, v6, v7, "BAD REQUEST | Check request", v8, 2u);
          MEMORY[0x2533BE070](v8, -1, -1);
        }
        goto LABEL_46;
      case 0x191uLL:
        if (qword_269C1CEF8 != -1) {
          swift_once();
        }
        uint64_t v43 = sub_252831158();
        __swift_project_value_buffer(v43, (uint64_t)qword_269C2D358);
        os_log_type_t v6 = sub_252831138();
        os_log_type_t v44 = sub_252831618();
        if (os_log_type_enabled(v6, v44))
        {
          uint64_t v45 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v45 = 0;
          _os_log_impl(&dword_25277D000, v6, v44, "Request Unauthorized or Access Token Expired.", v45, 2u);
          MEMORY[0x2533BE070](v45, -1, -1);
        }
        goto LABEL_46;
      case 0x192uLL:
      case 0x193uLL:
      case 0x195uLL:
      case 0x196uLL:
      case 0x197uLL:
      case 0x198uLL:
      case 0x199uLL:
      case 0x19AuLL:
      case 0x19BuLL:
      case 0x19DuLL:
      case 0x19EuLL:
      case 0x19FuLL:
      case 0x1A0uLL:
      case 0x1A1uLL:
      case 0x1A2uLL:
      case 0x1A3uLL:
      case 0x1A4uLL:
      case 0x1A5uLL:
      case 0x1A6uLL:
      case 0x1A7uLL:
      case 0x1A8uLL:
      case 0x1A9uLL:
      case 0x1AAuLL:
      case 0x1ABuLL:
      case 0x1ACuLL:
        goto LABEL_23;
      case 0x194uLL:
        if (qword_269C1CEF8 != -1) {
          swift_once();
        }
        uint64_t v46 = sub_252831158();
        __swift_project_value_buffer(v46, (uint64_t)qword_269C2D358);
        os_log_type_t v6 = sub_252831138();
        os_log_type_t v47 = sub_252831618();
        if (os_log_type_enabled(v6, v47))
        {
          os_log_type_t v48 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v48 = 0;
          _os_log_impl(&dword_25277D000, v6, v47, "Subscription Not Found! Proceed to user Off-boarding Actions.", v48, 2u);
          MEMORY[0x2533BE070](v48, -1, -1);
        }
        goto LABEL_46;
      case 0x19CuLL:
        if (qword_269C1CEF8 != -1) {
          swift_once();
        }
        uint64_t v49 = sub_252831158();
        __swift_project_value_buffer(v49, (uint64_t)qword_269C2D358);
        os_log_type_t v6 = sub_252831138();
        os_log_type_t v50 = sub_252831618();
        if (os_log_type_enabled(v6, v50))
        {
          uint64_t v51 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v51 = 0;
          _os_log_impl(&dword_25277D000, v6, v50, "Access Token expired or invalid. Retry after refreshing access token", v51, 2u);
          MEMORY[0x2533BE070](v51, -1, -1);
        }
        goto LABEL_46;
      case 0x1ADuLL:
        if (qword_269C1CEF8 != -1) {
          swift_once();
        }
        uint64_t v52 = sub_252831158();
        __swift_project_value_buffer(v52, (uint64_t)qword_269C2D358);
        os_log_type_t v6 = sub_252831138();
        os_log_type_t v53 = sub_252831618();
        if (os_log_type_enabled(v6, v53))
        {
          os_log_type_t v54 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v54 = 0;
          _os_log_impl(&dword_25277D000, v6, v53, "TOO MANY REQUESTS | Server rejected calls cause of too many requests being made", v54, 2u);
          MEMORY[0x2533BE070](v54, -1, -1);
        }
LABEL_46:
        unint64_t v55 = *(void *)(v0 + 168);
        uint64_t v14 = *(void **)(v0 + 176);
        uint64_t v56 = *(void *)(v0 + 160);
        uint64_t v17 = *(void *)(v0 + 112);
        uint64_t v16 = *(void *)(v0 + 120);
        uint64_t v18 = *(void *)(v0 + 104);

        type metadata accessor for NetworkError();
        sub_2527B3838();
        swift_allocError();
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_252782E20(v56, v55);

        goto LABEL_47;
      default:
        if (v4 == (id)500)
        {
          if (qword_269C1CEF8 != -1) {
            swift_once();
          }
          uint64_t v59 = sub_252831158();
          __swift_project_value_buffer(v59, (uint64_t)qword_269C2D358);
          uint64_t v60 = sub_252831138();
          os_log_type_t v61 = sub_252831618();
          if (os_log_type_enabled(v60, v61))
          {
            os_log_type_t v62 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)os_log_type_t v62 = 0;
            _os_log_impl(&dword_25277D000, v60, v61, "Internal Server Error", v62, 2u);
            MEMORY[0x2533BE070](v62, -1, -1);
          }
          unint64_t v64 = *(void *)(v0 + 168);
          uint64_t v63 = *(void **)(v0 + 176);
          uint64_t v65 = *(void *)(v0 + 160);
          uint64_t v66 = *(void *)(v0 + 112);
          uint64_t v79 = *(void *)(v0 + 104);
          uint64_t v81 = *(void *)(v0 + 120);

          type metadata accessor for NetworkError();
          sub_2527B3838();
          swift_allocError();
          *uint64_t v67 = objc_msgSend(v2, sel_statusCode);
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          sub_252782E20(v65, v64);

          (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v81, v79);
          goto LABEL_48;
        }
        if (v4 != (id)201)
        {
LABEL_23:
          if (qword_269C1CEF8 != -1) {
            swift_once();
          }
          uint64_t v35 = *(void **)(v0 + 176);
          uint64_t v36 = sub_252831158();
          __swift_project_value_buffer(v36, (uint64_t)qword_269C2D358);
          id v37 = v35;
          uint64_t v38 = sub_252831138();
          os_log_type_t v39 = sub_252831618();
          BOOL v40 = os_log_type_enabled(v38, v39);
          char v41 = *(void **)(v0 + 176);
          if (v40)
          {
            uint64_t v42 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v42 = 134217984;
            *(void *)(v0 + 32) = objc_msgSend(v2, sel_statusCode);
            sub_252831698();

            _os_log_impl(&dword_25277D000, v38, v39, "Request failed : Status Code %ld", v42, 0xCu);
            MEMORY[0x2533BE070](v42, -1, -1);
          }
          else
          {
          }
          unint64_t v68 = *(void *)(v0 + 168);
          id v69 = *(void **)(v0 + 176);
          uint64_t v70 = *(void *)(v0 + 160);
          uint64_t v71 = *(void *)(v0 + 112);
          uint64_t v80 = *(void *)(v0 + 104);
          uint64_t v82 = *(void *)(v0 + 120);
          type metadata accessor for NetworkError();
          sub_2527B3838();
          swift_allocError();
          *uint64_t v72 = objc_msgSend(v2, sel_statusCode);
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          sub_252782E20(v70, v68);

          (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v82, v80);
          goto LABEL_48;
        }
        if (qword_269C1CEF8 != -1) {
          swift_once();
        }
        uint64_t v20 = sub_252831158();
        __swift_project_value_buffer(v20, (uint64_t)qword_269C2D358);
        uint64_t v21 = sub_252831138();
        os_log_type_t v22 = sub_252831628();
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v23 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v23 = 0;
          _os_log_impl(&dword_25277D000, v21, v22, "Auth Token refresh Response received", v23, 2u);
          MEMORY[0x2533BE070](v23, -1, -1);
        }
        uint64_t v24 = *(void **)(v0 + 184);

        sub_252830828();
        swift_allocObject();
        sub_252830818();
        sub_2527B3890();
        sub_252830808();
        if (v24)
        {
          char v25 = v24;
          swift_release();
          char v26 = sub_252831138();
          os_log_type_t v27 = sub_252831618();
          if (os_log_type_enabled(v26, v27))
          {
            uint64_t v28 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v28 = 0;
            _os_log_impl(&dword_25277D000, v26, v27, "Error while decoding response from server", v28, 2u);
            MEMORY[0x2533BE070](v28, -1, -1);
          }
          unint64_t v29 = *(void *)(v0 + 168);
          uint64_t v30 = *(void **)(v0 + 176);
          uint64_t v31 = *(void *)(v0 + 160);
          uint64_t v33 = *(void *)(v0 + 112);
          uint64_t v32 = *(void *)(v0 + 120);
          uint64_t v34 = *(void *)(v0 + 104);

          sub_252825138(v25);
          swift_willThrow();
          sub_252782E20(v31, v29);

          (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
          goto LABEL_48;
        }
        unint64_t v73 = *(void *)(v0 + 168);
        uint64_t v74 = *(void **)(v0 + 176);
        uint64_t v75 = *(void *)(v0 + 160);
        (*(void (**)(void, void))(*(void *)(v0 + 112) + 8))(*(void *)(v0 + 120), *(void *)(v0 + 104));

        swift_release();
        sub_252782E20(v75, v73);
        uint64_t v77 = *(void *)(v0 + 16);
        uint64_t v76 = *(void *)(v0 + 24);
        swift_task_dealloc();
        swift_task_dealloc();
        v78 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
        uint64_t result = v78(v77, v76);
        break;
    }
  }
  else
  {
    if (qword_269C1CEF8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_252831158();
    __swift_project_value_buffer(v9, (uint64_t)qword_269C2D358);
    uint64_t v10 = sub_252831138();
    os_log_type_t v11 = sub_252831618();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_25277D000, v10, v11, "Unable to process ServiceLocation Subscription Response.", v12, 2u);
      MEMORY[0x2533BE070](v12, -1, -1);
    }
    unint64_t v13 = *(void *)(v0 + 168);
    uint64_t v14 = *(void **)(v0 + 176);
    uint64_t v15 = *(void *)(v0 + 160);
    uint64_t v17 = *(void *)(v0 + 112);
    uint64_t v16 = *(void *)(v0 + 120);
    uint64_t v18 = *(void *)(v0 + 104);

    type metadata accessor for NetworkError();
    sub_2527B3838();
    swift_allocError();
    *uint64_t v19 = 2;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_252782E20(v15, v13);
LABEL_47:

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
LABEL_48:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v57 = *(uint64_t (**)(void))(v0 + 8);
    return v57();
  }
  return result;
}

uint64_t sub_2527B37B0()
{
  (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

unint64_t sub_2527B3838()
{
  unint64_t result = qword_269C1D948;
  if (!qword_269C1D948)
  {
    type metadata accessor for NetworkError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1D948);
  }
  return result;
}

unint64_t sub_2527B3890()
{
  unint64_t result = qword_269C1DB90;
  if (!qword_269C1DB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DB90);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for InternalUtilityArtwork(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for InternalUtilityArtwork()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for InternalUtilityArtwork(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for InternalUtilityArtwork(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InternalUtilityArtwork(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InternalUtilityArtwork(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthTokenRefreshResponse()
{
  return &type metadata for AuthTokenRefreshResponse;
}

unint64_t sub_2527B3A28()
{
  unint64_t result = qword_269C1DBA0;
  if (!qword_269C1DBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DBA0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AuthTokenRefreshResponse.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2527B3B18);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthTokenRefreshResponse.CodingKeys()
{
  return &type metadata for AuthTokenRefreshResponse.CodingKeys;
}

unint64_t sub_2527B3B54()
{
  unint64_t result = qword_269C1DBB0;
  if (!qword_269C1DBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DBB0);
  }
  return result;
}

unint64_t sub_2527B3BAC()
{
  unint64_t result = qword_269C1DBB8;
  if (!qword_269C1DBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DBB8);
  }
  return result;
}

unint64_t sub_2527B3C04()
{
  unint64_t result = qword_269C1DBC0;
  if (!qword_269C1DBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DBC0);
  }
  return result;
}

uint64_t sub_2527B3C58(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000025283B750)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_252831A58();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_2527B3CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  os_log_type_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_252786D4C;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_2527B3DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DBD8);
  v3[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2527B3E8C, 0, 0);
}

uint64_t sub_2527B3E8C()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  sub_2527B4234(v0[3], v1);
  uint64_t Request = type metadata accessor for GetRequest(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(Request - 8) + 56))(v1, 0, 1, Request);
  id v4 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_269C1DBE0));
  uint64_t v5 = sub_252830F28();
  v0[6] = v5;
  uint64_t v6 = swift_task_alloc();
  v0[7] = v6;
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v2;
  uint64_t v7 = swift_task_alloc();
  v0[8] = v7;
  *(void *)(v7 + 16) = v5;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[9] = v8;
  uint64_t v9 = type metadata accessor for RecordsResponse(0);
  *uint64_t v8 = v0;
  v8[1] = sub_2527B401C;
  uint64_t v10 = v0[2];
  return MEMORY[0x270FA2338](v10, &unk_269C1DBF0, v6, sub_2527B48B8, v7, 0, 0, v9);
}

uint64_t sub_2527B401C()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2527B41AC;
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_2527B4140;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2527B4140()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2527B41AC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2527B4234(uint64_t a1, uint64_t a2)
{
  uint64_t Request = type metadata accessor for GetRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(Request - 8) + 16))(a2, a1, Request);
  return a2;
}

uint64_t sub_2527B4298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_2527B42BC, 0, 0);
}

uint64_t sub_2527B42BC()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = type metadata accessor for RecordsResponse(0);
  *uint64_t v2 = v0;
  v2[1] = sub_2527B43AC;
  uint64_t v4 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v4, 0, 0, 0x293A5F28746567, 0xE700000000000000, sub_2527B48C8, v1, v3);
}

uint64_t sub_2527B43AC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2527B44E8, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_2527B44E8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2527B454C(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_252786A30;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return MEMORY[0x270FA2498](sub_2527B42BC, 0, 0);
}

id sub_2527B4600(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DBF8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_252830F18();
  id result = objc_msgSend(a2, sel_configuration);
  if (result)
  {
    uint64_t v10 = result;
    objc_msgSend(result, sel_setPreferAnonymousRequests_, 1);

    return (id)sub_2528315E8();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2527B4780(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RecordsResponse(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DC00);
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (void *)((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2527B49D8(a1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9[1] = *v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DBF8);
    return sub_252831568();
  }
  else
  {
    sub_2527B4A40((uint64_t)v7, (uint64_t)v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DBF8);
    return sub_252831578();
  }
}

id sub_2527B48B8()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_cancel);
}

id sub_2527B48C8(uint64_t a1)
{
  return sub_2527B4600(a1, *(void **)(v1 + 16));
}

uint64_t sub_2527B48D0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DBF8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_2527B4964(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DBF8);

  return sub_2527B4780(a1);
}

uint64_t sub_2527B49D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DC00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2527B4A40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RecordsResponse(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2527B4AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[16] = a6;
  v7[17] = a7;
  v7[14] = a4;
  v7[15] = a5;
  v7[12] = a2;
  v7[13] = a3;
  v7[11] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v7[18] = swift_task_alloc();
  uint64_t v8 = sub_2528307F8();
  v7[19] = v8;
  v7[20] = *(void *)(v8 - 8);
  v7[21] = swift_task_alloc();
  v7[22] = swift_task_alloc();
  v7[23] = swift_task_alloc();
  v7[24] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  v7[25] = swift_task_alloc();
  uint64_t v9 = sub_252830BD8();
  v7[26] = v9;
  v7[27] = *(void *)(v9 - 8);
  v7[28] = swift_task_alloc();
  v7[29] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2527B4C90, 0, 0);
}

uint64_t sub_2527B4C90()
{
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)(v0 + 240) = KeyPath;
  sub_25279D788(KeyPath, 0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_252781C54(*(void *)(v0 + 200), &qword_26B22BD58);
    if (qword_269C1CEE0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_252831158();
    __swift_project_value_buffer(v5, (uint64_t)qword_269C2D310);
    uint64_t v6 = sub_252831138();
    os_log_type_t v7 = sub_252831618();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_25277D000, v6, v7, "Request URL for Service Location API not found", v8, 2u);
      MEMORY[0x2533BE070](v8, -1, -1);
    }
    uint64_t v9 = *(void *)(v0 + 152);
    uint64_t v10 = *(void *)(v0 + 160);
    uint64_t v11 = *(void *)(v0 + 88);
    swift_release();

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v11, 1, 1, v9);
LABEL_16:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v51 = *(uint64_t (**)(void))(v0 + 8);
    return v51();
  }
  uint64_t v52 = KeyPath;
  uint64_t v13 = *(void *)(v0 + 224);
  uint64_t v12 = *(void *)(v0 + 232);
  uint64_t v14 = *(void *)(v0 + 208);
  uint64_t v15 = *(void *)(v0 + 216);
  uint64_t v16 = *(void *)(v0 + 176);
  uint64_t v17 = *(void *)(v0 + 184);
  uint64_t v19 = *(void *)(v0 + 160);
  uint64_t v18 = *(void *)(v0 + 168);
  uint64_t v20 = *(void *)(v0 + 152);
  uint64_t v53 = *(void *)(v0 + 192);
  uint64_t v54 = *(void *)(v0 + 96);
  uint64_t v55 = *(void *)(v0 + 104);
  (*(void (**)(uint64_t, void, uint64_t))(v15 + 32))(v12, *(void *)(v0 + 200), v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13, v12, v14);
  sub_252830798();
  sub_252804CA4(v16);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
  *(void *)(v0 + 248) = v21;
  *(void *)(v0 + 256) = (v19 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v21(v18, v20);
  os_log_type_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
  v22(v17, v16, v20);
  sub_2528307B8();
  v21(v16, v20);
  v22(v53, v17, v20);
  sub_2528307B8();
  uint64_t v23 = v17;
  uint64_t v24 = v21;
  v21(v23, v20);
  sub_252830778();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_252832B00;
  *(void *)(inited + 32) = 0xD000000000000011;
  *(void *)(inited + 40) = 0x800000025283A590;
  *(void *)(inited + 48) = v54;
  *(void *)(inited + 56) = v55;
  swift_bridgeObjectRetain();
  sub_252786E88(inited);
  char v26 = self;
  os_log_type_t v27 = (void *)sub_252831218();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 80) = 0;
  id v28 = objc_msgSend(v26, sel_dataWithJSONObject_options_error_, v27, 0, v0 + 80);

  id v29 = *(id *)(v0 + 80);
  if (!v28)
  {
    uint64_t v38 = v29;
    os_log_type_t v39 = (void *)sub_252830B18();

    swift_willThrow();
    if (qword_269C1CEE0 != -1) {
      swift_once();
    }
    uint64_t v56 = v24;
    uint64_t v40 = sub_252831158();
    __swift_project_value_buffer(v40, (uint64_t)qword_269C2D310);
    char v41 = sub_252831138();
    os_log_type_t v42 = sub_252831618();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl(&dword_25277D000, v41, v42, "Unable to encode Token request body", v43, 2u);
      MEMORY[0x2533BE070](v43, -1, -1);
    }
    uint64_t v44 = *(void *)(v0 + 232);
    uint64_t v45 = *(void *)(v0 + 208);
    uint64_t v46 = *(void *)(v0 + 216);
    uint64_t v47 = *(void *)(v0 + 192);
    uint64_t v48 = *(void *)(v0 + 152);
    uint64_t v49 = *(void *)(v0 + 160);
    uint64_t v50 = *(void *)(v0 + 88);
    swift_release();

    v56(v47, v48);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(v50, 1, 1, v48);
    goto LABEL_16;
  }
  uint64_t v30 = sub_252830C68();
  unint64_t v32 = v31;

  *(void *)(v0 + 264) = v30;
  *(void *)(v0 + 272) = v32;
  sub_252782DC8(v30, v32);
  sub_2528307D8();
  uint64_t v33 = dword_269C1D8F8;
  uint64_t v34 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v34;
  *uint64_t v34 = v0;
  v34[1] = sub_2527B534C;
  uint64_t v35 = *(void *)(v0 + 192);
  uint64_t v36 = *(void *)(v0 + 144);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C1D8F8 + v33))(v36, v35, v52);
}

uint64_t sub_2527B534C()
{
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v1 = sub_2527B57C8;
  }
  else
  {
    uint64_t v1 = sub_2527B5490;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_2527B5490()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[18];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_252781C54(v3, &qword_26B22BD40);
    if (qword_269C1CEE0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D310);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable to sign subscription creation request", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }
    uint64_t v9 = v0[33];
    unint64_t v8 = v0[34];
    uint64_t v10 = (void (*)(uint64_t, uint64_t))v0[31];
    uint64_t v11 = v0[27];
    uint64_t v23 = v0[26];
    uint64_t v24 = v0[29];
    uint64_t v12 = v0[24];
    uint64_t v14 = v0[19];
    uint64_t v13 = v0[20];
    uint64_t v26 = v0[11];
    swift_release();

    sub_252782E20(v9, v8);
    v10(v12, v14);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v24, v23);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v26, 1, 1, v14);
  }
  else
  {
    uint64_t v16 = v0[33];
    unint64_t v15 = v0[34];
    os_log_type_t v22 = (void (*)(uint64_t, uint64_t))v0[31];
    uint64_t v17 = v0[27];
    uint64_t v25 = v0[26];
    uint64_t v27 = v0[29];
    uint64_t v18 = v0[24];
    uint64_t v19 = v0[11];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v19, v3, v1);
    sub_2528307E8();
    swift_release();
    sub_252782E20(v16, v15);
    v22(v18, v1);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v27, v25);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v19, 0, 1, v1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_2527B57C8()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[20] + 56))(v0[18], 1, 1, v0[19]);
  sub_252781C54(v0[18], &qword_26B22BD40);
  if (qword_269C1CEE0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_252831158();
  __swift_project_value_buffer(v1, (uint64_t)qword_269C2D310);
  uint64_t v2 = sub_252831138();
  os_log_type_t v3 = sub_252831618();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_25277D000, v2, v3, "Unable to sign subscription creation request", v4, 2u);
    MEMORY[0x2533BE070](v4, -1, -1);
  }
  uint64_t v6 = v0[33];
  unint64_t v5 = v0[34];
  os_log_type_t v7 = (void (*)(uint64_t, uint64_t))v0[31];
  uint64_t v8 = v0[27];
  uint64_t v14 = v0[26];
  uint64_t v15 = v0[29];
  uint64_t v9 = v0[24];
  uint64_t v11 = v0[19];
  uint64_t v10 = v0[20];
  uint64_t v16 = v0[11];
  swift_release();

  sub_252782E20(v6, v5);
  v7(v9, v11);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v15, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v16, 1, 1, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_2527B5A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[15] = a6;
  v7[16] = a7;
  v7[13] = a4;
  v7[14] = a5;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v7[17] = swift_task_alloc();
  uint64_t v8 = sub_2528307F8();
  v7[18] = v8;
  v7[19] = *(void *)(v8 - 8);
  v7[20] = swift_task_alloc();
  v7[21] = swift_task_alloc();
  v7[22] = swift_task_alloc();
  v7[23] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  v7[24] = swift_task_alloc();
  uint64_t v9 = sub_252830BD8();
  v7[25] = v9;
  v7[26] = *(void *)(v9 - 8);
  v7[27] = swift_task_alloc();
  v7[28] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2527B5BD4, 0, 0);
}

uint64_t sub_2527B5BD4()
{
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v3 = v0[24];
  uint64_t v5 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t KeyPath = swift_getKeyPath();
  v0[29] = KeyPath;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_252832B00;
  strcpy((char *)(inited + 32), "subscriptionId");
  *(unsigned char *)(inited + 47) = -18;
  *(void *)(inited + 48) = v5;
  *(void *)(inited + 56) = v4;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_252786E88(inited);
  v0[30] = v8;
  sub_25279D788(KeyPath, v8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    sub_252781C54(v0[24], &qword_26B22BD58);
    if (qword_269C1CEE0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_252831158();
    __swift_project_value_buffer(v9, (uint64_t)qword_269C2D310);
    uint64_t v10 = sub_252831138();
    os_log_type_t v11 = sub_252831618();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_25277D000, v10, v11, "Request URL for Service Location API not found", v12, 2u);
      MEMORY[0x2533BE070](v12, -1, -1);
    }

    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[19] + 56))(v0[10], 1, 1, v0[18]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
  else
  {
    uint64_t v31 = KeyPath;
    uint64_t v16 = v0[27];
    uint64_t v15 = v0[28];
    uint64_t v18 = v0[25];
    uint64_t v17 = v0[26];
    uint64_t v20 = v0[21];
    uint64_t v19 = v0[22];
    uint64_t v22 = v0[19];
    uint64_t v21 = v0[20];
    uint64_t v23 = v0[18];
    uint64_t v29 = v0[23];
    (*(void (**)(uint64_t, void, uint64_t))(v17 + 32))(v15, v0[24], v18);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v16, v15, v18);
    sub_252830798();
    sub_252804CA4(v20);
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v0[31] = v24;
    v0[32] = (v22 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v24(v21, v23);
    uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
    v25(v19, v20, v23);
    sub_2528307B8();
    v24(v20, v23);
    v25(v29, v19, v23);
    sub_2528307B8();
    v24(v19, v23);
    sub_252830778();
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C1D8F8 + dword_269C1D8F8);
    uint64_t v26 = (void *)swift_task_alloc();
    v0[33] = v26;
    *uint64_t v26 = v0;
    v26[1] = sub_2527B6058;
    uint64_t v27 = v0[23];
    uint64_t v28 = v0[17];
    return v30(v28, v27, v31);
  }
}

uint64_t sub_2527B6058()
{
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v1 = sub_2527B6454;
  }
  else
  {
    uint64_t v1 = sub_2527B6170;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_2527B6170()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[17];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_252781C54(v3, &qword_26B22BD40);
    if (qword_269C1CEC8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D2C8);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable to sign fetch subscription request", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }
    unint64_t v8 = (void (*)(uint64_t, uint64_t))v0[31];
    uint64_t v20 = v0[28];
    uint64_t v10 = v0[25];
    uint64_t v9 = v0[26];
    uint64_t v11 = v0[23];
    uint64_t v12 = v0[18];

    swift_release();
    swift_bridgeObjectRelease();
    v8(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v20, v10);
    uint64_t v13 = 1;
  }
  else
  {
    uint64_t v14 = (void (*)(uint64_t, uint64_t))v0[31];
    uint64_t v21 = v0[28];
    uint64_t v15 = v0[26];
    uint64_t v19 = v0[25];
    uint64_t v16 = v0[23];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[10], v3, v1);
    sub_2528307E8();
    swift_release();
    swift_bridgeObjectRelease();
    v14(v16, v1);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v21, v19);
    uint64_t v13 = 0;
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[19] + 56))(v0[10], v13, 1, v0[18]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_2527B6454()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[19] + 56))(v0[17], 1, 1, v0[18]);
  sub_252781C54(v0[17], &qword_26B22BD40);
  if (qword_269C1CEC8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_252831158();
  __swift_project_value_buffer(v1, (uint64_t)qword_269C2D2C8);
  uint64_t v2 = sub_252831138();
  os_log_type_t v3 = sub_252831618();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_25277D000, v2, v3, "Unable to sign fetch subscription request", v4, 2u);
    MEMORY[0x2533BE070](v4, -1, -1);
  }
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v0[31];
  uint64_t v12 = v0[28];
  uint64_t v7 = v0[25];
  uint64_t v6 = v0[26];
  uint64_t v8 = v0[23];
  uint64_t v9 = v0[18];

  swift_release();
  swift_bridgeObjectRelease();
  v5(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v7);
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[19] + 56))(v0[10], 1, 1, v0[18]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_2527B6670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[15] = a6;
  v7[16] = a7;
  v7[13] = a4;
  v7[14] = a5;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v7[17] = swift_task_alloc();
  uint64_t v8 = sub_2528307F8();
  v7[18] = v8;
  v7[19] = *(void *)(v8 - 8);
  v7[20] = swift_task_alloc();
  v7[21] = swift_task_alloc();
  v7[22] = swift_task_alloc();
  v7[23] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  v7[24] = swift_task_alloc();
  uint64_t v9 = sub_252830BD8();
  v7[25] = v9;
  v7[26] = *(void *)(v9 - 8);
  v7[27] = swift_task_alloc();
  v7[28] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2527B6830, 0, 0);
}

uint64_t sub_2527B6830()
{
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v3 = v0[24];
  uint64_t v5 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t KeyPath = swift_getKeyPath();
  v0[29] = KeyPath;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_252832B00;
  strcpy((char *)(inited + 32), "subscriptionId");
  *(unsigned char *)(inited + 47) = -18;
  *(void *)(inited + 48) = v5;
  *(void *)(inited + 56) = v4;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_252786E88(inited);
  v0[30] = v8;
  sub_25279D788(KeyPath, v8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    sub_252781C54(v0[24], &qword_26B22BD58);
    if (qword_269C1CEE0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_252831158();
    __swift_project_value_buffer(v9, (uint64_t)qword_269C2D310);
    uint64_t v10 = sub_252831138();
    os_log_type_t v11 = sub_252831618();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_25277D000, v10, v11, "Request URL for Service Location API not found", v12, 2u);
      MEMORY[0x2533BE070](v12, -1, -1);
    }

    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[19] + 56))(v0[10], 1, 1, v0[18]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
  else
  {
    uint64_t v31 = KeyPath;
    uint64_t v16 = v0[27];
    uint64_t v15 = v0[28];
    uint64_t v18 = v0[25];
    uint64_t v17 = v0[26];
    uint64_t v20 = v0[21];
    uint64_t v19 = v0[22];
    uint64_t v22 = v0[19];
    uint64_t v21 = v0[20];
    uint64_t v23 = v0[18];
    uint64_t v29 = v0[23];
    (*(void (**)(uint64_t, void, uint64_t))(v17 + 32))(v15, v0[24], v18);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v16, v15, v18);
    sub_252830798();
    sub_252804CA4(v20);
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v0[31] = v24;
    v0[32] = (v22 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v24(v21, v23);
    uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
    v25(v19, v20, v23);
    sub_2528307B8();
    v24(v20, v23);
    v25(v29, v19, v23);
    sub_2528307B8();
    v24(v19, v23);
    sub_252830778();
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C1D8F8 + dword_269C1D8F8);
    uint64_t v26 = (void *)swift_task_alloc();
    v0[33] = v26;
    *uint64_t v26 = v0;
    v26[1] = sub_2527B6CBC;
    uint64_t v27 = v0[23];
    uint64_t v28 = v0[17];
    return v30(v28, v27, v31);
  }
}

uint64_t sub_2527B6CBC()
{
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v1 = sub_2527B7070;
  }
  else
  {
    uint64_t v1 = sub_2527B6DD4;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_2527B6DD4()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[17];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_252781C54(v3, &qword_26B22BD40);
    if (qword_269C1CEE0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D310);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable to sign revoke subscription request", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }
    unint64_t v8 = (void (*)(uint64_t, uint64_t))v0[31];
    uint64_t v21 = v0[28];
    uint64_t v10 = v0[25];
    uint64_t v9 = v0[26];
    uint64_t v11 = v0[23];
    uint64_t v12 = v0[18];

    swift_release();
    swift_bridgeObjectRelease();
    v8(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v21, v10);
    uint64_t v13 = 1;
  }
  else
  {
    uint64_t v14 = (void (*)(uint64_t, uint64_t))v0[31];
    uint64_t v16 = v0[25];
    uint64_t v15 = v0[26];
    uint64_t v17 = v0[23];
    uint64_t v20 = v0[28];
    uint64_t v22 = v0[10];
    swift_release();
    swift_bridgeObjectRelease();
    v14(v17, v1);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v20, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v22, v3, v1);
    uint64_t v13 = 0;
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[19] + 56))(v0[10], v13, 1, v0[18]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_2527B7070()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[19] + 56))(v0[17], 1, 1, v0[18]);
  sub_252781C54(v0[17], &qword_26B22BD40);
  if (qword_269C1CEE0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_252831158();
  __swift_project_value_buffer(v1, (uint64_t)qword_269C2D310);
  uint64_t v2 = sub_252831138();
  os_log_type_t v3 = sub_252831618();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_25277D000, v2, v3, "Unable to sign revoke subscription request", v4, 2u);
    MEMORY[0x2533BE070](v4, -1, -1);
  }
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v0[31];
  uint64_t v12 = v0[28];
  uint64_t v7 = v0[25];
  uint64_t v6 = v0[26];
  uint64_t v8 = v0[23];
  uint64_t v9 = v0[18];

  swift_release();
  swift_bridgeObjectRelease();
  v5(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v7);
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[19] + 56))(v0[10], 1, 1, v0[18]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

void *sub_2527B728C(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)sub_252831908();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t sub_2527B7330@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_2527B7360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[18] = a8;
  v8[19] = v13;
  unsigned char v8[16] = a6;
  v8[17] = a7;
  v8[14] = a4;
  v8[15] = a5;
  v8[12] = a2;
  v8[13] = a3;
  v8[11] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v8[20] = swift_task_alloc();
  uint64_t v9 = sub_2528307F8();
  v8[21] = v9;
  v8[22] = *(void *)(v9 - 8);
  v8[23] = swift_task_alloc();
  uint64_t v10 = (void *)swift_task_alloc();
  v8[24] = v10;
  void *v10 = v8;
  v10[1] = sub_2527B7498;
  return sub_2527BAEF8(v13);
}

uint64_t sub_2527B7498()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2527B7594, 0, 0);
}

uint64_t sub_2527B7594()
{
  uint64_t v28 = v0;
  uint64_t v1 = v0[13];
  uint64_t v2 = (void *)v0[14];
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  JWToken.init(jwt:)(&v27, v3);
  if (v4)
  {

LABEL_4:
    if (qword_269C1CEE8 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_252831158();
    __swift_project_value_buffer(v6, (uint64_t)qword_269C2D328);
    uint64_t v7 = sub_252831138();
    os_log_type_t v8 = sub_252831618();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_25277D000, v7, v8, "Authorization Token Expired. Refresh token and retry", v9, 2u);
      MEMORY[0x2533BE070](v9, -1, -1);
    }

    type metadata accessor for NetworkError();
    sub_2527B3838();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10(0);
  }
  BOOL v5 = JWToken.expired.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5) {
    goto LABEL_4;
  }
  uint64_t v13 = v0[11];
  uint64_t v12 = v0[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_252832B00;
  strcpy((char *)(inited + 32), "subscriptionId");
  *(unsigned char *)(inited + 47) = -18;
  *(void *)(inited + 48) = v13;
  *(void *)(inited + 56) = v12;
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_252786E88(inited);
  v0[25] = v15;
  uint64_t KeyPath = swift_getKeyPath();
  v0[26] = KeyPath;
  uint64_t v17 = (void *)swift_task_alloc();
  v0[27] = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_2527B78A4;
  uint64_t v18 = v0[20];
  uint64_t v19 = v0[17];
  uint64_t v20 = v0[18];
  uint64_t v21 = v0[15];
  uint64_t v22 = v0[16];
  uint64_t v23 = v0[13];
  uint64_t v24 = v0[14];
  uint64_t v25 = v0[11];
  uint64_t v26 = v0[12];
  uint64_t v31 = KeyPath;
  unint64_t v32 = v15;
  uint64_t v30 = v24;
  return sub_25279E638(v18, v25, v26, v21, v22, v19, v20, v23);
}

uint64_t sub_2527B78A4()
{
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_2527B79D8, 0, 0);
}

uint64_t sub_2527B79D8()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[20];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_2527A5E98(v3);
    if (qword_269C1CEE8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D328);
    BOOL v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable to generate request URL for triggering data resend.", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }

    type metadata accessor for NetworkError();
    sub_2527B3838();
    swift_allocError();
    *os_log_type_t v8 = 0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9(0);
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[23], v3, v1);
    sub_252804F18(0xD00000000000004ALL, 0x800000025283BF40, (uint8_t *)0xD000000000000026, 0x800000025283BF90);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[28] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_2527B7C68;
    uint64_t v12 = v0[23];
    return MEMORY[0x270EF1EB0](v12, 0);
  }
}

uint64_t sub_2527B7C68(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v4;
  *(void *)(v7 + 232) = a3;
  *(void *)(v7 + 240) = v3;
  swift_task_dealloc();
  if (v3)
  {
    os_log_type_t v8 = sub_2527B8834;
  }
  else
  {
    sub_252782E20(a1, a2);
    os_log_type_t v8 = sub_2527B7D98;
  }
  return MEMORY[0x270FA2498](v8, 0, 0);
}

uint64_t sub_2527B7D98()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    id v3 = *(id *)(v0 + 232);
    sub_252805814(0xD000000000000010, (char *)0x800000025283BFC0, (unint64_t)objc_msgSend(v2, sel_statusCode), qword_2702C4938);
    id v4 = objc_msgSend(v2, sel_statusCode);
    switch((unint64_t)v4)
    {
      case 0x190uLL:
        if (qword_269C1CEE8 != -1) {
          swift_once();
        }
        uint64_t v5 = sub_252831158();
        __swift_project_value_buffer(v5, (uint64_t)qword_269C2D328);
        os_log_type_t v6 = sub_252831138();
        os_log_type_t v7 = sub_252831618();
        if (os_log_type_enabled(v6, v7))
        {
          os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v8 = 0;
          _os_log_impl(&dword_25277D000, v6, v7, "BAD REQUEST | Check request", v8, 2u);
          MEMORY[0x2533BE070](v8, -1, -1);
        }
        goto LABEL_38;
      case 0x191uLL:
        if (qword_269C1CEE8 != -1) {
          swift_once();
        }
        uint64_t v36 = sub_252831158();
        __swift_project_value_buffer(v36, (uint64_t)qword_269C2D328);
        os_log_type_t v6 = sub_252831138();
        os_log_type_t v37 = sub_252831618();
        if (os_log_type_enabled(v6, v37))
        {
          uint64_t v38 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v38 = 0;
          _os_log_impl(&dword_25277D000, v6, v37, "Request Unauthorized or Access Token Expired.", v38, 2u);
          MEMORY[0x2533BE070](v38, -1, -1);
        }
        goto LABEL_38;
      case 0x192uLL:
      case 0x193uLL:
      case 0x195uLL:
      case 0x196uLL:
      case 0x197uLL:
      case 0x198uLL:
      case 0x199uLL:
      case 0x19AuLL:
      case 0x19BuLL:
      case 0x19CuLL:
      case 0x19DuLL:
      case 0x19EuLL:
      case 0x19FuLL:
      case 0x1A0uLL:
      case 0x1A1uLL:
      case 0x1A2uLL:
      case 0x1A3uLL:
      case 0x1A4uLL:
      case 0x1A5uLL:
      case 0x1A6uLL:
      case 0x1A7uLL:
      case 0x1A8uLL:
      case 0x1A9uLL:
      case 0x1AAuLL:
      case 0x1ABuLL:
      case 0x1ACuLL:
        goto LABEL_20;
      case 0x194uLL:
        if (qword_269C1CEE8 != -1) {
          swift_once();
        }
        uint64_t v39 = sub_252831158();
        __swift_project_value_buffer(v39, (uint64_t)qword_269C2D328);
        os_log_type_t v6 = sub_252831138();
        os_log_type_t v40 = sub_252831618();
        if (os_log_type_enabled(v6, v40))
        {
          char v41 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)char v41 = 0;
          _os_log_impl(&dword_25277D000, v6, v40, "Subscription not found. - Should Off-board user!", v41, 2u);
          MEMORY[0x2533BE070](v41, -1, -1);
        }
        goto LABEL_38;
      case 0x1ADuLL:
        if (qword_269C1CEE8 != -1) {
          swift_once();
        }
        uint64_t v42 = sub_252831158();
        __swift_project_value_buffer(v42, (uint64_t)qword_269C2D328);
        os_log_type_t v6 = sub_252831138();
        os_log_type_t v43 = sub_252831618();
        if (os_log_type_enabled(v6, v43))
        {
          uint64_t v44 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v44 = 0;
          _os_log_impl(&dword_25277D000, v6, v43, "TOO MANY REQUESTS | Server rejected calls cause of too many requests being made", v44, 2u);
          MEMORY[0x2533BE070](v44, -1, -1);
        }
LABEL_38:
        uint64_t v13 = *(void **)(v0 + 232);
        uint64_t v15 = *(void *)(v0 + 176);
        uint64_t v14 = *(void *)(v0 + 184);
        uint64_t v16 = *(void *)(v0 + 168);

        type metadata accessor for NetworkError();
        sub_2527B3838();
        swift_allocError();
        swift_storeEnumTagMultiPayload();
        swift_willThrow();

        goto LABEL_39;
      default:
        if (v4 == (id)500)
        {
          if (qword_269C1CEE8 != -1) {
            swift_once();
          }
          uint64_t v46 = sub_252831158();
          __swift_project_value_buffer(v46, (uint64_t)qword_269C2D328);
          uint64_t v47 = sub_252831138();
          os_log_type_t v48 = sub_252831618();
          if (os_log_type_enabled(v47, v48))
          {
            uint64_t v49 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v49 = 0;
            _os_log_impl(&dword_25277D000, v47, v48, "Internal Server Error", v49, 2u);
            MEMORY[0x2533BE070](v49, -1, -1);
          }
          uint64_t v50 = *(void **)(v0 + 232);
          uint64_t v52 = *(void *)(v0 + 176);
          uint64_t v51 = *(void *)(v0 + 184);
          uint64_t v53 = *(void *)(v0 + 168);

          type metadata accessor for NetworkError();
          sub_2527B3838();
          swift_allocError();
          *uint64_t v54 = objc_msgSend(v2, sel_statusCode);
          swift_storeEnumTagMultiPayload();
          swift_willThrow();

          (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v53);
          goto LABEL_40;
        }
        if (v4 != (id)200)
        {
LABEL_20:
          if (qword_269C1CEE8 != -1) {
            swift_once();
          }
          uint64_t v28 = *(void **)(v0 + 232);
          uint64_t v29 = sub_252831158();
          __swift_project_value_buffer(v29, (uint64_t)qword_269C2D328);
          id v30 = v28;
          uint64_t v31 = sub_252831138();
          os_log_type_t v32 = sub_252831618();
          if (os_log_type_enabled(v31, v32))
          {
            uint64_t v33 = *(void **)(v0 + 232);
            uint64_t v34 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v34 = 134217984;
            *(void *)(v0 + 80) = objc_msgSend(v2, sel_statusCode);
            sub_252831698();

            _os_log_impl(&dword_25277D000, v31, v32, "Request failed : Status Code %ld", v34, 0xCu);
            MEMORY[0x2533BE070](v34, -1, -1);
            uint64_t v35 = *(NSObject **)(v0 + 232);
          }
          else
          {

            uint64_t v35 = *(NSObject **)(v0 + 232);
            uint64_t v31 = v35;
          }
          uint64_t v56 = *(void *)(v0 + 176);
          uint64_t v55 = *(void *)(v0 + 184);
          uint64_t v57 = *(void *)(v0 + 168);

          type metadata accessor for NetworkError();
          sub_2527B3838();
          swift_allocError();
          *uint64_t v58 = objc_msgSend(v2, sel_statusCode);
          swift_storeEnumTagMultiPayload();
          swift_willThrow();

          (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
          goto LABEL_40;
        }
        if (qword_269C1CEE8 != -1) {
          swift_once();
        }
        uint64_t v18 = sub_252831158();
        __swift_project_value_buffer(v18, (uint64_t)qword_269C2D328);
        uint64_t v19 = sub_252831138();
        os_log_type_t v20 = sub_252831628();
        if (os_log_type_enabled(v19, v20))
        {
          uint64_t v21 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v21 = 0;
          _os_log_impl(&dword_25277D000, v19, v20, "Data resend triggered successfully.", v21, 2u);
          MEMORY[0x2533BE070](v21, -1, -1);
        }
        uint64_t v22 = *(void **)(v0 + 232);
        uint64_t v24 = *(void *)(v0 + 176);
        uint64_t v23 = *(void *)(v0 + 184);
        uint64_t v25 = *(void *)(v0 + 168);

        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v26 = *(uint64_t (**)(uint64_t))(v0 + 8);
        uint64_t v27 = 1;
        break;
    }
  }
  else
  {
    if (qword_269C1CEE8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_252831158();
    __swift_project_value_buffer(v9, (uint64_t)qword_269C2D328);
    uint64_t v10 = sub_252831138();
    os_log_type_t v11 = sub_252831618();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_25277D000, v10, v11, "Unable to process Historical AMI Response.", v12, 2u);
      MEMORY[0x2533BE070](v12, -1, -1);
    }
    uint64_t v13 = *(void **)(v0 + 232);
    uint64_t v15 = *(void *)(v0 + 176);
    uint64_t v14 = *(void *)(v0 + 184);
    uint64_t v16 = *(void *)(v0 + 168);

    type metadata accessor for NetworkError();
    sub_2527B3838();
    swift_allocError();
    *uint64_t v17 = 2;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
LABEL_39:

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
LABEL_40:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v27 = 0;
  }
  return v26(v27);
}

uint64_t sub_2527B8834()
{
  (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1(0);
}

uint64_t static UtilityServices.internalFrameworkConfiguration(_:)(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_269C1DC30 + dword_269C1DC30);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_252787274;
  return v5(a1);
}

uint64_t sub_2527B8AE0(void *a1, void *aBlock)
{
  v2[2] = a1;
  v2[3] = _Block_copy(aBlock);
  os_log_type_t v7 = (uint64_t (*)(id))((char *)&dword_269C1DC30 + dword_269C1DC30);
  id v4 = a1;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_252787598;
  return v7(v4);
}

uint64_t static UtilityServices.fetchPrivateAccessToken(_:)(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2527B8C48;
  return sub_2527E5764(a1, 0);
}

uint64_t sub_2527B8C48(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *v3;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (!v2)
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2;
  }
  return v8(v6, v7);
}

uint64_t sub_2527B8ED0(uint64_t a1, void *aBlock)
{
  v2[2] = _Block_copy(aBlock);
  if (a1) {
    a1 = sub_2528314F8();
  }
  v2[3] = a1;
  id v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *id v4 = v2;
  v4[1] = sub_2527B8F90;
  return sub_2527E5764(a1, 0);
}

uint64_t sub_2527B8F90()
{
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v5 = sub_252830B08();

    uint64_t v6 = 0;
    uint64_t v7 = (void *)v5;
  }
  else
  {
    uint64_t v6 = sub_252831298();
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    uint64_t v7 = (void *)v6;
  }
  uint64_t v8 = *(void (***)(void, void, void))(v3 + 16);
  v8[2](v8, v6, v5);

  _Block_release(v8);
  uint64_t v9 = *(uint64_t (**)(void))(v4 + 8);
  return v9();
}

uint64_t static UtilityServices.generateGrandSlamToken()()
{
  return MEMORY[0x270FA2498](sub_2527B9148, 0, 0);
}

uint64_t sub_2527B9148()
{
  if (qword_269C1CE38 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_269C2D208;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2527B9210;
  return sub_2527ACFEC(v1);
}

uint64_t sub_2527B9210(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t sub_2527B9474(const void *a1)
{
  *(void *)(v1 + 16) = _Block_copy(a1);
  return MEMORY[0x270FA2498](sub_2527B94DC, 0, 0);
}

uint64_t sub_2527B94DC()
{
  if (qword_269C1CE38 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_269C2D208;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2527B95A4;
  return sub_2527ACFEC(v1);
}

uint64_t sub_2527B95A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (a2)
  {
    uint64_t v6 = (void *)sub_252831298();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(void (***)(void, void))(v4 + 16);
  ((void (**)(void, void *))v7)[2](v7, v6);

  _Block_release(v7);
  uint64_t v8 = *(uint64_t (**)(void))(v5 + 8);
  return v8();
}

uint64_t static UtilityServices.userDSID()()
{
  if (qword_269C1CE38 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_269C2D208;

  return sub_2527ACEB4(v0);
}

uint64_t static UtilityServices.environment()()
{
  char v0 = sub_25280DF84();
  uint64_t result = 0x6E7265746E496171;
  switch(v0)
  {
    case 1:
      uint64_t result = 7759204;
      break;
    case 2:
      uint64_t result = 1953654115;
      break;
    case 3:
      uint64_t result = 1685025392;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2527B9938(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BE58);
  *(void *)(v1 + 16) = swift_task_alloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2527B99FC;
  return sub_2527BAEF8(a1);
}

uint64_t sub_2527B99FC(char a1)
{
  *(unsigned char *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2527B9AFC, 0, 0);
}

uint64_t sub_2527B9AFC()
{
  if (*(unsigned char *)(v0 + 32) != 1)
  {
    if (qword_26B22BF08 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_252831158();
    __swift_project_value_buffer(v5, (uint64_t)qword_26B22C0A0);
    uint64_t v6 = sub_252831138();
    os_log_type_t v7 = sub_252831618();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_25277D000, v6, v7, "Error while looking up configuration!!!", v8, 2u);
      MEMORY[0x2533BE070](v8, -1, -1);
    }

    goto LABEL_9;
  }
  uint64_t v1 = *(void *)(v0 + 16);
  sub_2527BC6F4(v1);
  uint64_t v2 = type metadata accessor for UtilityServicesConfigurationsModel();
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  uint64_t v4 = *(void *)(v0 + 16);
  if (v3 == 1)
  {
    sub_252781C54(*(void *)(v0 + 16), &qword_26B22BE58);
LABEL_9:
    uint64_t v9 = 0;
    goto LABEL_11;
  }
  uint64_t v9 = sub_2527BCA8C();
  sub_2527A07E0(v4);
LABEL_11:
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v10(v9);
}

uint64_t _s19HomeUtilityServices0bC0C23clearServiceConfigCacheyyFZ_0()
{
  uint64_t v0 = sub_2527BA3BC();
  uint64_t v2 = v1;
  v4[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DC98);
  v4[0] = MEMORY[0x263F8EE78];
  sub_2527B9FFC(v0, v2, (uint64_t)v4);
  swift_bridgeObjectRelease();
  return sub_252781C54((uint64_t)v4, &qword_26B22C010);
}

uint64_t sub_2527B9D50()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2527B9D88()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *int v3 = v1;
  v3[1] = sub_252786A30;
  uint64_t v4 = (uint64_t (*)(const void *))((char *)&dword_269C1DC48 + dword_269C1DC48);
  return v4(v2);
}

uint64_t sub_2527B9E40()
{
  uint64_t v2 = *(void *)(v0 + 16);
  int v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_252786D4C;
  uint64_t v5 = (uint64_t (*)(uint64_t, void *))((char *)&dword_269C1DC58 + dword_269C1DC58);
  return v5(v2, v3);
}

uint64_t objectdestroy_16Tm()
{
  _Block_release(*(const void **)(v0 + 24));

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2527B9F40()
{
  uint64_t v2 = *(void **)(v0 + 16);
  int v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_252786D4C;
  uint64_t v5 = (uint64_t (*)(void *, void *))((char *)&dword_269C1DC78 + dword_269C1DC78);
  return v5(v2, v3);
}

void sub_2527B9FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (__CFString *)sub_252831298();
  sub_2527845D0(a3, (uint64_t)v13);
  uint64_t v5 = v14;
  if (v14)
  {
    uint64_t v6 = __swift_project_boxed_opaque_existential_1(v13, v14);
    uint64_t v7 = *(void *)(v5 - 8);
    MEMORY[0x270FA5388](v6);
    uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    uint64_t v10 = (const void *)sub_252831A48();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
  }
  else
  {
    uint64_t v10 = 0;
  }
  uint64_t v11 = (__CFString *)sub_252831298();
  CFPreferencesSetAppValue(v4, v10, v11);
  swift_unknownObjectRelease();

  uint64_t v12 = (__CFString *)sub_252831298();
  CFPreferencesAppSynchronize(v12);
}

uint64_t sub_2527BA190()
{
  uint64_t result = os_variant_has_internal_diagnostics();
  byte_26B22C038 = result;
  return result;
}

uint64_t sub_2527BA1B8()
{
  if (v0[3])
  {
    uint64_t v1 = v0[2];
  }
  else
  {
    uint64_t v1 = sub_2527BA2B4(v0);
    v0[2] = v1;
    v0[3] = v2;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2527BA238()
{
  if (v0[5])
  {
    uint64_t v1 = v0[4];
  }
  else
  {
    uint64_t v1 = sub_2527BA2B4(v0);
    v0[4] = v1;
    v0[5] = v2;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2527BA2B4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_bridgeObjectRetain();
  sub_2528313A8();
  sub_25280DF84();
  sub_2528313A8();
  swift_bridgeObjectRelease();
  sub_2528313A8();
  sub_2528313A8();
  return v2;
}

uint64_t sub_2527BA3BC()
{
  return 0;
}

uint64_t sub_2527BA4B4()
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  if (qword_26B22BEC0 != -1) {
    swift_once();
  }
  if (byte_26B22C038 == 1)
  {
    if (qword_26B22BEE0 != -1) {
      swift_once();
    }
    uint64_t v0 = sub_252831158();
    __swift_project_value_buffer(v0, (uint64_t)qword_26B22C058);
    uint64_t v1 = sub_252831138();
    os_log_type_t v2 = sub_252831628();
    if (os_log_type_enabled(v1, v2))
    {
      int v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v3 = 0;
      _os_log_impl(&dword_25277D000, v1, v2, "Checking for Utility Enablement Override.", v3, 2u);
      MEMORY[0x2533BE070](v3, -1, -1);
    }

    Boolean keyExistsAndHasValidFormat = 0;
    uint64_t v4 = (__CFString *)sub_252831298();
    uint64_t v5 = (__CFString *)sub_252831298();
    int AppBooleanValue = CFPreferencesGetAppBooleanValue(v4, v5, &keyExistsAndHasValidFormat);

    if (keyExistsAndHasValidFormat && AppBooleanValue)
    {
      uint64_t v7 = sub_252831138();
      os_log_type_t v8 = sub_252831628();
      if (!os_log_type_enabled(v7, v8))
      {
        uint64_t v10 = 1;
        goto LABEL_18;
      }
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_25277D000, v7, v8, "Utility Enablement Override detected. Returning true", v9, 2u);
      uint64_t v10 = 1;
    }
    else
    {
      uint64_t v7 = sub_252831138();
      os_log_type_t v11 = sub_252831628();
      if (!os_log_type_enabled(v7, v11))
      {
        uint64_t v10 = 0;
        goto LABEL_18;
      }
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_25277D000, v7, v11, "Utility Enablement Override not detected. Returning false", v9, 2u);
      uint64_t v10 = 0;
    }
    MEMORY[0x2533BE070](v9, -1, -1);
LABEL_18:

    return v10;
  }
  return 0;
}

BOOL sub_2527BA75C()
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  Boolean keyExistsAndHasValidFormat = 0;
  uint64_t v0 = (__CFString *)sub_252831298();
  uint64_t v1 = (__CFString *)sub_252831298();
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(v0, v1, &keyExistsAndHasValidFormat);

  if (keyExistsAndHasValidFormat) {
    BOOL v3 = AppBooleanValue == 0;
  }
  else {
    BOOL v3 = 1;
  }
  return !v3;
}

uint64_t sub_2527BA828(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BE58);
  *(void *)(v1 + 16) = swift_task_alloc();
  BOOL v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v3;
  *BOOL v3 = v1;
  v3[1] = sub_2527BA8EC;
  return sub_2527BAEF8(a1);
}

uint64_t sub_2527BA8EC(char a1)
{
  *(unsigned char *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2527BA9EC, 0, 0);
}

uint64_t sub_2527BA9EC()
{
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 16);
    sub_2527BC6F4(v1);
    uint64_t v2 = type metadata accessor for UtilityServicesConfigurationsModel();
    int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
    uint64_t v4 = *(unsigned __int8 **)(v0 + 16);
    if (v3 == 1)
    {
      sub_252781C54(*(void *)(v0 + 16), &qword_26B22BE58);
    }
    else
    {
      uint64_t v5 = *v4;
      uint64_t v6 = *((void *)v4 + 1);
      uint64_t v7 = *((void *)v4 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2527A07E0((uint64_t)v4);
      unint64_t v8 = sub_2527BD2D0(v5, v6, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v8) {
        goto LABEL_10;
      }
    }
  }
  if (qword_26B22BF08 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_252831158();
  __swift_project_value_buffer(v9, (uint64_t)qword_26B22C0A0);
  uint64_t v10 = sub_252831138();
  os_log_type_t v11 = sub_252831618();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_25277D000, v10, v11, "Using default configuration values hardcoded in Framework.", v12, 2u);
    MEMORY[0x2533BE070](v12, -1, -1);
  }

  unint64_t v8 = sub_252786D50(MEMORY[0x263F8EE78]);
LABEL_10:
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v13(v8);
}

uint64_t sub_2527BABD8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BE58);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UtilityServicesConfigurationsModel();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2527BC6F4((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_252781C54((uint64_t)v2, &qword_26B22BE58);
    if (qword_26B22BF08 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_252831158();
    __swift_project_value_buffer(v7, (uint64_t)qword_26B22C0A0);
    unint64_t v8 = sub_252831138();
    os_log_type_t v9 = sub_252831618();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_25277D000, v8, v9, "    Returning regions from default config.\n    Ensure this invocation is from a client that needs this value during installation.", v10, 2u);
      MEMORY[0x2533BE070](v10, -1, -1);
    }

    if (qword_269C1CE48 != -1) {
      swift_once();
    }
    uint64_t v11 = qword_269C2D210;
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_2527A05A4((uint64_t)v2, (uint64_t)v6);
    if (sub_2527BCD1C())
    {
      uint64_t v12 = swift_bridgeObjectRetain();
      uint64_t v11 = sub_2527C1DBC(v12);
      swift_bridgeObjectRelease();
      sub_2527A07E0((uint64_t)v6);
    }
    else
    {
      if (qword_26B22BF08 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_252831158();
      __swift_project_value_buffer(v13, (uint64_t)qword_26B22C0A0);
      uint64_t v14 = sub_252831138();
      os_log_type_t v15 = sub_252831618();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_25277D000, v14, v15, "All Utilities are disabled via config.", v16, 2u);
        MEMORY[0x2533BE070](v16, -1, -1);
      }

      sub_2527A07E0((uint64_t)v6);
      return MEMORY[0x263F8EE88];
    }
  }
  return v11;
}

uint64_t sub_2527BAEF8(uint64_t a1)
{
  v1[7] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v1[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BE58);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  uint64_t v2 = sub_2528307F8();
  v1[11] = v2;
  v1[12] = *(void *)(v2 - 8);
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  v1[16] = swift_task_alloc();
  uint64_t v3 = sub_252830BD8();
  v1[17] = v3;
  v1[18] = *(void *)(v3 - 8);
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2527BB0E0, 0, 0);
}

uint64_t sub_2527BB0E0()
{
  uint64_t v46 = v0;
  char v1 = sub_2527BDAA8();
  if (v1)
  {
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13(v1 & 1);
  }
  if (qword_26B22BF08 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_252831158();
  v0[21] = __swift_project_value_buffer(v2, (uint64_t)qword_26B22C0A0);
  uint64_t v3 = sub_252831138();
  os_log_type_t v4 = sub_252831628();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_25277D000, v3, v4, "Fetching new config.", v5, 2u);
    MEMORY[0x2533BE070](v5, -1, -1);
  }
  uint64_t v6 = v0[17];
  uint64_t v7 = v0[18];
  uint64_t v8 = v0[16];

  char v9 = sub_25280DF84();
  sub_2527E8AC0(v9, v8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) == 1)
  {
    sub_252781C54(v0[16], &qword_26B22BD58);
    uint64_t v10 = sub_252831138();
    os_log_type_t v11 = sub_252831618();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_25277D000, v10, v11, "Unable to create config update URL!!!", v12, 2u);
      MEMORY[0x2533BE070](v12, -1, -1);
    }

    goto LABEL_10;
  }
  uint64_t v16 = v0[19];
  uint64_t v15 = v0[20];
  uint64_t v17 = v0[17];
  uint64_t v18 = v0[18];
  uint64_t v19 = v0[15];
  uint64_t v20 = v0[14];
  uint64_t v22 = v0[11];
  uint64_t v21 = v0[12];
  uint64_t v23 = v0[10];
  (*(void (**)(uint64_t, void, uint64_t))(v18 + 32))(v15, v0[16], v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v16, v15, v17);
  sub_252830798();
  sub_252804CA4(v19);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v0[22] = v24;
  v0[23] = (v21 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v24(v20, v22);
  sub_2527BC6F4(v23);
  uint64_t v25 = type metadata accessor for UtilityServicesConfigurationsModel();
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48);
  int v27 = v26(v23, 1, v25);
  uint64_t v28 = v0[10];
  if (v27 != 1)
  {
    char v29 = sub_2527BDD78();
    sub_2527A07E0(v28);
    if ((v29 & 1) == 0) {
      goto LABEL_24;
    }
    uint64_t v30 = v0[9];
    sub_2527BC6F4(v30);
    int v31 = v26(v30, 1, v25);
    uint64_t v28 = v0[9];
    if (v31 != 1)
    {
      os_log_type_t v32 = (uint64_t *)(v28 + *(int *)(v25 + 24));
      uint64_t v34 = *v32;
      unint64_t v33 = v32[1];
      swift_bridgeObjectRetain();
      sub_2527A07E0(v28);
      if (v33)
      {
        uint64_t v35 = sub_252831138();
        os_log_type_t v36 = sub_252831628();
        if (os_log_type_enabled(v35, v36))
        {
          os_log_type_t v37 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v37 = 0;
          _os_log_impl(&dword_25277D000, v35, v36, "Adding ETag header to config request.", v37, 2u);
          MEMORY[0x2533BE070](v37, -1, -1);
        }

        swift_bridgeObjectRetain_n();
        uint64_t v38 = sub_252831138();
        os_log_type_t v39 = sub_252831608();
        if (os_log_type_enabled(v38, v39))
        {
          os_log_type_t v40 = (uint8_t *)swift_slowAlloc();
          uint64_t v41 = swift_slowAlloc();
          uint64_t v45 = v41;
          *(_DWORD *)os_log_type_t v40 = 136315138;
          swift_bridgeObjectRetain();
          v0[6] = sub_25278F894(v34, v33, &v45);
          sub_252831698();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_25277D000, v38, v39, "ETag value: %s", v40, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2533BE070](v41, -1, -1);
          MEMORY[0x2533BE070](v40, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        sub_2528307B8();
        swift_bridgeObjectRelease();
      }
      goto LABEL_24;
    }
  }
  sub_252781C54(v28, &qword_26B22BE58);
LABEL_24:
  uint64_t v42 = (void *)swift_task_alloc();
  v0[24] = v42;
  void *v42 = v0;
  v42[1] = sub_2527BB6D4;
  uint64_t v43 = v0[15];
  uint64_t v44 = v0[8];
  return sub_2527BDE8C(v44, v43);
}

uint64_t sub_2527BB6D4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2527BB7D0, 0, 0);
}

uint64_t sub_2527BB7D0()
{
  uint64_t v28 = v0;
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[8];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_252781C54(v3, &qword_26B22BD40);
    os_log_type_t v4 = sub_252831138();
    os_log_type_t v5 = sub_252831618();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      uint64_t v27 = v7;
      *(_DWORD *)uint64_t v6 = 136315138;
      char v8 = sub_25280DF84();
      unint64_t v9 = 0xEA00000000006C61;
      uint64_t v10 = 0x6E7265746E496171;
      switch(v8)
      {
        case 1:
          unint64_t v9 = 0xE300000000000000;
          uint64_t v10 = 7759204;
          break;
        case 2:
          unint64_t v9 = 0xE400000000000000;
          uint64_t v10 = 1953654115;
          break;
        case 3:
          unint64_t v9 = 0xE400000000000000;
          uint64_t v10 = 1685025392;
          break;
        default:
          break;
      }
      uint64_t v24 = (void (*)(uint64_t, uint64_t))v0[22];
      uint64_t v19 = v0[18];
      uint64_t v25 = v0[17];
      uint64_t v26 = v0[20];
      uint64_t v20 = v0[15];
      uint64_t v21 = v0[11];
      v0[2] = sub_25278F894(v10, v9, &v27);
      sub_252831698();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25277D000, v4, v5, "Unable to add proper Auth Headers for current env %s!!!", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533BE070](v7, -1, -1);
      MEMORY[0x2533BE070](v6, -1, -1);

      v24(v20, v21);
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v26, v25);
    }
    else
    {
      uint64_t v13 = (void (*)(uint64_t, uint64_t))v0[22];
      uint64_t v14 = v0[20];
      uint64_t v15 = v0[17];
      uint64_t v16 = v0[18];
      uint64_t v17 = v0[15];
      uint64_t v18 = v0[11];

      v13(v17, v18);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = (uint64_t (*)(void))v0[1];
    return v22(0);
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[13], v3, v1);
    sub_252804F18(0xD000000000000016, 0x800000025283C1A0, (uint8_t *)0xD000000000000029, 0x800000025283C1C0);
    os_log_type_t v11 = (void *)swift_task_alloc();
    v0[25] = v11;
    *os_log_type_t v11 = v0;
    v11[1] = sub_2527BBBB8;
    uint64_t v12 = v0[13];
    return MEMORY[0x270EF1EB0](v12, 0);
  }
}

uint64_t sub_2527BBBB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v5 = (void *)*v4;
  v5[26] = a1;
  v5[27] = a2;
  v5[28] = a3;
  v5[29] = v3;
  swift_task_dealloc();
  if (v3) {
    uint64_t v6 = sub_2527BC2C0;
  }
  else {
    uint64_t v6 = sub_2527BBCD0;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_2527BBCD0()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (!v1)
  {
    uint64_t v15 = sub_252831138();
    os_log_type_t v16 = sub_252831618();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_25277D000, v15, v16, "Unable to process Config Response.", v17, 2u);
      MEMORY[0x2533BE070](v17, -1, -1);
    }
    uint64_t v18 = *(void **)(v0 + 224);
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
    uint64_t v52 = *(void *)(v0 + 160);
    uint64_t v21 = *(void *)(v0 + 136);
    uint64_t v20 = *(void *)(v0 + 144);
    uint64_t v22 = *(void *)(v0 + 120);
    uint64_t v23 = *(void *)(v0 + 104);
    uint64_t v24 = *(void *)(v0 + 88);
    sub_252782E20(*(void *)(v0 + 208), *(void *)(v0 + 216));
    goto LABEL_14;
  }
  uint64_t v2 = (void *)v1;
  id v3 = *(id *)(v0 + 224);
  sub_252805814(0xD00000000000001DLL, (char *)0x800000025283C1F0, (unint64_t)objc_msgSend(v2, sel_statusCode), qword_2702C4040);
  id v4 = objc_msgSend(v2, sel_statusCode);
  if (v4 == (id)401)
  {
    uint64_t v15 = sub_252831138();
    os_log_type_t v25 = sub_252831618();
    if (os_log_type_enabled(v15, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_25277D000, v15, v25, "Request Unauthorized!!!", v26, 2u);
      MEMORY[0x2533BE070](v26, -1, -1);
    }
    uint64_t v18 = *(void **)(v0 + 224);
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
    uint64_t v52 = *(void *)(v0 + 160);
    uint64_t v21 = *(void *)(v0 + 136);
    uint64_t v20 = *(void *)(v0 + 144);
    uint64_t v22 = *(void *)(v0 + 120);
    uint64_t v23 = *(void *)(v0 + 104);
    uint64_t v24 = *(void *)(v0 + 88);
    sub_252782E20(*(void *)(v0 + 208), *(void *)(v0 + 216));

LABEL_14:
    v19(v23, v24);
    v19(v22, v24);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v52, v21);
LABEL_15:
    char v27 = 0;
    goto LABEL_20;
  }
  if (v4 == (id)304)
  {
    uint64_t v28 = sub_252831138();
    os_log_type_t v29 = sub_252831628();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl(&dword_25277D000, v28, v29, "No change to saved config on disk. Continue using saved config.", v30, 2u);
      MEMORY[0x2533BE070](v30, -1, -1);
    }
    unint64_t v8 = *(void *)(v0 + 216);
    unint64_t v9 = *(void **)(v0 + 224);
    uint64_t v10 = *(void *)(v0 + 208);
    os_log_type_t v11 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
    uint64_t v12 = *(void *)(v0 + 144);
    uint64_t v49 = *(void *)(v0 + 136);
    uint64_t v51 = *(void *)(v0 + 160);
    uint64_t v45 = *(void *)(v0 + 104);
    uint64_t v47 = *(void *)(v0 + 120);
    uint64_t v13 = *(void *)(v0 + 88);

    char v14 = sub_2527BD734();
    goto LABEL_19;
  }
  if (v4 != (id)200)
  {
    id v33 = *(id *)(v0 + 224);
    uint64_t v34 = sub_252831138();
    os_log_type_t v35 = sub_252831618();
    BOOL v36 = os_log_type_enabled(v34, v35);
    os_log_type_t v37 = *(void **)(v0 + 224);
    uint64_t v38 = *(void *)(v0 + 160);
    uint64_t v39 = *(void *)(v0 + 136);
    uint64_t v40 = *(void *)(v0 + 144);
    uint64_t v50 = *(void *)(v0 + 120);
    uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
    uint64_t v46 = *(void *)(v0 + 104);
    uint64_t v48 = *(void *)(v0 + 88);
    if (v36)
    {
      uint64_t v42 = *(void *)(v0 + 208);
      unint64_t v43 = *(void *)(v0 + 216);
      uint64_t v44 = *(void *)(v0 + 136);
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 134217984;
      *(void *)(v0 + 40) = objc_msgSend(v2, sel_statusCode);
      sub_252831698();

      _os_log_impl(&dword_25277D000, v34, v35, "Unhandled http response code %ld", v41, 0xCu);
      MEMORY[0x2533BE070](v41, -1, -1);
      sub_252782E20(v42, v43);

      v53(v46, v48);
      v53(v50, v48);
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v44);
    }
    else
    {
      sub_252782E20(*(void *)(v0 + 208), *(void *)(v0 + 216));

      v53(v46, v48);
      v53(v50, v48);
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
    }
    goto LABEL_15;
  }
  os_log_type_t v5 = sub_252831138();
  os_log_type_t v6 = sub_252831628();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_25277D000, v5, v6, "Saving fetched config to disk", v7, 2u);
    MEMORY[0x2533BE070](v7, -1, -1);
  }
  unint64_t v8 = *(void *)(v0 + 216);
  unint64_t v9 = *(void **)(v0 + 224);
  uint64_t v10 = *(void *)(v0 + 208);
  os_log_type_t v11 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
  uint64_t v12 = *(void *)(v0 + 144);
  uint64_t v49 = *(void *)(v0 + 136);
  uint64_t v51 = *(void *)(v0 + 160);
  uint64_t v45 = *(void *)(v0 + 104);
  uint64_t v47 = *(void *)(v0 + 120);
  uint64_t v13 = *(void *)(v0 + 88);

  char v14 = sub_2527BD4EC();
LABEL_19:
  char v27 = v14;
  sub_252782E20(v10, v8);

  v11(v45, v13);
  v11(v47, v13);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v51, v49);
LABEL_20:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31(v27 & 1);
}

uint64_t sub_2527BC2C0()
{
  uint64_t v39 = v0;
  uint64_t v1 = (void *)v0[29];
  id v2 = v1;
  id v3 = v1;
  id v4 = sub_252831138();
  os_log_type_t v5 = sub_252831618();
  if (os_log_type_enabled(v4, v5))
  {
    os_log_type_t v6 = (void *)v0[29];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    unint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[4] = v10;
    sub_252831698();
    *unint64_t v8 = v10;

    _os_log_impl(&dword_25277D000, v4, v5, "Error while trying to fetch Config from Server %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D030);
    swift_arrayDestroy();
    MEMORY[0x2533BE070](v8, -1, -1);
    MEMORY[0x2533BE070](v7, -1, -1);
  }
  else
  {
    os_log_type_t v11 = (void *)v0[29];
  }
  uint64_t v12 = sub_252831138();
  os_log_type_t v13 = sub_252831618();
  if (os_log_type_enabled(v12, v13))
  {
    char v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v38 = v15;
    *(_DWORD *)char v14 = 136315138;
    char v16 = sub_25280DF84();
    unint64_t v17 = 0xEA00000000006C61;
    uint64_t v18 = 0x6E7265746E496171;
    switch(v16)
    {
      case 1:
        unint64_t v17 = 0xE300000000000000;
        uint64_t v18 = 7759204;
        break;
      case 2:
        unint64_t v17 = 0xE400000000000000;
        uint64_t v18 = 1953654115;
        break;
      case 3:
        unint64_t v17 = 0xE400000000000000;
        uint64_t v18 = 1685025392;
        break;
      default:
        break;
    }
    uint64_t v28 = (void (*)(uint64_t, uint64_t))v0[22];
    uint64_t v37 = v0[20];
    uint64_t v29 = v0[18];
    uint64_t v36 = v0[17];
    id v34 = (id)v0[29];
    uint64_t v35 = v0[15];
    uint64_t v33 = v0[13];
    uint64_t v30 = v0[11];
    v0[3] = sub_25278F894(v18, v17, &v38);
    sub_252831698();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25277D000, v12, v13, "Current Environment %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533BE070](v15, -1, -1);
    MEMORY[0x2533BE070](v14, -1, -1);

    v28(v33, v30);
    v28(v35, v30);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v37, v36);
  }
  else
  {
    uint64_t v19 = (void *)v0[29];
    uint64_t v20 = (void (*)(uint64_t, uint64_t))v0[22];
    uint64_t v21 = v0[20];
    uint64_t v22 = v12;
    uint64_t v24 = v0[17];
    uint64_t v23 = v0[18];
    uint64_t v25 = v0[15];
    uint64_t v26 = v0[13];
    uint64_t v27 = v0[11];

    v20(v26, v27);
    v20(v25, v27);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v24);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v31 = (uint64_t (*)(void))v0[1];
  return v31(0);
}

uint64_t sub_2527BC6F4@<X0>(uint64_t a1@<X8>)
{
  v25[1] = *(id *)MEMORY[0x263EF8340];
  sub_2527BA3BC();
  id v2 = (__CFString *)sub_252831298();
  id v3 = (__CFString *)sub_252831298();
  CFPropertyListRef v4 = CFPreferencesCopyAppValue(v2, v3);
  swift_bridgeObjectRelease();

  if (v4)
  {
    v25[0] = (id)v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF28);
    if (swift_dynamicCast())
    {
      os_log_type_t v5 = self;
      os_log_type_t v6 = (void *)sub_252831218();
      swift_bridgeObjectRelease();
      v25[0] = 0;
      id v7 = objc_msgSend(v5, sel_dataWithJSONObject_options_error_, v6, 0, v25);

      id v8 = v25[0];
      if (v7)
      {
        uint64_t v9 = sub_252830C68();
        unint64_t v11 = v10;

        sub_2527BCF30(a1);
        return sub_252782E20(v9, v11);
      }
      os_log_type_t v13 = v8;
      char v14 = (void *)sub_252830B18();

      swift_willThrow();
      if (qword_26B22BF08 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_252831158();
      __swift_project_value_buffer(v15, (uint64_t)qword_26B22C0A0);
      id v16 = v14;
      id v17 = v14;
      uint64_t v18 = sub_252831138();
      os_log_type_t v19 = sub_252831618();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        uint64_t v21 = (void *)swift_slowAlloc();
        v25[0] = v21;
        *(_DWORD *)uint64_t v20 = 136315138;
        swift_getErrorValue();
        uint64_t v22 = sub_252831AA8();
        sub_25278F894(v22, v23, (uint64_t *)v25);
        sub_252831698();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_25277D000, v18, v19, "Error decoding config from disk.%s", v20, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2533BE070](v21, -1, -1);
        MEMORY[0x2533BE070](v20, -1, -1);
      }
      else
      {
      }
    }
  }
  uint64_t v24 = type metadata accessor for UtilityServicesConfigurationsModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a1, 1, 1, v24);
}

uint64_t sub_2527BCA8C()
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  sub_252830858();
  swift_allocObject();
  sub_252830848();
  type metadata accessor for UtilityServicesConfigurationsModel();
  sub_2527C3B80(&qword_26B22BE48, (void (*)(uint64_t))type metadata accessor for UtilityServicesConfigurationsModel);
  uint64_t v0 = sub_252830838();
  unint64_t v2 = v1;
  swift_release();
  id v3 = self;
  CFPropertyListRef v4 = (void *)sub_252830C48();
  *(void *)&v16[0] = 0;
  id v5 = objc_msgSend(v3, sel_JSONObjectWithData_options_error_, v4, 4, v16);

  id v6 = *(id *)&v16[0];
  if (v5)
  {
    sub_252831738();
    swift_unknownObjectRelease();
  }
  else
  {
    id v7 = v6;
    id v8 = (void *)sub_252830B18();

    swift_willThrow();
    memset(v16, 0, sizeof(v16));
  }
  sub_2527933FC((uint64_t)v16, (uint64_t)&v13, &qword_26B22C010);
  if (v14)
  {
    sub_2527933EC(&v13, v12);
    sub_252784638((uint64_t)v12, (uint64_t)v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF28);
    if ((swift_dynamicCast() & 1) == 0) {
      uint64_t v15 = 0;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
    uint64_t v9 = v15;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v15 = 0;
  }
  sub_252782E20(v0, v2);
  sub_252781C54((uint64_t)v16, &qword_26B22C010);
  return v9;
}

uint64_t sub_2527BCCD0()
{
  uint64_t v0 = sub_2527C1E54((uint64_t)&unk_2702C4098);
  uint64_t result = swift_arrayDestroy();
  qword_269C2D210 = v0;
  return result;
}

uint64_t sub_2527BCD1C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BE58);
  MEMORY[0x270FA5388](v0 - 8);
  unint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UtilityServicesConfigurationsModel();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (unsigned __int8 *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2527BC6F4((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_252781C54((uint64_t)v2, &qword_26B22BE58);
    if (qword_26B22BF08 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_252831158();
    __swift_project_value_buffer(v7, (uint64_t)qword_26B22C0A0);
    id v8 = sub_252831138();
    os_log_type_t v9 = sub_252831618();
    if (os_log_type_enabled(v8, v9))
    {
      unint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v10 = 0;
      _os_log_impl(&dword_25277D000, v8, v9, "Unable to retrieve configuration to check if utility is disabled or not.", v10, 2u);
      MEMORY[0x2533BE070](v10, -1, -1);
    }

    return 0;
  }
  else
  {
    sub_2527A05A4((uint64_t)v2, (uint64_t)v6);
    if (sub_2527BA4B4())
    {
      sub_2527A07E0((uint64_t)v6);
      return 1;
    }
    else
    {
      uint64_t v11 = *v6;
      sub_2527A07E0((uint64_t)v6);
    }
  }
  return v11;
}

uint64_t sub_2527BCF30@<X0>(uint64_t a1@<X8>)
{
  sub_252830828();
  swift_allocObject();
  sub_252830818();
  uint64_t v2 = type metadata accessor for UtilityServicesConfigurationsModel();
  sub_2527C3B80(&qword_26B22BE50, (void (*)(uint64_t))type metadata accessor for UtilityServicesConfigurationsModel);
  sub_252830808();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 0, 1, v2);
}

uint64_t sub_2527BD2D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  sub_252830858();
  swift_allocObject();
  sub_252830848();
  *((void *)&v21 + 1) = a2;
  *(void *)&long long v22 = a3;
  sub_2527C1FF8();
  uint64_t v5 = sub_252830838();
  unint64_t v7 = v6;
  swift_release();
  id v8 = self;
  os_log_type_t v9 = (void *)sub_252830C48();
  *(void *)&long long v21 = 0;
  id v10 = objc_msgSend(v8, sel_JSONObjectWithData_options_error_, v9, 4, &v21);

  id v11 = (id)v21;
  if (v10)
  {
    sub_252831738();
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v12 = v11;
    uint64_t v13 = (void *)sub_252830B18();

    swift_willThrow();
    long long v21 = 0u;
    long long v22 = 0u;
  }
  sub_2527933FC((uint64_t)&v21, (uint64_t)&v18, &qword_26B22C010);
  if (v19)
  {
    sub_2527933EC(&v18, v17);
    sub_252784638((uint64_t)v17, (uint64_t)v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF28);
    if ((swift_dynamicCast() & 1) == 0) {
      uint64_t v20 = 0;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
    uint64_t v14 = v20;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v20 = 0;
  }
  sub_252782E20(v5, v7);
  sub_252781C54((uint64_t)&v21, &qword_26B22C010);
  return v14;
}

uint64_t sub_2527BD4EC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD70);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BE58);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UtilityServicesConfigurationsModel();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  os_log_type_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2527BCF30((uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_252781C54((uint64_t)v5, &qword_26B22BE58);
LABEL_6:
    char v16 = 0;
    return v16 & 1;
  }
  sub_2527A05A4((uint64_t)v5, (uint64_t)v9);
  uint64_t v10 = sub_2527CE5CC();
  if (!v11)
  {
    sub_2527A07E0((uint64_t)v9);
    goto LABEL_6;
  }
  uint64_t v12 = v10;
  uint64_t v13 = v11;
  sub_2527CE9D0();
  sub_252830D38();
  uint64_t v14 = sub_252830DB8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v2, 0, 1, v14);
  sub_2527C169C((uint64_t)v2, (uint64_t)&v9[*(int *)(v6 + 20)]);
  uint64_t v15 = &v9[*(int *)(v6 + 24)];
  swift_bridgeObjectRelease();
  *(void *)uint64_t v15 = v12;
  *((void *)v15 + 1) = v13;
  char v16 = sub_2527C1704((uint64_t)v9);
  sub_2527A07E0((uint64_t)v9);
  return v16 & 1;
}

uint64_t sub_2527BD734()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD70);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BE58);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UtilityServicesConfigurationsModel();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  os_log_type_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2527BC6F4((uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_252781C54((uint64_t)v5, &qword_26B22BE58);
    if (qword_26B22BF08 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_252831158();
    __swift_project_value_buffer(v10, (uint64_t)qword_26B22C0A0);
    uint64_t v11 = sub_252831138();
    os_log_type_t v12 = sub_252831618();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_25277D000, v11, v12, "Unable to update Config!!!", v13, 2u);
      MEMORY[0x2533BE070](v13, -1, -1);
    }

    char v14 = 0;
  }
  else
  {
    sub_2527A05A4((uint64_t)v5, (uint64_t)v9);
    if (qword_26B22BF08 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_252831158();
    __swift_project_value_buffer(v15, (uint64_t)qword_26B22C0A0);
    char v16 = sub_252831138();
    os_log_type_t v17 = sub_252831628();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_25277D000, v16, v17, "Updating saved config with new expiry date.", v18, 2u);
      MEMORY[0x2533BE070](v18, -1, -1);
    }

    sub_2527CE9D0();
    sub_252830D38();
    uint64_t v19 = sub_252830DB8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v2, 0, 1, v19);
    sub_2527C169C((uint64_t)v2, (uint64_t)&v9[*(int *)(v6 + 20)]);
    char v14 = sub_2527C1704((uint64_t)v9);
    sub_2527A07E0((uint64_t)v9);
  }
  return v14 & 1;
}

uint64_t sub_2527BDAA8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BE58);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UtilityServicesConfigurationsModel();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2527BC6F4((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_252781C54((uint64_t)v2, &qword_26B22BE58);
LABEL_6:
    if (qword_26B22BF08 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_252831158();
    __swift_project_value_buffer(v7, (uint64_t)qword_26B22C0A0);
    uint64_t v8 = sub_252831138();
    os_log_type_t v9 = sub_252831618();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_25277D000, v8, v9, "Config saved on disk is invalid!", v10, 2u);
      MEMORY[0x2533BE070](v10, -1, -1);
    }

    return 0;
  }
  sub_2527A05A4((uint64_t)v2, (uint64_t)v6);
  if (sub_2527BDD78() & 1) == 0 || (sub_2527BEB04())
  {
    sub_2527A07E0((uint64_t)v6);
    goto LABEL_6;
  }
  if (qword_26B22BF08 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_252831158();
  __swift_project_value_buffer(v12, (uint64_t)qword_26B22C0A0);
  uint64_t v13 = sub_252831138();
  os_log_type_t v14 = sub_252831628();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_25277D000, v13, v14, "Config saved on disk is valid. Skipping reloading", v15, 2u);
    MEMORY[0x2533BE070](v15, -1, -1);
  }

  sub_2527A07E0((uint64_t)v6);
  return 1;
}

uint64_t sub_2527BDD78()
{
  unint64_t v1 = v0[4];
  uint64_t v2 = v0[3] & 0xFFFFFFFFFFFFLL;
  if ((v1 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(v1) & 0xF;
  }
  if (v2)
  {
    unint64_t v3 = v0[6];
    uint64_t v4 = v0[5] & 0xFFFFFFFFFFFFLL;
    if ((v3 & 0x2000000000000000) != 0) {
      uint64_t v4 = HIBYTE(v3) & 0xF;
    }
    if (v4) {
      return 1;
    }
  }
  if (qword_26B22BF08 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_252831158();
  __swift_project_value_buffer(v6, (uint64_t)qword_26B22C0A0);
  uint64_t v7 = sub_252831138();
  os_log_type_t v8 = sub_252831618();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v9 = 0;
    _os_log_impl(&dword_25277D000, v7, v8, "Saved Config on disk seems corrupted fetching new Config.", v9, 2u);
    MEMORY[0x2533BE070](v9, -1, -1);
  }

  return 0;
}

uint64_t sub_2527BDE8C(uint64_t a1, uint64_t a2)
{
  v2[12] = a1;
  v2[13] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v2[14] = swift_task_alloc();
  uint64_t v3 = sub_2528307F8();
  v2[15] = v3;
  v2[16] = *(void *)(v3 - 8);
  v2[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2527BDFA8, 0, 0);
}

uint64_t sub_2527BDFA8()
{
  uint64_t v30 = v0;
  v29[1] = *MEMORY[0x263EF8340];
  *(unsigned char *)(v0 + 49) = 0;
  unint64_t v1 = (__CFString *)sub_252831298();
  uint64_t v2 = (__CFString *)sub_252831298();
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(v1, v2, (Boolean *)(v0 + 49));

  if (*(unsigned char *)(v0 + 49)) {
    BOOL v4 = AppBooleanValue == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4)
  {
    uint64_t v5 = *(void *)(v0 + 120);
    uint64_t v6 = *(void *)(v0 + 128);
    uint64_t v7 = *(void *)(v0 + 112);
    sub_252814B24(v7);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5) == 1)
    {
      sub_252781C54(*(void *)(v0 + 112), &qword_26B22BD40);
      if (qword_26B22BF08 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_252831158();
      __swift_project_value_buffer(v8, (uint64_t)qword_26B22C0A0);
      os_log_type_t v9 = sub_252831138();
      os_log_type_t v10 = sub_252831618();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        v29[0] = v12;
        *(_DWORD *)uint64_t v11 = 136315138;
        char v13 = sub_25280DF84();
        unint64_t v14 = 0xEA00000000006C61;
        uint64_t v15 = 0x6E7265746E496171;
        switch(v13)
        {
          case 1:
            unint64_t v14 = 0xE300000000000000;
            uint64_t v15 = 7759204;
            break;
          case 2:
            unint64_t v14 = 0xE400000000000000;
            uint64_t v15 = 1953654115;
            break;
          case 3:
            unint64_t v14 = 0xE400000000000000;
            uint64_t v15 = 1685025392;
            break;
          default:
            break;
        }
        *(void *)(v0 + 72) = sub_25278F894(v15, v14, v29);
        sub_252831698();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25277D000, v9, v10, "Unable to add proper Auth Headers for current env %s!!!", v11, 0xCu);
        uint64_t v27 = 1;
        swift_arrayDestroy();
        MEMORY[0x2533BE070](v12, -1, -1);
        MEMORY[0x2533BE070](v11, -1, -1);
      }
      else
      {

        uint64_t v27 = 1;
      }
    }
    else
    {
      uint64_t v23 = *(void *)(v0 + 136);
      uint64_t v24 = *(void *)(v0 + 120);
      uint64_t v25 = *(void *)(v0 + 96);
      uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 128) + 32);
      v26(v23, *(void *)(v0 + 112), v24);
      v26(v25, v23, v24);
      uint64_t v27 = 0;
    }
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 128) + 56))(*(void *)(v0 + 96), v27, 1, *(void *)(v0 + 120));
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
    return v28();
  }
  else
  {
    if (qword_26B22BF08 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_252831158();
    *(void *)(v0 + 144) = v16;
    __swift_project_value_buffer(v16, (uint64_t)qword_26B22C0A0);
    os_log_type_t v17 = sub_252831138();
    os_log_type_t v18 = sub_252831628();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_25277D000, v17, v18, "Adding BAA Headers", v19, 2u);
      MEMORY[0x2533BE070](v19, -1, -1);
    }

    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_2527BE480;
    uint64_t v21 = *(void *)(v0 + 96);
    return URLRequest.addBAAHeaders()(v21);
  }
}

uint64_t sub_2527BE480()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2527BE680;
  }
  else {
    uint64_t v2 = sub_2527BE5C0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2527BE5C0()
{
  (*(void (**)(void, void, uint64_t, void))(v0[16] + 56))(v0[12], 0, 1, v0[15]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_2527BE680()
{
  uint64_t v27 = v0;
  v26[1] = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(v0 + 160);
  *(void *)(v0 + 56) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4C0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void **)(v0 + 40);
    char v4 = *(unsigned char *)(v0 + 48);
    if (qword_26B22BF18 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(*(void *)(v0 + 144), (uint64_t)qword_26B22C0B8);
    sub_2527A057C(v3, v4);
    sub_2527A057C(v3, v4);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v25 = *(void **)(v0 + 160);
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      v26[0] = swift_slowAlloc();
      uint64_t v8 = v26[0];
      *(_DWORD *)uint64_t v7 = 136315138;
      unint64_t v9 = sub_25280A898(v3, v4);
      *(void *)(v0 + 88) = sub_25278F894(v9, v10, v26);
      sub_252831698();
      swift_bridgeObjectRelease();
      sub_2527A0590(v3, v4);
      sub_2527A0590(v3, v4);
      _os_log_impl(&dword_25277D000, v5, v6, "Error while adding BAA Header: %s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533BE070](v8, -1, -1);
      MEMORY[0x2533BE070](v7, -1, -1);

      sub_2527A0590(v3, v4);
      uint64_t v11 = v25;
LABEL_10:

      goto LABEL_13;
    }

    sub_2527A0590(v3, v4);
    sub_2527A0590(v3, v4);
    sub_2527A0590(v3, v4);
  }
  else
  {
    if (qword_26B22BF18 != -1) {
      swift_once();
    }
    uint64_t v12 = *(void **)(v0 + 160);
    __swift_project_value_buffer(*(void *)(v0 + 144), (uint64_t)qword_26B22C0B8);
    id v13 = v12;
    id v14 = v12;
    uint64_t v15 = sub_252831138();
    os_log_type_t v16 = sub_252831618();
    BOOL v17 = os_log_type_enabled(v15, v16);
    os_log_type_t v18 = *(void **)(v0 + 160);
    if (v17)
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      v26[0] = v20;
      *(_DWORD *)uint64_t v19 = 136315138;
      swift_getErrorValue();
      uint64_t v21 = sub_252831AA8();
      *(void *)(v0 + 80) = sub_25278F894(v21, v22, v26);
      sub_252831698();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_25277D000, v15, v16, "Error while adding BAA Header: %s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533BE070](v20, -1, -1);
      MEMORY[0x2533BE070](v19, -1, -1);

      uint64_t v11 = v18;
      goto LABEL_10;
    }
  }
LABEL_13:
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 128) + 56))(*(void *)(v0 + 96), 1, 1, *(void *)(v0 + 120));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_2527BEB04()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD70);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_252830DB8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v35 - v10;
  MEMORY[0x270FA5388](v9);
  id v13 = (char *)&v35 - v12;
  uint64_t v14 = type metadata accessor for UtilityServicesConfigurationsModel();
  uint64_t v15 = (void *)(v0 + *(int *)(v14 + 24));
  unint64_t v16 = v15[1];
  if (!v16
    || ((uint64_t v17 = *v15 & 0xFFFFFFFFFFFFLL, (v16 & 0x2000000000000000) != 0) ? (v18 = HIBYTE(v16) & 0xF) : (v18 = v17),
        !v18))
  {
    if (qword_26B22BF08 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_252831158();
    __swift_project_value_buffer(v19, (uint64_t)qword_26B22C0A0);
    uint64_t v20 = sub_252831138();
    os_log_type_t v21 = sub_252831628();
    if (!os_log_type_enabled(v20, v21)) {
      goto LABEL_23;
    }
    unint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v22 = 0;
    uint64_t v23 = "No ETag value found. Fetching new config...";
    goto LABEL_22;
  }
  sub_2527933FC(v0 + *(int *)(v14 + 20), (uint64_t)v3, &qword_26B22BD70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_252781C54((uint64_t)v3, &qword_26B22BD70);
LABEL_18:
    if (qword_26B22BF08 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_252831158();
    __swift_project_value_buffer(v33, (uint64_t)qword_26B22C0A0);
    uint64_t v20 = sub_252831138();
    os_log_type_t v21 = sub_252831628();
    if (!os_log_type_enabled(v20, v21)) {
      goto LABEL_23;
    }
    unint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v22 = 0;
    uint64_t v23 = "Data no longer valid, as config validUntil date is in the past. Fetching new config...";
LABEL_22:
    _os_log_impl(&dword_25277D000, v20, v21, v23, v22, 2u);
    MEMORY[0x2533BE070](v22, -1, -1);
LABEL_23:

    return 1;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v13, v3, v4);
  sub_252830D78();
  char v24 = sub_252830D28();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v5 + 8);
  v25(v11, v4);
  if ((v24 & 1) == 0)
  {
    v25(v13, v4);
    goto LABEL_18;
  }
  if (qword_26B22BF08 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_252831158();
  __swift_project_value_buffer(v26, (uint64_t)qword_26B22C0A0);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v13, v4);
  uint64_t v27 = sub_252831138();
  os_log_type_t v28 = sub_252831628();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v38 = v36;
    *(_DWORD *)uint64_t v29 = 136315138;
    uint64_t v35 = v29 + 4;
    uint64_t v30 = sub_252808984();
    uint64_t v37 = sub_25278F894(v30, v31, &v38);
    sub_252831698();
    swift_bridgeObjectRelease();
    v25(v8, v4);
    _os_log_impl(&dword_25277D000, v27, v28, "Config expiry in %s", v29, 0xCu);
    uint64_t v32 = v36;
    swift_arrayDestroy();
    MEMORY[0x2533BE070](v32, -1, -1);
    MEMORY[0x2533BE070](v29, -1, -1);
  }
  else
  {

    v25(v8, v4);
  }
  v25(v13, v4);
  return 0;
}

uint64_t sub_2527BF02C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527C38F0();
  sub_252831B38();
  memcpy(v10, v3, 0x118uLL);
  v10[303] = 0;
  sub_2527C3B2C();
  sub_252831A18();
  if (!v2)
  {
    type metadata accessor for UtilityServicesConfigurationsModel();
    v10[0] = 1;
    sub_252830DB8();
    sub_2527C3B80(&qword_26B22BD60, MEMORY[0x263F07490]);
    sub_2528319D8();
    v10[0] = 2;
    sub_2528319A8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2527BF244@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD70);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v27 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF90);
  uint64_t v26 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UtilityServicesConfigurationsModel();
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t)&v10[*(int *)(v8 + 28)];
  uint64_t v12 = sub_252830DB8();
  id v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  uint64_t v31 = v11;
  v13(v11, 1, 1, v12);
  uint64_t v14 = (uint64_t *)&v10[*(int *)(v8 + 32)];
  *uint64_t v14 = 0;
  v14[1] = 0;
  uint64_t v15 = a1[3];
  uint64_t v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_2527C38F0();
  uint64_t v29 = v6;
  uint64_t v16 = v32;
  sub_252831B28();
  if (v16)
  {
    uint64_t v18 = v31;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
    sub_252781C54(v18, &qword_26B22BD70);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = (uint64_t)v27;
    v34[303] = 0;
    sub_2527C3944();
    sub_252831998();
    uint64_t v19 = (uint64_t)v10;
    memcpy(v10, v34, 0x118uLL);
    char v33 = 1;
    sub_2527C3B80(&qword_26B22BD68, MEMORY[0x263F07490]);
    sub_252831958();
    sub_2527C169C(v17, v31);
    char v33 = 2;
    uint64_t v20 = sub_252831928();
    uint64_t v22 = v21;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v28);
    swift_bridgeObjectRelease();
    *uint64_t v14 = v20;
    v14[1] = v22;
    sub_2527C3AC8(v19, v25);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
    return sub_2527A07E0(v19);
  }
}

uint64_t sub_2527BF62C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFB0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527C6170();
  sub_252831B38();
  long long v18 = *v3;
  *(void *)&long long v19 = *((void *)v3 + 2);
  char v31 = 0;
  sub_2527C1FF8();
  sub_252831A18();
  if (!v2)
  {
    LOBYTE(v18) = 1;
    sub_2528319E8();
    long long v9 = *(long long *)((char *)v3 + 184);
    long long v10 = *(long long *)((char *)v3 + 216);
    long long v28 = *(long long *)((char *)v3 + 200);
    long long v29 = v10;
    long long v30 = *(long long *)((char *)v3 + 232);
    long long v11 = *(long long *)((char *)v3 + 120);
    long long v12 = *(long long *)((char *)v3 + 152);
    long long v24 = *(long long *)((char *)v3 + 136);
    long long v25 = v12;
    long long v26 = *(long long *)((char *)v3 + 168);
    long long v27 = v9;
    long long v13 = *(long long *)((char *)v3 + 56);
    long long v14 = *(long long *)((char *)v3 + 88);
    long long v20 = *(long long *)((char *)v3 + 72);
    long long v21 = v14;
    long long v22 = *(long long *)((char *)v3 + 104);
    long long v23 = v11;
    long long v15 = *(long long *)((char *)v3 + 40);
    long long v19 = v13;
    long long v18 = v15;
    char v31 = 2;
    sub_2527C63F0();
    sub_252831A18();
    long long v16 = *(long long *)((char *)v3 + 264);
    long long v18 = *(long long *)((char *)v3 + 248);
    long long v19 = v16;
    char v31 = 3;
    sub_2527C6444();
    sub_252831A18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2527BF8A8()
{
  uint64_t v1 = 0x746E5564696C6176;
  if (*v0 != 1) {
    uint64_t v1 = 1734431845;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x537974696C697475;
  }
}

uint64_t sub_2527BF90C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2527C3C1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2527BF934(uint64_t a1)
{
  unint64_t v2 = sub_2527C38F0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527BF970(uint64_t a1)
{
  unint64_t v2 = sub_2527C38F0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2527BF9AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2527BF244(a1, a2);
}

uint64_t sub_2527BF9C4(void *a1)
{
  return sub_2527BF02C(a1);
}

uint64_t sub_2527BF9DC()
{
  uint64_t result = 0x72756769666E6F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x5255726576726573;
      break;
    case 2:
      uint64_t result = 0x68746150697061;
      break;
    case 3:
      uint64_t result = 0x5065636976726573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2527BFA84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2527C3D94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2527BFAAC(uint64_t a1)
{
  unint64_t v2 = sub_2527C6170();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527BFAE8(uint64_t a1)
{
  unint64_t v2 = sub_2527C6170();

  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_2527BFB24@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_2527C3F98(a1, __src);
  if (!v2) {
    return memcpy(a2, __src, 0x118uLL);
  }
  return result;
}

uint64_t sub_2527BFB78(void *a1)
{
  return sub_2527BF62C(a1);
}

unint64_t sub_2527BFB90(unsigned __int8 a1)
{
  unint64_t result = 0xD000000000000010;
  if (a1 >= 2u) {
    return 0xD000000000000011;
  }
  return result;
}

uint64_t sub_2527BFBE8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFA8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  long long v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527C3BC8();
  sub_252831B38();
  LOBYTE(v14) = 0;
  sub_2528319F8();
  if (!v4)
  {
    uint64_t v14 = v12;
    char v13 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF40);
    sub_25279077C(&qword_26B22BF48);
    sub_252831A18();
    uint64_t v14 = a4;
    char v13 = 2;
    sub_2528319D8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

unint64_t sub_2527BFDDC(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696C697455746567;
      break;
    case 2:
      unint64_t result = 0x6C6974557473696CLL;
      break;
    case 3:
      unint64_t result = 0x5468736572666572;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0x6373627553746567;
      break;
    case 8:
      unint64_t result = 0x6472616F6266666FLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 10:
      unint64_t result = 0xD000000000000019;
      break;
    case 11:
      unint64_t result = 0x736B616570;
      break;
    case 12:
      unint64_t result = 0x7363697274656DLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2527BFF74(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696C697455746567;
      break;
    case 2:
      unint64_t result = 0x6C6974557473696CLL;
      break;
    case 3:
      unint64_t result = 0x5468736572666572;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0x6373627553746567;
      break;
    case 8:
      unint64_t result = 0x6472616F6266666FLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 10:
      unint64_t result = 0xD000000000000019;
      break;
    case 11:
      unint64_t result = 0x736B616570;
      break;
    case 12:
      unint64_t result = 0x7363697274656DLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2527C010C()
{
  return sub_2527BFB90(*v0);
}

uint64_t sub_2527C0114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2527C4518(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2527C013C(uint64_t a1)
{
  unint64_t v2 = sub_2527C3BC8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527C0178(uint64_t a1)
{
  unint64_t v2 = sub_2527C3BC8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2527C01B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_2527C4658(a1);
  if (!v2)
  {
    *(unsigned char *)a2 = result & 1;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_2527C01E8(void *a1)
{
  return sub_2527BFBE8(a1, *v1, *((void *)v1 + 1), *((void *)v1 + 2));
}

uint64_t sub_2527C0208(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_2527BFDDC(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_2527BFDDC(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_252831A58();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2527C0294()
{
  char v1 = *v0;
  sub_252831AF8();
  sub_2527BFDDC(v1);
  sub_252831258();
  swift_bridgeObjectRelease();
  return sub_252831B18();
}

uint64_t sub_2527C02F8()
{
  sub_2527BFDDC(*v0);
  sub_252831258();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2527C034C()
{
  char v1 = *v0;
  sub_252831AF8();
  sub_2527BFDDC(v1);
  sub_252831258();
  swift_bridgeObjectRelease();
  return sub_252831B18();
}

uint64_t sub_2527C03AC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2527C48C8();
  *a1 = result;
  return result;
}

unint64_t sub_2527C03DC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_2527BFDDC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_2527C0408()
{
  return sub_2527BFF74(*v0);
}

uint64_t sub_2527C0410@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2527C48C8();
  *a1 = result;
  return result;
}

void sub_2527C0438(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_2527C0444(uint64_t a1)
{
  unint64_t v2 = sub_2527C547C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527C0480(uint64_t a1)
{
  unint64_t v2 = sub_2527C547C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2527C04BC(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFC0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527C547C();
  sub_252831B38();
  v8[15] = 0;
  sub_2528319E8();
  if (!v1)
  {
    v8[14] = 1;
    sub_2528319E8();
    v8[13] = 2;
    sub_2528319E8();
    v8[12] = 4;
    sub_2528319E8();
    v8[11] = 3;
    sub_2528319E8();
    v8[10] = 5;
    sub_2528319E8();
    v8[9] = 6;
    sub_2528319E8();
    v8[8] = 7;
    sub_2528319E8();
    v8[7] = 8;
    sub_2528319E8();
    v8[6] = 9;
    sub_2528319E8();
    v8[5] = 11;
    sub_2528319E8();
    v8[4] = 10;
    sub_2528319E8();
    v8[3] = 12;
    sub_2528319E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2527C07D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v12[0] = a4;
  v12[1] = a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFC8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  long long v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527C6B6C();
  sub_252831B38();
  char v14 = 0;
  sub_2528319E8();
  if (!v5)
  {
    char v13 = 1;
    sub_2528319E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

__n128 sub_2527C0948@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2527C4914(a1, v10);
  if (!v2)
  {
    long long v5 = v10[11];
    *(_OWORD *)(a2 + 160) = v10[10];
    *(_OWORD *)(a2 + 176) = v5;
    *(_OWORD *)(a2 + 192) = v10[12];
    long long v6 = v10[7];
    *(_OWORD *)(a2 + 96) = v10[6];
    *(_OWORD *)(a2 + 112) = v6;
    long long v7 = v10[9];
    *(_OWORD *)(a2 + 128) = v10[8];
    *(_OWORD *)(a2 + 144) = v7;
    long long v8 = v10[3];
    *(_OWORD *)(a2 + 32) = v10[2];
    *(_OWORD *)(a2 + 48) = v8;
    long long v9 = v10[5];
    *(_OWORD *)(a2 + 64) = v10[4];
    *(_OWORD *)(a2 + 80) = v9;
    __n128 result = (__n128)v10[1];
    *(_OWORD *)a2 = v10[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_2527C09B4(void *a1)
{
  return sub_2527C04BC(a1);
}

uint64_t sub_2527C09CC()
{
  if (*v0) {
    return 0x7550726575737369;
  }
  else {
    return 0x614E726575737369;
  }
}

uint64_t sub_2527C0A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2527C6840(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2527C0A40(uint64_t a1)
{
  unint64_t v2 = sub_2527C6B6C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527C0A7C(uint64_t a1)
{
  unint64_t v2 = sub_2527C6B6C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2527C0AB8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_2527C6964(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_2527C0AE8(void *a1)
{
  return sub_2527C07D4(a1, *v1, v1[1], v1[2], v1[3]);
}

void sub_2527C0B08(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_252831698();
  *a1 = v7;
  long long v8 = *a2;
  if (*a2)
  {
    *long long v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_2527C0BC0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_252831AF8();
  swift_bridgeObjectRetain();
  sub_252831258();
  uint64_t v8 = sub_252831B18();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_252831A58() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      long long v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_252831A58() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_2527C1050(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_2527C0D70()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DCB8);
  uint64_t v3 = sub_252831798();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    long long v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *long long v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_252831AF8();
      sub_252831258();
      uint64_t result = sub_252831B18();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      BOOL v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *BOOL v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2527C1050(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_2527C0D70();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_2527C11EC();
      goto LABEL_22;
    }
    sub_2527C13A0();
  }
  uint64_t v11 = *v4;
  sub_252831AF8();
  sub_252831258();
  uint64_t result = sub_252831B18();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_252831A58(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_252831A88();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_252831A58();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_2527C11EC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DCB8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_252831788();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    BOOL v19 = (void *)(*(void *)(v4 + 48) + v16);
    *BOOL v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2527C13A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DCB8);
  uint64_t v3 = sub_252831798();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_252831AF8();
    swift_bridgeObjectRetain();
    sub_252831258();
    uint64_t result = sub_252831B18();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for UtilityServicesConfigurationsModel()
{
  uint64_t result = qword_26B22BBD0;
  if (!qword_26B22BBD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2527C169C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2527C1704(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD70);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_252830DB8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  int64_t v11 = (char *)v40 - v10;
  uint64_t v12 = sub_2527BCA8C();
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = sub_2527BA3BC();
    uint64_t v16 = v15;
    v44[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF28);
    v44[0] = v13;
    sub_2527B9FFC(v14, v16, (uint64_t)v44);
    swift_bridgeObjectRelease();
    sub_252781C54((uint64_t)v44, &qword_26B22C010);
    if (qword_26B22BF08 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_252831158();
    __swift_project_value_buffer(v22, (uint64_t)qword_26B22C0A0);
    unint64_t v23 = sub_252831138();
    os_log_type_t v24 = sub_252831628();
    if (os_log_type_enabled(v23, v24))
    {
      char v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v25 = 0;
      _os_log_impl(&dword_25277D000, v23, v24, "New Config saved to disk.", v25, 2u);
      MEMORY[0x2533BE070](v25, -1, -1);
    }

    uint64_t v26 = type metadata accessor for UtilityServicesConfigurationsModel();
    sub_2527933FC(a1 + *(int *)(v26 + 20), (uint64_t)v4, &qword_26B22BD70);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_252830D78();
      sub_252781C54((uint64_t)v4, &qword_26B22BD70);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    }
    BOOL v27 = (uint64_t *)(a1 + *(int *)(v26 + 24));
    if (v27[1])
    {
      uint64_t v28 = *v27;
      unint64_t v29 = v27[1];
    }
    else
    {
      uint64_t v28 = 0;
      unint64_t v29 = 0xE000000000000000;
    }
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    long long v30 = sub_252831138();
    os_log_type_t v31 = sub_252831608();
    int v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      v44[0] = v42;
      *(_DWORD *)uint64_t v33 = 136315394;
      v40[1] = v33 + 4;
      sub_2527C3B80(&qword_269C1DCB0, MEMORY[0x263F07490]);
      int v41 = v32;
      uint64_t v34 = sub_252831A38();
      uint64_t v43 = sub_25278F894(v34, v35, v44);
      sub_252831698();
      swift_bridgeObjectRelease();
      uint64_t v36 = *(void (**)(char *, uint64_t))(v6 + 8);
      v36(v9, v5);
      uint64_t v37 = v36;
      *(_WORD *)(v33 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_25278F894(v28, v29, v44);
      sub_252831698();
      swift_bridgeObjectRelease_n();
      uint64_t v38 = v42;
      swift_arrayDestroy();
      MEMORY[0x2533BE070](v38, -1, -1);
      MEMORY[0x2533BE070](v33, -1, -1);

      v37(v11, v5);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      uint64_t v39 = *(void (**)(char *, uint64_t))(v6 + 8);
      v39(v9, v5);
      v39(v11, v5);
    }
    return 1;
  }
  else
  {
    if (qword_26B22BF08 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_252831158();
    __swift_project_value_buffer(v17, (uint64_t)qword_26B22C0A0);
    int64_t v18 = sub_252831138();
    os_log_type_t v19 = sub_252831618();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_25277D000, v18, v19, "Unable to convert Config Model to dictionary format for saving to disk.", v20, 2u);
      MEMORY[0x2533BE070](v20, -1, -1);
    }

    return 0;
  }
}

uint64_t sub_2527C1DBC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_2528315B8();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_2527C0BC0(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_2527C1E54(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DCB8);
    uint64_t v3 = sub_2528317A8();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_252831AF8();
      swift_bridgeObjectRetain();
      sub_252831258();
      uint64_t result = sub_252831B18();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_252831A58(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          os_log_type_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_252831A58();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *uint64_t v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

unint64_t sub_2527C1FF8()
{
  unint64_t result = qword_26B22BDF8;
  if (!qword_26B22BDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BDF8);
  }
  return result;
}

uint64_t destroy for InternalTAFSection()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s19HomeUtilityServices36UtilityServiceFrameworkConfigurationVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UtilityServiceFrameworkConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UtilityServiceFrameworkConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InternalTAFSection(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InternalTAFSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UtilityServiceFrameworkConfiguration()
{
  return &type metadata for UtilityServiceFrameworkConfiguration;
}

uint64_t *sub_2527C2214(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v34 = a2[2];
    a1[1] = a2[1];
    a1[2] = v34;
    uint64_t v6 = a2[4];
    a1[3] = a2[3];
    a1[4] = v6;
    uint64_t v7 = a2[6];
    a1[5] = a2[5];
    a1[6] = v7;
    uint64_t v8 = a2[8];
    a1[7] = a2[7];
    a1[8] = v8;
    uint64_t v9 = a2[10];
    a1[9] = a2[9];
    a1[10] = v9;
    uint64_t v10 = a2[12];
    a1[11] = a2[11];
    a1[12] = v10;
    uint64_t v11 = a2[14];
    a1[13] = a2[13];
    a1[14] = v11;
    uint64_t v12 = a2[16];
    a1[15] = a2[15];
    a1[16] = v12;
    uint64_t v13 = a2[18];
    a1[17] = a2[17];
    a1[18] = v13;
    uint64_t v14 = a2[20];
    a1[19] = a2[19];
    a1[20] = v14;
    uint64_t v15 = a2[22];
    a1[21] = a2[21];
    a1[22] = v15;
    uint64_t v16 = a2[24];
    a1[23] = a2[23];
    a1[24] = v16;
    uint64_t v17 = a2[26];
    a1[25] = a2[25];
    a1[26] = v17;
    uint64_t v18 = a2[28];
    a1[27] = a2[27];
    a1[28] = v18;
    uint64_t v19 = a2[30];
    a1[29] = a2[29];
    a1[30] = v19;
    uint64_t v20 = a2[32];
    a1[31] = a2[31];
    a1[32] = v20;
    uint64_t v21 = a2[34];
    uint64_t v22 = *(int *)(a3 + 20);
    unint64_t v35 = (char *)a1 + v22;
    BOOL v23 = (char *)a2 + v22;
    a1[33] = a2[33];
    a1[34] = v21;
    uint64_t v24 = sub_252830DB8();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v33(v23, 1, v24))
    {
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD70);
      memcpy(v35, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v35, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v35, 0, 1, v24);
    }
    uint64_t v28 = *(int *)(a3 + 24);
    unint64_t v29 = (uint64_t *)((char *)v4 + v28);
    long long v30 = (uint64_t *)((char *)a2 + v28);
    uint64_t v31 = v30[1];
    *unint64_t v29 = *v30;
    v29[1] = v31;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_2527C250C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_252830DB8();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_2527C2668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  uint64_t v11 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v11;
  uint64_t v12 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v12;
  uint64_t v13 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v13;
  uint64_t v14 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v14;
  uint64_t v15 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v15;
  uint64_t v16 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v16;
  uint64_t v17 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v17;
  uint64_t v18 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v18;
  uint64_t v19 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v19;
  uint64_t v20 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v20;
  uint64_t v21 = *(void *)(a2 + 272);
  uint64_t v22 = *(int *)(a3 + 20);
  uint64_t v33 = (void *)(a1 + v22);
  BOOL v23 = (const void *)(a2 + v22);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v21;
  uint64_t v24 = sub_252830DB8();
  uint64_t v25 = *(void *)(v24 - 8);
  int v32 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v32(v23, 1, v24))
  {
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD70);
    memcpy(v33, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(v33, v23, v24);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v33, 0, 1, v24);
  }
  uint64_t v27 = *(int *)(a3 + 24);
  uint64_t v28 = (void *)(a1 + v27);
  unint64_t v29 = (void *)(a2 + v27);
  uint64_t v30 = v29[1];
  void *v28 = *v29;
  v28[1] = v30;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2527C2910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_252830DB8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD70);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_2527C2CF4(char *a1, char *a2, uint64_t a3)
{
  memcpy(a1, a2, 0x118uLL);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_252830DB8();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD70);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_2527C2E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(int *)(a3 + 20);
  BOOL v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  uint64_t v25 = sub_252830DB8();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 40))(v23, v24, v25);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_6;
  }
  if (v29)
  {
LABEL_6:
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD70);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v26 + 32))(v23, v24, v25);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_7:
  uint64_t v31 = *(int *)(a3 + 24);
  int v32 = (void *)(a1 + v31);
  uint64_t v33 = (uint64_t *)(a2 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *int v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2527C30E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2527C30FC);
}

uint64_t sub_2527C30FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD70);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2527C31B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2527C31C4);
}

uint64_t sub_2527C31C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD70);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_2527C3270()
{
  sub_2527C3310();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_2527C3310()
{
  if (!qword_26B22BD78)
  {
    sub_252830DB8();
    unint64_t v0 = sub_252831688();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B22BD78);
    }
  }
}

uint64_t destroy for UtilityServicesAPIPath()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for UtilityServicesAPIPath(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  uint64_t v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  uint64_t v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  uint64_t v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  uint64_t v13 = a2[21];
  a1[20] = a2[20];
  a1[21] = v13;
  uint64_t v14 = a2[23];
  a1[22] = a2[22];
  a1[23] = v14;
  uint64_t v15 = a2[25];
  a1[24] = a2[24];
  a1[25] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for UtilityServicesAPIPath(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  a1[23] = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[24] = a2[24];
  a1[25] = a2[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy208_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

void *assignWithTake for UtilityServicesAPIPath(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = a2[23];
  a1[22] = a2[22];
  a1[23] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = a2[25];
  a1[24] = a2[24];
  a1[25] = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UtilityServicesAPIPath(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 208)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UtilityServicesAPIPath(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 208) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UtilityServicesAPIPath()
{
  return &type metadata for UtilityServicesAPIPath;
}

unint64_t sub_2527C38F0()
{
  unint64_t result = qword_26B22BE30;
  if (!qword_26B22BE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BE30);
  }
  return result;
}

unint64_t sub_2527C3944()
{
  unint64_t result = qword_26B22BE28;
  if (!qword_26B22BE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BE28);
  }
  return result;
}

uint64_t sub_2527C3998(uint64_t a1)
{
  return a1;
}

uint64_t sub_2527C3AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UtilityServicesConfigurationsModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2527C3B2C()
{
  unint64_t result = qword_26B22BE20;
  if (!qword_26B22BE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BE20);
  }
  return result;
}

uint64_t sub_2527C3B80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2527C3BC8()
{
  unint64_t result = qword_26B22BDE0;
  if (!qword_26B22BDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BDE0);
  }
  return result;
}

uint64_t sub_2527C3C1C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x537974696C697475 && a2 == 0xEF73656369767265;
  if (v2 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E5564696C6176 && a2 == 0xEA00000000006C69 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1734431845 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2527C3D94(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461;
  if (v2 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5255726576726573 && a2 == 0xE90000000000004CLL || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x68746150697061 && a2 == 0xE700000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5065636976726573 && a2 == 0xEC00000079786F72)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

void *sub_2527C3F98@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF88);
  uint64_t v5 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527C6170();
  sub_252831B28();
  if (v2) {
    return (void *)__swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v8 = v5;
  int v28 = a2;
  LOBYTE(v30[0]) = 0;
  sub_2527C61C4();
  sub_252831998();
  int v9 = v31;
  uint64_t v10 = v33;
  uint64_t v11 = v34;
  unsigned __int8 v31 = 1;
  swift_bridgeObjectRetain();
  uint64_t v29 = v10;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_252831968();
  uint64_t v27 = v13;
  uint64_t v23 = v12;
  int v24 = v9;
  uint64_t v26 = v11;
  char v72 = 2;
  sub_2527C6218();
  swift_bridgeObjectRetain();
  uint64_t v14 = v100;
  uint64_t v25 = 0;
  sub_252831998();
  long long v69 = v83;
  long long v70 = v84;
  long long v71 = v85;
  long long v65 = v79;
  long long v66 = v80;
  long long v67 = v81;
  long long v68 = v82;
  long long v61 = v75;
  long long v62 = v76;
  long long v63 = v77;
  long long v64 = v78;
  long long v59 = v73;
  long long v60 = v74;
  long long v96 = v83;
  long long v97 = v84;
  long long v98 = v85;
  long long v92 = v79;
  long long v93 = v80;
  long long v94 = v81;
  long long v95 = v82;
  long long v88 = v75;
  long long v89 = v76;
  long long v90 = v77;
  long long v91 = v78;
  long long v86 = v73;
  long long v87 = v74;
  char v54 = 3;
  sub_2527A0608((uint64_t)&v59);
  sub_2527C626C();
  sub_252831998();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v14);
  *(_OWORD *)&v30[23] = v68;
  *(_OWORD *)&v30[25] = v69;
  *(_OWORD *)&v30[27] = v70;
  *(_OWORD *)&v30[29] = v71;
  *(_OWORD *)&v30[13] = v63;
  *(_OWORD *)&v30[15] = v64;
  *(_OWORD *)&v30[17] = v65;
  *(_OWORD *)&v30[19] = v66;
  *(_OWORD *)&v30[21] = v67;
  *(_OWORD *)&v30[7] = v60;
  *(_OWORD *)&v30[9] = v61;
  *(_OWORD *)&v30[11] = v62;
  uint64_t v15 = v29;
  uint64_t v100 = v55;
  uint64_t v25 = v56;
  uint64_t v21 = v58;
  uint64_t v22 = v57;
  unsigned __int8 v16 = v24;
  LOBYTE(v30[0]) = v24;
  uint64_t v17 = v26;
  uint64_t v18 = v27;
  v30[1] = v29;
  v30[2] = v26;
  uint64_t v19 = v23;
  v30[3] = v23;
  v30[4] = v27;
  *(_OWORD *)&v30[5] = v59;
  v30[31] = v55;
  v30[32] = v56;
  v30[33] = v57;
  v30[34] = v58;
  sub_2527C62C0((uint64_t)v30);
  sub_2527A06F4((uint64_t)&v59);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  long long v46 = v95;
  long long v47 = v96;
  long long v48 = v97;
  long long v49 = v98;
  long long v42 = v91;
  long long v43 = v92;
  long long v44 = v93;
  long long v45 = v94;
  long long v38 = v87;
  long long v39 = v88;
  long long v40 = v89;
  long long v41 = v90;
  unsigned __int8 v31 = v16;
  *(_DWORD *)int v32 = v99[0];
  *(_DWORD *)&v32[3] = *(_DWORD *)((char *)v99 + 3);
  uint64_t v33 = v15;
  uint64_t v34 = v17;
  uint64_t v35 = v19;
  uint64_t v36 = v18;
  long long v37 = v86;
  uint64_t v50 = v100;
  uint64_t v51 = v25;
  uint64_t v52 = v22;
  uint64_t v53 = v21;
  sub_2527C3998((uint64_t)&v31);
  return memcpy(v28, v30, 0x118uLL);
}

uint64_t sub_2527C4518(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000025283C230 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000025283C250 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025283C270)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2527C4658(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_2527C3BC8();
  sub_252831B28();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    LOBYTE(v11) = 0;
    LOBYTE(v7) = sub_252831978();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF40);
    char v10 = 1;
    sub_25279077C((unint64_t *)&unk_26B22BF50);
    sub_252831998();
    char v10 = 2;
    swift_bridgeObjectRetain();
    sub_252831958();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7 & 1;
}

uint64_t sub_2527C48C8()
{
  unint64_t v0 = sub_252831918();
  swift_bridgeObjectRelease();
  if (v0 >= 0xD) {
    return 13;
  }
  else {
    return v0;
  }
}

uint64_t sub_2527C4914@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF98);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  long long v95 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_2527C547C();
  sub_252831B28();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v95);
  }
  uint64_t v10 = v6;
  long long v74 = a2;
  LOBYTE(v94[0]) = 0;
  uint64_t v12 = sub_252831968();
  uint64_t v14 = v13;
  LOBYTE(v94[0]) = 1;
  swift_bridgeObjectRetain();
  uint64_t v73 = sub_252831968();
  LOBYTE(v94[0]) = 2;
  uint64_t v16 = v15;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_252831968();
  uint64_t v80 = v16;
  uint64_t v72 = v17;
  LOBYTE(v94[0]) = 4;
  uint64_t v19 = v18;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_252831968();
  uint64_t v79 = v19;
  uint64_t v71 = v20;
  LOBYTE(v94[0]) = 3;
  uint64_t v22 = v21;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_252831968();
  uint64_t v78 = v22;
  uint64_t v70 = v23;
  LOBYTE(v94[0]) = 5;
  uint64_t v25 = v24;
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_252831968();
  uint64_t v77 = v25;
  uint64_t v69 = v26;
  LOBYTE(v94[0]) = 6;
  uint64_t v28 = v27;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_252831968();
  uint64_t v76 = v28;
  uint64_t v68 = v29;
  LOBYTE(v94[0]) = 7;
  uint64_t v31 = v30;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_252831968();
  uint64_t v75 = v31;
  uint64_t v64 = v32;
  LOBYTE(v94[0]) = 8;
  uint64_t v34 = v33;
  swift_bridgeObjectRetain();
  uint64_t v63 = sub_252831968();
  uint64_t v66 = v34;
  uint64_t v67 = v35;
  LOBYTE(v94[0]) = 9;
  swift_bridgeObjectRetain();
  uint64_t v60 = sub_252831968();
  uint64_t v62 = v36;
  unint64_t v65 = 0;
  LOBYTE(v94[0]) = 11;
  swift_bridgeObjectRetain();
  unint64_t v37 = v65;
  uint64_t v59 = sub_252831968();
  uint64_t v61 = v38;
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v95);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v65) {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    LOBYTE(v94[0]) = 10;
    swift_bridgeObjectRetain();
    uint64_t v58 = sub_252831968();
    uint64_t v40 = v39;
    LOBYTE(v94[0]) = 12;
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_252831928();
    if (v42) {
      uint64_t v43 = v41;
    }
    else {
      uint64_t v43 = 0;
    }
    uint64_t v57 = v43;
    unint64_t v44 = 0xE000000000000000;
    if (v42) {
      unint64_t v44 = v42;
    }
    unint64_t v65 = v44;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
    *(void *)&long long v81 = v12;
    *((void *)&v81 + 1) = v14;
    *(void *)&long long v82 = v73;
    *((void *)&v82 + 1) = v80;
    *(void *)&long long v83 = v72;
    *((void *)&v83 + 1) = v79;
    *(void *)&long long v84 = v71;
    *((void *)&v84 + 1) = v78;
    *(void *)&long long v85 = v70;
    *((void *)&v85 + 1) = v77;
    *(void *)&long long v86 = v69;
    *((void *)&v86 + 1) = v76;
    *(void *)&long long v87 = v68;
    *((void *)&v87 + 1) = v75;
    *(void *)&long long v88 = v64;
    *((void *)&v88 + 1) = v66;
    *(void *)&long long v89 = v63;
    *((void *)&v89 + 1) = v67;
    *(void *)&long long v90 = v60;
    *((void *)&v90 + 1) = v62;
    *(void *)&long long v91 = v59;
    *((void *)&v91 + 1) = v61;
    *(void *)&long long v92 = v58;
    *((void *)&v92 + 1) = v40;
    *(void *)&long long v93 = v43;
    *((void *)&v93 + 1) = v65;
    sub_2527A0608((uint64_t)&v81);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v45 = v75;
    swift_bridgeObjectRelease();
    uint64_t v46 = v66;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v47 = v62;
    swift_bridgeObjectRelease();
    uint64_t v48 = v61;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v95);
    v94[0] = v12;
    v94[1] = v14;
    v94[2] = v73;
    v94[3] = v80;
    v94[4] = v72;
    v94[5] = v79;
    v94[6] = v71;
    v94[7] = v78;
    v94[8] = v70;
    v94[9] = v77;
    v94[10] = v69;
    v94[11] = v76;
    v94[12] = v68;
    v94[13] = v45;
    v94[14] = v64;
    v94[15] = v46;
    v94[16] = v63;
    v94[17] = v67;
    v94[18] = v60;
    v94[19] = v47;
    v94[20] = v59;
    v94[21] = v48;
    v94[22] = v58;
    v94[23] = v40;
    v94[24] = v57;
    v94[25] = v65;
    uint64_t result = sub_2527A06F4((uint64_t)v94);
    long long v49 = v92;
    uint64_t v50 = v74;
    v74[10] = v91;
    v50[11] = v49;
    v50[12] = v93;
    long long v51 = v88;
    v50[6] = v87;
    v50[7] = v51;
    long long v52 = v90;
    v50[8] = v89;
    v50[9] = v52;
    long long v53 = v84;
    v50[2] = v83;
    v50[3] = v53;
    long long v54 = v86;
    v50[4] = v85;
    v50[5] = v54;
    long long v55 = v82;
    *uint64_t v50 = v81;
    v50[1] = v55;
  }
  return result;
}

unint64_t sub_2527C547C()
{
  unint64_t result = qword_26B22BE60;
  if (!qword_26B22BE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BE60);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for UtilityServicesAPIPath.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for UtilityServicesAPIPath.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2527C562CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UtilityServicesAPIPath.CodingKeys()
{
  return &type metadata for UtilityServicesAPIPath.CodingKeys;
}

ValueMetadata *type metadata accessor for UtilityServiceFrameworkConfiguration.CodingKeys()
{
  return &type metadata for UtilityServiceFrameworkConfiguration.CodingKeys;
}

unsigned char *_s19HomeUtilityServices36UtilityServiceFrameworkConfigurationV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2527C5744);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UtilityServicesConfigurationsModel.CodingKeys()
{
  return &type metadata for UtilityServicesConfigurationsModel.CodingKeys;
}

uint64_t destroy for UtilityServicesConfiguration()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UtilityServicesConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  uint64_t v12 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v12;
  uint64_t v13 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v13;
  uint64_t v14 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v14;
  uint64_t v15 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v15;
  uint64_t v16 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v16;
  uint64_t v17 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v17;
  uint64_t v18 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v18;
  uint64_t v19 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UtilityServicesConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy280_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x118uLL);
}

uint64_t assignWithTake for UtilityServicesConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UtilityServicesConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 280)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UtilityServicesConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 280) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 280) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UtilityServicesConfiguration()
{
  return &type metadata for UtilityServicesConfiguration;
}

unint64_t sub_2527C5E5C()
{
  unint64_t result = qword_269C1DCC8;
  if (!qword_269C1DCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DCC8);
  }
  return result;
}

unint64_t sub_2527C5EB4()
{
  unint64_t result = qword_269C1DCD0;
  if (!qword_269C1DCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DCD0);
  }
  return result;
}

unint64_t sub_2527C5F0C()
{
  unint64_t result = qword_269C1DCD8;
  if (!qword_269C1DCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DCD8);
  }
  return result;
}

unint64_t sub_2527C5F64()
{
  unint64_t result = qword_26B22BE70;
  if (!qword_26B22BE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BE70);
  }
  return result;
}

unint64_t sub_2527C5FBC()
{
  unint64_t result = qword_26B22BE68;
  if (!qword_26B22BE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BE68);
  }
  return result;
}

unint64_t sub_2527C6014()
{
  unint64_t result = qword_26B22BDF0;
  if (!qword_26B22BDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BDF0);
  }
  return result;
}

unint64_t sub_2527C606C()
{
  unint64_t result = qword_26B22BDE8;
  if (!qword_26B22BDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BDE8);
  }
  return result;
}

unint64_t sub_2527C60C4()
{
  unint64_t result = qword_26B22BE40;
  if (!qword_26B22BE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BE40);
  }
  return result;
}

unint64_t sub_2527C611C()
{
  unint64_t result = qword_26B22BE38;
  if (!qword_26B22BE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BE38);
  }
  return result;
}

unint64_t sub_2527C6170()
{
  unint64_t result = qword_26B22BE08;
  if (!qword_26B22BE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BE08);
  }
  return result;
}

unint64_t sub_2527C61C4()
{
  unint64_t result = qword_26B22BE00;
  if (!qword_26B22BE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BE00);
  }
  return result;
}

unint64_t sub_2527C6218()
{
  unint64_t result = qword_26B22BE80;
  if (!qword_26B22BE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BE80);
  }
  return result;
}

unint64_t sub_2527C626C()
{
  unint64_t result = qword_26B22BEB0;
  if (!qword_26B22BEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BEB0);
  }
  return result;
}

uint64_t sub_2527C62C0(uint64_t a1)
{
  return a1;
}

unint64_t sub_2527C63F0()
{
  unint64_t result = qword_26B22BE78;
  if (!qword_26B22BE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BE78);
  }
  return result;
}

unint64_t sub_2527C6444()
{
  unint64_t result = qword_26B22BEA8;
  if (!qword_26B22BEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BEA8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for UtilityServicesConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2527C6564);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UtilityServicesConfiguration.CodingKeys()
{
  return &type metadata for UtilityServicesConfiguration.CodingKeys;
}

void *initializeWithCopy for TAFAuthorizationEndpoints(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TAFAuthorizationEndpoints(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for TAFAuthorizationEndpoints(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TAFAuthorizationEndpoints(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TAFAuthorizationEndpoints(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServiceProxyConfiguration()
{
  return &type metadata for ServiceProxyConfiguration;
}

unint64_t sub_2527C673C()
{
  unint64_t result = qword_269C1DCE0;
  if (!qword_269C1DCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DCE0);
  }
  return result;
}

unint64_t sub_2527C6794()
{
  unint64_t result = qword_26B22BE18;
  if (!qword_26B22BE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BE18);
  }
  return result;
}

unint64_t sub_2527C67EC()
{
  unint64_t result = qword_26B22BE10;
  if (!qword_26B22BE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BE10);
  }
  return result;
}

uint64_t sub_2527C6840(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x614E726575737369 && a2 == 0xEA0000000000656DLL;
  if (v2 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7550726575737369 && a2 == 0xEF79654B63696C62)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2527C6964(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFA0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527C6B6C();
  sub_252831B28();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    char v11 = 0;
    uint64_t v7 = sub_252831968();
    char v10 = 1;
    swift_bridgeObjectRetain();
    sub_252831968();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_2527C6B6C()
{
  unint64_t result = qword_26B22BE90;
  if (!qword_26B22BE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BE90);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ServiceProxyConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2527C6C8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServiceProxyConfiguration.CodingKeys()
{
  return &type metadata for ServiceProxyConfiguration.CodingKeys;
}

unint64_t sub_2527C6CC8()
{
  unint64_t result = qword_269C1DCE8;
  if (!qword_269C1DCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269C1DCE8);
  }
  return result;
}

unint64_t sub_2527C6D20()
{
  unint64_t result = qword_26B22BEA0;
  if (!qword_26B22BEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BEA0);
  }
  return result;
}

unint64_t sub_2527C6D78()
{
  unint64_t result = qword_26B22BE98;
  if (!qword_26B22BE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BE98);
  }
  return result;
}

uint64_t sub_2527C6DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v7[9] = swift_task_alloc();
  uint64_t v8 = sub_2528307F8();
  v7[10] = v8;
  v7[11] = *(void *)(v8 - 8);
  v7[12] = swift_task_alloc();
  v7[13] = swift_task_alloc();
  v7[14] = swift_task_alloc();
  v7[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  v7[16] = swift_task_alloc();
  uint64_t v9 = sub_252830BD8();
  v7[17] = v9;
  v7[18] = *(void *)(v9 - 8);
  v7[19] = swift_task_alloc();
  v7[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2527C6F8C, 0, 0);
}

uint64_t sub_2527C6F8C()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[16];
  sub_25279D788(v0[7], v0[8]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_252781C54(v0[16], &qword_26B22BD58);
    if (qword_269C1CED8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D2F8);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Request URL for Service Location API not found", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }

    (*(void (**)(void, uint64_t, uint64_t, void))(v0[11] + 56))(v0[2], 1, 1, v0[10]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    uint64_t v11 = v0[19];
    uint64_t v10 = v0[20];
    uint64_t v13 = v0[17];
    uint64_t v12 = v0[18];
    uint64_t v15 = v0[13];
    uint64_t v14 = v0[14];
    uint64_t v17 = v0[11];
    uint64_t v16 = v0[12];
    uint64_t v18 = v0[10];
    uint64_t v25 = v0[15];
    (*(void (**)(uint64_t, void, uint64_t))(v12 + 32))(v10, v0[16], v13);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v10, v13);
    sub_252830798();
    sub_252804CA4(v15);
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v0[21] = v19;
    v0[22] = (v17 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v19(v16, v18);
    uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
    v20(v14, v15, v18);
    sub_2528307B8();
    v19(v15, v18);
    v20(v25, v14, v18);
    sub_2528307B8();
    v19(v14, v18);
    sub_252830778();
    uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C1D908 + dword_269C1D908);
    uint64_t v21 = (void *)swift_task_alloc();
    v0[23] = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_2527C7378;
    uint64_t v22 = v0[15];
    uint64_t v23 = v0[9];
    uint64_t v24 = v0[7];
    return v26(v23, v22, v24);
  }
}

uint64_t sub_2527C7378()
{
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v1 = sub_2527C7740;
  }
  else
  {
    uint64_t v1 = sub_2527C7490;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_2527C7490()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[9];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_252781C54(v3, &qword_26B22BD40);
    if (qword_269C1CEC8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D2C8);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable to sign service location request", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }
    uint64_t v8 = (void (*)(uint64_t, uint64_t))v0[21];
    uint64_t v9 = v0[20];
    uint64_t v10 = v0[17];
    uint64_t v11 = v0[18];
    uint64_t v12 = v0[15];
    uint64_t v13 = v0[10];

    v8(v12, v13);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    uint64_t v14 = 1;
  }
  else
  {
    uint64_t v15 = (void (*)(uint64_t, uint64_t))v0[21];
    uint64_t v21 = v0[20];
    uint64_t v17 = v0[17];
    uint64_t v16 = v0[18];
    uint64_t v18 = v0[15];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[2], v3, v1);
    sub_2528307E8();
    v15(v18, v1);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v21, v17);
    uint64_t v14 = 0;
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[11] + 56))(v0[2], v14, 1, v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_2527C7740()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[11] + 56))(v0[9], 1, 1, v0[10]);
  sub_252781C54(v0[9], &qword_26B22BD40);
  if (qword_269C1CEC8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_252831158();
  __swift_project_value_buffer(v1, (uint64_t)qword_269C2D2C8);
  uint64_t v2 = sub_252831138();
  os_log_type_t v3 = sub_252831618();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_25277D000, v2, v3, "Unable to sign service location request", v4, 2u);
    MEMORY[0x2533BE070](v4, -1, -1);
  }
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v0[21];
  uint64_t v6 = v0[20];
  uint64_t v7 = v0[17];
  uint64_t v8 = v0[18];
  uint64_t v9 = v0[15];
  uint64_t v10 = v0[10];

  v5(v9, v10);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[11] + 56))(v0[2], 1, 1, v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_2527C793C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_configuration)
                 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config);
  swift_bridgeObjectRetain();
  return v1;
}

id UtilitySubscriptionService.configuration.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_configuration);
}

id UtilitySubscriptionService.__allocating_init(configuration:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_252830DE8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (char *)objc_allocWithZone(v2);
  uint64_t v9 = (uint64_t *)&v8[OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_sessionID];
  uint64_t v10 = v8;
  sub_252830DD8();
  uint64_t v11 = sub_252830DC8();
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *uint64_t v9 = v11;
  v9[1] = v13;
  *(void *)&v10[OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_configuration] = a1;
  id v14 = a1;

  v17.receiver = v10;
  v17.super_class = v2;
  id v15 = objc_msgSendSuper2(&v17, sel_init);

  return v15;
}

id UtilitySubscriptionService.init(configuration:)(void *a1)
{
  uint64_t v3 = sub_252830DE8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t *)&v1[OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_sessionID];
  uint64_t v8 = v1;
  sub_252830DD8();
  uint64_t v9 = sub_252830DC8();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *uint64_t v7 = v9;
  v7[1] = v11;
  *(void *)&v8[OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_configuration] = a1;
  id v12 = a1;

  uint64_t v13 = (objc_class *)type metadata accessor for UtilitySubscriptionService();
  v16.receiver = v8;
  v16.super_class = v13;
  id v14 = objc_msgSendSuper2(&v16, sel_init);

  return v14;
}

uint64_t type metadata accessor for UtilitySubscriptionService()
{
  return self;
}

uint64_t UtilitySubscriptionService.__allocating_init(utilityID:)(uint64_t a1, uint64_t a2)
{
  v2[4] = a1;
  v2[5] = a2;
  uint64_t v3 = sub_252830DE8();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2527C7E58, 0, 0);
}

uint64_t sub_2527C7E58()
{
  if (qword_26B22BEE0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_252831158();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B22C058);
  uint64_t v2 = sub_252831138();
  os_log_type_t v3 = sub_252831618();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_25277D000, v2, v3, "Initializing UtilitySubscriptionService object using UtilityID!!", v4, 2u);
    MEMORY[0x2533BE070](v4, -1, -1);
  }

  uint64_t v5 = sub_252831138();
  os_log_type_t v6 = sub_252831618();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_25277D000, v5, v6, "This is expensive, consider reusing Object.", v7, 2u);
    MEMORY[0x2533BE070](v7, -1, -1);
  }

  id v8 = objc_msgSend(self, sel_ephemeralSessionConfiguration);
  id v9 = objc_msgSend(self, sel_sessionWithConfiguration_, v8);
  v0[9] = v9;

  uint64_t v10 = (void *)swift_task_alloc();
  v0[10] = v10;
  void *v10 = v0;
  v10[1] = sub_2527C806C;
  uint64_t v12 = v0[4];
  uint64_t v11 = v0[5];
  return sub_2527F21B4(v12, v11, (uint64_t)v9);
}

uint64_t sub_2527C806C(uint64_t a1)
{
  uint64_t v5 = *v2;
  uint64_t v4 = *v2;
  uint64_t v6 = *v2;
  swift_task_dealloc();
  uint64_t v7 = *(void **)(v4 + 72);
  if (v1)
  {

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    id v8 = *(uint64_t (**)(void))(v6 + 8);
    return v8();
  }
  else
  {
    swift_bridgeObjectRelease();

    *(void *)(v5 + 88) = a1;
    return MEMORY[0x270FA2498](sub_2527C81FC, 0, 0);
  }
}

uint64_t sub_2527C81FC()
{
  Class super_class = v0[5].super_class;
  Class v3 = v0[3].super_class;
  id receiver = v0[4].receiver;
  id v4 = v0[3].receiver;
  uint64_t v5 = (objc_class *)type metadata accessor for UtilitySubscriptionService();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  uint64_t v7 = (uint64_t *)&v6[OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_sessionID];
  id v8 = v6;
  sub_252830DD8();
  uint64_t v9 = sub_252830DC8();
  uint64_t v11 = v10;
  (*((void (**)(id, id))v3 + 1))(receiver, v4);
  *uint64_t v7 = v9;
  v7[1] = v11;
  *(void *)&v8[OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_configuration] = super_class;
  uint64_t v12 = super_class;

  v0[1].id receiver = v8;
  v0[1].Class super_class = v5;
  id v13 = objc_msgSendSuper2(v0 + 1, sel_init);

  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(id))v0->super_class;
  return v14(v13);
}

uint64_t sub_2527C8318(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_2527C833C, 0, 0);
}

uint64_t sub_2527C833C()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_configuration);
  Class v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_sessionID);
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C1EA50 + dword_269C1EA50);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[5] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_2527C8414;
  uint64_t v7 = v0[2];
  uint64_t v8 = v0[3];
  return v10(v2, v7, v8, v4, v5);
}

uint64_t sub_2527C8414(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_2527C8698(int a1, void *a2, void *aBlock, void *a4)
{
  v4[2] = a2;
  v4[3] = a4;
  void v4[4] = _Block_copy(aBlock);
  v4[5] = sub_252831228();
  id v7 = a2;
  id v8 = a4;
  return MEMORY[0x270FA2498](sub_2527C8748, 0, 0);
}

uint64_t sub_2527C8748()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_configuration);
  Class v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_sessionID);
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C1EA50 + dword_269C1EA50);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[6] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_2527C8824;
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[2];
  return v10(v2, v7, v8, v4, v5);
}

uint64_t sub_2527C8824()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2527C89C8, 0, 0);
  }
  else
  {
    Class v3 = *(void **)(v2 + 24);

    swift_bridgeObjectRelease();
    type metadata accessor for TAFVerificationFactor();
    uint64_t v4 = (void *)sub_2528314E8();
    swift_bridgeObjectRelease();
    uint64_t v5 = *(void (***)(void, void, void))(v2 + 32);
    ((void (**)(void, void *, void))v5)[2](v5, v4, 0);

    _Block_release(v5);
    uint64_t v6 = *(uint64_t (**)(void))(v2 + 8);
    return v6();
  }
}

uint64_t sub_2527C89C8()
{
  uint64_t v1 = *(void **)(v0 + 56);
  uint64_t v2 = *(void **)(v0 + 24);

  swift_bridgeObjectRelease();
  Class v3 = (void *)sub_252830B08();

  uint64_t v4 = *(void (***)(void, void, void))(v0 + 32);
  ((void (**)(void, void, void *))v4)[2](v4, 0, v3);

  _Block_release(v4);
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_2527C8A80(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_2527C8AA4, 0, 0);
}

uint64_t sub_2527C8AA4()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (uint64_t *)(*(void *)(v1 + OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_configuration)
                 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config);
  uint64_t v4 = *v2;
  uint64_t v3 = v2[1];
  v0[5] = v3;
  uint64_t v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_sessionID);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C1E6D0
                                                                                     + dword_269C1E6D0);
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  v0[6] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[7] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_2527C8BBC;
  uint64_t v10 = v0[2];
  uint64_t v9 = v0[3];
  return v12(v10, v9, v4, v3, v6, v7);
}

uint64_t sub_2527C8BBC(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_2527C8D18, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5(a1 & 1);
  }
}

uint64_t sub_2527C8D18()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_2527C8F0C(void *a1, void *a2, void *aBlock, void *a4)
{
  v4[3] = a2;
  void v4[4] = a4;
  v4[2] = a1;
  v4[5] = _Block_copy(aBlock);
  id v8 = a1;
  id v9 = a2;
  id v10 = a4;
  return MEMORY[0x270FA2498](sub_2527C8FA4, 0, 0);
}

uint64_t sub_2527C8FA4()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (uint64_t *)(*(void *)(v1 + OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_configuration)
                 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config);
  uint64_t v4 = *v2;
  uint64_t v3 = v2[1];
  v0[6] = v3;
  uint64_t v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_sessionID);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C1E6D0
                                                                                     + dword_269C1E6D0);
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  v0[7] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v8 = (void *)swift_task_alloc();
  v0[8] = v8;
  *id v8 = v0;
  v8[1] = sub_2527C90BC;
  uint64_t v10 = v0[2];
  uint64_t v9 = v0[3];
  return v12(v10, v9, v4, v3, v6, v7);
}

uint64_t sub_2527C90BC(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_2527C925C, 0, 0);
  }
  else
  {
    uint64_t v6 = *(void **)(v4 + 32);
    uint64_t v5 = *(void *)(v4 + 40);
    id v8 = *(void **)(v4 + 16);
    uint64_t v7 = *(void **)(v4 + 24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, void, void))(v5 + 16))(v5, a1 & 1, 0);
    _Block_release(*(const void **)(v4 + 40));
    uint64_t v9 = *(uint64_t (**)(void))(v4 + 8);
    return v9();
  }
}

uint64_t sub_2527C925C()
{
  uint64_t v1 = *(void **)(v0 + 72);
  uint64_t v3 = *(void **)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v5 = *(void **)(v0 + 16);
  uint64_t v4 = *(void **)(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v6 = (void *)sub_252830B08();
  (*(void (**)(uint64_t, void, void *))(v2 + 16))(v2, 0, v6);

  _Block_release(*(const void **)(v0 + 40));
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_2527C9324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x270FA2498](sub_2527C934C, 0, 0);
}

uint64_t sub_2527C934C()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = (uint64_t *)(*(void *)(v1 + OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_configuration)
                 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config);
  uint64_t v4 = *v2;
  uint64_t v3 = v2[1];
  v0[8] = v3;
  uint64_t v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_sessionID);
  uint64_t v6 = *v5;
  v0[9] = v5[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[10] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_2527C945C;
  uint64_t v8 = v0[5];
  uint64_t v9 = v0[6];
  uint64_t v10 = v0[3];
  uint64_t v11 = v0[4];
  uint64_t v12 = v0[2];
  return sub_252810BEC(v12, v10, v11, v8, v9, v4, v3, v6);
}

uint64_t sub_2527C945C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2527C95A4, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_2527C95A4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2527C9610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_2527C9634, 0, 0);
}

uint64_t sub_2527C9634()
{
  unint64_t v1 = v0[3];
  uint64_t v2 = v0[2] & 0xFFFFFFFFFFFFLL;
  if ((v1 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(v1) & 0xF;
  }
  if (v2)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(v0[5] + OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_configuration)
                   + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config);
    uint64_t v4 = *v3;
    uint64_t v5 = v3[1];
    v0[6] = v5;
    id v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C1E748
                                                                                                + dword_269C1E748);
    swift_bridgeObjectRetain();
    uint64_t v6 = (void *)swift_task_alloc();
    v0[7] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_2527C9880;
    uint64_t v7 = v0[4];
    uint64_t v8 = v0[2];
    return v15(v8, v1, 0, 0, v4, v5, v7);
  }
  else
  {
    if (qword_269C1CED0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_252831158();
    __swift_project_value_buffer(v10, (uint64_t)qword_269C2D2E0);
    uint64_t v11 = sub_252831138();
    os_log_type_t v12 = sub_252831618();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_25277D000, v11, v12, "Attempting to generate token with a empty authorization Token!!!", v13, 2u);
      MEMORY[0x2533BE070](v13, -1, -1);
    }

    type metadata accessor for NetworkError();
    sub_2527B3838();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
    return v14();
  }
}

uint64_t sub_2527C9880(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_2527C99D8, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_2527C99D8()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2527C9BC0(int a1, void *a2, void *aBlock, void *a4)
{
  v4[2] = a2;
  v4[3] = a4;
  void v4[4] = _Block_copy(aBlock);
  uint64_t v7 = sub_2528312A8();
  uint64_t v9 = v8;
  v4[5] = v8;
  id v10 = a2;
  id v11 = a4;
  os_log_type_t v12 = (void *)swift_task_alloc();
  v4[6] = v12;
  void *v12 = v4;
  v12[4] = v10;
  v12[5] = v11;
  void v12[2] = v7;
  uint64_t v12[3] = v9;
  v12[1] = sub_2527C9CC0;
  return MEMORY[0x270FA2498](sub_2527C9634, 0, 0);
}

uint64_t sub_2527C9CC0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void **)(*v2 + 24);
  uint64_t v7 = *(void **)(*v2 + 16);
  uint64_t v8 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  uint64_t v9 = *(void (***)(void, void, void))(v5 + 32);
  if (v3)
  {
    id v10 = (void *)sub_252830B08();

    ((void (**)(void, void, void *))v9)[2](v9, 0, v10);
    _Block_release(v9);
  }
  else
  {
    ((void (**)(void, void *, void))v9)[2](v9, a1, 0);
    _Block_release(v9);
  }
  id v11 = *(uint64_t (**)(void))(v8 + 8);
  return v11();
}

uint64_t sub_2527C9E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_2527C9EC0, 0, 0);
}

uint64_t sub_2527C9EC0()
{
  uint64_t v1 = (uint64_t *)(*(void *)(v0[5] + OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_configuration)
                 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C1E140 + dword_269C1E140);
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  v0[6] = v3;
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_2527C9FB0;
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[2];
  return v9(v7, v5, v2, v3, v6);
}

uint64_t sub_2527C9FB0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_2527CA108, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_2527CA108()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2527CA2F0(int a1, void *a2, void *aBlock, void *a4)
{
  v4[2] = a2;
  v4[3] = a4;
  void v4[4] = _Block_copy(aBlock);
  v4[5] = sub_2528312A8();
  v4[6] = v7;
  id v8 = a2;
  id v9 = a4;
  return MEMORY[0x270FA2498](sub_2527CA38C, 0, 0);
}

uint64_t sub_2527CA38C()
{
  uint64_t v1 = (uint64_t *)(*(void *)(v0[3] + OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_configuration)
                 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config);
  id v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C1E140 + dword_269C1E140);
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  v0[7] = v3;
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[8] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_2527CA47C;
  uint64_t v6 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v7 = v0[2];
  return v9(v6, v5, v2, v3, v7);
}

uint64_t sub_2527CA47C()
{
  uint64_t v2 = (void *)*v1;
  v2[9] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2527CA630, 0, 0);
  }
  else
  {
    uint64_t v4 = (void *)v2[2];
    uint64_t v3 = (void *)v2[3];
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    type metadata accessor for UtilityServiceLocation();
    uint64_t v5 = (void *)sub_2528314E8();
    swift_bridgeObjectRelease();
    uint64_t v6 = (void (**)(void, void, void))v2[4];
    ((void (**)(void, void *, void))v6)[2](v6, v5, 0);

    _Block_release(v6);
    uint64_t v7 = (uint64_t (*)(void))v2[1];
    return v7();
  }
}

uint64_t sub_2527CA630()
{
  uint64_t v1 = (void *)v0[9];
  uint64_t v3 = (void *)v0[2];
  uint64_t v2 = (void *)v0[3];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)sub_252830B08();

  uint64_t v5 = (void (**)(void, void, void))v0[4];
  ((void (**)(void, void, void *))v5)[2](v5, 0, v4);

  _Block_release(v5);
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_2527CA6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x270FA2498](sub_2527CA714, 0, 0);
}

uint64_t sub_2527CA714()
{
  uint64_t v1 = (uint64_t *)(*(void *)(v0[7] + OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_configuration)
                 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C1D960
                                                                                              + dword_269C1D960);
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  v0[8] = v3;
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_2527CA808;
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v7 = v0[3];
  uint64_t v8 = v0[4];
  uint64_t v9 = v0[2];
  return v11(v9, v7, v8, v5, v2, v3, v6);
}

uint64_t sub_2527CA808(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_2527CA960, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_2527CA960()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2527CAB5C(int a1, int a2, void *a3, void *aBlock, void *a5)
{
  v5[2] = a3;
  v5[3] = a5;
  v5[4] = _Block_copy(aBlock);
  v5[5] = sub_2528312A8();
  v5[6] = v8;
  v5[7] = sub_2528312A8();
  v5[8] = v9;
  id v10 = a3;
  id v11 = a5;
  return MEMORY[0x270FA2498](sub_2527CAC08, 0, 0);
}

uint64_t sub_2527CAC08()
{
  uint64_t v1 = (uint64_t *)(*(void *)(v0[3] + OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_configuration)
                 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config);
  id v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C1D960
                                                                                              + dword_269C1D960);
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  v0[9] = v3;
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[10] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_2527CACFC;
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[8];
  uint64_t v8 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v9 = v0[2];
  return v11(v8, v7, v5, v6, v2, v3, v9);
}

uint64_t sub_2527CACFC(void *a1)
{
  uint64_t v4 = (void *)*v2;
  v4[11] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_2527CAE9C, 0, 0);
  }
  else
  {
    uint64_t v6 = (void *)v4[3];
    uint64_t v5 = (void (**)(void, void, void))v4[4];
    uint64_t v7 = (void *)v4[2];
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ((void (**)(void, void *, void))v5)[2](v5, a1, 0);
    _Block_release(v5);

    uint64_t v8 = (uint64_t (*)(void))v4[1];
    return v8();
  }
}

uint64_t sub_2527CAE9C()
{
  uint64_t v1 = (void *)v0[11];
  uint64_t v3 = (void *)v0[3];
  uint64_t v2 = (void (**)(void, void, void))v0[4];
  uint64_t v4 = (void *)v0[2];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_252830B08();

  ((void (**)(void, void, void *))v2)[2](v2, 0, v5);
  _Block_release(v2);
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t static UtilitySubscriptionService.renewAccessToken(refreshToken:utilityID:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C1DD48 + dword_269C1DD48);
  id v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *id v11 = v5;
  v11[1] = sub_252793470;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_2527CB1D8(int a1, int a2, void *a3, void *aBlock)
{
  v4[2] = a3;
  v4[3] = _Block_copy(aBlock);
  uint64_t v6 = sub_2528312A8();
  uint64_t v8 = v7;
  void v4[4] = v7;
  uint64_t v9 = sub_2528312A8();
  uint64_t v11 = v10;
  v4[5] = v10;
  id v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, id))((char *)&dword_269C1DD48 + dword_269C1DD48);
  id v12 = a3;
  uint64_t v13 = (void *)swift_task_alloc();
  v4[6] = v13;
  *uint64_t v13 = v4;
  v13[1] = sub_2527CB2F0;
  return v15(v6, v8, v9, v11, v12);
}

uint64_t sub_2527CB2F0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void **)(*v2 + 16);
  uint64_t v7 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void (***)(void, void, void))(v5 + 24);
  if (v3)
  {
    uint64_t v9 = (void *)sub_252830B08();

    ((void (**)(void, void, void *))v8)[2](v8, 0, v9);
    _Block_release(v8);
  }
  else
  {
    ((void (**)(void, void *, void))v8)[2](v8, a1, 0);
    _Block_release(v8);
  }
  uint64_t v10 = *(uint64_t (**)(void))(v7 + 8);
  return v10();
}

uint64_t static UtilitySubscriptionService.fetchSubscriptionDetails(accessToken:subscriptionID:utilityID:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  objc_super v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C1D950
                                                                                              + dword_269C1D950);
  id v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *id v15 = v7;
  v15[1] = sub_2527853B0;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_2527CB75C(int a1, int a2, int a3, void *a4, void *aBlock)
{
  v5[2] = a4;
  v5[3] = _Block_copy(aBlock);
  uint64_t v7 = sub_2528312A8();
  uint64_t v9 = v8;
  v5[4] = v8;
  uint64_t v10 = sub_2528312A8();
  uint64_t v12 = v11;
  v5[5] = v11;
  uint64_t v13 = sub_2528312A8();
  uint64_t v15 = v14;
  v5[6] = v14;
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id))((char *)&dword_269C1D950
                                                                                         + dword_269C1D950);
  id v16 = a4;
  objc_super v17 = (void *)swift_task_alloc();
  v5[7] = v17;
  *objc_super v17 = v5;
  v17[1] = sub_2527CB89C;
  return v19(v7, v9, v10, v12, v13, v15, v16);
}

uint64_t sub_2527CB89C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void **)(*v2 + 16);
  uint64_t v7 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void (***)(void, void, void))(v5 + 24);
  if (v3)
  {
    uint64_t v9 = (void *)sub_252830B08();

    ((void (**)(void, void, void *))v8)[2](v8, 0, v9);
    _Block_release(v8);
  }
  else
  {
    ((void (**)(void, void *, void))v8)[2](*(void *)(v5 + 24), a1, 0);
    _Block_release(v8);
  }
  uint64_t v10 = *(uint64_t (**)(void))(v7 + 8);
  return v10();
}

uint64_t static UtilitySubscriptionService.renewAuthorizationToken(utilityID:authorizationToken:accessToken:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  objc_super v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C1DB88
                                                                                              + dword_269C1DB88);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_2527B8C48;
  return v17(a1, a2, a5, a6, a3, a4, a7);
}

uint64_t sub_2527CBD24(int a1, int a2, int a3, void *a4, void *aBlock)
{
  v5[2] = a4;
  v5[3] = _Block_copy(aBlock);
  uint64_t v7 = sub_2528312A8();
  uint64_t v9 = v8;
  v5[4] = v8;
  uint64_t v10 = sub_2528312A8();
  uint64_t v12 = v11;
  v5[5] = v11;
  uint64_t v13 = sub_2528312A8();
  uint64_t v15 = v14;
  v5[6] = v14;
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id))((char *)&dword_269C1DB88
                                                                                         + dword_269C1DB88);
  id v16 = a4;
  objc_super v17 = (void *)swift_task_alloc();
  v5[7] = v17;
  *objc_super v17 = v5;
  v17[1] = sub_2527CBE64;
  return v19(v7, v9, v13, v15, v10, v12, v16);
}

uint64_t sub_2527CBE64()
{
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void **)(*v1 + 16);
  uint64_t v5 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v6 = sub_252830B08();

    uint64_t v7 = 0;
    uint64_t v8 = (void *)v6;
  }
  else
  {
    uint64_t v7 = sub_252831298();
    swift_bridgeObjectRelease();
    uint64_t v6 = 0;
    uint64_t v8 = (void *)v7;
  }
  uint64_t v9 = *(void (***)(void, void, void))(v3 + 24);
  v9[2](v9, v7, v6);

  _Block_release(v9);
  uint64_t v10 = *(uint64_t (**)(void))(v5 + 8);
  return v10();
}

uint64_t static UtilitySubscriptionService.revokeSubscription(authorizationToken:subscriptionID:utilityID:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  objc_super v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C1D940
                                                                                              + dword_269C1D940);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_2527CC144;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_2527CC144(char a1)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (v1) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = a1 & 1;
  }
  return v4(v5);
}

uint64_t sub_2527CC3E8(int a1, int a2, int a3, void *a4, void *aBlock)
{
  v5[2] = a4;
  v5[3] = _Block_copy(aBlock);
  uint64_t v7 = sub_2528312A8();
  uint64_t v9 = v8;
  v5[4] = v8;
  uint64_t v10 = sub_2528312A8();
  uint64_t v12 = v11;
  v5[5] = v11;
  uint64_t v13 = sub_2528312A8();
  uint64_t v15 = v14;
  v5[6] = v14;
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id))((char *)&dword_269C1D940
                                                                                         + dword_269C1D940);
  id v16 = a4;
  objc_super v17 = (void *)swift_task_alloc();
  v5[7] = v17;
  *objc_super v17 = v5;
  v17[1] = sub_2527CC528;
  return v19(v7, v9, v10, v12, v13, v15, v16);
}

uint64_t sub_2527CC528(char a1)
{
  uint64_t v3 = v1;
  uint64_t v6 = *v2;
  uint64_t v5 = *v2;
  uint64_t v7 = *(void **)(*v2 + 16);
  uint64_t v8 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v5 + 24);
  if (v3)
  {
    uint64_t v10 = (void *)sub_252830B08();

    (*(void (**)(uint64_t, void, void *))(v9 + 16))(v9, 0, v10);
  }
  else
  {
    (*(void (**)(void, void, void))(v9 + 16))(*(void *)(v5 + 24), a1 & 1, 0);
  }
  _Block_release(*(const void **)(v6 + 24));
  uint64_t v11 = *(uint64_t (**)(void))(v8 + 8);
  return v11();
}

uint64_t static UtilitySubscriptionService.resendHistoricalData(authorizationToken:subscriptionID:utilityID:start:end:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C1DC20 + dword_269C1DC20);
  objc_super v17 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v17;
  *objc_super v17 = v8;
  v17[1] = sub_2527CE5C4;
  return v19(a3, a4, a1, a2, a5, a6, a7, a8);
}

void sub_2527CC9DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, const void *a7)
{
  v7[2] = a6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD70);
  uint64_t v10 = swift_task_alloc();
  v7[3] = v10;
  uint64_t v11 = sub_252830DB8();
  v7[4] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v7[5] = v12;
  v7[6] = swift_task_alloc();
  v7[7] = _Block_copy(a7);
  sub_2528312A8();
  v7[8] = v13;
  sub_2528312A8();
  v7[9] = v14;
  sub_2528312A8();
  v7[10] = v15;
  sub_252830D68();
  if (a5)
  {
    sub_252830D68();
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v16 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v16, 1, v11);
  uint64_t v18 = (char *)&dword_269C1DC20 + dword_269C1DC20;
  a6;
  objc_super v17 = (void *)swift_task_alloc();
  v7[11] = v17;
  *objc_super v17 = v7;
  v17[1] = sub_2527CCC1C;
  __asm { BR              X8 }
}

uint64_t sub_2527CCC1C(char a1)
{
  uint64_t v3 = v1;
  uint64_t v6 = *v2;
  uint64_t v5 = *v2;
  uint64_t v7 = (void *)(*v2)[2];
  uint64_t v8 = *v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v9 = v5[7];
  uint64_t v10 = v5[6];
  uint64_t v11 = v5[5];
  uint64_t v12 = v5[4];
  sub_2527CE14C(v5[3]);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  if (v3)
  {
    uint64_t v13 = (void *)sub_252830B08();

    (*(void (**)(uint64_t, void, void *))(v9 + 16))(v9, 0, v13);
  }
  else
  {
    (*(void (**)(uint64_t, void, void))(v9 + 16))(v9, a1 & 1, 0);
  }
  _Block_release((const void *)v6[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v8[1];
  return v14();
}

id UtilitySubscriptionService.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void UtilitySubscriptionService.init()()
{
}

id UtilitySubscriptionService.__deallocating_deinit()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for UtilitySubscriptionService();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2527CCFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x270FA2498](sub_2527CCFD0, 0, 0);
}

uint64_t sub_2527CCFD0()
{
  unint64_t v1 = v0[3];
  uint64_t v2 = v0[2] & 0xFFFFFFFFFFFFLL;
  if ((v1 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(v1) & 0xF;
  }
  if (v2)
  {
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C1E748
                                                                                                + dword_269C1E748);
    uint64_t v3 = (void *)swift_task_alloc();
    v0[7] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_2527CD1D4;
    uint64_t v4 = v0[5];
    uint64_t v5 = v0[6];
    uint64_t v6 = v0[4];
    uint64_t v7 = v0[2];
    return v14(0, 0, v7, v1, v6, v4, v5);
  }
  else
  {
    if (qword_269C1CED0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_252831158();
    __swift_project_value_buffer(v9, (uint64_t)qword_269C2D2E0);
    uint64_t v10 = sub_252831138();
    os_log_type_t v11 = sub_252831618();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_25277D000, v10, v11, "Attempting to generate token with a empty refreshToken!!!", v12, 2u);
      MEMORY[0x2533BE070](v12, -1, -1);
    }

    type metadata accessor for NetworkError();
    sub_2527B3838();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_2527CD1D4(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t method lookup function for UtilitySubscriptionService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for UtilitySubscriptionService);
}

uint64_t dispatch thunk of UtilitySubscriptionService.utilityID.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of UtilitySubscriptionService.__allocating_init(configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of UtilitySubscriptionService.authorizeAccountWithTAF(fields:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x263F8EED0] & *v2) + 0x70);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_2527CE5C8;
  return v9(a1, a2);
}

uint64_t dispatch thunk of UtilitySubscriptionService.initiateOTPForAccount(forFactor:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x263F8EED0] & *v2) + 0x78);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_2527CD56C;
  return v9(a1, a2);
}

uint64_t sub_2527CD56C(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of UtilitySubscriptionService.verifyAccount(factor:oneTimePasscode:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = *(int **)((*MEMORY[0x263F8EED0] & *v5) + 0x80);
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v12 + *v12);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_252786A30;
  return v15(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of UtilitySubscriptionService.createAccessToken(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)((*MEMORY[0x263F8EED0] & *v3) + 0x88);
  os_log_type_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_2527CE5C8;
  return v11(a1, a2, a3);
}

uint64_t dispatch thunk of UtilitySubscriptionService.fetchServiceLocations(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)((*MEMORY[0x263F8EED0] & *v3) + 0x90);
  os_log_type_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_2527CD56C;
  return v11(a1, a2, a3);
}

uint64_t dispatch thunk of UtilitySubscriptionService.createUtilitySubscription(serviceLocationID:accessToken:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = *(int **)((*MEMORY[0x263F8EED0] & *v5) + 0x98);
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v12 + *v12);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_2527CE5C8;
  return v15(a1, a2, a3, a4, a5);
}

uint64_t sub_2527CDB4C()
{
  _Block_release(*(const void **)(v0 + 40));

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_2527CDBA4()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v6 = (void *)v0[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_252786D4C;
  uint64_t v8 = (uint64_t (*)(int, int, void *, void *, void *))((char *)&dword_269C1DDA0 + dword_269C1DDA0);
  return v8(v2, v3, v4, v5, v6);
}

uint64_t sub_2527CDC78()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_252786D4C;
  uint64_t v7 = (uint64_t (*)(int, void *, void *, void *))((char *)&dword_269C1DDB0 + dword_269C1DDB0);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_2527CDD44()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_252786D4C;
  uint64_t v7 = (uint64_t (*)(int, void *, void *, void *))((char *)&dword_269C1DDD0 + dword_269C1DDD0);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_2527CDE10()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_252786D4C;
  uint64_t v7 = (uint64_t (*)(void *, void *, void *, void *))((char *)&dword_269C1DDF0 + dword_269C1DDF0);
  return v7(v2, v3, v5, v4);
}

uint64_t objectdestroy_44Tm()
{
  _Block_release(*(const void **)(v0 + 32));

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2527CDF2C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_252786D4C;
  uint64_t v7 = (uint64_t (*)(int, void *, void *, void *))((char *)&dword_269C1DE10 + dword_269C1DE10);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_2527CDFF4()
{
  _Block_release(*(const void **)(v0 + 64));

  return MEMORY[0x270FA0238](v0, 80, 7);
}

void sub_2527CE05C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v7 = (void *)v0[7];
  uint64_t v8 = (const void *)v0[8];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *uint64_t v9 = v1;
  v9[1] = sub_252786D4C;
  uint64_t v10 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, const void *))((char *)&dword_269C1DE30
                                                                                               + dword_269C1DE30);
  v10(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_2527CE14C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2527CE1B0()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v6 = (void *)v0[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_252786D4C;
  uint64_t v8 = (uint64_t (*)(int, int, int, void *, void *))((char *)&dword_269C1DE50 + dword_269C1DE50);
  return v8(v2, v3, v4, v5, v6);
}

uint64_t sub_2527CE290()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v6 = (void *)v0[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_252786D4C;
  uint64_t v8 = (uint64_t (*)(int, int, int, void *, void *))((char *)&dword_269C1DE70 + dword_269C1DE70);
  return v8(v2, v3, v4, v5, v6);
}

uint64_t objectdestroy_119Tm()
{
  _Block_release(*(const void **)(v0 + 48));

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_2527CE3C8()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v6 = (void *)v0[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_252786A30;
  uint64_t v8 = (uint64_t (*)(int, int, int, void *, void *))((char *)&dword_269C1DE90 + dword_269C1DE90);
  return v8(v2, v3, v4, v5, v6);
}

uint64_t sub_2527CE4A4()
{
  _Block_release(*(const void **)(v0 + 40));

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_2527CE4F4()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_252786D4C;
  uint64_t v7 = (uint64_t (*)(int, int, void *, void *))((char *)&dword_269C1DEB0 + dword_269C1DEB0);
  return v7(v2, v3, v4, v5);
}

uint64_t sub_2527CE5CC()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_allHeaderFields);
  uint64_t v3 = sub_252831228();

  sub_252831778();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_2527D9B54((uint64_t)v21), (v5 & 1) != 0))
  {
    sub_252784638(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v22);
  }
  else
  {
    long long v22 = 0u;
    long long v23 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_2527CF22C((uint64_t)v21);
  if (*((void *)&v23 + 1))
  {
    if (swift_dynamicCast()) {
      return 1734440005;
    }
  }
  else
  {
    sub_252781C54((uint64_t)&v22, &qword_26B22C010);
  }
  if (qword_26B22BEE0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_252831158();
  __swift_project_value_buffer(v7, (uint64_t)qword_26B22C058);
  uint64_t v8 = sub_252831138();
  os_log_type_t v9 = sub_252831618();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    v21[0] = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    *(void *)&long long v22 = sub_25278F894(1734440005, 0xE400000000000000, v21);
    sub_252831698();
    _os_log_impl(&dword_25277D000, v8, v9, "Unable to retrieve %s header from response.", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533BE070](v11, -1, -1);
    MEMORY[0x2533BE070](v10, -1, -1);
  }

  id v12 = v1;
  uint64_t v13 = sub_252831138();
  os_log_type_t v14 = sub_252831618();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    v21[0] = v20;
    *(_DWORD *)uint64_t v15 = 136380675;
    id v16 = objc_msgSend(v12, sel_allHeaderFields);
    sub_252831228();

    uint64_t v17 = sub_252831238();
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    *(void *)&long long v22 = sub_25278F894(v17, v19, v21);
    sub_252831698();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25277D000, v13, v14, "%{private}s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533BE070](v20, -1, -1);
    MEMORY[0x2533BE070](v15, -1, -1);
  }
  else
  {
  }
  return 0;
}

double sub_2527CE9D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD88);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD98);
  uint64_t v48 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF68);
  long long v49 = v11;
  sub_252830F58();
  unint64_t v12 = 0x265382000uLL;
  id v13 = objc_msgSend(v0, sel_allHeaderFields);
  uint64_t v14 = sub_252831228();

  strcpy((char *)v51, "Cache-Control");
  HIWORD(v51[1]) = -4864;
  sub_252831778();
  if (*(void *)(v14 + 16) && (unint64_t v15 = sub_2527D9B54((uint64_t)&v52), (v16 & 1) != 0))
  {
    sub_252784638(*(void *)(v14 + 56) + 32 * v15, (uint64_t)&v56);
  }
  else
  {
    long long v56 = 0u;
    long long v57 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_2527CF22C((uint64_t)&v52);
  if (*((void *)&v57 + 1))
  {
    if (swift_dynamicCast())
    {
      uint64_t v52 = v51[0];
      uint64_t v53 = v51[1];
      sub_2527CF280();
      sub_2527CF2D4();
      uint64_t v47 = v9;
      sub_252831268();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {
        sub_252781C54((uint64_t)v4, &qword_26B22BD88);
        uint64_t v9 = v47;
        unint64_t v12 = 0x265382000;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
        swift_getKeyPath();
        sub_252830F68();
        swift_release();
        uint64_t v35 = MEMORY[0x2533BD110](v52, v53, v54, v55);
        uint64_t v37 = v36;
        uint64_t v38 = swift_bridgeObjectRelease();
        *(void *)&long long v56 = 0;
        uint64_t v39 = MEMORY[0x270FA5388](v38);
        *(&v45 - 2) = (uint8_t *)&v56;
        if ((v37 & 0x1000000000000000) != 0 || !(v37 & 0x2000000000000000 | v35 & 0x1000000000000000))
        {
          sub_2528317B8();
          swift_bridgeObjectRelease();
          unint64_t v12 = 0x265382000;
        }
        else
        {
          MEMORY[0x270FA5388](v39);
          *(&v45 - 2) = (uint8_t *)sub_2527CF330;
          *(&v45 - 1) = v40;
          unint64_t v12 = 0x265382000;
          if ((v37 & 0x2000000000000000) != 0)
          {
            uint64_t v52 = v35;
            uint64_t v53 = v37 & 0xFFFFFFFFFFFFFFLL;
            BOOL v44 = (v35 > 0x20u || ((0x100003E01uLL >> v35) & 1) == 0)
               && (uint64_t v43 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
               && *v43 == 0;
            LOBYTE(v51[0]) = v44;
            swift_bridgeObjectRelease();
          }
          else
          {
            if ((v35 & 0x1000000000000000) != 0)
            {
              uint64_t v41 = (v37 & 0xFFFFFFFFFFFFFFFLL) + 32;
              uint64_t v42 = v35 & 0xFFFFFFFFFFFFLL;
            }
            else
            {
              uint64_t v41 = sub_252831838();
            }
            LOBYTE(v51[0]) = sub_2527DA6C0(v41, v42, (void (*)(uint64_t *__return_ptr))sub_2527CF34C) & 1;
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v9 = v47;
        if (v51[0])
        {
          double v33 = *(double *)&v56;
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          goto LABEL_20;
        }
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
    }
  }
  else
  {
    sub_252781C54((uint64_t)&v56, &qword_26B22C010);
  }
  if (qword_26B22BEE0 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_252831158();
  uint64_t v50 = __swift_project_value_buffer(v17, (uint64_t)qword_26B22C058);
  unint64_t v18 = sub_252831138();
  os_log_type_t v19 = sub_252831618();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_25277D000, v18, v19, "Unable to generate max age value based on response.", v20, 2u);
    MEMORY[0x2533BE070](v20, -1, -1);
  }

  id v21 = v1;
  long long v22 = sub_252831138();
  os_log_type_t v23 = sub_252831618();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v52 = v46;
    uint64_t v47 = v9;
    *(_DWORD *)uint64_t v24 = 136380675;
    uint64_t v45 = v24 + 4;
    id v25 = objc_msgSend(v21, *(SEL *)(v12 + 3480), v24 + 4);
    sub_252831228();

    uint64_t v26 = sub_252831238();
    unint64_t v28 = v27;
    swift_bridgeObjectRelease();
    *(void *)&long long v56 = sub_25278F894(v26, v28, &v52);
    uint64_t v9 = v47;
    sub_252831698();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25277D000, v22, v23, "%{private}s", v24, 0xCu);
    uint64_t v29 = v46;
    swift_arrayDestroy();
    MEMORY[0x2533BE070](v29, -1, -1);
    MEMORY[0x2533BE070](v24, -1, -1);
  }
  else
  {
  }
  uint64_t v30 = sub_252831138();
  os_log_type_t v31 = sub_252831618();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    _os_log_impl(&dword_25277D000, v30, v31, "Returning zero max age value for response.", v32, 2u);
    MEMORY[0x2533BE070](v32, -1, -1);
  }

  double v33 = 0.0;
LABEL_20:
  (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v9);
  return v33;
}

uint64_t sub_2527CF22C(uint64_t a1)
{
  return a1;
}

unint64_t sub_2527CF280()
{
  unint64_t result = qword_26B22BF20;
  if (!qword_26B22BF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BF20);
  }
  return result;
}

unint64_t sub_2527CF2D4()
{
  unint64_t result = qword_26B22BD90;
  if (!qword_26B22BD90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B22BD98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BD90);
  }
  return result;
}

unsigned char *sub_2527CF330@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_2527D9E04(a1, a2);
}

void *sub_2527CF34C@<X0>(unsigned char *a1@<X8>)
{
  return sub_2527DA720(*(void *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_2527CF368()
{
  uint64_t result = sub_2527CF38C();
  qword_26B22C020 = result;
  *(void *)algn_26B22C028 = v1;
  return result;
}

uint64_t sub_2527CF38C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_252830BD8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(self, sel_defaultManager);
  id v8 = objc_msgSend(v7, sel_URLsForDirectory_inDomains_, 13, 1);
  uint64_t v9 = sub_2528314F8();

  if (*(void *)(v9 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v2, v9 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_2527CFD14((uint64_t)v2);

    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    uint64_t v11 = sub_252830B68();
    uint64_t v13 = v12;
    sub_25280DF84();
    v15[0] = v11;
    v15[1] = v13;
    sub_2528313A8();
    sub_2528313A8();
    sub_2528313A8();
    swift_bridgeObjectRelease();
    sub_2528313A8();

    uint64_t v10 = v15[0];
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v10;
}

uint64_t sub_2527CF6B8()
{
  id v0 = objc_msgSend(self, sel_defaultManager);
  sub_252830B78();
  uint64_t v1 = (void *)sub_252831298();
  swift_bridgeObjectRelease();
  unsigned int v2 = objc_msgSend(v0, sel_fileExistsAtPath_, v1);

  if (v2) {
    return sub_252830BF8();
  }
  if (qword_269C1CEA0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_252831158();
  __swift_project_value_buffer(v4, (uint64_t)qword_269C2D268);
  uint64_t v5 = sub_252831138();
  os_log_type_t v6 = sub_252831618();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v7 = 0;
    _os_log_impl(&dword_25277D000, v5, v6, "File not found in provided location!", v7, 2u);
    MEMORY[0x2533BE070](v7, -1, -1);
  }

  return 0;
}

void _s19HomeUtilityServices0bC0C05clearB14TerritoryCacheyyFZ_0()
{
  v19[1] = *(id *)MEMORY[0x263EF8340];
  if (qword_269C1CEA0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_252831158();
  __swift_project_value_buffer(v0, (uint64_t)qword_269C2D268);
  uint64_t v1 = sub_252831138();
  os_log_type_t v2 = sub_252831628();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_25277D000, v1, v2, "Clearing Client cache", v3, 2u);
    MEMORY[0x2533BE070](v3, -1, -1);
  }

  id v4 = objc_msgSend(self, sel_defaultManager);
  if (qword_26B22BF60 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)sub_252831298();
  v19[0] = 0;
  unsigned int v6 = objc_msgSend(v4, sel_removeItemAtPath_error_, v5, v19);

  id v7 = v19[0];
  if (v6)
  {
    id v8 = v7;
  }
  else
  {
    id v9 = v19[0];
    uint64_t v10 = (void *)sub_252830B18();

    swift_willThrow();
    id v11 = v10;
    id v12 = v10;
    uint64_t v13 = sub_252831138();
    int v14 = sub_252831618();
    if (os_log_type_enabled(v13, (os_log_type_t)v14))
    {
      unint64_t v15 = (uint8_t *)swift_slowAlloc();
      char v16 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v15 = 138412290;
      id v17 = v10;
      unint64_t v18 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v19[0] = v18;
      sub_252831698();
      *char v16 = v18;

      _os_log_impl(&dword_25277D000, v13, (os_log_type_t)v14, "Error while trying to clear cache. %@", v15, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D030);
      swift_arrayDestroy();
      MEMORY[0x2533BE070](v16, -1, -1);
      MEMORY[0x2533BE070](v15, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t sub_2527CFD14(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2527CFD74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[5] = a1;
  v6[6] = a4;
  v6[7] = type metadata accessor for NetworkError();
  v6[8] = swift_task_alloc();
  uint64_t v11 = sub_252830BD8();
  v6[9] = v11;
  v6[10] = *(void *)(v11 - 8);
  v6[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  uint64_t v12 = swift_task_alloc();
  v6[12] = v12;
  uint64_t v13 = sub_2528307F8();
  v6[13] = v13;
  v6[14] = *(void *)(v13 - 8);
  v6[15] = swift_task_alloc();
  int v14 = (void *)swift_task_alloc();
  v6[16] = v14;
  *int v14 = v6;
  v14[1] = sub_2527CFF58;
  return sub_25277FC98(v12, a2, a3, a5, a6);
}

uint64_t sub_2527CFF58()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2527D0054, 0, 0);
}

uint64_t sub_2527D0054()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[12];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_252781C54(v3, &qword_26B22BD40);
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D250);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable generate request URL for Utility ID Lookup", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }
    uint64_t v8 = v0[9];
    uint64_t v9 = v0[10];
    uint64_t v10 = v0[5];

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v10, 1, 1, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11(0);
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[15], v3, v1);
    sub_252804F18(0xD000000000000027, 0x800000025283C800, (uint8_t *)0xD000000000000015, 0x800000025283C830);
    uint64_t v13 = (void *)swift_task_alloc();
    v0[17] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_2527D02DC;
    uint64_t v14 = v0[15];
    uint64_t v15 = v0[11];
    return MEMORY[0x270EF1ED8](v15, v14, 0);
  }
}

uint64_t sub_2527D02DC(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 144) = a1;
  *(void *)(v3 + 152) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_2527D0DEC;
  }
  else {
    uint64_t v4 = sub_2527D03F0;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2527D03F0()
{
  uint64_t v73 = v0;
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    id v3 = *(id *)(v0 + 144);
    sub_252805814(0xD000000000000016, (char *)0x800000025283C850, (unint64_t)objc_msgSend(v2, sel_statusCode), qword_2702C40C8);
    id v4 = objc_msgSend(v2, sel_statusCode);
    if (v4 == (id)304)
    {
      if (qword_269C1CE90 != -1) {
        swift_once();
      }
      uint64_t v71 = v2;
      uint64_t v27 = sub_252831158();
      __swift_project_value_buffer(v27, (uint64_t)qword_269C2D250);
      unint64_t v28 = sub_252831138();
      os_log_type_t v29 = sub_252831608();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v30 = 0;
        _os_log_impl(&dword_25277D000, v28, v29, "Geohash File unmodified. Use existing file on disk.", v30, 2u);
        MEMORY[0x2533BE070](v30, -1, -1);
      }
      os_log_type_t v31 = *(void **)(v0 + 144);
      uint64_t v33 = *(void *)(v0 + 112);
      uint64_t v32 = *(void *)(v0 + 120);
      uint64_t v34 = *(void *)(v0 + 104);
      uint64_t v36 = *(void *)(v0 + 80);
      uint64_t v35 = *(void *)(v0 + 88);
      uint64_t v37 = *(void *)(v0 + 72);
      uint64_t v38 = *(void *)(v0 + 40);

      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v38, 1, 1, v37);
      goto LABEL_19;
    }
    if (v4 == (id)200)
    {
      if (qword_269C1CE90 != -1) {
        swift_once();
      }
      uint64_t v71 = v2;
      uint64_t v5 = sub_252831158();
      __swift_project_value_buffer(v5, (uint64_t)qword_269C2D250);
      uint64_t v6 = sub_252831138();
      os_log_type_t v7 = sub_252831608();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl(&dword_25277D000, v6, v7, "New Geo Tile fetched", v8, 2u);
        MEMORY[0x2533BE070](v8, -1, -1);
      }
      uint64_t v9 = *(void **)(v0 + 144);
      uint64_t v11 = *(void *)(v0 + 112);
      uint64_t v10 = *(void *)(v0 + 120);
      uint64_t v12 = *(void *)(v0 + 104);
      uint64_t v13 = *(void *)(v0 + 80);
      uint64_t v14 = *(void *)(v0 + 88);
      uint64_t v15 = *(void *)(v0 + 72);
      uint64_t v16 = *(void *)(v0 + 40);

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v16, v14, v15);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v15);
LABEL_19:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v39 = *(uint64_t (**)(void *))(v0 + 8);
      return v39(v71);
    }
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_252831158();
    __swift_project_value_buffer(v41, (uint64_t)qword_269C2D250);
    uint64_t v42 = sub_252831138();
    os_log_type_t v43 = sub_252831618();
    if (os_log_type_enabled(v42, v43))
    {
      BOOL v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v44 = 0;
      _os_log_impl(&dword_25277D000, v42, v43, "Error while checking for geohash tiles", v44, 2u);
      MEMORY[0x2533BE070](v44, -1, -1);
    }
    uint64_t v45 = *(void **)(v0 + 144);

    id v46 = v45;
    id v47 = objc_msgSend(v2, sel_description);
    uint64_t v48 = sub_2528312A8();
    unint64_t v50 = v49;

    swift_bridgeObjectRetain();
    long long v51 = sub_252831138();
    os_log_type_t v52 = sub_252831618();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      uint64_t v72 = v54;
      *(_DWORD *)uint64_t v53 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 32) = sub_25278F894(v48, v50, &v72);
      sub_252831698();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25277D000, v51, v52, "%s", v53, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533BE070](v54, -1, -1);
      MEMORY[0x2533BE070](v53, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v55 = *(void **)(v0 + 144);
    uint64_t v57 = *(void *)(v0 + 80);
    uint64_t v56 = *(void *)(v0 + 88);
    uint64_t v58 = *(void *)(v0 + 72);
    sub_2527D32B8((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
    id v25 = (void *)swift_allocError();
    *uint64_t v59 = objc_msgSend(v2, sel_statusCode);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v56, v58);
  }
  else
  {
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_252831158();
    __swift_project_value_buffer(v17, (uint64_t)qword_269C2D250);
    unint64_t v18 = sub_252831138();
    os_log_type_t v19 = sub_252831618();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_25277D000, v18, v19, "Unable to process GeoTiles Response.", v20, 2u);
      MEMORY[0x2533BE070](v20, -1, -1);
    }
    id v21 = *(void **)(v0 + 144);
    uint64_t v23 = *(void *)(v0 + 80);
    uint64_t v22 = *(void *)(v0 + 88);
    uint64_t v24 = *(void *)(v0 + 72);

    sub_2527D32B8((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
    id v25 = (void *)swift_allocError();
    *uint64_t v26 = 2;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
  }
  if (qword_269C1CE90 != -1) {
    swift_once();
  }
  uint64_t v60 = sub_252831158();
  __swift_project_value_buffer(v60, (uint64_t)qword_269C2D250);
  id v61 = v25;
  id v62 = v25;
  uint64_t v63 = sub_252831138();
  os_log_type_t v64 = sub_252831618();
  if (os_log_type_enabled(v63, v64))
  {
    unint64_t v65 = (uint8_t *)swift_slowAlloc();
    uint64_t v66 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v65 = 138412290;
    id v67 = v25;
    uint64_t v68 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 24) = v68;
    sub_252831698();
    void *v66 = v68;

    _os_log_impl(&dword_25277D000, v63, v64, "Error while trying to fetch geohash tiles from server %@", v65, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D030);
    swift_arrayDestroy();
    MEMORY[0x2533BE070](v66, -1, -1);
    MEMORY[0x2533BE070](v65, -1, -1);
  }
  else
  {
  }
  *(void *)(v0 + 16) = v25;
  id v69 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4C0);
  if (swift_dynamicCast())
  {
    sub_2527D325C(*(void *)(v0 + 64));
    swift_willThrow();
  }
  else
  {
    sub_252826B80(v25);
    swift_willThrow();
  }
  (*(void (**)(void, void))(*(void *)(v0 + 112) + 8))(*(void *)(v0 + 120), *(void *)(v0 + 104));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v70 = *(uint64_t (**)(void))(v0 + 8);
  return v70();
}

uint64_t sub_2527D0DEC()
{
  uint64_t v1 = (void *)v0[19];
  if (qword_269C1CE90 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_252831158();
  __swift_project_value_buffer(v2, (uint64_t)qword_269C2D250);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_252831138();
  os_log_type_t v6 = sub_252831618();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v7 = 138412290;
    id v9 = v1;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v10;
    sub_252831698();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_25277D000, v5, v6, "Error while trying to fetch geohash tiles from server %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D030);
    swift_arrayDestroy();
    MEMORY[0x2533BE070](v8, -1, -1);
    MEMORY[0x2533BE070](v7, -1, -1);
  }
  else
  {
  }
  v0[2] = v1;
  id v11 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4C0);
  if (swift_dynamicCast())
  {
    sub_2527D325C(v0[8]);
    swift_willThrow();
  }
  else
  {
    sub_252826B80(v1);
    swift_willThrow();
  }
  (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

void sub_2527D1094(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v86 = a1;
  uint64_t v5 = sub_252830BD8();
  id v85 = *(id *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  os_log_type_t v7 = (char *)v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DED8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DEE0);
  long long v84 = *(void (***)(char *, uint64_t))(v87 - 8);
  MEMORY[0x270FA5388](v87);
  long long v81 = (char *)v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DEE8);
  long long v83 = *(void (***)(char *, char *, uint64_t))(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v13 = (char *)v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_252831308();
  uint64_t v82 = *(void *)(v80 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v80);
  uint64_t v79 = (char *)v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v73 - v16;
  if (qword_269C1CE90 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_252831158();
  uint64_t v90 = __swift_project_value_buffer(v18, (uint64_t)qword_269C2D250);
  os_log_type_t v19 = sub_252831138();
  os_log_type_t v20 = sub_2528315F8();
  if (os_log_type_enabled(v19, v20))
  {
    id v21 = (uint8_t *)swift_slowAlloc();
    long long v88 = v7;
    uint64_t v22 = v5;
    uint64_t v23 = v21;
    *(_WORD *)id v21 = 0;
    _os_log_impl(&dword_25277D000, v19, v20, "Generating individual geohash tiles from parent geohash.", v21, 2u);
    uint64_t v24 = v23;
    uint64_t v5 = v22;
    os_log_type_t v7 = v88;
    MEMORY[0x2533BE070](v24, -1, -1);
  }

  unint64_t v25 = v86;
  uint64_t v26 = sub_252830B68();
  uint64_t v28 = v27;
  sub_2528312E8();
  type metadata accessor for StreamReader();
  swift_allocObject();
  long long v88 = (char *)sub_2527AC5E4(v26, v28, 10, 0xE100000000000000, (uint64_t)v17, 4096);
  if (v88)
  {
    if (qword_26B22BF60 != -1) {
      swift_once();
    }
    uint64_t v93 = qword_26B22C020;
    unint64_t v94 = *(void *)algn_26B22C028;
    swift_bridgeObjectRetain();
    sub_2528313A8();
    unsigned __int8 v29 = sub_252824658();
    swift_bridgeObjectRelease();
    if (v29)
    {
      id v85 = objc_msgSend(self, sel_defaultManager);
      uint64_t v30 = (void *)MEMORY[0x2533BDA70]();
      uint64_t v31 = 0;
      sub_2527ACA3C((uint64_t)v88, &v93);
      uint64_t v76 = a2;
      uint64_t v77 = a3;
      LODWORD(v78) = 0;
      uint64_t v32 = (unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 6);
      uint64_t v33 = (void (**)(char *, uint64_t))(v83 + 1);
      long long v83 = (void (**)(char *, char *, uint64_t))(v84 + 4);
      uint64_t v75 = v84 + 1;
      long long v84 = (void (**)(char *, uint64_t))(v82 + 8);
      unint64_t v86 = 0x800000025283C7D0;
      *(void *)&long long v34 = 136315138;
      long long v74 = v34;
      v73[1] = MEMORY[0x263F8EE58] + 8;
      while (1)
      {
        unint64_t v45 = v94;
        if (!v94) {
          break;
        }
        uint64_t v46 = v93;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DEF0);
        sub_252830F58();
        uint64_t v93 = v46;
        unint64_t v94 = v45;
        sub_2527CF280();
        sub_2527D2D14();
        sub_252831268();
        if ((*v32)(v10, 1, v87) == 1)
        {
          sub_252781C54((uint64_t)v10, &qword_269C1DED8);
          id v47 = sub_252831138();
          os_log_type_t v48 = sub_252831618();
          if (os_log_type_enabled(v47, v48))
          {
            unint64_t v49 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)unint64_t v49 = 0;
            _os_log_impl(&dword_25277D000, v47, v48, "No Matching file name found in Geo Hash", v49, 2u);
            MEMORY[0x2533BE070](v49, -1, -1);
          }

          (*v33)(v13, v89);
          swift_bridgeObjectRelease();
          BOOL v44 = sub_252831138();
          os_log_type_t v50 = sub_252831618();
          if (os_log_type_enabled(v44, v50))
          {
            long long v51 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)long long v51 = 0;
            _os_log_impl(&dword_25277D000, v44, v50, "Unable to find file name for the geo hash string", v51, 2u);
            MEMORY[0x2533BE070](v51, -1, -1);
          }
        }
        else
        {
          os_log_type_t v52 = v81;
          uint64_t v53 = v87;
          (*v83)(v81, v10, v87);
          swift_getKeyPath();
          sub_252830F68();
          swift_release();
          uint64_t v82 = MEMORY[0x2533BD110](v93, v94, v95, v96);
          uint64_t v78 = v54;
          swift_bridgeObjectRelease();
          (*v75)(v52, v53);
          (*v33)(v13, v89);
          uint64_t v93 = qword_26B22C020;
          unint64_t v94 = *(void *)algn_26B22C028;
          swift_bridgeObjectRetain();
          sub_2528313A8();
          sub_2528313A8();
          sub_2528313A8();
          sub_2528313A8();
          uint64_t v55 = swift_bridgeObjectRelease();
          uint64_t v56 = v93;
          unint64_t v57 = v94;
          uint64_t v58 = (void *)MEMORY[0x2533BDA70](v55);
          uint64_t v93 = v46;
          unint64_t v94 = v45;
          uint64_t v82 = v56;
          uint64_t v91 = v56;
          unint64_t v92 = v57;
          uint64_t v59 = v79;
          sub_2528312E8();
          sub_25279033C();
          sub_252831708();
          (*v84)(v59, v80);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain_n();
          uint64_t v60 = sub_252831138();
          os_log_type_t v61 = sub_252831608();
          if (os_log_type_enabled(v60, v61))
          {
            unint64_t v62 = v57;
            uint64_t v63 = swift_slowAlloc();
            uint64_t v64 = swift_slowAlloc();
            uint64_t v78 = 0;
            uint64_t v65 = v64;
            uint64_t v93 = v64;
            *(_DWORD *)uint64_t v63 = v74;
            swift_bridgeObjectRetain();
            *(void *)(v63 + 4) = sub_25278F894(v82, v62, &v93);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_25277D000, v60, v61, "Successfully wrote to %s", (uint8_t *)v63, 0xCu);
            swift_arrayDestroy();
            uint64_t v66 = v65;
            uint64_t v31 = v78;
            MEMORY[0x2533BE070](v66, -1, -1);
            MEMORY[0x2533BE070](v63, -1, -1);
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          BOOL v44 = sub_252831298();
          swift_bridgeObjectRelease();
          LODWORD(v78) = objc_msgSend(v85, sel_fileExistsAtPath_, v44);
        }

        uint64_t v30 = (void *)MEMORY[0x2533BDA70]();
        sub_2527ACA3C((uint64_t)v88, &v93);
        if (v31)
        {
          __break(1u);
          return;
        }
      }
      id v67 = sub_252831138();
      os_log_type_t v68 = sub_252831628();
      if (os_log_type_enabled(v67, v68))
      {
        id v69 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v69 = 0;
        _os_log_impl(&dword_25277D000, v67, v68, "Wrote all geohash tile to disk.", v69, 2u);
        MEMORY[0x2533BE070](v69, -1, -1);
      }

      uint64_t v70 = OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_fileHandle;
      uint64_t v71 = (uint64_t)v88;
      objc_msgSend(*(id *)&v88[OBJC_IVAR____TtC19HomeUtilityServices12StreamReader_fileHandle], sel_closeFile);
      uint64_t v72 = *(void **)(v71 + v70);
      *(void *)(v71 + v70) = 0;

      swift_release();
    }
    else
    {
      uint64_t v41 = sub_252831138();
      os_log_type_t v42 = sub_252831618();
      if (os_log_type_enabled(v41, v42))
      {
        os_log_type_t v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v43 = 0;
        _os_log_impl(&dword_25277D000, v41, v42, "Unable to create directory for saving GeoHash Polygons", v43, 2u);
        MEMORY[0x2533BE070](v43, -1, -1);
      }
      swift_release();
    }
  }
  else
  {
    (*((void (**)(char *, unint64_t, uint64_t))v85 + 2))(v7, v25, v5);
    uint64_t v35 = sub_252831138();
    os_log_type_t v36 = sub_252831618();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v93 = v38;
      *(_DWORD *)uint64_t v37 = 136315138;
      uint64_t v39 = sub_252830B68();
      uint64_t v91 = sub_25278F894(v39, v40, &v93);
      sub_252831698();
      swift_bridgeObjectRelease();
      (*((void (**)(char *, uint64_t))v85 + 1))(v7, v5);
      _os_log_impl(&dword_25277D000, v35, v36, "Unable to open file stream for file :%s", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533BE070](v38, -1, -1);
      MEMORY[0x2533BE070](v37, -1, -1);
    }
    else
    {
      (*((void (**)(char *, uint64_t))v85 + 1))(v7, v5);
    }
  }
}

uint64_t sub_2527D1E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_252830DB8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269C1CE90 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_252831158();
  __swift_project_value_buffer(v9, (uint64_t)qword_269C2D250);
  uint64_t v10 = sub_252831138();
  os_log_type_t v11 = sub_2528315F8();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_25277D000, v10, v11, "Trying to save metadata about downloaded geohash tile.", v12, 2u);
    MEMORY[0x2533BE070](v12, -1, -1);
  }

  uint64_t result = sub_2527CE5CC();
  if (v14)
  {
    uint64_t v15 = result;
    uint64_t v16 = v14;
    sub_2527CE9D0();
    sub_252830D38();
    uint64_t v29 = a2;
    uint64_t v30 = a3;
    long long v31 = 0u;
    long long v32 = 0u;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_2527BA1B8();
    uint64_t v28 = MEMORY[0x263F8D310];
    v27[0] = v15;
    v27[1] = v16;
    sub_2527B9FFC(v17, v18, (uint64_t)v27);
    swift_bridgeObjectRelease();
    sub_252781C54((uint64_t)v27, &qword_26B22C010);
    uint64_t v19 = sub_2527BA238();
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v28 = v5;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v27);
    (*(void (**)(uint64_t *, char *, uint64_t))(v6 + 16))(boxed_opaque_existential_0, v8, v5);
    sub_2527B9FFC(v19, v21, (uint64_t)v27);
    swift_bridgeObjectRelease();
    sub_252781C54((uint64_t)v27, &qword_26B22C010);
    uint64_t v23 = sub_252831138();
    os_log_type_t v24 = sub_252831628();
    if (os_log_type_enabled(v23, v24))
    {
      unint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v25 = 0;
      _os_log_impl(&dword_25277D000, v23, v24, "Saved metadata about downloaded geohash tile to defaults", v25, 2u);
      MEMORY[0x2533BE070](v25, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return result;
}

uint64_t sub_2527D24BC()
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v0 = sub_252831208();
  uint64_t v21 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_2528311B8();
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v18 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_252831308();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25280DF84();
  *(void *)&long long v22 = 0;
  *((void *)&v22 + 1) = 0xE000000000000000;
  sub_2528317C8();
  sub_2528313A8();
  sub_2528313A8();
  swift_bridgeObjectRelease();
  *(void *)&long long v22 = 0;
  *((void *)&v22 + 1) = 0xE000000000000000;
  sub_2528315A8();
  sub_2528313A8();
  sub_2528315A8();
  sub_2528313A8();
  sub_2528313A8();
  swift_bridgeObjectRelease();
  sub_2528312E8();
  uint64_t v9 = sub_2528312B8();
  unint64_t v11 = v10;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = 0;
  if (v11 >> 60 != 15)
  {
    sub_2527D32B8(&qword_269C1DED0, MEMORY[0x263F047F8]);
    sub_2528311A8();
    switch(v11 >> 62)
    {
      case 1uLL:
        if (v9 >> 32 < (int)v9) {
          __break(1u);
        }
        sub_252782DC8(v9, v11);
        sub_252818ABC((int)v9, v9 >> 32);
        break;
      case 2uLL:
        uint64_t v13 = *(void *)(v9 + 16);
        uint64_t v14 = *(void *)(v9 + 24);
        sub_2527AA900(v9, v11);
        swift_retain();
        swift_retain();
        sub_252818ABC(v13, v14);
        swift_release();
        swift_release();
        break;
      case 3uLL:
        *(void *)((char *)&v22 + 6) = 0;
        *(void *)&long long v22 = 0;
        goto LABEL_8;
      default:
        *(void *)&long long v22 = v9;
        WORD4(v22) = v11;
        BYTE10(v22) = BYTE2(v11);
        BYTE11(v22) = BYTE3(v11);
        BYTE12(v22) = BYTE4(v11);
        BYTE13(v22) = BYTE5(v11);
LABEL_8:
        sub_252831188();
        break;
    }
    sub_252783CC0(v9, v11);
    uint64_t v15 = v21;
    uint64_t v16 = v18;
    sub_252831198();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v2, v0);
    uint64_t v12 = sub_252815460();
    sub_252783CC0(v9, v11);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v20);
  }
  return v12;
}

uint64_t sub_2527D2A5C()
{
  sub_2527D24BC();
  if (!v0)
  {
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_252831158();
    __swift_project_value_buffer(v14, (uint64_t)qword_269C2D250);
    unint64_t v10 = sub_252831138();
    os_log_type_t v11 = sub_252831618();
    if (!os_log_type_enabled(v10, v11)) {
      goto LABEL_18;
    }
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    uint64_t v13 = "Unable to generate key for looking up utility info.";
    goto LABEL_17;
  }
  uint64_t v1 = (__CFString *)sub_252831298();
  uint64_t v2 = (__CFString *)sub_252831298();
  CFPropertyListRef v3 = CFPreferencesCopyAppValue(v1, v2);
  swift_bridgeObjectRelease();

  if (!v3 || (__swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF40), (swift_dynamicCast() & 1) == 0))
  {
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_252831158();
    __swift_project_value_buffer(v9, (uint64_t)qword_269C2D250);
    unint64_t v10 = sub_252831138();
    os_log_type_t v11 = sub_252831618();
    if (!os_log_type_enabled(v10, v11)) {
      goto LABEL_18;
    }
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    uint64_t v13 = "Unable to lookup computed utility from disk.";
LABEL_17:
    _os_log_impl(&dword_25277D000, v10, v11, v13, v12, 2u);
    MEMORY[0x2533BE070](v12, -1, -1);
LABEL_18:

    return 0;
  }
  uint64_t v4 = v16;
  if (qword_269C1CE90 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_252831158();
  __swift_project_value_buffer(v5, (uint64_t)qword_269C2D250);
  uint64_t v6 = sub_252831138();
  os_log_type_t v7 = sub_252831628();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_25277D000, v6, v7, "Successfully retrieved computed utility from disk.", v8, 2u);
    MEMORY[0x2533BE070](v8, -1, -1);
  }

  return v4;
}

unint64_t sub_2527D2D14()
{
  unint64_t result = qword_269C1DEF8;
  if (!qword_269C1DEF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C1DEE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269C1DEF8);
  }
  return result;
}

void sub_2527D2D70(uint64_t a1)
{
  if (!a1)
  {
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_252831158();
    __swift_project_value_buffer(v6, (uint64_t)qword_269C2D250);
    oslog = sub_252831138();
    os_log_type_t v7 = sub_252831618();
    if (!os_log_type_enabled(oslog, v7)) {
      goto LABEL_13;
    }
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    uint64_t v9 = "No utility Territory information to save.";
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_2527D24BC();
  if (v3)
  {
    uint64_t v4 = v2;
    uint64_t v5 = v3;
    v16[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF40);
    v16[0] = a1;
    sub_2527B9FFC(v4, v5, (uint64_t)v16);
    swift_bridgeObjectRelease();
    sub_252781C54((uint64_t)v16, &qword_26B22C010);
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_252831158();
    __swift_project_value_buffer(v11, (uint64_t)qword_269C2D250);
    uint64_t v12 = sub_252831138();
    os_log_type_t v13 = sub_252831628();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_25277D000, v12, v13, "Saved computed utility for coordinate value.", v14, 2u);
      MEMORY[0x2533BE070](v14, -1, -1);
    }

    return;
  }
  swift_bridgeObjectRelease();
  if (qword_269C1CE90 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_252831158();
  __swift_project_value_buffer(v10, (uint64_t)qword_269C2D250);
  oslog = sub_252831138();
  os_log_type_t v7 = sub_252831618();
  if (os_log_type_enabled(oslog, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    uint64_t v9 = "Unable to generate key for saving utility info.";
LABEL_12:
    _os_log_impl(&dword_25277D000, oslog, v7, v9, v8, 2u);
    MEMORY[0x2533BE070](v8, -1, -1);
  }
LABEL_13:
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_2527D325C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NetworkError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2527D32B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2527D3300(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DF40);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  os_log_type_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527D5694();
  sub_252831B38();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DF28);
  sub_2527D573C(&qword_269C1DF48, (void (*)(void))sub_2527D57AC);
  sub_252831A18();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2527D3480()
{
  return 0x416465686374616DLL;
}

uint64_t sub_2527D34A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x416465686374616DLL && a2 == 0xEE00737365726464)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_252831A58();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2527D3560(uint64_t a1)
{
  unint64_t v2 = sub_2527D5694();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527D359C(uint64_t a1)
{
  unint64_t v2 = sub_2527D5694();

  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_2527D35D8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_2527D54EC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_2527D3604(void *a1)
{
  return sub_2527D3300(a1, *v1);
}

uint64_t sub_2527D3620(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DF88);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527D62D0();
  sub_252831B38();
  long long v9 = v3[5];
  long long v18 = v3[4];
  long long v19 = v9;
  long long v20 = v3[6];
  long long v10 = v3[1];
  long long v14 = *v3;
  long long v15 = v10;
  long long v11 = v3[3];
  long long v16 = v3[2];
  long long v17 = v11;
  v13[15] = 0;
  sub_2527D6378();
  sub_252831A18();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_2528319E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2527D37B0(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DFC0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527D6F28();
  sub_252831B38();
  v8[15] = 0;
  sub_2528319E8();
  if (!v1)
  {
    v8[14] = 1;
    sub_2528319A8();
    v8[13] = 2;
    sub_2528319A8();
    v8[12] = 3;
    sub_2528319E8();
    v8[11] = 4;
    sub_2528319E8();
    v8[10] = 5;
    sub_2528319E8();
    v8[9] = 6;
    sub_2528319E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2527D39D8()
{
  if (*v0) {
    return 0x686374616DLL;
  }
  else {
    return 0x73736572646461;
  }
}

uint64_t sub_2527D3A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2527D5DB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2527D3A38(uint64_t a1)
{
  unint64_t v2 = sub_2527D62D0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527D3A74(uint64_t a1)
{
  unint64_t v2 = sub_2527D62D0();

  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_2527D3AB0@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_2527D5EA0(a1, v9);
  if (!v2)
  {
    long long v5 = v13;
    a2[4] = v12;
    a2[5] = v5;
    long long v6 = v15;
    a2[6] = v14;
    a2[7] = v6;
    long long v7 = v9[1];
    *a2 = v9[0];
    a2[1] = v7;
    double result = *(double *)&v10;
    long long v8 = v11;
    a2[2] = v10;
    a2[3] = v8;
  }
  return result;
}

uint64_t sub_2527D3B04(void *a1)
{
  return sub_2527D3620(a1);
}

uint64_t sub_2527D3B1C()
{
  uint64_t result = 0x4C73736572646461;
  switch(*v0)
  {
    case 3:
      uint64_t result = 2037672291;
      break;
    case 4:
      uint64_t result = 0x6574617473;
      break;
    case 5:
      uint64_t result = 0x6F436C6174736F70;
      break;
    case 6:
      uint64_t result = 0x7972746E756F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2527D3BF0(uint64_t a1)
{
  unint64_t v2 = sub_2527D6F28();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527D3C2C(uint64_t a1)
{
  unint64_t v2 = sub_2527D6F28();

  return MEMORY[0x270FA00B8](a1, v2);
}

__n128 sub_2527D3C68@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2527D6964(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_OWORD *)(a2 + 96) = v7[6];
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_2527D3CBC(void *a1)
{
  return sub_2527D37B0(a1);
}

uint64_t sub_2527D3CD4(uint64_t a1, uint64_t a2)
{
  v2[24] = a1;
  v2[25] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v2[26] = swift_task_alloc();
  uint64_t v4 = sub_2528307F8();
  v2[27] = v4;
  v2[28] = *(void *)(v4 - 8);
  v2[29] = swift_task_alloc();
  long long v5 = (void *)swift_task_alloc();
  v2[30] = v5;
  *long long v5 = v2;
  v5[1] = sub_2527D3DF8;
  return sub_2527BAEF8(a2);
}

uint64_t sub_2527D3DF8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2527D3EF4, 0, 0);
}

uint64_t sub_2527D3EF4()
{
  uint64_t KeyPath = swift_getKeyPath();
  v0[31] = KeyPath;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[32] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2527D3FA8;
  uint64_t v3 = v0[26];
  uint64_t v4 = v0[24];
  return sub_2527DB210(v3, v4, KeyPath, 0);
}

uint64_t sub_2527D3FA8()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_2527D40C0, 0, 0);
}

uint64_t sub_2527D40C0()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[28];
  uint64_t v3 = v0[26];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_2527A5E98(v3);
    if (qword_269C1CEC0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D2B0);
    long long v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable generate request URL for Address Verification Request", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }

    type metadata accessor for NetworkError();
    sub_2527B3838();
    swift_allocError();
    *long long v8 = 0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[29], v3, v1);
    sub_252804F18(0xD000000000000024, 0x800000025283C870, (uint8_t *)0xD00000000000001ALL, 0x800000025283C8A0);
    long long v11 = (void *)swift_task_alloc();
    v0[33] = v11;
    *long long v11 = v0;
    v11[1] = sub_2527D434C;
    uint64_t v12 = v0[29];
    return MEMORY[0x270EF1EB0](v12, 0);
  }
}

uint64_t sub_2527D434C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v5 = (void *)*v4;
  v5[34] = a1;
  v5[35] = a2;
  v5[36] = a3;
  v5[37] = v3;
  swift_task_dealloc();
  if (v3) {
    os_log_type_t v6 = sub_2527D52D0;
  }
  else {
    os_log_type_t v6 = sub_2527D4464;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_2527D4464()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    uint64_t v3 = v0 + 23;
    id v4 = (id)v0[36];
    sub_252805814(0xD00000000000001FLL, (char *)0x800000025283C8C0, (unint64_t)objc_msgSend(v2, sel_statusCode), qword_2702C4070);
    id v5 = objc_msgSend(v2, sel_statusCode);
    switch((unint64_t)v5)
    {
      case 0x190uLL:
        if (qword_269C1CEC0 != -1) {
          swift_once();
        }
        uint64_t v6 = sub_252831158();
        __swift_project_value_buffer(v6, (uint64_t)qword_269C2D2B0);
        uint64_t v7 = sub_252831138();
        os_log_type_t v8 = sub_252831618();
        if (os_log_type_enabled(v7, v8))
        {
          long long v9 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)long long v9 = 0;
          _os_log_impl(&dword_25277D000, v7, v8, "BAD REQUEST | Check request", v9, 2u);
          MEMORY[0x2533BE070](v9, -1, -1);
        }
        goto LABEL_40;
      case 0x191uLL:
        if (qword_269C1CEC0 != -1) {
          swift_once();
        }
        uint64_t v44 = sub_252831158();
        __swift_project_value_buffer(v44, (uint64_t)qword_269C2D2B0);
        uint64_t v7 = sub_252831138();
        os_log_type_t v45 = sub_252831618();
        if (os_log_type_enabled(v7, v45))
        {
          uint64_t v46 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v46 = 0;
          _os_log_impl(&dword_25277D000, v7, v45, "Request Unauthorized.", v46, 2u);
          MEMORY[0x2533BE070](v46, -1, -1);
        }
        goto LABEL_40;
      case 0x192uLL:
      case 0x193uLL:
      case 0x195uLL:
      case 0x196uLL:
      case 0x197uLL:
      case 0x198uLL:
      case 0x199uLL:
      case 0x19AuLL:
      case 0x19BuLL:
      case 0x19CuLL:
      case 0x19DuLL:
      case 0x19EuLL:
      case 0x19FuLL:
      case 0x1A0uLL:
      case 0x1A1uLL:
      case 0x1A2uLL:
      case 0x1A3uLL:
      case 0x1A4uLL:
      case 0x1A5uLL:
      case 0x1A6uLL:
      case 0x1A7uLL:
      case 0x1A8uLL:
      case 0x1A9uLL:
      case 0x1AAuLL:
      case 0x1ABuLL:
      case 0x1ACuLL:
        goto LABEL_22;
      case 0x194uLL:
        if (qword_269C1CEC0 != -1) {
          swift_once();
        }
        uint64_t v47 = sub_252831158();
        __swift_project_value_buffer(v47, (uint64_t)qword_269C2D2B0);
        uint64_t v7 = sub_252831138();
        os_log_type_t v48 = sub_252831618();
        if (os_log_type_enabled(v7, v48))
        {
          unint64_t v49 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v49 = 0;
          _os_log_impl(&dword_25277D000, v7, v48, "No Matching Address Found.", v49, 2u);
          MEMORY[0x2533BE070](v49, -1, -1);
        }
        goto LABEL_40;
      case 0x1ADuLL:
        if (qword_269C1CEC0 != -1) {
          swift_once();
        }
        uint64_t v50 = sub_252831158();
        __swift_project_value_buffer(v50, (uint64_t)qword_269C2D2B0);
        uint64_t v7 = sub_252831138();
        os_log_type_t v51 = sub_252831618();
        if (os_log_type_enabled(v7, v51))
        {
          os_log_type_t v52 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v52 = 0;
          _os_log_impl(&dword_25277D000, v7, v51, "TOO MANY REQUESTS | Server rejected calls cause of too many requests being made", v52, 2u);
          MEMORY[0x2533BE070](v52, -1, -1);
        }
LABEL_40:
        unint64_t v53 = v0[35];
        long long v15 = (void *)v0[36];
        uint64_t v54 = v0[34];
        uint64_t v18 = v0[28];
        uint64_t v17 = v0[29];
        uint64_t v19 = v0[27];

        type metadata accessor for NetworkError();
        sub_2527B3838();
        swift_allocError();
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_252782E20(v54, v53);

        goto LABEL_41;
      default:
        if (v5 != (id)200)
        {
LABEL_22:
          if (qword_269C1CEC0 != -1) {
            swift_once();
          }
          os_log_type_t v36 = (void *)v0[36];
          uint64_t v37 = sub_252831158();
          __swift_project_value_buffer(v37, (uint64_t)qword_269C2D2B0);
          id v38 = v36;
          uint64_t v39 = sub_252831138();
          os_log_type_t v40 = sub_252831618();
          BOOL v41 = os_log_type_enabled(v39, v40);
          os_log_type_t v42 = (void *)v0[36];
          if (v41)
          {
            os_log_type_t v43 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)os_log_type_t v43 = 134217984;
            v0[22] = objc_msgSend(v2, sel_statusCode);
            sub_252831698();

            _os_log_impl(&dword_25277D000, v39, v40, "Request failed : Status Code %ld", v43, 0xCu);
            MEMORY[0x2533BE070](v43, -1, -1);
          }
          else
          {
          }
          unint64_t v57 = v0[35];
          uint64_t v58 = (void *)v0[36];
          uint64_t v59 = v0[34];
          uint64_t v60 = v0[28];
          uint64_t v111 = v0[27];
          uint64_t v113 = v0[29];
          type metadata accessor for NetworkError();
          sub_2527B3838();
          swift_allocError();
          *os_log_type_t v61 = objc_msgSend(v2, sel_statusCode);
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          sub_252782E20(v59, v57);

          (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v113, v111);
          goto LABEL_42;
        }
        if (qword_269C1CEC0 != -1) {
          swift_once();
        }
        uint64_t v21 = sub_252831158();
        __swift_project_value_buffer(v21, (uint64_t)qword_269C2D2B0);
        long long v22 = sub_252831138();
        os_log_type_t v23 = sub_252831628();
        if (os_log_type_enabled(v22, v23))
        {
          os_log_type_t v24 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v24 = 0;
          _os_log_impl(&dword_25277D000, v22, v23, "Address Verification Response received", v24, 2u);
          MEMORY[0x2533BE070](v24, -1, -1);
        }
        unint64_t v25 = (void *)v0[37];

        sub_252830828();
        swift_allocObject();
        sub_252830818();
        sub_2527D5358();
        sub_252830808();
        uint64_t v26 = v25;
        swift_release();
        if (v25)
        {
          uint64_t v27 = sub_252831138();
          os_log_type_t v28 = sub_252831618();
          if (os_log_type_enabled(v27, v28))
          {
            uint64_t v29 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v29 = 0;
            _os_log_impl(&dword_25277D000, v27, v28, "Error while decoding response from server", v29, 2u);
            MEMORY[0x2533BE070](v29, -1, -1);
          }
          unint64_t v30 = v0[35];
          long long v31 = (void *)v0[36];
          uint64_t v32 = v0[34];
          uint64_t v34 = v0[28];
          uint64_t v33 = v0[29];
          uint64_t v35 = v0[27];

          sub_252825138(v26);
          swift_willThrow();
          sub_252782E20(v32, v30);

          (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
          goto LABEL_42;
        }
        uint64_t v62 = *v3;
        uint64_t v63 = *(void *)(*v3 + 16);
        if (v63)
        {
          uint64_t v100 = (objc_super *)(v0 + 20);
          v101 = (objc_super *)(v0 + 18);
          uint64_t v64 = v0 + 2;
          uint64_t v115 = MEMORY[0x263F8EE78];
          sub_252831868();
          uint64_t v98 = (uint64_t)(v0 + 2);
          v99 = (objc_class *)type metadata accessor for UtilityServiceAddress();
          uint64_t v103 = v63 - 1;
          uint64_t v65 = 32;
          uint64_t v96 = v62;
          long long v97 = v0;
          while (1)
          {
            uint64_t v102 = v65;
            uint64_t v66 = (long long *)(v62 + v65);
            long long v67 = v66[4];
            long long v68 = v66[5];
            long long v69 = v66[6];
            v64[7] = v66[7];
            long long v70 = *v66;
            long long v71 = v66[1];
            long long v72 = v66[3];
            v64[2] = v66[2];
            v64[3] = v72;
            _OWORD *v64 = v70;
            v64[1] = v71;
            v64[5] = v68;
            v64[6] = v69;
            v64[4] = v67;
            uint64_t v112 = v0[17];
            uint64_t v114 = v0[16];
            uint64_t v73 = v0[3];
            uint64_t v74 = v0[5];
            uint64_t v104 = v0[2];
            uint64_t v105 = v0[4];
            uint64_t v75 = v0[7];
            uint64_t v76 = v0[9];
            uint64_t v106 = v0[6];
            uint64_t v107 = v0[8];
            uint64_t v77 = v0[11];
            uint64_t v78 = v0[13];
            uint64_t v108 = v0[10];
            uint64_t v109 = v0[12];
            uint64_t v79 = v0[15];
            uint64_t v110 = v0[14];
            uint64_t v80 = (char *)objc_allocWithZone(v99);
            long long v81 = &v80[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_addressLine1];
            *(void *)long long v81 = v104;
            *((void *)v81 + 1) = v73;
            uint64_t v82 = &v80[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_addressLine2];
            *(void *)uint64_t v82 = v105;
            *((void *)v82 + 1) = v74;
            long long v83 = &v80[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_addressLine3];
            *(void *)long long v83 = v106;
            *((void *)v83 + 1) = v75;
            long long v84 = &v80[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_city];
            *(void *)long long v84 = v107;
            *((void *)v84 + 1) = v76;
            uint64_t v64 = (_OWORD *)v98;
            id v85 = &v80[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_state];
            *(void *)id v85 = v108;
            *((void *)v85 + 1) = v77;
            unint64_t v86 = &v80[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_postalCode];
            *(void *)unint64_t v86 = v109;
            *((void *)v86 + 1) = v78;
            uint64_t v87 = &v80[OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_country];
            *(void *)uint64_t v87 = v110;
            *((void *)v87 + 1) = v79;
            sub_2527D53AC(v98);
            v0[18] = v80;
            v0[19] = v99;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            long long v88 = [(objc_super *)v101 init];
            if (v114 == 0x5F54434546524550 && v112 == 0xED0000484354414DLL) {
              goto LABEL_52;
            }
            if (sub_252831A58()) {
LABEL_52:
            }
              uint64_t v89 = 2;
            else {
              uint64_t v89 = v114 == 0x414D5F45534F4C43 && v112 == 0xEB00000000484354 || sub_252831A58() & 1;
            }
            uint64_t v90 = (objc_class *)type metadata accessor for MatchedServiceAddress();
            uint64_t v91 = (char *)objc_allocWithZone(v90);
            *(void *)&v91[OBJC_IVAR____TtC19HomeUtilityServices21MatchedServiceAddress_address] = v88;
            *(void *)&v91[OBJC_IVAR____TtC19HomeUtilityServices21MatchedServiceAddress_matchType] = v89;
            uint64_t v0 = v97;
            v97[20] = v91;
            v97[21] = v90;
            [(objc_super *)v100 init];
            sub_2527D5444(v98);
            sub_252831848();
            sub_252831878();
            sub_252831888();
            sub_252831858();
            if (!v103) {
              break;
            }
            --v103;
            uint64_t v65 = v102 + 128;
            uint64_t v62 = v96;
          }
          unint64_t v92 = (void *)v97[36];
          uint64_t v93 = v115;
          sub_252782E20(v97[34], v97[35]);

          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v94 = (void *)v0[36];
          sub_252782E20(v0[34], v0[35]);

          swift_bridgeObjectRelease();
          uint64_t v93 = MEMORY[0x263F8EE78];
        }
        (*(void (**)(void, void))(v0[28] + 8))(v0[29], v0[27]);
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v95 = (uint64_t (*)(uint64_t))v0[1];
        uint64_t result = v95(v93);
        break;
    }
  }
  else
  {
    if (qword_269C1CEC0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_252831158();
    __swift_project_value_buffer(v10, (uint64_t)qword_269C2D2B0);
    long long v11 = sub_252831138();
    os_log_type_t v12 = sub_252831618();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_25277D000, v11, v12, "Unable to process Address Verification Response.", v13, 2u);
      MEMORY[0x2533BE070](v13, -1, -1);
    }
    unint64_t v14 = v0[35];
    long long v15 = (void *)v0[36];
    uint64_t v16 = v0[34];
    uint64_t v18 = v0[28];
    uint64_t v17 = v0[29];
    uint64_t v19 = v0[27];

    type metadata accessor for NetworkError();
    sub_2527B3838();
    swift_allocError();
    *long long v20 = 2;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_252782E20(v16, v14);
LABEL_41:

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
LABEL_42:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v55 = (uint64_t (*)(void))v0[1];
    return v55();
  }
  return result;
}

uint64_t sub_2527D52D0()
{
  (*(void (**)(void, void))(v0[28] + 8))(v0[29], v0[27]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

unint64_t sub_2527D5358()
{
  unint64_t result = qword_269C1DF10;
  if (!qword_269C1DF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DF10);
  }
  return result;
}

uint64_t sub_2527D53AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_2527D5444(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for VerifiedResponse()
{
  return &type metadata for VerifiedResponse;
}

void *sub_2527D54EC(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DF18);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527D5694();
  sub_252831B28();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DF28);
    sub_2527D573C(&qword_269C1DF30, (void (*)(void))sub_2527D56E8);
    sub_252831998();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_2527D5694()
{
  unint64_t result = qword_269C1DF20;
  if (!qword_269C1DF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DF20);
  }
  return result;
}

unint64_t sub_2527D56E8()
{
  unint64_t result = qword_269C1DF38;
  if (!qword_269C1DF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DF38);
  }
  return result;
}

uint64_t sub_2527D573C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C1DF28);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2527D57AC()
{
  unint64_t result = qword_269C1DF50;
  if (!qword_269C1DF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DF50);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for VerifiedResponse.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2527D589CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for VerifiedResponse.CodingKeys()
{
  return &type metadata for VerifiedResponse.CodingKeys;
}

uint64_t destroy for VerifiedServiceAddressResponse()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for VerifiedServiceAddressResponse(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  uint64_t v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for VerifiedServiceAddressResponse(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

void *assignWithTake for VerifiedServiceAddressResponse(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VerifiedServiceAddressResponse(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VerifiedServiceAddressResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VerifiedServiceAddressResponse()
{
  return &type metadata for VerifiedServiceAddressResponse;
}

unint64_t sub_2527D5CB0()
{
  unint64_t result = qword_269C1DF58;
  if (!qword_269C1DF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DF58);
  }
  return result;
}

unint64_t sub_2527D5D08()
{
  unint64_t result = qword_269C1DF60;
  if (!qword_269C1DF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DF60);
  }
  return result;
}

unint64_t sub_2527D5D60()
{
  unint64_t result = qword_269C1DF68;
  if (!qword_269C1DF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DF68);
  }
  return result;
}

uint64_t sub_2527D5DB4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73736572646461 && a2 == 0xE700000000000000;
  if (v2 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x686374616DLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2527D5EA0@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DF70);
  uint64_t v5 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527D62D0();
  sub_252831B28();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v51 = v5;
  unint64_t v49 = a2;
  LOBYTE(v53) = 0;
  sub_2527D6324();
  uint64_t v8 = v52;
  sub_252831998();
  uint64_t v9 = v62;
  uint64_t v42 = v63;
  uint64_t v43 = v61;
  uint64_t v50 = v64;
  uint64_t v10 = v68;
  uint64_t v40 = v67;
  uint64_t v41 = v65;
  uint64_t v11 = v70;
  uint64_t v12 = v72;
  uint64_t v38 = v71;
  uint64_t v39 = v69;
  uint64_t v13 = v74;
  uint64_t v37 = v73;
  char v77 = 1;
  uint64_t v47 = v66;
  swift_bridgeObjectRetain();
  uint64_t v46 = v10;
  swift_bridgeObjectRetain();
  uint64_t v45 = v11;
  swift_bridgeObjectRetain();
  uint64_t v14 = v12;
  swift_bridgeObjectRetain();
  uint64_t v15 = v13;
  swift_bridgeObjectRetain();
  uint64_t v48 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_252831968();
  uint64_t v44 = v13;
  uint64_t v17 = *(void (**)(char *, uint64_t))(v51 + 8);
  uint64_t v18 = v16;
  uint64_t v35 = v19;
  uint64_t v36 = v16;
  long long v20 = v7;
  uint64_t v21 = v19;
  v17(v20, v8);
  *(void *)&long long v53 = v43;
  *((void *)&v53 + 1) = v48;
  *(void *)&long long v54 = v42;
  *((void *)&v54 + 1) = v50;
  uint64_t v22 = v46;
  *(void *)&long long v55 = v41;
  *((void *)&v55 + 1) = v47;
  *(void *)&long long v56 = v40;
  *((void *)&v56 + 1) = v46;
  uint64_t v23 = v45;
  *(void *)&long long v57 = v39;
  *((void *)&v57 + 1) = v45;
  *(void *)&long long v58 = v38;
  *((void *)&v58 + 1) = v14;
  *(void *)&long long v59 = v37;
  *((void *)&v59 + 1) = v15;
  *(void *)&long long v60 = v18;
  *((void *)&v60 + 1) = v21;
  sub_2527D53AC((uint64_t)&v53);
  swift_bridgeObjectRelease();
  uint64_t v24 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = v47;
  swift_bridgeObjectRelease();
  uint64_t v26 = v50;
  swift_bridgeObjectRelease();
  uint64_t v27 = v48;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  uint64_t v61 = v43;
  uint64_t v62 = v27;
  uint64_t v63 = v42;
  uint64_t v64 = v26;
  uint64_t v65 = v41;
  uint64_t v66 = v25;
  uint64_t v67 = v40;
  uint64_t v68 = v22;
  uint64_t v69 = v39;
  uint64_t v70 = v23;
  uint64_t v71 = v38;
  uint64_t v72 = v24;
  uint64_t v73 = v37;
  uint64_t v74 = v44;
  uint64_t v75 = v36;
  uint64_t v76 = v35;
  uint64_t result = sub_2527D5444((uint64_t)&v61);
  long long v29 = v58;
  unint64_t v30 = v49;
  v49[4] = v57;
  v30[5] = v29;
  long long v31 = v60;
  v30[6] = v59;
  v30[7] = v31;
  long long v32 = v54;
  *unint64_t v30 = v53;
  v30[1] = v32;
  long long v33 = v56;
  v30[2] = v55;
  v30[3] = v33;
  return result;
}

unint64_t sub_2527D62D0()
{
  unint64_t result = qword_269C1DF78;
  if (!qword_269C1DF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DF78);
  }
  return result;
}

unint64_t sub_2527D6324()
{
  unint64_t result = qword_269C1DF80;
  if (!qword_269C1DF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DF80);
  }
  return result;
}

unint64_t sub_2527D6378()
{
  unint64_t result = qword_269C1DF90;
  if (!qword_269C1DF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DF90);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for VerifiedServiceAddressResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2527D6498);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VerifiedServiceAddressResponse.CodingKeys()
{
  return &type metadata for VerifiedServiceAddressResponse.CodingKeys;
}

uint64_t destroy for InternalUtilityAddress()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for InternalUtilityAddress(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InternalUtilityAddress(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

void *assignWithTake for InternalUtilityAddress(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InternalUtilityAddress(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InternalUtilityAddress(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VerifiedServiceAddress()
{
  return &type metadata for VerifiedServiceAddress;
}

unint64_t sub_2527D6860()
{
  unint64_t result = qword_269C1DF98;
  if (!qword_269C1DF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DF98);
  }
  return result;
}

unint64_t sub_2527D68B8()
{
  unint64_t result = qword_269C1DFA0;
  if (!qword_269C1DFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DFA0);
  }
  return result;
}

unint64_t sub_2527D6910()
{
  unint64_t result = qword_269C1DFA8;
  if (!qword_269C1DFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DFA8);
  }
  return result;
}

uint64_t sub_2527D6964@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DFB0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527D6F28();
  sub_252831B28();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v54 = 0;
  uint64_t v9 = sub_252831968();
  uint64_t v11 = v10;
  uint64_t v47 = v9;
  char v53 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_252831928();
  uint64_t v14 = v13;
  uint64_t v45 = v12;
  uint64_t v46 = v11;
  char v52 = 2;
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_252831928();
  uint64_t v44 = v14;
  char v51 = 3;
  uint64_t v16 = v15;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_252831968();
  uint64_t v43 = v18;
  uint64_t v39 = v17;
  char v50 = 4;
  swift_bridgeObjectRetain();
  uint64_t v41 = 0;
  uint64_t v38 = sub_252831968();
  char v49 = 5;
  uint64_t v20 = v19;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_252831968();
  uint64_t v40 = v20;
  uint64_t v37 = v21;
  char v48 = 6;
  uint64_t v23 = v22;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_252831968();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v41 = v24;
  uint64_t v26 = v8;
  uint64_t v28 = v27;
  v25(v26, v5);
  swift_bridgeObjectRetain();
  uint64_t v29 = v44;
  swift_bridgeObjectRetain();
  uint64_t v30 = v16;
  swift_bridgeObjectRetain();
  uint64_t v31 = v43;
  swift_bridgeObjectRetain();
  uint64_t v32 = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  uint64_t v33 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v34 = v46;
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v47;
  a2[1] = v34;
  a2[2] = v45;
  a2[3] = v29;
  a2[4] = v42;
  a2[5] = v30;
  a2[6] = v39;
  a2[7] = v31;
  a2[8] = v38;
  a2[9] = v32;
  a2[10] = v37;
  a2[11] = v23;
  a2[12] = v41;
  a2[13] = v33;
  return result;
}

unint64_t sub_2527D6F28()
{
  unint64_t result = qword_269C1DFB8;
  if (!qword_269C1DFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DFB8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for VerifiedServiceAddress.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2527D7048);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VerifiedServiceAddress.CodingKeys()
{
  return &type metadata for VerifiedServiceAddress.CodingKeys;
}

unint64_t sub_2527D7084()
{
  unint64_t result = qword_269C1DFC8;
  if (!qword_269C1DFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DFC8);
  }
  return result;
}

unint64_t sub_2527D70DC()
{
  unint64_t result = qword_269C1DFD0;
  if (!qword_269C1DFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DFD0);
  }
  return result;
}

unint64_t sub_2527D7134()
{
  unint64_t result = qword_269C1DFD8;
  if (!qword_269C1DFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1DFD8);
  }
  return result;
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> JWToken.init(jwt:)(HomeUtilityServices::JWToken *__return_ptr retstr, Swift::String jwt)
{
  uint64_t v3 = v2;
  object = jwt._object;
  uint64_t countAndFlagsBits = jwt._countAndFlagsBits;
  sub_25279033C();
  uint64_t v7 = (void *)sub_2528316B8();
  uint64_t v8 = v7;
  uint64_t v9 = v7[2];
  if (v9 != 3)
  {
    swift_bridgeObjectRelease();
    sub_2527D7360();
    swift_allocError();
    *(void *)uint64_t v18 = countAndFlagsBits;
    *(void *)(v18 + 8) = object;
    *(void *)(v18 + 16) = v9;
    *(unsigned char *)(v18 + 24) = 2;
    swift_willThrow();
    return;
  }
  uint64_t v10 = v7[4];
  unint64_t v11 = v7[5];
  swift_bridgeObjectRetain();
  uint64_t v12 = v10;
  uint64_t v13 = v3;
  id v14 = sub_2527D7734(v12, v11);
  swift_bridgeObjectRelease();
  if (v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  if (v8[2] < 2uLL)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = v8[6];
    unint64_t v16 = v8[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v17 = sub_2527D7734(v15, v16);
    swift_bridgeObjectRelease();
    if (v8[2] >= 3uLL)
    {
      uint64_t v20 = v8[8];
      uint64_t v19 = (void *)v8[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      retstr->header._rawValue = v14;
      retstr->body._rawValue = v17;
      retstr->signature.value._uint64_t countAndFlagsBits = v20;
      retstr->signature.value._object = v19;
      retstr->string._uint64_t countAndFlagsBits = countAndFlagsBits;
      retstr->string._object = object;
      return;
    }
  }
  __break(1u);
}

unint64_t sub_2527D7360()
{
  unint64_t result = qword_26B22BBC8;
  if (!qword_26B22BBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BBC8);
  }
  return result;
}

BOOL JWToken.expired.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD70);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_252830DB8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(v0 + 8);
  if (*(void *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_2527D9BC4(7370853, 0xE300000000000000, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2527D9C58);
    if (v13)
    {
      sub_252784638(*(void *)(v11 + 56) + 32 * v12, (uint64_t)&v19);
    }
    else
    {
      long long v19 = 0u;
      long long v20 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  sub_2527D9A64((uint64_t)&v19, (uint64_t)v21);
  Claim.double.getter();
  if (v14)
  {
    uint64_t v15 = 1;
  }
  else
  {
    sub_252830D48();
    uint64_t v15 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, v15, 1, v4);
  sub_2527D9ACC((uint64_t)v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_252781C54((uint64_t)v3, &qword_26B22BD70);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
    sub_252830DA8();
    uint64_t v17 = sub_252830D88();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
    v18(v8, v4);
    v18(v10, v4);
    return v17 != 1;
  }
}

uint64_t JWToken.header.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t JWToken.body.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t JWToken.signature.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JWToken.string.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_2527D7734(uint64_t a1, unint64_t a2)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_2527D948C(a1, a2);
  if (v5 >> 60 == 15)
  {
    sub_2527D7360();
    swift_allocError();
    *(void *)uint64_t v6 = a1;
    *(void *)(v6 + 8) = a2;
    *(void *)(v6 + 16) = 0;
    *(unsigned char *)(v6 + 24) = 0;
    swift_bridgeObjectRetain();
    return (id)swift_willThrow();
  }
  uint64_t v8 = v4;
  unint64_t v9 = v5;
  uint64_t v10 = self;
  uint64_t v11 = (void *)sub_252830C48();
  id v17 = 0;
  id v12 = objc_msgSend(v10, sel_JSONObjectWithData_options_error_, v11, 0, &v17);

  id v13 = v17;
  if (v12)
  {
    sub_252831738();
    swift_unknownObjectRelease();
    sub_2527933EC(v18, v19);
    sub_2527933EC(v19, v18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF28);
    if (swift_dynamicCast())
    {
      sub_252783CC0(v8, v9);
      return v17;
    }
  }
  else
  {
    char v14 = v13;
    uint64_t v15 = (void *)sub_252830B18();

    swift_willThrow();
  }
  sub_2527D7360();
  swift_allocError();
  *(void *)uint64_t v16 = a1;
  *(void *)(v16 + 8) = a2;
  *(void *)(v16 + 16) = 0;
  *(unsigned char *)(v16 + 24) = 1;
  swift_bridgeObjectRetain();
  swift_willThrow();
  return (id)sub_252783CC0(v8, v9);
}

uint64_t JWToken.expiresAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  if (*(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_2527D9BC4(7370853, 0xE300000000000000, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2527D9C58);
    if (v5)
    {
      sub_252784638(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v10);
    }
    else
    {
      long long v10 = 0u;
      long long v11 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v10 = 0u;
    long long v11 = 0u;
  }
  sub_2527D9A64((uint64_t)&v10, (uint64_t)v12);
  Claim.double.getter();
  if (v6)
  {
    uint64_t v8 = sub_252830DB8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
  else
  {
    sub_252830D48();
    uint64_t v7 = sub_252830DB8();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, 0, 1, v7);
  }
  return sub_2527D9ACC((uint64_t)v12);
}

uint64_t JWT.claim(name:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  if (*(void *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_2527D9BC4(a1, a2, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2527D9C58);
    if (v10)
    {
      sub_252784638(*(void *)(v8 + 56) + 32 * v9, (uint64_t)&v12);
    }
    else
    {
      long long v12 = 0u;
      long long v13 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  swift_bridgeObjectRelease();
  return sub_2527D9A64((uint64_t)&v12, a5);
}

uint64_t Claim.date.getter@<X0>(uint64_t a1@<X8>)
{
  Claim.double.getter();
  if (v2)
  {
    uint64_t v8 = sub_252830DB8();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    uint64_t v5 = v8;
    uint64_t v6 = a1;
    uint64_t v7 = 1;
  }
  else
  {
    sub_252830D48();
    uint64_t v3 = sub_252830DB8();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
    uint64_t v5 = v3;
    uint64_t v6 = a1;
    uint64_t v7 = 0;
  }

  return v4(v6, v7, 1, v5);
}

uint64_t JWToken.issuer.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  if (*(void *)(v1 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_2527D9BC4(7566185, 0xE300000000000000, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2527D9C58);
    if (v3)
    {
      sub_252784638(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v7);
    }
    else
    {
      long long v7 = 0u;
      long long v8 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v7 = 0u;
    long long v8 = 0u;
  }
  sub_2527D9A64((uint64_t)&v7, (uint64_t)v9);
  sub_2527845D0((uint64_t)v9, (uint64_t)&v7);
  if (*((void *)&v8 + 1))
  {
    if (swift_dynamicCast()) {
      uint64_t v4 = v6;
    }
    else {
      uint64_t v4 = 0;
    }
  }
  else
  {
    sub_252781C54((uint64_t)&v7, &qword_26B22C010);
    uint64_t v4 = 0;
  }
  sub_2527D9ACC((uint64_t)v9);
  return v4;
}

uint64_t Claim.string.getter()
{
  sub_2527845D0(v0, (uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast()) {
      return v2;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_252781C54((uint64_t)v3, &qword_26B22C010);
    return 0;
  }
}

uint64_t JWToken.subject.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  if (*(void *)(v1 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_2527D9BC4(6452595, 0xE300000000000000, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2527D9C58);
    if (v3)
    {
      sub_252784638(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v7);
    }
    else
    {
      long long v7 = 0u;
      long long v8 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v7 = 0u;
    long long v8 = 0u;
  }
  sub_2527D9A64((uint64_t)&v7, (uint64_t)v9);
  sub_2527845D0((uint64_t)v9, (uint64_t)&v7);
  if (*((void *)&v8 + 1))
  {
    if (swift_dynamicCast()) {
      uint64_t v4 = v6;
    }
    else {
      uint64_t v4 = 0;
    }
  }
  else
  {
    sub_252781C54((uint64_t)&v7, &qword_26B22C010);
    uint64_t v4 = 0;
  }
  sub_2527D9ACC((uint64_t)v9);
  return v4;
}

uint64_t JWToken.audience.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  if (*(void *)(v1 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_2527D9BC4(6583649, 0xE300000000000000, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2527D9C58);
    if (v3)
    {
      sub_252784638(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v6);
    }
    else
    {
      long long v6 = 0u;
      long long v7 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v6 = 0u;
    long long v7 = 0u;
  }
  sub_2527D9A64((uint64_t)&v6, (uint64_t)v8);
  uint64_t v4 = Claim.array.getter();
  sub_2527D9ACC((uint64_t)v8);
  return v4;
}

uint64_t Claim.array.getter()
{
  sub_2527845D0(v0, (uint64_t)v4);
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF40);
    if (swift_dynamicCast()) {
      return v2;
    }
  }
  else
  {
    sub_252781C54((uint64_t)v4, &qword_26B22C010);
  }
  sub_2527845D0(v0, (uint64_t)v4);
  if (v5)
  {
    if (swift_dynamicCast())
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFE8);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_252832B00;
      *(void *)(result + 32) = v2;
      *(void *)(result + 40) = v3;
      return result;
    }
  }
  else
  {
    sub_252781C54((uint64_t)v4, &qword_26B22C010);
  }
  return 0;
}

uint64_t JWToken.issuedAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  if (*(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_2527D9BC4(7627113, 0xE300000000000000, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2527D9C58);
    if (v5)
    {
      sub_252784638(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v10);
    }
    else
    {
      long long v10 = 0u;
      long long v11 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v10 = 0u;
    long long v11 = 0u;
  }
  sub_2527D9A64((uint64_t)&v10, (uint64_t)v12);
  Claim.double.getter();
  if (v6)
  {
    uint64_t v8 = sub_252830DB8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
  else
  {
    sub_252830D48();
    uint64_t v7 = sub_252830DB8();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, 0, 1, v7);
  }
  return sub_2527D9ACC((uint64_t)v12);
}

uint64_t JWToken.notBefore.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  if (*(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_2527D9BC4(6709870, 0xE300000000000000, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2527D9C58);
    if (v5)
    {
      sub_252784638(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v10);
    }
    else
    {
      long long v10 = 0u;
      long long v11 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v10 = 0u;
    long long v11 = 0u;
  }
  sub_2527D9A64((uint64_t)&v10, (uint64_t)v12);
  Claim.double.getter();
  if (v6)
  {
    uint64_t v8 = sub_252830DB8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
  else
  {
    sub_252830D48();
    uint64_t v7 = sub_252830DB8();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, 0, 1, v7);
  }
  return sub_2527D9ACC((uint64_t)v12);
}

uint64_t JWToken.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  if (*(void *)(v1 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_2527D9BC4(6911082, 0xE300000000000000, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2527D9C58);
    if (v3)
    {
      sub_252784638(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v7);
    }
    else
    {
      long long v7 = 0u;
      long long v8 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v7 = 0u;
    long long v8 = 0u;
  }
  sub_2527D9A64((uint64_t)&v7, (uint64_t)v9);
  sub_2527845D0((uint64_t)v9, (uint64_t)&v7);
  if (*((void *)&v8 + 1))
  {
    if (swift_dynamicCast()) {
      uint64_t v4 = v6;
    }
    else {
      uint64_t v4 = 0;
    }
  }
  else
  {
    sub_252781C54((uint64_t)&v7, &qword_26B22C010);
    uint64_t v4 = 0;
  }
  sub_2527D9ACC((uint64_t)v9);
  return v4;
}

uint64_t sub_2527D8458()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2527D8460()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2527D8468()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2527D8498()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void static JWToken.mockJWToken()()
{
  uint64_t v0 = sub_252830DB8();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v61 = v0;
  uint64_t v62 = v1;
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  long long v58 = (char *)v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)v55 - v4;
  uint64_t v60 = sub_252830DE8();
  uint64_t v6 = *(void *)(v60 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v60);
  long long v56 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  long long v11 = (char *)v55 - v10;
  MEMORY[0x270FA5388](v9);
  long long v13 = (char *)v55 - v12;
  long long v57 = (char *)v55 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DFE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_252834DD0;
  *(void *)(inited + 32) = 0x6C7974696C697475;
  *(void *)(inited + 40) = 0xE900000000000064;
  sub_252830DD8();
  uint64_t v15 = sub_252830DC8();
  uint64_t v17 = v16;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  long long v19 = v13;
  uint64_t v20 = v60;
  v18(v19, v60);
  uint64_t v21 = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v15;
  *(void *)(inited + 56) = v17;
  *(void *)(inited + 72) = v21;
  *(void *)(inited + 80) = 7370853;
  *(void *)(inited + 88) = 0xE300000000000000;
  sub_252830D38();
  sub_252830D58();
  uint64_t v23 = v22;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v62 + 8);
  v62 += 8;
  v55[0] = v24;
  v24(v5, v61);
  uint64_t v25 = MEMORY[0x263F8D538];
  *(void *)(inited + 96) = v23;
  *(void *)(inited + 120) = v25;
  *(void *)(inited + 128) = 6709870;
  uint64_t v26 = MEMORY[0x263F8D6C8];
  *(void *)(inited + 136) = 0xE300000000000000;
  *(void *)(inited + 144) = 1644170208;
  *(void *)(inited + 168) = v26;
  strcpy((char *)(inited + 176), "subscriptionld");
  *(unsigned char *)(inited + 191) = -18;
  sub_252830DD8();
  uint64_t v27 = sub_252830DC8();
  uint64_t v29 = v28;
  uint64_t v30 = v20;
  v55[1] = v6 + 8;
  v18(v11, v20);
  *(void *)(inited + 192) = v27;
  *(void *)(inited + 200) = v29;
  uint64_t v31 = MEMORY[0x263F8D310];
  *(void *)(inited + 216) = MEMORY[0x263F8D310];
  *(void *)(inited + 224) = 6911082;
  *(void *)(inited + 232) = 0xE300000000000000;
  uint64_t v32 = v56;
  sub_252830DD8();
  uint64_t v33 = sub_252830DC8();
  uint64_t v35 = v34;
  v18(v32, v30);
  *(void *)(inited + 240) = v33;
  *(void *)(inited + 248) = v35;
  *(void *)(inited + 264) = v31;
  *(void *)(inited + 272) = 7566185;
  *(void *)(inited + 280) = 0xE300000000000000;
  *(void *)(inited + 288) = 0xD000000000000018;
  *(void *)(inited + 296) = 0x800000025283C8E0;
  *(void *)(inited + 312) = v31;
  *(void *)(inited + 320) = 7627113;
  *(void *)(inited + 328) = 0xE300000000000000;
  uint64_t v36 = v58;
  sub_252830D78();
  sub_252830D58();
  uint64_t v38 = v37;
  ((void (*)(char *, uint64_t))v55[0])(v36, v61);
  *(void *)(inited + 360) = MEMORY[0x263F8D538];
  *(void *)(inited + 336) = v38;
  unint64_t v39 = sub_252786D50(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFF0);
  uint64_t v40 = swift_initStackObject();
  *(_OWORD *)(v40 + 16) = xmmword_252834DE0;
  *(void *)(v40 + 32) = 6777953;
  *(void *)(v40 + 40) = 0xE300000000000000;
  *(void *)(v40 + 48) = 0x3635325345;
  *(void *)(v40 + 56) = 0xE500000000000000;
  *(void *)(v40 + 64) = 1701869940;
  *(void *)(v40 + 72) = 0xE400000000000000;
  *(void *)(v40 + 80) = 5527370;
  *(void *)(v40 + 88) = 0xE300000000000000;
  *(void *)(v40 + 96) = 6580587;
  *(void *)(v40 + 104) = 0xE300000000000000;
  uint64_t v41 = v57;
  sub_252830DD8();
  uint64_t v42 = sub_252830DC8();
  uint64_t v44 = v43;
  v18(v41, v60);
  *(void *)(v40 + 112) = v42;
  *(void *)(v40 + 120) = v44;
  unint64_t v45 = sub_252786E88(v40);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DFE8);
  v63[0] = v45;
  uint64_t v46 = v59;
  id v47 = sub_2527D8AE4(v63);
  if (v46)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v63);
    swift_getErrorValue();
    uint64_t v51 = sub_252831AA8();
    uint64_t v53 = v52;
    sub_2527D9B00();
    swift_allocError();
    *char v54 = v51;
    v54[1] = v53;
    swift_willThrow();
  }
  else
  {
    id v49 = v47;
    uint64_t v50 = v48;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v63);
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF28);
    v63[0] = v39;
    sub_2527D8AE4(v63);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v63);
    v63[0] = v49;
    v63[1] = v50;
    sub_2528313A8();
    sub_2528313A8();
    swift_bridgeObjectRelease();
    sub_2528313A8();
    sub_2528313A8();
  }
}

id sub_2527D8AE4(void *a1)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v2 = self;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  id v17 = 0;
  id v3 = objc_msgSend(v2, sel_dataWithJSONObject_options_error_, sub_252831A48(), 0, &v17);
  swift_unknownObjectRelease();
  id v4 = v17;
  if (v3)
  {
    uint64_t v5 = sub_252830C68();
    unint64_t v7 = v6;

    id v17 = (id)sub_252830C58();
    uint64_t v18 = v8;
    sub_25279033C();
    uint64_t v9 = (void *)sub_2528316D8();
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    id v17 = v9;
    uint64_t v18 = v11;
    uint64_t v12 = (void *)sub_2528316D8();
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    id v17 = v12;
    uint64_t v18 = v14;
    id v3 = (id)sub_2528316D8();
    swift_bridgeObjectRelease();
    sub_252782E20(v5, v7);
  }
  else
  {
    uint64_t v15 = v4;
    sub_252830B18();

    swift_willThrow();
  }
  return v3;
}

uint64_t Claim.rawValue.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2527845D0(v1, a1);
}

uint64_t Claim.BOOLean.getter()
{
  sub_2527845D0(v0, (uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast()) {
      return v2;
    }
    else {
      return 2;
    }
  }
  else
  {
    sub_252781C54((uint64_t)v3, &qword_26B22C010);
    return 2;
  }
}

uint64_t Claim.double.getter()
{
  sub_2527845D0(v0, (uint64_t)v9);
  if (!v10)
  {
    sub_252781C54((uint64_t)v9, &qword_26B22C010);
LABEL_10:
    sub_2527845D0(v0, (uint64_t)v9);
    if (v10)
    {
      if (swift_dynamicCast()) {
        return 0;
      }
    }
    else
    {
      sub_252781C54((uint64_t)v9, &qword_26B22C010);
    }
    sub_2527845D0(v0, (uint64_t)v9);
    if (v10)
    {
      if (swift_dynamicCast()) {
        return v7;
      }
      else {
        return 0;
      }
    }
    sub_252781C54((uint64_t)v9, &qword_26B22C010);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v1 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  if ((v8 & 0x1000000000000000) != 0 || !(v8 & 0x2000000000000000 | v2 & 0x1000000000000000))
  {
    sub_2528317B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    MEMORY[0x270FA5388](v1);
    if ((v8 & 0x2000000000000000) != 0)
    {
      v9[0] = v3;
      v9[1] = v8 & 0xFFFFFFFFFFFFFFLL;
      if (v3 > 0x20u || ((0x100003E01uLL >> v3) & 1) == 0) {
        _swift_stdlib_strtod_clocale();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v3 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (v8 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = v3 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_252831838();
      }
      sub_2527DA6C0(v4, v5, (void (*)(uint64_t *__return_ptr))sub_2527DA7D4);
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

uint64_t Claim.integer.getter()
{
  sub_2527845D0(v0, (uint64_t)v26);
  if (v27)
  {
    if (swift_dynamicCast())
    {
      uint64_t result = v24;
      uint64_t v2 = HIBYTE(v25) & 0xF;
      uint64_t v3 = v24 & 0xFFFFFFFFFFFFLL;
      if ((v25 & 0x2000000000000000) != 0) {
        uint64_t v4 = HIBYTE(v25) & 0xF;
      }
      else {
        uint64_t v4 = v24 & 0xFFFFFFFFFFFFLL;
      }
      if (v4)
      {
        if ((v25 & 0x1000000000000000) != 0)
        {
          uint64_t v6 = (uint64_t)sub_2527D9E70(v24, v25, 10);
          char v8 = v23;
LABEL_62:
          swift_bridgeObjectRelease();
          if (v8) {
            return 0;
          }
          else {
            return v6;
          }
        }
        if ((v25 & 0x2000000000000000) == 0)
        {
          if ((v24 & 0x1000000000000000) != 0) {
            uint64_t v5 = (unsigned __int8 *)((v25 & 0xFFFFFFFFFFFFFFFLL) + 32);
          }
          else {
            uint64_t v5 = (unsigned __int8 *)sub_252831838();
          }
          uint64_t v6 = (uint64_t)sub_2527D9F58(v5, v3, 10);
          char v8 = v7 & 1;
          goto LABEL_62;
        }
        v26[0] = v24;
        v26[1] = v25 & 0xFFFFFFFFFFFFFFLL;
        if (v24 == 43)
        {
          if (!v2) {
            goto LABEL_78;
          }
          if (v2 == 1 || (BYTE1(v24) - 48) > 9u) {
            goto LABEL_49;
          }
          uint64_t v6 = (BYTE1(v24) - 48);
          if (v2 != 2)
          {
            if ((BYTE2(v24) - 48) > 9u) {
              goto LABEL_49;
            }
            uint64_t v6 = 10 * (BYTE1(v24) - 48) + (BYTE2(v24) - 48);
            uint64_t v11 = v2 - 3;
            if (v11)
            {
              uint64_t v12 = (unsigned __int8 *)v26 + 3;
              while (1)
              {
                unsigned int v13 = *v12 - 48;
                if (v13 > 9) {
                  goto LABEL_49;
                }
                uint64_t v14 = 10 * v6;
                if ((unsigned __int128)(v6 * (__int128)10) >> 64 != (10 * v6) >> 63) {
                  goto LABEL_49;
                }
                uint64_t v6 = v14 + v13;
                if (__OFADD__(v14, v13)) {
                  goto LABEL_49;
                }
                char v8 = 0;
                ++v12;
                if (!--v11) {
                  goto LABEL_62;
                }
              }
            }
          }
        }
        else
        {
          if (v24 == 45)
          {
            if (v2)
            {
              if (v2 != 1 && (BYTE1(v24) - 48) <= 9u)
              {
                if (v2 == 2)
                {
                  char v8 = 0;
                  uint64_t v6 = -(uint64_t)(BYTE1(v24) - 48);
                  goto LABEL_62;
                }
                if ((BYTE2(v24) - 48) <= 9u)
                {
                  uint64_t v6 = -10 * (BYTE1(v24) - 48) - (BYTE2(v24) - 48);
                  uint64_t v19 = v2 - 3;
                  if (!v19) {
                    goto LABEL_61;
                  }
                  uint64_t v20 = (unsigned __int8 *)v26 + 3;
                  while (1)
                  {
                    unsigned int v21 = *v20 - 48;
                    if (v21 > 9) {
                      break;
                    }
                    uint64_t v22 = 10 * v6;
                    if ((unsigned __int128)(v6 * (__int128)10) >> 64 != (10 * v6) >> 63) {
                      break;
                    }
                    uint64_t v6 = v22 - v21;
                    if (__OFSUB__(v22, v21)) {
                      break;
                    }
                    char v8 = 0;
                    ++v20;
                    if (!--v19) {
                      goto LABEL_62;
                    }
                  }
                }
              }
LABEL_49:
              uint64_t v6 = 0;
              char v8 = 1;
              goto LABEL_62;
            }
            __break(1u);
LABEL_78:
            __break(1u);
            return result;
          }
          if (!v2 || (v24 - 48) > 9u) {
            goto LABEL_49;
          }
          uint64_t v6 = (v24 - 48);
          if (v2 != 1)
          {
            if ((BYTE1(v24) - 48) > 9u) {
              goto LABEL_49;
            }
            uint64_t v6 = 10 * (v24 - 48) + (BYTE1(v24) - 48);
            uint64_t v15 = v2 - 2;
            if (v15)
            {
              uint64_t v16 = (unsigned __int8 *)v26 + 2;
              while (1)
              {
                unsigned int v17 = *v16 - 48;
                if (v17 > 9) {
                  goto LABEL_49;
                }
                uint64_t v18 = 10 * v6;
                if ((unsigned __int128)(v6 * (__int128)10) >> 64 != (10 * v6) >> 63) {
                  goto LABEL_49;
                }
                uint64_t v6 = v18 + v17;
                if (__OFADD__(v18, v17)) {
                  goto LABEL_49;
                }
                char v8 = 0;
                ++v16;
                if (!--v15) {
                  goto LABEL_62;
                }
              }
            }
          }
        }
LABEL_61:
        char v8 = 0;
        goto LABEL_62;
      }
      goto LABEL_74;
    }
  }
  else
  {
    sub_252781C54((uint64_t)v26, &qword_26B22C010);
  }
  double v9 = COERCE_DOUBLE(Claim.double.getter());
  if ((v10 & 1) == 0)
  {
    if ((~*(void *)&v9 & 0x7FF0000000000000) != 0)
    {
      if (v9 > -9.22337204e18)
      {
        if (v9 < 9.22337204e18) {
          return (uint64_t)v9;
        }
        goto LABEL_73;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_2527845D0(v0, (uint64_t)v26);
  if (v27)
  {
    if (swift_dynamicCast()) {
      return 0;
    }
  }
  else
  {
    sub_252781C54((uint64_t)v26, &qword_26B22C010);
  }
  sub_2527845D0(v0, (uint64_t)v26);
  if (!v27)
  {
    sub_252781C54((uint64_t)v26, &qword_26B22C010);
    return 0;
  }
  if (swift_dynamicCast()) {
    return v24;
  }
  else {
    return 0;
  }
}

uint64_t sub_2527D948C(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_252831308();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388]();
  char v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1;
  unint64_t v21 = a2;
  uint64_t v18 = 45;
  unint64_t v19 = 0xE100000000000000;
  uint64_t v16 = 43;
  unint64_t v17 = 0xE100000000000000;
  sub_25279033C();
  uint64_t v20 = sub_2528316D8();
  unint64_t v21 = v8;
  uint64_t v18 = 95;
  unint64_t v19 = 0xE100000000000000;
  uint64_t v16 = 47;
  unint64_t v17 = 0xE100000000000000;
  uint64_t v9 = sub_2528316D8();
  unint64_t v11 = v10;
  swift_bridgeObjectRelease();
  uint64_t v20 = v9;
  unint64_t v21 = v11;
  uint64_t v18 = v9;
  unint64_t v19 = v11;
  swift_bridgeObjectRetain();
  sub_2528312E8();
  uint64_t v12 = sub_2528316C8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t result = swift_bridgeObjectRelease();
  double v14 = ceil((double)v12 * 0.25) * 4.0 - (double)v12;
  if (v14 <= 0.0) {
    goto LABEL_6;
  }
  uint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  if ((~*(void *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v14 < 9.22337204e18)
  {
    uint64_t v16 = 61;
    unint64_t v17 = 0xE100000000000000;
    sub_252831718();
    sub_2528313A8();
    swift_bridgeObjectRelease();
LABEL_6:
    uint64_t v15 = sub_252830C08();
    swift_bridgeObjectRelease();
    return v15;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t DecodeError.localizedDescription.getter()
{
  if (*(unsigned char *)(v0 + 24) && *(unsigned char *)(v0 + 24) != 1)
  {
    sub_2528317C8();
    sub_2528313A8();
    sub_2528313A8();
    sub_2528313A8();
    sub_252831A38();
    sub_2528313A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2528317C8();
    sub_2528313A8();
  }
  sub_2528313A8();
  return 0;
}

uint64_t EncodeError.localizedDescription.getter()
{
  return 0;
}

void *sub_2527D9954(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFF8);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_2527D99BC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_252831428();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x2533BD1D0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_2527D9A38(uint64_t a1, uint64_t a2)
{
  return sub_2527D9BC4(a1, a2, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2527D9C58);
}

uint64_t sub_2527D9A64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22C010);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2527D9ACC(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(a1);
  }
  return a1;
}

unint64_t sub_2527D9B00()
{
  unint64_t result = qword_269C1DFF0;
  if (!qword_269C1DFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269C1DFF0);
  }
  return result;
}

unint64_t sub_2527D9B54(uint64_t a1)
{
  uint64_t v2 = sub_252831758();

  return sub_2527D9D3C(a1, v2);
}

uint64_t sub_2527D9B98(uint64_t a1, uint64_t a2)
{
  return sub_2527D9BC4(a1, a2, MEMORY[0x263F8D110], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2527D9C58);
}

uint64_t sub_2527D9BC4(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  sub_252831AF8();
  a3(v10, a1, a2);
  uint64_t v7 = sub_252831B18();

  return a4(a1, a2, v7);
}

unint64_t sub_2527D9C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_252831A58() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_252831A58() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_2527D9D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_2527DB1B4(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x2533BD540](v9, a1);
      sub_2527CF22C((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unsigned char *sub_2527D9E04@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  BOOL v7 = v6 && (result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

unsigned __int8 *sub_2527D9E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_252831468();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    BOOL v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_2527DA1D4();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    BOOL v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    BOOL v7 = (unsigned __int8 *)sub_252831838();
  }
LABEL_7:
  BOOL v11 = sub_2527D9F58(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_2527D9F58(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_2527DA1D4()
{
  unint64_t v0 = sub_252831478();
  uint64_t v4 = sub_2527DA254(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_2527DA254(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_2527DA3AC(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_2527D9954(v9, 0);
      unint64_t v12 = sub_2527DA4AC((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_252831838();
LABEL_4:
        JUMPOUT(0x2533BD130);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x2533BD130](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x2533BD130]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_2527DA3AC(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_2527D99BC(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_2527D99BC(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

unint64_t sub_2527DA4AC(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    void v9[2] = a6;
    void v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    unint64_t result = v12;
    if (v17 == v15) {
      unint64_t result = sub_2527D99BC(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_252831418();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        unint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          unint64_t result = sub_252831838();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    unint64_t result = sub_2527D99BC(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_2528313E8();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_2527DA6C0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

void *sub_2527DA720@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X2>, unsigned char *a2@<X8>)
{
  unint64_t result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

unsigned char *sub_2527DA764@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  BOOL v7 = v6 && (result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void *sub_2527DA7D4@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t destroy for JWToken()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for JWToken(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for JWToken(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for JWToken(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JWToken(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JWToken(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JWToken()
{
  return &type metadata for JWToken;
}

uint64_t dispatch thunk of JWT.header.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of JWT.body.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of JWT.signature.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of JWT.string.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of JWT.expiresAt.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of JWT.issuer.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of JWT.subject.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of JWT.audience.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of JWT.issuedAt.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of JWT.notBefore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of JWT.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of JWT.expired.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t destroy for Claim(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    return __swift_destroy_boxed_opaque_existential_0(a1);
  }
  return a1;
}

uint64_t initializeWithCopy for Claim(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    *(void *)(a1 + 24) = v3;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
  }
  return a1;
}

uint64_t assignWithCopy for Claim(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    return a1;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for Claim(uint64_t a1, _OWORD *a2)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(a1);
  }
  long long v4 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for Claim(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Claim(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Claim()
{
  return &type metadata for Claim;
}

uint64_t sub_2527DAF90(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for DecodeError(uint64_t a1)
{
  return sub_2527DAFBC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_2527DAFBC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for DecodeError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_2527DAF90(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for DecodeError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_2527DAF90(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_2527DAFBC(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for DecodeError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_2527DAFBC(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DecodeError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DecodeError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2527DB184(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_2527DB18C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DecodeError()
{
  return &type metadata for DecodeError;
}

ValueMetadata *type metadata accessor for EncodeError()
{
  return &type metadata for EncodeError;
}

uint64_t sub_2527DB1B4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2527DB210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v4[6] = swift_task_alloc();
  uint64_t v5 = sub_2528307F8();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  v4[11] = swift_task_alloc();
  uint64_t v6 = sub_252830BD8();
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2527DB3B0, 0, 0);
}

uint64_t sub_2527DB3B0()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[11];
  sub_25279D788(v0[4], v0[5]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_252781C54(v0[11], &qword_26B22BD58);
    if (qword_269C1CEC0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D2B0);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Request URL for Address Verification API not found", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }

LABEL_16:
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[8] + 56))(v0[2], 1, 1, v0[7]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v31 = (uint64_t (*)(void))v0[1];
    return v31();
  }
  uint64_t v8 = (void *)v0[3];
  (*(void (**)(void, void, void))(v0[13] + 32))(v0[15], v0[11], v0[12]);
  id v9 = objc_msgSend(v8, sel_data);
  if (!v9)
  {
    if (qword_269C1CEC0 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_252831158();
    __swift_project_value_buffer(v24, (uint64_t)qword_269C2D2B0);
    uint64_t v25 = sub_252831138();
    os_log_type_t v26 = sub_252831618();
    if (os_log_type_enabled(v25, v26))
    {
      unint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v27 = 0;
      _os_log_impl(&dword_25277D000, v25, v26, "Unable to encode service address to data", v27, 2u);
      MEMORY[0x2533BE070](v27, -1, -1);
    }
    uint64_t v28 = v0[15];
    uint64_t v29 = v0[12];
    uint64_t v30 = v0[13];

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
    goto LABEL_16;
  }
  unsigned __int8 v10 = v9;
  uint64_t v12 = v0[14];
  uint64_t v11 = v0[15];
  uint64_t v13 = v0[12];
  uint64_t v14 = v0[13];
  uint64_t v15 = v0[9];
  uint64_t v16 = sub_252830C68();
  unint64_t v18 = v17;

  v0[16] = v16;
  v0[17] = v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, v11, v13);
  sub_252830798();
  sub_252830778();
  sub_252782DC8(v16, v18);
  sub_2528307D8();
  sub_252804CA4(v15);
  uint64_t v32 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C1D930 + dword_269C1D930);
  char v19 = (void *)swift_task_alloc();
  v0[18] = v19;
  *char v19 = v0;
  v19[1] = sub_2527DB7B4;
  uint64_t v20 = v0[9];
  uint64_t v21 = v0[6];
  uint64_t v22 = v0[4];
  return v32(v21, v20, v22);
}

uint64_t sub_2527DB7B4()
{
  uint64_t v3 = (void *)*v1;
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v4 = v2[9];
  uint64_t v5 = v2[8];
  uint64_t v6 = v2[7];
  if (v0)
  {

    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v3[21] = v7;
    v7(v4, v6);
    uint64_t v8 = sub_2527DBC30;
  }
  else
  {
    id v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v3[19] = v9;
    v3[20] = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v9(v4, v6);
    uint64_t v8 = sub_2527DB958;
  }
  return MEMORY[0x270FA2498](v8, 0, 0);
}

uint64_t sub_2527DB958()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v24 = (void (*)(uint64_t, uint64_t))v0[19];
    sub_252781C54(v3, &qword_26B22BD40);
    if (qword_269C1CEC0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D2B0);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable to address verification request", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }
    uint64_t v9 = v0[16];
    unint64_t v8 = v0[17];
    uint64_t v10 = v0[15];
    uint64_t v11 = v0[12];
    uint64_t v12 = v0[13];
    uint64_t v13 = v0[10];
    uint64_t v14 = v0[7];

    sub_252782E20(v9, v8);
    v24(v13, v14);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    uint64_t v15 = 1;
  }
  else
  {
    uint64_t v16 = (void (*)(uint64_t, uint64_t))v0[19];
    uint64_t v18 = v0[16];
    unint64_t v17 = v0[17];
    uint64_t v25 = v0[15];
    uint64_t v19 = v0[13];
    uint64_t v23 = v0[12];
    uint64_t v20 = v0[10];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[2], v3, v1);
    sub_2528307E8();
    sub_252782E20(v18, v17);
    v16(v20, v1);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v25, v23);
    uint64_t v15 = 0;
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[8] + 56))(v0[2], v15, 1, v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_2527DBC30()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[8] + 56))(v0[6], 1, 1, v0[7]);
  uint64_t v14 = (void (*)(uint64_t, uint64_t))v0[21];
  sub_252781C54(v0[6], &qword_26B22BD40);
  if (qword_269C1CEC0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_252831158();
  __swift_project_value_buffer(v1, (uint64_t)qword_269C2D2B0);
  uint64_t v2 = sub_252831138();
  os_log_type_t v3 = sub_252831618();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_25277D000, v2, v3, "Unable to address verification request", v4, 2u);
    MEMORY[0x2533BE070](v4, -1, -1);
  }
  uint64_t v6 = v0[16];
  unint64_t v5 = v0[17];
  uint64_t v7 = v0[15];
  uint64_t v8 = v0[12];
  uint64_t v9 = v0[13];
  uint64_t v10 = v0[10];
  uint64_t v11 = v0[7];

  sub_252782E20(v6, v5);
  v14(v10, v11);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[8] + 56))(v0[2], 1, 1, v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_2527DBE44()
{
  v26[43] = *(id *)MEMORY[0x263EF8340];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DFE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_252832B00;
  *(void *)(inited + 32) = 0x73736572646461;
  *(void *)(inited + 40) = 0xE700000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFF0);
  uint64_t v2 = swift_initStackObject();
  *(_OWORD *)(v2 + 16) = xmmword_252834DD0;
  strcpy((char *)(v2 + 32), "addressLine1");
  *(unsigned char *)(v2 + 45) = 0;
  *(_WORD *)(v2 + 46) = -5120;
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_addressLine1 + 8);
  *(void *)(v2 + 48) = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_addressLine1);
  *(void *)(v2 + 56) = v3;
  strcpy((char *)(v2 + 64), "addressLine2");
  *(unsigned char *)(v2 + 77) = 0;
  *(_WORD *)(v2 + 78) = -5120;
  if (*(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_addressLine2 + 8))
  {
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_addressLine2);
    unint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_addressLine2 + 8);
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  *(void *)(v2 + 80) = v4;
  *(void *)(v2 + 88) = v5;
  strcpy((char *)(v2 + 96), "addressLine3");
  *(unsigned char *)(v2 + 109) = 0;
  *(_WORD *)(v2 + 110) = -5120;
  if (*(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_addressLine3 + 8))
  {
    uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_addressLine3);
    unint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_addressLine3 + 8);
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)(v2 + 112) = v6;
  *(void *)(v2 + 120) = v7;
  *(void *)(v2 + 128) = 2037672291;
  *(void *)(v2 + 136) = 0xE400000000000000;
  uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_city + 8);
  *(void *)(v2 + 144) = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_city);
  *(void *)(v2 + 152) = v8;
  *(void *)(v2 + 160) = 0x6574617473;
  *(void *)(v2 + 168) = 0xE500000000000000;
  uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_state + 8);
  *(void *)(v2 + 176) = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_state);
  *(void *)(v2 + 184) = v9;
  *(void *)(v2 + 192) = 0x6F436C6174736F70;
  *(void *)(v2 + 200) = 0xEA00000000006564;
  uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_postalCode + 8);
  *(void *)(v2 + 208) = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_postalCode);
  *(void *)(v2 + 216) = v10;
  *(void *)(v2 + 224) = 0x7972746E756F63;
  *(void *)(v2 + 232) = 0xE700000000000000;
  uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_country);
  uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC19HomeUtilityServices21UtilityServiceAddress_country + 8);
  *(void *)(v2 + 240) = v11;
  *(void *)(v2 + 248) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_252786E88(v2);
  *(void *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DFE8);
  *(void *)(inited + 48) = v13;
  sub_252786D50(inited);
  uint64_t v14 = self;
  uint64_t v15 = (void *)sub_252831218();
  swift_bridgeObjectRelease();
  v26[0] = 0;
  id v16 = objc_msgSend(v14, sel_dataWithJSONObject_options_error_, v15, 0, v26);

  id v17 = v26[0];
  if (v16)
  {
    uint64_t v18 = sub_252830C68();
  }
  else
  {
    uint64_t v19 = v17;
    uint64_t v20 = (void *)sub_252830B18();

    swift_willThrow();
    if (qword_269C1CEC0 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_252831158();
    __swift_project_value_buffer(v21, (uint64_t)qword_269C2D2B0);
    uint64_t v22 = sub_252831138();
    os_log_type_t v23 = sub_252831618();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_25277D000, v22, v23, "Unable to encode service Address to Request Payload!!!", v24, 2u);
      MEMORY[0x2533BE070](v24, -1, -1);
    }

    return 0;
  }
  return v18;
}

uint64_t sub_2527DC2E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[18] = a8;
  v8[19] = v13;
  unsigned char v8[16] = a6;
  v8[17] = a7;
  v8[14] = a4;
  v8[15] = a5;
  v8[12] = a2;
  v8[13] = a3;
  v8[11] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v8[20] = swift_task_alloc();
  uint64_t v9 = sub_2528307F8();
  v8[21] = v9;
  v8[22] = *(void *)(v9 - 8);
  v8[23] = swift_task_alloc();
  v8[24] = swift_task_alloc();
  v8[25] = swift_task_alloc();
  v8[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  v8[27] = swift_task_alloc();
  uint64_t v10 = sub_252830BD8();
  v8[28] = v10;
  v8[29] = *(void *)(v10 - 8);
  v8[30] = swift_task_alloc();
  v8[31] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2527DC4D8, 0, 0);
}

uint64_t sub_2527DC4D8()
{
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 216);
  sub_25279D788(*(void *)(v0 + 144), *(void *)(v0 + 152));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_252781C54(*(void *)(v0 + 216), &qword_26B22BD58);
    if (qword_269C1CEF8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D358);
    unint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      unint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Request URL for auth token refresh API not found", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }
    uint64_t v8 = *(void *)(v0 + 168);
    uint64_t v9 = *(void *)(v0 + 176);
    uint64_t v10 = *(void *)(v0 + 88);

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v10, 1, 1, v8);
LABEL_16:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v49 = *(uint64_t (**)(void))(v0 + 8);
    return v49();
  }
  uint64_t v11 = *(void *)(v0 + 240);
  uint64_t v12 = *(void *)(v0 + 248);
  uint64_t v13 = *(void *)(v0 + 224);
  uint64_t v14 = *(void *)(v0 + 232);
  uint64_t v16 = *(void *)(v0 + 192);
  uint64_t v15 = *(void *)(v0 + 200);
  uint64_t v18 = *(void *)(v0 + 176);
  uint64_t v17 = *(void *)(v0 + 184);
  uint64_t v19 = *(void *)(v0 + 168);
  uint64_t v52 = *(void *)(v0 + 136);
  uint64_t v51 = *(void *)(v0 + 128);
  uint64_t v50 = *(void *)(v0 + 208);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 32))(v12, *(void *)(v0 + 216), v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v11, v12, v13);
  sub_252830798();
  sub_252804CA4(v16);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  *(void *)(v0 + 256) = v20;
  *(void *)(v0 + 264) = (v18 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v20(v17, v19);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  v21(v15, v16, v19);
  sub_2528307B8();
  v20(v16, v19);
  v21(v50, v15, v19);
  sub_2528307B8();
  v20(v15, v19);
  sub_252830778();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_252832B00;
  *(void *)(inited + 32) = 0xD000000000000012;
  *(void *)(inited + 40) = 0x800000025283B750;
  *(void *)(inited + 48) = v51;
  *(void *)(inited + 56) = v52;
  swift_bridgeObjectRetain();
  sub_252786E88(inited);
  os_log_type_t v23 = self;
  uint64_t v24 = (void *)sub_252831218();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 80) = 0;
  id v25 = objc_msgSend(v23, sel_dataWithJSONObject_options_error_, v24, 0, v0 + 80);

  id v26 = *(id *)(v0 + 80);
  if (!v25)
  {
    uint64_t v36 = v26;
    uint64_t v37 = (void *)sub_252830B18();

    swift_willThrow();
    if (qword_269C1CEF8 != -1) {
      swift_once();
    }
    uint64_t v53 = v20;
    uint64_t v38 = sub_252831158();
    __swift_project_value_buffer(v38, (uint64_t)qword_269C2D358);
    unint64_t v39 = sub_252831138();
    os_log_type_t v40 = sub_252831618();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl(&dword_25277D000, v39, v40, "Unable to encode Token request body", v41, 2u);
      MEMORY[0x2533BE070](v41, -1, -1);
    }
    uint64_t v42 = *(void *)(v0 + 248);
    uint64_t v43 = *(void *)(v0 + 224);
    uint64_t v44 = *(void *)(v0 + 232);
    uint64_t v45 = *(void *)(v0 + 208);
    uint64_t v46 = *(void *)(v0 + 168);
    uint64_t v47 = *(void *)(v0 + 176);
    uint64_t v48 = *(void *)(v0 + 88);

    v53(v45, v46);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(v48, 1, 1, v46);
    goto LABEL_16;
  }
  uint64_t v27 = sub_252830C68();
  unint64_t v29 = v28;

  *(void *)(v0 + 272) = v27;
  *(void *)(v0 + 280) = v29;
  sub_252782DC8(v27, v29);
  sub_2528307D8();
  uint64_t v30 = dword_269C1D900;
  uint64_t v31 = (void *)swift_task_alloc();
  *(void *)(v0 + 288) = v31;
  *uint64_t v31 = v0;
  v31[1] = sub_2527DCB64;
  uint64_t v32 = *(void *)(v0 + 208);
  uint64_t v33 = *(void *)(v0 + 160);
  uint64_t v34 = *(void *)(v0 + 144);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C1D900 + v30))(v33, v32, v34);
}

uint64_t sub_2527DCB64()
{
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v1 = sub_2527DCFD0;
  }
  else
  {
    uint64_t v1 = sub_2527DCCA8;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_2527DCCA8()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[20];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_252781C54(v3, &qword_26B22BD40);
    if (qword_269C1CEF8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D358);
    unint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      unint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable to sign authorization token refresh request", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }
    uint64_t v9 = v0[34];
    unint64_t v8 = v0[35];
    uint64_t v10 = (void (*)(uint64_t, uint64_t))v0[32];
    uint64_t v11 = v0[29];
    uint64_t v23 = v0[28];
    uint64_t v24 = v0[31];
    uint64_t v12 = v0[26];
    uint64_t v14 = v0[21];
    uint64_t v13 = v0[22];
    uint64_t v26 = v0[11];

    sub_252782E20(v9, v8);
    v10(v12, v14);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v24, v23);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v26, 1, 1, v14);
  }
  else
  {
    uint64_t v16 = v0[34];
    unint64_t v15 = v0[35];
    uint64_t v17 = (void (*)(uint64_t, uint64_t))v0[32];
    uint64_t v27 = v0[31];
    uint64_t v18 = v0[29];
    uint64_t v25 = v0[28];
    uint64_t v19 = v0[26];
    uint64_t v20 = v0[11];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v20, v3, v1);
    sub_2528307E8();
    sub_252782E20(v16, v15);
    v17(v19, v1);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v27, v25);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v20, 0, 1, v1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_2527DCFD0()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[22] + 56))(v0[20], 1, 1, v0[21]);
  sub_252781C54(v0[20], &qword_26B22BD40);
  if (qword_269C1CEF8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_252831158();
  __swift_project_value_buffer(v1, (uint64_t)qword_269C2D358);
  uint64_t v2 = sub_252831138();
  os_log_type_t v3 = sub_252831618();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_25277D000, v2, v3, "Unable to sign authorization token refresh request", v4, 2u);
    MEMORY[0x2533BE070](v4, -1, -1);
  }
  uint64_t v6 = v0[34];
  unint64_t v5 = v0[35];
  unint64_t v7 = (void (*)(uint64_t, uint64_t))v0[32];
  uint64_t v8 = v0[29];
  uint64_t v14 = v0[28];
  uint64_t v15 = v0[31];
  uint64_t v9 = v0[26];
  uint64_t v11 = v0[21];
  uint64_t v10 = v0[22];
  uint64_t v16 = v0[11];

  sub_252782E20(v6, v5);
  v7(v9, v11);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v15, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v16, 1, 1, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t UtilityLookupError.hash(into:)()
{
  return sub_252831B08();
}

BOOL static UtilityLookupError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t UtilityLookupError.hashValue.getter()
{
  return sub_252831B18();
}

uint64_t sub_2527DD2A0(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E038);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527E4F24();
  sub_252831B38();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF30);
  sub_2527E52B8(&qword_269C1E040, (void (*)(void))sub_2527E5328);
  sub_252831A18();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2527DD420(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E030);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527E5264();
  sub_252831B38();
  v8[15] = 0;
  sub_2528319E8();
  if (!v1)
  {
    v8[14] = 1;
    sub_2528319E8();
    v8[13] = 2;
    sub_2528319E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2527DD5AC()
{
  unint64_t result = qword_269C1E008;
  if (!qword_269C1E008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E008);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for UtilityLookupError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2527DD6CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UtilityLookupError()
{
  return &type metadata for UtilityLookupError;
}

uint64_t sub_2527DD704()
{
  return 0x656974696C697475;
}

uint64_t sub_2527DD720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656974696C697475 && a2 == 0xE900000000000073)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_252831A58();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2527DD7C4(uint64_t a1)
{
  unint64_t v2 = sub_2527E4F24();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527DD800(uint64_t a1)
{
  unint64_t v2 = sub_2527E4F24();

  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_2527DD83C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_2527E4D7C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_2527DD868(void *a1)
{
  return sub_2527DD2A0(a1, *v1);
}

uint64_t sub_2527DD884(uint64_t a1)
{
  unint64_t v2 = sub_2527E5264();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527DD8C0(uint64_t a1)
{
  unint64_t v2 = sub_2527E5264();

  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_2527DD8FC@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_2527E4FCC(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_2527DD940(void *a1)
{
  return sub_2527DD420(a1);
}

uint64_t sub_2527DD958(uint64_t a1, double a2, double a3)
{
  *(void *)(v3 + 248) = a1;
  *(double *)(v3 + 232) = a2;
  *(double *)(v3 + 240) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BE58);
  *(void *)(v3 + 256) = swift_task_alloc();
  *(void *)(v3 + 264) = swift_task_alloc();
  *(void *)(v3 + 272) = swift_task_alloc();
  *(void *)(v3 + 280) = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UtilityServicesConfigurationsModel();
  *(void *)(v3 + 288) = v4;
  *(void *)(v3 + 296) = *(void *)(v4 - 8);
  *(void *)(v3 + 304) = swift_task_alloc();
  *(void *)(v3 + 312) = swift_task_alloc();
  *(void *)(v3 + 320) = swift_task_alloc();
  *(void *)(v3 + 328) = swift_task_alloc();
  uint64_t v5 = sub_252830BD8();
  *(void *)(v3 + 336) = v5;
  *(void *)(v3 + 344) = *(void *)(v5 - 8);
  *(void *)(v3 + 352) = swift_task_alloc();
  *(void *)(v3 + 360) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  *(void *)(v3 + 368) = swift_task_alloc();
  *(void *)(v3 + 376) = swift_task_alloc();
  *(void *)(v3 + 384) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD70);
  *(void *)(v3 + 392) = swift_task_alloc();
  uint64_t v6 = sub_252830DB8();
  *(void *)(v3 + 400) = v6;
  *(void *)(v3 + 408) = *(void *)(v6 - 8);
  *(void *)(v3 + 416) = swift_task_alloc();
  *(void *)(v3 + 424) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2527DDC1C, 0, 0);
}

uint64_t sub_2527DDC1C()
{
  uint64_t v182 = v0;
  v181[2] = *MEMORY[0x263EF8340];
  double v1 = *(double *)(v0 + 232);
  double v2 = *(double *)(v0 + 240);
  type metadata accessor for Geohash();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = 0;
  *(void *)(inited + 24) = 0;
  sub_25282066C(12, v1, v2);
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_252823D0C(2);
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  uint64_t v11 = MEMORY[0x2533BD110](v4, v6, v8, v10);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 432) = v11;
  *(void *)(v0 + 440) = v13;
  if (qword_26B22BF60 != -1) {
    swift_once();
  }
  v181[0] = qword_26B22C020;
  v181[1] = *(void *)algn_26B22C028;
  swift_bridgeObjectRetain();
  sub_2528313A8();
  *(void *)(v0 + 16) = v11;
  *(void *)(v0 + 24) = v13;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(unsigned char *)(v0 + 496) = 1;
  uint64_t v14 = self;
  swift_bridgeObjectRetain();
  id v15 = objc_msgSend(v14, sel_defaultManager);
  uint64_t v16 = (void *)sub_252831298();
  swift_bridgeObjectRelease();
  unsigned int v17 = objc_msgSend(v15, sel_fileExistsAtPath_isDirectory_, v16, v0 + 496);

  if (!v17)
  {
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_252831158();
    __swift_project_value_buffer(v39, (uint64_t)qword_269C2D250);
    os_log_type_t v40 = sub_252831138();
    os_log_type_t v41 = sub_252831618();
    if (!os_log_type_enabled(v40, v41)) {
      goto LABEL_70;
    }
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v42 = 0;
    uint64_t v43 = "Unable to find GeoHash 2 folder on disk. Proceed to fetch new file.";
    goto LABEL_69;
  }
  sub_2527BA238();
  uint64_t v18 = (__CFString *)sub_252831298();
  uint64_t v19 = (__CFString *)sub_252831298();
  CFPropertyListRef v20 = CFPreferencesCopyAppValue(v18, v19);

  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(v0 + 400);
  uint64_t v22 = *(void *)(v0 + 408);
  uint64_t v23 = *(void *)(v0 + 392);
  if (!v20)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v22 + 56))(*(void *)(v0 + 392), 1, 1, *(void *)(v0 + 400));
    goto LABEL_61;
  }
  *(void *)(v0 + 200) = v20;
  int v24 = swift_dynamicCast();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(v23, v24 ^ 1u, 1, v21);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v23, 1, v21) == 1)
  {
LABEL_61:
    sub_252781C54(*(void *)(v0 + 392), &qword_26B22BD70);
    goto LABEL_62;
  }
  uint64_t v25 = *(void *)(v0 + 416);
  uint64_t v27 = *(void *)(v0 + 400);
  uint64_t v26 = *(void *)(v0 + 408);
  (*(void (**)(void, void, uint64_t))(v26 + 32))(*(void *)(v0 + 424), *(void *)(v0 + 392), v27);
  sub_252830D78();
  char v28 = sub_252830D28();
  unint64_t v29 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
  v29(v25, v27);
  if ((v28 & 1) == 0)
  {
    v29(*(void *)(v0 + 424), *(void *)(v0 + 400));
LABEL_62:
    sub_2527BA1B8();
    uint64_t v74 = (__CFString *)sub_252831298();
    uint64_t v75 = (__CFString *)sub_252831298();
    CFPropertyListRef v76 = CFPreferencesCopyAppValue(v74, v75);

    swift_bridgeObjectRelease();
    if (v76)
    {
      *(void *)(v0 + 184) = v76;
      if (swift_dynamicCast())
      {
        uint64_t v77 = *(void *)(v0 + 96);
        uint64_t v78 = *(void *)(v0 + 104);
        char v79 = 1;
LABEL_71:
        *(unsigned char *)(v0 + 497) = v79;
        *(void *)(v0 + 448) = v77;
        *(void *)(v0 + 456) = v78;
        long long v81 = (void *)swift_task_alloc();
        *(void *)(v0 + 464) = v81;
        *long long v81 = v0;
        v81[1] = sub_2527DF75C;
        uint64_t v82 = *(void *)(v0 + 248);
        return sub_2527BAEF8(v82);
      }
    }
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v80 = sub_252831158();
    __swift_project_value_buffer(v80, (uint64_t)qword_269C2D250);
    os_log_type_t v40 = sub_252831138();
    os_log_type_t v41 = sub_252831618();
    if (!os_log_type_enabled(v40, v41))
    {
LABEL_70:

      uint64_t v77 = 0;
      uint64_t v78 = 0;
      char v79 = 0;
      goto LABEL_71;
    }
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v42 = 0;
    uint64_t v43 = "Geohash folder exist, but no ETag for geohash stored in disk.";
LABEL_69:
    _os_log_impl(&dword_25277D000, v40, v41, v43, v42, 2u);
    MEMORY[0x2533BE070](v42, -1, -1);
    goto LABEL_70;
  }
  swift_bridgeObjectRelease();
  if (qword_269C1CE90 != -1) {
    goto LABEL_152;
  }
  while (1)
  {
    uint64_t v174 = sub_252831158();
    __swift_project_value_buffer(v174, (uint64_t)qword_269C2D250);
    uint64_t v30 = sub_252831138();
    os_log_type_t v31 = sub_252831628();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl(&dword_25277D000, v30, v31, "Geohash folder exist, and valid. Use local geohash tiles. Skipping fetching", v32, 2u);
      MEMORY[0x2533BE070](v32, -1, -1);
    }
    uint64_t v33 = *(void *)(v0 + 424);
    uint64_t v34 = *(void *)(v0 + 400);

    v29(v33, v34);
    uint64_t v35 = sub_2527D2A5C();
    if (!v35) {
      break;
    }
    uint64_t v177 = *(void *)(v35 + 16);
    if (!v177)
    {
      uint64_t v175 = MEMORY[0x263F8EE78];
LABEL_85:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_retain_n();
      v99 = sub_252831138();
      os_log_type_t v100 = sub_252831628();
      if (os_log_type_enabled(v99, v100))
      {
        uint64_t v102 = *(void *)(v0 + 232);
        uint64_t v101 = *(void *)(v0 + 240);
        uint64_t v103 = swift_slowAlloc();
        uint64_t v178 = swift_slowAlloc();
        v181[0] = v178;
        *(_DWORD *)uint64_t v103 = 136315906;
        *(void *)(v0 + 208) = sub_25278F894(0xD000000000000013, 0x800000025283CB30, v181);
        sub_252831698();
        *(_WORD *)(v103 + 12) = 2048;
        *(void *)(v0 + 216) = v102;
        sub_252831698();
        *(_WORD *)(v103 + 22) = 2048;
        *(void *)(v0 + 224) = v101;
        sub_252831698();
        *(_WORD *)(v103 + 32) = 2080;
        uint64_t v104 = swift_retain();
        uint64_t v105 = MEMORY[0x2533BD2E0](v104, MEMORY[0x263F8D310]);
        unint64_t v107 = v106;
        swift_release();
        *(void *)(v0 + 192) = sub_25278F894(v105, v107, v181);
        sub_252831698();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl(&dword_25277D000, v99, v100, "%s for coordinate %f %f returning %s", (uint8_t *)v103, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x2533BE070](v178, -1, -1);
        MEMORY[0x2533BE070](v103, -1, -1);
      }
      else
      {
        swift_release_n();
      }

      goto LABEL_89;
    }
    uint64_t v36 = 0;
    uint64_t v171 = *(void *)(v0 + 328);
    uint64_t v176 = v35 + 32;
    uint64_t v175 = MEMORY[0x263F8EE78];
    uint64_t v37 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 296) + 48);
    uint64_t v38 = v174;
    while (1)
    {
      uint64_t v45 = *(void *)(v0 + 280);
      uint64_t v44 = *(void *)(v0 + 288);
      uint64_t v46 = (uint64_t *)(v176 + 16 * v36);
      uint64_t v47 = *v46;
      uint64_t v48 = v46[1];
      swift_bridgeObjectRetain();
      sub_2527BC6F4(v45);
      id v49 = *v37;
      if ((*v37)(v45, 1, v44) != 1) {
        break;
      }
      sub_252781C54(*(void *)(v0 + 280), &qword_26B22BE58);
      if (qword_26B22BF08 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v38, (uint64_t)qword_26B22C0A0);
      uint64_t v50 = sub_252831138();
      os_log_type_t v51 = sub_252831618();
      if (os_log_type_enabled(v50, v51))
      {
        uint64_t v52 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v52 = 0;
        _os_log_impl(&dword_25277D000, v50, v51, "Unable to retrieve configuration to check if utility is disabled or not.", v52, 2u);
        MEMORY[0x2533BE070](v52, -1, -1);
      }

LABEL_18:
      swift_bridgeObjectRelease();
LABEL_19:
      if (++v36 == v177) {
        goto LABEL_85;
      }
    }
    uint64_t v53 = *(void *)(v0 + 288);
    uint64_t v54 = *(void *)(v0 + 272);
    sub_2527A05A4(*(void *)(v0 + 280), *(void *)(v0 + 328));
    sub_2527BC6F4(v54);
    if (v49(v54, 1, v53) == 1)
    {
      sub_252781C54(*(void *)(v0 + 272), &qword_26B22BE58);
      if (qword_26B22BF08 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v38, (uint64_t)qword_26B22C0A0);
      long long v55 = sub_252831138();
      os_log_type_t v56 = sub_252831618();
      if (os_log_type_enabled(v55, v56))
      {
        long long v57 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)long long v57 = 0;
        _os_log_impl(&dword_25277D000, v55, v56, "Unable to retrieve configuration to check if utility is disabled or not.", v57, 2u);
        MEMORY[0x2533BE070](v57, -1, -1);
      }

LABEL_31:
      if (qword_26B22BF08 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v38, (uint64_t)qword_26B22C0A0);
      long long v58 = sub_252831138();
      os_log_type_t v59 = sub_252831628();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v60 = 0;
        _os_log_impl(&dword_25277D000, v58, v59, "All Utilities are disabled!!!", v60, 2u);
        MEMORY[0x2533BE070](v60, -1, -1);
      }
      uint64_t v61 = *(void *)(v0 + 328);

      sub_2527E4CA8(v61, (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
      goto LABEL_18;
    }
    sub_2527A05A4(*(void *)(v0 + 272), *(void *)(v0 + 320));
    char v62 = sub_2527BA4B4();
    uint64_t v63 = *(char **)(v0 + 320);
    if ((v62 & 1) == 0)
    {
      char v64 = *v63;
      sub_2527E4CA8((uint64_t)v63, (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
      if (v64) {
        goto LABEL_39;
      }
      goto LABEL_31;
    }
    sub_2527E4CA8((uint64_t)v63, (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
LABEL_39:
    uint64_t v65 = *(void **)(v171 + 16);
    if (!v65) {
      goto LABEL_54;
    }
    uint64_t v66 = v65[2];
    if (!v66) {
      goto LABEL_54;
    }
    if (v65[4] == v47 && v65[5] == v48 || (sub_252831A58() & 1) != 0)
    {
LABEL_44:
      sub_2527E4CA8(*(void *)(v0 + 328), (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
      swift_bridgeObjectRelease();
LABEL_59:
      uint64_t v38 = v174;
      goto LABEL_19;
    }
    if (v66 == 1)
    {
LABEL_54:
      sub_2527E4CA8(*(void *)(v0 + 328), (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
      uint64_t v70 = v175;
      v181[0] = v175;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25278FE94(0, *(void *)(v175 + 16) + 1, 1);
        uint64_t v70 = v181[0];
      }
      unint64_t v72 = *(void *)(v70 + 16);
      unint64_t v71 = *(void *)(v70 + 24);
      if (v72 >= v71 >> 1)
      {
        sub_25278FE94(v71 > 1, v72 + 1, 1);
        uint64_t v70 = v181[0];
      }
      *(void *)(v70 + 16) = v72 + 1;
      uint64_t v175 = v70;
      uint64_t v73 = v70 + 16 * v72;
      *(void *)(v73 + 32) = v47;
      *(void *)(v73 + 40) = v48;
      goto LABEL_59;
    }
    unint64_t v29 = (void (*)(uint64_t, uint64_t))(v65 + 7);
    uint64_t v67 = 1;
    while (1)
    {
      uint64_t v68 = v67 + 1;
      if (__OFADD__(v67, 1)) {
        break;
      }
      BOOL v69 = *((void *)v29 - 1) == v47 && *(void *)v29 == v48;
      if (v69 || (sub_252831A58() & 1) != 0) {
        goto LABEL_44;
      }
      ++v67;
      unint64_t v29 = (void (*)(uint64_t, uint64_t))((char *)v29 + 16);
      if (v68 == v66) {
        goto LABEL_54;
      }
    }
    __break(1u);
LABEL_152:
    swift_once();
  }
  uint64_t v84 = *(void *)(v0 + 368);
  uint64_t v86 = *(void *)(v0 + 336);
  uint64_t v85 = *(void *)(v0 + 344);
  sub_252823FAC(v84, *(double *)(v0 + 232), *(double *)(v0 + 240));
  int v87 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 48))(v84, 1, v86);
  uint64_t v88 = *(void *)(v0 + 368);
  if (v87 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_252781C54(v88, &qword_26B22BD58);
    if (qword_269C1CE90 != -1) {
      goto LABEL_154;
    }
    goto LABEL_77;
  }
  CLLocationDegrees v110 = *(double *)(v0 + 232);
  CLLocationDegrees v109 = *(double *)(v0 + 240);
  (*(void (**)(void, void, void))(*(void *)(v0 + 344) + 32))(*(void *)(v0 + 352), *(void *)(v0 + 368), *(void *)(v0 + 336));
  uint64_t v111 = sub_252783124(v110, v109);
  sub_2527D2D70((uint64_t)v111);
  if (!v111)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v174, (uint64_t)qword_269C2D250);
    v146 = sub_252831138();
    os_log_type_t v147 = sub_252831618();
    if (os_log_type_enabled(v146, v147))
    {
      v148 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v148 = 0;
      _os_log_impl(&dword_25277D000, v146, v147, "No Utility Territory found for provided coordinates", v148, 2u);
      MEMORY[0x2533BE070](v148, -1, -1);
    }

    v149 = sub_252831138();
    os_log_type_t v150 = sub_252831628();
    if (os_log_type_enabled(v149, v150))
    {
      uint64_t v152 = *(void *)(v0 + 232);
      uint64_t v151 = *(void *)(v0 + 240);
      uint64_t v153 = swift_slowAlloc();
      *(_DWORD *)uint64_t v153 = 134218240;
      *(void *)(v0 + 136) = v152;
      sub_252831698();
      *(_WORD *)(v153 + 12) = 2048;
      *(void *)(v0 + 144) = v151;
      sub_252831698();
      _os_log_impl(&dword_25277D000, v149, v150, "Utility Territory not found for coordinate %f %f", (uint8_t *)v153, 0x16u);
      MEMORY[0x2533BE070](v153, -1, -1);
    }
    uint64_t v155 = *(void *)(v0 + 344);
    uint64_t v154 = *(void *)(v0 + 352);
    uint64_t v156 = *(void *)(v0 + 336);

    (*(void (**)(uint64_t, uint64_t))(v155 + 8))(v154, v156);
    uint64_t v175 = MEMORY[0x263F8EE78];
LABEL_89:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v108 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v108(v175);
  }
  uint64_t v179 = v111[2];
  if (!v179)
  {
    uint64_t v175 = MEMORY[0x263F8EE78];
    uint64_t v114 = v174;
LABEL_146:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v114, (uint64_t)qword_269C2D250);
    swift_retain_n();
    v157 = sub_252831138();
    os_log_type_t v158 = sub_252831628();
    BOOL v159 = os_log_type_enabled(v157, v158);
    uint64_t v161 = *(void *)(v0 + 344);
    uint64_t v160 = *(void *)(v0 + 352);
    uint64_t v162 = *(void *)(v0 + 336);
    if (v159)
    {
      uint64_t v180 = *(void *)(v0 + 336);
      uint64_t v164 = *(void *)(v0 + 232);
      uint64_t v163 = *(void *)(v0 + 240);
      uint64_t v165 = swift_slowAlloc();
      uint64_t v173 = swift_slowAlloc();
      v181[0] = v173;
      *(_DWORD *)uint64_t v165 = 136315906;
      *(void *)(v0 + 152) = sub_25278F894(0xD000000000000013, 0x800000025283CB30, v181);
      sub_252831698();
      *(_WORD *)(v165 + 12) = 2048;
      *(void *)(v0 + 160) = v164;
      sub_252831698();
      *(_WORD *)(v165 + 22) = 2048;
      *(void *)(v0 + 168) = v163;
      sub_252831698();
      *(_WORD *)(v165 + 32) = 2080;
      uint64_t v166 = swift_retain();
      uint64_t v167 = MEMORY[0x2533BD2E0](v166, MEMORY[0x263F8D310]);
      unint64_t v169 = v168;
      swift_release();
      *(void *)(v0 + 176) = sub_25278F894(v167, v169, v181);
      sub_252831698();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_25277D000, v157, v158, "%s for coordinate %f %f returning %s", (uint8_t *)v165, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x2533BE070](v173, -1, -1);
      MEMORY[0x2533BE070](v165, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v160, v180);
    }
    else
    {

      swift_release_n();
      (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v160, v162);
    }
    goto LABEL_89;
  }
  uint64_t v112 = 0;
  uint64_t v170 = *(void *)(v0 + 312);
  v172 = v111 + 4;
  uint64_t v175 = MEMORY[0x263F8EE78];
  uint64_t v113 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 296) + 48);
  uint64_t v114 = v174;
  while (2)
  {
    uint64_t v115 = *(void *)(v0 + 288);
    uint64_t v116 = *(void *)(v0 + 264);
    v117 = &v172[2 * v112];
    uint64_t v119 = *v117;
    uint64_t v118 = v117[1];
    swift_bridgeObjectRetain();
    sub_2527BC6F4(v116);
    v120 = *v113;
    if ((*v113)(v116, 1, v115) == 1)
    {
      sub_252781C54(*(void *)(v0 + 264), &qword_26B22BE58);
      if (qword_26B22BF08 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v114, (uint64_t)qword_26B22C0A0);
      v121 = sub_252831138();
      os_log_type_t v122 = sub_252831618();
      if (os_log_type_enabled(v121, v122))
      {
        v123 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v123 = 0;
        _os_log_impl(&dword_25277D000, v121, v122, "Unable to retrieve configuration to check if utility is disabled or not.", v123, 2u);
        MEMORY[0x2533BE070](v123, -1, -1);
      }

      goto LABEL_96;
    }
    uint64_t v124 = *(void *)(v0 + 288);
    uint64_t v125 = *(void *)(v0 + 256);
    sub_2527A05A4(*(void *)(v0 + 264), *(void *)(v0 + 312));
    sub_2527BC6F4(v125);
    if (v120(v125, 1, v124) == 1)
    {
      sub_252781C54(*(void *)(v0 + 256), &qword_26B22BE58);
      if (qword_26B22BF08 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v114, (uint64_t)qword_26B22C0A0);
      v126 = sub_252831138();
      os_log_type_t v127 = sub_252831618();
      if (os_log_type_enabled(v126, v127))
      {
        v128 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v128 = 0;
        _os_log_impl(&dword_25277D000, v126, v127, "Unable to retrieve configuration to check if utility is disabled or not.", v128, 2u);
        MEMORY[0x2533BE070](v128, -1, -1);
      }

      goto LABEL_109;
    }
    sub_2527A05A4(*(void *)(v0 + 256), *(void *)(v0 + 304));
    char v133 = sub_2527BA4B4();
    v134 = *(char **)(v0 + 304);
    if ((v133 & 1) == 0)
    {
      char v135 = *v134;
      sub_2527E4CA8((uint64_t)v134, (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
      if (v135) {
        goto LABEL_117;
      }
LABEL_109:
      if (qword_26B22BF08 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v114, (uint64_t)qword_26B22C0A0);
      v129 = sub_252831138();
      os_log_type_t v130 = sub_252831628();
      if (os_log_type_enabled(v129, v130))
      {
        v131 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v131 = 0;
        _os_log_impl(&dword_25277D000, v129, v130, "All Utilities are disabled!!!", v131, 2u);
        MEMORY[0x2533BE070](v131, -1, -1);
      }
      uint64_t v132 = *(void *)(v0 + 312);

      sub_2527E4CA8(v132, (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
LABEL_96:
      swift_bridgeObjectRelease();
      goto LABEL_97;
    }
    sub_2527E4CA8((uint64_t)v134, (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
LABEL_117:
    v136 = *(void **)(v170 + 16);
    if (!v136) {
      goto LABEL_132;
    }
    uint64_t v137 = v136[2];
    if (!v137) {
      goto LABEL_132;
    }
    if (v136[4] == v119 && v136[5] == v118 || (sub_252831A58() & 1) != 0)
    {
LABEL_122:
      sub_2527E4CA8(*(void *)(v0 + 312), (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
      swift_bridgeObjectRelease();
      goto LABEL_137;
    }
    if (v137 == 1)
    {
LABEL_132:
      sub_2527E4CA8(*(void *)(v0 + 312), (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
      uint64_t v142 = v175;
      v181[0] = v175;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25278FE94(0, *(void *)(v175 + 16) + 1, 1);
        uint64_t v142 = v181[0];
      }
      unint64_t v144 = *(void *)(v142 + 16);
      unint64_t v143 = *(void *)(v142 + 24);
      if (v144 >= v143 >> 1)
      {
        sub_25278FE94(v143 > 1, v144 + 1, 1);
        uint64_t v142 = v181[0];
      }
      *(void *)(v142 + 16) = v144 + 1;
      uint64_t v175 = v142;
      uint64_t v145 = v142 + 16 * v144;
      *(void *)(v145 + 32) = v119;
      *(void *)(v145 + 40) = v118;
LABEL_137:
      uint64_t v114 = v174;
LABEL_97:
      if (++v112 == v179) {
        goto LABEL_146;
      }
      continue;
    }
    break;
  }
  v138 = v136 + 7;
  uint64_t v139 = 1;
  while (1)
  {
    uint64_t v140 = v139 + 1;
    if (__OFADD__(v139, 1)) {
      break;
    }
    BOOL v141 = *(v138 - 1) == v119 && *v138 == v118;
    if (v141 || (sub_252831A58() & 1) != 0) {
      goto LABEL_122;
    }
    ++v139;
    v138 += 2;
    if (v140 == v137) {
      goto LABEL_132;
    }
  }
  __break(1u);
LABEL_154:
  swift_once();
LABEL_77:
  __swift_project_value_buffer(v174, (uint64_t)qword_269C2D250);
  uint64_t v89 = sub_252831138();
  os_log_type_t v90 = sub_252831608();
  if (os_log_type_enabled(v89, v90))
  {
    uint64_t v92 = *(void *)(v0 + 232);
    uint64_t v91 = *(void *)(v0 + 240);
    uint64_t v93 = swift_slowAlloc();
    *(_DWORD *)uint64_t v93 = 134218240;
    *(void *)(v0 + 120) = v92;
    sub_252831698();
    *(_WORD *)(v93 + 12) = 2048;
    *(void *)(v0 + 128) = v91;
    sub_252831698();
    _os_log_impl(&dword_25277D000, v89, v90, "Unable to locate matching geohash tile for coordinate %f:%f)", (uint8_t *)v93, 0x16u);
    MEMORY[0x2533BE070](v93, -1, -1);
  }

  unint64_t v94 = sub_252831138();
  os_log_type_t v95 = sub_252831618();
  if (os_log_type_enabled(v94, v95))
  {
    uint64_t v96 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v96 = 0;
    _os_log_impl(&dword_25277D000, v94, v95, "Returning no utility information. This could be intentional as the region is not supported", v96, 2u);
    MEMORY[0x2533BE070](v96, -1, -1);
  }

  sub_2527E4D08();
  swift_allocError();
  *long long v97 = 2;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v98 = *(uint64_t (**)(void))(v0 + 8);
  return v98();
}

uint64_t sub_2527DF75C()
{
  double v1 = (void *)*v0;
  double v2 = (void *)*v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v1[59] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_2527DF930;
  uint64_t v4 = v1[57];
  uint64_t v5 = v1[56];
  uint64_t v6 = v1[55];
  uint64_t v7 = v1[54];
  uint64_t v8 = v1[48];
  uint64_t v9 = v1[31];
  return sub_2527CFD74(v8, v7, v6, v9, v5, v4);
}

uint64_t sub_2527DF930(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 480) = a1;
  *(void *)(v3 + 488) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_2527E1154;
  }
  else
  {
    uint64_t v4 = sub_2527DFAA4;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2527DFAA4()
{
  unint64_t v143 = v0;
  v142[1] = *MEMORY[0x263EF8340];
  uint64_t v1 = (void *)v0[60];
  if (!v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_252831158();
    __swift_project_value_buffer(v11, (uint64_t)qword_269C2D250);
    uint64_t v12 = sub_252831138();
    os_log_type_t v13 = sub_252831618();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_25277D000, v12, v13, "Unknown error occurred while fetching geohash tile from server.", v14, 2u);
      MEMORY[0x2533BE070](v14, -1, -1);
    }
    uint64_t v15 = v0[48];

    type metadata accessor for NetworkError();
    sub_2527B3838();
    swift_allocError();
    *uint64_t v16 = 2;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    uint64_t v17 = v15;
LABEL_95:
    sub_252781C54(v17, &qword_26B22BD58);
LABEL_96:
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v107 = (uint64_t (*)(void))v141[1];
    return v107();
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend((id)v2, sel_statusCode);
  if (v3 == (id)304)
  {
    uint64_t v18 = v0[57];
    if (*((unsigned char *)v0 + 497) == 1)
    {
      swift_bridgeObjectRelease();
      if (v18)
      {
        if (qword_269C1CE90 != -1) {
          goto LABEL_116;
        }
        goto LABEL_14;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v102 = sub_252831158();
    __swift_project_value_buffer(v102, (uint64_t)qword_269C2D250);
    uint64_t v103 = sub_252831138();
    os_log_type_t v104 = sub_252831618();
    if (os_log_type_enabled(v103, v104))
    {
      uint64_t v105 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v105 = 0;
      _os_log_impl(&dword_25277D000, v103, v104, "Error while trying to fetch new Geohash tile from server.", v105, 2u);
      MEMORY[0x2533BE070](v105, -1, -1);
    }
    uint64_t v53 = v0[48];

    sub_2527E4D08();
    swift_allocError();
    *unint64_t v106 = 1;
    goto LABEL_94;
  }
  if (v3 != (id)200)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_252831158();
    __swift_project_value_buffer(v25, (uint64_t)qword_269C2D250);
    uint64_t v26 = sub_252831138();
    os_log_type_t v27 = sub_252831618();
    if (os_log_type_enabled(v26, v27))
    {
      char v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v28 = 0;
      _os_log_impl(&dword_25277D000, v26, v27, "Unknown error occurred while fetching geohash tile from server.", v28, 2u);
      uint64_t v0 = v141;
      MEMORY[0x2533BE070](v28, -1, -1);
    }

    uint64_t v2 = (uint64_t)(id)v2;
    unint64_t v29 = sub_252831138();
    os_log_type_t v30 = sub_252831618();
    if (os_log_type_enabled(v29, v30))
    {
      os_log_type_t v31 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v31 = 134217984;
      v0[14] = objc_msgSend((id)v2, sel_statusCode);
      sub_252831698();

      _os_log_impl(&dword_25277D000, v29, v30, "Status Code returned %ld", v31, 0xCu);
      uint64_t v0 = v141;
      MEMORY[0x2533BE070](v31, -1, -1);
    }
    else
    {
    }
    uint64_t v53 = v0[48];
    type metadata accessor for NetworkError();
    sub_2527B3838();
    swift_allocError();
    *uint64_t v54 = objc_msgSend((id)v2, sel_statusCode);
    swift_storeEnumTagMultiPayload();
    goto LABEL_94;
  }
  uint64_t v5 = v0[47];
  uint64_t v4 = v0[48];
  uint64_t v6 = v0[42];
  uint64_t v7 = v0[43];
  swift_bridgeObjectRelease();
  sub_252781BB4(v4, v5);
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  uint64_t v9 = v0[55];
  if (v8 == 1)
  {
    uint64_t v10 = v0[47];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_252781C54(v10, &qword_26B22BD58);
LABEL_83:
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v97 = sub_252831158();
    __swift_project_value_buffer(v97, (uint64_t)qword_269C2D250);
    uint64_t v98 = sub_252831138();
    os_log_type_t v99 = sub_252831618();
    if (os_log_type_enabled(v98, v99))
    {
      os_log_type_t v100 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v100 = 0;
      _os_log_impl(&dword_25277D000, v98, v99, "Error while creating geoHash tiles.", v100, 2u);
      MEMORY[0x2533BE070](v100, -1, -1);
    }
    uint64_t v53 = v0[48];

    sub_2527E4D08();
    swift_allocError();
    unsigned char *v101 = 0;
LABEL_94:
    swift_willThrow();

    uint64_t v17 = v53;
    goto LABEL_95;
  }
  uint64_t v32 = v0[54];
  unint64_t v33 = v0[45];
  (*(void (**)(unint64_t, void, void))(v0[43] + 32))(v33, v0[47], v0[42]);
  sub_2527D1094(v33, v32, v9);
  if ((v34 & 1) == 0)
  {
    uint64_t v94 = v0[45];
    uint64_t v95 = v0[42];
    uint64_t v96 = v0[43];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v94, v95);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_83;
  }
  uint64_t v35 = v0[45];
  uint64_t v36 = v0[42];
  uint64_t v37 = v0[43];
  sub_2527D1E68(v2, v0[54], v0[55]);

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
LABEL_25:
  sub_252781C54(v0[48], &qword_26B22BD58);
  uint64_t v38 = v0[46];
  uint64_t v39 = v0[42];
  uint64_t v40 = v0[43];
  sub_252823FAC(v38, *((double *)v0 + 29), *((double *)v0 + 30));
  int v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39);
  uint64_t v42 = v0[46];
  if (v41 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_252781C54(v42, &qword_26B22BD58);
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_252831158();
    __swift_project_value_buffer(v43, (uint64_t)qword_269C2D250);
    uint64_t v44 = sub_252831138();
    os_log_type_t v45 = sub_252831608();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = v141[30];
      uint64_t v47 = v141[29];
      uint64_t v48 = swift_slowAlloc();
      *(_DWORD *)uint64_t v48 = 134218240;
      v141[15] = v47;
      sub_252831698();
      *(_WORD *)(v48 + 12) = 2048;
      v141[16] = v46;
      sub_252831698();
      _os_log_impl(&dword_25277D000, v44, v45, "Unable to locate matching geohash tile for coordinate %f:%f)", (uint8_t *)v48, 0x16u);
      MEMORY[0x2533BE070](v48, -1, -1);
    }

    id v49 = sub_252831138();
    os_log_type_t v50 = sub_252831618();
    if (os_log_type_enabled(v49, v50))
    {
      os_log_type_t v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v51 = 0;
      _os_log_impl(&dword_25277D000, v49, v50, "Returning no utility information. This could be intentional as the region is not supported", v51, 2u);
      MEMORY[0x2533BE070](v51, -1, -1);
    }

    sub_2527E4D08();
    swift_allocError();
    *uint64_t v52 = 2;
    goto LABEL_96;
  }
  CLLocationDegrees v56 = *((double *)v0 + 29);
  CLLocationDegrees v55 = *((double *)v0 + 30);
  (*(void (**)(void, void, void))(v0[43] + 32))(v0[44], v0[46], v0[42]);
  long long v57 = sub_252783124(v56, v55);
  sub_2527D2D70((uint64_t)v57);
  if (!v57)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v109 = sub_252831158();
    __swift_project_value_buffer(v109, (uint64_t)qword_269C2D250);
    CLLocationDegrees v110 = sub_252831138();
    os_log_type_t v111 = sub_252831618();
    if (os_log_type_enabled(v110, v111))
    {
      uint64_t v112 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v112 = 0;
      _os_log_impl(&dword_25277D000, v110, v111, "No Utility Territory found for provided coordinates", v112, 2u);
      MEMORY[0x2533BE070](v112, -1, -1);
    }

    uint64_t v113 = sub_252831138();
    os_log_type_t v114 = sub_252831628();
    if (os_log_type_enabled(v113, v114))
    {
      uint64_t v116 = v0[29];
      uint64_t v115 = v0[30];
      uint64_t v117 = swift_slowAlloc();
      *(_DWORD *)uint64_t v117 = 134218240;
      v0[17] = v116;
      sub_252831698();
      *(_WORD *)(v117 + 12) = 2048;
      v0[18] = v115;
      sub_252831698();
      _os_log_impl(&dword_25277D000, v113, v114, "Utility Territory not found for coordinate %f %f", (uint8_t *)v117, 0x16u);
      MEMORY[0x2533BE070](v117, -1, -1);
    }
    uint64_t v119 = v0[43];
    uint64_t v118 = v0[44];
    uint64_t v120 = v0[42];

    (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v118, v120);
    uint64_t v139 = MEMORY[0x263F8EE78];
    goto LABEL_112;
  }
  uint64_t v58 = v57[2];
  if (v58)
  {
    uint64_t v2 = 0;
    uint64_t v137 = v0[39];
    uint64_t v140 = v57 + 4;
    uint64_t v59 = MEMORY[0x263F8EE78];
    uint64_t v60 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0[37] + 48);
    while (1)
    {
      uint64_t v61 = v0[36];
      uint64_t v62 = v0[33];
      uint64_t v63 = &v140[2 * v2];
      uint64_t v65 = *v63;
      uint64_t v64 = v63[1];
      swift_bridgeObjectRetain();
      sub_2527BC6F4(v62);
      uint64_t v66 = *v60;
      if ((*v60)(v62, 1, v61) == 1) {
        break;
      }
      uint64_t v71 = v0[36];
      uint64_t v72 = v0[32];
      sub_2527A05A4(v0[33], v0[39]);
      sub_2527BC6F4(v72);
      if (v66(v72, 1, v71) == 1)
      {
        sub_252781C54(v0[32], &qword_26B22BE58);
        if (qword_26B22BF08 != -1) {
          swift_once();
        }
        uint64_t v73 = sub_252831158();
        __swift_project_value_buffer(v73, (uint64_t)qword_26B22C0A0);
        uint64_t v74 = sub_252831138();
        os_log_type_t v75 = sub_252831618();
        if (os_log_type_enabled(v74, v75))
        {
          CFPropertyListRef v76 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)CFPropertyListRef v76 = 0;
          _os_log_impl(&dword_25277D000, v74, v75, "Unable to retrieve configuration to check if utility is disabled or not.", v76, 2u);
          MEMORY[0x2533BE070](v76, -1, -1);
        }

LABEL_62:
        if (qword_26B22BF08 != -1) {
          swift_once();
        }
        uint64_t v82 = sub_252831158();
        __swift_project_value_buffer(v82, (uint64_t)qword_26B22C0A0);
        long long v83 = sub_252831138();
        os_log_type_t v84 = sub_252831628();
        if (os_log_type_enabled(v83, v84))
        {
          uint64_t v85 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v85 = 0;
          _os_log_impl(&dword_25277D000, v83, v84, "All Utilities are disabled!!!", v85, 2u);
          MEMORY[0x2533BE070](v85, -1, -1);
        }
        uint64_t v86 = v0[39];

        sub_2527E4CA8(v86, (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
LABEL_40:
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
      sub_2527A05A4(v0[32], v0[38]);
      char v77 = sub_2527BA4B4();
      uint64_t v78 = (char *)v0[38];
      if (v77)
      {
        sub_2527E4CA8((uint64_t)v78, (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
      }
      else
      {
        char v79 = *v78;
        sub_2527E4CA8((uint64_t)v78, (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
        if ((v79 & 1) == 0) {
          goto LABEL_62;
        }
      }
      uint64_t v80 = *(void **)(v137 + 16);
      if (!v80) {
        goto LABEL_77;
      }
      uint64_t v81 = v80[2];
      if (!v81) {
        goto LABEL_77;
      }
      uint64_t v138 = v59;
      if ((v80[4] != v65 || v80[5] != v64) && (sub_252831A58() & 1) == 0)
      {
        uint64_t v0 = v141;
        if (v81 != 1)
        {
          int v87 = v80 + 7;
          uint64_t v88 = 1;
          while (1)
          {
            uint64_t v89 = v88 + 1;
            if (__OFADD__(v88, 1)) {
              break;
            }
            BOOL v90 = *(v87 - 1) == v65 && *v87 == v64;
            if (v90 || (sub_252831A58() & 1) != 0) {
              goto LABEL_61;
            }
            ++v88;
            v87 += 2;
            BOOL v90 = v89 == v81;
            uint64_t v0 = v141;
            uint64_t v59 = v138;
            if (v90) {
              goto LABEL_77;
            }
          }
          __break(1u);
LABEL_116:
          swift_once();
LABEL_14:
          uint64_t v19 = sub_252831158();
          __swift_project_value_buffer(v19, (uint64_t)qword_269C2D250);
          CFPropertyListRef v20 = sub_252831138();
          os_log_type_t v21 = sub_252831628();
          if (os_log_type_enabled(v20, v21))
          {
            uint64_t v22 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v22 = 0;
            _os_log_impl(&dword_25277D000, v20, v21, "Geohash file unmodified. Continue using locally stored geohash tile", v22, 2u);
            MEMORY[0x2533BE070](v22, -1, -1);
          }
          uint64_t v24 = v0[54];
          uint64_t v23 = v0[55];

          sub_2527D1E68(v2, v24, v23);
          swift_bridgeObjectRelease();
          goto LABEL_25;
        }
LABEL_77:
        sub_2527E4CA8(v0[39], (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
        v142[0] = v59;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25278FE94(0, *(void *)(v59 + 16) + 1, 1);
          uint64_t v59 = v142[0];
        }
        unint64_t v92 = *(void *)(v59 + 16);
        unint64_t v91 = *(void *)(v59 + 24);
        if (v92 >= v91 >> 1)
        {
          sub_25278FE94(v91 > 1, v92 + 1, 1);
          uint64_t v59 = v142[0];
        }
        *(void *)(v59 + 16) = v92 + 1;
        uint64_t v93 = v59 + 16 * v92;
        *(void *)(v93 + 32) = v65;
        *(void *)(v93 + 40) = v64;
        goto LABEL_41;
      }
LABEL_61:
      uint64_t v0 = v141;
      sub_2527E4CA8(v141[39], (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
      swift_bridgeObjectRelease();
      uint64_t v59 = v138;
LABEL_41:
      if (++v2 == v58) {
        goto LABEL_107;
      }
    }
    sub_252781C54(v0[33], &qword_26B22BE58);
    if (qword_26B22BF08 != -1) {
      swift_once();
    }
    uint64_t v67 = sub_252831158();
    __swift_project_value_buffer(v67, (uint64_t)qword_26B22C0A0);
    uint64_t v68 = sub_252831138();
    os_log_type_t v69 = sub_252831618();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v70 = 0;
      _os_log_impl(&dword_25277D000, v68, v69, "Unable to retrieve configuration to check if utility is disabled or not.", v70, 2u);
      MEMORY[0x2533BE070](v70, -1, -1);
    }

    goto LABEL_40;
  }
  uint64_t v59 = MEMORY[0x263F8EE78];
LABEL_107:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_269C1CE90 != -1) {
    swift_once();
  }
  uint64_t v121 = sub_252831158();
  __swift_project_value_buffer(v121, (uint64_t)qword_269C2D250);
  swift_retain_n();
  os_log_type_t v122 = sub_252831138();
  os_log_type_t v123 = sub_252831628();
  BOOL v124 = os_log_type_enabled(v122, v123);
  uint64_t v126 = v0[43];
  uint64_t v125 = v0[44];
  uint64_t v127 = v0[42];
  uint64_t v139 = v59;
  if (v124)
  {
    uint64_t v129 = v0[29];
    uint64_t v128 = v0[30];
    uint64_t v130 = swift_slowAlloc();
    uint64_t v131 = swift_slowAlloc();
    v142[0] = v131;
    *(_DWORD *)uint64_t v130 = 136315906;
    v141[19] = sub_25278F894(0xD000000000000013, 0x800000025283CB30, v142);
    sub_252831698();
    *(_WORD *)(v130 + 12) = 2048;
    v141[20] = v129;
    sub_252831698();
    *(_WORD *)(v130 + 22) = 2048;
    v141[21] = v128;
    sub_252831698();
    *(_WORD *)(v130 + 32) = 2080;
    uint64_t v132 = swift_retain();
    uint64_t v133 = MEMORY[0x2533BD2E0](v132, MEMORY[0x263F8D310]);
    unint64_t v135 = v134;
    swift_release();
    v141[22] = sub_25278F894(v133, v135, v142);
    sub_252831698();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_25277D000, v122, v123, "%s for coordinate %f %f returning %s", (uint8_t *)v130, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x2533BE070](v131, -1, -1);
    MEMORY[0x2533BE070](v130, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v125, v127);
  }
  else
  {

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v125, v127);
  }
LABEL_112:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v136 = (uint64_t (*)(uint64_t))v141[1];
  return v136(v139);
}

uint64_t sub_2527E1154()
{
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_2527E12C8()
{
  return 0xD000000000000017;
}

uint64_t sub_2527E13D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[18] = a2;
  v3[19] = a3;
  v3[17] = a1;
  v3[20] = type metadata accessor for NetworkError();
  v3[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BE58);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UtilityServicesConfigurationsModel();
  unsigned char v3[24] = v4;
  v3[25] = *(void *)(v4 - 8);
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v3[28] = swift_task_alloc();
  uint64_t v5 = sub_2528307F8();
  v3[29] = v5;
  v3[30] = *(void *)(v5 - 8);
  v3[31] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD70);
  v3[32] = swift_task_alloc();
  uint64_t v6 = sub_252830DB8();
  v3[33] = v6;
  v3[34] = *(void *)(v6 - 8);
  v3[35] = swift_task_alloc();
  v3[36] = swift_task_alloc();
  uint64_t v7 = sub_252830B28();
  v3[37] = v7;
  v3[38] = *(void *)(v7 - 8);
  v3[39] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  v3[40] = swift_task_alloc();
  v3[41] = swift_task_alloc();
  uint64_t v8 = sub_252830BD8();
  v3[42] = v8;
  v3[43] = *(void *)(v8 - 8);
  v3[44] = swift_task_alloc();
  v3[45] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2527E1744, 0, 0);
}

uint64_t sub_2527E1744()
{
  uint64_t v126 = v0;
  unint64_t v1 = sub_2527E12C8();
  *(void *)(v0 + 368) = v1;
  *(void *)(v0 + 376) = v2;
  if (qword_26B22BF60 != -1) {
    swift_once();
  }
  uint64_t v124 = qword_26B22C020;
  uint64_t v125 = *(void *)algn_26B22C028;
  swift_bridgeObjectRetain();
  sub_2528313A8();
  sub_252818CC0();
  swift_bridgeObjectRetain();
  sub_2528313A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = v125;
  *(void *)(v0 + 384) = v124;
  *(void *)(v0 + 392) = v3;
  id v4 = objc_msgSend(self, sel_defaultManager);
  uint64_t v5 = (void *)sub_252831298();
  unsigned int v6 = objc_msgSend(v4, sel_fileExistsAtPath_, v5);

  if (!v6)
  {
    if (qword_26B22BEF8 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_252831158();
    __swift_project_value_buffer(v15, (uint64_t)qword_26B22C088);
    uint64_t v16 = sub_252831138();
    os_log_type_t v17 = sub_252831618();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_25277D000, v16, v17, "No perviously fetched Config file found on disk. Proceed to fetch new file.", v18, 2u);
      MEMORY[0x2533BE070](v18, -1, -1);
    }

    uint64_t v19 = 0;
    uint64_t v20 = 0;
    char v21 = 1;
    goto LABEL_10;
  }
  uint64_t v121 = v1;
  uint64_t v7 = *(void *)(v0 + 304);
  uint64_t v8 = *(void *)(v0 + 312);
  uint64_t v9 = *(void *)(v0 + 296);
  uint64_t v10 = *(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 344) + 56);
  v10(*(void *)(v0 + 328), 1, 1, *(void *)(v0 + 336));
  unsigned int v11 = *MEMORY[0x263F06E50];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v8, *MEMORY[0x263F06E50], v9);
  swift_bridgeObjectRetain();
  sub_252830BB8();
  uint64_t v12 = sub_252830BF8();
  unint64_t v14 = v13;
  unsigned int v116 = v11;
  uint64_t v118 = v10;
  sub_252830828();
  swift_allocObject();
  sub_252830818();
  sub_2527E4C54();
  sub_252830808();
  uint64_t v25 = *(void *)(v0 + 360);
  uint64_t v27 = *(void *)(v0 + 336);
  uint64_t v26 = *(void *)(v0 + 344);
  sub_252782E20(v12, v14);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
  sub_2527F9A24(v121);
  char v28 = (__CFString *)sub_252831298();
  unint64_t v29 = (__CFString *)sub_252831298();
  CFPropertyListRef v30 = CFPreferencesCopyAppValue(v28, v29);

  swift_bridgeObjectRelease();
  uint64_t v31 = *(void *)(v0 + 264);
  uint64_t v32 = *(void *)(v0 + 272);
  uint64_t v33 = *(void *)(v0 + 256);
  if (!v30)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v32 + 56))(*(void *)(v0 + 256), 1, 1, *(void *)(v0 + 264));
    goto LABEL_22;
  }
  *(void *)(v0 + 128) = v30;
  int v34 = swift_dynamicCast();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v33, v34 ^ 1u, 1, v31);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v33, 1, v31) == 1)
  {
LABEL_22:
    sub_252781C54(*(void *)(v0 + 256), &qword_26B22BD70);
LABEL_23:
    sub_2527F9B94(v121);
    id v49 = (__CFString *)sub_252831298();
    os_log_type_t v50 = (__CFString *)sub_252831298();
    CFPropertyListRef v51 = CFPreferencesCopyAppValue(v49, v50);

    swift_bridgeObjectRelease();
    if (v51 && (*(void *)(v0 + 112) = v51, (swift_dynamicCast() & 1) != 0))
    {
      char v21 = 0;
      uint64_t v19 = *(void *)(v0 + 40);
      uint64_t v20 = *(void *)(v0 + 48);
    }
    else
    {
      if (qword_26B22BEF8 != -1) {
        swift_once();
      }
      uint64_t v52 = sub_252831158();
      __swift_project_value_buffer(v52, (uint64_t)qword_26B22C088);
      uint64_t v53 = sub_252831138();
      os_log_type_t v54 = sub_252831618();
      if (os_log_type_enabled(v53, v54))
      {
        CLLocationDegrees v55 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)CLLocationDegrees v55 = 0;
        _os_log_impl(&dword_25277D000, v53, v54, "Config file exists on disk. But no eTag Value!", v55, 2u);
        MEMORY[0x2533BE070](v55, -1, -1);
      }

      uint64_t v19 = 0;
      uint64_t v20 = 0;
      char v21 = 0;
    }
LABEL_10:
    *(unsigned char *)(v0 + 472) = v21;
    *(void *)(v0 + 400) = v19;
    *(void *)(v0 + 408) = v20;
    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 416) = v22;
    void *v22 = v0;
    v22[1] = sub_2527E2C04;
    uint64_t v23 = *(void *)(v0 + 152);
    return sub_2527BAEF8(v23);
  }
  uint64_t v35 = *(void *)(v0 + 280);
  uint64_t v36 = *(void *)(v0 + 264);
  uint64_t v37 = *(void *)(v0 + 272);
  (*(void (**)(void, void, uint64_t))(v37 + 32))(*(void *)(v0 + 288), *(void *)(v0 + 256), v36);
  sub_252830D78();
  char v38 = sub_252830D28();
  uint64_t v39 = v36;
  uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
  v40(v35, v39);
  if ((v38 & 1) == 0)
  {
    v40(*(void *)(v0 + 288), *(void *)(v0 + 264));
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  if (qword_26B22BEF8 != -1) {
    swift_once();
  }
  os_log_type_t v123 = (objc_super *)sub_252831158();
  __swift_project_value_buffer((uint64_t)v123, (uint64_t)qword_26B22C088);
  int v41 = sub_252831138();
  os_log_type_t v42 = sub_252831628();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v43 = 0;
    _os_log_impl(&dword_25277D000, v41, v42, "Configuration exists locally and is Valid. Skip Fetching.", v43, 2u);
    MEMORY[0x2533BE070](v43, -1, -1);
  }
  uint64_t v44 = *(void *)(v0 + 288);
  uint64_t v45 = *(void *)(v0 + 264);

  v40(v44, v45);
  uint64_t v46 = *(void *)(v0 + 304);
  uint64_t v47 = *(void *)(v0 + 312);
  uint64_t v48 = *(void *)(v0 + 296);
  v118(*(void *)(v0 + 328), 1, 1, *(void *)(v0 + 336));
  (*(void (**)(uint64_t, void, uint64_t))(v46 + 104))(v47, v116, v48);
  sub_252830BB8();
  uint64_t v56 = sub_252830BF8();
  uint64_t v58 = v57;
  swift_allocObject();
  sub_252830818();
  sub_252830808();
  swift_release();
  uint64_t v59 = *(void *)(v0 + 88);
  if (qword_26B22BEF8 != -1) {
    goto LABEL_91;
  }
  while (1)
  {
    __swift_project_value_buffer((uint64_t)v123, (uint64_t)qword_26B22C088);
    uint64_t v60 = sub_252831138();
    os_log_type_t v61 = sub_252831628();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v62 = 0;
      _os_log_impl(&dword_25277D000, v60, v61, "> Utility Config values being returned", v62, 2u);
      MEMORY[0x2533BE070](v62, -1, -1);
    }

    uint64_t v119 = *(void *)(v59 + 16);
    uint64_t v110 = v56;
    unint64_t v111 = (unint64_t)v58;
    if (!v119) {
      break;
    }
    uint64_t v63 = 0;
    uint64_t v112 = *(void *)(v0 + 216);
    uint64_t v117 = v59 + 32;
    uint64_t v64 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 200) + 48);
    uint64_t v114 = MEMORY[0x263F8EE78];
    uint64_t v115 = v64;
    while (1)
    {
      uint64_t v66 = *(void *)(v0 + 184);
      uint64_t v65 = *(void *)(v0 + 192);
      uint64_t v67 = (uint64_t *)(v117 + 48 * v63);
      uint64_t v59 = v67[1];
      uint64_t v68 = v67[2];
      uint64_t v69 = v67[3];
      uint64_t v56 = v67[5];
      uint64_t v120 = v67[4];
      uint64_t v122 = *v67;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2527BC6F4(v66);
      uint64_t v70 = *v64;
      if ((*v64)(v66, 1, v65) != 1) {
        break;
      }
      sub_252781C54(*(void *)(v0 + 184), &qword_26B22BE58);
      if (qword_26B22BF08 != -1) {
        swift_once();
      }
      __swift_project_value_buffer((uint64_t)v123, (uint64_t)qword_26B22C0A0);
      uint64_t v71 = sub_252831138();
      os_log_type_t v72 = sub_252831618();
      uint64_t v64 = v115;
      if (os_log_type_enabled(v71, v72))
      {
        uint64_t v73 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v73 = 0;
        _os_log_impl(&dword_25277D000, v71, v72, "Unable to retrieve configuration to check if utility is disabled or not.", v73, 2u);
        MEMORY[0x2533BE070](v73, -1, -1);
      }

LABEL_38:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_39:
      if (++v63 == v119)
      {
        swift_bridgeObjectRelease();
        uint64_t v56 = v110;
        uint64_t v58 = (void *)v111;
        uint64_t v95 = v114;
        goto LABEL_82;
      }
    }
    uint64_t v74 = *(void *)(v0 + 192);
    uint64_t v75 = *(void *)(v0 + 176);
    sub_2527A05A4(*(void *)(v0 + 184), *(void *)(v0 + 216));
    sub_2527BC6F4(v75);
    if (v70(v75, 1, v74) == 1)
    {
      sub_252781C54(*(void *)(v0 + 176), &qword_26B22BE58);
      if (qword_26B22BF08 != -1) {
        swift_once();
      }
      __swift_project_value_buffer((uint64_t)v123, (uint64_t)qword_26B22C0A0);
      CFPropertyListRef v76 = sub_252831138();
      os_log_type_t v77 = sub_252831618();
      if (os_log_type_enabled(v76, v77))
      {
        uint64_t v78 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v78 = 0;
        _os_log_impl(&dword_25277D000, v76, v77, "Unable to retrieve configuration to check if utility is disabled or not.", v78, 2u);
        MEMORY[0x2533BE070](v78, -1, -1);
      }

LABEL_51:
      if (qword_26B22BF08 != -1) {
        swift_once();
      }
      __swift_project_value_buffer((uint64_t)v123, (uint64_t)qword_26B22C0A0);
      char v79 = sub_252831138();
      os_log_type_t v80 = sub_252831628();
      if (os_log_type_enabled(v79, v80))
      {
        uint64_t v81 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v81 = 0;
        _os_log_impl(&dword_25277D000, v79, v80, "All Utilities are disabled!!!", v81, 2u);
        MEMORY[0x2533BE070](v81, -1, -1);
      }
      uint64_t v82 = *(void *)(v0 + 216);

      sub_2527E4CA8(v82, (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
      goto LABEL_38;
    }
    sub_2527A05A4(*(void *)(v0 + 176), *(void *)(v0 + 208));
    char v83 = sub_2527BA4B4();
    os_log_type_t v84 = *(char **)(v0 + 208);
    if ((v83 & 1) == 0)
    {
      char v85 = *v84;
      sub_2527E4CA8((uint64_t)v84, (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
      if (v85) {
        goto LABEL_59;
      }
      goto LABEL_51;
    }
    sub_2527E4CA8((uint64_t)v84, (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
LABEL_59:
    uint64_t v86 = *(void **)(v112 + 16);
    if (!v86) {
      goto LABEL_74;
    }
    uint64_t v87 = v86[2];
    if (!v87) {
      goto LABEL_74;
    }
    if (v86[4] == v68 && v86[5] == v69 || (sub_252831A58() & 1) != 0)
    {
LABEL_64:
      sub_2527E4CA8(*(void *)(v0 + 216), (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_79:
      uint64_t v64 = v115;
      goto LABEL_39;
    }
    if (v87 == 1)
    {
LABEL_74:
      sub_2527E4CA8(*(void *)(v0 + 216), (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
      uint64_t v91 = v114;
      uint64_t v124 = v114;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25278FEF4(0, *(void *)(v114 + 16) + 1, 1);
        uint64_t v91 = v124;
      }
      unint64_t v93 = *(void *)(v91 + 16);
      unint64_t v92 = *(void *)(v91 + 24);
      if (v93 >= v92 >> 1)
      {
        sub_25278FEF4(v92 > 1, v93 + 1, 1);
        uint64_t v91 = v124;
      }
      *(void *)(v91 + 16) = v93 + 1;
      uint64_t v114 = v91;
      uint64_t v94 = (void *)(v91 + 48 * v93);
      v94[4] = v122;
      v94[5] = v59;
      v94[6] = v68;
      v94[7] = v69;
      v94[8] = v120;
      v94[9] = v56;
      goto LABEL_79;
    }
    uint64_t v58 = v86 + 7;
    uint64_t v88 = 1;
    while (1)
    {
      uint64_t v89 = v88 + 1;
      if (__OFADD__(v88, 1)) {
        break;
      }
      BOOL v90 = *(v58 - 1) == v68 && *v58 == v69;
      if (v90 || (sub_252831A58() & 1) != 0) {
        goto LABEL_64;
      }
      ++v88;
      v58 += 2;
      if (v89 == v87) {
        goto LABEL_74;
      }
    }
    __break(1u);
LABEL_91:
    swift_once();
  }
  swift_bridgeObjectRelease();
  uint64_t v95 = MEMORY[0x263F8EE78];
LABEL_82:
  uint64_t v96 = *(void *)(v95 + 16);
  if (v96)
  {
    uint64_t v124 = MEMORY[0x263F8EE78];
    sub_252831868();
    uint64_t v97 = (objc_class *)type metadata accessor for UtilityRegion();
    uint64_t v98 = (uint64_t *)(v95 + 72);
    do
    {
      uint64_t v100 = *(v98 - 5);
      uint64_t v99 = *(v98 - 4);
      uint64_t v101 = *(v98 - 3);
      uint64_t v102 = *(v98 - 2);
      uint64_t v103 = *(v98 - 1);
      uint64_t v104 = *v98;
      uint64_t v105 = (char *)objc_allocWithZone(v97);
      unint64_t v106 = &v105[OBJC_IVAR____TtC19HomeUtilityServices13UtilityRegion_name];
      *(void *)unint64_t v106 = v100;
      *((void *)v106 + 1) = v99;
      unint64_t v107 = &v105[OBJC_IVAR____TtC19HomeUtilityServices13UtilityRegion_identifier];
      *(void *)unint64_t v107 = v101;
      *((void *)v107 + 1) = v102;
      uint64_t v108 = &v105[OBJC_IVAR____TtC19HomeUtilityServices13UtilityRegion_shortName];
      *(void *)uint64_t v108 = v103;
      *((void *)v108 + 1) = v104;
      *(void *)(v0 + 56) = v105;
      *(void *)(v0 + 64) = v97;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      objc_msgSendSuper2((objc_super *)(v0 + 56), sel_init);
      sub_252831848();
      sub_252831878();
      sub_252831888();
      sub_252831858();
      v98 += 6;
      --v96;
    }
    while (v96);
    uint64_t v113 = v124;
    sub_252782E20(v110, v111);
    swift_release();
  }
  else
  {
    sub_252782E20(v56, (unint64_t)v58);
    swift_release();
    uint64_t v113 = MEMORY[0x263F8EE78];
  }
  (*(void (**)(void, void))(*(void *)(v0 + 344) + 8))(*(void *)(v0 + 352), *(void *)(v0 + 336));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v109 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v109(v113);
}

uint64_t sub_2527E2C04()
{
  unint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v1[53] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_2527E2D98;
  uint64_t v4 = v1[51];
  uint64_t v5 = v1[50];
  uint64_t v6 = v1[28];
  uint64_t v7 = v1[18];
  uint64_t v8 = v1[17];
  return sub_25278087C(v6, v8, v7, v5, v4);
}

uint64_t sub_2527E2D98()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2527E2E94, 0, 0);
}

uint64_t sub_2527E2E94()
{
  uint64_t v1 = v0[29];
  uint64_t v2 = v0[30];
  uint64_t v3 = v0[28];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_252781C54(v3, &qword_26B22BD40);
    if (qword_26B22BEF8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_26B22C088);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable to generate Request URL for All Utility Region Lookup", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }

    sub_2527B3838();
    swift_allocError();
    *uint64_t v8 = 0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[31], v3, v1);
    sub_2528317C8();
    swift_bridgeObjectRelease();
    sub_2528313A8();
    sub_252804F18(0xD00000000000001ALL, 0x800000025283CA90, (uint8_t *)0xD000000000000022, 0x800000025283CAB0);
    swift_bridgeObjectRelease();
    unsigned int v11 = (void *)swift_task_alloc();
    v0[54] = v11;
    *unsigned int v11 = v0;
    v11[1] = sub_2527E3230;
    uint64_t v12 = v0[31];
    return MEMORY[0x270EF1EB0](v12, 0);
  }
}

uint64_t sub_2527E3230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[55] = a1;
  v5[56] = a2;
  v5[57] = a3;
  v5[58] = v3;
  swift_task_dealloc();
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    os_log_type_t v6 = sub_2527E497C;
  }
  else
  {
    os_log_type_t v6 = sub_2527E3370;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_2527E3370()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  unint64_t v2 = 0x26B22B000uLL;
  if (!v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_26B22BEF8 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_252831158();
    __swift_project_value_buffer(v22, (uint64_t)qword_26B22C088);
    uint64_t v23 = sub_252831138();
    os_log_type_t v24 = sub_252831618();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_25277D000, v23, v24, "Unable to process All Utility Region response.", v25, 2u);
      MEMORY[0x2533BE070](v25, -1, -1);
    }
    unint64_t v16 = v0[56];
    uint64_t v26 = (void *)v0[57];
    uint64_t v27 = v0[55];

    sub_2527B3838();
    uint64_t v19 = (void *)swift_allocError();
    unsigned char *v28 = 2;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    goto LABEL_33;
  }
  uint64_t v3 = (void *)v1;
  id v4 = (id)v0[57];
  sub_2528317C8();
  swift_bridgeObjectRelease();
  sub_2528313A8();
  sub_2528313A8();
  sub_252805814(0xD000000000000024, (char *)0x800000025283CAE0, (unint64_t)objc_msgSend(v3, sel_statusCode), qword_2702C40F8);
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_statusCode);
  swift_bridgeObjectRelease();
  if (v5 != (id)304)
  {
    if (v5 != (id)200)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_26B22BEF8 != -1) {
        swift_once();
      }
      char v38 = (void *)v0[57];
      uint64_t v39 = sub_252831158();
      __swift_project_value_buffer(v39, (uint64_t)qword_26B22C088);
      id v40 = v38;
      int v41 = sub_252831138();
      os_log_type_t v42 = sub_252831618();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = (void *)v0[57];
        uint64_t v44 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v44 = 134217984;
        v0[12] = objc_msgSend(v3, sel_statusCode);
        sub_252831698();

        unint64_t v2 = 0x26B22B000;
        _os_log_impl(&dword_25277D000, v41, v42, "Unhandled Response code %ld", v44, 0xCu);
        MEMORY[0x2533BE070](v44, -1, -1);
        uint64_t v45 = v0[57];
      }
      else
      {

        uint64_t v45 = v0[57];
        int v41 = v45;
      }
      uint64_t v55 = v0[55];
      unint64_t v54 = v0[56];

      sub_2527B3838();
      uint64_t v19 = (void *)swift_allocError();
      *uint64_t v56 = objc_msgSend(v3, sel_statusCode);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();

      uint64_t v21 = v55;
      unint64_t v53 = v54;
      goto LABEL_37;
    }
    os_log_type_t v6 = (void *)v0[58];
    sub_2527F5104();
    uint64_t v7 = v6;
    if (!v6)
    {
      uint64_t v9 = v0[55];
      uint64_t v8 = v0[56];
      uint64_t v10 = v0[40];
      swift_bridgeObjectRelease();
      sub_2527F56A4(v9, v8, v10);
      uint64_t v11 = v0[46];
      sub_252781C54(v0[40], &qword_26B22BD58);
      sub_2527F9C94((uint64_t)v3, v11);
      goto LABEL_48;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_26B22BEF8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_252831158();
    __swift_project_value_buffer(v12, (uint64_t)qword_26B22C088);
    uint64_t v13 = sub_252831138();
    os_log_type_t v14 = sub_252831618();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_25277D000, v13, v14, "Error while decoding all Utility region response from server.", v15, 2u);
      MEMORY[0x2533BE070](v15, -1, -1);
    }
    unint64_t v16 = v0[56];
    os_log_type_t v17 = (void *)v0[57];
    uint64_t v18 = v0[55];

    sub_2527B3838();
    uint64_t v19 = (void *)swift_allocError();
    *uint64_t v20 = 1;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    uint64_t v21 = v18;
LABEL_34:
    unint64_t v53 = v16;
LABEL_37:
    sub_252782E20(v21, v53);
    goto LABEL_38;
  }
  if ((v0[59] & 1) != 0 || !v0[51])
  {
    swift_bridgeObjectRelease();
    if (qword_26B22BEF8 != -1) {
      swift_once();
    }
    uint64_t v46 = sub_252831158();
    __swift_project_value_buffer(v46, (uint64_t)qword_26B22C088);
    uint64_t v47 = sub_252831138();
    os_log_type_t v48 = sub_252831608();
    if (os_log_type_enabled(v47, v48))
    {
      id v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v49 = 0;
      _os_log_impl(&dword_25277D000, v47, v48, "Server return 304, but inconsistency in stored Config detected!", v49, 2u);
      MEMORY[0x2533BE070](v49, -1, -1);
    }
    unint64_t v16 = v0[56];
    os_log_type_t v50 = (void *)v0[57];
    uint64_t v27 = v0[55];
    uint64_t v51 = v0[46];

    sub_2527FA040(v51);
    swift_bridgeObjectRelease();
    sub_2527E4C00();
    uint64_t v19 = (void *)swift_allocError();
    *uint64_t v52 = 1;
    swift_willThrow();

LABEL_33:
    uint64_t v21 = v27;
    goto LABEL_34;
  }
  if (qword_26B22BEF8 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_252831158();
  __swift_project_value_buffer(v29, (uint64_t)qword_26B22C088);
  CFPropertyListRef v30 = sub_252831138();
  os_log_type_t v31 = sub_252831608();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    _os_log_impl(&dword_25277D000, v30, v31, "Utility Territory on disk unmodified. Use existing file on disk.", v32, 2u);
    MEMORY[0x2533BE070](v32, -1, -1);
  }
  uint64_t v33 = (void *)v0[58];
  uint64_t v34 = v0[46];

  sub_2527F9C94((uint64_t)v3, v34);
  if (v33)
  {
    uint64_t v19 = v33;
    unint64_t v35 = v0[56];
    uint64_t v36 = (void *)v0[57];
    uint64_t v37 = v0[55];

    sub_252782E20(v37, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_38:
    if (*(void *)(v2 + 3832) != -1) {
      swift_once();
    }
    uint64_t v57 = sub_252831158();
    __swift_project_value_buffer(v57, (uint64_t)qword_26B22C088);
    uint64_t v58 = sub_252831138();
    os_log_type_t v59 = sub_252831618();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v60 = 0;
      _os_log_impl(&dword_25277D000, v58, v59, "Error while trying to fetch All Utility Region data.", v60, 2u);
      MEMORY[0x2533BE070](v60, -1, -1);
    }

    v0[15] = v19;
    id v61 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4C0);
    int v62 = swift_dynamicCast();
    uint64_t v64 = v0[30];
    uint64_t v63 = v0[31];
    uint64_t v65 = v0[29];
    if (v62)
    {
      sub_2527E4CA8(v0[21], (uint64_t (*)(void))type metadata accessor for NetworkError);
      swift_willThrow();
    }
    else
    {
      sub_252826B80(v19);
      swift_willThrow();
    }
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v65);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v66 = (uint64_t (*)(void))v0[1];
    return v66();
  }
LABEL_48:
  unint64_t v68 = v0[56];
  uint64_t v69 = (void *)v0[57];
  uint64_t v70 = v0[55];
  uint64_t v71 = v0[43];
  (*(void (**)(void, void))(v0[30] + 8))(v0[31], v0[29]);

  sub_252782E20(v70, v68);
  swift_bridgeObjectRelease();
  uint64_t v72 = *MEMORY[0x263F06E50];
  uint64_t v74 = v0[38];
  uint64_t v73 = v0[39];
  uint64_t v75 = v0[37];
  (*(void (**)(void, uint64_t, uint64_t, void))(v71 + 56))(v0[41], 1, 1, v0[42]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 104))(v73, v72, v75);
  sub_252830BB8();
  uint64_t v76 = sub_252830BF8();
  uint64_t v78 = v77;
  uint64_t v139 = v0;
  sub_252830828();
  swift_allocObject();
  sub_252830818();
  sub_2527E4C54();
  sub_252830808();
  swift_release();
  char v79 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[11];
  if (qword_26B22BEF8 != -1) {
    goto LABEL_107;
  }
  while (1)
  {
    uint64_t v136 = sub_252831158();
    __swift_project_value_buffer(v136, (uint64_t)qword_26B22C088);
    os_log_type_t v80 = sub_252831138();
    os_log_type_t v81 = sub_252831628();
    if (os_log_type_enabled(v80, v81))
    {
      uint64_t v82 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v82 = 0;
      _os_log_impl(&dword_25277D000, v80, v81, "> Utility Config values being returned", v82, 2u);
      MEMORY[0x2533BE070](v82, -1, -1);
    }

    uint64_t v135 = *((void *)v79 + 2);
    uint64_t v128 = v76;
    unint64_t v129 = (unint64_t)v78;
    if (!v135) {
      break;
    }
    uint64_t v83 = 0;
    uint64_t v130 = v0[27];
    unint64_t v134 = (char *)v79 + 32;
    os_log_type_t v84 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0[25] + 48);
    uint64_t v131 = (void *)MEMORY[0x263F8EE78];
    uint64_t v132 = v84;
    while (1)
    {
      uint64_t v86 = v0[23];
      uint64_t v85 = v0[24];
      uint64_t v87 = &v134[48 * v83];
      uint64_t v88 = *((void *)v87 + 1);
      uint64_t v89 = *((void *)v87 + 2);
      uint64_t v90 = *((void *)v87 + 3);
      uint64_t v76 = *((void *)v87 + 5);
      uint64_t v137 = *((void *)v87 + 4);
      uint64_t v138 = *(void *)v87;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2527BC6F4(v86);
      char v79 = *v84;
      if ((*v84)(v86, 1, v85) != 1) {
        break;
      }
      sub_252781C54(v0[23], &qword_26B22BE58);
      if (qword_26B22BF08 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v136, (uint64_t)qword_26B22C0A0);
      uint64_t v91 = sub_252831138();
      os_log_type_t v92 = sub_252831618();
      os_log_type_t v84 = v132;
      if (os_log_type_enabled(v91, v92))
      {
        unint64_t v93 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v93 = 0;
        _os_log_impl(&dword_25277D000, v91, v92, "Unable to retrieve configuration to check if utility is disabled or not.", v93, 2u);
        MEMORY[0x2533BE070](v93, -1, -1);
      }

LABEL_54:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_55:
      ++v83;
      uint64_t v0 = v139;
      if (v83 == v135)
      {
        swift_bridgeObjectRelease();
        uint64_t v76 = v128;
        uint64_t v78 = (void *)v129;
        goto LABEL_98;
      }
    }
    uint64_t v94 = v0[24];
    uint64_t v95 = v0[22];
    sub_2527A05A4(v0[23], v0[27]);
    sub_2527BC6F4(v95);
    if (v79(v95, 1, v94) == 1)
    {
      sub_252781C54(v0[22], &qword_26B22BE58);
      if (qword_26B22BF08 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v136, (uint64_t)qword_26B22C0A0);
      uint64_t v96 = sub_252831138();
      os_log_type_t v97 = sub_252831618();
      if (os_log_type_enabled(v96, v97))
      {
        uint64_t v98 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v98 = 0;
        _os_log_impl(&dword_25277D000, v96, v97, "Unable to retrieve configuration to check if utility is disabled or not.", v98, 2u);
        MEMORY[0x2533BE070](v98, -1, -1);
      }

LABEL_67:
      if (qword_26B22BF08 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v136, (uint64_t)qword_26B22C0A0);
      uint64_t v99 = sub_252831138();
      os_log_type_t v100 = sub_252831628();
      if (os_log_type_enabled(v99, v100))
      {
        uint64_t v101 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v101 = 0;
        _os_log_impl(&dword_25277D000, v99, v100, "All Utilities are disabled!!!", v101, 2u);
        MEMORY[0x2533BE070](v101, -1, -1);
      }
      uint64_t v102 = v139[27];

      sub_2527E4CA8(v102, (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
      goto LABEL_54;
    }
    sub_2527A05A4(v0[22], v0[26]);
    char v103 = sub_2527BA4B4();
    uint64_t v104 = (char *)v0[26];
    if ((v103 & 1) == 0)
    {
      char v105 = *v104;
      sub_2527E4CA8((uint64_t)v104, (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
      if (v105) {
        goto LABEL_75;
      }
      goto LABEL_67;
    }
    sub_2527E4CA8((uint64_t)v104, (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
LABEL_75:
    unint64_t v106 = *(void **)(v130 + 16);
    if (!v106) {
      goto LABEL_90;
    }
    uint64_t v0 = (void *)v106[2];
    if (!v0) {
      goto LABEL_90;
    }
    if (v106[4] == v89 && v106[5] == v90 || (sub_252831A58() & 1) != 0)
    {
LABEL_80:
      sub_2527E4CA8(v139[27], (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_95:
      os_log_type_t v84 = v132;
      goto LABEL_55;
    }
    if (v0 == (void *)1)
    {
LABEL_90:
      sub_2527E4CA8(v139[27], (uint64_t (*)(void))type metadata accessor for UtilityServicesConfigurationsModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_25278FEF4(0, v131[2] + 1, 1);
      }
      unint64_t v111 = v131[2];
      unint64_t v110 = v131[3];
      if (v111 >= v110 >> 1) {
        sub_25278FEF4(v110 > 1, v111 + 1, 1);
      }
      v131[2] = v111 + 1;
      uint64_t v112 = &v131[6 * v111];
      v112[4] = v138;
      v112[5] = v88;
      v112[6] = v89;
      v112[7] = v90;
      v112[8] = v137;
      v112[9] = v76;
      goto LABEL_95;
    }
    uint64_t v78 = v106 + 7;
    uint64_t v107 = 1;
    while (1)
    {
      uint64_t v108 = v107 + 1;
      if (__OFADD__(v107, 1)) {
        break;
      }
      BOOL v109 = *(v78 - 1) == v89 && *v78 == v90;
      if (v109 || (sub_252831A58() & 1) != 0) {
        goto LABEL_80;
      }
      ++v107;
      v78 += 2;
      if ((void *)v108 == v0) {
        goto LABEL_90;
      }
    }
    __break(1u);
LABEL_107:
    swift_once();
  }
  swift_bridgeObjectRelease();
  uint64_t v131 = (void *)MEMORY[0x263F8EE78];
LABEL_98:
  uint64_t v113 = v131[2];
  if (v113)
  {
    uint64_t v114 = (objc_super *)(v0 + 7);
    uint64_t v140 = MEMORY[0x263F8EE78];
    sub_252831868();
    uint64_t v115 = (objc_class *)type metadata accessor for UtilityRegion();
    unsigned int v116 = v131 + 9;
    do
    {
      uint64_t v118 = *(v116 - 5);
      uint64_t v117 = *(v116 - 4);
      uint64_t v119 = *(v116 - 3);
      uint64_t v120 = *(v116 - 2);
      uint64_t v122 = *(v116 - 1);
      uint64_t v121 = *v116;
      os_log_type_t v123 = (char *)objc_allocWithZone(v115);
      uint64_t v124 = &v123[OBJC_IVAR____TtC19HomeUtilityServices13UtilityRegion_name];
      *(void *)uint64_t v124 = v118;
      *((void *)v124 + 1) = v117;
      uint64_t v125 = &v123[OBJC_IVAR____TtC19HomeUtilityServices13UtilityRegion_identifier];
      *(void *)uint64_t v125 = v119;
      *((void *)v125 + 1) = v120;
      uint64_t v126 = &v123[OBJC_IVAR____TtC19HomeUtilityServices13UtilityRegion_shortName];
      *(void *)uint64_t v126 = v122;
      *((void *)v126 + 1) = v121;
      uint64_t v0 = v139;
      v139[7] = v123;
      v139[8] = v115;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      [(objc_super *)v114 init];
      sub_252831848();
      sub_252831878();
      sub_252831888();
      sub_252831858();
      v116 += 6;
      --v113;
    }
    while (v113);
    uint64_t v133 = v140;
    sub_252782E20(v128, v129);
    swift_release();
  }
  else
  {
    sub_252782E20(v76, (unint64_t)v78);
    swift_release();
    uint64_t v133 = MEMORY[0x263F8EE78];
  }
  (*(void (**)(void, void))(v0[43] + 8))(v0[44], v0[42]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v127 = (uint64_t (*)(uint64_t))v0[1];
  return v127(v133);
}

uint64_t sub_2527E497C()
{
  uint64_t v1 = (void *)v0[58];
  if (qword_26B22BEF8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_252831158();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B22C088);
  uint64_t v3 = sub_252831138();
  os_log_type_t v4 = sub_252831618();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    _os_log_impl(&dword_25277D000, v3, v4, "Error while trying to fetch All Utility Region data.", v5, 2u);
    MEMORY[0x2533BE070](v5, -1, -1);
  }

  v0[15] = v1;
  id v6 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4C0);
  int v7 = swift_dynamicCast();
  uint64_t v8 = v0[30];
  uint64_t v9 = v0[31];
  uint64_t v10 = v0[29];
  if (v7)
  {
    sub_2527E4CA8(v0[21], (uint64_t (*)(void))type metadata accessor for NetworkError);
    swift_willThrow();
  }
  else
  {
    sub_252826B80(v1);
    swift_willThrow();
  }
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

unint64_t sub_2527E4C00()
{
  unint64_t result = qword_269C1E018;
  if (!qword_269C1E018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E018);
  }
  return result;
}

unint64_t sub_2527E4C54()
{
  unint64_t result = qword_26B22BDD8;
  if (!qword_26B22BDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BDD8);
  }
  return result;
}

uint64_t sub_2527E4CA8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_2527E4D08()
{
  unint64_t result = qword_269C1E028;
  if (!qword_269C1E028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E028);
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalAllUtilityConfiguration()
{
  return &type metadata for InternalAllUtilityConfiguration;
}

ValueMetadata *type metadata accessor for InternalAllUtilityConfigurationResponse()
{
  return &type metadata for InternalAllUtilityConfigurationResponse;
}

void *sub_2527E4D7C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF78);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527E4F24();
  sub_252831B28();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF30);
    sub_2527E52B8(&qword_26B22BF38, (void (*)(void))sub_2527E4F78);
    sub_252831998();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    int v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_2527E4F24()
{
  unint64_t result = qword_26B22BDC0;
  if (!qword_26B22BDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BDC0);
  }
  return result;
}

unint64_t sub_2527E4F78()
{
  unint64_t result = qword_26B22BDB8;
  if (!qword_26B22BDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BDB8);
  }
  return result;
}

uint64_t sub_2527E4FCC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF70);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527E5264();
  sub_252831B28();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v27 = 0;
  uint64_t v9 = sub_252831968();
  uint64_t v11 = v10;
  uint64_t v24 = v9;
  char v26 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_252831968();
  uint64_t v14 = v13;
  uint64_t v22 = v12;
  char v25 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = v14;
  uint64_t v15 = sub_252831968();
  uint64_t v17 = v16;
  uint64_t v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v19 = v23;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  return result;
}

unint64_t sub_2527E5264()
{
  unint64_t result = qword_26B22BDA0;
  if (!qword_26B22BDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BDA0);
  }
  return result;
}

uint64_t sub_2527E52B8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B22BF30);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2527E5328()
{
  unint64_t result = qword_269C1E048;
  if (!qword_269C1E048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E048);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for InternalAllUtilityConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2527E5448);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalAllUtilityConfiguration.CodingKeys()
{
  return &type metadata for InternalAllUtilityConfiguration.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for InternalAllUtilityConfigurationResponse.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2527E551CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalAllUtilityConfigurationResponse.CodingKeys()
{
  return &type metadata for InternalAllUtilityConfigurationResponse.CodingKeys;
}

unint64_t sub_2527E5558()
{
  unint64_t result = qword_269C1E050;
  if (!qword_269C1E050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E050);
  }
  return result;
}

unint64_t sub_2527E55B0()
{
  unint64_t result = qword_269C1E058;
  if (!qword_269C1E058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E058);
  }
  return result;
}

unint64_t sub_2527E5608()
{
  unint64_t result = qword_26B22BDB0;
  if (!qword_26B22BDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BDB0);
  }
  return result;
}

unint64_t sub_2527E5660()
{
  unint64_t result = qword_26B22BDA8;
  if (!qword_26B22BDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BDA8);
  }
  return result;
}

unint64_t sub_2527E56B8()
{
  unint64_t result = qword_26B22BDD0;
  if (!qword_26B22BDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BDD0);
  }
  return result;
}

unint64_t sub_2527E5710()
{
  unint64_t result = qword_26B22BDC8;
  if (!qword_26B22BDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B22BDC8);
  }
  return result;
}

uint64_t sub_2527E5764(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + 584) = a2;
  *(void *)(v2 + 416) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BE58);
  *(void *)(v2 + 424) = swift_task_alloc();
  uint64_t v3 = type metadata accessor for UtilityServicesConfigurationsModel();
  *(void *)(v2 + 432) = v3;
  *(void *)(v2 + 440) = *(void *)(v3 - 8);
  *(void *)(v2 + 448) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2527E5858, 0, 0);
}

uint64_t sub_2527E5858()
{
  uint64_t v1 = sub_2527E78C4();
  unint64_t v3 = v2;
  if (v2)
  {
    unsigned int v4 = v1;
    uint64_t v5 = HIBYTE(v2) & 0xF;
    if ((v2 & 0x2000000000000000) == 0) {
      uint64_t v5 = (unint64_t)v1 & 0xFFFFFFFFFFFFLL;
    }
    if (v5)
    {
      swift_task_dealloc();
      swift_task_dealloc();
      unsigned int v6 = (uint64_t (*)(__CFString *, unint64_t))v0[1];
      return v6(v4, v3);
    }
    swift_bridgeObjectRelease();
  }
  id v8 = objc_msgSend(self, sel_ephemeralSessionConfiguration);
  id v9 = objc_msgSend(self, sel_sessionWithConfiguration_, v8);
  v0[57] = v9;

  uint64_t v10 = (void *)swift_task_alloc();
  v0[58] = v10;
  void *v10 = v0;
  v10[1] = sub_2527E5A18;
  return sub_2527BAEF8((uint64_t)v9);
}

uint64_t sub_2527E5A18()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 456);
  swift_task_dealloc();

  return MEMORY[0x270FA2498](sub_2527E5B2C, 0, 0);
}

uint64_t sub_2527E5B2C()
{
  uint64_t v1 = v0[54];
  uint64_t v2 = v0[55];
  uint64_t v3 = v0[53];
  sub_2527BC6F4(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_252781C54(v0[53], &qword_26B22BE58);
    if (qword_269C1CEB8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D298);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable to retrieve serviceProxy configuration", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }

    uint64_t v8 = 0;
    unint64_t v9 = 0xE000000000000000;
    goto LABEL_9;
  }
  uint64_t v10 = v0[52];
  sub_2527A05A4(v0[53], v0[56]);
  uint64_t v8 = sub_2527E7F48(v10);
  uint64_t v12 = v0[56];
  if (v11)
  {
    unint64_t v9 = v11;
    sub_2527A07E0(v12);
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(uint64_t, unint64_t))v0[1];
    return v13(v8, v9);
  }
  uint64_t v15 = *(void *)(v12 + 272);
  v0[32] = *(void *)(v12 + 264);
  v0[33] = v15;
  v0[28] = 45;
  v0[29] = 0xE100000000000000;
  v0[26] = 43;
  v0[27] = 0xE100000000000000;
  unint64_t v16 = sub_25279033C();
  v0[59] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = MEMORY[0x263F8D310];
  v0[18] = sub_2528316D8();
  v0[19] = v18;
  v0[20] = 95;
  v0[21] = 0xE100000000000000;
  v0[22] = 47;
  v0[23] = 0xE100000000000000;
  uint64_t v51 = v17;
  sub_2528316D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if ((sub_252831378() & 3) != 0)
  {
    uint64_t v19 = sub_252831378();
    swift_bridgeObjectRelease();
    uint64_t v20 = v19 & 3;
    if (v19 <= 0) {
      uint64_t v20 = -(-v19 & 3);
    }
    MEMORY[0x2533BD210](61, 0xE100000000000000, 4 - v20);
    sub_2528313A8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_252830C08();
  unint64_t v23 = v22;
  swift_bridgeObjectRelease();
  v0[60] = v21;
  v0[61] = v23;
  if (v23 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    if (qword_269C1CEB8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_252831158();
    __swift_project_value_buffer(v24, (uint64_t)qword_269C2D298);
    char v25 = sub_252831138();
    os_log_type_t v26 = sub_252831618();
    if (os_log_type_enabled(v25, v26))
    {
      char v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v27 = 0;
      _os_log_impl(&dword_25277D000, v25, v26, "Unable to generate encoded Token Key.", v27, 2u);
      MEMORY[0x2533BE070](v27, -1, -1);
    }
    uint64_t v28 = v0[56];

    sub_2527E87F4();
    swift_allocError();
    *uint64_t v29 = 2;
    swift_willThrow();
LABEL_36:
    sub_2527A07E0(v28);
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v50 = (uint64_t (*)(void))v0[1];
    return v50();
  }
  uint64_t v30 = v0[52];
  swift_bridgeObjectRetain();
  os_log_type_t v31 = (void *)sub_252831298();
  swift_bridgeObjectRelease();
  if (v30)
  {
    uint64_t v32 = (void *)sub_2528314E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = 0;
  }
  id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F58260]), sel_initRSABlindSignatureChallengeWithIssuerName_redemptionNonce_originNames_, v31, 0, v32, v51, v16, v16, v16);
  v0[62] = v33;

  id v34 = objc_msgSend(v33, sel_challengeData);
  if (!v34)
  {
    if (qword_269C1CEB8 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_252831158();
    __swift_project_value_buffer(v45, (uint64_t)qword_269C2D298);
    uint64_t v46 = sub_252831138();
    os_log_type_t v47 = sub_252831618();
    if (os_log_type_enabled(v46, v47))
    {
      os_log_type_t v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v48 = 0;
      _os_log_impl(&dword_25277D000, v46, v47, "Unable to generate challenge data", v48, 2u);
      MEMORY[0x2533BE070](v48, -1, -1);
    }
    uint64_t v28 = v0[56];

    sub_2527E87F4();
    swift_allocError();
    *id v49 = 3;
    swift_willThrow();

    sub_252783CC0(v21, v23);
    goto LABEL_36;
  }
  unint64_t v35 = v34;
  uint64_t v36 = sub_252830C68();
  unint64_t v38 = v37;

  v0[63] = v36;
  v0[64] = v38;
  id v39 = objc_allocWithZone(MEMORY[0x263F58268]);
  sub_252782DC8(v36, v38);
  sub_2527AA900(v21, v23);
  id v40 = (void *)sub_252830C48();
  int v41 = (void *)sub_252830C48();
  id v42 = objc_msgSend(v39, sel_initWithChallenge_tokenKey_originNameKey_, v40, v41, 0);
  v0[65] = v42;
  sub_252783CC0(v21, v23);
  sub_252782E20(v36, v38);

  objc_msgSend(v42, sel_setSystemClient_, 1);
  if (qword_269C1CE58 != -1) {
    swift_once();
  }
  uint64_t v43 = qword_269C2D218;
  v0[2] = v0;
  v0[7] = v0 + 24;
  v0[3] = sub_2527E6340;
  uint64_t v44 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_2527E757C;
  v0[13] = &block_descriptor_0;
  v0[14] = v44;
  objc_msgSend(v42, sel_fetchTokenWithQueue_completionHandler_, v43, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2527E6340()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 528) = v1;
  if (v1) {
    uint64_t v2 = sub_2527E6DE0;
  }
  else {
    uint64_t v2 = sub_2527E6450;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2527E6450()
{
  uint64_t v58 = v0;
  uint64_t v1 = *(void *)(v0 + 192);
  unint64_t v2 = *(void *)(v0 + 200);
  switch(v2 >> 62)
  {
    case 1uLL:
      if ((int)v1 != v1 >> 32) {
        goto LABEL_3;
      }
      goto LABEL_9;
    case 2uLL:
      if (*(void *)(v1 + 16) == *(void *)(v1 + 24)) {
        goto LABEL_9;
      }
      goto LABEL_3;
    case 3uLL:
      goto LABEL_9;
    default:
      if ((v2 & 0xFF000000000000) != 0)
      {
LABEL_3:
        os_log_type_t v50 = *(void **)(v0 + 520);
        unint64_t v56 = *(void *)(v0 + 512);
        id v49 = *(void **)(v0 + 496);
        unint64_t v52 = *(void *)(v0 + 488);
        uint64_t v53 = *(void *)(v0 + 504);
        uint64_t v51 = *(void *)(v0 + 480);
        uint64_t v54 = *(void *)(v0 + 448);
        uint64_t v48 = *(void *)(v0 + 416);
        *(void *)(v0 + 288) = sub_252830C58();
        *(void *)(v0 + 296) = v3;
        *(void *)(v0 + 304) = 43;
        *(void *)(v0 + 312) = 0xE100000000000000;
        *(void *)(v0 + 320) = 45;
        *(void *)(v0 + 328) = 0xE100000000000000;
        uint64_t v4 = sub_2528316D8();
        uint64_t v6 = v5;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 336) = v4;
        *(void *)(v0 + 344) = v6;
        *(void *)(v0 + 352) = 47;
        *(void *)(v0 + 360) = 0xE100000000000000;
        *(void *)(v0 + 368) = 95;
        *(void *)(v0 + 376) = 0xE100000000000000;
        uint64_t v7 = sub_2528316D8();
        uint64_t v9 = v8;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 384) = v7;
        *(void *)(v0 + 392) = v9;
        *(void *)(v0 + 272) = 61;
        *(void *)(v0 + 280) = 0xE100000000000000;
        *(void *)(v0 + 240) = 0;
        *(void *)(v0 + 248) = 0xE000000000000000;
        uint64_t v10 = sub_2528316D8();
        uint64_t v12 = v11;
        swift_bridgeObjectRelease();
        sub_2527E8310(v48, v10, v12);

        sub_252782E20(v1, v2);
        sub_252783CC0(v51, v52);
        sub_252782E20(v53, v56);
        sub_2527A07E0(v54);
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
        return v13(v10, v12);
      }
      else
      {
LABEL_9:
        sub_2527E87F4();
        uint64_t v15 = (void *)swift_allocError();
        *unint64_t v16 = 1;
        swift_willThrow();
        sub_252782E20(v1, v2);
        *(void *)(v0 + 536) = v15;
        if (qword_269C1CEB8 != -1) {
          swift_once();
        }
        uint64_t v17 = sub_252831158();
        __swift_project_value_buffer(v17, (uint64_t)qword_269C2D298);
        uint64_t v18 = sub_252831138();
        os_log_type_t v19 = sub_252831618();
        if (os_log_type_enabled(v18, v19))
        {
          uint64_t v20 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v20 = 0;
          _os_log_impl(&dword_25277D000, v18, v19, "Error while trying to fetch Private Access Token", v20, 2u);
          MEMORY[0x2533BE070](v20, -1, -1);
        }

        uint64_t v21 = (void *)sub_252830B08();
        *(void *)(v0 + 544) = v21;
        if (objc_msgSend(v21, sel_code) != (id)1007) {
          goto LABEL_17;
        }
        unint64_t v22 = sub_252831138();
        os_log_type_t v23 = sub_252831618();
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v24 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v24 = 0;
          _os_log_impl(&dword_25277D000, v22, v23, "Private Access Token Error caused by Token issuance server error", v24, 2u);
          MEMORY[0x2533BE070](v24, -1, -1);
        }
        char v25 = *(unsigned char *)(v0 + 584);

        if ((v25 & 1) == 0)
        {
          uint64_t v43 = sub_252831138();
          os_log_type_t v44 = sub_252831628();
          if (os_log_type_enabled(v43, v44))
          {
            uint64_t v45 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v45 = 0;
            _os_log_impl(&dword_25277D000, v43, v44, "Trying to fetch token again.", v45, 2u);
            MEMORY[0x2533BE070](v45, -1, -1);
          }

          uint64_t v46 = (void *)swift_task_alloc();
          *(void *)(v0 + 552) = v46;
          *uint64_t v46 = v0;
          v46[1] = sub_2527E6BC0;
          uint64_t v47 = *(void *)(v0 + 416);
          return sub_2527E5764(v47, 1);
        }
        else
        {
LABEL_17:

          id v26 = v15;
          id v27 = v15;
          uint64_t v28 = sub_252831138();
          os_log_type_t v29 = sub_252831618();
          if (os_log_type_enabled(v28, v29))
          {
            uint64_t v30 = (uint8_t *)swift_slowAlloc();
            uint64_t v31 = swift_slowAlloc();
            uint64_t v57 = v31;
            *(_DWORD *)uint64_t v30 = 136315138;
            swift_getErrorValue();
            uint64_t v32 = sub_252831AA8();
            *(void *)(v0 + 400) = sub_25278F894(v32, v33, &v57);
            sub_252831698();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_25277D000, v28, v29, "%s", v30, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x2533BE070](v31, -1, -1);
            MEMORY[0x2533BE070](v30, -1, -1);
          }
          else
          {
          }
          id v34 = v15;
          unint64_t v35 = *(void **)(v0 + 520);
          uint64_t v36 = *(void *)(v0 + 504);
          unint64_t v55 = *(void *)(v0 + 512);
          unint64_t v38 = *(void *)(v0 + 488);
          unint64_t v37 = *(void **)(v0 + 496);
          uint64_t v39 = *(void *)(v0 + 480);
          uint64_t v40 = *(void *)(v0 + 448);
          swift_allocError();
          *int v41 = 1;
          swift_willThrow();

          sub_252783CC0(v39, v38);
          sub_252782E20(v36, v55);
          sub_2527A07E0(v40);
          swift_task_dealloc();
          swift_task_dealloc();
          id v42 = *(uint64_t (**)(void))(v0 + 8);
          return v42();
        }
      }
  }
}

uint64_t sub_2527E6BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 560) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_2527E7280;
  }
  else
  {
    *(void *)(v6 + 568) = a2;
    *(void *)(v6 + 576) = a1;
    uint64_t v7 = sub_2527E6CF8;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_2527E6CF8()
{
  uint64_t v1 = *(void **)(v0 + 544);
  uint64_t v2 = *(void **)(v0 + 536);
  uint64_t v4 = *(void *)(v0 + 504);
  unint64_t v3 = *(void *)(v0 + 512);
  unint64_t v5 = *(void *)(v0 + 488);
  uint64_t v6 = *(void **)(v0 + 496);
  uint64_t v7 = *(void *)(v0 + 480);
  uint64_t v8 = *(void *)(v0 + 448);

  sub_252783CC0(v7, v5);
  sub_252782E20(v4, v3);
  sub_2527A07E0(v8);
  uint64_t v9 = *(void *)(v0 + 576);
  uint64_t v10 = *(void *)(v0 + 568);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v11(v9, v10);
}

uint64_t sub_2527E6DE0()
{
  uint64_t v36 = v0;
  swift_willThrow();
  uint64_t v1 = *(void **)(v0 + 528);
  *(void *)(v0 + 536) = v1;
  if (qword_269C1CEB8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_252831158();
  __swift_project_value_buffer(v2, (uint64_t)qword_269C2D298);
  unint64_t v3 = sub_252831138();
  os_log_type_t v4 = sub_252831618();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl(&dword_25277D000, v3, v4, "Error while trying to fetch Private Access Token", v5, 2u);
    MEMORY[0x2533BE070](v5, -1, -1);
  }

  uint64_t v6 = (void *)sub_252830B08();
  *(void *)(v0 + 544) = v6;
  if (objc_msgSend(v6, sel_code) != (id)1007) {
    goto LABEL_9;
  }
  uint64_t v7 = sub_252831138();
  os_log_type_t v8 = sub_252831618();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_25277D000, v7, v8, "Private Access Token Error caused by Token issuance server error", v9, 2u);
    MEMORY[0x2533BE070](v9, -1, -1);
  }
  char v10 = *(unsigned char *)(v0 + 584);

  if ((v10 & 1) == 0)
  {
    os_log_type_t v29 = sub_252831138();
    os_log_type_t v30 = sub_252831628();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_25277D000, v29, v30, "Trying to fetch token again.", v31, 2u);
      MEMORY[0x2533BE070](v31, -1, -1);
    }

    uint64_t v32 = (void *)swift_task_alloc();
    *(void *)(v0 + 552) = v32;
    *uint64_t v32 = v0;
    v32[1] = sub_2527E6BC0;
    uint64_t v33 = *(void *)(v0 + 416);
    return sub_2527E5764(v33, 1);
  }
  else
  {
LABEL_9:

    id v11 = v1;
    id v12 = v1;
    uint64_t v13 = sub_252831138();
    os_log_type_t v14 = sub_252831618();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v35 = v16;
      *(_DWORD *)uint64_t v15 = 136315138;
      swift_getErrorValue();
      uint64_t v17 = sub_252831AA8();
      *(void *)(v0 + 400) = sub_25278F894(v17, v18, &v35);
      sub_252831698();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_25277D000, v13, v14, "%s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533BE070](v16, -1, -1);
      MEMORY[0x2533BE070](v15, -1, -1);
    }
    else
    {
    }
    os_log_type_t v19 = v1;
    uint64_t v20 = *(void **)(v0 + 520);
    uint64_t v21 = *(void *)(v0 + 504);
    unint64_t v34 = *(void *)(v0 + 512);
    unint64_t v23 = *(void *)(v0 + 488);
    unint64_t v22 = *(void **)(v0 + 496);
    uint64_t v24 = *(void *)(v0 + 480);
    uint64_t v25 = *(void *)(v0 + 448);
    sub_2527E87F4();
    swift_allocError();
    *id v26 = 1;
    swift_willThrow();

    sub_252783CC0(v24, v23);
    sub_252782E20(v21, v34);
    sub_2527A07E0(v25);
    swift_task_dealloc();
    swift_task_dealloc();
    id v27 = *(uint64_t (**)(void))(v0 + 8);
    return v27();
  }
}

uint64_t sub_2527E7280()
{
  uint64_t v1 = *(void **)(v0 + 544);
  uint64_t v2 = *(void **)(v0 + 536);
  uint64_t v4 = *(void *)(v0 + 504);
  unint64_t v3 = *(void *)(v0 + 512);
  unint64_t v5 = *(void *)(v0 + 488);
  uint64_t v6 = *(void **)(v0 + 496);
  uint64_t v7 = *(void *)(v0 + 480);
  uint64_t v8 = *(void *)(v0 + 448);

  sub_252783CC0(v7, v5);
  sub_252782E20(v4, v3);
  sub_2527A07E0(v8);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_2527E7358()
{
  uint64_t v0 = sub_252831648();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  unint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_252831638();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_252831178();
  MEMORY[0x270FA5388](v5 - 8);
  sub_2527E8848();
  sub_252831168();
  v7[1] = MEMORY[0x263F8EE78];
  sub_2527E8888();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E090);
  sub_2527E88E0((unint64_t *)&qword_269C1E098, &qword_269C1E090);
  sub_252831748();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F130], v0);
  uint64_t result = sub_252831658();
  qword_269C2D218 = result;
  return result;
}

uint64_t sub_2527E757C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4C0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    id v8 = a2;
    uint64_t v9 = sub_252830C68();
    uint64_t v11 = v10;

    id v12 = *(uint64_t **)(*(void *)(v3 + 64) + 40);
    uint64_t *v12 = v9;
    v12[1] = v11;
    return swift_continuation_throwingResume();
  }
}

uint64_t TokenGenerationError.hash(into:)()
{
  return sub_252831B08();
}

BOOL static TokenGenerationError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TokenGenerationError.hashValue.getter()
{
  return sub_252831B18();
}

unint64_t sub_2527E76DC()
{
  unint64_t result = qword_269C1E060;
  if (!qword_269C1E060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E060);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TokenGenerationError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TokenGenerationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2527E788CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TokenGenerationError()
{
  return &type metadata for TokenGenerationError;
}

__CFString *sub_2527E78C4()
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  if ((os_variant_has_internal_diagnostics() & 1) == 0 && !sub_2527BA75C()) {
    return 0;
  }
  LOBYTE(v16) = 0;
  uint64_t v0 = (__CFString *)sub_252831298();
  uint64_t v1 = (__CFString *)sub_252831298();
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(v0, v1, (Boolean *)&v16);

  if ((_BYTE)v16 && AppBooleanValue)
  {
    if (qword_269C1CEB8 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_252831158();
    __swift_project_value_buffer(v3, (uint64_t)qword_269C2D298);
    unsigned int v4 = sub_252831138();
    os_log_type_t v5 = sub_252831618();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v0 = (__CFString *)swift_slowAlloc();
      LOWORD(v0->isa) = 0;
      _os_log_impl(&dword_25277D000, v4, v5, "PAT feature has been disabled by Defaults override.", (uint8_t *)v0, 2u);
      MEMORY[0x2533BE070](v0, -1, -1);
    }

    sub_2527E87F4();
    swift_allocError();
    *unsigned int v6 = 5;
    swift_willThrow();
    return v0;
  }
  BOOL v7 = (__CFString *)sub_252831298();
  int v8 = (__CFString *)sub_252831298();
  CFPropertyListRef v9 = CFPreferencesCopyAppValue(v7, v8);

  if (!v9) {
    return 0;
  }
  CFPropertyListRef v18 = v9;
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v0 = v16;
  uint64_t v10 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0) {
    uint64_t v10 = (unint64_t)v16 & 0xFFFFFFFFFFFFLL;
  }
  if (!v10)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (qword_269C1CEB8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_252831158();
  __swift_project_value_buffer(v11, (uint64_t)qword_269C2D298);
  id v12 = sub_252831138();
  os_log_type_t v13 = sub_252831618();
  if (os_log_type_enabled(v12, v13))
  {
    os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v14 = 0;
    _os_log_impl(&dword_25277D000, v12, v13, "PAT | Using overridden value provided by defaults.", v14, 2u);
    MEMORY[0x2533BE070](v14, -1, -1);
  }

  return v0;
}

uint64_t sub_2527E7BFC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BE58);
  MEMORY[0x270FA5388](v2 - 8);
  unsigned int v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UtilityServicesConfigurationsModel();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    if (qword_269C1CEB8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_252831158();
    __swift_project_value_buffer(v14, (uint64_t)qword_269C2D298);
    uint64_t v10 = sub_252831138();
    os_log_type_t v11 = sub_252831618();
    if (!os_log_type_enabled(v10, v11)) {
      goto LABEL_12;
    }
    id v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v12 = 0;
    os_log_type_t v13 = "Token Storage | Token Storage requires origin name";
    goto LABEL_11;
  }
  sub_2527BC6F4((uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    sub_2527A05A4((uint64_t)v4, (uint64_t)v8);
    uint64_t v16 = *((void *)v8 + 34);
    uint64_t v20 = *((void *)v8 + 33);
    uint64_t v21 = v16;
    swift_bridgeObjectRetain();
    sub_2528313A8();
    uint64_t v18 = v20;
    uint64_t v17 = v21;
    uint64_t v20 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF40);
    sub_2527E88E0(&qword_269C1E068, &qword_26B22BF40);
    sub_252831278();
    uint64_t v20 = v18;
    uint64_t v21 = v17;
    swift_bridgeObjectRetain();
    sub_2528313A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = v20;
    sub_2527A07E0((uint64_t)v8);
    return v15;
  }
  sub_252781C54((uint64_t)v4, &qword_26B22BE58);
  if (qword_269C1CEB8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_252831158();
  __swift_project_value_buffer(v9, (uint64_t)qword_269C2D298);
  uint64_t v10 = sub_252831138();
  os_log_type_t v11 = sub_252831618();
  if (os_log_type_enabled(v10, v11))
  {
    id v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v12 = 0;
    os_log_type_t v13 = "Token Storage | Unable to retrieve serviceProxy configuration required for token lookup key";
LABEL_11:
    _os_log_impl(&dword_25277D000, v10, v11, v13, v12, 2u);
    MEMORY[0x2533BE070](v12, -1, -1);
  }
LABEL_12:

  return 0;
}

uint64_t sub_2527E7F48(uint64_t a1)
{
  if (!a1)
  {
    if (qword_269C1CEB8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_252831158();
    __swift_project_value_buffer(v10, (uint64_t)qword_269C2D298);
    os_log_type_t v11 = sub_252831138();
    os_log_type_t v12 = sub_252831618();
    if (!os_log_type_enabled(v11, v12)) {
      goto LABEL_25;
    }
    os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v13 = 0;
    uint64_t v14 = "Token Storage requires origin name";
    goto LABEL_24;
  }
  sub_2527E7BFC(a1);
  if (!v1)
  {
    if (qword_269C1CEB8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_252831158();
    __swift_project_value_buffer(v16, (uint64_t)qword_269C2D298);
    uint64_t v17 = sub_252831138();
    os_log_type_t v18 = sub_252831618();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_25277D000, v17, v18, "Token Storage | Unable generate token save key", v19, 2u);
      MEMORY[0x2533BE070](v19, -1, -1);
    }

    os_log_type_t v11 = sub_252831138();
    os_log_type_t v12 = sub_252831618();
    if (!os_log_type_enabled(v11, v12)) {
      goto LABEL_25;
    }
    os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v13 = 0;
    uint64_t v14 = "Token Storage | unable to retrieve key from storage.";
    goto LABEL_24;
  }
  uint64_t v2 = (__CFString *)sub_252831298();
  uint64_t v3 = (__CFString *)sub_252831298();
  CFPropertyListRef v4 = CFPreferencesCopyAppValue(v2, v3);
  swift_bridgeObjectRelease();

  if (!v4 || (swift_dynamicCast() & 1) == 0)
  {
    if (qword_269C1CEB8 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_252831158();
    __swift_project_value_buffer(v15, (uint64_t)qword_269C2D298);
    os_log_type_t v11 = sub_252831138();
    os_log_type_t v12 = sub_252831618();
    if (!os_log_type_enabled(v11, v12)) {
      goto LABEL_25;
    }
    os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v13 = 0;
    uint64_t v14 = "Token Storage | no key found in storage";
LABEL_24:
    _os_log_impl(&dword_25277D000, v11, v12, v14, v13, 2u);
    MEMORY[0x2533BE070](v13, -1, -1);
LABEL_25:

    return 0;
  }
  uint64_t v5 = v21;
  if (qword_269C1CEB8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_252831158();
  __swift_project_value_buffer(v6, (uint64_t)qword_269C2D298);
  uint64_t v7 = sub_252831138();
  os_log_type_t v8 = sub_252831628();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_25277D000, v7, v8, "Token Storage | returning stored key", v9, 2u);
    MEMORY[0x2533BE070](v9, -1, -1);
  }

  return v5;
}

void sub_2527E8310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_269C1CEB8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_252831158();
  __swift_project_value_buffer(v6, (uint64_t)qword_269C2D298);
  uint64_t v7 = sub_252831138();
  os_log_type_t v8 = sub_252831628();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_25277D000, v7, v8, "Token Storage | Initiating storing token in storage", v9, 2u);
    MEMORY[0x2533BE070](v9, -1, -1);
  }

  uint64_t v10 = sub_2527E7BFC(a1);
  if (v11)
  {
    uint64_t v12 = v10;
    uint64_t v13 = v11;
    v20[3] = MEMORY[0x263F8D310];
    v20[0] = a2;
    v20[1] = a3;
    swift_bridgeObjectRetain();
    sub_2527B9FFC(v12, v13, (uint64_t)v20);
    swift_bridgeObjectRelease();
    sub_252781C54((uint64_t)v20, &qword_26B22C010);
  }
  else
  {
    uint64_t v14 = sub_252831138();
    os_log_type_t v15 = sub_252831618();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_25277D000, v14, v15, "Token Storage | Unable generate token save key", v16, 2u);
      MEMORY[0x2533BE070](v16, -1, -1);
    }

    oslog = sub_252831138();
    os_log_type_t v17 = sub_252831618();
    if (os_log_type_enabled(oslog, v17))
    {
      os_log_type_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v18 = 0;
      _os_log_impl(&dword_25277D000, oslog, v17, "Token Storage | Unable to store token in storage.", v18, 2u);
      MEMORY[0x2533BE070](v18, -1, -1);
    }
  }
}

void sub_2527E858C(uint64_t a1)
{
  if (qword_269C1CEB8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_252831158();
  __swift_project_value_buffer(v2, (uint64_t)qword_269C2D298);
  uint64_t v3 = sub_252831138();
  os_log_type_t v4 = sub_252831628();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_25277D000, v3, v4, "Token Storage | Initiating removal of token from storage", v5, 2u);
    MEMORY[0x2533BE070](v5, -1, -1);
  }

  uint64_t v6 = sub_2527E7BFC(a1);
  if (v7)
  {
    memset(v14, 0, sizeof(v14));
    sub_2527B9FFC(v6, v7, (uint64_t)v14);
    sub_252781C54((uint64_t)v14, &qword_26B22C010);
    swift_bridgeObjectRelease();
  }
  else
  {
    os_log_type_t v8 = sub_252831138();
    os_log_type_t v9 = sub_252831618();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_25277D000, v8, v9, "Token Storage | Unable generate token save key", v10, 2u);
      MEMORY[0x2533BE070](v10, -1, -1);
    }

    oslog = sub_252831138();
    os_log_type_t v11 = sub_252831618();
    if (os_log_type_enabled(oslog, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_25277D000, oslog, v11, "Token Storage | Unable to remove token from storage without lookup key.", v12, 2u);
      MEMORY[0x2533BE070](v12, -1, -1);
    }
  }
}

unint64_t sub_2527E87F4()
{
  unint64_t result = qword_269C1E078;
  if (!qword_269C1E078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E078);
  }
  return result;
}

unint64_t sub_2527E8848()
{
  unint64_t result = qword_269C1E080;
  if (!qword_269C1E080)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269C1E080);
  }
  return result;
}

unint64_t sub_2527E8888()
{
  unint64_t result = qword_269C1E088;
  if (!qword_269C1E088)
  {
    sub_252831638();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E088);
  }
  return result;
}

uint64_t sub_2527E88E0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2527E8924(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_2527E8938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_2527E894C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_2527E8960(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_2527E8974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_2527E8988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_2527E899C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_2527E89B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  os_log_type_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 64) + **(int **)(a4 + 64));
  os_log_type_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *os_log_type_t v9 = v4;
  v9[1] = sub_252786A30;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_2527E8AC0@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_2528309B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = qword_2702C4000;
  os_log_type_t v8 = (char *)off_2702C4008;
  uint64_t v10 = 0x6E7265746E496171;
  unint64_t v11 = 0xEA00000000006C61;
  switch(byte_2702C3FF8)
  {
    case 1:
      unint64_t v11 = 0xE300000000000000;
      uint64_t v10 = 7759204;
      break;
    case 2:
      unint64_t v11 = 0xE400000000000000;
      uint64_t v10 = 1953654115;
      break;
    case 3:
      unint64_t v11 = 0xE400000000000000;
      uint64_t v10 = 1685025392;
      break;
    default:
      break;
  }
  uint64_t v12 = 0x6E7265746E496171;
  unint64_t v13 = 0xEA00000000006C61;
  switch(a1)
  {
    case 1:
      unint64_t v13 = 0xE300000000000000;
      if (v10 == 7759204) {
        goto LABEL_10;
      }
      goto LABEL_13;
    case 2:
      unint64_t v13 = 0xE400000000000000;
      uint64_t v12 = 1953654115;
      goto LABEL_9;
    case 3:
      unint64_t v13 = 0xE400000000000000;
      if (v10 != 1685025392) {
        goto LABEL_13;
      }
      goto LABEL_10;
    default:
LABEL_9:
      if (v10 != v12) {
        goto LABEL_13;
      }
LABEL_10:
      if (v11 == v13)
      {
LABEL_11:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease_n();
LABEL_39:
        sub_2528309A8();
        sub_252830998();
        swift_bridgeObjectRetain();
        MEMORY[0x2533BC720](v9, v8);
        sub_252830968();
        sub_252830928();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        return swift_bridgeObjectRelease();
      }
LABEL_13:
      uint64_t v29 = 0x6E7265746E496171;
      char v14 = sub_252831A58();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_39;
      }
      swift_bridgeObjectRelease();
      uint64_t v9 = qword_2702C4018;
      os_log_type_t v8 = off_2702C4020;
      unint64_t v15 = 0xEA00000000006C61;
      uint64_t v16 = 0x6E7265746E496171;
      switch(byte_2702C4010)
      {
        case 1:
          unint64_t v15 = 0xE300000000000000;
          uint64_t v16 = 7759204;
          break;
        case 2:
          unint64_t v15 = 0xE400000000000000;
          uint64_t v16 = 1953654115;
          break;
        case 3:
          unint64_t v15 = 0xE400000000000000;
          uint64_t v16 = 1685025392;
          break;
        default:
          break;
      }
      uint64_t v17 = 0x6E7265746E496171;
      unint64_t v18 = 0xEA00000000006C61;
      switch(a1)
      {
        case 1:
          unint64_t v18 = 0xE300000000000000;
          if (v16 == 7759204) {
            goto LABEL_23;
          }
          goto LABEL_24;
        case 2:
          unint64_t v18 = 0xE400000000000000;
          uint64_t v17 = 1953654115;
          goto LABEL_22;
        case 3:
          unint64_t v18 = 0xE400000000000000;
          if (v16 != 1685025392) {
            goto LABEL_24;
          }
          goto LABEL_23;
        default:
LABEL_22:
          if (v16 != v17) {
            goto LABEL_24;
          }
LABEL_23:
          if (v15 == v18) {
            goto LABEL_11;
          }
LABEL_24:
          char v19 = sub_252831A58();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v19) {
            goto LABEL_39;
          }
          swift_bridgeObjectRelease();
          uint64_t v9 = qword_2702C4030;
          os_log_type_t v8 = off_2702C4038;
          unint64_t v20 = 0xEA00000000006C61;
          uint64_t v21 = 0x6E7265746E496171;
          unint64_t v22 = 0xEA00000000006C61;
          switch(byte_2702C4028)
          {
            case 1:
              unint64_t v20 = 0xE300000000000000;
              uint64_t v21 = 7759204;
              break;
            case 2:
              unint64_t v20 = 0xE400000000000000;
              uint64_t v21 = 1953654115;
              break;
            case 3:
              unint64_t v20 = 0xE400000000000000;
              uint64_t v21 = 1685025392;
              break;
            default:
              break;
          }
          switch(a1)
          {
            case 1:
              unint64_t v22 = 0xE300000000000000;
              uint64_t v23 = 7759204;
              goto LABEL_35;
            case 2:
              unint64_t v22 = 0xE400000000000000;
              uint64_t v23 = 1953654115;
              goto LABEL_35;
            case 3:
              unint64_t v22 = 0xE400000000000000;
              uint64_t v23 = 1685025392;
LABEL_35:
              uint64_t v29 = v23;
              break;
            default:
              break;
          }
          if (v21 == v29 && v20 == v22) {
            goto LABEL_11;
          }
          char v24 = sub_252831A58();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v24) {
            goto LABEL_39;
          }
          swift_bridgeObjectRelease();
          swift_arrayDestroy();
          uint64_t v26 = sub_252830BD8();
          id v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
          uint64_t result = v27(a2, 1, 1, v26);
          break;
      }
      return result;
  }
}

uint64_t destroy for InternalOtpProperties()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s19HomeUtilityServices9ConfigURLVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ConfigURL(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ConfigURL(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InternalOtpProperties(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InternalOtpProperties(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConfigURL()
{
  return &type metadata for ConfigURL;
}

ValueMetadata *type metadata accessor for UtilityPeakPeriodsController()
{
  return &type metadata for UtilityPeakPeriodsController;
}

uint64_t sub_2527E9208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[32] = a6;
  v7[33] = a7;
  v7[30] = a4;
  v7[31] = a5;
  v7[28] = a2;
  v7[29] = a3;
  v7[27] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v7[34] = swift_task_alloc();
  uint64_t v9 = sub_2528307F8();
  v7[35] = v9;
  v7[36] = *(void *)(v9 - 8);
  v7[37] = swift_task_alloc();
  uint64_t v10 = (void *)swift_task_alloc();
  v7[38] = v10;
  void *v10 = v7;
  v10[1] = sub_2527E9338;
  return sub_2527BAEF8(a7);
}

uint64_t sub_2527E9338()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2527E9434, 0, 0);
}

uint64_t sub_2527E9434()
{
  uint64_t v1 = sub_252830A48();
  if (v2 & 1) != 0 || (uint64_t v3 = v1, v4 = sub_252830A58(), (v5) || (v6 = v4, v7 = sub_252830A38(), (v8))
  {
    if (qword_269C1CEF0 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_252831158();
    __swift_project_value_buffer(v28, (uint64_t)qword_269C2D340);
    uint64_t v29 = sub_252831138();
    os_log_type_t v30 = sub_252831618();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_25277D000, v29, v30, "Unable to compute start date. Check DateComponents.", v31, 2u);
      MEMORY[0x2533BE070](v31, -1, -1);
    }

    type metadata accessor for NetworkError();
    sub_2527B3838();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v32 = (uint64_t (*)(void))v0[1];
    return v32();
  }
  else
  {
    uint64_t v9 = v7;
    uint64_t v11 = v0[30];
    uint64_t v10 = v0[31];
    uint64_t v13 = v0[28];
    uint64_t v12 = v0[29];
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFF0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_252835580;
    *(void *)(inited + 32) = 0x497974696C697475;
    *(void *)(inited + 40) = 0xE900000000000064;
    *(void *)(inited + 48) = v13;
    *(void *)(inited + 56) = v12;
    *(void *)(inited + 64) = 0x7250666669726174;
    *(void *)(inited + 72) = 0xEF6449656C69666FLL;
    *(void *)(inited + 80) = v11;
    *(void *)(inited + 88) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v0[39] = sub_252786E88(inited);
    uint64_t KeyPath = swift_getKeyPath();
    v0[40] = KeyPath;
    v0[25] = v3;
    uint64_t v16 = MEMORY[0x263F8D6C8];
    uint64_t v33 = sub_252831A38();
    uint64_t v34 = v17;
    sub_2528313A8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E0B0);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_252832B00;
    uint64_t v19 = MEMORY[0x263F8D750];
    *(void *)(v18 + 56) = v16;
    *(void *)(v18 + 64) = v19;
    *(void *)(v18 + 32) = v6;
    sub_2528312D8();
    sub_2528313A8();
    swift_bridgeObjectRelease();
    sub_2528313A8();
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_252832B00;
    *(void *)(v20 + 56) = v16;
    *(void *)(v20 + 64) = v19;
    *(void *)(v20 + 32) = v9;
    sub_2528312D8();
    sub_2528313A8();
    swift_bridgeObjectRelease();
    v0[41] = v34;
    uint64_t v21 = (void *)swift_task_alloc();
    v0[42] = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_2527E9824;
    uint64_t v22 = v0[34];
    uint64_t v23 = v0[30];
    uint64_t v24 = v0[31];
    uint64_t v25 = v0[28];
    uint64_t v26 = v0[29];
    return sub_2527A0994(v22, v25, v26, v23, v24, v33, v34, KeyPath);
  }
}

uint64_t sub_2527E9824()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_2527E997C, 0, 0);
}

uint64_t sub_2527E997C()
{
  uint64_t v1 = v0[35];
  uint64_t v2 = v0[36];
  uint64_t v3 = v0[34];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_2527A5E98(v3);
    if (qword_269C1CEF0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D340);
    char v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable to generate request URL for utility rate peaks.", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }

    type metadata accessor for NetworkError();
    sub_2527B3838();
    swift_allocError();
    *char v8 = 0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[37], v3, v1);
    sub_252804F18(0xD00000000000002ALL, 0x800000025283CC20, (uint8_t *)0xD000000000000025, 0x800000025283CC50);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[43] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_2527E9C08;
    uint64_t v12 = v0[37];
    return MEMORY[0x270EF1EB0](v12, 0);
  }
}

uint64_t sub_2527E9C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5 = (void *)*v4;
  v5[44] = a1;
  v5[45] = a2;
  v5[46] = a3;
  v5[47] = v3;
  swift_task_dealloc();
  if (v3) {
    os_log_type_t v6 = sub_2527EA978;
  }
  else {
    os_log_type_t v6 = sub_2527E9D20;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_2527E9D20()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    id v3 = *(id *)(v0 + 368);
    sub_252805814(0xD000000000000028, (char *)0x800000025283CC80, (unint64_t)objc_msgSend(v2, sel_statusCode), qword_2702C46F0);
    id v4 = objc_msgSend(v2, sel_statusCode);
    switch((unint64_t)v4)
    {
      case 0x190uLL:
        if (qword_269C1CEF0 != -1) {
          swift_once();
        }
        uint64_t v5 = sub_252831158();
        __swift_project_value_buffer(v5, (uint64_t)qword_269C2D340);
        os_log_type_t v6 = sub_252831138();
        os_log_type_t v7 = sub_252831618();
        if (os_log_type_enabled(v6, v7))
        {
          uint64_t v8 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v8 = 0;
          _os_log_impl(&dword_25277D000, v6, v7, "BAD REQUEST | Check request", v8, 2u);
          MEMORY[0x2533BE070](v8, -1, -1);
        }
        goto LABEL_41;
      case 0x191uLL:
        if (qword_269C1CEF0 != -1) {
          swift_once();
        }
        uint64_t v43 = sub_252831158();
        __swift_project_value_buffer(v43, (uint64_t)qword_269C2D340);
        os_log_type_t v6 = sub_252831138();
        os_log_type_t v44 = sub_252831618();
        if (os_log_type_enabled(v6, v44))
        {
          uint64_t v45 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v45 = 0;
          _os_log_impl(&dword_25277D000, v6, v44, "Request Unauthorized or Access Token Expired.", v45, 2u);
          MEMORY[0x2533BE070](v45, -1, -1);
        }
        goto LABEL_41;
      case 0x192uLL:
      case 0x193uLL:
      case 0x195uLL:
      case 0x196uLL:
      case 0x197uLL:
      case 0x198uLL:
      case 0x199uLL:
      case 0x19AuLL:
      case 0x19BuLL:
      case 0x19CuLL:
      case 0x19DuLL:
      case 0x19EuLL:
      case 0x19FuLL:
      case 0x1A0uLL:
      case 0x1A1uLL:
      case 0x1A2uLL:
      case 0x1A3uLL:
      case 0x1A4uLL:
      case 0x1A5uLL:
      case 0x1A6uLL:
      case 0x1A7uLL:
      case 0x1A8uLL:
      case 0x1A9uLL:
      case 0x1AAuLL:
      case 0x1ABuLL:
      case 0x1ACuLL:
        goto LABEL_23;
      case 0x194uLL:
        if (qword_269C1CEF0 != -1) {
          swift_once();
        }
        uint64_t v46 = sub_252831158();
        __swift_project_value_buffer(v46, (uint64_t)qword_269C2D340);
        os_log_type_t v6 = sub_252831138();
        os_log_type_t v47 = sub_252831618();
        if (os_log_type_enabled(v6, v47))
        {
          uint64_t v48 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v48 = 0;
          _os_log_impl(&dword_25277D000, v6, v47, "Tariff Identifier or Utility Identifier not found.", v48, 2u);
          MEMORY[0x2533BE070](v48, -1, -1);
        }
        goto LABEL_41;
      case 0x1ADuLL:
        if (qword_269C1CEE8 != -1) {
          swift_once();
        }
        uint64_t v49 = sub_252831158();
        __swift_project_value_buffer(v49, (uint64_t)qword_269C2D328);
        os_log_type_t v6 = sub_252831138();
        os_log_type_t v50 = sub_252831618();
        if (os_log_type_enabled(v6, v50))
        {
          uint64_t v51 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v51 = 0;
          _os_log_impl(&dword_25277D000, v6, v50, "TOO MANY REQUESTS | Server rejected calls cause of too many requests being made", v51, 2u);
          MEMORY[0x2533BE070](v51, -1, -1);
        }
LABEL_41:
        unint64_t v52 = *(void *)(v0 + 360);
        char v14 = *(void **)(v0 + 368);
        uint64_t v53 = *(void *)(v0 + 352);
        uint64_t v17 = *(void *)(v0 + 288);
        uint64_t v16 = *(void *)(v0 + 296);
        uint64_t v18 = *(void *)(v0 + 280);

        type metadata accessor for NetworkError();
        sub_2527B3838();
        swift_allocError();
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_252782E20(v53, v52);

        goto LABEL_42;
      default:
        if (v4 == (id)500)
        {
          if (qword_269C1CEE8 != -1) {
            swift_once();
          }
          uint64_t v56 = sub_252831158();
          __swift_project_value_buffer(v56, (uint64_t)qword_269C2D328);
          uint64_t v57 = sub_252831138();
          os_log_type_t v58 = sub_252831618();
          if (os_log_type_enabled(v57, v58))
          {
            uint64_t v59 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v59 = 0;
            _os_log_impl(&dword_25277D000, v57, v58, "Internal Server Error", v59, 2u);
            MEMORY[0x2533BE070](v59, -1, -1);
          }
          unint64_t v61 = *(void *)(v0 + 360);
          uint64_t v60 = *(void **)(v0 + 368);
          uint64_t v62 = *(void *)(v0 + 352);
          uint64_t v63 = *(void *)(v0 + 288);
          uint64_t v78 = *(void *)(v0 + 280);
          uint64_t v80 = *(void *)(v0 + 296);

          type metadata accessor for NetworkError();
          sub_2527B3838();
          swift_allocError();
          void *v64 = objc_msgSend(v2, sel_statusCode);
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          sub_252782E20(v62, v61);

          (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v80, v78);
        }
        else if (v4 == (id)200)
        {
          if (qword_269C1CEF0 != -1) {
            swift_once();
          }
          uint64_t v20 = sub_252831158();
          __swift_project_value_buffer(v20, (uint64_t)qword_269C2D340);
          uint64_t v21 = sub_252831138();
          os_log_type_t v22 = sub_252831628();
          if (os_log_type_enabled(v21, v22))
          {
            uint64_t v23 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v23 = 0;
            _os_log_impl(&dword_25277D000, v21, v22, "Utility Rate Peaks Response received.", v23, 2u);
            MEMORY[0x2533BE070](v23, -1, -1);
          }
          uint64_t v24 = *(void **)(v0 + 376);

          sub_252830828();
          swift_allocObject();
          sub_252830818();
          sub_2527EAA00();
          sub_252830808();
          if (!v24)
          {
            unint64_t v69 = *(void *)(v0 + 360);
            uint64_t v70 = *(void **)(v0 + 368);
            uint64_t v71 = *(void *)(v0 + 352);
            uint64_t v72 = *(void *)(v0 + 216);
            (*(void (**)(void, void))(*(void *)(v0 + 288) + 8))(*(void *)(v0 + 296), *(void *)(v0 + 280));

            swift_release();
            sub_252782E20(v71, v69);
            uint64_t v73 = *(void *)(v0 + 128);
            long long v74 = *(_OWORD *)(v0 + 136);
            long long v75 = *(_OWORD *)(v0 + 152);
            long long v76 = *(_OWORD *)(v0 + 168);
            long long v77 = *(_OWORD *)(v0 + 184);
            *(_OWORD *)uint64_t v72 = *(_OWORD *)(v0 + 112);
            *(void *)(v72 + 16) = v73;
            *(_OWORD *)(v72 + 24) = v74;
            *(_OWORD *)(v72 + 40) = v75;
            *(_OWORD *)(v72 + 56) = v76;
            *(_OWORD *)(v72 + 72) = v77;
            swift_task_dealloc();
            swift_task_dealloc();
            uint64_t v54 = *(uint64_t (**)(void))(v0 + 8);
            goto LABEL_44;
          }
          uint64_t v25 = v24;
          swift_release();
          uint64_t v26 = sub_252831138();
          os_log_type_t v27 = sub_252831618();
          if (os_log_type_enabled(v26, v27))
          {
            uint64_t v28 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v28 = 0;
            _os_log_impl(&dword_25277D000, v26, v27, "Error while decoding response from server", v28, 2u);
            MEMORY[0x2533BE070](v28, -1, -1);
          }
          unint64_t v29 = *(void *)(v0 + 360);
          os_log_type_t v30 = *(void **)(v0 + 368);
          uint64_t v31 = *(void *)(v0 + 352);
          uint64_t v33 = *(void *)(v0 + 288);
          uint64_t v32 = *(void *)(v0 + 296);
          uint64_t v34 = *(void *)(v0 + 280);

          sub_252825138(v25);
          swift_willThrow();
          sub_252782E20(v31, v29);

          (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
        }
        else
        {
LABEL_23:
          if (qword_269C1CEE8 != -1) {
            swift_once();
          }
          uint64_t v35 = *(void **)(v0 + 368);
          uint64_t v36 = sub_252831158();
          __swift_project_value_buffer(v36, (uint64_t)qword_269C2D328);
          id v37 = v35;
          unint64_t v38 = sub_252831138();
          os_log_type_t v39 = sub_252831618();
          if (os_log_type_enabled(v38, v39))
          {
            uint64_t v40 = *(void **)(v0 + 368);
            int v41 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)int v41 = 134217984;
            *(void *)(v0 + 208) = objc_msgSend(v2, sel_statusCode);
            sub_252831698();

            _os_log_impl(&dword_25277D000, v38, v39, "Request failed : Status Code %ld", v41, 0xCu);
            MEMORY[0x2533BE070](v41, -1, -1);
            id v42 = *(NSObject **)(v0 + 368);
          }
          else
          {

            id v42 = *(NSObject **)(v0 + 368);
            unint64_t v38 = v42;
          }
          uint64_t v66 = *(void *)(v0 + 352);
          unint64_t v65 = *(void *)(v0 + 360);
          uint64_t v67 = *(void *)(v0 + 288);
          uint64_t v79 = *(void *)(v0 + 280);
          uint64_t v81 = *(void *)(v0 + 296);

          type metadata accessor for NetworkError();
          sub_2527B3838();
          swift_allocError();
          *unint64_t v68 = objc_msgSend(v2, sel_statusCode);
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          sub_252782E20(v66, v65);

          (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v81, v79);
        }
        break;
    }
  }
  else
  {
    if (qword_269C1CEF0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_252831158();
    __swift_project_value_buffer(v9, (uint64_t)qword_269C2D340);
    uint64_t v10 = sub_252831138();
    os_log_type_t v11 = sub_252831618();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_25277D000, v10, v11, "Unable to process Utility Rate Peaks Response.", v12, 2u);
      MEMORY[0x2533BE070](v12, -1, -1);
    }
    unint64_t v13 = *(void *)(v0 + 360);
    char v14 = *(void **)(v0 + 368);
    uint64_t v15 = *(void *)(v0 + 352);
    uint64_t v17 = *(void *)(v0 + 288);
    uint64_t v16 = *(void *)(v0 + 296);
    uint64_t v18 = *(void *)(v0 + 280);

    type metadata accessor for NetworkError();
    sub_2527B3838();
    swift_allocError();
    *uint64_t v19 = 2;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_252782E20(v15, v13);
LABEL_42:

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v54 = *(uint64_t (**)(void))(v0 + 8);
LABEL_44:
  return v54();
}

uint64_t sub_2527EA978()
{
  (*(void (**)(void, void))(v0[36] + 8))(v0[37], v0[35]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

unint64_t sub_2527EAA00()
{
  unint64_t result = qword_269C1E0B8;
  if (!qword_269C1E0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269C1E0B8);
  }
  return result;
}

void sub_2527EAA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5, void *a6)
{
  uint64_t v56 = a4;
  os_log_t v57 = a5;
  uint64_t v54 = a3;
  uint64_t v55 = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D100);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_252830DB8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = objc_msgSend(self, sel_sharedConnection);
  if (v16)
  {
    uint64_t v17 = v16;
    unsigned int v18 = objc_msgSend(v16, sel_isDiagnosticSubmissionAllowed);

    if (v18)
    {
      uint64_t v53 = a6;
      sub_2528307A8();
      uint64_t v19 = sub_252830BD8();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v15, 1, v19) == 1)
      {
        sub_252781C54((uint64_t)v15, &qword_26B22BD58);
LABEL_20:
        if (qword_269C1CF10 != -1) {
          swift_once();
        }
        uint64_t v44 = sub_252831158();
        __swift_project_value_buffer(v44, (uint64_t)qword_269C2D3A0);
        uint64_t v45 = sub_252831138();
        os_log_type_t v46 = sub_252831618();
        if (!os_log_type_enabled(v45, v46)) {
          goto LABEL_25;
        }
        os_log_type_t v47 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v47 = 0;
        uint64_t v48 = "Unable to retrieve request endpoint for utility metrics api.";
        goto LABEL_24;
      }
      uint64_t v52 = sub_2527EB0B4();
      uint64_t v26 = v25;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v19);
      if (!v26) {
        goto LABEL_20;
      }
      uint64_t v51 = v26;
      uint64_t v27 = sub_252806A64();
      unint64_t v29 = v28;
      uint64_t v30 = HIBYTE(v28) & 0xF;
      if ((v28 & 0x2000000000000000) == 0) {
        uint64_t v30 = v27 & 0xFFFFFFFFFFFFLL;
      }
      if (!v30)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (qword_269C1CF10 == -1)
        {
LABEL_27:
          uint64_t v49 = sub_252831158();
          __swift_project_value_buffer(v49, (uint64_t)qword_269C2D3A0);
          uint64_t v45 = sub_252831138();
          os_log_type_t v46 = sub_252831618();
          if (!os_log_type_enabled(v45, v46)) {
            goto LABEL_25;
          }
          os_log_type_t v47 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v47 = 0;
          uint64_t v48 = "Unable to compute partner facing requestID .";
LABEL_24:
          _os_log_impl(&dword_25277D000, v45, v46, v48, v47, 2u);
          MEMORY[0x2533BE070](v47, -1, -1);
LABEL_25:

          return;
        }
LABEL_32:
        swift_once();
        goto LABEL_27;
      }
      uint64_t v31 = v27;
      sub_252830D78();
      os_log_t v32 = v57;
      sub_252830C98();
      double v34 = v33;
      (*(void (**)(char *, uint64_t))(v11 + 8))((char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
      double v35 = v34 * 1000.0;
      if ((~COERCE__INT64(v34 * 1000.0) & 0x7FF0000000000000) != 0)
      {
        if (v35 > -9.22337204e18)
        {
          uint64_t v50 = v31;
          if (v35 < 9.22337204e18)
          {
            uint64_t v36 = (uint64_t)v35;
            uint64_t v37 = sub_252831598();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v9, 1, 1, v37);
            (*(void (**)(char *, os_log_t, uint64_t))(v11 + 16))((char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v32, v10);
            unint64_t v38 = (*(unsigned __int8 *)(v11 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
            os_log_type_t v39 = (char *)swift_allocObject();
            *((void *)v39 + 2) = 0;
            *((void *)v39 + 3) = 0;
            *((void *)v39 + 4) = v50;
            *((void *)v39 + 5) = v29;
            uint64_t v40 = v56;
            *((void *)v39 + 6) = v54;
            *((void *)v39 + 7) = v40;
            uint64_t v41 = v51;
            *((void *)v39 + 8) = v52;
            *((void *)v39 + 9) = v41;
            *((void *)v39 + 10) = v55;
            *((void *)v39 + 11) = v36;
            (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v39[v38], (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
            id v42 = v53;
            *(void *)&v39[(v12 + v38 + 7) & 0xFFFFFFFFFFFFFFF8] = v53;
            swift_bridgeObjectRetain();
            id v43 = v42;
            sub_2527EB770((uint64_t)v9, (uint64_t)&unk_269C1E0C8, (uint64_t)v39);
            swift_release();
            return;
          }
          goto LABEL_31;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    if (qword_269C1CF10 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_252831158();
    __swift_project_value_buffer(v21, (uint64_t)qword_269C2D3A0);
    os_log_t v57 = (os_log_t)sub_252831138();
    os_log_type_t v22 = sub_252831618();
    if (os_log_type_enabled(v57, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_25277D000, v57, v22, "Device Diagnostic submission is not allowed", v23, 2u);
      MEMORY[0x2533BE070](v23, -1, -1);
    }
    os_log_t v24 = v57;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2527EB0B4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD50);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_2528309B8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  os_log_type_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252830918();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_252781C54((uint64_t)v2, &qword_26B22BD50);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  uint64_t v7 = sub_252830988();
  if (!v8)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return 0;
  }
  uint64_t v9 = v7;
  uint64_t v10 = v8;
  sub_252830938();
  if (v11)
  {
    uint64_t v16 = v9;
    uint64_t v17 = v10;
    swift_bridgeObjectRetain();
    sub_2528313A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2528313A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = v16;
    uint64_t v12 = v17;
    sub_252830958();
    uint64_t v16 = v13;
    uint64_t v17 = v12;
    swift_bridgeObjectRetain();
    sub_2528313A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v16;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRelease();
    return 0;
  }
  return v14;
}

uint64_t sub_2527EB34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 176) = v14;
  *(_OWORD *)(v8 + 144) = v12;
  *(_OWORD *)(v8 + 160) = v13;
  *(void *)(v8 + 128) = a7;
  *(void *)(v8 + 136) = a8;
  *(void *)(v8 + 112) = a5;
  *(void *)(v8 + 120) = a6;
  *(void *)(v8 + 96) = a1;
  *(void *)(v8 + 104) = a4;
  uint64_t v9 = sub_252830CF8();
  *(void *)(v8 + 184) = v9;
  *(void *)(v8 + 192) = *(void *)(v9 - 8);
  *(void *)(v8 + 200) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2527EB428, 0, 0);
}

uint64_t sub_2527EB428()
{
  uint64_t v2 = v0[24];
  uint64_t v1 = v0[25];
  uint64_t v3 = v0[18];
  uint64_t v16 = v0[19];
  uint64_t v17 = v0[20];
  uint64_t v4 = v0[16];
  uint64_t v14 = v0[23];
  uint64_t v15 = v0[17];
  uint64_t v5 = v0[14];
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25279F7A4(v1);
  uint64_t v8 = sub_252830C88();
  uint64_t v10 = v9;
  v0[26] = v9;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v14);
  v0[2] = v7;
  v0[3] = v5;
  v0[4] = v6;
  v0[5] = v4;
  v0[6] = v15;
  v0[7] = v3;
  v0[8] = v16;
  v0[9] = v17;
  v0[10] = v8;
  v0[11] = v10;
  unsigned int v18 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269C1E0E0 + dword_269C1E0E0);
  uint64_t v11 = (void *)swift_task_alloc();
  v0[27] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_2527EB588;
  uint64_t v12 = v0[22];
  return v18((uint64_t)(v0 + 2), v12);
}

uint64_t sub_2527EB588(char a1)
{
  *(unsigned char *)(*(void *)v1 + 224) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_2527EB704, 0, 0);
}

uint64_t sub_2527EB704()
{
  **(unsigned char **)(v0 + 96) = *(unsigned char *)(v0 + 224);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2527EB770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252831598();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_252831588();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_252781C54(a1, &qword_269C1D100);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_252831558();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_2527EB918()
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  sub_252830858();
  swift_allocObject();
  sub_252830848();
  long long v1 = v0[3];
  long long v21 = v0[2];
  long long v22 = v1;
  long long v23 = v0[4];
  long long v2 = v0[1];
  long long v19 = *v0;
  long long v20 = v2;
  sub_2527EE47C();
  uint64_t v3 = sub_252830838();
  unint64_t v5 = v4;
  swift_release();
  uint64_t v6 = self;
  uint64_t v7 = (void *)sub_252830C48();
  *(void *)&long long v19 = 0;
  id v8 = objc_msgSend(v6, sel_JSONObjectWithData_options_error_, v7, 4, &v19);

  id v9 = (id)v19;
  if (v8)
  {
    sub_252831738();
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v10 = v9;
    uint64_t v11 = (void *)sub_252830B18();

    swift_willThrow();
    long long v19 = 0u;
    long long v20 = 0u;
  }
  sub_2527845D0((uint64_t)&v19, (uint64_t)&v16);
  if (v17)
  {
    sub_2527933EC(&v16, v15);
    sub_252784638((uint64_t)v15, (uint64_t)v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF28);
    if ((swift_dynamicCast() & 1) == 0) {
      uint64_t v18 = 0;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
    uint64_t v12 = v18;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v18 = 0;
  }
  sub_252782E20(v3, v5);
  sub_252781C54((uint64_t)&v19, &qword_26B22C010);
  return v12;
}

uint64_t sub_2527EBB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[49] = a3;
  v4[50] = a4;
  v4[47] = a1;
  v4[48] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v4[51] = swift_task_alloc();
  uint64_t v5 = sub_2528307F8();
  v4[52] = v5;
  v4[53] = *(void *)(v5 - 8);
  v4[54] = swift_task_alloc();
  v4[55] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  v4[56] = swift_task_alloc();
  uint64_t v6 = sub_252830BD8();
  v4[57] = v6;
  v4[58] = *(void *)(v6 - 8);
  v4[59] = swift_task_alloc();
  v4[60] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2527EBD00, 0, 0);
}

uint64_t sub_2527EBD00()
{
  uint64_t v1 = *(void *)(v0 + 456);
  uint64_t v2 = *(void *)(v0 + 464);
  uint64_t v3 = *(void *)(v0 + 448);
  sub_25279D788(*(void *)(v0 + 392), *(void *)(v0 + 400));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_252781C54(*(void *)(v0 + 448), &qword_26B22BD58);
    if (qword_269C1CF10 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D3A0);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Request URL for Metrics API not found", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }
    uint64_t v8 = *(void *)(v0 + 416);
    uint64_t v9 = *(void *)(v0 + 424);
    uint64_t v10 = *(void *)(v0 + 376);

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v10, 1, 1, v8);
LABEL_36:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v74 = *(uint64_t (**)(void))(v0 + 8);
    return v74();
  }
  uint64_t v11 = (_OWORD *)(v0 + 128);
  long long v77 = (_OWORD *)(v0 + 96);
  uint64_t v78 = (_OWORD *)(v0 + 160);
  uint64_t v12 = (_OWORD *)(v0 + 192);
  uint64_t v79 = v0 + 352;
  uint64_t v13 = *(void *)(v0 + 384);
  (*(void (**)(void, void, void))(*(void *)(v0 + 464) + 32))(*(void *)(v0 + 480), *(void *)(v0 + 448), *(void *)(v0 + 456));
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    long long v75 = (_OWORD *)(v0 + 128);
    long long v76 = (_OWORD *)(v0 + 192);
    uint64_t v87 = v0;
    os_log_type_t v84 = (_OWORD *)(v0 + 256);
    uint64_t v85 = (_OWORD *)(v0 + 288);
    uint64_t v80 = v0 + 320;
    uint64_t v81 = (_OWORD *)(v0 + 224);
    uint64_t v15 = *(void *)(v0 + 384);
    uint64_t v82 = (uint64_t *)(v0 + 368);
    uint64_t v83 = (id *)(v0 + 360);
    sub_252830858();
    swift_bridgeObjectRetain();
    long long v16 = (uint64_t *)(v15 + 104);
    uint64_t v86 = (void *)MEMORY[0x263F8EE78];
    do
    {
      uint64_t v17 = *(v16 - 8);
      uint64_t v90 = *(v16 - 9);
      uint64_t v93 = v14;
      uint64_t v18 = *(v16 - 7);
      uint64_t v19 = *(v16 - 6);
      uint64_t v20 = *(v16 - 5);
      uint64_t v21 = *(v16 - 4);
      long long v88 = *(_OWORD *)(v16 - 3);
      uint64_t v22 = *(v16 - 1);
      uint64_t v23 = *v16;
      swift_allocObject();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_252830848();
      *(void *)(v87 + 16) = v90;
      *(void *)(v87 + 24) = v17;
      *(void *)(v87 + 32) = v18;
      *(void *)(v87 + 40) = v19;
      *(void *)(v87 + 48) = v20;
      *(void *)(v87 + 56) = v21;
      *(_OWORD *)(v87 + 64) = v88;
      *(void *)(v87 + 80) = v22;
      *(void *)(v87 + 88) = v23;
      sub_2527EE47C();
      uint64_t v24 = sub_252830838();
      unint64_t v26 = v25;
      swift_release();
      uint64_t v27 = self;
      uint64_t v91 = v24;
      unint64_t v89 = v26;
      unint64_t v28 = (void *)sub_252830C48();
      *uint64_t v83 = 0;
      id v29 = objc_msgSend(v27, sel_JSONObjectWithData_options_error_, v28, 4, v83);

      id v30 = *v83;
      if (v29)
      {
        uint64_t v31 = (uint64_t)v81;
        sub_252831738();
        swift_unknownObjectRelease();
      }
      else
      {
        os_log_t v32 = v30;
        double v33 = (void *)sub_252830B18();

        swift_willThrow();
        uint64_t v31 = (uint64_t)v81;
        *uint64_t v81 = 0u;
        v81[1] = 0u;
      }
      sub_2527845D0(v31, (uint64_t)v84);
      if (*(void *)(v87 + 280))
      {
        sub_2527933EC(v84, v85);
        sub_252784638((uint64_t)v85, v80);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF28);
        if ((swift_dynamicCast() & 1) == 0) {
          *uint64_t v82 = 0;
        }
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v85);
        uint64_t v34 = *v82;
      }
      else
      {
        uint64_t v34 = 0;
        *uint64_t v82 = 0;
      }
      double v35 = v86;
      sub_252782E20(v91, v89);
      sub_252781C54(v31, &qword_26B22C010);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v34)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          double v35 = sub_252821F18(0, v86[2] + 1, 1, v86);
        }
        unint64_t v37 = v35[2];
        unint64_t v36 = v35[3];
        if (v37 >= v36 >> 1) {
          double v35 = sub_252821F18((void *)(v36 > 1), v37 + 1, 1, v35);
        }
        v35[2] = v37 + 1;
        uint64_t v86 = v35;
        v35[v37 + 4] = v34;
      }
      v16 += 10;
      uint64_t v14 = v93 - 1;
    }
    while (v93 != 1);
    uint64_t v0 = v87;
    swift_bridgeObjectRelease();
    uint64_t v11 = v75;
    uint64_t v12 = v76;
    unint64_t v38 = v77;
    os_log_type_t v39 = v86;
  }
  else
  {
    os_log_type_t v39 = (void *)MEMORY[0x263F8EE78];
    unint64_t v38 = (_OWORD *)(v0 + 96);
  }
  *(void *)(v0 + 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E108);
  *(void *)(v0 + 96) = v39;
  sub_2527933EC(v38, v11);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_2527A00D4(v11, 0x73746E657665, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 184) = MEMORY[0x263F8D310];
  *(void *)(v0 + 160) = 0xD000000000000012;
  *(void *)(v0 + 168) = 0x800000025283CD10;
  sub_2527933EC(v78, v12);
  char v41 = swift_isUniquelyReferenced_nonNull_native();
  sub_2527A00D4(v12, 0x6E69616D6F64, 0xE600000000000000, v41);
  swift_bridgeObjectRelease();
  id v42 = self;
  id v43 = (void *)sub_252831218();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 352) = 0;
  id v44 = objc_msgSend(v42, sel_dataWithJSONObject_options_error_, v43, 0, v79);

  id v45 = *(id *)(v0 + 352);
  if (!v44)
  {
    uint64_t v62 = v45;
    uint64_t v63 = (void *)sub_252830B18();

    swift_willThrow();
    if (qword_269C1CF10 != -1) {
      swift_once();
    }
    uint64_t v64 = sub_252831158();
    __swift_project_value_buffer(v64, (uint64_t)qword_269C2D3A0);
    unint64_t v65 = sub_252831138();
    os_log_type_t v66 = sub_252831618();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v67 = 0;
      _os_log_impl(&dword_25277D000, v65, v66, "Unable to encode Metrics request body", v67, 2u);
      MEMORY[0x2533BE070](v67, -1, -1);
    }
    uint64_t v68 = *(void *)(v0 + 480);
    uint64_t v69 = *(void *)(v0 + 456);
    uint64_t v70 = *(void *)(v0 + 464);
    uint64_t v71 = *(void *)(v0 + 416);
    uint64_t v72 = *(void *)(v0 + 424);
    uint64_t v73 = *(void *)(v0 + 376);

    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v68, v69);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56))(v73, 1, 1, v71);
    goto LABEL_36;
  }
  uint64_t v46 = *(void *)(v0 + 472);
  uint64_t v48 = *(void *)(v0 + 456);
  uint64_t v47 = *(void *)(v0 + 464);
  uint64_t v50 = *(void *)(v0 + 432);
  uint64_t v49 = *(void *)(v0 + 440);
  uint64_t v51 = *(void *)(v0 + 424);
  uint64_t v92 = *(void *)(v0 + 480);
  uint64_t v94 = *(void *)(v0 + 416);
  uint64_t v52 = sub_252830C68();
  unint64_t v54 = v53;

  *(void *)(v0 + 488) = v52;
  *(void *)(v0 + 496) = v54;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v46, v92, v48);
  sub_252830798();
  sub_252804CA4(v49);
  uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
  *(void *)(v0 + 504) = v55;
  *(void *)(v0 + 512) = (v51 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v55(v50, v94);
  sub_252830778();
  sub_252782DC8(v52, v54);
  sub_2528307D8();
  uint64_t v56 = dword_269C1D918;
  os_log_t v57 = (void *)swift_task_alloc();
  *(void *)(v0 + 520) = v57;
  *os_log_t v57 = v0;
  v57[1] = sub_2527EC680;
  uint64_t v58 = *(void *)(v0 + 440);
  uint64_t v59 = *(void *)(v0 + 408);
  uint64_t v60 = *(void *)(v0 + 392);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C1D918 + v56))(v59, v58, v60);
}

uint64_t sub_2527EC680()
{
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v1 = sub_2527ECAD8;
  }
  else
  {
    uint64_t v1 = sub_2527EC7C4;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_2527EC7C4()
{
  uint64_t v1 = v0[52];
  uint64_t v2 = v0[53];
  uint64_t v3 = v0[51];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_252781C54(v3, &qword_26B22BD40);
    if (qword_269C1CF10 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D3A0);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable to sign Metrics request", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }
    uint64_t v8 = (void (*)(uint64_t, uint64_t))v0[63];
    uint64_t v10 = v0[61];
    unint64_t v9 = v0[62];
    uint64_t v25 = v0[60];
    uint64_t v12 = v0[57];
    uint64_t v11 = v0[58];
    uint64_t v13 = v0[55];
    uint64_t v14 = v0[52];
    uint64_t v15 = v0[53];
    uint64_t v26 = v0[47];

    sub_252782E20(v10, v9);
    v8(v13, v14);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v25, v12);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v26, 1, 1, v14);
  }
  else
  {
    long long v16 = (void (*)(uint64_t, uint64_t))v0[63];
    uint64_t v18 = v0[61];
    unint64_t v17 = v0[62];
    uint64_t v27 = v0[60];
    uint64_t v19 = v0[58];
    uint64_t v24 = v0[57];
    uint64_t v20 = v0[55];
    uint64_t v21 = v0[47];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v21, v3, v1);
    sub_2528307E8();
    sub_252782E20(v18, v17);
    v16(v20, v1);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v27, v24);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v21, 0, 1, v1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_2527ECAD8()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[53] + 56))(v0[51], 1, 1, v0[52]);
  sub_252781C54(v0[51], &qword_26B22BD40);
  if (qword_269C1CF10 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_252831158();
  __swift_project_value_buffer(v1, (uint64_t)qword_269C2D3A0);
  uint64_t v2 = sub_252831138();
  os_log_type_t v3 = sub_252831618();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_25277D000, v2, v3, "Unable to sign Metrics request", v4, 2u);
    MEMORY[0x2533BE070](v4, -1, -1);
  }
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v0[63];
  uint64_t v7 = v0[61];
  unint64_t v6 = v0[62];
  uint64_t v15 = v0[60];
  uint64_t v9 = v0[57];
  uint64_t v8 = v0[58];
  uint64_t v10 = v0[55];
  uint64_t v11 = v0[52];
  uint64_t v12 = v0[53];
  uint64_t v16 = v0[47];

  sub_252782E20(v7, v6);
  v5(v10, v11);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v15, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v16, 1, 1, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

unint64_t sub_2527ECD14(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4972656E74726170;
      break;
    case 2:
      unint64_t result = 0x746E696F70646E65;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2527ECDE8(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E110);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527EE784();
  sub_252831B38();
  v8[15] = 0;
  sub_2528319E8();
  if (!v1)
  {
    v8[14] = 1;
    sub_2528319E8();
    v8[13] = 2;
    sub_2528319E8();
    v8[12] = 3;
    sub_252831A08();
    v8[11] = 4;
    sub_252831A08();
    v8[10] = 5;
    sub_2528319E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2527ECFE8()
{
  return sub_2527ECD14(*v0);
}

uint64_t sub_2527ECFF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2527EE7D8(a1, a2);
  *a3 = result;
  return result;
}

void sub_2527ED018(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_2527ED024(uint64_t a1)
{
  unint64_t v2 = sub_2527EE784();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527ED060(uint64_t a1)
{
  unint64_t v2 = sub_2527EE784();

  return MEMORY[0x270FA00B8](a1, v2);
}

__n128 sub_2527ED09C@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2527EEA48(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v6[4];
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_2527ED0E8(void *a1)
{
  return sub_2527ECDE8(a1);
}

uint64_t sub_2527ED100()
{
  uint64_t v1 = sub_252830DB8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 96) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6 + 8, v5);
}

uint64_t sub_2527ED200(uint64_t a1)
{
  sub_252830DB8();
  uint64_t v3 = v1[3];
  uint64_t v11 = v1[2];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  uint64_t v8 = v1[8];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_252786A30;
  return sub_2527EB34C(a1, v11, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_2527ED370(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_2527ED450;
  return v5(v2 + 32);
}

uint64_t sub_2527ED450()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_2527ED564()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2527ED59C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_252786A30;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269C1E0D0 + dword_269C1E0D0);
  return v6(a1, v4);
}

uint64_t sub_2527ED654(uint64_t a1, uint64_t a2)
{
  v2[20] = a1;
  v2[21] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v2[22] = swift_task_alloc();
  uint64_t v3 = sub_2528307F8();
  v2[23] = v3;
  v2[24] = *(void *)(v3 - 8);
  v2[25] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2527ED744, 0, 0);
}

uint64_t sub_2527ED744()
{
  uint64_t v21 = v0;
  if (qword_269C1CF10 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[20];
  uint64_t v2 = sub_252831158();
  v0[26] = __swift_project_value_buffer(v2, (uint64_t)qword_269C2D3A0);
  sub_2527EE3CC(v1);
  sub_2527EE3CC(v1);
  uint64_t v3 = sub_252831138();
  os_log_type_t v4 = sub_252831628();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = v0[20];
  if (v5)
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v20 = v8;
    v0[18] = sub_2527EB918();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E0F8);
    uint64_t v9 = sub_252831318();
    v0[19] = sub_25278F894(v9, v10, &v20);
    sub_252831698();
    swift_bridgeObjectRelease();
    sub_2527EE424(v6);
    sub_2527EE424(v6);
    _os_log_impl(&dword_25277D000, v3, v4, "Logging metric event %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533BE070](v8, -1, -1);
    MEMORY[0x2533BE070](v7, -1, -1);
  }
  else
  {
    sub_2527EE424(v0[20]);
    sub_2527EE424(v6);
  }

  uint64_t v11 = (_OWORD *)v0[20];
  uint64_t KeyPath = swift_getKeyPath();
  v0[27] = KeyPath;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E0E8);
  uint64_t inited = (_OWORD *)swift_initStackObject();
  v0[28] = inited;
  inited[1] = xmmword_252832B00;
  long long v14 = v11[1];
  long long v15 = v11[2];
  long long v16 = v11[4];
  inited[5] = v11[3];
  inited[6] = v16;
  inited[3] = v14;
  inited[4] = v15;
  inited[2] = *v11;
  sub_2527EE3CC((uint64_t)v11);
  uint64_t v17 = (void *)swift_task_alloc();
  v0[29] = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_2527EDA08;
  uint64_t v18 = v0[22];
  return sub_2527EBB34(v18, (uint64_t)inited, KeyPath, 0);
}

uint64_t sub_2527EDA08()
{
  swift_task_dealloc();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_release();
  return MEMORY[0x270FA2498](sub_2527EDB5C, 0, 0);
}

uint64_t sub_2527EDB5C()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[22];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_252781C54(v3, &qword_26B22BD40);
    os_log_type_t v4 = sub_252831138();
    os_log_type_t v5 = sub_252831618();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_25277D000, v4, v5, "Unable to generate request URL for utility metrics api.", v6, 2u);
      MEMORY[0x2533BE070](v6, -1, -1);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7(0);
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[25], v3, v1);
    sub_252804F18(0xD00000000000001DLL, 0x800000025283CCB0, (uint8_t *)0xD000000000000015, 0x800000025283CCD0);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[30] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_2527EDD5C;
    uint64_t v10 = v0[25];
    return MEMORY[0x270EF1EB0](v10, 0);
  }
}

uint64_t sub_2527EDD5C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v4;
  *(void *)(v7 + 248) = a3;
  *(void *)(v7 + 256) = v3;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v8 = sub_2527EE1E8;
  }
  else
  {
    sub_252782E20(a1, a2);
    uint64_t v8 = sub_2527EDE8C;
  }
  return MEMORY[0x270FA2498](v8, 0, 0);
}

uint64_t sub_2527EDE8C()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (!v1)
  {
    uint64_t v12 = sub_252831138();
    os_log_type_t v13 = sub_252831618();
    if (os_log_type_enabled(v12, v13))
    {
      long long v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v14 = 0;
      _os_log_impl(&dword_25277D000, v12, v13, "Unable to process Metrics API Response.", v14, 2u);
      MEMORY[0x2533BE070](v14, -1, -1);
    }
    long long v15 = *(void **)(v0 + 248);
    uint64_t v17 = *(void *)(v0 + 192);
    uint64_t v16 = *(void *)(v0 + 200);
    uint64_t v18 = *(void *)(v0 + 184);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    goto LABEL_12;
  }
  uint64_t v2 = (void *)v1;
  id v3 = *(id *)(v0 + 248);
  sub_252805814(0xD00000000000001CLL, (char *)0x800000025283CCF0, (unint64_t)objc_msgSend(v2, sel_statusCode), qword_2702C4B58);
  if (objc_msgSend(v2, sel_statusCode) != (id)200)
  {
    id v19 = *(id *)(v0 + 248);
    uint64_t v20 = sub_252831138();
    os_log_type_t v21 = sub_252831618();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v23 = *(void **)(v0 + 248);
    uint64_t v24 = *(void *)(v0 + 192);
    uint64_t v25 = *(void *)(v0 + 200);
    uint64_t v26 = *(void *)(v0 + 184);
    if (v22)
    {
      uint64_t v30 = *(void *)(v0 + 200);
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 134217984;
      *(void *)(v0 + 136) = objc_msgSend(v2, sel_statusCode);
      sub_252831698();

      _os_log_impl(&dword_25277D000, v20, v21, "Request failed : Status Code %ld", v27, 0xCu);
      MEMORY[0x2533BE070](v27, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v30, v26);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v26);
    }
LABEL_12:
    uint64_t v11 = 0;
    goto LABEL_13;
  }
  os_log_type_t v4 = sub_252831138();
  os_log_type_t v5 = sub_252831628();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_25277D000, v4, v5, "Metrics event posted successfully", v6, 2u);
    MEMORY[0x2533BE070](v6, -1, -1);
  }
  uint64_t v7 = *(void **)(v0 + 248);
  uint64_t v9 = *(void *)(v0 + 192);
  uint64_t v8 = *(void *)(v0 + 200);
  uint64_t v10 = *(void *)(v0 + 184);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  uint64_t v11 = 1;
LABEL_13:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v28(v11);
}

uint64_t sub_2527EE1E8()
{
  uint64_t v1 = *(void **)(v0 + 256);
  id v2 = v1;
  id v3 = v1;
  os_log_type_t v4 = sub_252831138();
  os_log_type_t v5 = sub_252831618();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 256);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 128) = v10;
    sub_252831698();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_25277D000, v4, v5, "Metrics log event failed %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D030);
    swift_arrayDestroy();
    MEMORY[0x2533BE070](v8, -1, -1);
    MEMORY[0x2533BE070](v7, -1, -1);
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + 256);
  }
  uint64_t v13 = *(void *)(v0 + 192);
  uint64_t v12 = *(void *)(v0 + 200);
  uint64_t v14 = *(void *)(v0 + 184);

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  long long v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15(0);
}

uint64_t sub_2527EE3CC(uint64_t a1)
{
  return a1;
}

uint64_t sub_2527EE424(uint64_t a1)
{
  return a1;
}

unint64_t sub_2527EE47C()
{
  unint64_t result = qword_269C1E100;
  if (!qword_269C1E100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E100);
  }
  return result;
}

uint64_t destroy for MetricsEvent()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MetricsEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MetricsEvent(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for MetricsEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthorizationFactor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthorizationFactor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent()
{
  return &type metadata for MetricsEvent;
}

unint64_t sub_2527EE784()
{
  unint64_t result = qword_269C1E118;
  if (!qword_269C1E118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E118);
  }
  return result;
}

uint64_t sub_2527EE7D8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x800000025283CD30 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4972656E74726170 && a2 == 0xE900000000000064 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E696F70646E65 && a2 == 0xE800000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000025283CD50 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000025283CD70 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000025283CD90)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_2527EEA48@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E120);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527EE784();
  sub_252831B28();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v39 = 0;
  uint64_t v9 = sub_252831968();
  uint64_t v11 = v10;
  uint64_t v33 = v9;
  char v38 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_252831968();
  uint64_t v14 = v13;
  uint64_t v31 = v12;
  char v37 = 2;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_252831968();
  uint64_t v32 = v16;
  uint64_t v28 = v15;
  uint64_t v30 = v14;
  char v36 = 3;
  swift_bridgeObjectRetain();
  uint64_t v29 = 0;
  uint64_t v27 = sub_252831988();
  char v35 = 4;
  uint64_t v17 = sub_252831988();
  char v34 = 5;
  uint64_t v18 = sub_252831968();
  uint64_t v20 = v19;
  os_log_type_t v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v29 = v18;
  v21(v8, v5);
  swift_bridgeObjectRetain();
  uint64_t v22 = v17;
  uint64_t v23 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v24 = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v33;
  a2[1] = v11;
  a2[2] = v31;
  a2[3] = v23;
  a2[4] = v28;
  a2[5] = v24;
  a2[6] = v27;
  a2[7] = v22;
  a2[8] = v29;
  a2[9] = v20;
  return result;
}

unsigned char *storeEnumTagSinglePayload for MetricsEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2527EEF00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.CodingKeys()
{
  return &type metadata for MetricsEvent.CodingKeys;
}

unint64_t sub_2527EEF3C()
{
  unint64_t result = qword_269C1E128;
  if (!qword_269C1E128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E128);
  }
  return result;
}

unint64_t sub_2527EEF94()
{
  unint64_t result = qword_269C1E130;
  if (!qword_269C1E130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E130);
  }
  return result;
}

unint64_t sub_2527EEFEC()
{
  unint64_t result = qword_269C1E138;
  if (!qword_269C1E138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E138);
  }
  return result;
}

uint64_t sub_2527EF040(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E168);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527F0F10();
  sub_252831B38();
  v9[1] = a2;
  sub_2527F0FB8();
  sub_2528319D8();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2527EF184(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E1B0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527F1370();
  sub_252831B38();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E1A0);
  sub_2527F13C4(&qword_269C1E1B8, &qword_269C1D538);
  sub_252831A18();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_2527EF30C()
{
  return 0xD000000000000018;
}

uint64_t sub_2527EF328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2527F0D1C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2527EF354(uint64_t a1)
{
  unint64_t v2 = sub_2527F0F10();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527EF390(uint64_t a1)
{
  unint64_t v2 = sub_2527F0F10();

  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_2527EF3CC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_2527F0DA4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_2527EF3F8(void *a1)
{
  return sub_2527EF040(a1, *v1);
}

unint64_t sub_2527EF414()
{
  return 0xD000000000000010;
}

uint64_t sub_2527EF430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2527F1138(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2527EF45C(uint64_t a1)
{
  unint64_t v2 = sub_2527F1370();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527EF498(uint64_t a1)
{
  unint64_t v2 = sub_2527F1370();

  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_2527EF4D4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_2527F11C0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_2527EF500(void *a1)
{
  return sub_2527EF184(a1, *v1);
}

uint64_t sub_2527EF51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v5[9] = swift_task_alloc();
  uint64_t v7 = sub_2528307F8();
  v5[10] = v7;
  v5[11] = *(void *)(v7 - 8);
  v5[12] = swift_task_alloc();
  uint64_t v8 = (void *)swift_task_alloc();
  v5[13] = v8;
  *uint64_t v8 = v5;
  v8[1] = sub_2527EF648;
  return sub_2527BAEF8(a5);
}

uint64_t sub_2527EF648()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2527EF744, 0, 0);
}

uint64_t sub_2527EF744()
{
  uint64_t KeyPath = swift_getKeyPath();
  v0[14] = KeyPath;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[15] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2527EF7FC;
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[5];
  return sub_2527C6DCC(v3, v6, v7, v4, v5, KeyPath, 0);
}

uint64_t sub_2527EF7FC()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_2527EF914, 0, 0);
}

uint64_t sub_2527EF914()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[9];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_2527A5E98(v3);
    if (qword_269C1CED8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D2F8);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable to generate request URL for Service Location Lookup", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }

    type metadata accessor for NetworkError();
    sub_2527F1458((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
    swift_allocError();
    *uint64_t v8 = 0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[12], v3, v1);
    sub_252804F18(0xD000000000000011, 0x800000025283CDB0, (uint8_t *)0xD000000000000030, 0x800000025283CDD0);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[16] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_2527EFBD0;
    uint64_t v12 = v0[12];
    return MEMORY[0x270EF1EB0](v12, 0);
  }
}

uint64_t sub_2527EFBD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[17] = a1;
  v5[18] = a2;
  v5[19] = a3;
  v5[20] = v3;
  swift_task_dealloc();
  if (v3) {
    os_log_type_t v6 = sub_2527F0AD0;
  }
  else {
    os_log_type_t v6 = sub_2527EFCE8;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_2527EFCE8()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (!v1)
  {
    if (qword_269C1CED8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_252831158();
    __swift_project_value_buffer(v10, (uint64_t)qword_269C2D2F8);
    uint64_t v11 = sub_252831138();
    os_log_type_t v12 = sub_252831618();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_25277D000, v11, v12, "Unable to process Service Location Response.", v13, 2u);
      MEMORY[0x2533BE070](v13, -1, -1);
    }
    unint64_t v14 = *(void *)(v0 + 144);
    uint64_t v15 = *(void **)(v0 + 152);
    uint64_t v16 = *(void *)(v0 + 136);
    uint64_t v18 = *(void *)(v0 + 88);
    uint64_t v17 = *(void *)(v0 + 96);
    uint64_t v19 = *(void *)(v0 + 80);

    type metadata accessor for NetworkError();
    sub_2527F1458((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
    swift_allocError();
    *uint64_t v20 = 2;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_252782E20(v16, v14);
LABEL_42:

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    goto LABEL_43;
  }
  uint64_t v2 = (void *)v1;
  uint64_t v3 = (uint64_t *)(v0 + 24);
  id v4 = *(id *)(v0 + 152);
  sub_252805814(0xD00000000000001BLL, (char *)0x800000025283CE10, (unint64_t)objc_msgSend(v2, sel_statusCode), qword_2702C4B30);
  id v5 = objc_msgSend(v2, sel_statusCode);
  switch((unint64_t)v5)
  {
    case 0x190uLL:
      if (qword_269C1CED8 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_252831158();
      __swift_project_value_buffer(v6, (uint64_t)qword_269C2D2F8);
      uint64_t v7 = sub_252831138();
      os_log_type_t v8 = sub_252831618();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v9 = 0;
        _os_log_impl(&dword_25277D000, v7, v8, "BAD REQUEST | Check request", v9, 2u);
        MEMORY[0x2533BE070](v9, -1, -1);
      }
      goto LABEL_41;
    case 0x191uLL:
      if (qword_269C1CED8 != -1) {
        swift_once();
      }
      uint64_t v44 = sub_252831158();
      __swift_project_value_buffer(v44, (uint64_t)qword_269C2D2F8);
      uint64_t v7 = sub_252831138();
      os_log_type_t v45 = sub_252831618();
      if (os_log_type_enabled(v7, v45))
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v46 = 0;
        _os_log_impl(&dword_25277D000, v7, v45, "Request Unauthorized.", v46, 2u);
        MEMORY[0x2533BE070](v46, -1, -1);
      }
      goto LABEL_41;
    case 0x192uLL:
    case 0x193uLL:
    case 0x194uLL:
    case 0x195uLL:
    case 0x196uLL:
    case 0x197uLL:
    case 0x198uLL:
    case 0x199uLL:
    case 0x19AuLL:
    case 0x19BuLL:
    case 0x19DuLL:
    case 0x19EuLL:
    case 0x19FuLL:
    case 0x1A0uLL:
    case 0x1A1uLL:
    case 0x1A2uLL:
    case 0x1A3uLL:
    case 0x1A4uLL:
    case 0x1A5uLL:
    case 0x1A6uLL:
    case 0x1A7uLL:
    case 0x1A8uLL:
    case 0x1A9uLL:
    case 0x1AAuLL:
    case 0x1ABuLL:
    case 0x1ACuLL:
      goto LABEL_23;
    case 0x19CuLL:
      if (qword_269C1CED8 != -1) {
        swift_once();
      }
      uint64_t v47 = sub_252831158();
      __swift_project_value_buffer(v47, (uint64_t)qword_269C2D2F8);
      uint64_t v7 = sub_252831138();
      os_log_type_t v48 = sub_252831618();
      if (os_log_type_enabled(v7, v48))
      {
        uint64_t v49 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v49 = 0;
        _os_log_impl(&dword_25277D000, v7, v48, "Access Token expired. Retry after refreshing token", v49, 2u);
        MEMORY[0x2533BE070](v49, -1, -1);
      }
      goto LABEL_41;
    case 0x1ADuLL:
      if (qword_269C1CED8 != -1) {
        swift_once();
      }
      uint64_t v50 = sub_252831158();
      __swift_project_value_buffer(v50, (uint64_t)qword_269C2D2F8);
      uint64_t v7 = sub_252831138();
      os_log_type_t v51 = sub_252831618();
      if (os_log_type_enabled(v7, v51))
      {
        uint64_t v52 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v52 = 0;
        _os_log_impl(&dword_25277D000, v7, v51, "TOO MANY REQUESTS | Server rejected calls cause of too many requests being made", v52, 2u);
        MEMORY[0x2533BE070](v52, -1, -1);
      }
LABEL_41:
      unint64_t v53 = *(void *)(v0 + 144);
      uint64_t v15 = *(void **)(v0 + 152);
      uint64_t v54 = *(void *)(v0 + 136);
      uint64_t v18 = *(void *)(v0 + 88);
      uint64_t v17 = *(void *)(v0 + 96);
      uint64_t v19 = *(void *)(v0 + 80);

      type metadata accessor for NetworkError();
      sub_2527F1458((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      sub_252782E20(v54, v53);

      goto LABEL_42;
    default:
      if (v5 == (id)500)
      {
        if (qword_269C1CED8 != -1) {
          swift_once();
        }
        uint64_t v57 = sub_252831158();
        __swift_project_value_buffer(v57, (uint64_t)qword_269C2D2F8);
        uint64_t v58 = sub_252831138();
        os_log_type_t v59 = sub_252831618();
        if (os_log_type_enabled(v58, v59))
        {
          uint64_t v60 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v60 = 0;
          _os_log_impl(&dword_25277D000, v58, v59, "Internal Server Error", v60, 2u);
          MEMORY[0x2533BE070](v60, -1, -1);
        }
        unint64_t v62 = *(void *)(v0 + 144);
        unint64_t v61 = *(void **)(v0 + 152);
        uint64_t v63 = *(void *)(v0 + 136);
        uint64_t v64 = *(void *)(v0 + 88);
        uint64_t v75 = *(void *)(v0 + 80);
        uint64_t v76 = *(void *)(v0 + 96);

        goto LABEL_53;
      }
      if (v5 != (id)200)
      {
LABEL_23:
        if (qword_269C1CED8 != -1) {
          swift_once();
        }
        char v36 = *(void **)(v0 + 152);
        uint64_t v37 = sub_252831158();
        __swift_project_value_buffer(v37, (uint64_t)qword_269C2D2F8);
        id v38 = v36;
        char v39 = sub_252831138();
        os_log_type_t v40 = sub_252831618();
        BOOL v41 = os_log_type_enabled(v39, v40);
        id v42 = *(void **)(v0 + 152);
        if (v41)
        {
          id v43 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)id v43 = 134217984;
          *(void *)(v0 + 16) = objc_msgSend(v2, sel_statusCode);
          sub_252831698();

          _os_log_impl(&dword_25277D000, v39, v40, "Request failed : Status Code %ld", v43, 0xCu);
          MEMORY[0x2533BE070](v43, -1, -1);
        }
        else
        {
        }
        unint64_t v62 = *(void *)(v0 + 144);
        unint64_t v61 = *(void **)(v0 + 152);
        uint64_t v63 = *(void *)(v0 + 136);
        uint64_t v64 = *(void *)(v0 + 88);
        uint64_t v75 = *(void *)(v0 + 80);
        uint64_t v76 = *(void *)(v0 + 96);
LABEL_53:
        type metadata accessor for NetworkError();
        sub_2527F1458((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
        swift_allocError();
        void *v65 = objc_msgSend(v2, sel_statusCode);
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_252782E20(v63, v62);

        (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v76, v75);
        goto LABEL_43;
      }
      if (qword_269C1CED8 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_252831158();
      __swift_project_value_buffer(v21, (uint64_t)qword_269C2D2F8);
      uint64_t v22 = sub_252831138();
      os_log_type_t v23 = sub_252831628();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl(&dword_25277D000, v22, v23, "Service Locations Response received", v24, 2u);
        MEMORY[0x2533BE070](v24, -1, -1);
      }
      uint64_t v25 = *(void **)(v0 + 160);

      sub_252830828();
      swift_allocObject();
      sub_252830818();
      sub_2527F0B58();
      sub_252830808();
      uint64_t v26 = v25;
      swift_release();
      if (v25) {
        goto LABEL_20;
      }
      uint64_t v66 = *v3;
      if (!*v3)
      {
        uint64_t v71 = sub_252831138();
        os_log_type_t v72 = sub_252831618();
        if (os_log_type_enabled(v71, v72))
        {
          uint64_t v73 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v73 = 0;
          _os_log_impl(&dword_25277D000, v71, v72, "Error while decoding response from server", v73, 2u);
          MEMORY[0x2533BE070](v73, -1, -1);
        }

        type metadata accessor for NetworkError();
        sub_2527F1458((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
        uint64_t v26 = (void *)swift_allocError();
        *long long v74 = 1;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
LABEL_20:
        uint64_t v27 = sub_252831138();
        os_log_type_t v28 = sub_252831618();
        if (os_log_type_enabled(v27, v28))
        {
          uint64_t v29 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v29 = 0;
          _os_log_impl(&dword_25277D000, v27, v28, "Error while decoding response from server", v29, 2u);
          MEMORY[0x2533BE070](v29, -1, -1);
        }
        unint64_t v30 = *(void *)(v0 + 144);
        uint64_t v31 = *(void **)(v0 + 152);
        uint64_t v32 = *(void *)(v0 + 136);
        uint64_t v34 = *(void *)(v0 + 88);
        uint64_t v33 = *(void *)(v0 + 96);
        uint64_t v35 = *(void *)(v0 + 80);

        sub_252825138(v26);
        swift_willThrow();
        sub_252782E20(v32, v30);

        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
LABEL_43:
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v55 = *(uint64_t (**)(void))(v0 + 8);
        return v55();
      }
      unint64_t v67 = *(void *)(v0 + 144);
      uint64_t v68 = *(void **)(v0 + 152);
      uint64_t v69 = *(void *)(v0 + 136);
      (*(void (**)(void, void))(*(void *)(v0 + 88) + 8))(*(void *)(v0 + 96), *(void *)(v0 + 80));

      sub_252782E20(v69, v67);
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v70 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v70(v66);
  }
}

uint64_t sub_2527F0AD0()
{
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

unint64_t sub_2527F0B58()
{
  unint64_t result = qword_269C1E148;
  if (!qword_269C1E148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E148);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for UtilityServiceLocationsResponse(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for UtilityServiceLocationsResponse()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for UtilityServiceLocationsResponse(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void *assignWithTake for UtilityServiceLocationsResponse(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UtilityServiceLocationsResponse(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UtilityServiceLocationsResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UtilityServiceLocationsResponse()
{
  return &type metadata for UtilityServiceLocationsResponse;
}

uint64_t sub_2527F0D1C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x800000025283CE30)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_252831A58();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void *sub_2527F0DA4(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E150);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527F0F10();
  sub_252831B28();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    sub_2527F0F64();
    sub_252831958();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_2527F0F10()
{
  unint64_t result = qword_269C1E158;
  if (!qword_269C1E158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E158);
  }
  return result;
}

unint64_t sub_2527F0F64()
{
  unint64_t result = qword_269C1E160;
  if (!qword_269C1E160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E160);
  }
  return result;
}

unint64_t sub_2527F0FB8()
{
  unint64_t result = qword_269C1E170;
  if (!qword_269C1E170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E170);
  }
  return result;
}

ValueMetadata *type metadata accessor for UtilityServiceLocationsResponse.CodingKeys()
{
  return &type metadata for UtilityServiceLocationsResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for UtilityServiceLocations()
{
  return &type metadata for UtilityServiceLocations;
}

unint64_t sub_2527F1034()
{
  unint64_t result = qword_269C1E178;
  if (!qword_269C1E178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E178);
  }
  return result;
}

unint64_t sub_2527F108C()
{
  unint64_t result = qword_269C1E180;
  if (!qword_269C1E180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E180);
  }
  return result;
}

unint64_t sub_2527F10E4()
{
  unint64_t result = qword_269C1E188;
  if (!qword_269C1E188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E188);
  }
  return result;
}

uint64_t sub_2527F1138(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000025283A670)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_252831A58();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void *sub_2527F11C0(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E190);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527F1370();
  sub_252831B28();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E1A0);
    sub_2527F13C4(&qword_269C1E1A8, &qword_269C1D560);
    sub_252831998();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_2527F1370()
{
  unint64_t result = qword_269C1E198;
  if (!qword_269C1E198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E198);
  }
  return result;
}

uint64_t sub_2527F13C4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C1E1A0);
    sub_2527F1458(a2, (void (*)(uint64_t))type metadata accessor for UtilityServiceLocation);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2527F1458(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s19HomeUtilityServices31UtilityServiceLocationsResponseV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2527F153CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for UtilityServiceLocations.CodingKeys()
{
  return &type metadata for UtilityServiceLocations.CodingKeys;
}

unint64_t sub_2527F1578()
{
  unint64_t result = qword_269C1E1C0;
  if (!qword_269C1E1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E1C0);
  }
  return result;
}

unint64_t sub_2527F15D0()
{
  unint64_t result = qword_269C1E1C8;
  if (!qword_269C1E1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E1C8);
  }
  return result;
}

unint64_t sub_2527F1628()
{
  unint64_t result = qword_269C1E1D0;
  if (!qword_269C1E1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269C1E1D0);
  }
  return result;
}

uint64_t sub_2527F1680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a8;
  v8[6] = v13;
  v8[3] = a4;
  v8[4] = a5;
  v8[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v8[7] = swift_task_alloc();
  uint64_t v9 = sub_2528307F8();
  v8[8] = v9;
  v8[9] = *(void *)(v9 - 8);
  v8[10] = swift_task_alloc();
  v8[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  v8[12] = swift_task_alloc();
  uint64_t v10 = sub_252830BD8();
  v8[13] = v10;
  v8[14] = *(void *)(v10 - 8);
  v8[15] = swift_task_alloc();
  unsigned char v8[16] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2527F182C, 0, 0);
}

uint64_t sub_2527F182C()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[12];
  sub_25279D788(v0[5], v0[6]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_252781C54(v0[12], &qword_26B22BD58);
    if (qword_26B22BEE0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_26B22C058);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Request URL for Utility Configuration API not found", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }

    (*(void (**)(void, uint64_t, uint64_t, void))(v0[9] + 56))(v0[2], 1, 1, v0[8]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    uint64_t v10 = v0[15];
    uint64_t v11 = v0[16];
    uint64_t v12 = v0[13];
    uint64_t v13 = v0[14];
    uint64_t v14 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v13 + 32))(v11, v0[12], v12);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v10, v11, v12);
    sub_252830798();
    sub_252830778();
    if (v14)
    {
      unint64_t v15 = v0[4];
      uint64_t v16 = HIBYTE(v15) & 0xF;
      if ((v15 & 0x2000000000000000) == 0) {
        uint64_t v16 = v0[3] & 0xFFFFFFFFFFFFLL;
      }
      if (v16) {
        sub_2528307B8();
      }
    }
    sub_252804CA4(v0[10]);
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C1D928 + dword_269C1D928);
    uint64_t v17 = (void *)swift_task_alloc();
    v0[17] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_2527F1B44;
    uint64_t v18 = v0[10];
    uint64_t v20 = v0[6];
    uint64_t v19 = v0[7];
    uint64_t v21 = v0[5];
    return v22(v19, v18, v21, v20);
  }
}

uint64_t sub_2527F1B44()
{
  uint64_t v3 = (void *)*v1;
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v4 = v2[10];
  uint64_t v5 = v2[9];
  uint64_t v6 = v2[8];
  if (v0)
  {

    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v3[20] = v7;
    v7(v4, v6);
    os_log_type_t v8 = sub_2527F1F90;
  }
  else
  {
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v3[18] = v9;
    v3[19] = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v9(v4, v6);
    os_log_type_t v8 = sub_2527F1CE8;
  }
  return MEMORY[0x270FA2498](v8, 0, 0);
}

uint64_t sub_2527F1CE8()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[7];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = (void (*)(uint64_t, uint64_t))v0[18];
    sub_252781C54(v3, &qword_26B22BD40);
    if (qword_26B22BEE0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_252831158();
    __swift_project_value_buffer(v5, (uint64_t)qword_26B22C058);
    uint64_t v6 = sub_252831138();
    os_log_type_t v7 = sub_252831618();
    if (os_log_type_enabled(v6, v7))
    {
      os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v8 = 0;
      _os_log_impl(&dword_25277D000, v6, v7, "Unable to sign Utility Configuration request", v8, 2u);
      MEMORY[0x2533BE070](v8, -1, -1);
    }
    uint64_t v9 = v0[16];
    uint64_t v10 = v0[13];
    uint64_t v11 = v0[14];
    uint64_t v12 = v0[11];
    uint64_t v13 = v0[8];

    v4(v12, v13);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    uint64_t v14 = 1;
  }
  else
  {
    unint64_t v15 = (void (*)(uint64_t, uint64_t))v0[18];
    uint64_t v21 = v0[16];
    uint64_t v17 = v0[13];
    uint64_t v16 = v0[14];
    uint64_t v18 = v0[11];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[2], v3, v1);
    sub_2528307E8();
    v15(v18, v1);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v21, v17);
    uint64_t v14 = 0;
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[9] + 56))(v0[2], v14, 1, v0[8]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_2527F1F90()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[9] + 56))(v0[7], 1, 1, v0[8]);
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[20];
  sub_252781C54(v0[7], &qword_26B22BD40);
  if (qword_26B22BEE0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_252831158();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B22C058);
  uint64_t v3 = sub_252831138();
  os_log_type_t v4 = sub_252831618();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_25277D000, v3, v4, "Unable to sign Utility Configuration request", v5, 2u);
    MEMORY[0x2533BE070](v5, -1, -1);
  }
  uint64_t v6 = v0[16];
  uint64_t v7 = v0[13];
  uint64_t v8 = v0[14];
  uint64_t v9 = v0[11];
  uint64_t v10 = v0[8];

  v1(v9, v10);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[9] + 56))(v0[2], 1, 1, v0[8]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

void *__swift_memcpy544_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x220uLL);
}

ValueMetadata *type metadata accessor for InternalUtilityConfig()
{
  return &type metadata for InternalUtilityConfig;
}

uint64_t sub_2527F21B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[156] = a3;
  v3[155] = a2;
  v3[154] = a1;
  v3[157] = type metadata accessor for NetworkError();
  v3[158] = swift_task_alloc();
  uint64_t v4 = sub_252830B28();
  v3[159] = v4;
  v3[160] = *(void *)(v4 - 8);
  v3[161] = swift_task_alloc();
  uint64_t v5 = sub_252830BD8();
  v3[162] = v5;
  v3[163] = *(void *)(v5 - 8);
  v3[164] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  v3[165] = swift_task_alloc();
  v3[166] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v3[167] = swift_task_alloc();
  uint64_t v6 = sub_2528307F8();
  v3[168] = v6;
  v3[169] = *(void *)(v6 - 8);
  v3[170] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD70);
  v3[171] = swift_task_alloc();
  uint64_t v7 = sub_252830DB8();
  v3[172] = v7;
  v3[173] = *(void *)(v7 - 8);
  v3[174] = swift_task_alloc();
  v3[175] = swift_task_alloc();
  v3[176] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2527F247C, 0, 0);
}

uint64_t sub_2527F247C()
{
  uint64_t v69 = v0;
  if (qword_26B22BF60 != -1) {
    swift_once();
  }
  __dst[0] = qword_26B22C020;
  __dst[1] = *(void *)algn_26B22C028;
  swift_bridgeObjectRetain();
  sub_2528313A8();
  sub_252818CC0();
  swift_bridgeObjectRetain();
  sub_2528313A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = __dst[1];
  *(void *)(v0 + 1416) = __dst[0];
  *(void *)(v0 + 1424) = v1;
  id v2 = objc_msgSend(self, sel_defaultManager);
  uint64_t v3 = (void *)sub_252831298();
  unsigned int v4 = objc_msgSend(v2, sel_fileExistsAtPath_, v3);
  *(unsigned char *)(v0 + 1520) = v4;

  if (!v4 || (sub_2527FA544() & 1) == 0)
  {
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_252831158();
    __swift_project_value_buffer(v31, (uint64_t)qword_269C2D250);
    uint64_t v32 = sub_252831138();
    os_log_type_t v33 = sub_252831618();
    if (!os_log_type_enabled(v32, v33)) {
      goto LABEL_17;
    }
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v34 = 0;
    uint64_t v35 = "No perviously fetched Config file found on disk. Proceed to fetch new file.";
    goto LABEL_16;
  }
  sub_2527F9A24(*(void *)(v0 + 1232));
  uint64_t v5 = (__CFString *)sub_252831298();
  uint64_t v6 = (__CFString *)sub_252831298();
  CFPropertyListRef v7 = CFPreferencesCopyAppValue(v5, v6);

  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v0 + 1384);
  uint64_t v9 = *(void *)(v0 + 1376);
  uint64_t v10 = *(void *)(v0 + 1368);
  if (!v7)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v8 + 56))(*(void *)(v0 + 1368), 1, 1, *(void *)(v0 + 1376));
    goto LABEL_22;
  }
  *(void *)(v0 + 1216) = v7;
  int v11 = swift_dynamicCast();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v10, v11 ^ 1u, 1, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v9) == 1)
  {
LABEL_22:
    sub_252781C54(*(void *)(v0 + 1368), &qword_26B22BD70);
    goto LABEL_23;
  }
  uint64_t v12 = *(void *)(v0 + 1400);
  uint64_t v13 = *(void *)(v0 + 1384);
  uint64_t v14 = *(void *)(v0 + 1376);
  (*(void (**)(void, void, uint64_t))(v13 + 32))(*(void *)(v0 + 1408), *(void *)(v0 + 1368), v14);
  sub_252830D78();
  char v15 = sub_252830D28();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v16(v12, v14);
  if (v15)
  {
    if (qword_26B22BEF8 != -1) {
      swift_once();
    }
    uint64_t v17 = *(void *)(v0 + 1408);
    uint64_t v18 = *(void *)(v0 + 1392);
    uint64_t v19 = *(void *)(v0 + 1384);
    uint64_t v20 = *(void *)(v0 + 1376);
    uint64_t v21 = sub_252831158();
    __swift_project_value_buffer(v21, (uint64_t)qword_26B22C088);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v18, v17, v20);
    uint64_t v22 = sub_252831138();
    os_log_type_t v23 = sub_252831628();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v25 = *(void *)(v0 + 1392);
    if (v24)
    {
      uint64_t v66 = *(void *)(v0 + 1376);
      uint64_t v67 = v21;
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      __dst[0] = v27;
      *(_DWORD *)uint64_t v26 = 136315138;
      uint64_t v28 = sub_252808984();
      *(void *)(v0 + 1224) = sub_25278F894(v28, v29, __dst);
      sub_252831698();
      swift_bridgeObjectRelease();
      v16(v25, v66);
      _os_log_impl(&dword_25277D000, v22, v23, "Utility config will expire in %s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533BE070](v27, -1, -1);
      unint64_t v30 = v26;
      uint64_t v21 = v67;
      MEMORY[0x2533BE070](v30, -1, -1);
    }
    else
    {
      v16(*(void *)(v0 + 1392), *(void *)(v0 + 1376));
    }

    os_log_type_t v45 = sub_252831138();
    os_log_type_t v46 = sub_252831628();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v47 = 0;
      _os_log_impl(&dword_25277D000, v45, v46, "Utility Configuration exists locally and is Valid. Skip Fetching.", v47, 2u);
      MEMORY[0x2533BE070](v47, -1, -1);
    }
    uint64_t v48 = *(void *)(v0 + 1408);
    uint64_t v49 = *(void *)(v0 + 1376);

    v16(v48, v49);
    uint64_t v50 = *(void *)(v0 + 1288);
    uint64_t v51 = *(void *)(v0 + 1280);
    uint64_t v52 = *(void *)(v0 + 1272);
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 1304) + 56))(*(void *)(v0 + 1320), 1, 1, *(void *)(v0 + 1296));
    (*(void (**)(uint64_t, void, uint64_t))(v51 + 104))(v50, *MEMORY[0x263F06E50], v52);
    sub_252830BB8();
    uint64_t v53 = sub_252830BF8();
    unint64_t v55 = v54;
    sub_252830828();
    swift_allocObject();
    sub_252830818();
    sub_2527FC380();
    sub_252830808();
    swift_release();
    memcpy(__dst, (const void *)(v0 + 16), 0x220uLL);
    if (qword_26B22BEF8 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v21, (uint64_t)qword_26B22C088);
    uint64_t v56 = sub_252831138();
    os_log_type_t v57 = sub_252831628();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v58 = 0;
      _os_log_impl(&dword_25277D000, v56, v57, "> Utility Config values being returned", v58, 2u);
      MEMORY[0x2533BE070](v58, -1, -1);
    }
    uint64_t v59 = *(void *)(v0 + 1312);
    uint64_t v60 = *(void *)(v0 + 1304);
    uint64_t v61 = *(void *)(v0 + 1296);

    unint64_t v62 = (objc_class *)type metadata accessor for UtilityConfiguration();
    uint64_t v63 = (char *)objc_allocWithZone(v62);
    memcpy(&v63[OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config], __dst, 0x220uLL);
    *(void *)(v0 + 1144) = v63;
    *(void *)(v0 + 1152) = v62;
    id v64 = objc_msgSendSuper2((objc_super *)(v0 + 1144), sel_init);
    sub_252782E20(v53, v55);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v65 = *(uint64_t (**)(id))(v0 + 8);
    return v65(v64);
  }
  v16(*(void *)(v0 + 1408), *(void *)(v0 + 1376));
LABEL_23:
  sub_2527F9B94(*(void *)(v0 + 1232));
  BOOL v41 = (__CFString *)sub_252831298();
  id v42 = (__CFString *)sub_252831298();
  CFPropertyListRef v43 = CFPreferencesCopyAppValue(v41, v42);

  swift_bridgeObjectRelease();
  if (v43)
  {
    *(void *)(v0 + 1200) = v43;
    if (swift_dynamicCast())
    {
      uint64_t v36 = *(void *)(v0 + 1128);
      uint64_t v37 = *(void *)(v0 + 1136);
      goto LABEL_18;
    }
  }
  if (qword_26B22BEF8 != -1) {
    swift_once();
  }
  uint64_t v44 = sub_252831158();
  __swift_project_value_buffer(v44, (uint64_t)qword_26B22C088);
  uint64_t v32 = sub_252831138();
  os_log_type_t v33 = sub_252831618();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v34 = 0;
    uint64_t v35 = "Config file exists on disk. But no eTag Value!";
LABEL_16:
    _os_log_impl(&dword_25277D000, v32, v33, v35, v34, 2u);
    MEMORY[0x2533BE070](v34, -1, -1);
  }
LABEL_17:

  uint64_t v36 = 0;
  uint64_t v37 = 0;
LABEL_18:
  *(void *)(v0 + 1440) = v37;
  *(void *)(v0 + 1432) = v36;
  id v38 = (void *)swift_task_alloc();
  *(void *)(v0 + 1448) = v38;
  *id v38 = v0;
  v38[1] = sub_2527F3224;
  uint64_t v39 = *(void *)(v0 + 1248);
  return sub_2527BAEF8(v39);
}

uint64_t sub_2527F3224()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2527F3320, 0, 0);
}

uint64_t sub_2527F3320()
{
  uint64_t v1 = v0[155];
  uint64_t v2 = v0[154];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFF0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_252832B00;
  *(void *)(v3 + 32) = 0x497974696C697475;
  *(void *)(v3 + 40) = 0xE900000000000064;
  *(void *)(v3 + 48) = v2;
  *(void *)(v3 + 56) = v1;
  swift_bridgeObjectRetain();
  v0[182] = sub_252786E88(v3);
  uint64_t KeyPath = swift_getKeyPath();
  v0[183] = KeyPath;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[184] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_2527F345C;
  uint64_t v6 = v0[180];
  uint64_t v7 = v0[179];
  uint64_t v8 = v0[167];
  uint64_t v9 = v0[155];
  uint64_t v10 = v0[154];
  return sub_2527F1680(v8, v10, v9, v7, v6, 21333, 0xE200000000000000, KeyPath);
}

uint64_t sub_2527F345C()
{
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_2527F3590, 0, 0);
}

uint64_t sub_2527F3590()
{
  uint64_t v1 = v0[169];
  uint64_t v2 = v0[168];
  uint64_t v3 = v0[167];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_252781C54(v3, &qword_26B22BD40);
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D250);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable generate request URL for Utility Configuration Fetch", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }

    sub_2527B3838();
    swift_allocError();
    *uint64_t v8 = 0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v1 + 32))(v0[170], v3, v2);
    sub_252804F18(0xD000000000000013, 0x800000025283CE50, (uint8_t *)0xD00000000000001ELL, 0x800000025283CE70);
    int v11 = (void *)swift_task_alloc();
    v0[185] = v11;
    *int v11 = v0;
    v11[1] = sub_2527F38BC;
    uint64_t v12 = v0[170];
    return MEMORY[0x270EF1EB0](v12, 0);
  }
}

uint64_t sub_2527F38BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[186] = a1;
  v5[187] = a2;
  v5[188] = a3;
  v5[189] = v3;
  swift_task_dealloc();
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    os_log_type_t v6 = sub_2527F4DE4;
  }
  else
  {
    os_log_type_t v6 = sub_2527F39F0;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_2527F39F0()
{
  uint64_t v126 = v0;
  uint64_t v1 = (void *)v0;
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  unint64_t v3 = 0x26B22B000uLL;
  if (!v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_26B22BEF8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_252831158();
    __swift_project_value_buffer(v14, (uint64_t)qword_26B22C088);
    char v15 = sub_252831138();
    os_log_type_t v16 = sub_252831618();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_25277D000, v15, v16, "Unable to process Utility Territory Configuration Response.", v17, 2u);
      MEMORY[0x2533BE070](v17, -1, -1);
    }
    uint64_t v18 = *(void **)(v0 + 1504);
    unint64_t v19 = v1[187];
    uint64_t v20 = v1[186];

    sub_2527B3838();
    uint64_t v13 = (void *)swift_allocError();
    *uint64_t v21 = 2;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_46;
  }
  uint64_t v4 = (void *)v2;
  id v5 = *(id *)(v0 + 1504);
  unint64_t v6 = 0x265382000uLL;
  sub_252805814(0xD00000000000001CLL, (char *)0x800000025283CE90, (unint64_t)objc_msgSend(v4, sel_statusCode), qword_2702C4128);
  id v7 = objc_msgSend(v4, sel_statusCode);
  swift_bridgeObjectRelease();
  if (v7 == (id)304)
  {
    if (*((unsigned char *)v1 + 1520) != 1 || !v1[180])
    {
      swift_bridgeObjectRelease();
      if (qword_26B22BEF8 != -1) {
        swift_once();
      }
      os_log_type_t v45 = (void *)v1[188];
      uint64_t v46 = sub_252831158();
      __swift_project_value_buffer(v46, (uint64_t)qword_26B22C088);
      id v47 = v45;
      uint64_t v48 = sub_252831138();
      os_log_type_t v49 = sub_252831608();
      BOOL v50 = os_log_type_enabled(v48, v49);
      uint64_t v51 = (void *)v1[188];
      uint64_t v124 = v1;
      if (v50)
      {
        uint64_t v122 = v1 + 148;
        uint64_t v52 = (uint8_t *)swift_slowAlloc();
        uint64_t v123 = swift_slowAlloc();
        __src[0] = v123;
        *(_DWORD *)uint64_t v52 = 136315138;
        id v53 = objc_msgSend(v4, sel_allHeaderFields);
        sub_252831228();

        uint64_t v54 = sub_252831238();
        unint64_t v56 = v55;
        swift_bridgeObjectRelease();
        *uint64_t v122 = sub_25278F894(v54, v56, __src);
        sub_252831698();
        unint64_t v3 = 0x26B22B000;
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_25277D000, v48, v49, "Headers: %s", v52, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2533BE070](v123, -1, -1);
        MEMORY[0x2533BE070](v52, -1, -1);
      }
      else
      {
      }
      id v64 = sub_252831138();
      os_log_type_t v65 = sub_252831608();
      if (os_log_type_enabled(v64, v65))
      {
        uint64_t v66 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v66 = 0;
        _os_log_impl(&dword_25277D000, v64, v65, "Server return 304, but inconsistency in stored Config detected!", v66, 2u);
        MEMORY[0x2533BE070](v66, -1, -1);
      }
      uint64_t v1 = v124;
      uint64_t v67 = (void *)v124[188];
      unint64_t v68 = v124[187];
      uint64_t v69 = v124[186];
      uint64_t v70 = v124[154];

      sub_2527FA040(v70);
      sub_2527E4C00();
      uint64_t v13 = (void *)swift_allocError();
      unsigned char *v71 = 1;
      swift_willThrow();

      uint64_t v59 = v69;
      unint64_t v60 = v68;
      goto LABEL_41;
    }
    if (qword_26B22BEF8 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_252831158();
    __swift_project_value_buffer(v22, (uint64_t)qword_26B22C088);
    os_log_type_t v23 = sub_252831138();
    os_log_type_t v24 = sub_252831608();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_25277D000, v23, v24, "Utility Territory on disk unmodified. Use existing file on disk.", v25, 2u);
      MEMORY[0x2533BE070](v25, -1, -1);
    }
    uint64_t v26 = (void *)v1[189];
    uint64_t v27 = v1[154];

    sub_2527F9C94((uint64_t)v4, v27);
    uint64_t v28 = (void *)v1[188];
    unint64_t v29 = v1[187];
    uint64_t v30 = v1[186];
    if (!v26)
    {
      (*(void (**)(void, void))(v1[169] + 8))(v1[170], v1[168]);

      sub_252782E20(v30, v29);
      goto LABEL_61;
    }
    uint64_t v13 = v26;
    swift_bridgeObjectRelease();

LABEL_35:
    uint64_t v59 = v30;
    unint64_t v60 = v29;
LABEL_41:
    sub_252782E20(v59, v60);
LABEL_47:
    id v77 = v13;
    if (*(void *)(v3 + 3832) != -1) {
      swift_once();
    }
    uint64_t v78 = sub_252831158();
    __swift_project_value_buffer(v78, (uint64_t)qword_26B22C088);
    id v79 = v13;
    id v80 = v13;
    uint64_t v81 = sub_252831138();
    os_log_type_t v82 = sub_252831618();
    if (os_log_type_enabled(v81, v82))
    {
      uint64_t v83 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v84 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v83 = 138412290;
      id v85 = v13;
      uint64_t v86 = v1;
      uint64_t v87 = _swift_stdlib_bridgeErrorToNSError();
      v86[151] = v87;
      sub_252831698();
      *os_log_type_t v84 = v87;
      uint64_t v1 = v86;

      _os_log_impl(&dword_25277D000, v81, v82, "Error while trying to fetch Utility Territory Config from server %@", v83, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D030);
      swift_arrayDestroy();
      MEMORY[0x2533BE070](v84, -1, -1);
      MEMORY[0x2533BE070](v83, -1, -1);
    }
    else
    {
    }
    v1[147] = v13;
    id v88 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4C0);
    int v89 = swift_dynamicCast();
    uint64_t v90 = v1[170];
    uint64_t v91 = v1[169];
    uint64_t v92 = v1[168];
    if (v89)
    {
      sub_2527D325C(v1[158]);
      swift_willThrow();
    }
    else
    {
      sub_252826B80(v13);
      swift_willThrow();
    }
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v90, v92);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v93 = (uint64_t (*)(void))v1[1];
    return v93();
  }
  if (v7 != (id)200)
  {
    swift_bridgeObjectRelease();
    if (qword_26B22BEF8 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_252831158();
    __swift_project_value_buffer(v31, (uint64_t)qword_26B22C088);
    uint64_t v32 = sub_252831138();
    os_log_type_t v33 = sub_252831618();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl(&dword_25277D000, v32, v33, "Error while checking for Utility Territory Config", v34, 2u);
      MEMORY[0x2533BE070](v34, -1, -1);
    }
    uint64_t v35 = (void *)v1[188];

    id v36 = v35;
    id v37 = objc_msgSend(v4, sel_description);
    uint64_t v38 = sub_2528312A8();
    unint64_t v40 = v39;

    swift_bridgeObjectRetain();
    BOOL v41 = sub_252831138();
    os_log_type_t v42 = sub_252831618();
    if (os_log_type_enabled(v41, v42))
    {
      CFPropertyListRef v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      __src[0] = v44;
      *(_DWORD *)CFPropertyListRef v43 = 136315138;
      swift_bridgeObjectRetain();
      v1[149] = sub_25278F894(v38, v40, __src);
      unint64_t v6 = 0x265382000;
      sub_252831698();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25277D000, v41, v42, "%s", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533BE070](v44, -1, -1);
      MEMORY[0x2533BE070](v43, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    unint64_t v3 = 0x26B22B000;
    os_log_type_t v57 = (void *)v1[188];
    unint64_t v29 = v1[187];
    uint64_t v30 = v1[186];
    sub_2527B3838();
    uint64_t v13 = (void *)swift_allocError();
    *uint64_t v58 = [v4 *(SEL *)(v6 + 3304)];
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    goto LABEL_35;
  }
  if (qword_26B22BEF8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_252831158();
  __swift_project_value_buffer(v8, (uint64_t)qword_26B22C088);
  uint64_t v9 = sub_252831138();
  os_log_type_t v10 = sub_252831608();
  if (os_log_type_enabled(v9, v10))
  {
    int v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v11 = 0;
    _os_log_impl(&dword_25277D000, v9, v10, "New Configuration Fetched", v11, 2u);
    MEMORY[0x2533BE070](v11, -1, -1);
  }
  uint64_t v12 = (void *)v1[189];

  sub_2527F53CC(__src);
  uint64_t v13 = v12;
  if (v12)
  {
    swift_bridgeObjectRelease();
    uint64_t v73 = sub_252831138();
    os_log_type_t v74 = sub_252831618();
    if (os_log_type_enabled(v73, v74))
    {
      uint64_t v76 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v76 = 0;
      _os_log_impl(&dword_25277D000, v73, v74, "Unable to decode response from server", v76, 2u);
      MEMORY[0x2533BE070](v76, -1, -1);
    }
    uint64_t v18 = (void *)v1[188];
    unint64_t v19 = v1[187];
    uint64_t v20 = v1[186];

    swift_willThrow();
LABEL_46:

    sub_252782E20(v20, v19);
    goto LABEL_47;
  }
  uint64_t v61 = v1[187];
  uint64_t v62 = v1[186];
  uint64_t v63 = v1[166];
  memcpy(v1 + 70, __src, 0x220uLL);
  sub_252792DAC((uint64_t)(v1 + 70));
  sub_2527F56A4(v62, v61, v63);
  uint64_t v72 = v1[154];
  sub_252781C54(v1[166], &qword_26B22BD58);
  sub_2527F9C94((uint64_t)v4, v72);
  uint64_t v95 = sub_252831138();
  os_log_type_t v96 = sub_252831628();
  BOOL v97 = os_log_type_enabled(v95, v96);
  uint64_t v98 = (void *)v1[188];
  unint64_t v99 = v1[187];
  uint64_t v100 = v1[186];
  uint64_t v101 = v1[170];
  uint64_t v102 = v1[169];
  uint64_t v103 = v1[168];
  if (v97)
  {
    uint64_t v104 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v104 = 0;
    _os_log_impl(&dword_25277D000, v95, v96, "New Utility Territory Config saved to disk", v104, 2u);
    MEMORY[0x2533BE070](v104, -1, -1);
  }
  sub_252782E20(v100, v99);

  (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v101, v103);
LABEL_61:
  uint64_t v105 = v1[161];
  uint64_t v106 = v1[160];
  uint64_t v107 = v1[159];
  (*(void (**)(void, uint64_t, uint64_t, void))(v1[163] + 56))(v1[165], 1, 1, v1[162]);
  (*(void (**)(uint64_t, void, uint64_t))(v106 + 104))(v105, *MEMORY[0x263F06E50], v107);
  sub_252830BB8();
  uint64_t v108 = sub_252830BF8();
  unint64_t v110 = v109;
  sub_252830828();
  swift_allocObject();
  sub_252830818();
  sub_2527FC380();
  sub_252830808();
  swift_release();
  memcpy(__src, v1 + 2, 0x220uLL);
  if (qword_26B22BEF8 != -1) {
    swift_once();
  }
  uint64_t v111 = sub_252831158();
  __swift_project_value_buffer(v111, (uint64_t)qword_26B22C088);
  uint64_t v112 = sub_252831138();
  os_log_type_t v113 = sub_252831628();
  if (os_log_type_enabled(v112, v113))
  {
    uint64_t v114 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v114 = 0;
    _os_log_impl(&dword_25277D000, v112, v113, "> Utility Config values being returned", v114, 2u);
    MEMORY[0x2533BE070](v114, -1, -1);
  }
  uint64_t v115 = v1[164];
  uint64_t v116 = v1[163];
  uint64_t v117 = v1[162];

  uint64_t v118 = (objc_class *)type metadata accessor for UtilityConfiguration();
  uint64_t v119 = (char *)objc_allocWithZone(v118);
  memcpy(&v119[OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config], __src, 0x220uLL);
  v1[143] = v119;
  v1[144] = v118;
  id v120 = objc_msgSendSuper2((objc_super *)(v1 + 143), sel_init);
  sub_252782E20(v108, v110);
  (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v115, v117);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v121 = (uint64_t (*)(id))v1[1];
  return v121(v120);
}

uint64_t sub_2527F4DE4()
{
  uint64_t v1 = (void *)v0[189];
  id v2 = v1;
  if (qword_26B22BEF8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_252831158();
  __swift_project_value_buffer(v3, (uint64_t)qword_26B22C088);
  id v4 = v1;
  id v5 = v1;
  unint64_t v6 = sub_252831138();
  os_log_type_t v7 = sub_252831618();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    id v10 = v1;
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[151] = v11;
    sub_252831698();
    *uint64_t v9 = v11;

    _os_log_impl(&dword_25277D000, v6, v7, "Error while trying to fetch Utility Territory Config from server %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D030);
    swift_arrayDestroy();
    MEMORY[0x2533BE070](v9, -1, -1);
    MEMORY[0x2533BE070](v8, -1, -1);
  }
  else
  {
  }
  v0[147] = v1;
  id v12 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4C0);
  int v13 = swift_dynamicCast();
  uint64_t v14 = v0[170];
  uint64_t v15 = v0[169];
  uint64_t v16 = v0[168];
  if (v13)
  {
    sub_2527D325C(v0[158]);
    swift_willThrow();
  }
  else
  {
    sub_252826B80(v1);
    swift_willThrow();
  }
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

void sub_2527F5104()
{
  sub_252830828();
  swift_allocObject();
  sub_252830818();
  sub_2527E4C54();
  sub_252830808();
  if (v0)
  {
    swift_release();
    uint64_t v1 = (void *)sub_252825138(v0);
    if (qword_26B22BEF8 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_252831158();
    __swift_project_value_buffer(v2, (uint64_t)qword_26B22C088);
    uint64_t v3 = sub_252831138();
    os_log_type_t v4 = sub_252831618();
    if (os_log_type_enabled(v3, v4))
    {
      id v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v5 = 0;
      _os_log_impl(&dword_25277D000, v3, v4, "Error while decoding response.", v5, 2u);
      MEMORY[0x2533BE070](v5, -1, -1);
    }

    id v6 = v1;
    id v7 = v1;
    uint64_t v8 = sub_252831138();
    os_log_type_t v9 = sub_252831618();
    if (os_log_type_enabled(v8, v9))
    {
      id v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v14 = v11;
      *(_DWORD *)id v10 = 136315138;
      swift_getErrorValue();
      uint64_t v12 = sub_252831AA8();
      sub_25278F894(v12, v13, &v14);
      sub_252831698();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_25277D000, v8, v9, "%s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533BE070](v11, -1, -1);
      MEMORY[0x2533BE070](v10, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
  }
  else
  {
    swift_release();
  }
}

void sub_2527F53CC(void *a1@<X8>)
{
  sub_252830828();
  swift_allocObject();
  sub_252830818();
  sub_2527FC380();
  sub_252830808();
  if (v1)
  {
    swift_release();
    uint64_t v3 = (void *)sub_252825138(v1);
    if (qword_26B22BEF8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_26B22C088);
    id v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Error while decoding response.", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }

    id v8 = v3;
    id v9 = v3;
    id v10 = sub_252831138();
    os_log_type_t v11 = sub_252831618();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      __src[0] = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      swift_getErrorValue();
      uint64_t v14 = sub_252831AA8();
      sub_25278F894(v14, v15, __src);
      sub_252831698();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_25277D000, v10, v11, "%s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533BE070](v13, -1, -1);
      MEMORY[0x2533BE070](v12, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
  }
  else
  {
    swift_release();
    memcpy(a1, __src, 0x220uLL);
  }
}

uint64_t sub_2527F56A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v75 = a1;
  uint64_t v76 = a2;
  uint64_t v66 = a3;
  uint64_t v86 = *MEMORY[0x263EF8340];
  uint64_t v80 = sub_252830B28();
  uint64_t v82 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v4 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  MEMORY[0x270FA5388](v5 - 8);
  id v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_252830BD8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v69 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v66 - v12;
  if (qword_26B22BF60 != -1) {
    swift_once();
  }
  id v84 = (id)qword_26B22C020;
  uint64_t v85 = *(void *)algn_26B22C028;
  swift_bridgeObjectRetain();
  sub_2528313A8();
  id v15 = v84;
  uint64_t v14 = v85;
  sub_252818CC0();
  id v84 = v15;
  uint64_t v85 = v14;
  swift_bridgeObjectRetain();
  sub_2528313A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v16 = v84;
  uint64_t v17 = v85;
  uint64_t v81 = v9;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v79 = v8;
  uint64_t v70 = v18;
  uint64_t v71 = v9 + 56;
  v18(v7, 1, 1, v8);
  uint64_t v20 = v82 + 104;
  uint64_t v19 = *(void (**)(void))(v82 + 104);
  unsigned int v68 = *MEMORY[0x263F06E50];
  uint64_t v67 = (void (*)(char *, void, uint64_t))v19;
  v19(v4);
  swift_bridgeObjectRetain();
  uint64_t v78 = v13;
  id v72 = v16;
  uint64_t v73 = v17;
  sub_252830BB8();
  id v21 = objc_msgSend(self, sel_defaultManager);
  char v83 = 1;
  swift_bridgeObjectRetain();
  uint64_t v22 = (void *)sub_252831298();
  unsigned __int8 v23 = objc_msgSend(v21, sel_fileExistsAtPath_isDirectory_, v22, &v83);

  if (v23)
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = v79;
  }
  else
  {
    uint64_t v82 = v20;
    uint64_t v25 = v7;
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_252831158();
    __swift_project_value_buffer(v26, (uint64_t)qword_269C2D250);
    uint64_t v27 = sub_252831138();
    os_log_type_t v28 = sub_252831628();
    BOOL v29 = os_log_type_enabled(v27, v28);
    uint64_t v30 = v80;
    if (v29)
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_25277D000, v27, v28, "Creating folder to save config.", v31, 2u);
      MEMORY[0x2533BE070](v31, -1, -1);
    }

    uint64_t v24 = v79;
    v70(v25, 1, 1, v79);
    v67(v4, v68, v30);
    uint64_t v32 = v69;
    sub_252830BB8();
    os_log_type_t v33 = (void *)sub_252830B48();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v32, v24);
    id v84 = 0;
    unsigned __int8 v34 = objc_msgSend(v21, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v33, 1, 0, &v84);

    id v35 = v84;
    if ((v34 & 1) == 0)
    {
      id v36 = v35;
      id v37 = (void *)sub_252830B18();

      swift_willThrow();
      os_log_type_t v74 = 0;
    }
  }
  uint64_t v38 = (void *)sub_252831298();
  unsigned int v39 = objc_msgSend(v21, sel_fileExistsAtPath_, v38);

  id v77 = v21;
  if (!v39)
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (qword_26B22BEF8 != -1) {
    swift_once();
  }
  uint64_t v40 = sub_252831158();
  __swift_project_value_buffer(v40, (uint64_t)qword_26B22C088);
  BOOL v41 = sub_252831138();
  os_log_type_t v42 = sub_252831628();
  if (os_log_type_enabled(v41, v42))
  {
    CFPropertyListRef v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)CFPropertyListRef v43 = 0;
    _os_log_impl(&dword_25277D000, v41, v42, "Removing existing file from disk", v43, 2u);
    MEMORY[0x2533BE070](v43, -1, -1);
  }

  uint64_t v44 = (void *)sub_252831298();
  swift_bridgeObjectRelease();
  id v84 = 0;
  unsigned int v45 = objc_msgSend(v21, sel_removeItemAtPath_error_, v44, &v84);

  if (v45)
  {
    id v46 = v84;
LABEL_19:
    id v47 = v78;
    uint64_t v48 = v74;
    goto LABEL_21;
  }
  id v49 = v84;
  BOOL v50 = (void *)sub_252830B18();

  swift_willThrow();
  uint64_t v48 = 0;
  id v47 = v78;
LABEL_21:
  sub_252830C78();
  if (v48)
  {
    if (qword_26B22BEF8 != -1) {
      swift_once();
    }
    uint64_t v51 = sub_252831158();
    __swift_project_value_buffer(v51, (uint64_t)qword_26B22C088);
    id v52 = v48;
    id v53 = v48;
    uint64_t v54 = sub_252831138();
    os_log_type_t v55 = sub_252831618();
    if (os_log_type_enabled(v54, v55))
    {
      unint64_t v56 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v57 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v56 = 138412290;
      id v58 = v48;
      uint64_t v59 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v84 = v59;
      uint64_t v24 = v79;
      sub_252831698();
      *os_log_type_t v57 = v59;

      _os_log_impl(&dword_25277D000, v54, v55, "Error while trying to write config to disk. %@", v56, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D030);
      swift_arrayDestroy();
      MEMORY[0x2533BE070](v57, -1, -1);
      MEMORY[0x2533BE070](v56, -1, -1);
    }
    else
    {
    }
    swift_willThrow();

    return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v47, v24);
  }
  else
  {
    if (qword_26B22BEF8 != -1) {
      swift_once();
    }
    uint64_t v60 = sub_252831158();
    __swift_project_value_buffer(v60, (uint64_t)qword_26B22C088);
    uint64_t v61 = sub_252831138();
    os_log_type_t v62 = sub_252831628();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v63 = 0;
      _os_log_impl(&dword_25277D000, v61, v62, "Successfully wrote config to disk", v63, 2u);
      MEMORY[0x2533BE070](v63, -1, -1);
    }

    uint64_t v64 = v66;
    (*(void (**)(uint64_t, char *, uint64_t))(v81 + 32))(v66, v47, v24);
    return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v70)(v64, 0, 1, v24);
  }
}

uint64_t sub_2527F5FFC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E3B0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252802478();
  sub_252831B38();
  memcpy(v10, v2, sizeof(v10));
  sub_252790474();
  sub_252831A18();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2527F6158()
{
  return 0x7974696C697475;
}

uint64_t sub_2527F6170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7974696C697475 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_252831A58();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2527F6208(uint64_t a1)
{
  unint64_t v2 = sub_252802478();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527F6244(uint64_t a1)
{
  unint64_t v2 = sub_252802478();

  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_2527F6280@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (void *)sub_2527FAA24(a1, v5);
  if (!v2) {
    return memcpy(a2, v5, 0x220uLL);
  }
  return result;
}

uint64_t sub_2527F62D4(void *a1)
{
  return sub_2527F5FFC(a1);
}

unint64_t sub_2527F62EC(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6B726F77747261;
      break;
    case 2:
      unint64_t result = 0x6D6E6F7269766E65;
      break;
    case 3:
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x617A696E6167726FLL;
      break;
    case 5:
      unint64_t result = 0x74726F70707573;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2527F6404(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E1E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527F844C();
  sub_252831B38();
  LOBYTE(v28) = 0;
  sub_2528319E8();
  if (!v2)
  {
    long long v28 = *(_OWORD *)(v3 + 16);
    char v40 = 1;
    sub_2527F84A0();
    sub_252831A18();
    long long v9 = *(_OWORD *)(v3 + 208);
    long long v38 = *(_OWORD *)(v3 + 192);
    *(_OWORD *)unsigned int v39 = v9;
    *(_OWORD *)&v39[10] = *(_OWORD *)(v3 + 218);
    long long v10 = *(_OWORD *)(v3 + 144);
    long long v34 = *(_OWORD *)(v3 + 128);
    long long v35 = v10;
    long long v11 = *(_OWORD *)(v3 + 176);
    long long v36 = *(_OWORD *)(v3 + 160);
    long long v37 = v11;
    long long v12 = *(_OWORD *)(v3 + 80);
    long long v30 = *(_OWORD *)(v3 + 64);
    long long v31 = v12;
    long long v13 = *(_OWORD *)(v3 + 112);
    long long v32 = *(_OWORD *)(v3 + 96);
    long long v33 = v13;
    long long v14 = *(_OWORD *)(v3 + 32);
    long long v29 = *(_OWORD *)(v3 + 48);
    long long v28 = v14;
    char v40 = 2;
    sub_2527F84F4();
    sub_252831A18();
    sub_252803704(v3 + 240, (uint64_t)v41, &qword_269C1E200);
    sub_252803704((uint64_t)v41, (uint64_t)&v28, &qword_269C1E200);
    char v40 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E208);
    sub_2528038B8(&qword_269C1E210, &qword_269C1E208, (void (*)(void))sub_2527F8548);
    sub_2528319D8();
    long long v15 = *(_OWORD *)(v3 + 392);
    long long v16 = *(_OWORD *)(v3 + 408);
    long long v17 = *(_OWORD *)(v3 + 360);
    long long v36 = *(_OWORD *)(v3 + 376);
    long long v37 = v15;
    long long v18 = *(_OWORD *)(v3 + 424);
    long long v38 = v16;
    *(_OWORD *)unsigned int v39 = v18;
    long long v19 = *(_OWORD *)(v3 + 328);
    long long v20 = *(_OWORD *)(v3 + 344);
    long long v21 = *(_OWORD *)(v3 + 296);
    long long v32 = *(_OWORD *)(v3 + 312);
    long long v33 = v19;
    long long v34 = v20;
    long long v35 = v17;
    long long v22 = *(_OWORD *)(v3 + 264);
    long long v23 = *(_OWORD *)(v3 + 280);
    long long v28 = *(_OWORD *)(v3 + 248);
    long long v29 = v22;
    long long v30 = v23;
    long long v31 = v21;
    char v40 = 4;
    sub_2527F859C();
    sub_252831A18();
    long long v24 = *(_OWORD *)(v3 + 456);
    long long v28 = *(_OWORD *)(v3 + 440);
    long long v29 = v24;
    long long v25 = *(_OWORD *)(v3 + 488);
    long long v30 = *(_OWORD *)(v3 + 472);
    long long v31 = v25;
    char v40 = 5;
    sub_2527F85F0();
    sub_252831A18();
    *(void *)&long long v28 = *(void *)(v3 + 504);
    char v40 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E230);
    sub_2528038B8(&qword_269C1E238, &qword_269C1E230, (void (*)(void))sub_2527F8644);
    sub_252831A18();
    long long v26 = *(_OWORD *)(v3 + 528);
    long long v28 = *(_OWORD *)(v3 + 512);
    long long v29 = v26;
    char v40 = 7;
    sub_2527F8698();
    sub_252831A18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2527F6854(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_2527F817C(a1, a2, a3, a4, a5, &qword_269C1E2F8, (void (*)(void *, uint64_t, uint64_t))sub_2527FDF9C);
}

uint64_t sub_2527F6890(void *a1)
{
  return sub_2527F7F84(a1, &qword_269C1E330, (void (*)(void))sub_2527FE0EC);
}

unint64_t sub_2527F68CC(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x6966697373616C63;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x616F626E4F666174;
      break;
    case 5:
      unint64_t result = 0xD000000000000019;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 7:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2527F69F4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E2D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527FDEA0();
  sub_252831B38();
  LOBYTE(v14) = 0;
  sub_2528319E8();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_2528319E8();
    LOBYTE(v14) = 2;
    sub_2528319E8();
    long long v9 = v3[4];
    long long v14 = v3[3];
    long long v15 = v9;
    char v20 = 3;
    sub_2527FDEF4();
    sub_252831A18();
    long long v10 = v3[8];
    long long v16 = v3[7];
    long long v17 = v10;
    long long v11 = v3[10];
    long long v18 = v3[9];
    long long v19 = v11;
    long long v12 = v3[6];
    long long v14 = v3[5];
    long long v15 = v12;
    char v20 = 4;
    sub_2527FDF48();
    sub_252831A18();
    LOBYTE(v14) = 5;
    sub_2528319C8();
    LOBYTE(v14) = 6;
    sub_2528319C8();
    LOBYTE(v14) = 7;
    sub_2528319B8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_2527F6C8C(char a1)
{
  if (!a1) {
    return 0xD000000000000015;
  }
  if (a1 == 1) {
    return 0xD000000000000013;
  }
  return 0xD000000000000014;
}

uint64_t sub_2527F6CE4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v12[0] = a5;
  v12[1] = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E478);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  long long v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252803608();
  sub_252831B38();
  char v15 = 0;
  sub_2528319E8();
  if (!v5)
  {
    char v14 = 1;
    sub_252831A08();
    char v13 = 2;
    sub_252831A08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

unint64_t sub_2527F6E80(char a1)
{
  unint64_t result = 0x64656C62616E65;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x6449746E65696C63;
      break;
    case 3:
      unint64_t result = 0x73646C656966;
      break;
    case 4:
      unint64_t result = 0x736E6F6974636573;
      break;
    case 5:
      unint64_t result = 0x65706F725070746FLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2527F6F7C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E488);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25280365C();
  sub_252831B38();
  LOBYTE(v10) = 0;
  sub_2528319F8();
  if (!v2)
  {
    LOBYTE(v10) = 1;
    sub_2528319E8();
    LOBYTE(v10) = 2;
    sub_2528319E8();
    *(void *)&long long v10 = *(void *)(v3 + 40);
    char v12 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E498);
    sub_2528038B8(&qword_269C1E4A0, &qword_269C1E498, (void (*)(void))sub_2528036B0);
    sub_252831A18();
    sub_252803704(v3 + 48, (uint64_t)v13, &qword_269C1E4B0);
    sub_252803704((uint64_t)v13, (uint64_t)&v10, &qword_269C1E4B0);
    char v12 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E4B8);
    sub_2528038B8(&qword_269C1E4C0, &qword_269C1E4B8, (void (*)(void))sub_252803768);
    sub_2528319D8();
    long long v10 = *(_OWORD *)(v3 + 56);
    uint64_t v11 = *(void *)(v3 + 72);
    char v12 = 5;
    sub_2528037BC();
    sub_252831A18();
    LOBYTE(v10) = 6;
    sub_2528319E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2527F729C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[0] = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E580);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25280451C();
  sub_252831B38();
  char v13 = 0;
  sub_2528319E8();
  if (!v4)
  {
    v11[1] = v11[0];
    char v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF40);
    sub_25279077C(&qword_26B22BF48);
    sub_252831A18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_2527F7458(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C6562616CLL;
      break;
    case 2:
      unint64_t result = 0x79654B6D726F66;
      break;
    case 3:
      unint64_t result = 0x74786554746E6968;
      break;
    case 4:
      unint64_t result = 0x746E6F4374786574;
      break;
    case 5:
      unint64_t result = 0x6472616F6279656BLL;
      break;
    case 6:
      unint64_t result = 0x6572756365537369;
      break;
    case 7:
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 0x7865676572;
      break;
    case 10:
      unint64_t result = 0x6465726975716572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2527F75AC(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E570);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2528044C8();
  sub_252831B38();
  v8[15] = 0;
  sub_2528319E8();
  if (!v1)
  {
    v8[14] = 1;
    sub_2528319E8();
    v8[13] = 2;
    sub_2528319E8();
    v8[12] = 3;
    sub_2528319A8();
    v8[11] = 4;
    sub_2528319E8();
    v8[10] = 5;
    sub_2528319E8();
    v8[9] = 6;
    sub_2528319F8();
    v8[8] = 7;
    sub_252831A08();
    v8[7] = 8;
    sub_252831A08();
    v8[6] = 9;
    sub_2528319E8();
    v8[5] = 10;
    sub_2528319B8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2527F7874(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[1] = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E590);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252804570();
  sub_252831B38();
  char v13 = 0;
  sub_252831A08();
  if (!v4)
  {
    char v12 = 1;
    sub_2528319E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2527F79E8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E308);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527FDFF0();
  sub_252831B38();
  LOBYTE(v14) = 0;
  sub_2528319E8();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_2528319E8();
    LOBYTE(v14) = 2;
    sub_2528319E8();
    LOBYTE(v14) = 3;
    sub_2528319A8();
    long long v9 = v3[9];
    long long v18 = v3[8];
    long long v19 = v9;
    long long v20 = v3[10];
    long long v10 = v3[5];
    long long v14 = v3[4];
    long long v15 = v10;
    long long v11 = v3[7];
    long long v16 = v3[6];
    long long v17 = v11;
    v13[15] = 4;
    sub_2527FE044();
    sub_252831A18();
    LOBYTE(v14) = 5;
    sub_2528319E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2527F7C18(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E4D8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252803810();
  sub_252831B38();
  v8[15] = 0;
  sub_2528319E8();
  if (!v1)
  {
    v8[14] = 1;
    sub_2528319E8();
    v8[13] = 2;
    sub_2528319E8();
    v8[12] = 3;
    sub_2528319E8();
    v8[11] = 4;
    sub_2528319E8();
    v8[10] = 5;
    sub_2528319E8();
    v8[9] = 6;
    sub_2528319E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2527F7E40(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2527F7EC4(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2527F7F48(void *a1)
{
  return sub_2527F7F84(a1, &qword_269C1E320, (void (*)(void))sub_2527FE098);
}

uint64_t sub_2527F7F84(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_252831B38();
  char v15 = 0;
  uint64_t v9 = v11[1];
  sub_2528319E8();
  if (!v9)
  {
    char v14 = 1;
    sub_2528319E8();
    char v13 = 2;
    sub_2528319E8();
    char v12 = 3;
    sub_2528319E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2527F8140(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_2527F817C(a1, a2, a3, a4, a5, &qword_269C1E340, (void (*)(void *, uint64_t, uint64_t))sub_2527FE140);
}

uint64_t sub_2527F817C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, void (*a7)(void *, uint64_t, uint64_t))
{
  _OWORD v18[2] = a3;
  v18[0] = a4;
  v18[1] = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a6);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a7(v13, v14, v15);
  sub_252831B38();
  char v20 = 0;
  uint64_t v16 = v18[3];
  sub_2528319E8();
  if (!v16)
  {
    char v19 = 1;
    sub_2528319E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

unint64_t sub_2527F82F0()
{
  return sub_2527F62EC(*v0);
}

uint64_t sub_2527F82F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2527FABA0(a1, a2);
  *a3 = result;
  return result;
}

void sub_2527F8320(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_2527F832C(uint64_t a1)
{
  unint64_t v2 = sub_2527F844C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527F8368(uint64_t a1)
{
  unint64_t v2 = sub_2527F844C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_2527F83A4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_2527FAF10(a1, v5);
  if (!v2) {
    return memcpy(a2, v5, 0x220uLL);
  }
  return result;
}

uint64_t sub_2527F83F8(void *a1)
{
  memcpy(v4, v1, sizeof(v4));
  return sub_2527F6404(a1);
}

unint64_t sub_2527F844C()
{
  unint64_t result = qword_269C1E1E8;
  if (!qword_269C1E1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E1E8);
  }
  return result;
}

unint64_t sub_2527F84A0()
{
  unint64_t result = qword_269C1E1F0;
  if (!qword_269C1E1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E1F0);
  }
  return result;
}

unint64_t sub_2527F84F4()
{
  unint64_t result = qword_269C1E1F8;
  if (!qword_269C1E1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E1F8);
  }
  return result;
}

unint64_t sub_2527F8548()
{
  unint64_t result = qword_269C1E218;
  if (!qword_269C1E218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E218);
  }
  return result;
}

unint64_t sub_2527F859C()
{
  unint64_t result = qword_269C1E220;
  if (!qword_269C1E220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E220);
  }
  return result;
}

unint64_t sub_2527F85F0()
{
  unint64_t result = qword_269C1E228;
  if (!qword_269C1E228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E228);
  }
  return result;
}

unint64_t sub_2527F8644()
{
  unint64_t result = qword_269C1E240;
  if (!qword_269C1E240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E240);
  }
  return result;
}

unint64_t sub_2527F8698()
{
  unint64_t result = qword_269C1E248;
  if (!qword_269C1E248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E248);
  }
  return result;
}

uint64_t sub_2527F86EC()
{
  if (*v0) {
    return 1701667182;
  }
  else {
    return 1701080931;
  }
}

uint64_t sub_2527F8710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2527FE194(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2527F8738(uint64_t a1)
{
  unint64_t v2 = sub_2527FDF9C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527F8774(uint64_t a1)
{
  unint64_t v2 = sub_2527FDF9C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2527F87B0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2527F99A4(a1, &qword_269C1E370, (void (*)(void))sub_2527FDF9C, a2);
}

uint64_t sub_2527F87EC(void *a1)
{
  return sub_2527F817C(a1, *v1, v1[1], v1[2], v1[3], &qword_269C1E2F8, (void (*)(void *, uint64_t, uint64_t))sub_2527FDF9C);
}

unint64_t sub_2527F8830()
{
  unint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x6D726F6674616C70;
      break;
    case 3:
      unint64_t result = 0x6B726F77747261;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2527F88BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2527FE268(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2527F88E4(uint64_t a1)
{
  unint64_t v2 = sub_2527FE0EC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527F8920(uint64_t a1)
{
  unint64_t v2 = sub_2527FE0EC();

  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_2527F895C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_2527F984C(a1, &qword_269C1E390, (void (*)(void))sub_2527FE0EC, a2);
}

uint64_t sub_2527F8998(uint64_t a1)
{
  unint64_t v2 = sub_2527FDE4C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527F89D4(uint64_t a1)
{
  unint64_t v2 = sub_2527FDE4C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2527F8A10@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E350);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527FDE4C();
  sub_252831B28();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v9 = sub_252831968();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_2527F8B88(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E2C8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527FDE4C();
  sub_252831B38();
  sub_2528319E8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_2527F8CC0()
{
  return sub_2527F68CC(*v0);
}

uint64_t sub_2527F8CC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2527FE40C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2527F8CF0(uint64_t a1)
{
  unint64_t v2 = sub_2527FDEA0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527F8D2C(uint64_t a1)
{
  unint64_t v2 = sub_2527FDEA0();

  return MEMORY[0x270FA00B8](a1, v2);
}

__n128 sub_2527F8D68@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2527FE778(a1, v10);
  if (!v2)
  {
    long long v5 = v11[0];
    *(_OWORD *)(a2 + 160) = v10[10];
    *(_OWORD *)(a2 + 176) = v5;
    *(_OWORD *)(a2 + 186) = *(_OWORD *)((char *)v11 + 10);
    long long v6 = v10[7];
    *(_OWORD *)(a2 + 96) = v10[6];
    *(_OWORD *)(a2 + 112) = v6;
    long long v7 = v10[9];
    *(_OWORD *)(a2 + 128) = v10[8];
    *(_OWORD *)(a2 + 144) = v7;
    long long v8 = v10[3];
    *(_OWORD *)(a2 + 32) = v10[2];
    *(_OWORD *)(a2 + 48) = v8;
    long long v9 = v10[5];
    *(_OWORD *)(a2 + 64) = v10[4];
    *(_OWORD *)(a2 + 80) = v9;
    __n128 result = (__n128)v10[1];
    *(_OWORD *)a2 = v10[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_2527F8DD4(void *a1)
{
  return sub_2527F69F4(a1);
}

unint64_t sub_2527F8DEC()
{
  return sub_2527F6C8C(*v0);
}

uint64_t sub_2527F8DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2527FF030(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2527F8E1C(uint64_t a1)
{
  unint64_t v2 = sub_252803608();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527F8E58(uint64_t a1)
{
  unint64_t v2 = sub_252803608();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2527F8E94@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_2527FF174(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_2527F8EC4(void *a1)
{
  return sub_2527F6CE4(a1, *v1, v1[1], v1[2], v1[3]);
}

unint64_t sub_2527F8EE4()
{
  return sub_2527F6E80(*v0);
}

uint64_t sub_2527F8EEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2527FF390(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2527F8F14(uint64_t a1)
{
  unint64_t v2 = sub_25280365C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527F8F50(uint64_t a1)
{
  unint64_t v2 = sub_25280365C();

  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_2527F8F8C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_2527FF68C(a1, (uint64_t)v8);
  if (!v2)
  {
    long long v5 = v8[3];
    a2[2] = v8[2];
    a2[3] = v5;
    long long v6 = v8[5];
    a2[4] = v8[4];
    a2[5] = v6;
    double result = *(double *)v8;
    long long v7 = v8[1];
    *a2 = v8[0];
    a2[1] = v7;
  }
  return result;
}

uint64_t sub_2527F8FD8(void *a1)
{
  return sub_2527F6F7C(a1);
}

uint64_t sub_2527F901C(uint64_t a1)
{
  unint64_t v2 = sub_25280451C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527F9058(uint64_t a1)
{
  unint64_t v2 = sub_25280451C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2527F9094@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_2527FFC98(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_2527F90C4(void *a1)
{
  return sub_2527F729C(a1, *v1, v1[1], v1[2]);
}

unint64_t sub_2527F90E4()
{
  return sub_2527F7458(*v0);
}

uint64_t sub_2527F90EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2527FFEE0(a1, a2);
  *a3 = result;
  return result;
}

void sub_2527F9114(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_2527F9120(uint64_t a1)
{
  unint64_t v2 = sub_2528044C8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527F915C(uint64_t a1)
{
  unint64_t v2 = sub_2528044C8();

  return MEMORY[0x270FA00B8](a1, v2);
}

__n128 sub_2527F9198@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_252800364(a1, v8);
  if (!v2)
  {
    long long v5 = v9[0];
    *(_OWORD *)(a2 + 96) = v8[6];
    *(_OWORD *)(a2 + 112) = v5;
    *(_OWORD *)(a2 + 121) = *(_OWORD *)((char *)v9 + 9);
    long long v6 = v8[3];
    *(_OWORD *)(a2 + 32) = v8[2];
    *(_OWORD *)(a2 + 48) = v6;
    long long v7 = v8[5];
    *(_OWORD *)(a2 + 64) = v8[4];
    *(_OWORD *)(a2 + 80) = v7;
    __n128 result = (__n128)v8[1];
    *(_OWORD *)a2 = v8[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_2527F91F4(void *a1)
{
  return sub_2527F75AC(a1);
}

uint64_t sub_2527F920C()
{
  if (*v0) {
    return 0x6472616F6279656BLL;
  }
  else {
    return 0x6874676E656CLL;
  }
}

uint64_t sub_2527F924C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252800B24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2527F9274(uint64_t a1)
{
  unint64_t v2 = sub_252804570();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527F92B0(uint64_t a1)
{
  unint64_t v2 = sub_252804570();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2527F92EC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_252800C28(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_2527F931C(void *a1)
{
  return sub_2527F7874(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_2527F933C()
{
  uint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6D754E656E6F6870;
      break;
    case 2:
      uint64_t result = 0x65746973626577;
      break;
    case 3:
      uint64_t result = 0x6D614E74726F6873;
      break;
    case 4:
      uint64_t result = 0x73736572646461;
      break;
    case 5:
      uint64_t result = 0x746E656449616965;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2527F9414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252800DD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2527F943C(uint64_t a1)
{
  unint64_t v2 = sub_2527FDFF0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527F9478(uint64_t a1)
{
  unint64_t v2 = sub_2527FDFF0();

  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_2527F94B4@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_25280108C(a1, v11);
  if (!v2)
  {
    long long v5 = v19;
    a2[8] = v18;
    a2[9] = v5;
    long long v6 = v21;
    a2[10] = v20;
    a2[11] = v6;
    long long v7 = v15;
    a2[4] = v14;
    a2[5] = v7;
    long long v8 = v17;
    a2[6] = v16;
    a2[7] = v8;
    long long v9 = v11[1];
    *a2 = v11[0];
    a2[1] = v9;
    double result = *(double *)&v12;
    long long v10 = v13;
    a2[2] = v12;
    a2[3] = v10;
  }
  return result;
}

uint64_t sub_2527F9518(void *a1)
{
  return sub_2527F79E8(a1);
}

uint64_t sub_2527F9530()
{
  uint64_t result = 0x4C73736572646461;
  switch(*v0)
  {
    case 3:
      uint64_t result = 2037672291;
      break;
    case 4:
      uint64_t result = 0x6574617473;
      break;
    case 5:
      uint64_t result = 0x6F436C6174736F70;
      break;
    case 6:
      uint64_t result = 0x7972746E756F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2527F9604(uint64_t a1)
{
  unint64_t v2 = sub_252803810();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527F9640(uint64_t a1)
{
  unint64_t v2 = sub_252803810();

  return MEMORY[0x270FA00B8](a1, v2);
}

__n128 sub_2527F967C@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_252801818(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_OWORD *)(a2 + 96) = v7[6];
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_2527F96D0(void *a1)
{
  return sub_2527F7C18(a1);
}

uint64_t sub_2527F96E8(unsigned __int8 *a1, char *a2)
{
  return sub_2527A70B4(*a1, *a2);
}

uint64_t sub_2527F96F4()
{
  return sub_252793774();
}

uint64_t sub_2527F96FC()
{
  return sub_252793A58();
}

uint64_t sub_2527F9704()
{
  return sub_252793B10();
}

uint64_t sub_2527F970C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_252801DDC();
  *a1 = result;
  return result;
}

unint64_t sub_2527F973C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_2527F7E40(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_2527F9768()
{
  return sub_2527F7EC4(*v0);
}

uint64_t sub_2527F9770@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_252801DDC();
  *a1 = result;
  return result;
}

uint64_t sub_2527F9798(uint64_t a1)
{
  unint64_t v2 = sub_2527FE098();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527F97D4(uint64_t a1)
{
  unint64_t v2 = sub_2527FE098();

  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_2527F9810@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_2527F984C(a1, &qword_269C1E388, (void (*)(void))sub_2527FE098, a2);
}

double sub_2527F984C@<D0>(void *a1@<X0>, uint64_t *a2@<X3>, void (*a3)(void)@<X4>, _OWORD *a4@<X8>)
{
  sub_252801E28(a1, a2, a3, (uint64_t *)v9);
  if (!v4)
  {
    long long v7 = v9[1];
    *a4 = v9[0];
    a4[1] = v7;
    double result = *(double *)&v10;
    long long v8 = v11;
    a4[2] = v10;
    a4[3] = v8;
  }
  return result;
}

uint64_t sub_2527F989C()
{
  if (*v0) {
    return 6910581;
  }
  else {
    return 1954047348;
  }
}

uint64_t sub_2527F98C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25280218C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2527F98F0(uint64_t a1)
{
  unint64_t v2 = sub_2527FE140();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2527F992C(uint64_t a1)
{
  unint64_t v2 = sub_2527FE140();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2527F9968@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2527F99A4(a1, &qword_269C1E398, (void (*)(void))sub_2527FE140, a2);
}

uint64_t sub_2527F99A4@<X0>(void *a1@<X0>, uint64_t *a2@<X3>, void (*a3)(void)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_252802260(a1, a2, a3);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v7;
    a4[2] = v8;
    a4[3] = v9;
  }
  return result;
}

uint64_t sub_2527F99E0(void *a1)
{
  return sub_2527F817C(a1, *v1, v1[1], v1[2], v1[3], &qword_269C1E340, (void (*)(void *, uint64_t, uint64_t))sub_2527FE140);
}

uint64_t sub_2527F9A24(uint64_t a1)
{
  return a1;
}

uint64_t sub_2527F9B94(uint64_t a1)
{
  return a1;
}

uint64_t sub_2527F9C94(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = sub_252830DB8();
  uint64_t v4 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  long long v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2527CE9D0();
  sub_252830D38();
  uint64_t v7 = sub_2527CE5CC();
  if (v8)
  {
    uint64_t v9 = v7;
    uint64_t v10 = v8;
    uint64_t v11 = sub_2527F9B94(a2);
    uint64_t v28 = MEMORY[0x263F8D310];
    v27[0] = v9;
    v27[1] = v10;
    sub_2527B9FFC(v11, v12, (uint64_t)v27);
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v29);
LABEL_8:
      swift_bridgeObjectRelease();
      sub_252781C54((uint64_t)v27, &qword_26B22C010);
      if (qword_26B22BEF8 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_252831158();
      __swift_project_value_buffer(v18, (uint64_t)qword_26B22C088);
      long long v19 = sub_252831138();
      os_log_type_t v20 = sub_252831618();
      if (os_log_type_enabled(v19, v20))
      {
        long long v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)long long v21 = 0;
        _os_log_impl(&dword_25277D000, v19, v20, "Error while trying to save Utility Territory config metadata.", v21, 2u);
        MEMORY[0x2533BE070](v21, -1, -1);
      }

      return swift_willThrow();
    }
    swift_bridgeObjectRelease();
    sub_252781C54((uint64_t)v27, &qword_26B22C010);
  }
  uint64_t v13 = v29;
  uint64_t v14 = sub_2527F9A24(a2);
  uint64_t v16 = v15;
  uint64_t v28 = v13;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v27);
  (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 16))(boxed_opaque_existential_0, v6, v13);
  sub_2527B9FFC(v14, v16, (uint64_t)v27);
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v13);
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  sub_252781C54((uint64_t)v27, &qword_26B22C010);
  if (qword_26B22BEF8 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_252831158();
  __swift_project_value_buffer(v23, (uint64_t)qword_26B22C088);
  long long v24 = sub_252831138();
  os_log_type_t v25 = sub_252831628();
  if (os_log_type_enabled(v24, v25))
  {
    long long v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v26 = 0;
    _os_log_impl(&dword_25277D000, v24, v25, "Utility Territory Config MetaData saved.", v26, 2u);
    MEMORY[0x2533BE070](v26, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v13);
}

uint64_t sub_2527FA040(uint64_t a1)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  if (qword_26B22BF60 != -1) {
    swift_once();
  }
  id v21 = (id)qword_26B22C020;
  unint64_t v22 = *(void *)algn_26B22C028;
  swift_bridgeObjectRetain();
  sub_2528313A8();
  sub_252818CC0();
  swift_bridgeObjectRetain();
  sub_2528313A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(self, sel_defaultManager);
  uint64_t v3 = (void *)sub_252831298();
  unsigned int v4 = objc_msgSend(v2, sel_fileExistsAtPath_, v3);

  if (v4)
  {
    if (qword_26B22BEF8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_252831158();
    __swift_project_value_buffer(v5, (uint64_t)qword_26B22C088);
    long long v6 = sub_252831138();
    os_log_type_t v7 = sub_252831628();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_25277D000, v6, v7, "Removing existing file from disk", v8, 2u);
      MEMORY[0x2533BE070](v8, -1, -1);
    }

    uint64_t v9 = (void *)sub_252831298();
    swift_bridgeObjectRelease();
    id v21 = 0;
    unsigned int v10 = objc_msgSend(v2, sel_removeItemAtPath_error_, v9, &v21);

    if (v10)
    {
      id v11 = v21;
    }
    else
    {
      id v12 = v21;
      uint64_t v13 = (void *)sub_252830B18();

      swift_willThrow();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = sub_2527F9B94(a1);
  uint64_t v16 = v15;
  uint64_t v17 = sub_2527F9A24(a1);
  uint64_t v19 = v18;
  uint64_t v23 = MEMORY[0x263F8D310];
  id v21 = 0;
  unint64_t v22 = 0xE000000000000000;
  sub_2527B9FFC(v14, v16, (uint64_t)&v21);
  swift_bridgeObjectRelease();
  sub_252781C54((uint64_t)&v21, &qword_26B22C010);
  uint64_t v23 = sub_252830DB8();
  __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v21);
  sub_252830D78();
  sub_2527B9FFC(v17, v19, (uint64_t)&v21);
  swift_bridgeObjectRelease();

  return sub_252781C54((uint64_t)&v21, &qword_26B22C010);
}

uint64_t sub_2527FA544()
{
  uint64_t v0 = sub_252830B28();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  MEMORY[0x270FA5388](v4 - 8);
  long long v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_252830BD8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unsigned int v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F06E50], v0);
  swift_bridgeObjectRetain();
  sub_252830BB8();
  uint64_t v11 = sub_252830BF8();
  unint64_t v13 = v12;
  sub_252830828();
  swift_allocObject();
  sub_252830818();
  sub_2527FC380();
  sub_252830808();
  sub_252782E20(v11, v13);
  swift_release();
  memcpy(v15, v16, sizeof(v15));
  sub_252792DAC((uint64_t)v15);
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  return 1;
}

uint64_t sub_2527FAA24@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t v12 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E3A0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252802478();
  sub_252831B28();
  if (!v2)
  {
    uint64_t v8 = v12;
    sub_2527904C8();
    sub_252831998();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    memcpy(v8, v11, 0x220uLL);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2527FABA0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B726F77747261 && a2 == 0xE700000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D6E6F7269766E65 && a2 == 0xEB00000000746E65 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000025283ADE0 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x617A696E6167726FLL && a2 == 0xEC0000006E6F6974 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74726F70707573 && a2 == 0xE700000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000025283CEB0 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000025283CED0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

void *sub_2527FAF10@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E250);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v166 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_2527F844C();
  sub_252831B28();
  if (v2) {
    return (void *)__swift_destroy_boxed_opaque_existential_0((uint64_t)v166);
  }
  uint64_t v10 = v6;
  BOOL v41 = a2;
  LOBYTE(v43) = 0;
  uint64_t v11 = sub_252831968();
  uint64_t v13 = v12;
  LOBYTE(v42[0]) = 1;
  sub_2527FBDAC();
  swift_bridgeObjectRetain();
  sub_252831998();
  uint64_t v40 = v13;
  uint64_t v14 = v43;
  uint64_t v15 = v44;
  char v127 = 2;
  sub_2527FBE00();
  swift_bridgeObjectRetain();
  sub_252831998();
  *(void *)&long long v39 = v14;
  *((void *)&v39 + 1) = v15;
  long long v125 = v138;
  *(_OWORD *)uint64_t v126 = v139[0];
  *(_OWORD *)&v126[10] = *(_OWORD *)((char *)v139 + 10);
  long long v121 = v134;
  long long v122 = v135;
  long long v124 = v137;
  long long v123 = v136;
  long long v117 = v130;
  long long v118 = v131;
  long long v120 = v133;
  long long v119 = v132;
  long long v116 = v129;
  long long v115 = v128;
  long long v164 = v138;
  v165[0] = v139[0];
  *(_OWORD *)((char *)v165 + 10) = *(_OWORD *)((char *)v139 + 10);
  long long v160 = v134;
  long long v161 = v135;
  long long v163 = v137;
  long long v162 = v136;
  long long v156 = v130;
  long long v157 = v131;
  long long v159 = v133;
  long long v158 = v132;
  long long v155 = v129;
  long long v154 = v128;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E208);
  LOBYTE(v42[0]) = 3;
  sub_2527FBE54((uint64_t)&v115);
  sub_2528038B8(&qword_269C1E268, &qword_269C1E208, (void (*)(void))sub_2527FBF08);
  sub_252831958();
  uint64_t v16 = v43;
  char v102 = 4;
  sub_2527FBF5C();
  swift_bridgeObjectRetain();
  sub_252831998();
  uint64_t v35 = v16;
  long long v98 = v111;
  long long v99 = v112;
  long long v100 = v113;
  long long v101 = v114;
  long long v94 = v107;
  long long v95 = v108;
  long long v96 = v109;
  long long v97 = v110;
  long long v90 = v103;
  long long v91 = v104;
  long long v92 = v105;
  long long v93 = v106;
  long long v148 = v111;
  long long v149 = v112;
  long long v150 = v113;
  long long v151 = v114;
  long long v144 = v107;
  long long v145 = v108;
  long long v146 = v109;
  long long v147 = v110;
  long long v140 = v103;
  long long v141 = v104;
  long long v142 = v105;
  long long v143 = v106;
  LOBYTE(v42[0]) = 5;
  sub_2527FBFB0((uint64_t)&v90);
  sub_2527FC08C();
  sub_252831998();
  uint64_t v17 = v44;
  uint64_t v32 = v45;
  uint64_t v33 = v43;
  uint64_t v18 = v46;
  uint64_t v30 = v48;
  *((void *)&v37 + 1) = *((void *)&v47 + 1);
  uint64_t v31 = v47;
  uint64_t v38 = *((void *)&v48 + 1);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E230);
  LOBYTE(v42[0]) = 6;
  sub_2528038B8(&qword_269C1E288, &qword_269C1E230, (void (*)(void))sub_2527FC0E0);
  *(void *)&long long v37 = v17;
  swift_bridgeObjectRetain();
  uint64_t v36 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_252831998();
  uint64_t v19 = v43;
  char v87 = 7;
  sub_2527FC134();
  swift_bridgeObjectRetain();
  sub_252831998();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
  v42[12] = v125;
  v42[13] = *(_OWORD *)v126;
  *(_OWORD *)((char *)&v42[13] + 10) = *(_OWORD *)&v126[10];
  v42[8] = v121;
  v42[9] = v122;
  v42[10] = v123;
  v42[11] = v124;
  v42[4] = v117;
  v42[5] = v118;
  v42[6] = v119;
  v42[7] = v120;
  v42[2] = v115;
  v42[3] = v116;
  *(_OWORD *)((char *)&v42[24] + 8) = v99;
  *(_OWORD *)((char *)&v42[25] + 8) = v100;
  *(_OWORD *)((char *)&v42[26] + 8) = v101;
  *(_OWORD *)((char *)&v42[20] + 8) = v95;
  *(_OWORD *)((char *)&v42[21] + 8) = v96;
  *(_OWORD *)((char *)&v42[22] + 8) = v97;
  *(_OWORD *)((char *)&v42[23] + 8) = v98;
  *(_OWORD *)((char *)&v42[16] + 8) = v91;
  *(_OWORD *)((char *)&v42[17] + 8) = v92;
  *(_OWORD *)((char *)&v42[18] + 8) = v93;
  *(_OWORD *)((char *)&v42[19] + 8) = v94;
  uint64_t v26 = *((void *)&v88 + 1);
  uint64_t v27 = v88;
  uint64_t v28 = v89;
  uint64_t v29 = v11;
  uint64_t v34 = *((void *)&v89 + 1);
  uint64_t v20 = *((void *)&v39 + 1);
  *(void *)&v42[0] = v11;
  *((void *)&v42[0] + 1) = v40;
  v42[1] = v39;
  *(_OWORD *)((char *)&v42[15] + 8) = v90;
  uint64_t v21 = v35;
  uint64_t v22 = v36;
  *(void *)&v42[15] = v35;
  *((void *)&v42[27] + 1) = v33;
  long long v23 = v37;
  *(void *)&v42[28] = v37;
  *((void *)&v42[28] + 1) = v32;
  *(void *)&v42[29] = v36;
  *((void *)&v42[29] + 1) = v31;
  *(void *)&v42[30] = *((void *)&v37 + 1);
  *((void *)&v42[30] + 1) = v30;
  *(void *)&v42[31] = v38;
  *((void *)&v42[31] + 1) = v19;
  v42[32] = v88;
  v42[33] = v89;
  sub_2527FC188((uint64_t)v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2527FBC1C((uint64_t)&v90);
  swift_bridgeObjectRelease();
  sub_2527FBCF8((uint64_t)&v115);
  uint64_t v24 = v40;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v166);
  long long v57 = v164;
  *(_OWORD *)id v58 = v165[0];
  *(_OWORD *)&v58[10] = *(_OWORD *)((char *)v165 + 10);
  long long v53 = v160;
  long long v54 = v161;
  long long v55 = v162;
  long long v56 = v163;
  long long v49 = v156;
  long long v50 = v157;
  long long v51 = v158;
  long long v52 = v159;
  long long v47 = v154;
  long long v48 = v155;
  long long v71 = v149;
  long long v72 = v150;
  long long v73 = v151;
  long long v67 = v145;
  long long v68 = v146;
  long long v69 = v147;
  long long v70 = v148;
  long long v63 = v141;
  long long v64 = v142;
  long long v65 = v143;
  long long v66 = v144;
  uint64_t v43 = v29;
  uint64_t v44 = v24;
  uint64_t v45 = v39;
  uint64_t v46 = v20;
  int v59 = v152;
  __int16 v60 = v153;
  long long v62 = v140;
  uint64_t v61 = v21;
  uint64_t v74 = v33;
  uint64_t v75 = v23;
  uint64_t v76 = v32;
  uint64_t v77 = v22;
  uint64_t v78 = v31;
  uint64_t v79 = *((void *)&v23 + 1);
  uint64_t v80 = v30;
  uint64_t v81 = v38;
  uint64_t v82 = v19;
  uint64_t v83 = v27;
  uint64_t v84 = v26;
  uint64_t v85 = v28;
  uint64_t v86 = v34;
  sub_252792DAC((uint64_t)&v43);
  return memcpy(v41, v42, 0x220uLL);
}

uint64_t sub_2527FBC1C(uint64_t a1)
{
  return a1;
}

uint64_t sub_2527FBCF8(uint64_t a1)
{
  return a1;
}

unint64_t sub_2527FBDAC()
{
  unint64_t result = qword_269C1E258;
  if (!qword_269C1E258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E258);
  }
  return result;
}

unint64_t sub_2527FBE00()
{
  unint64_t result = qword_269C1E260;
  if (!qword_269C1E260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E260);
  }
  return result;
}

uint64_t sub_2527FBE54(uint64_t a1)
{
  return a1;
}

unint64_t sub_2527FBF08()
{
  unint64_t result = qword_269C1E270;
  if (!qword_269C1E270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E270);
  }
  return result;
}

unint64_t sub_2527FBF5C()
{
  unint64_t result = qword_269C1E278;
  if (!qword_269C1E278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E278);
  }
  return result;
}

uint64_t sub_2527FBFB0(uint64_t a1)
{
  return a1;
}

unint64_t sub_2527FC08C()
{
  unint64_t result = qword_269C1E280;
  if (!qword_269C1E280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E280);
  }
  return result;
}

unint64_t sub_2527FC0E0()
{
  unint64_t result = qword_269C1E290;
  if (!qword_269C1E290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E290);
  }
  return result;
}

unint64_t sub_2527FC134()
{
  unint64_t result = qword_269C1E298;
  if (!qword_269C1E298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269C1E298);
  }
  return result;
}

uint64_t sub_2527FC188(uint64_t a1)
{
  return a1;
}

unint64_t sub_2527FC380()
{
  unint64_t result = qword_269C1E2A8;
  if (!qword_269C1E2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E2A8);
  }
  return result;
}

uint64_t _s19HomeUtilityServices21InternalUtilityConfigVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s19HomeUtilityServices21InternalUtilityConfigVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  uint64_t v10 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v10;
  uint64_t v11 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v11;
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  uint64_t v12 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v12;
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  uint64_t v13 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v13;
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 233) = *(unsigned char *)(a2 + 233);
  uint64_t v14 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v14;
  uint64_t v15 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v15;
  uint64_t v16 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v16;
  uint64_t v17 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v17;
  uint64_t v18 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v18;
  uint64_t v19 = *(void *)(a2 + 328);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = v19;
  uint64_t v20 = *(void *)(a2 + 344);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = v20;
  uint64_t v21 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = v21;
  uint64_t v22 = *(void *)(a2 + 376);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = v22;
  uint64_t v23 = *(void *)(a2 + 392);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = v23;
  uint64_t v24 = *(void *)(a2 + 408);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = v24;
  uint64_t v25 = *(void *)(a2 + 424);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = v25;
  uint64_t v26 = *(void *)(a2 + 440);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = v26;
  uint64_t v27 = *(void *)(a2 + 456);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = v27;
  uint64_t v28 = *(void *)(a2 + 472);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = v28;
  uint64_t v29 = *(void *)(a2 + 488);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = v29;
  uint64_t v30 = *(void *)(a2 + 512);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = v30;
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s19HomeUtilityServices21InternalUtilityConfigVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 208);
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(void *)(a1 + 208) = v4;
  uint64_t v5 = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 224) = v5;
  *(unsigned char *)(a1 + 233) = *(unsigned char *)(a2 + 233);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s19HomeUtilityServices21InternalUtilityConfigVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(_WORD *)(a1 + 232) = *(_WORD *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 304);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 320);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 336);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 352);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 368);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(a2 + 400);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(a2 + 416);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(a2 + 432);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(a2 + 448);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void *)(a2 + 464);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(a2 + 480);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(a2 + 496);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = v28;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s19HomeUtilityServices21InternalUtilityConfigVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 544)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2527FCEE8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 536) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 544) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 544) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalUtilityConfigurationResponse()
{
  return &type metadata for InternalUtilityConfigurationResponse;
}

ValueMetadata *type metadata accessor for InternalUtilityConfig.CodingKeys()
{
  return &type metadata for InternalUtilityConfig.CodingKeys;
}

ValueMetadata *type metadata accessor for InternalUtilityTermsAndConditions()
{
  return &type metadata for InternalUtilityTermsAndConditions;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for InternalUtilityApplicationsList()
{
  return &type metadata for InternalUtilityApplicationsList;
}

uint64_t _s19HomeUtilityServices22InternalUtilitySupportVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s19HomeUtilityServices22InternalUtilitySupportVwcp_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s19HomeUtilityServices22InternalUtilitySupportVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s19HomeUtilityServices22InternalUtilitySupportVwta_0(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UtilityTransactionData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UtilityTransactionData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalUtilitySupport()
{
  return &type metadata for InternalUtilitySupport;
}

uint64_t destroy for InternalUtilityOrganization()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for InternalUtilityOrganization(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  uint64_t v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  uint64_t v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  uint64_t v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  uint64_t v13 = a2[21];
  a1[20] = a2[20];
  a1[21] = v13;
  uint64_t v14 = a2[23];
  a1[22] = a2[22];
  a1[23] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InternalUtilityOrganization(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  a1[23] = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy192_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

void *assignWithTake for InternalUtilityOrganization(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = a2[23];
  a1[22] = a2[22];
  a1[23] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InternalUtilityOrganization(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 192)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InternalUtilityOrganization(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 192) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 192) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalUtilityOrganization()
{
  return &type metadata for InternalUtilityOrganization;
}

ValueMetadata *type metadata accessor for InternalAlternateSuppliers()
{
  return &type metadata for InternalAlternateSuppliers;
}

uint64_t destroy for InternalUtilityEnvironment()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InternalUtilityEnvironment(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  uint64_t v8 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  uint64_t v10 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v10;
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v11 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v11;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_WORD *)(a1 + 200) = *(_WORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InternalUtilityEnvironment(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = v4;
  uint64_t v5 = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 192) = v5;
  *(unsigned char *)(a1 + 201) = *(unsigned char *)(a2 + 201);
  return a1;
}

__n128 __swift_memcpy202_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 186) = *(_OWORD *)(a2 + 186);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for InternalUtilityEnvironment(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_WORD *)(a1 + 200) = *(_WORD *)(a2 + 200);
  return a1;
}

uint64_t getEnumTagSinglePayload for InternalUtilityEnvironment(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 202)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InternalUtilityEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 200) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 202) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 202) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalUtilityEnvironment()
{
  return &type metadata for InternalUtilityEnvironment;
}

ValueMetadata *type metadata accessor for InternalUtilityArtwork()
{
  return &type metadata for InternalUtilityArtwork;
}

unint64_t sub_2527FDD48()
{
  unint64_t result = qword_269C1E2B0;
  if (!qword_269C1E2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E2B0);
  }
  return result;
}

unint64_t sub_2527FDDA0()
{
  unint64_t result = qword_269C1E2B8;
  if (!qword_269C1E2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E2B8);
  }
  return result;
}

unint64_t sub_2527FDDF8()
{
  unint64_t result = qword_269C1E2C0;
  if (!qword_269C1E2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E2C0);
  }
  return result;
}

unint64_t sub_2527FDE4C()
{
  unint64_t result = qword_269C1E2D0;
  if (!qword_269C1E2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E2D0);
  }
  return result;
}

unint64_t sub_2527FDEA0()
{
  unint64_t result = qword_269C1E2E0;
  if (!qword_269C1E2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E2E0);
  }
  return result;
}

unint64_t sub_2527FDEF4()
{
  unint64_t result = qword_269C1E2E8;
  if (!qword_269C1E2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E2E8);
  }
  return result;
}

unint64_t sub_2527FDF48()
{
  unint64_t result = qword_269C1E2F0;
  if (!qword_269C1E2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E2F0);
  }
  return result;
}

unint64_t sub_2527FDF9C()
{
  unint64_t result = qword_269C1E300;
  if (!qword_269C1E300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E300);
  }
  return result;
}

unint64_t sub_2527FDFF0()
{
  unint64_t result = qword_269C1E310;
  if (!qword_269C1E310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E310);
  }
  return result;
}

unint64_t sub_2527FE044()
{
  unint64_t result = qword_269C1E318;
  if (!qword_269C1E318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E318);
  }
  return result;
}

unint64_t sub_2527FE098()
{
  unint64_t result = qword_269C1E328;
  if (!qword_269C1E328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E328);
  }
  return result;
}

unint64_t sub_2527FE0EC()
{
  unint64_t result = qword_269C1E338;
  if (!qword_269C1E338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E338);
  }
  return result;
}

unint64_t sub_2527FE140()
{
  unint64_t result = qword_269C1E348;
  if (!qword_269C1E348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E348);
  }
  return result;
}

uint64_t sub_2527FE194(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701080931 && a2 == 0xE400000000000000;
  if (v2 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2527FE268(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000025283CF10 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D726F6674616C70 && a2 == 0xE800000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6B726F77747261 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_2527FE40C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6966697373616C63 && a2 == 0xEE006E6F69746163 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000025283CEF0 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x616F626E4F666174 && a2 == 0xED0000676E696472 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000025283AF20 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000025283AF60 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000025283AF40)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_2527FE778@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E358);
  uint64_t v5 = *(void *)(v111 - 8);
  MEMORY[0x270FA5388](v111);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2527FDEA0();
  sub_252831B28();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v8 = v5;
  long long v65 = a2;
  LOBYTE(v78) = 0;
  uint64_t v9 = sub_252831968();
  uint64_t v11 = v10;
  uint64_t v64 = v9;
  LOBYTE(v78) = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = (uint64_t)a1;
  uint64_t v12 = sub_252831968();
  uint64_t v15 = v14;
  uint64_t v63 = v12;
  LOBYTE(v78) = 2;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_252831968();
  uint64_t v18 = v17;
  uint64_t v62 = v16;
  LOBYTE(v66) = 3;
  sub_2527FEF88();
  swift_bridgeObjectRetain();
  sub_252831998();
  uint64_t v61 = v18;
  uint64_t v19 = v79;
  uint64_t v54 = v80;
  uint64_t v55 = v78;
  uint64_t v53 = v81;
  LOBYTE(v66) = 4;
  sub_2527FEFDC();
  swift_bridgeObjectRetain();
  sub_252831998();
  uint64_t v52 = v19;
  int v47 = v78;
  uint64_t v20 = v80;
  uint64_t v48 = v81;
  uint64_t v49 = v79;
  uint64_t v59 = v83;
  uint64_t v60 = v82;
  uint64_t v21 = v87;
  uint64_t v45 = v86;
  uint64_t v46 = v85;
  uint64_t v22 = v89;
  uint64_t v44 = v88;
  LOBYTE(v78) = 5;
  uint64_t v57 = v84;
  swift_bridgeObjectRetain();
  uint64_t v58 = v21;
  swift_bridgeObjectRetain();
  uint64_t v56 = v22;
  swift_bridgeObjectRetain();
  uint64_t v51 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v50 = 0;
  uint64_t v43 = sub_252831948();
  char v109 = v23 & 1;
  LOBYTE(v78) = 6;
  LODWORD(v20) = v23;
  uint64_t v24 = sub_252831948();
  int v41 = v20;
  uint64_t v42 = v24;
  LOBYTE(v20) = v25 & 1;
  char v107 = v25 & 1;
  char v106 = 7;
  int v26 = sub_252831938();
  uint64_t v27 = *(void (**)(void, void))(v8 + 8);
  LOBYTE(v21) = v26;
  int v40 = v26;
  v27(v7, v111);
  *(void *)&long long v66 = v64;
  *((void *)&v66 + 1) = v11;
  *(void *)&long long v67 = v63;
  *((void *)&v67 + 1) = v15;
  *(void *)&long long v68 = v62;
  *((void *)&v68 + 1) = v61;
  *(void *)&long long v69 = v55;
  *((void *)&v69 + 1) = v52;
  *(void *)&long long v70 = v54;
  *((void *)&v70 + 1) = v53;
  LOBYTE(v71) = v47;
  *((void *)&v71 + 1) = v49;
  *(void *)&long long v72 = v51;
  *((void *)&v72 + 1) = v48;
  *(void *)&long long v73 = v60;
  *((void *)&v73 + 1) = v59;
  *(void *)&long long v74 = v57;
  *((void *)&v74 + 1) = v46;
  *(void *)&long long v75 = v45;
  *((void *)&v75 + 1) = v58;
  *(void *)&long long v76 = v44;
  *((void *)&v76 + 1) = v56;
  *(void *)&v77[0] = v43;
  BYTE8(v77[0]) = v41 & 1;
  *(void *)&v77[1] = v42;
  BYTE8(v77[1]) = v20;
  BYTE9(v77[1]) = v21;
  sub_2527FBE54((uint64_t)&v66);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = v57;
  swift_bridgeObjectRelease();
  uint64_t v29 = v59;
  swift_bridgeObjectRelease();
  uint64_t v30 = v60;
  swift_bridgeObjectRelease();
  uint64_t v31 = v51;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v13);
  uint64_t v78 = v64;
  uint64_t v79 = v11;
  uint64_t v80 = v63;
  uint64_t v81 = v15;
  uint64_t v82 = v62;
  uint64_t v83 = v61;
  uint64_t v84 = v55;
  uint64_t v85 = v52;
  uint64_t v86 = v54;
  uint64_t v87 = v53;
  LOBYTE(v88) = v47;
  *(_DWORD *)((char *)&v88 + 1) = v110[0];
  HIDWORD(v88) = *(_DWORD *)((char *)v110 + 3);
  uint64_t v89 = v49;
  uint64_t v90 = v31;
  uint64_t v91 = v48;
  uint64_t v92 = v30;
  uint64_t v93 = v29;
  uint64_t v94 = v28;
  uint64_t v95 = v46;
  uint64_t v96 = v45;
  uint64_t v97 = v58;
  uint64_t v98 = v44;
  uint64_t v99 = v56;
  uint64_t v100 = v43;
  char v101 = v109;
  *(_DWORD *)char v102 = *(_DWORD *)v108;
  *(_DWORD *)&v102[3] = *(_DWORD *)&v108[3];
  uint64_t v103 = v42;
  char v104 = v107;
  char v105 = v40;
  uint64_t result = sub_2527FBCF8((uint64_t)&v78);
  long long v33 = v77[0];
  uint64_t v34 = v65;
  v65[10] = v76;
  v34[11] = v33;
  *(_OWORD *)((char *)v34 + 186) = *(_OWORD *)((char *)v77 + 10);
  long long v35 = v73;
  v34[6] = v72;
  v34[7] = v35;
  long long v36 = v75;
  v34[8] = v74;
  v34[9] = v36;
  long long v37 = v69;
  v34[2] = v68;
  v34[3] = v37;
  long long v38 = v71;
  v34[4] = v70;
  v34[5] = v38;
  long long v39 = v67;
  *uint64_t v34 = v66;
  v34[1] = v39;
  return result;
}

unint64_t sub_2527FEF88()
{
  unint64_t result = qword_269C1E360;
  if (!qword_269C1E360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E360);
  }
  return result;
}

unint64_t sub_2527FEFDC()
{
  unint64_t result = qword_269C1E368;
  if (!qword_269C1E368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E368);
  }
  return result;
}

uint64_t sub_2527FF030(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x800000025283CF30 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000025283AE60 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000025283AE80)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2527FF174(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E4E8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252803608();
  sub_252831B28();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    uint64_t v7 = sub_252831968();
    char v11 = 1;
    swift_bridgeObjectRetain();
    sub_252831988();
    char v10 = 2;
    sub_252831988();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_2527FF390(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64656C62616E65 && a2 == 0xE700000000000000;
  if (v2 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000025283CF30 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6449746E65696C63 && a2 == 0xE800000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73646C656966 && a2 == 0xE600000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x736E6F6974636573 && a2 == 0xE800000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65706F725070746FLL && a2 == 0xED00007365697472 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000025283CF50)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_2527FF68C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E4F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25280365C();
  sub_252831B28();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  LOBYTE(v40) = 0;
  char v9 = sub_252831978();
  LOBYTE(v40) = 1;
  uint64_t v38 = sub_252831968();
  LOBYTE(v40) = 2;
  uint64_t v11 = v10;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_252831968();
  uint64_t v39 = v11;
  uint64_t v36 = v12;
  uint64_t v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E498);
  char v43 = 3;
  sub_2528038B8(&qword_269C1E4F8, &qword_269C1E498, (void (*)(void))sub_252803864);
  uint64_t v37 = v14;
  swift_bridgeObjectRetain();
  sub_252831998();
  uint64_t v15 = v37;
  uint64_t v16 = v40;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E4B8);
  char v43 = 4;
  sub_2528038B8(&qword_269C1E508, &qword_269C1E4B8, (void (*)(void))sub_252803924);
  uint64_t v34 = v16;
  swift_bridgeObjectRetain();
  sub_252831958();
  uint64_t v17 = v40;
  char v43 = 5;
  sub_252803978();
  uint64_t v35 = v17;
  swift_bridgeObjectRetain();
  sub_252831998();
  uint64_t v31 = v41;
  uint64_t v32 = v40;
  LOBYTE(v40) = 6;
  uint64_t v33 = v42;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_252831968();
  uint64_t v20 = v19;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v30 = v18;
  v21(v8, v5);
  uint64_t v22 = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v23 = v34;
  swift_bridgeObjectRetain();
  uint64_t v24 = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v25 = v33;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)a2 = v9 & 1;
  *(void *)(a2 + 8) = v38;
  *(void *)(a2 + 16) = v22;
  *(void *)(a2 + 24) = v36;
  *(void *)(a2 + 32) = v15;
  *(void *)(a2 + 40) = v23;
  *(void *)(a2 + 48) = v24;
  uint64_t v27 = v31;
  *(void *)(a2 + 56) = v32;
  *(void *)(a2 + 64) = v27;
  uint64_t v28 = v30;
  *(void *)(a2 + 72) = v25;
  *(void *)(a2 + 80) = v28;
  *(void *)(a2 + 88) = v20;
  return result;
}

uint64_t sub_2527FFC98(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E5A8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25280451C();
  sub_252831B28();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    v9[31] = 0;
    uint64_t v7 = sub_252831968();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF40);
    v9[15] = 1;
    sub_25279077C((unint64_t *)&unk_26B22BF50);
    swift_bridgeObjectRetain();
    sub_252831998();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_2527FFEE0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79654B6D726F66 && a2 == 0xE700000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74786554746E6968 && a2 == 0xE800000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E6F4374786574 && a2 == 0xEF65707954746E65 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6472616F6279656BLL && a2 == 0xEC00000065707954 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6572756365537369 && a2 == 0xE800000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025283B0E0 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025283B100 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7865676572 && a2 == 0xE500000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6465726975716572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_252800364@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E5A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  long long v75 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_2528044C8();
  sub_252831B28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v75);
    return v5;
  }
  else
  {
    uint64_t v10 = v6;
    uint64_t v52 = a2;
    LOBYTE(v65[0]) = 0;
    uint64_t v11 = sub_252831968();
    uint64_t v13 = v12;
    LOBYTE(v65[0]) = 1;
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_252831968();
    LOBYTE(v65[0]) = 2;
    uint64_t v15 = v14;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_252831968();
    uint64_t v56 = v15;
    uint64_t v50 = v16;
    LOBYTE(v65[0]) = 3;
    uint64_t v18 = v17;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_252831928();
    uint64_t v55 = v18;
    uint64_t v49 = v19;
    LOBYTE(v65[0]) = 4;
    uint64_t v21 = v20;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_252831968();
    uint64_t v54 = v21;
    uint64_t v48 = v22;
    LOBYTE(v65[0]) = 5;
    uint64_t v24 = v23;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_252831968();
    uint64_t v53 = v24;
    uint64_t v47 = v25;
    LOBYTE(v65[0]) = 6;
    uint64_t v27 = v26;
    swift_bridgeObjectRetain();
    int v46 = sub_252831978();
    LOBYTE(v65[0]) = 7;
    uint64_t v45 = sub_252831988();
    LOBYTE(v65[0]) = 8;
    uint64_t v44 = sub_252831988();
    LOBYTE(v65[0]) = 9;
    uint64_t v42 = sub_252831968();
    uint64_t v43 = v28;
    char v73 = 10;
    swift_bridgeObjectRetain();
    HIDWORD(v41) = sub_252831938();
    v46 &= 1u;
    char v29 = v46;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
    *(void *)&long long v57 = v11;
    *((void *)&v57 + 1) = v13;
    *(void *)&long long v58 = v51;
    *((void *)&v58 + 1) = v56;
    *(void *)&long long v59 = v50;
    *((void *)&v59 + 1) = v55;
    uint64_t v30 = v54;
    *(void *)&long long v60 = v49;
    *((void *)&v60 + 1) = v54;
    *(void *)&long long v61 = v48;
    *((void *)&v61 + 1) = v53;
    *(void *)&long long v62 = v47;
    *((void *)&v62 + 1) = v27;
    uint64_t v31 = v27;
    LOBYTE(v63) = v29;
    uint64_t v32 = v43;
    *((void *)&v63 + 1) = v45;
    *(void *)&v64[0] = v44;
    *((void *)&v64[0] + 1) = v42;
    *(void *)&v64[1] = v43;
    BYTE8(v64[1]) = BYTE4(v41);
    sub_2528045C4((uint64_t)&v57);
    swift_bridgeObjectRelease();
    uint64_t v33 = v56;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v34 = v53;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v75);
    v65[0] = v11;
    v65[1] = v13;
    v65[2] = v51;
    v65[3] = v33;
    v65[4] = v50;
    v65[5] = v55;
    v65[6] = v49;
    v65[7] = v30;
    v65[8] = v48;
    v65[9] = v34;
    v65[10] = v47;
    v65[11] = v31;
    char v66 = v46;
    *(_DWORD *)long long v67 = v74[0];
    *(_DWORD *)&v67[3] = *(_DWORD *)((char *)v74 + 3);
    uint64_t v68 = v45;
    uint64_t v69 = v44;
    uint64_t v70 = v42;
    uint64_t v71 = v32;
    char v72 = BYTE4(v41);
    uint64_t result = sub_252804650((uint64_t)v65);
    long long v36 = v64[0];
    uint64_t v37 = v52;
    v52[6] = v63;
    v37[7] = v36;
    *(_OWORD *)((char *)v37 + 121) = *(_OWORD *)((char *)v64 + 9);
    long long v38 = v60;
    v37[2] = v59;
    v37[3] = v38;
    long long v39 = v62;
    v37[4] = v61;
    v37[5] = v39;
    long long v40 = v58;
    *uint64_t v37 = v57;
    v37[1] = v40;
  }
  return result;
}

uint64_t sub_252800B24(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6874676E656CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6472616F6279656BLL && a2 == 0xEC00000065707954)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252800C28(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E5B0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_252804570();
  sub_252831B28();
  if (!v1)
  {
    v9[15] = 0;
    uint64_t v7 = sub_252831988();
    v9[14] = 1;
    sub_252831968();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v7;
}

uint64_t sub_252800DD0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D754E656E6F6870 && a2 == 0xEB00000000726562 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65746973626577 && a2 == 0xE700000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D614E74726F6873 && a2 == 0xE900000000000065 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73736572646461 && a2 == 0xE700000000000000 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746E656449616965 && a2 == 0xED00007265696669)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_25280108C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E378);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  long long v65 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_2527FDFF0();
  sub_252831B28();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v65);
  }
  uint64_t v10 = v6;
  uint64_t v64 = a2;
  LOBYTE(v78) = 0;
  uint64_t v11 = sub_252831968();
  uint64_t v13 = v12;
  LOBYTE(v78) = 1;
  swift_bridgeObjectRetain();
  uint64_t v59 = sub_252831968();
  LOBYTE(v78) = 2;
  uint64_t v15 = v14;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_252831968();
  uint64_t v63 = v17;
  uint64_t v53 = v16;
  uint64_t v58 = v15;
  LOBYTE(v78) = 3;
  swift_bridgeObjectRetain();
  uint64_t v57 = 0;
  uint64_t v52 = sub_252831928();
  LOBYTE(v66) = 4;
  uint64_t v19 = v18;
  sub_2528017C4();
  swift_bridgeObjectRetain();
  sub_252831998();
  uint64_t v56 = v19;
  uint64_t v20 = v81;
  uint64_t v21 = v83;
  uint64_t v48 = v82;
  uint64_t v49 = v80;
  uint64_t v46 = v86;
  uint64_t v47 = v84;
  uint64_t v61 = v85;
  uint64_t v62 = v87;
  uint64_t v45 = v88;
  uint64_t v51 = v89;
  uint64_t v22 = v91;
  uint64_t v43 = v78;
  uint64_t v44 = v90;
  char v102 = 5;
  uint64_t v55 = v79;
  swift_bridgeObjectRetain();
  uint64_t v54 = v20;
  swift_bridgeObjectRetain();
  uint64_t v50 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v60 = v22;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_252831968();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v25 = v23;
  uint64_t v41 = v26;
  uint64_t v42 = v23;
  uint64_t v27 = v26;
  v24(v8, v5);
  *(void *)&long long v66 = v11;
  *((void *)&v66 + 1) = v13;
  *(void *)&long long v67 = v59;
  *((void *)&v67 + 1) = v58;
  *(void *)&long long v68 = v53;
  *((void *)&v68 + 1) = v63;
  *(void *)&long long v69 = v52;
  *((void *)&v69 + 1) = v56;
  *(void *)&long long v70 = v43;
  *((void *)&v70 + 1) = v55;
  *(void *)&long long v71 = v49;
  *((void *)&v71 + 1) = v54;
  *(void *)&long long v72 = v48;
  *((void *)&v72 + 1) = v50;
  *(void *)&long long v73 = v47;
  *((void *)&v73 + 1) = v61;
  *(void *)&long long v74 = v46;
  *((void *)&v74 + 1) = v62;
  *(void *)&long long v75 = v45;
  *((void *)&v75 + 1) = v51;
  *(void *)&long long v76 = v44;
  *((void *)&v76 + 1) = v60;
  *(void *)&long long v77 = v25;
  *((void *)&v77 + 1) = v27;
  sub_2527FBFB0((uint64_t)&v66);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = v63;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v29 = v61;
  swift_bridgeObjectRelease();
  uint64_t v30 = v50;
  swift_bridgeObjectRelease();
  uint64_t v31 = v54;
  swift_bridgeObjectRelease();
  uint64_t v32 = v55;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v65);
  uint64_t v78 = v11;
  uint64_t v79 = v13;
  uint64_t v80 = v59;
  uint64_t v81 = v58;
  uint64_t v82 = v53;
  uint64_t v83 = v28;
  uint64_t v84 = v52;
  uint64_t v85 = v56;
  uint64_t v86 = v43;
  uint64_t v87 = v32;
  uint64_t v88 = v49;
  uint64_t v89 = v31;
  uint64_t v90 = v48;
  uint64_t v91 = v30;
  uint64_t v92 = v47;
  uint64_t v93 = v29;
  uint64_t v94 = v46;
  uint64_t v95 = v62;
  uint64_t v96 = v45;
  uint64_t v97 = v51;
  uint64_t v98 = v44;
  uint64_t v99 = v60;
  uint64_t v100 = v42;
  uint64_t v101 = v41;
  uint64_t result = sub_2527FBC1C((uint64_t)&v78);
  long long v34 = v75;
  uint64_t v35 = v64;
  v64[8] = v74;
  v35[9] = v34;
  long long v36 = v77;
  v35[10] = v76;
  v35[11] = v36;
  long long v37 = v71;
  v35[4] = v70;
  v35[5] = v37;
  long long v38 = v73;
  v35[6] = v72;
  v35[7] = v38;
  long long v39 = v67;
  *uint64_t v35 = v66;
  v35[1] = v39;
  long long v40 = v69;
  v35[2] = v68;
  v35[3] = v40;
  return result;
}

unint64_t sub_2528017C4()
{
  unint64_t result = qword_269C1E380;
  if (!qword_269C1E380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E380);
  }
  return result;
}

uint64_t sub_252801818@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E520);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252803810();
  sub_252831B28();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v54 = 0;
  uint64_t v9 = sub_252831968();
  uint64_t v11 = v10;
  uint64_t v47 = v9;
  char v53 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_252831968();
  uint64_t v14 = v13;
  uint64_t v45 = v12;
  uint64_t v46 = v11;
  char v52 = 2;
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_252831968();
  uint64_t v44 = v14;
  char v51 = 3;
  uint64_t v16 = v15;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_252831968();
  uint64_t v43 = v18;
  uint64_t v39 = v17;
  char v50 = 4;
  swift_bridgeObjectRetain();
  uint64_t v41 = 0;
  uint64_t v38 = sub_252831968();
  char v49 = 5;
  uint64_t v20 = v19;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_252831968();
  uint64_t v40 = v20;
  uint64_t v37 = v21;
  char v48 = 6;
  uint64_t v23 = v22;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_252831968();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v41 = v24;
  uint64_t v26 = v8;
  uint64_t v28 = v27;
  v25(v26, v5);
  swift_bridgeObjectRetain();
  uint64_t v29 = v44;
  swift_bridgeObjectRetain();
  uint64_t v30 = v16;
  swift_bridgeObjectRetain();
  uint64_t v31 = v43;
  swift_bridgeObjectRetain();
  uint64_t v32 = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  uint64_t v33 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v34 = v46;
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v47;
  a2[1] = v34;
  a2[2] = v45;
  a2[3] = v29;
  a2[4] = v42;
  a2[5] = v30;
  a2[6] = v39;
  a2[7] = v31;
  a2[8] = v38;
  a2[9] = v32;
  a2[10] = v37;
  a2[11] = v23;
  a2[12] = v41;
  a2[13] = v33;
  return result;
}

uint64_t sub_252801DDC()
{
  unint64_t v0 = sub_252831918();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_252801E28@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v31 = a4;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_252831B28();
  if (v4) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v10 = (uint64_t)a1;
  uint64_t v11 = v7;
  char v36 = 0;
  uint64_t v12 = sub_252831968();
  uint64_t v14 = v13;
  char v35 = 1;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_252831968();
  uint64_t v30 = v16;
  uint64_t v29 = v15;
  char v34 = 2;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_252831968();
  uint64_t v28 = v17;
  char v33 = 3;
  swift_bridgeObjectRetain();
  uint64_t v18 = v32;
  uint64_t v19 = sub_252831968();
  uint64_t v21 = v20;
  uint64_t v22 = v19;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v18);
  swift_bridgeObjectRetain();
  uint64_t v23 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v10);
  swift_bridgeObjectRelease();
  uint64_t v24 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v26 = v31;
  *uint64_t v31 = v12;
  v26[1] = v14;
  uint64_t v26[2] = v29;
  void v26[3] = v23;
  v26[4] = v27;
  v26[5] = v24;
  v26[6] = v22;
  v26[7] = v21;
  return result;
}

uint64_t sub_25280218C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1954047348 && a2 == 0xE400000000000000;
  if (v2 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6910581 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252802260(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v13 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  a3();
  sub_252831B28();
  if (v3)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    uint64_t v10 = v13;
    char v15 = 0;
    uint64_t v9 = sub_252831968();
    char v14 = 1;
    swift_bridgeObjectRetain();
    sub_252831968();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v6);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v9;
}

unint64_t sub_252802478()
{
  unint64_t result = qword_269C1E3A8;
  if (!qword_269C1E3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E3A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalUtilityConfigurationResponse.CodingKeys()
{
  return &type metadata for InternalUtilityConfigurationResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for InternalUtilityTermsAndConditions.CodingKeys()
{
  return &type metadata for InternalUtilityTermsAndConditions.CodingKeys;
}

ValueMetadata *type metadata accessor for InternalUtilityApplicationsList.CodingKeys()
{
  return &type metadata for InternalUtilityApplicationsList.CodingKeys;
}

unsigned char *_s19HomeUtilityServices31InternalUtilityApplicationsListV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2528025D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalUtilitySupport.CodingKeys()
{
  return &type metadata for InternalUtilitySupport.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for InternalUtilityOrganization.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2528026D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalUtilityOrganization.CodingKeys()
{
  return &type metadata for InternalUtilityOrganization.CodingKeys;
}

ValueMetadata *type metadata accessor for InternalAlternateSuppliers.CodingKeys()
{
  return &type metadata for InternalAlternateSuppliers.CodingKeys;
}

uint64_t _s19HomeUtilityServices21InternalUtilityConfigV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s19HomeUtilityServices21InternalUtilityConfigV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25280287CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalUtilityEnvironment.CodingKeys()
{
  return &type metadata for InternalUtilityEnvironment.CodingKeys;
}

unsigned char *_s19HomeUtilityServices36InternalUtilityConfigurationResponseV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x252802950);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalUtilityArtwork.CodingKeys()
{
  return &type metadata for InternalUtilityArtwork.CodingKeys;
}

ValueMetadata *type metadata accessor for InternalUtilityAddress()
{
  return &type metadata for InternalUtilityAddress;
}

uint64_t destroy for InternalTAfOnboarding()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InternalTAfOnboarding(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InternalTAfOnboarding(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for InternalTAfOnboarding(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InternalTAfOnboarding(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InternalTAfOnboarding(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalTAfOnboarding()
{
  return &type metadata for InternalTAfOnboarding;
}

uint64_t initializeWithCopy for InternalPasswordOnboarding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InternalPasswordOnboarding(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for InternalPasswordOnboarding(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for InternalPasswordOnboarding()
{
  return &type metadata for InternalPasswordOnboarding;
}

unint64_t sub_252802DCC()
{
  unint64_t result = qword_269C1E3B8;
  if (!qword_269C1E3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E3B8);
  }
  return result;
}

unint64_t sub_252802E24()
{
  unint64_t result = qword_269C1E3C0;
  if (!qword_269C1E3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E3C0);
  }
  return result;
}

unint64_t sub_252802E7C()
{
  unint64_t result = qword_269C1E3C8;
  if (!qword_269C1E3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E3C8);
  }
  return result;
}

unint64_t sub_252802ED4()
{
  unint64_t result = qword_269C1E3D0;
  if (!qword_269C1E3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E3D0);
  }
  return result;
}

unint64_t sub_252802F2C()
{
  unint64_t result = qword_269C1E3D8;
  if (!qword_269C1E3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E3D8);
  }
  return result;
}

unint64_t sub_252802F84()
{
  unint64_t result = qword_269C1E3E0;
  if (!qword_269C1E3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E3E0);
  }
  return result;
}

unint64_t sub_252802FDC()
{
  unint64_t result = qword_269C1E3E8;
  if (!qword_269C1E3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E3E8);
  }
  return result;
}

unint64_t sub_252803034()
{
  unint64_t result = qword_269C1E3F0;
  if (!qword_269C1E3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E3F0);
  }
  return result;
}

unint64_t sub_25280308C()
{
  unint64_t result = qword_269C1E3F8;
  if (!qword_269C1E3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E3F8);
  }
  return result;
}

unint64_t sub_2528030E4()
{
  unint64_t result = qword_269C1E400;
  if (!qword_269C1E400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E400);
  }
  return result;
}

unint64_t sub_25280313C()
{
  unint64_t result = qword_269C1E408;
  if (!qword_269C1E408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E408);
  }
  return result;
}

unint64_t sub_252803194()
{
  unint64_t result = qword_269C1E410;
  if (!qword_269C1E410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E410);
  }
  return result;
}

unint64_t sub_2528031EC()
{
  unint64_t result = qword_269C1E418;
  if (!qword_269C1E418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E418);
  }
  return result;
}

unint64_t sub_252803244()
{
  unint64_t result = qword_269C1E420;
  if (!qword_269C1E420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E420);
  }
  return result;
}

unint64_t sub_25280329C()
{
  unint64_t result = qword_269C1E428;
  if (!qword_269C1E428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E428);
  }
  return result;
}

unint64_t sub_2528032F4()
{
  unint64_t result = qword_269C1E430;
  if (!qword_269C1E430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E430);
  }
  return result;
}

unint64_t sub_25280334C()
{
  unint64_t result = qword_269C1E438;
  if (!qword_269C1E438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E438);
  }
  return result;
}

unint64_t sub_2528033A4()
{
  unint64_t result = qword_269C1E440;
  if (!qword_269C1E440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E440);
  }
  return result;
}

unint64_t sub_2528033FC()
{
  unint64_t result = qword_269C1E448;
  if (!qword_269C1E448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E448);
  }
  return result;
}

unint64_t sub_252803454()
{
  unint64_t result = qword_269C1E450;
  if (!qword_269C1E450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E450);
  }
  return result;
}

unint64_t sub_2528034AC()
{
  unint64_t result = qword_269C1E458;
  if (!qword_269C1E458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E458);
  }
  return result;
}

unint64_t sub_252803504()
{
  unint64_t result = qword_269C1E460;
  if (!qword_269C1E460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E460);
  }
  return result;
}

unint64_t sub_25280355C()
{
  unint64_t result = qword_269C1E468;
  if (!qword_269C1E468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E468);
  }
  return result;
}

unint64_t sub_2528035B4()
{
  unint64_t result = qword_269C1E470;
  if (!qword_269C1E470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E470);
  }
  return result;
}

unint64_t sub_252803608()
{
  unint64_t result = qword_269C1E480;
  if (!qword_269C1E480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E480);
  }
  return result;
}

unint64_t sub_25280365C()
{
  unint64_t result = qword_269C1E490;
  if (!qword_269C1E490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E490);
  }
  return result;
}

unint64_t sub_2528036B0()
{
  unint64_t result = qword_269C1E4A8;
  if (!qword_269C1E4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E4A8);
  }
  return result;
}

uint64_t sub_252803704(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_252803768()
{
  unint64_t result = qword_269C1E4C8;
  if (!qword_269C1E4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E4C8);
  }
  return result;
}

unint64_t sub_2528037BC()
{
  unint64_t result = qword_269C1E4D0;
  if (!qword_269C1E4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E4D0);
  }
  return result;
}

unint64_t sub_252803810()
{
  unint64_t result = qword_269C1E4E0;
  if (!qword_269C1E4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E4E0);
  }
  return result;
}

unint64_t sub_252803864()
{
  unint64_t result = qword_269C1E500;
  if (!qword_269C1E500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E500);
  }
  return result;
}

uint64_t sub_2528038B8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_252803924()
{
  unint64_t result = qword_269C1E510;
  if (!qword_269C1E510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E510);
  }
  return result;
}

unint64_t sub_252803978()
{
  unint64_t result = qword_269C1E518;
  if (!qword_269C1E518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E518);
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalUtilityAddress.CodingKeys()
{
  return &type metadata for InternalUtilityAddress.CodingKeys;
}

unsigned char *_s19HomeUtilityServices22InternalUtilityAddressV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252803AACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalTAfOnboarding.CodingKeys()
{
  return &type metadata for InternalTAfOnboarding.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for InternalPasswordOnboarding.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252803BB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalPasswordOnboarding.CodingKeys()
{
  return &type metadata for InternalPasswordOnboarding.CodingKeys;
}

uint64_t initializeBufferWithCopyOfBuffer for InternalOtpProperties(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InternalOtpProperties(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for InternalOtpProperties(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for InternalOtpProperties()
{
  return &type metadata for InternalOtpProperties;
}

void *sub_252803CBC(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InternalTAFSection(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for InternalTAFSection(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for InternalTAFSection()
{
  return &type metadata for InternalTAFSection;
}

uint64_t destroy for InternalTAFField()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InternalTAFField(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InternalTAFField(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  return a1;
}

__n128 __swift_memcpy137_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for InternalTAFField(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  return a1;
}

uint64_t getEnumTagSinglePayload for InternalTAFField(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 137)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InternalTAFField(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 136) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 137) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 137) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalTAFField()
{
  return &type metadata for InternalTAFField;
}

unint64_t sub_2528041B4()
{
  unint64_t result = qword_269C1E528;
  if (!qword_269C1E528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E528);
  }
  return result;
}

unint64_t sub_25280420C()
{
  unint64_t result = qword_269C1E530;
  if (!qword_269C1E530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E530);
  }
  return result;
}

unint64_t sub_252804264()
{
  unint64_t result = qword_269C1E538;
  if (!qword_269C1E538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E538);
  }
  return result;
}

unint64_t sub_2528042BC()
{
  unint64_t result = qword_269C1E540;
  if (!qword_269C1E540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E540);
  }
  return result;
}

unint64_t sub_252804314()
{
  unint64_t result = qword_269C1E548;
  if (!qword_269C1E548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E548);
  }
  return result;
}

unint64_t sub_25280436C()
{
  unint64_t result = qword_269C1E550;
  if (!qword_269C1E550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E550);
  }
  return result;
}

unint64_t sub_2528043C4()
{
  unint64_t result = qword_269C1E558;
  if (!qword_269C1E558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E558);
  }
  return result;
}

unint64_t sub_25280441C()
{
  unint64_t result = qword_269C1E560;
  if (!qword_269C1E560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E560);
  }
  return result;
}

unint64_t sub_252804474()
{
  unint64_t result = qword_269C1E568;
  if (!qword_269C1E568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E568);
  }
  return result;
}

unint64_t sub_2528044C8()
{
  unint64_t result = qword_269C1E578;
  if (!qword_269C1E578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E578);
  }
  return result;
}

unint64_t sub_25280451C()
{
  unint64_t result = qword_269C1E588;
  if (!qword_269C1E588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E588);
  }
  return result;
}

unint64_t sub_252804570()
{
  unint64_t result = qword_269C1E598;
  if (!qword_269C1E598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E598);
  }
  return result;
}

uint64_t sub_2528045C4(uint64_t a1)
{
  return a1;
}

uint64_t sub_252804650(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for InternalOtpProperties.CodingKeys()
{
  return &type metadata for InternalOtpProperties.CodingKeys;
}

unsigned char *_s19HomeUtilityServices33InternalUtilityTermsAndConditionsV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2528047B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalTAFSection.CodingKeys()
{
  return &type metadata for InternalTAFSection.CodingKeys;
}

uint64_t getEnumTagSinglePayload for InternalTAFField.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for InternalTAFField.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25280494CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalTAFField.CodingKeys()
{
  return &type metadata for InternalTAFField.CodingKeys;
}

unint64_t sub_252804988()
{
  unint64_t result = qword_269C1E5B8;
  if (!qword_269C1E5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E5B8);
  }
  return result;
}

unint64_t sub_2528049E0()
{
  unint64_t result = qword_269C1E5C0;
  if (!qword_269C1E5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E5C0);
  }
  return result;
}

unint64_t sub_252804A38()
{
  unint64_t result = qword_269C1E5C8;
  if (!qword_269C1E5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E5C8);
  }
  return result;
}

unint64_t sub_252804A90()
{
  unint64_t result = qword_269C1E5D0;
  if (!qword_269C1E5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E5D0);
  }
  return result;
}

unint64_t sub_252804AE8()
{
  unint64_t result = qword_269C1E5D8;
  if (!qword_269C1E5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E5D8);
  }
  return result;
}

unint64_t sub_252804B40()
{
  unint64_t result = qword_269C1E5E0;
  if (!qword_269C1E5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E5E0);
  }
  return result;
}

unint64_t sub_252804B98()
{
  unint64_t result = qword_269C1E5E8;
  if (!qword_269C1E5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E5E8);
  }
  return result;
}

unint64_t sub_252804BF0()
{
  unint64_t result = qword_269C1E5F0;
  if (!qword_269C1E5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E5F0);
  }
  return result;
}

unint64_t sub_252804C48()
{
  unint64_t result = qword_269C1E5F8;
  if (!qword_269C1E5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269C1E5F8);
  }
  return result;
}

uint64_t sub_252804CA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_252830DE8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2528307F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v1, v7);
  sub_252830DD8();
  sub_252830DC8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_252831328();
  swift_bridgeObjectRelease();
  sub_2528307B8();
  swift_bridgeObjectRelease();
  sub_252806AFC();
  sub_2528307B8();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(self, sel_processInfo);
  LOBYTE(v3) = objc_msgSend(v8, sel_isMacCatalystApp);

  if ((v3 & 1) == 0)
  {
    id v9 = objc_msgSend(self, sel_currentDevice);
    id v10 = objc_msgSend(v9, sel_systemName);

    sub_2528312A8();
  }
  sub_2528307B8();
  return swift_bridgeObjectRelease();
}

void sub_252804F18(uint64_t a1, unint64_t a2, uint8_t *a3, unint64_t a4)
{
  if (os_variant_has_internal_diagnostics())
  {
    uint64_t v8 = sub_252830788();
    if (v8)
    {
      uint64_t v9 = v8;
      if (qword_26B22BF18 == -1) {
        goto LABEL_4;
      }
      while (1)
      {
        swift_once();
LABEL_4:
        uint64_t v10 = sub_252831158();
        __swift_project_value_buffer(v10, (uint64_t)qword_26B22C0B8);
        swift_bridgeObjectRetain_n();
        uint64_t v11 = sub_252831138();
        os_log_type_t v12 = sub_252831628();
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = a1;
          char v14 = a3;
          a3 = (uint8_t *)swift_slowAlloc();
          uint64_t v62 = v9;
          uint64_t v15 = swift_slowAlloc();
          uint64_t v64 = v15;
          *(_DWORD *)a3 = 136315138;
          swift_bridgeObjectRetain();
          uint64_t v16 = (uint64_t)v14;
          a1 = v13;
          sub_25278F894(v16, a4, &v64);
          sub_252831698();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_25277D000, v11, v12, ">>> %s", a3, 0xCu);
          swift_arrayDestroy();
          uint64_t v17 = v15;
          uint64_t v9 = v62;
          MEMORY[0x2533BE070](v17, -1, -1);
          MEMORY[0x2533BE070](a3, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        swift_bridgeObjectRetain_n();
        uint64_t v31 = sub_252831138();
        os_log_type_t v32 = sub_252831628();
        if (os_log_type_enabled(v31, v32))
        {
          char v33 = (uint8_t *)swift_slowAlloc();
          a3 = (uint8_t *)swift_slowAlloc();
          uint64_t v64 = (uint64_t)a3;
          *(_DWORD *)char v33 = 136315138;
          swift_bridgeObjectRetain();
          sub_25278F894(a1, a2, &v64);
          sub_252831698();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_25277D000, v31, v32, "%s", v33, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2533BE070](a3, -1, -1);
          MEMORY[0x2533BE070](v33, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        a4 = sub_252831138();
        os_log_type_t v34 = sub_252831628();
        a2 = v34;
        if (os_log_type_enabled((os_log_t)a4, v34))
        {
          char v35 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)char v35 = 0;
          _os_log_impl(&dword_25277D000, (os_log_t)a4, (os_log_type_t)a2, "======== Headers =======", v35, 2u);
          MEMORY[0x2533BE070](v35, -1, -1);
        }

        int64_t v36 = 0;
        uint64_t v37 = *(void *)(v9 + 64);
        uint64_t v60 = v9 + 64;
        uint64_t v38 = 1 << *(unsigned char *)(v9 + 32);
        uint64_t v39 = -1;
        if (v38 < 64) {
          uint64_t v39 = ~(-1 << v38);
        }
        a1 = v39 & v37;
        int64_t v61 = (unint64_t)(v38 + 63) >> 6;
        if ((v39 & v37) != 0)
        {
          do
          {
            while (1)
            {
              unint64_t v40 = __clz(__rbit64(a1));
              a1 &= a1 - 1;
              int64_t v63 = v36;
              unint64_t v41 = v40 | (v36 << 6);
LABEL_42:
              uint64_t v46 = 16 * v41;
              uint64_t v47 = (unint64_t *)(*(void *)(v9 + 48) + v46);
              a2 = *v47;
              unint64_t v48 = v47[1];
              char v49 = (uint64_t *)(*(void *)(v9 + 56) + v46);
              uint64_t v51 = *v49;
              unint64_t v50 = v49[1];
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              a3 = (uint8_t *)sub_252831138();
              os_log_type_t v52 = sub_252831628();
              a4 = v52;
              if (os_log_type_enabled((os_log_t)a3, v52)) {
                break;
              }

              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              int64_t v36 = v63;
              if (!a1) {
                goto LABEL_28;
              }
            }
            uint64_t v53 = v9;
            uint64_t v54 = swift_slowAlloc();
            uint64_t v55 = swift_slowAlloc();
            uint64_t v64 = v55;
            *(_DWORD *)uint64_t v54 = 136315394;
            swift_bridgeObjectRetain();
            *(void *)(v54 + 4) = sub_25278F894(a2, v48, &v64);
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v54 + 12) = 2080;
            swift_bridgeObjectRetain();
            *(void *)(v54 + 14) = sub_25278F894(v51, v50, &v64);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_25277D000, (os_log_t)a3, (os_log_type_t)a4, "%s: %s", (uint8_t *)v54, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x2533BE070](v55, -1, -1);
            uint64_t v56 = v54;
            uint64_t v9 = v53;
            MEMORY[0x2533BE070](v56, -1, -1);

            int64_t v36 = v63;
          }
          while (a1);
        }
LABEL_28:
        int64_t v42 = v36 + 1;
        if (__OFADD__(v36, 1))
        {
          __break(1u);
        }
        else
        {
          if (v42 >= v61) {
            goto LABEL_45;
          }
          unint64_t v43 = *(void *)(v60 + 8 * v42);
          int64_t v44 = v36 + 1;
          if (v43) {
            goto LABEL_41;
          }
          int64_t v44 = v36 + 2;
          if (v36 + 2 >= v61) {
            goto LABEL_45;
          }
          unint64_t v43 = *(void *)(v60 + 8 * v44);
          if (v43) {
            goto LABEL_41;
          }
          int64_t v44 = v36 + 3;
          if (v36 + 3 >= v61) {
            goto LABEL_45;
          }
          unint64_t v43 = *(void *)(v60 + 8 * v44);
          if (v43) {
            goto LABEL_41;
          }
          uint64_t v45 = v36 + 4;
          if (v36 + 4 >= v61)
          {
LABEL_45:
            swift_release();
            uint64_t v57 = sub_252831138();
            os_log_type_t v58 = sub_252831628();
            if (os_log_type_enabled(v57, v58))
            {
              uint64_t v59 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v59 = 0;
              _os_log_impl(&dword_25277D000, v57, v58, "========================", v59, 2u);
              MEMORY[0x2533BE070](v59, -1, -1);
            }

            return;
          }
          unint64_t v43 = *(void *)(v60 + 8 * v45);
          if (v43)
          {
            int64_t v44 = v36 + 4;
LABEL_41:
            a1 = (v43 - 1) & v43;
            int64_t v63 = v44;
            unint64_t v41 = __clz(__rbit64(v43)) + (v44 << 6);
            goto LABEL_42;
          }
          while (1)
          {
            int64_t v44 = v45 + 1;
            if (__OFADD__(v45, 1)) {
              break;
            }
            if (v44 >= v61) {
              goto LABEL_45;
            }
            unint64_t v43 = *(void *)(v60 + 8 * v44);
            ++v45;
            if (v43) {
              goto LABEL_41;
            }
          }
        }
        __break(1u);
      }
    }
  }
  uint64_t v18 = sub_252830788();
  if (v18)
  {
    uint64_t v19 = v18;
    if (*(void *)(v18 + 16) && (uint64_t v20 = sub_2527D9A38(0x7365757165522D58, 0xEB00000000644974), (v21 & 1) != 0))
    {
      uint64_t v22 = (uint64_t *)(*(void *)(v19 + 56) + 16 * v20);
      uint64_t v24 = *v22;
      unint64_t v23 = v22[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (qword_26B22BF18 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_252831158();
      __swift_project_value_buffer(v25, (uint64_t)qword_26B22C0B8);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_252831138();
      os_log_type_t v27 = sub_252831628();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint64_t)a3;
        uint64_t v29 = swift_slowAlloc();
        uint64_t v30 = swift_slowAlloc();
        uint64_t v64 = v30;
        *(_DWORD *)uint64_t v29 = 136315394;
        swift_bridgeObjectRetain();
        sub_25278F894(v28, a4, &v64);
        sub_252831698();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v29 + 12) = 2080;
        swift_bridgeObjectRetain();
        sub_25278F894(v24, v23, &v64);
        sub_252831698();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_25277D000, v26, v27, ">>> %s : requestID: %s", (uint8_t *)v29, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2533BE070](v30, -1, -1);
        MEMORY[0x2533BE070](v29, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

void sub_252805814(uint64_t a1, char *a2, unint64_t a3, void *a4)
{
  uint64_t v138 = *MEMORY[0x263EF8340];
  uint64_t v8 = sub_252831308();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (uint64_t)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  char v14 = (uint8_t *)&v125 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = ((char *)&v125 - v15);
  unint64_t v17 = sub_2528307F8();
  uint64_t v18 = *(NSObject **)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v125 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a4[2];
  if (v21)
  {
    if (a4[4] == a3) {
      return;
    }
    if (v21 != 1)
    {
      if (a4[5] == a3) {
        return;
      }
      if (v21 != 2)
      {
        uint64_t v44 = 6;
        do
        {
          uint64_t v45 = v44 - 3;
          if (__OFADD__(v44 - 4, 1))
          {
            while (1)
            {
              __break(1u);
LABEL_88:
              swift_once();
LABEL_7:
              uint64_t v23 = sub_252831158();
              uint64_t v24 = __swift_project_value_buffer(v23, (uint64_t)qword_26B22C0B8);
              swift_bridgeObjectRetain_n();
              long long v131 = (char *)v24;
              uint64_t v25 = sub_252831138();
              os_log_type_t v26 = sub_252831618();
              BOOL v27 = os_log_type_enabled(v25, v26);
              *(void *)&long long v129 = a1;
              long long v132 = v14;
              if (v27)
              {
                uint64_t v28 = swift_slowAlloc();
                uint64_t v128 = swift_slowAlloc();
                *(void *)&long long v136 = v128;
                *(_DWORD *)uint64_t v28 = 136315394;
                uint64_t v126 = v28 + 4;
                swift_bridgeObjectRetain();
                *(void *)&v135[0] = sub_25278F894(a1, (unint64_t)a2, (uint64_t *)&v136);
                sub_252831698();
                swift_bridgeObjectRelease_n();
                *(_WORD *)(v28 + 12) = 2048;
                *(void *)&v135[0] = a3;
                sub_252831698();
                _os_log_impl(&dword_25277D000, v25, v26, "Failure while trying to %s, with status Code: %ld", (uint8_t *)v28, 0x16u);
                uint64_t v29 = v128;
                swift_arrayDestroy();
                MEMORY[0x2533BE070](v29, -1, -1);
                uint64_t v30 = v28;
                char v14 = v132;
                MEMORY[0x2533BE070](v30, -1, -1);
              }
              else
              {

                swift_bridgeObjectRelease_n();
              }
              os_log_t v46 = v133;
              ((void (*)(char *, uint64_t, unint64_t))v133[2].isa)(v20, v127, v17);
              uint64_t v47 = sub_252831138();
              os_log_type_t v48 = sub_252831618();
              BOOL v49 = os_log_type_enabled(v47, v48);
              uint64_t v126 = v10;
              if (v49)
              {
                uint64_t v128 = (uint64_t)a2;
                unint64_t v50 = (uint8_t *)swift_slowAlloc();
                uint64_t v125 = swift_slowAlloc();
                *(void *)&long long v136 = v125;
                *(_DWORD *)unint64_t v50 = 136315138;
                sub_2528307A8();
                uint64_t v51 = sub_252830BD8();
                uint64_t v52 = *(void *)(v51 - 8);
                if ((*(unsigned int (**)(NSObject *, uint64_t, uint64_t))(v52 + 48))(v16, 1, v51) == 1)
                {
                  sub_2527CFD14((uint64_t)v16);
                  uint64_t v53 = 0;
                  unint64_t v54 = 0xE000000000000000;
                }
                else
                {
                  uint64_t v53 = sub_252830B38();
                  unint64_t v54 = v55;
                  (*(void (**)(NSObject *, uint64_t))(v52 + 8))(v16, v51);
                }
                *(void *)&v135[0] = sub_25278F894(v53, v54, (uint64_t *)&v136);
                sub_252831698();
                swift_bridgeObjectRelease();
                ((void (*)(char *, unint64_t))v133[1].isa)(v20, v17);
                _os_log_impl(&dword_25277D000, v47, v48, "Request : %s", v50, 0xCu);
                uint64_t v56 = v125;
                swift_arrayDestroy();
                MEMORY[0x2533BE070](v56, -1, -1);
                MEMORY[0x2533BE070](v50, -1, -1);

                a2 = (char *)v128;
                char v14 = v132;
              }
              else
              {
                ((void (*)(char *, unint64_t))v46[1].isa)(v20, v17);
              }
              uint64_t v57 = v130;
              uint64_t v20 = v131;
              if (*(void *)(v130 + 16))
              {
                uint64_t v58 = sub_2527D9A38(0x7365757165522D58, 0xEB00000000644974);
                if (v59)
                {
                  uint64_t v60 = (uint64_t *)(*(void *)(v57 + 56) + 16 * v58);
                  uint64_t v62 = *v60;
                  unint64_t v61 = v60[1];
                  swift_bridgeObjectRetain_n();
                  swift_bridgeObjectRetain_n();
                  int64_t v63 = sub_252831138();
                  os_log_type_t v64 = sub_252831618();
                  if (os_log_type_enabled(v63, v64))
                  {
                    uint64_t v65 = swift_slowAlloc();
                    unint64_t v17 = swift_slowAlloc();
                    *(void *)&long long v136 = v17;
                    *(_DWORD *)uint64_t v65 = 136315394;
                    swift_bridgeObjectRetain();
                    *(void *)&v135[0] = sub_25278F894(v129, (unint64_t)a2, (uint64_t *)&v136);
                    a2 = (char *)v135 + 8;
                    sub_252831698();
                    swift_bridgeObjectRelease_n();
                    *(_WORD *)(v65 + 12) = 2080;
                    swift_bridgeObjectRetain();
                    *(void *)&v135[0] = sub_25278F894(v62, v61, (uint64_t *)&v136);
                    sub_252831698();
                    swift_bridgeObjectRelease_n();
                    _os_log_impl(&dword_25277D000, v63, v64, ">>> %s : requestID: %s", (uint8_t *)v65, 0x16u);
                    swift_arrayDestroy();
                    MEMORY[0x2533BE070](v17, -1, -1);
                    MEMORY[0x2533BE070](v65, -1, -1);
                  }
                  else
                  {

                    swift_bridgeObjectRelease_n();
                    swift_bridgeObjectRelease_n();
                  }
                  char v14 = v132;
                }
              }
              sub_2528307A8();
              uint64_t v66 = sub_252830BD8();
              a1 = *(void *)(v66 - 8);
              if ((*(unsigned int (**)(uint8_t *, uint64_t, uint64_t))(a1 + 48))(v14, 1, v66) == 1)
              {
                sub_2527CFD14((uint64_t)v14);
              }
              else
              {
                uint64_t v67 = sub_252830B88();
                long long v68 = v14;
                char v14 = v69;
                long long v70 = *(void (**)(uint8_t *, uint64_t))(a1 + 8);
                a1 += 8;
                v70(v68, v66);
                if (v14)
                {
                  swift_bridgeObjectRetain();
                  long long v71 = sub_252831138();
                  os_log_type_t v72 = sub_252831618();
                  if (os_log_type_enabled(v71, v72))
                  {
                    long long v73 = (uint8_t *)swift_slowAlloc();
                    a1 = swift_slowAlloc();
                    *(void *)&long long v136 = a1;
                    *(_DWORD *)long long v73 = 136315138;
                    a2 = (char *)(v73 + 12);
                    unint64_t v17 = (unint64_t)(v73 + 4);
                    swift_bridgeObjectRetain();
                    *(void *)&v135[0] = sub_25278F894(v67, (unint64_t)v14, (uint64_t *)&v136);
                    sub_252831698();
                    swift_bridgeObjectRelease_n();
                    _os_log_impl(&dword_25277D000, v71, v72, "Query : %s", v73, 0xCu);
                    swift_arrayDestroy();
                    MEMORY[0x2533BE070](a1, -1, -1);
                    MEMORY[0x2533BE070](v73, -1, -1);
                  }
                  else
                  {

                    swift_bridgeObjectRelease_n();
                  }
                }
              }
              uint64_t v16 = sub_252831138();
              os_log_type_t v74 = sub_252831618();
              if (os_log_type_enabled(v16, v74))
              {
                char v14 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)char v14 = 0;
                _os_log_impl(&dword_25277D000, v16, v74, "======== Headers =======", v14, 2u);
                MEMORY[0x2533BE070](v14, -1, -1);
              }

              uint64_t v10 = 0;
              uint64_t v76 = v130;
              uint64_t v77 = *(void *)(v130 + 64);
              long long v132 = (uint8_t *)(v130 + 64);
              uint64_t v78 = 1 << *(unsigned char *)(v130 + 32);
              uint64_t v79 = -1;
              if (v78 < 64) {
                uint64_t v79 = ~(-1 << v78);
              }
              a3 = v79 & v77;
              os_log_t v133 = (os_log_t)((unint64_t)(v78 + 63) >> 6);
              *(void *)&long long v75 = 136315394;
              long long v129 = v75;
              uint64_t v128 = MEMORY[0x263F8EE58] + 8;
              if ((v79 & v77) != 0)
              {
                do
                {
                  while (1)
                  {
                    unint64_t v80 = __clz(__rbit64(a3));
                    a3 &= a3 - 1;
                    unint64_t v81 = v80 | (v10 << 6);
LABEL_68:
                    uint64_t v85 = 16 * v81;
                    uint64_t v86 = *(void *)(v76 + 48) + v85;
                    uint64_t v16 = *(NSObject **)v86;
                    unint64_t v17 = *(void *)(v86 + 8);
                    uint64_t v87 = (char **)(*(void *)(v76 + 56) + v85);
                    a2 = *v87;
                    char v14 = (uint8_t *)v87[1];
                    swift_bridgeObjectRetain_n();
                    swift_bridgeObjectRetain_n();
                    uint64_t v88 = sub_252831138();
                    os_log_type_t v89 = sub_252831618();
                    a1 = v89;
                    if (os_log_type_enabled(v88, v89)) {
                      break;
                    }

                    swift_bridgeObjectRelease_n();
                    swift_bridgeObjectRelease_n();
                    if (!a3) {
                      goto LABEL_54;
                    }
                  }
                  uint64_t v90 = swift_slowAlloc();
                  uint64_t v91 = swift_slowAlloc();
                  *(void *)&long long v136 = v91;
                  *(_DWORD *)uint64_t v90 = v129;
                  swift_bridgeObjectRetain();
                  *(void *)(v90 + 4) = sub_25278F894((uint64_t)v16, v17, (uint64_t *)&v136);
                  swift_bridgeObjectRelease_n();
                  *(_WORD *)(v90 + 12) = 2080;
                  swift_bridgeObjectRetain();
                  *(void *)(v90 + 14) = sub_25278F894((uint64_t)a2, (unint64_t)v14, (uint64_t *)&v136);
                  swift_bridgeObjectRelease_n();
                  _os_log_impl(&dword_25277D000, v88, (os_log_type_t)a1, "%s: %s", (uint8_t *)v90, 0x16u);
                  swift_arrayDestroy();
                  uint64_t v92 = v91;
                  uint64_t v76 = v130;
                  MEMORY[0x2533BE070](v92, -1, -1);
                  uint64_t v93 = v90;
                  uint64_t v20 = v131;
                  MEMORY[0x2533BE070](v93, -1, -1);
                }
                while (a3);
              }
LABEL_54:
              uint64_t v82 = v10 + 1;
              if (__OFADD__(v10, 1))
              {
                __break(1u);
              }
              else
              {
                if (v82 >= (uint64_t)v133) {
                  goto LABEL_71;
                }
                unint64_t v83 = *(void *)&v132[8 * v82];
                ++v10;
                if (v83) {
                  goto LABEL_67;
                }
                uint64_t v10 = v82 + 1;
                if (v82 + 1 >= (uint64_t)v133) {
                  goto LABEL_71;
                }
                unint64_t v83 = *(void *)&v132[8 * v10];
                if (v83) {
                  goto LABEL_67;
                }
                uint64_t v10 = v82 + 2;
                if (v82 + 2 >= (uint64_t)v133) {
                  goto LABEL_71;
                }
                unint64_t v83 = *(void *)&v132[8 * v10];
                if (v83) {
                  goto LABEL_67;
                }
                uint64_t v84 = v82 + 3;
                if (v84 >= (uint64_t)v133)
                {
LABEL_71:
                  swift_release();
                  uint64_t v94 = sub_252831138();
                  os_log_type_t v95 = sub_252831618();
                  if (os_log_type_enabled(v94, v95))
                  {
                    uint64_t v96 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)uint64_t v96 = 0;
                    _os_log_impl(&dword_25277D000, v94, v95, "========================", v96, 2u);
                    MEMORY[0x2533BE070](v96, -1, -1);
                  }

                  uint64_t v97 = sub_2528307C8();
                  if (v98 >> 60 != 15)
                  {
                    uint64_t v99 = v97;
                    unint64_t v100 = v98;
                    uint64_t v101 = self;
                    char v102 = (void *)sub_252830C48();
                    id v134 = 0;
                    id v103 = objc_msgSend(v101, sel_JSONObjectWithData_options_error_, v102, 0, &v134);

                    id v104 = v134;
                    if (v103)
                    {
                      sub_252831738();
                      swift_unknownObjectRelease();
                      sub_2527933EC(v135, &v136);
                      __swift_project_boxed_opaque_existential_1(&v136, v137);
                      uint64_t v105 = sub_252831A48();
                      *(void *)&v135[0] = 0;
                      id v106 = objc_msgSend(v101, sel_dataWithJSONObject_options_error_, v105, 1, v135);
                      swift_unknownObjectRelease();
                      id v107 = *(id *)&v135[0];
                      if (v106)
                      {
                        uint64_t v108 = sub_252830C68();
                        unint64_t v110 = v109;

                        sub_2528312E8();
                        uint64_t v111 = sub_2528312C8();
                        if (v112)
                        {
                          uint64_t v113 = v111;
                          unint64_t v114 = v112;
                          swift_bridgeObjectRetain();
                          long long v115 = sub_252831138();
                          os_log_type_t v116 = sub_252831618();
                          if (os_log_type_enabled(v115, v116))
                          {
                            uint64_t v117 = swift_slowAlloc();
                            os_log_t v133 = v115;
                            long long v118 = (uint8_t *)v117;
                            uint64_t v119 = swift_slowAlloc();
                            *(void *)&v135[0] = v119;
                            *(_DWORD *)long long v118 = 136315138;
                            long long v132 = v118 + 4;
                            swift_bridgeObjectRetain();
                            id v134 = (id)sub_25278F894(v113, v114, (uint64_t *)v135);
                            sub_252831698();
                            swift_bridgeObjectRelease_n();
                            os_log_t v120 = v133;
                            _os_log_impl(&dword_25277D000, v133, v116, "Body : %s", v118, 0xCu);
                            swift_arrayDestroy();
                            MEMORY[0x2533BE070](v119, -1, -1);
                            MEMORY[0x2533BE070](v118, -1, -1);
                            sub_252783CC0(v99, v100);
                            sub_252782E20(v108, v110);
                          }
                          else
                          {
                            sub_252783CC0(v99, v100);
                            sub_252782E20(v108, v110);

                            swift_bridgeObjectRelease_n();
                          }
                        }
                        else
                        {
                          sub_252782E20(v108, v110);
                          sub_252783CC0(v99, v100);
                        }
                      }
                      else
                      {
                        long long v123 = v107;
                        long long v124 = (void *)sub_252830B18();

                        swift_willThrow();
                        sub_252783CC0(v99, v100);
                      }
                      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v136);
                    }
                    else
                    {
                      long long v121 = v104;
                      long long v122 = (void *)sub_252830B18();

                      swift_willThrow();
                      sub_252783CC0(v99, v100);
                    }
                  }
                  return;
                }
                unint64_t v83 = *(void *)&v132[8 * v84];
                if (v83)
                {
                  uint64_t v10 = v84;
LABEL_67:
                  a3 = (v83 - 1) & v83;
                  unint64_t v81 = __clz(__rbit64(v83)) + (v10 << 6);
                  goto LABEL_68;
                }
                while (1)
                {
                  uint64_t v10 = v84 + 1;
                  if (__OFADD__(v84, 1)) {
                    break;
                  }
                  if (v10 >= (uint64_t)v133) {
                    goto LABEL_71;
                  }
                  unint64_t v83 = *(void *)&v132[8 * v10];
                  ++v84;
                  if (v83) {
                    goto LABEL_67;
                  }
                }
              }
              __break(1u);
            }
          }
          if (a4[v44] == a3) {
            return;
          }
          ++v44;
        }
        while (v45 != v21);
      }
    }
  }
  if (os_variant_has_internal_diagnostics())
  {
    uint64_t v22 = sub_252830788();
    if (v22)
    {
      os_log_t v133 = v18;
      uint64_t v130 = v22;
      if (qword_26B22BF18 == -1) {
        goto LABEL_7;
      }
      goto LABEL_88;
    }
  }
  uint64_t v31 = sub_252830788();
  if (v31)
  {
    uint64_t v32 = v31;
    if (*(void *)(v31 + 16) && (uint64_t v33 = sub_2527D9A38(0x7365757165522D58, 0xEB00000000644974), (v34 & 1) != 0))
    {
      char v35 = (uint64_t *)(*(void *)(v32 + 56) + 16 * v33);
      uint64_t v37 = *v35;
      unint64_t v36 = v35[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (qword_26B22BF18 != -1) {
        swift_once();
      }
      uint64_t v38 = sub_252831158();
      __swift_project_value_buffer(v38, (uint64_t)qword_26B22C0B8);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_252831138();
      os_log_type_t v40 = sub_252831618();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = a1;
        uint64_t v42 = swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        *(void *)&long long v136 = v43;
        *(_DWORD *)uint64_t v42 = 136315394;
        swift_bridgeObjectRetain();
        *(void *)&v135[0] = sub_25278F894(v41, (unint64_t)a2, (uint64_t *)&v136);
        sub_252831698();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v42 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(void *)&v135[0] = sub_25278F894(v37, v36, (uint64_t *)&v136);
        sub_252831698();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_25277D000, v39, v40, ">>> %s : requestID: %s", (uint8_t *)v42, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2533BE070](v43, -1, -1);
        MEMORY[0x2533BE070](v42, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_252806A64()
{
  uint64_t v0 = sub_252830788();
  if (!v0) {
    return 0;
  }
  uint64_t v1 = v0;
  if (*(void *)(v0 + 16) && (uint64_t v2 = sub_2527D9A38(0x7365757165522D58, 0xEB00000000644974), (v3 & 1) != 0))
  {
    uint64_t v4 = *(void *)(*(void *)(v1 + 56) + 16 * v2);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v4 = 0;
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_252806AFC()
{
  id v0 = objc_msgSend(self, sel_processInfo);
  objc_msgSend(v0, sel_operatingSystemVersion);

  uint64_t v2 = sub_252831A38();
  sub_2528313A8();
  sub_252831A38();
  sub_2528313A8();
  swift_bridgeObjectRelease();
  sub_2528313A8();
  sub_252831A38();
  sub_2528313A8();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_252806C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 56) = a7;
  *(void *)(v8 + 64) = a8;
  *(void *)(v8 + 40) = a4;
  *(void *)(v8 + 48) = a6;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 16) = a1;
  uint64_t v10 = sub_252830F38();
  *(void *)(v8 + 72) = v10;
  *(void *)(v8 + 80) = *(void *)(v10 - 8);
  *(void *)(v8 + 88) = swift_task_alloc();
  *(void *)(v8 + 96) = swift_task_alloc();
  type metadata accessor for RecordsResponse(0);
  *(void *)(v8 + 104) = swift_task_alloc();
  *(void *)(v8 + 112) = type metadata accessor for GetRequest(0);
  *(void *)(v8 + 120) = swift_task_alloc();
  uint64_t v11 = sub_252830CF8();
  *(void *)(v8 + 128) = v11;
  *(void *)(v8 + 136) = *(void *)(v11 - 8);
  *(void *)(v8 + 144) = swift_task_alloc();
  *(unsigned char *)(v8 + 176) = *a5;
  return MEMORY[0x270FA2498](sub_252806DAC, 0, 0);
}

uint64_t sub_252806DAC()
{
  uint64_t v40 = v0;
  sub_2528082A0();
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v1 = *(void **)(v0 + 32);
  swift_bridgeObjectRetain();
  v3._uint64_t countAndFlagsBits = v2;
  v3._object = v1;
  JWToken.init(jwt:)(&v39, v3);
  if (v4)
  {
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  BOOL v5 = JWToken.expired.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5)
  {
    if (qword_269C1CF00 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_252831158();
    __swift_project_value_buffer(v6, (uint64_t)qword_269C2D370);
    uint64_t v7 = sub_252831138();
    os_log_type_t v8 = sub_252831618();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_25277D000, v7, v8, "Authorization Token expired. Retry after refreshing token", v9, 2u);
      MEMORY[0x2533BE070](v9, -1, -1);
    }

    type metadata accessor for NetworkError();
    sub_25280869C((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_8;
  }
  if (qword_269C1CE68 != -1) {
    swift_once();
  }
  int v12 = *(unsigned __int8 *)(v0 + 176);
  uint64_t v14 = *(void *)(v0 + 136);
  uint64_t v13 = *(void *)(v0 + 144);
  uint64_t v15 = *(void *)(v0 + 128);
  uint64_t v16 = (void *)qword_269C2D228;
  sub_25280DF84();
  unint64_t v17 = (void *)sub_252831298();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v16, sel_codeServiceWithName_databaseScope_, v17, 1);
  *(void *)(v0 + 152) = v18;

  id v38 = v18;
  sub_25279F7A4(v13);
  uint64_t v36 = sub_252830C88();
  uint64_t v37 = v19;
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  unint64_t v20 = 0xEA0000000000746ELL;
  uint64_t v21 = 0x696F506567617355;
  if (v12 != 1)
  {
    uint64_t v21 = 0x6D75536567617355;
    unint64_t v20 = 0xEC0000007972616DLL;
  }
  if (v12) {
    uint64_t v22 = v21;
  }
  else {
    uint64_t v22 = 0x6C61767265746E49;
  }
  if (v12) {
    unint64_t v23 = v20;
  }
  else {
    unint64_t v23 = 0xED00006B636F6C42;
  }
  uint64_t v24 = *(void *)(v0 + 56);
  uint64_t v25 = *(void *)(v0 + 64);
  uint64_t v26 = *(void *)(v0 + 48);
  long long v35 = *(_OWORD *)(v0 + 24);
  uint64_t v27 = swift_task_alloc();
  *(_OWORD *)(v27 + 16) = v35;
  *(void *)(v27 + 32) = v25;
  *(void *)(v27 + 40) = v26;
  *(void *)(v27 + 48) = v24;
  *(void *)(v27 + 56) = v36;
  *(void *)(v27 + 64) = v37;
  *(void *)(v27 + 72) = v22;
  *(void *)(v27 + 80) = v23;
  sub_25280869C(&qword_269C1D990, (void (*)(uint64_t))type metadata accessor for GetRequest);
  sub_252831098();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (qword_269C1CF00 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_252831158();
  __swift_project_value_buffer(v28, (uint64_t)qword_269C2D370);
  uint64_t v29 = sub_252831138();
  os_log_type_t v30 = sub_252831628();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v31 = 0;
    _os_log_impl(&dword_25277D000, v29, v30, "Fetching Utility Records from Dropbox", v31, 2u);
    MEMORY[0x2533BE070](v31, -1, -1);
  }

  uint64_t v32 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v32;
  *uint64_t v32 = v0;
  v32[1] = sub_252807360;
  uint64_t v33 = *(void *)(v0 + 120);
  uint64_t v34 = *(void *)(v0 + 104);
  return sub_2527B3DF4(v34, v33, (uint64_t)v38);
}

uint64_t sub_252807360()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2528077F0;
  }
  else {
    uint64_t v2 = sub_252807474;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_252807474()
{
  uint64_t v1 = v0[21];
  sub_252807AC0(*(void *)(v0[13] + 32), *(unsigned char *)(v0[13] + 40));
  if (v1)
  {
    uint64_t v2 = (void *)v0[19];
    uint64_t v3 = v0[15];
    uint64_t v4 = v0[13];

    sub_2528085FC(v4, type metadata accessor for RecordsResponse);
    sub_2528085FC(v3, type metadata accessor for GetRequest);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    BOOL v5 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    uint64_t v6 = (uint64_t *)v0[13];
    uint64_t v7 = *v6;
    uint64_t v8 = *(void *)(*v6 + 16);
    uint64_t v9 = MEMORY[0x263F8EE78];
    if (v8)
    {
      uint64_t v10 = v0[10];
      uint64_t v32 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_252831868();
      sub_25280865C();
      uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
      uint64_t v12 = v10 + 16;
      uint64_t v11 = v13;
      uint64_t v14 = v7 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
      uint64_t v31 = *(void *)(v12 + 56);
      do
      {
        uint64_t v15 = v0[11];
        uint64_t v16 = v0[12];
        uint64_t v17 = v0[9];
        v11(v16, v14, v17);
        v11(v15, v16, v17);
        sub_252831668();
        (*(void (**)(uint64_t, uint64_t))(v12 - 8))(v16, v17);
        sub_252831848();
        sub_252831878();
        sub_252831888();
        sub_252831858();
        v14 += v31;
        --v8;
      }
      while (v8);
      uint64_t v18 = v32;
      swift_bridgeObjectRelease();
      uint64_t v9 = MEMORY[0x263F8EE78];
    }
    else
    {
      uint64_t v18 = MEMORY[0x263F8EE78];
    }
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v19; ++i)
      {
        uint64_t v21 = *(void **)(v18 + 8 * i + 32);
        if (v21)
        {
          id v22 = v21;
          MEMORY[0x2533BD2B0]();
          if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_252831528();
          }
          sub_252831548();
          sub_252831518();
        }
      }
      swift_bridgeObjectRelease();
    }
    unint64_t v23 = (void *)v0[19];
    uint64_t v24 = v0[15];
    uint64_t v25 = v0[13];
    uint64_t v26 = v0[2];
    swift_bridgeObjectRelease();
    uint64_t v27 = *(void *)(v25 + 8);
    unint64_t v28 = *(void *)(v25 + 16);
    char v29 = *(unsigned char *)(v25 + 24);
    *(void *)uint64_t v26 = v9;
    *(void *)(v26 + 8) = v27;
    *(void *)(v26 + 16) = v28;
    *(unsigned char *)(v26 + 24) = v29;
    sub_252782DC8(v27, v28);

    sub_2528085FC(v25, type metadata accessor for RecordsResponse);
    sub_2528085FC(v24, type metadata accessor for GetRequest);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    BOOL v5 = (uint64_t (*)(void))v0[1];
  }
  return v5();
}

uint64_t sub_2528077F0()
{
  uint64_t v1 = (void *)v0[19];
  uint64_t v2 = v0[15];

  sub_2528085FC(v2, type metadata accessor for GetRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_2528078BC()
{
  if ((sub_25280DF84() - 1) >= 2u) {
    uint64_t v0 = 1;
  }
  else {
    uint64_t v0 = 2;
  }
  id v1 = objc_allocWithZone(MEMORY[0x263EFD620]);
  uint64_t v2 = (void *)sub_252831298();
  id v3 = objc_msgSend(v1, sel_initWithContainerIdentifier_environment_, v2, v0);

  qword_269C2D220 = (uint64_t)v3;
}

void sub_252807950()
{
  if (qword_269C1CE60 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_269C2D220;
  id v1 = objc_allocWithZone(MEMORY[0x263EFD610]);
  id v2 = v0;
  id v3 = objc_msgSend(v1, sel_initWithContainerID_, v2);

  qword_269C2D228 = (uint64_t)v3;
}

uint64_t sub_2528079E0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  uint64_t v18 = a1[3];
  unint64_t v19 = a1[4];
  sub_252782DC8(a5, a6);
  sub_252782E20(v18, v19);
  a1[3] = a5;
  a1[4] = a6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a7;
  a1[6] = a8;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  a1[7] = a9;
  a1[8] = a10;
  return result;
}

void sub_252807AC0(uint64_t a1, char a2)
{
  if (a2)
  {
    switch(a1)
    {
      case 1:
        if (qword_269C1CF00 != -1) {
          swift_once();
        }
        uint64_t v10 = sub_252831158();
        __swift_project_value_buffer(v10, (uint64_t)qword_269C2D370);
        id v3 = sub_252831138();
        os_log_type_t v11 = sub_252831618();
        if (os_log_type_enabled(v3, v11))
        {
          uint64_t v12 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v12 = 0;
          _os_log_impl(&dword_25277D000, v3, v11, "CKFunction | Token Invalid", v12, 2u);
          MEMORY[0x2533BE070](v12, -1, -1);
        }
        goto LABEL_6;
      case 2:
        if (qword_269C1CF00 != -1) {
          swift_once();
        }
        uint64_t v13 = sub_252831158();
        __swift_project_value_buffer(v13, (uint64_t)qword_269C2D370);
        id v3 = sub_252831138();
        os_log_type_t v14 = sub_252831618();
        if (os_log_type_enabled(v3, v14))
        {
          uint64_t v15 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v15 = 0;
          _os_log_impl(&dword_25277D000, v3, v14, "CKFunction | Subscription Not found. Proceed to offboarding", v15, 2u);
          MEMORY[0x2533BE070](v15, -1, -1);
        }
        goto LABEL_6;
      case 3:
        if (qword_269C1CF00 != -1) {
          swift_once();
        }
        uint64_t v16 = sub_252831158();
        __swift_project_value_buffer(v16, (uint64_t)qword_269C2D370);
        id v3 = sub_252831138();
        os_log_type_t v17 = sub_252831618();
        if (os_log_type_enabled(v3, v17))
        {
          uint64_t v18 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v18 = 0;
          _os_log_impl(&dword_25277D000, v3, v17, "CKFunction | Bad Request Error", v18, 2u);
          MEMORY[0x2533BE070](v18, -1, -1);
        }
        goto LABEL_6;
      case 4:
        if (qword_269C1CF00 != -1) {
          swift_once();
        }
        uint64_t v19 = sub_252831158();
        __swift_project_value_buffer(v19, (uint64_t)qword_269C2D370);
        unint64_t v20 = sub_252831138();
        os_log_type_t v21 = sub_252831618();
        if (os_log_type_enabled(v20, v21))
        {
          id v22 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v22 = 0;
          _os_log_impl(&dword_25277D000, v20, v21, "CKFunction | Internal Token Validation Server Error", v22, 2u);
          MEMORY[0x2533BE070](v22, -1, -1);
        }

        type metadata accessor for NetworkError();
        sub_25280869C((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
        swift_allocError();
        *unint64_t v23 = 500;
        goto LABEL_7;
      case 5:
        if (qword_269C1CF00 != -1) {
          swift_once();
        }
        uint64_t v24 = sub_252831158();
        __swift_project_value_buffer(v24, (uint64_t)qword_269C2D370);
        id v3 = sub_252831138();
        os_log_type_t v25 = sub_252831618();
        if (os_log_type_enabled(v3, v25))
        {
          uint64_t v26 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v26 = 0;
          _os_log_impl(&dword_25277D000, v3, v25, "CKFunction | CloudKit CKRPC Server Error", v26, 2u);
          MEMORY[0x2533BE070](v26, -1, -1);
        }
        goto LABEL_6;
      case 6:
        goto LABEL_2;
      default:
        if (qword_269C1CF00 != -1) {
          swift_once();
        }
        uint64_t v6 = sub_252831158();
        __swift_project_value_buffer(v6, (uint64_t)qword_269C2D370);
        uint64_t v7 = sub_252831138();
        os_log_type_t v8 = sub_252831628();
        if (os_log_type_enabled(v7, v8))
        {
          uint64_t v9 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v9 = 0;
          _os_log_impl(&dword_25277D000, v7, v8, "No error while fetching data from CloudKit", v9, 2u);
          MEMORY[0x2533BE070](v9, -1, -1);
        }

        break;
    }
  }
  else
  {
LABEL_2:
    if (qword_269C1CF00 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_252831158();
    __swift_project_value_buffer(v2, (uint64_t)qword_269C2D370);
    id v3 = sub_252831138();
    os_log_type_t v4 = sub_252831618();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_25277D000, v3, v4, "CKFunction | Uncaught Error", v5, 2u);
      MEMORY[0x2533BE070](v5, -1, -1);
    }
LABEL_6:

    type metadata accessor for NetworkError();
    sub_25280869C((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
    swift_allocError();
LABEL_7:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
}

void sub_2528082A0()
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  if (qword_26B22BEC0 != -1) {
    swift_once();
  }
  if (byte_26B22C038 == 1)
  {
    Boolean keyExistsAndHasValidFormat = 0;
    uint64_t v0 = (__CFString *)sub_252831298();
    id v1 = (__CFString *)sub_252831298();
    int AppBooleanValue = CFPreferencesGetAppBooleanValue(v0, v1, &keyExistsAndHasValidFormat);

    if (keyExistsAndHasValidFormat)
    {
      if (AppBooleanValue)
      {
        if (qword_269C1CF00 != -1) {
          swift_once();
        }
        uint64_t v3 = sub_252831158();
        __swift_project_value_buffer(v3, (uint64_t)qword_269C2D370);
        os_log_type_t v4 = sub_252831138();
        os_log_type_t v5 = sub_252831628();
        if (os_log_type_enabled(v4, v5))
        {
          uint64_t v6 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v6 = 0;
          _os_log_impl(&dword_25277D000, v4, v5, "Dropbox Error Inducer Enabled", v6, 2u);
          MEMORY[0x2533BE070](v6, -1, -1);
        }

        uint64_t v7 = sub_252831138();
        os_log_type_t v8 = sub_252831628();
        if (os_log_type_enabled(v7, v8))
        {
          uint64_t v9 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v9 = 0;
          _os_log_impl(&dword_25277D000, v7, v8, "Dropbox Error Inducer | Checking induced error type.", v9, 2u);
          MEMORY[0x2533BE070](v9, -1, -1);
        }

        Boolean v17 = 0;
        uint64_t v10 = (__CFString *)sub_252831298();
        os_log_type_t v11 = (__CFString *)sub_252831298();
        CFPreferencesGetAppIntegerValue(v10, v11, &v17);

        if (!v17 || (sub_2527AABA4(), (v13 & 0x100) != 0))
        {
          os_log_type_t v14 = sub_252831138();
          os_log_type_t v15 = sub_252831628();
          if (os_log_type_enabled(v14, v15))
          {
            uint64_t v16 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v16 = 0;
            _os_log_impl(&dword_25277D000, v14, v15, "Dropbox Error Inducer type not found in defaults!!", v16, 2u);
            MEMORY[0x2533BE070](v16, -1, -1);
          }
        }
        else
        {
          sub_252807AC0(v12, v13 & 1);
        }
      }
    }
  }
}

uint64_t sub_2528085C4(void *a1)
{
  return sub_2528079E0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80));
}

uint64_t sub_2528085FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_25280865C()
{
  unint64_t result = qword_269C1E608;
  if (!qword_269C1E608)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269C1E608);
  }
  return result;
}

uint64_t sub_25280869C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_2528086E4()
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  uint64_t v0 = sub_252831308();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v4 = self;
  os_log_type_t v5 = (void *)sub_252830C48();
  *(void *)&long long v25 = 0;
  id v6 = objc_msgSend(v4, sel_JSONObjectWithData_options_error_, v5, 0, &v25);

  id v7 = (id)v25;
  if (!v6)
  {
    uint64_t v18 = v7;
    uint64_t v19 = (void *)sub_252830B18();

    swift_willThrow();
    return 0;
  }
  sub_252831738();
  swift_unknownObjectRelease();
  sub_2527933EC(v24, &v25);
  __swift_project_boxed_opaque_existential_1(&v25, v26);
  uint64_t v8 = sub_252831A48();
  *(void *)&v24[0] = 0;
  id v9 = objc_msgSend(v4, sel_dataWithJSONObject_options_error_, v8, 1, v24);
  swift_unknownObjectRelease();
  id v10 = *(id *)&v24[0];
  if (!v9)
  {
    unint64_t v20 = v10;
    os_log_type_t v21 = (void *)sub_252830B18();

    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v25);
    return 0;
  }
  uint64_t v11 = sub_252830C68();
  unint64_t v13 = v12;

  sub_2528312E8();
  uint64_t v14 = sub_2528312F8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  id v15 = objc_allocWithZone(NSString);
  uint64_t v16 = (void *)sub_252830C48();
  id v17 = objc_msgSend(v15, sel_initWithData_encoding_, v16, v14);
  sub_252782E20(v11, v13);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v25);
  return v17;
}

uint64_t sub_252808984()
{
  uint64_t v0 = sub_252830DB8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252830D58();
  double v5 = v4;
  sub_252830D78();
  sub_252830D58();
  double v7 = v6;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  double v9 = v5 - v7;
  if ((~COERCE__INT64(v5 - v7) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v9 >= 9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (!__OFSUB__((uint64_t)v9, 3600 * ((uint64_t)v9 / 3600)))
  {
    uint64_t v10 = (uint64_t)v9 % 3600;
    uint64_t v13 = (uint64_t)v9 / 3600;
    uint64_t v14 = sub_252831A38();
    uint64_t v15 = v11;
    sub_2528313A8();
    uint64_t v13 = v10 / 60;
    sub_252831A38();
    sub_2528313A8();
    swift_bridgeObjectRelease();
    sub_2528313A8();
    return v14;
  }
LABEL_9:
  __break(1u);
  return result;
}

id sub_252808B68()
{
  uint64_t v0 = sub_252830E28();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_252830E98();
  uint64_t v4 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  double v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_252830E18();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  sub_252830DF8();
  uint64_t v12 = (void *)sub_252830E08();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  objc_msgSend(v11, sel_setLocale_, v12);

  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F07718], v0);
  sub_252830E38();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v13 = (void *)sub_252830E58();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v17);
  objc_msgSend(v11, sel_setCalendar_, v13);

  uint64_t v14 = (void *)sub_252831298();
  objc_msgSend(v11, sel_setDateFormat_, v14);

  return v11;
}

uint64_t URLRequest.addBAAHeaders()(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  uint64_t v3 = sub_252831308();
  v2[9] = v3;
  v2[10] = *(void *)(v3 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v4 = sub_252830DB8();
  v2[12] = v4;
  v2[13] = *(void *)(v4 - 8);
  v2[14] = swift_task_alloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v2[15] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_252808F98;
  return sub_25280AB7C();
}

uint64_t sub_252808F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[2] = v4;
  v5[3] = a1;
  v5[4] = a2;
  v5[5] = a3;
  v5[6] = v3;
  double v6 = (void *)*v4;
  v5[16] = a1;
  v5[17] = a3;
  v5[18] = v3;
  swift_task_dealloc();
  if (v3)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v6[1];
    return v7();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_252809104, 0, 0);
  }
}

uint64_t sub_252809104()
{
  uint64_t v1 = (void *)v0[16];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  uint64_t v5 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v6 = v0[10];
  uint64_t v40 = v0[9];
  uint64_t v8 = v0[7];
  uint64_t v7 = v0[8];
  uint64_t v9 = sub_2528307F8();
  uint64_t v38 = *(void *)(v9 - 8);
  uint64_t v39 = v9;
  (*(void (**)(uint64_t, uint64_t))(v38 + 16))(v8, v7);
  id v10 = v1;
  swift_bridgeObjectRetain();
  sub_252815674();
  sub_252831328();
  swift_bridgeObjectRelease();
  sub_252830D78();
  sub_252830D58();
  double v12 = v11;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E0B0);
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = MEMORY[0x263F8D538];
  *(_OWORD *)(v13 + 16) = xmmword_252832B00;
  uint64_t v15 = MEMORY[0x263F8D5B8];
  *(void *)(v13 + 56) = v14;
  *(void *)(v13 + 64) = v15;
  *(double *)(v13 + 32) = v12 * 1000.0;
  sub_2528312D8();
  sub_2528307B8();
  sub_2528312E8();
  uint64_t v16 = sub_2528312B8();
  unint64_t v18 = v17;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v40);
  if (v18 >> 60 == 15)
  {
    if (qword_269C1CE80 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_252831158();
    __swift_project_value_buffer(v19, (uint64_t)qword_269C2D238);
    unint64_t v20 = sub_252831138();
    os_log_type_t v21 = sub_252831618();
    if (os_log_type_enabled(v20, v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v22 = 0;
      _os_log_impl(&dword_25277D000, v20, v21, "String encoding failed. Returning empty string", v22, 2u);
      MEMORY[0x2533BE070](v22, -1, -1);
    }

    unint64_t v23 = 0;
    unint64_t v24 = 0xE000000000000000;
  }
  else
  {
    unint64_t v23 = sub_252830C58();
    unint64_t v24 = v25;
    sub_252783CC0(v16, v18);
  }
  uint64_t v26 = v0[18];
  uint64_t v27 = (__SecKey *)v0[16];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2528313A8();
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_2528095F8(v23, v24);
  unint64_t v30 = v29;
  uint64_t v31 = sub_252809B20(v28, v29, v27);
  uint64_t v33 = (void *)v0[16];
  if (v26)
  {
    (*(void (**)(void, uint64_t))(v38 + 8))(v0[7], v39);
    swift_bridgeObjectRelease();
    sub_252782E20(v28, v30);

    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v35 = v31;
    unint64_t v36 = v32;
    sub_252782E20(v28, v30);
    sub_252830C58();
    swift_bridgeObjectRetain();
    sub_2528313A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2528313A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2528307B8();
    swift_bridgeObjectRelease();
    sub_2528307B8();
    swift_bridgeObjectRelease();
    sub_252782E20(v35, v36);
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v34 = (uint64_t (*)(void))v0[1];
  return v34();
}

uint64_t sub_2528095F8(unint64_t a1, unint64_t a2)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  *(void *)&long long v40 = a1;
  *((void *)&v40 + 1) = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E628);
  if (swift_dynamicCast())
  {
    sub_25280A568(v38, (uint64_t)&v41);
    __swift_project_boxed_opaque_existential_1(&v41, v43);
    sub_252830AA8();
    swift_bridgeObjectRelease();
    v38[0] = v40;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v41);
    return *(void *)&v38[0];
  }
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  sub_252809EE4((uint64_t)v38);
  unint64_t v2 = a1;
  unint64_t v3 = a2;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = a1;
      uint64_t v42 = a2 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v6 = (char *)&v41 + (HIBYTE(a2) & 0xF);
      uint64_t v7 = &v41;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_252831838();
      }
      if (v4) {
        uint64_t v6 = (unsigned char *)(v4 + v5);
      }
      else {
        uint64_t v6 = 0;
      }
      uint64_t v7 = (uint64_t *)v4;
    }
    uint64_t v8 = sub_25280A3F8(v7, v6);
    unint64_t v10 = v9;
    if (v9 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v38[0] = v8;
      *((void *)&v38[0] + 1) = v10;
      return *(void *)&v38[0];
    }
    unint64_t v2 = a1;
    unint64_t v3 = a2;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_14;
    }
LABEL_70:
    uint64_t v11 = sub_2528313D8();
    goto LABEL_17;
  }
LABEL_69:
  uint64_t v8 = 0;
  unint64_t v10 = 0xF000000000000000;
  if ((v3 & 0x1000000000000000) != 0) {
    goto LABEL_70;
  }
LABEL_14:
  if ((v3 & 0x2000000000000000) != 0) {
    uint64_t v11 = HIBYTE(v3) & 0xF;
  }
  else {
    uint64_t v11 = v2 & 0xFFFFFFFFFFFFLL;
  }
LABEL_17:
  *(void *)&v38[0] = sub_25280A45C(v11);
  *((void *)&v38[0] + 1) = v12;
  MEMORY[0x270FA5388](*(void *)&v38[0]);
  unint64_t v13 = (unint64_t)sub_252809F44((void *(*)(uint64_t *__return_ptr, char *, char *))sub_25280A4FC);
  uint64_t v16 = *((void *)&v38[0] + 1) >> 62;
  uint64_t v17 = v13;
  uint64_t v18 = v3;
  unint64_t v19 = v14;
  switch(*((void *)&v38[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v20) = DWORD1(v38[0]) - LODWORD(v38[0]);
      if (__OFSUB__(DWORD1(v38[0]), v38[0])) {
        goto LABEL_73;
      }
      uint64_t v20 = (int)v20;
LABEL_23:
      if (v15 != v20)
      {
        if (v16)
        {
          if (v16 == 1) {
            uint64_t v24 = *(uint64_t *)&v38[0] >> 32;
          }
          else {
            uint64_t v24 = *(void *)(*(void *)&v38[0] + 24);
          }
        }
        else
        {
          uint64_t v24 = BYTE14(v38[0]);
        }
LABEL_61:
        if (v24 < v15)
        {
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
        }
        sub_252830C28();
LABEL_63:
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
LABEL_29:
      if ((v3 & 0x2000000000000000) != 0) {
        unint64_t v25 = HIBYTE(v3) & 0xF;
      }
      else {
        unint64_t v25 = v13 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v40 + 7) = 0;
      *(void *)&long long v40 = 0;
      if (4 * v25 == v14 >> 14) {
        goto LABEL_58;
      }
      LOBYTE(v26) = 0;
      uint64_t v27 = (v13 >> 59) & 1;
      if ((v3 & 0x1000000000000000) == 0) {
        LOBYTE(v27) = 1;
      }
      uint64_t v28 = 4 << v27;
      uint64_t v35 = v3 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v33 = (uint64_t)v8;
      uint64_t v34 = (v3 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v22 = *(void *)(*(void *)&v38[0] + 16);
      uint64_t v21 = *(void *)(*(void *)&v38[0] + 24);
      BOOL v23 = __OFSUB__(v21, v22);
      uint64_t v20 = v21 - v22;
      if (!v23) {
        goto LABEL_23;
      }
      goto LABEL_74;
    case 3:
      if (!v15) {
        goto LABEL_29;
      }
      uint64_t v24 = 0;
      goto LABEL_61;
    default:
      uint64_t v20 = BYTE14(v38[0]);
      goto LABEL_23;
  }
  do
  {
    unint64_t v29 = v19 & 0xC;
    unint64_t v2 = v19;
    if (v29 == v28) {
      unint64_t v2 = sub_2527D99BC(v19, v17, v18);
    }
    unint64_t v30 = v2 >> 16;
    if (v2 >> 16 >= v25)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if ((v18 & 0x1000000000000000) != 0)
    {
      unint64_t v2 = sub_252831418();
      char v31 = v2;
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else if ((v18 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = v17;
      uint64_t v42 = v35;
      char v31 = *((unsigned char *)&v41 + v30);
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else
    {
      unint64_t v2 = v34;
      if ((v17 & 0x1000000000000000) == 0) {
        unint64_t v2 = sub_252831838();
      }
      char v31 = *(unsigned char *)(v2 + v30);
      if (v29 != v28)
      {
LABEL_47:
        if ((v18 & 0x1000000000000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_51;
      }
    }
    unint64_t v2 = sub_2527D99BC(v19, v17, v18);
    unint64_t v19 = v2;
    if ((v18 & 0x1000000000000000) == 0)
    {
LABEL_48:
      unint64_t v19 = (v19 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_53;
    }
LABEL_51:
    if (v25 <= v19 >> 16) {
      goto LABEL_68;
    }
    unint64_t v2 = sub_2528313E8();
    unint64_t v19 = v2;
LABEL_53:
    *((unsigned char *)&v40 + v26) = v31;
    unsigned int v26 = v26 + 1;
    if ((v26 >> 8)) {
      goto LABEL_67;
    }
    BYTE14(v40) = v26;
    if (v26 == 14)
    {
      uint64_t v41 = v40;
      LODWORD(v42) = DWORD2(v40);
      WORD2(v42) = WORD6(v40);
      sub_252830C38();
      LOBYTE(v26) = 0;
      BYTE14(v40) = 0;
    }
  }
  while (4 * v25 != v19 >> 14);
  uint64_t v8 = (unsigned char *)v33;
  if ((_BYTE)v26)
  {
    uint64_t v41 = v40;
    LODWORD(v42) = DWORD2(v40);
    WORD2(v42) = WORD6(v40);
    sub_252830C38();
    sub_252783CC0(v33, v10);
    goto LABEL_63;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  sub_252783CC0((uint64_t)v8, v10);
LABEL_64:
  swift_bridgeObjectRelease();
  return *(void *)&v38[0];
}

uint64_t sub_252809B20(uint64_t a1, uint64_t a2, __SecKey *a3)
{
  error[1] = *(CFErrorRef *)MEMORY[0x263EF8340];
  error[0] = 0;
  CFStringRef v4 = (const __CFString *)*MEMORY[0x263F172E8];
  CFDataRef v5 = (const __CFData *)sub_252830C48();
  CFDataRef Signature = SecKeyCreateSignature(a3, v4, v5, error);

  if (Signature)
  {
    CFDataRef v7 = Signature;
    uint64_t v8 = sub_252830C68();
  }
  else
  {
    if (qword_269C1CEB8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_252831158();
    __swift_project_value_buffer(v9, (uint64_t)qword_269C2D298);
    unint64_t v10 = sub_252831138();
    os_log_type_t v11 = sub_252831618();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      unint64_t v13 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 138412290;
      swift_beginAccess();
      CFErrorRef v14 = error[0];
      if (error[0])
      {
        type metadata accessor for CFError(0);
        sub_252809E38();
        swift_allocError();
        *uint64_t v15 = v14;
        uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
        sub_252831698();
      }
      else
      {
        sub_252831698();
        uint64_t v16 = 0;
      }
      *unint64_t v13 = v16;
      _os_log_impl(&dword_25277D000, v10, v11, "Unable to Create Signature: %@", v12, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D030);
      swift_arrayDestroy();
      MEMORY[0x2533BE070](v13, -1, -1);
      MEMORY[0x2533BE070](v12, -1, -1);
    }

    swift_beginAccess();
    CFErrorRef v17 = error[0];
    if (error[0])
    {
      type metadata accessor for CFError(0);
      sub_252809E38();
      uint64_t v8 = swift_allocError();
      *uint64_t v18 = v17;
    }
    else
    {
      uint64_t v8 = 0;
    }
    sub_252809E90();
    swift_allocError();
    *(void *)uint64_t v19 = v8;
    *(unsigned char *)(v19 + 8) = 1;
    swift_willThrow();
  }
  return v8;
}

uint64_t sub_252809E08(uint64_t (*a1)(void))
{
  uint64_t result = a1();
  if (result) {
    return _swift_stdlib_bridgeErrorToNSError();
  }
  return result;
}

unint64_t sub_252809E38()
{
  unint64_t result = qword_269C1E618;
  if (!qword_269C1E618)
  {
    type metadata accessor for CFError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E618);
  }
  return result;
}

unint64_t sub_252809E90()
{
  unint64_t result = qword_269C1E620;
  if (!qword_269C1E620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E620);
  }
  return result;
}

uint64_t sub_252809EE4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E630);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_252809F44(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  _OWORD v16[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  CFDataRef v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)uint64_t v1 = xmmword_252834E40;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_23;
      }
      if (sub_2528309E8() && __OFSUB__((int)v4, sub_252830A18())) {
        goto LABEL_24;
      }
      sub_252830A28();
      swift_allocObject();
      uint64_t v13 = sub_2528309C8();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      unint64_t result = sub_25280A2B8((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      if (v2)
      {
        *CFDataRef v5 = v4;
        goto LABEL_19;
      }
      *CFDataRef v5 = v4;
      v5[1] = v12;
      break;
    case 2uLL:
      uint64_t v14 = *v1;
      uint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_252830BE8();
      unint64_t result = sub_25280A2B8(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = v15 | 0x8000000000000000;
      if (v2)
      {
        *uint64_t v1 = v14;
LABEL_19:
        v5[1] = v12;
      }
      else
      {
        *uint64_t v1 = v14;
        v1[1] = v12;
      }
      break;
    case 3uLL:
      memset(v16, 0, 15);
      unint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16);
      if (!v2) {
        return (char *)v14;
      }
      return result;
    default:
      v16[0] = *v1;
      LOWORD(v16[1]) = v3;
      BYTE2(v16[1]) = BYTE2(v3);
      BYTE3(v16[1]) = BYTE3(v3);
      BYTE4(v16[1]) = BYTE4(v3);
      BYTE5(v16[1]) = BYTE5(v3);
      BYTE6(v16[1]) = BYTE6(v3);
      unint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16 + BYTE6(v3));
      if (!v2) {
        unint64_t result = (char *)v14;
      }
      unint64_t v8 = LODWORD(v16[1]) | ((unint64_t)BYTE4(v16[1]) << 32) | ((unint64_t)BYTE5(v16[1]) << 40) | ((unint64_t)BYTE6(v16[1]) << 48);
      *uint64_t v1 = v16[0];
      v1[1] = v8;
      return result;
  }
  return result;
}

void *sub_25280A248(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t result = a1(&v6, a3, a4 - a3);
    if (v4) {
      return result;
    }
    return (void *)v6;
  }
  unint64_t result = a1(&v6, 0, 0);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

char *sub_25280A2B8(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  unint64_t result = (char *)sub_2528309E8();
  if (!result) {
    goto LABEL_12;
  }
  unint64_t v8 = result;
  unint64_t result = (char *)sub_252830A18();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = sub_252830A08();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  unint64_t result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

uint64_t sub_25280A36C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    unint64_t result = sub_2528317D8();
    if ((v3 & 1) == 0)
    {
      uint64_t v4 = result;
      unint64_t result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned char *sub_25280A3F8(unsigned char *result, unsigned char *a2)
{
  if (result)
  {
    uint64_t v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (unsigned char *)sub_252818F18(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (unsigned char *)sub_252818FDC((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (unsigned char *)sub_252819058((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_25280A45C(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_252830A28();
      swift_allocObject();
      sub_2528309F8();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_252830C18();
        unint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

void *sub_25280A4FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  CFDataRef v5 = *(uint64_t **)(v3 + 16);
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  void v12[2] = v13;
  unint64_t result = sub_25280A248((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_25280A580, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_25280A568(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_25280A580@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_25280A36C(a1, a2);
}

uint64_t sub_25280A5A0(unint64_t a1)
{
  return sub_25280A5B8(a1);
}

uint64_t sub_25280A5AC(unint64_t a1)
{
  return sub_25280A5B8(a1);
}

uint64_t sub_25280A5B8(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_252831868();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x2533BD5C0](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_252831848();
        sub_252831878();
        sub_252831888();
        sub_252831858();
        if (v4 == v2) {
          return v12;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        unint64_t v8 = *(void **)(v6 + 8 * v5);
        self;
        uint64_t v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        sub_252831848();
        sub_252831878();
        sub_252831888();
        sub_252831858();
        ++v5;
        if (v7 == v2) {
          return v12;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_2528318C8();
    swift_bridgeObjectRelease();
    sub_252831868();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_2528318C8();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_25280A79C(uint64_t a1)
{
  uint64_t v6 = MEMORY[0x263F8EE78];
  uint64_t v2 = *(void *)(a1 + 16);
  sub_252831868();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_252784638(i, (uint64_t)v5);
    type metadata accessor for SecCertificate(0);
    if (!swift_dynamicCast()) {
      break;
    }
    sub_252831848();
    sub_252831878();
    sub_252831888();
    sub_252831858();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

unint64_t sub_25280A898(id a1, char a2)
{
  switch(a2)
  {
    case 1:
      id v5 = a1;
      sub_2528317C8();
      swift_bridgeObjectRelease();
      unint64_t v12 = 0xD00000000000001CLL;
      if (a1)
      {
        swift_getErrorValue();
        id v6 = a1;
        sub_252831AA8();
        sub_2527A0590(a1, 1u);
      }
      sub_2528313A8();
      swift_bridgeObjectRelease();
      id v10 = a1;
      unsigned __int8 v11 = 1;
      goto LABEL_14;
    case 2:
      id v7 = a1;
      sub_2528317C8();
      swift_bridgeObjectRelease();
      unint64_t v12 = 0xD000000000000024;
      if (a1)
      {
        swift_getErrorValue();
        id v8 = a1;
        sub_252831AA8();
        sub_2527A0590(a1, 2u);
      }
      sub_2528313A8();
      swift_bridgeObjectRelease();
      id v10 = a1;
      unsigned __int8 v11 = 2;
      goto LABEL_14;
    case 3:
      if (a1) {
        return 0xD00000000000002ALL;
      }
      else {
        return 0xD000000000000033;
      }
    default:
      id v3 = a1;
      sub_2528317C8();
      swift_bridgeObjectRelease();
      unint64_t v12 = 0xD000000000000021;
      if (a1)
      {
        swift_getErrorValue();
        id v4 = a1;
        sub_252831AA8();
        sub_2527A0590(a1, 0);
      }
      sub_2528313A8();
      swift_bridgeObjectRelease();
      id v10 = a1;
      unsigned __int8 v11 = 0;
LABEL_14:
      sub_2527A0590(v10, v11);
      return v12;
  }
}

uint64_t sub_25280AB7C()
{
  return MEMORY[0x270FA2498](sub_25280AC08, 0, 0);
}

uint64_t sub_25280AC08()
{
  *(unsigned char *)(v0 + 440) = 0;
  uint64_t v1 = (__CFString *)sub_252831298();
  uint64_t v2 = (__CFString *)sub_252831298();
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(v1, v2, (Boolean *)(v0 + 440));

  if (*(unsigned char *)(v0 + 440) && AppBooleanValue)
  {
    if (qword_269C1CEB8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D298);
    id v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "User enabled BAA Auth to include Device identifiers", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFE8);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_252832B00;
    *(void *)(v8 + 32) = sub_2528312A8();
    *(void *)(v8 + 40) = v9;
  }
  else
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DFE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_252834DD0;
  *(void *)(inited + 32) = sub_2528312A8();
  *(void *)(inited + 40) = v11;
  unint64_t v12 = sub_25280C560();
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v12;
  *(void *)(inited + 56) = v13;
  *(void *)(inited + 80) = sub_2528312A8();
  *(void *)(inited + 88) = v14;
  uint64_t v15 = MEMORY[0x263F8D4F8];
  *(void *)(inited + 120) = MEMORY[0x263F8D4F8];
  *(unsigned char *)(inited + 96) = 1;
  *(void *)(inited + 128) = sub_2528312A8();
  uint64_t v16 = MEMORY[0x263F8D6C8];
  *(void *)(inited + 168) = MEMORY[0x263F8D6C8];
  *(void *)(inited + 136) = v17;
  *(void *)(inited + 144) = 60;
  *(void *)(inited + 176) = sub_2528312A8();
  *(void *)(inited + 216) = v16;
  *(void *)(inited + 184) = v18;
  *(void *)(inited + 192) = 1440;
  *(void *)(inited + 224) = sub_2528312A8();
  *(void *)(inited + 232) = v19;
  char v20 = MEMORY[0x2533BD9E0]();
  *(void *)(inited + 264) = v15;
  *(unsigned char *)(inited + 240) = v20 ^ 1;
  *(void *)(inited + 272) = sub_2528312A8();
  *(void *)(inited + 280) = v21;
  SecAccessControlRef v22 = sub_25280C634();
  type metadata accessor for SecAccessControl(0);
  *(void *)(inited + 312) = v23;
  *(void *)(inited + 288) = v22;
  *(void *)(inited + 320) = sub_2528312A8();
  *(void *)(inited + 328) = v24;
  *(void *)(inited + 360) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF40);
  *(void *)(inited + 336) = v8;
  unint64_t v25 = sub_252786D50(inited);
  *(void *)(v0 + 408) = v25;
  uint64_t v26 = swift_task_alloc();
  *(void *)(v0 + 416) = v26;
  *(void *)(v26 + 16) = v25;
  uint64_t v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 424) = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_25280B0DC;
  return MEMORY[0x270FA2360](v0 + 384, 0, 0, 0xD00000000000001ELL, 0x800000025283D1E0, sub_25280C99C, v26, &type metadata for BAAValues);
}

uint64_t sub_25280B0DC()
{
  *(void *)(*(void *)v1 + 432) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_25280B2C4;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v2 = sub_25280B234;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25280B234()
{
  uint64_t v1 = v0[48];
  uint64_t v2 = v0[49];
  uint64_t v3 = v0[50];
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[1];
  return v4(v1, v2, v3);
}

uint64_t sub_25280B2C4()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25280B35C()
{
  uint64_t v0 = sub_252831648();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_252831638();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_252831178();
  MEMORY[0x270FA5388](v5 - 8);
  sub_2527E8848();
  sub_252831168();
  v7[1] = MEMORY[0x263F8EE78];
  sub_25280CFD8((unint64_t *)&qword_269C1E088, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E090);
  sub_25280CF7C();
  sub_252831748();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F130], v0);
  uint64_t result = sub_252831658();
  qword_269C2D230 = result;
  return result;
}

void sub_25280B58C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E640);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  if (qword_269C1CE70 != -1) {
    swift_once();
  }
  sub_25280B7A4(a2);
  id v7 = (void *)sub_252831218();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_25280CA38;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25280C010;
  aBlock[3] = &block_descriptor_1;
  id v10 = _Block_copy(aBlock);
  swift_release();
  DeviceIdentityIssueClientCertificateWithCompletion();
  _Block_release(v10);
}

uint64_t sub_25280B7A4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4A0);
    uint64_t v2 = sub_2528318F8();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_252784638(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_2527933EC(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_2527933EC(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_2527933EC(v36, v37);
    sub_2527933EC(v37, &v33);
    uint64_t result = sub_252831758();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_2527933EC(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_25280CF74();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_25280BB6C(void *a1, uint64_t a2, void *a3)
{
  if (a1 && a2)
  {
    id v5 = a1;
    unint64_t v6 = sub_25280A79C(a2);
    if (v6)
    {
      unint64_t v7 = v6;
      if (v6 >> 62)
      {
        if (sub_2528318C8()) {
          goto LABEL_6;
        }
      }
      else if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_6:
        uint64_t v8 = sub_25280CADC(v7);
        unint64_t v10 = v9;
        swift_bridgeObjectRelease();
        sub_252830C58();
        sub_252782E20(v8, v10);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E640);
        return sub_252831578();
      }

      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
  if (qword_269C1CEB8 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_252831158();
  __swift_project_value_buffer(v12, (uint64_t)qword_269C2D298);
  id v13 = a3;
  id v14 = a3;
  int64_t v15 = sub_252831138();
  os_log_type_t v16 = sub_252831618();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 138412290;
    if (a3)
    {
      id v19 = a3;
      uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
      sub_252831698();
    }
    else
    {
      sub_252831698();
      uint64_t v20 = 0;
    }
    *uint64_t v18 = v20;

    _os_log_impl(&dword_25277D000, v15, v16, "Unable to Issue Client Certificate. underlying error: %@", v17, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D030);
    swift_arrayDestroy();
    MEMORY[0x2533BE070](v18, -1, -1);
    MEMORY[0x2533BE070](v17, -1, -1);
  }
  else
  {
  }
  sub_252809E90();
  unint64_t v21 = (void *)swift_allocError();
  *(void *)uint64_t v22 = a3;
  *(unsigned char *)(v22 + 8) = 2;
  id v23 = a3;
  swift_willThrow();
  if (qword_269C1CEB8 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_252831158();
  __swift_project_value_buffer(v24, (uint64_t)qword_269C2D298);
  id v25 = v21;
  id v26 = v21;
  int64_t v27 = sub_252831138();
  os_log_type_t v28 = sub_252831618();
  if (os_log_type_enabled(v27, v28))
  {
    long long v29 = (uint8_t *)swift_slowAlloc();
    long long v30 = (void *)swift_slowAlloc();
    *(_DWORD *)long long v29 = 138412290;
    id v31 = v21;
    uint64_t v32 = _swift_stdlib_bridgeErrorToNSError();
    sub_252831698();
    *long long v30 = v32;

    _os_log_impl(&dword_25277D000, v27, v28, "Error while generating BAA key and certificate %@", v29, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D030);
    swift_arrayDestroy();
    MEMORY[0x2533BE070](v30, -1, -1);
    MEMORY[0x2533BE070](v29, -1, -1);
  }
  else
  {
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E640);
  return sub_252831568();
}

uint64_t sub_25280C010(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  unint64_t v6 = *(void (**)(void *, uint64_t, void *))(a1 + 32);
  if (a3) {
    uint64_t v7 = sub_2528314F8();
  }
  else {
    uint64_t v7 = 0;
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v6(a2, v7, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

void *sub_25280C0C4()
{
  v5[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v0 = (void *)sub_252830C48();
  v5[0] = 0;
  id v1 = objc_msgSend(v0, sel_compressedDataUsingAlgorithm_error_, 3, v5);

  id v2 = v5[0];
  if (v1)
  {
    uint64_t v3 = (void *)sub_252830C68();
  }
  else
  {
    uint64_t v3 = v2;
    sub_252830B18();

    swift_willThrow();
  }
  return v3;
}

uint64_t sub_25280C198(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E650);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25280D32C();
  sub_252831B38();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF40);
  sub_25279077C(&qword_26B22BF48);
  sub_252831A18();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_25280C30C()
{
  return sub_25280A898(*(id *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_25280C318()
{
  return sub_252831B18();
}

uint64_t sub_25280C368()
{
  return sub_252831258();
}

uint64_t sub_25280C37C()
{
  return sub_252831B18();
}

uint64_t sub_25280C3C8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_252831918();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_25280C41C(void *a1@<X8>)
{
  *a1 = 0x7374726563;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_25280C434()
{
  return 0x7374726563;
}

uint64_t sub_25280C448@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_252831918();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_25280C4A0(uint64_t a1)
{
  unint64_t v2 = sub_25280D32C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25280C4DC(uint64_t a1)
{
  unint64_t v2 = sub_25280D32C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_25280C518@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_25280D380(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_25280C544(void *a1)
{
  return sub_25280C198(a1, *v1);
}

unint64_t sub_25280C560()
{
  sub_2528317C8();
  swift_bridgeObjectRelease();
  id v0 = objc_msgSend(self, sel_processInfo);
  id v1 = objc_msgSend(v0, sel_processName);

  sub_2528312A8();
  sub_2528313A8();
  swift_bridgeObjectRelease();
  return 0xD00000000000002ELL;
}

SecAccessControlRef sub_25280C634()
{
  error[1] = *(CFErrorRef *)MEMORY[0x263EF8340];
  error[0] = 0;
  SecAccessControlRef v0 = SecAccessControlCreateWithFlags(0, (CFTypeRef)*MEMORY[0x263F16EA0], 0x40000000uLL, error);
  if (!v0)
  {
    if (qword_269C1CEB8 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_252831158();
    __swift_project_value_buffer(v1, (uint64_t)qword_269C2D298);
    uint64_t v2 = sub_252831138();
    os_log_type_t v3 = sub_252831618();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 138412290;
      swift_beginAccess();
      CFErrorRef v6 = error[0];
      if (error[0])
      {
        type metadata accessor for CFError(0);
        sub_25280CFD8((unint64_t *)&qword_269C1E618, type metadata accessor for CFError);
        swift_allocError();
        *uint64_t v7 = v6;
        uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
        sub_252831698();
      }
      else
      {
        sub_252831698();
        uint64_t v8 = 0;
      }
      *uint64_t v5 = v8;
      _os_log_impl(&dword_25277D000, v2, v3, "Unable to create access Control object for BAA %@", v4, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D030);
      swift_arrayDestroy();
      MEMORY[0x2533BE070](v5, -1, -1);
      MEMORY[0x2533BE070](v4, -1, -1);
    }

    swift_beginAccess();
    CFErrorRef v9 = error[0];
    if (error[0])
    {
      type metadata accessor for CFError(0);
      sub_25280CFD8((unint64_t *)&qword_269C1E618, type metadata accessor for CFError);
      uint64_t v10 = swift_allocError();
      *unint64_t v11 = v9;
    }
    else
    {
      uint64_t v10 = 0;
    }
    sub_252809E90();
    swift_allocError();
    *(void *)uint64_t v12 = v10;
    *(unsigned char *)(v12 + 8) = 0;
    swift_willThrow();
  }
  return v0;
}

uint64_t sub_25280C93C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_25280C99C(uint64_t a1)
{
  sub_25280B58C(a1, *(void *)(v1 + 16));
}

uint64_t sub_25280C9A4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E640);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_25280CA38(void *a1, uint64_t a2, void *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E640);

  return sub_25280BB6C(a1, a2, a3);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_25280CADC(unint64_t a1)
{
  uint64_t v2 = v1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_2528318C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = (uint8_t *)MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v42 = MEMORY[0x263F8EE78];
    uint64_t result = sub_25278FE94(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v5 = (uint8_t *)v42;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v7 = 0;
      do
      {
        uint64_t v8 = (__SecCertificate *)MEMORY[0x2533BD5C0](v7, a1);
        CFDataRef v9 = SecCertificateCopyData(v8);
        uint64_t v10 = sub_252830C68();
        unint64_t v12 = v11;

        uint64_t v13 = sub_252830C58();
        uint64_t v15 = v14;
        sub_252782E20(v10, v12);
        swift_unknownObjectRelease();
        unint64_t v17 = *(void *)(v42 + 16);
        unint64_t v16 = *(void *)(v42 + 24);
        if (v17 >= v16 >> 1) {
          sub_25278FE94(v16 > 1, v17 + 1, 1);
        }
        ++v7;
        *(void *)(v42 + 16) = v17 + 1;
        uint64_t v18 = v42 + 16 * v17;
        *(void *)(v18 + 32) = v13;
        *(void *)(v18 + 40) = v15;
      }
      while (v4 != v7);
    }
    else
    {
      id v19 = (id *)(a1 + 32);
      do
      {
        uint64_t v20 = (__SecCertificate *)*v19;
        CFDataRef v21 = SecCertificateCopyData(v20);
        uint64_t v22 = sub_252830C68();
        unint64_t v24 = v23;

        uint64_t v25 = sub_252830C58();
        uint64_t v27 = v26;
        sub_252782E20(v22, v24);

        unint64_t v29 = *(void *)(v42 + 16);
        unint64_t v28 = *(void *)(v42 + 24);
        if (v29 >= v28 >> 1) {
          sub_25278FE94(v28 > 1, v29 + 1, 1);
        }
        *(void *)(v42 + 16) = v29 + 1;
        uint64_t v30 = v42 + 16 * v29;
        *(void *)(v30 + 32) = v25;
        *(void *)(v30 + 40) = v27;
        ++v19;
        --v4;
      }
      while (v4);
    }
    uint64_t v2 = v1;
  }
  sub_252830858();
  swift_allocObject();
  sub_252830848();
  sub_25280CF20();
  uint64_t v31 = sub_252830838();
  if (v2)
  {
    swift_release();
    swift_bridgeObjectRelease();
    if (qword_269C1CEB8 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_252831158();
    __swift_project_value_buffer(v35, (uint64_t)qword_269C2D298);
    id v36 = v2;
    id v37 = v2;
    uint64_t v38 = sub_252831138();
    os_log_type_t v39 = sub_252831618();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      long long v40 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 138412290;
      id v41 = v2;
      uint64_t v43 = _swift_stdlib_bridgeErrorToNSError();
      sub_252831698();
      *long long v40 = v43;

      _os_log_impl(&dword_25277D000, v38, v39, "Error while encoding Cert Chain for BAA. %@", v5, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D030);
      swift_arrayDestroy();
      MEMORY[0x2533BE070](v40, -1, -1);
      MEMORY[0x2533BE070](v5, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
  }
  else
  {
    uint64_t v33 = v31;
    unint64_t v34 = v32;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v5 = (uint8_t *)sub_25280C0C4();
    sub_252782E20(v33, v34);
  }
  return (uint64_t)v5;
}

unint64_t sub_25280CF20()
{
  unint64_t result = qword_269C1E648;
  if (!qword_269C1E648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E648);
  }
  return result;
}

uint64_t sub_25280CF74()
{
  return swift_release();
}

unint64_t sub_25280CF7C()
{
  unint64_t result = qword_269C1E098;
  if (!qword_269C1E098)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C1E090);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E098);
  }
  return result;
}

uint64_t sub_25280CFD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for Attestation()
{
  return &type metadata for Attestation;
}

uint64_t assignWithCopy for BAAValues(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for BAAValues(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BAAValues(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BAAValues(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BAAValues()
{
  return &type metadata for BAAValues;
}

uint64_t initializeBufferWithCopyOfBuffer for BAASigningError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_2527A057C(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void destroy for BAASigningError(uint64_t a1)
{
}

uint64_t assignWithCopy for BAASigningError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_2527A057C(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_2527A0590(v5, v6);
  return a1;
}

uint64_t assignWithTake for BAASigningError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  unsigned __int8 v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_2527A0590(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for BAASigningError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BAASigningError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_25280D2EC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_25280D304(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for BAASigningError()
{
  return &type metadata for BAASigningError;
}

unint64_t sub_25280D32C()
{
  unint64_t result = qword_269C1E658;
  if (!qword_269C1E658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E658);
  }
  return result;
}

void *sub_25280D380(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E660);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned __int8 v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25280D32C();
  sub_252831B28();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF40);
    sub_25279077C((unint64_t *)&unk_26B22BF50);
    sub_252831998();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v7;
}

unsigned char *storeEnumTagSinglePayload for Attestation.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25280D5B8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Attestation.CodingKeys()
{
  return &type metadata for Attestation.CodingKeys;
}

unint64_t sub_25280D5F4()
{
  unint64_t result = qword_269C1E668;
  if (!qword_269C1E668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E668);
  }
  return result;
}

unint64_t sub_25280D64C()
{
  unint64_t result = qword_269C1E670;
  if (!qword_269C1E670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E670);
  }
  return result;
}

unint64_t sub_25280D6A4()
{
  unint64_t result = qword_269C1E678;
  if (!qword_269C1E678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E678);
  }
  return result;
}

uint64_t sub_25280D6FC(void (*a1)(void *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  if (a3 >> 62) {
    goto LABEL_19;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    if (!v6) {
      return v7;
    }
    uint64_t v21 = MEMORY[0x263F8EE78];
    uint64_t result = sub_25278FE94(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0) {
      break;
    }
    uint64_t v9 = 0;
    uint64_t v7 = v21;
    while (v6 != v9)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        uint64_t v10 = MEMORY[0x2533BD5C0](v9, a3);
      }
      else
      {
        uint64_t v10 = *(void *)(a3 + 8 * v9 + 32);
        swift_retain();
      }
      uint64_t v19 = v10;
      a1(v20, &v19);
      if (v4)
      {
        swift_release();
        swift_release();
        return v7;
      }
      uint64_t v11 = v6;
      swift_release();
      uint64_t v13 = v20[0];
      uint64_t v12 = v20[1];
      uint64_t v21 = v7;
      unint64_t v15 = *(void *)(v7 + 16);
      unint64_t v14 = *(void *)(v7 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_25278FE94(v14 > 1, v15 + 1, 1);
        uint64_t v7 = v21;
      }
      ++v9;
      *(void *)(v7 + 16) = v15 + 1;
      uint64_t v16 = v7 + 16 * v15;
      *(void *)(v16 + 32) = v13;
      *(void *)(v16 + 40) = v12;
      uint64_t v6 = v11;
      BOOL v17 = v11 == v9;
      uint64_t v4 = 0;
      if (v17) {
        return v7;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_2528318C8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_25280D8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v19[0] = a1;
  v19[1] = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD48);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (v10)
  {
    uint64_t v21 = MEMORY[0x263F8EE78];
    sub_25278FED4(0, v10, 0);
    uint64_t v11 = v21;
    uint64_t v12 = (uint64_t *)(a3 + 56);
    while (1)
    {
      uint64_t v13 = *(v12 - 2);
      uint64_t v14 = *(v12 - 1);
      uint64_t v15 = *v12;
      v20[0] = *(v12 - 3);
      v20[1] = v13;
      void v20[2] = v14;
      v20[3] = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      ((void (*)(void *))v19[0])(v20);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = v11;
      unint64_t v17 = *(void *)(v11 + 16);
      unint64_t v16 = *(void *)(v11 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_25278FED4(v16 > 1, v17 + 1, 1);
        uint64_t v11 = v21;
      }
      v12 += 4;
      *(void *)(v11 + 16) = v17 + 1;
      sub_25280EEEC((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v17);
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_25280DA74(unsigned __int8 *a1, char *a2)
{
  return sub_2527A60E4(*a1, *a2);
}

uint64_t sub_25280DA80()
{
  return sub_252831B18();
}

uint64_t sub_25280DB48()
{
  sub_252831258();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25280DBF8()
{
  return sub_252831B18();
}

uint64_t sub_25280DCBC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25280F110();
  *a1 = result;
  return result;
}

void sub_25280DCEC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEA00000000006C61;
  uint64_t v3 = 0x6E7265746E496171;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE300000000000000;
      uint64_t v3 = 7759204;
      goto LABEL_3;
    case 2:
      *a1 = 1953654115;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 1685025392;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_25280DD74(void *a1@<X8>)
{
  *a1 = &unk_2702C4CF0;
}

uint64_t sub_25280DD84()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B22C000);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_252839190;
  *(void *)(v0 + 32) = swift_getKeyPath();
  *(void *)(v0 + 40) = swift_getKeyPath();
  *(void *)(v0 + 48) = swift_getKeyPath();
  *(void *)(v0 + 56) = swift_getKeyPath();
  *(void *)(v0 + 64) = swift_getKeyPath();
  *(void *)(v0 + 72) = swift_getKeyPath();
  *(void *)(v0 + 80) = swift_getKeyPath();
  *(void *)(v0 + 88) = swift_getKeyPath();
  *(void *)(v0 + 96) = swift_getKeyPath();
  *(void *)(v0 + 104) = swift_getKeyPath();
  uint64_t result = sub_252831518();
  qword_26B22C030 = v0;
  return result;
}

uint64_t sub_25280DE88(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 184);
  long long v3 = *(_OWORD *)(a2 + 216);
  v9[10] = *(_OWORD *)(a2 + 200);
  v9[11] = v3;
  v9[12] = *(_OWORD *)(a2 + 232);
  long long v4 = *(_OWORD *)(a2 + 120);
  long long v5 = *(_OWORD *)(a2 + 152);
  v9[6] = *(_OWORD *)(a2 + 136);
  v9[7] = v5;
  v9[8] = *(_OWORD *)(a2 + 168);
  v9[9] = v2;
  long long v6 = *(_OWORD *)(a2 + 56);
  long long v7 = *(_OWORD *)(a2 + 88);
  void v9[2] = *(_OWORD *)(a2 + 72);
  void v9[3] = v7;
  v9[4] = *(_OWORD *)(a2 + 104);
  v9[5] = v4;
  v9[0] = *(_OWORD *)(a2 + 40);
  v9[1] = v6;
  sub_2527A0608((uint64_t)v9);
  swift_getAtKeyPath();
  return sub_2527A06F4((uint64_t)v9);
}

uint64_t sub_25280DF84()
{
  uint64_t v0 = (__CFString *)sub_252831298();
  uint64_t v1 = (__CFString *)sub_252831298();
  CFPropertyListRef v2 = CFPreferencesCopyAppValue(v0, v1);

  if (v2 && (swift_dynamicCast() & 1) != 0)
  {
    uint64_t v4 = v24;
    unint64_t v3 = v25;
    if (qword_269C1CEB0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_252831158();
    __swift_project_value_buffer(v5, (uint64_t)qword_269C2D280);
    swift_bridgeObjectRetain_n();
    long long v6 = sub_252831138();
    os_log_type_t v7 = sub_252831628();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v24 = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      swift_bridgeObjectRetain();
      sub_25278F894(v4, v3, &v24);
      sub_252831698();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25277D000, v6, v7, "Environment override detected. Using user set env value : %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533BE070](v9, -1, -1);
      MEMORY[0x2533BE070](v8, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    unint64_t v10 = 0xEA00000000006C61;
    uint64_t v11 = byte_2702C3E38;
    uint64_t v12 = 0x6E7265746E496171;
    unint64_t v13 = 0xEA00000000006C61;
    switch(byte_2702C3E38)
    {
      case 1:
        unint64_t v13 = 0xE300000000000000;
        uint64_t v12 = 7759204;
        break;
      case 2:
        unint64_t v13 = 0xE400000000000000;
        uint64_t v12 = 1953654115;
        break;
      case 3:
        unint64_t v13 = 0xE400000000000000;
        uint64_t v12 = 1685025392;
        break;
      default:
        break;
    }
    uint64_t v24 = v12;
    unint64_t v25 = v13;
    sub_25279033C();
    uint64_t v14 = sub_2528316F8();
    swift_bridgeObjectRelease();
    if (!v14) {
      goto LABEL_30;
    }
    unint64_t v15 = 0xEA00000000006C61;
    uint64_t v16 = 0x6E7265746E496171;
    uint64_t v11 = byte_2702C3E39;
    switch(byte_2702C3E39)
    {
      case 1:
        unint64_t v15 = 0xE300000000000000;
        uint64_t v16 = 7759204;
        break;
      case 2:
        unint64_t v15 = 0xE400000000000000;
        uint64_t v16 = 1953654115;
        break;
      case 3:
        unint64_t v15 = 0xE400000000000000;
        uint64_t v16 = 1685025392;
        break;
      default:
        break;
    }
    uint64_t v24 = v16;
    unint64_t v25 = v15;
    uint64_t v17 = sub_2528316F8();
    swift_bridgeObjectRelease();
    if (!v17) {
      goto LABEL_30;
    }
    unint64_t v18 = 0xEA00000000006C61;
    uint64_t v19 = 0x6E7265746E496171;
    uint64_t v11 = byte_2702C3E3A;
    switch(byte_2702C3E3A)
    {
      case 1:
        unint64_t v18 = 0xE300000000000000;
        uint64_t v19 = 7759204;
        break;
      case 2:
        unint64_t v18 = 0xE400000000000000;
        uint64_t v19 = 1953654115;
        break;
      case 3:
        unint64_t v18 = 0xE400000000000000;
        uint64_t v19 = 1685025392;
        break;
      default:
        break;
    }
    uint64_t v24 = v19;
    unint64_t v25 = v18;
    uint64_t v20 = sub_2528316F8();
    swift_bridgeObjectRelease();
    if (!v20) {
      goto LABEL_30;
    }
    uint64_t v21 = 0x6E7265746E496171;
    uint64_t v11 = byte_2702C3E3B;
    switch(byte_2702C3E3B)
    {
      case 1:
        unint64_t v10 = 0xE300000000000000;
        uint64_t v21 = 7759204;
        break;
      case 2:
        unint64_t v10 = 0xE400000000000000;
        uint64_t v21 = 1953654115;
        break;
      case 3:
        unint64_t v10 = 0xE400000000000000;
        uint64_t v21 = 1685025392;
        break;
      default:
        break;
    }
    uint64_t v24 = v21;
    unint64_t v25 = v10;
    uint64_t v22 = sub_2528316F8();
    swift_bridgeObjectRelease();
    if (!v22)
    {
LABEL_30:
      swift_bridgeObjectRelease();
      return v11;
    }
    swift_bridgeObjectRelease();
  }
  return 3;
}

uint64_t sub_25280E4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BE58);
  MEMORY[0x270FA5388](v4 - 8);
  long long v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UtilityServicesConfigurationsModel();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  keyExistsAndHasValidFormat[0] = 0;
  uint64_t v11 = (__CFString *)sub_252831298();
  uint64_t v12 = (__CFString *)sub_252831298();
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(v11, v12, keyExistsAndHasValidFormat);

  if (keyExistsAndHasValidFormat[0] && AppBooleanValue)
  {
    if (qword_26B22BF08 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_252831158();
    __swift_project_value_buffer(v14, (uint64_t)qword_26B22C0A0);
    unint64_t v15 = sub_252831138();
    os_log_type_t v16 = sub_252831628();
    if (!os_log_type_enabled(v15, v16)) {
      goto LABEL_13;
    }
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    unint64_t v18 = "BAA Auth disabled via defaults override";
LABEL_12:
    _os_log_impl(&dword_25277D000, v15, v16, v18, v17, 2u);
    MEMORY[0x2533BE070](v17, -1, -1);
LABEL_13:

    return 0;
  }
  sub_2527BC6F4((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_25280EE6C((uint64_t)v6);
    if (qword_26B22BF08 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_252831158();
    __swift_project_value_buffer(v19, (uint64_t)qword_26B22C0A0);
    unint64_t v15 = sub_252831138();
    os_log_type_t v16 = sub_252831618();
    if (!os_log_type_enabled(v15, v16)) {
      goto LABEL_13;
    }
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    unint64_t v18 = "Unable to retrieve config to check if URL required BAA Auth";
    goto LABEL_12;
  }
  sub_2527A05A4((uint64_t)v6, (uint64_t)v10);
  keyExistsAndHasValidFormat[0] = 0;
  uint64_t v21 = (__CFString *)sub_252831298();
  uint64_t v22 = (__CFString *)sub_252831298();
  int v23 = CFPreferencesGetAppBooleanValue(v21, v22, keyExistsAndHasValidFormat);

  if (keyExistsAndHasValidFormat[0] && v23)
  {
    if (qword_26B22BF08 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_252831158();
    __swift_project_value_buffer(v25, (uint64_t)qword_26B22C0A0);
    uint64_t v26 = sub_252831138();
    os_log_type_t v27 = sub_252831628();
    if (!os_log_type_enabled(v26, v27)) {
      goto LABEL_37;
    }
    unint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v28 = 0;
    unint64_t v29 = "Identifier Profile Override detected | BAA Header applied to all Path by profile!";
LABEL_36:
    _os_log_impl(&dword_25277D000, v26, v27, v29, v28, 2u);
    MEMORY[0x2533BE070](v28, -1, -1);
LABEL_37:

    sub_2527A07E0((uint64_t)v10);
    return 1;
  }
  if (qword_26B22BE88 != -1) {
    uint64_t v24 = swift_once();
  }
  unint64_t v30 = qword_26B22C030;
  MEMORY[0x270FA5388](v24);
  v41[-2] = v10;
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_25280D6FC((void (*)(void *__return_ptr, uint64_t *))sub_25280EECC, (uint64_t)&v41[-4], v30);
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void *)(v31 + 16);
  if (v32)
  {
    swift_bridgeObjectRetain();
    sub_25279033C();
    uint64_t v33 = (uint64_t *)(v31 + 40);
    while (1)
    {
      uint64_t v34 = *(v33 - 1);
      uint64_t v35 = *v33;
      *(void *)Boolean keyExistsAndHasValidFormat = a1;
      uint64_t v43 = a2;
      v41[1] = v34;
      v41[2] = v35;
      swift_bridgeObjectRetain();
      if (sub_252831728()) {
        break;
      }
      v33 += 2;
      swift_bridgeObjectRelease();
      if (!--v32)
      {
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (qword_26B22BF08 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_252831158();
    __swift_project_value_buffer(v40, (uint64_t)qword_26B22C0A0);
    uint64_t v26 = sub_252831138();
    os_log_type_t v27 = sub_252831628();
    if (!os_log_type_enabled(v26, v27)) {
      goto LABEL_37;
    }
    unint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v28 = 0;
    unint64_t v29 = "API Path requires BAA Auth Headers";
    goto LABEL_36;
  }
LABEL_27:
  swift_bridgeObjectRelease();
  if (qword_26B22BF08 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_252831158();
  __swift_project_value_buffer(v36, (uint64_t)qword_26B22C0A0);
  id v37 = sub_252831138();
  os_log_type_t v38 = sub_252831628();
  if (os_log_type_enabled(v37, v38))
  {
    os_log_type_t v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v39 = 0;
    _os_log_impl(&dword_25277D000, v37, v38, "API Path does not require BAA Auth Header", v39, 2u);
    MEMORY[0x2533BE070](v39, -1, -1);
  }

  sub_2527A07E0((uint64_t)v10);
  return 0;
}

uint64_t sub_25280EB98()
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  Boolean keyExistsAndHasValidFormat = 0;
  uint64_t v0 = (__CFString *)sub_252831298();
  uint64_t v1 = (__CFString *)sub_252831298();
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(v0, v1, &keyExistsAndHasValidFormat);

  if (keyExistsAndHasValidFormat && AppBooleanValue)
  {
    if (qword_26B22BF08 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_252831158();
    __swift_project_value_buffer(v3, (uint64_t)qword_26B22C0A0);
    uint64_t v4 = sub_252831138();
    os_log_type_t v5 = sub_252831628();
    if (os_log_type_enabled(v4, v5))
    {
      long long v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v6 = 0;
      uint64_t v7 = "HMAC Authentication enforced by Defaults override.";
LABEL_12:
      _os_log_impl(&dword_25277D000, v4, v5, v7, v6, 2u);
      uint64_t v9 = 1;
LABEL_18:
      MEMORY[0x2533BE070](v6, -1, -1);
      goto LABEL_20;
    }
  }
  else
  {
    if (sub_25280DF84() > 2u)
    {
      if (qword_26B22BF08 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_252831158();
      __swift_project_value_buffer(v10, (uint64_t)qword_26B22C0A0);
      uint64_t v4 = sub_252831138();
      os_log_type_t v11 = sub_252831628();
      if (!os_log_type_enabled(v4, v11))
      {
        uint64_t v9 = 0;
        goto LABEL_20;
      }
      long long v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v6 = 0;
      _os_log_impl(&dword_25277D000, v4, v11, "Current environment does not requires HMAC Authentication.", v6, 2u);
      uint64_t v9 = 0;
      goto LABEL_18;
    }
    if (qword_26B22BF08 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_252831158();
    __swift_project_value_buffer(v8, (uint64_t)qword_26B22C0A0);
    uint64_t v4 = sub_252831138();
    os_log_type_t v5 = sub_252831628();
    if (os_log_type_enabled(v4, v5))
    {
      long long v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v6 = 0;
      uint64_t v7 = "Current environment requires HMAC Authentication.";
      goto LABEL_12;
    }
  }
  uint64_t v9 = 1;
LABEL_20:

  return v9;
}

uint64_t sub_25280EE6C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BE58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25280EECC(uint64_t a1)
{
  return sub_25280DE88(a1, *(void *)(v1 + 16));
}

uint64_t sub_25280EEEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for Environment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25280F020);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Environment()
{
  return &type metadata for Environment;
}

unint64_t sub_25280F05C()
{
  unint64_t result = qword_269C1E680;
  if (!qword_269C1E680)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C1E688);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E680);
  }
  return result;
}

unint64_t sub_25280F0BC()
{
  unint64_t result = qword_269C1E690;
  if (!qword_269C1E690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E690);
  }
  return result;
}

uint64_t sub_25280F110()
{
  unint64_t v0 = sub_252831918();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_25280F15C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_252830B28();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_252830BD8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  os_log_type_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252830BA8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_252781C54((uint64_t)v12, &qword_26B22BD58);
LABEL_11:
    uint64_t v29 = a1;
    uint64_t v30 = a2;
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F06E50], v6);
    sub_25279033C();
    sub_252830BC8();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v28 = a3;
  os_log_type_t v27 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v27(v16, v12, v13);
  sub_252830B98();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  if (!v18 || (sub_252830B58(), uint64_t v20 = v19, swift_bridgeObjectRelease(), !v20))
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    goto LABEL_11;
  }
  if (qword_26B22BF18 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_252831158();
  __swift_project_value_buffer(v21, (uint64_t)qword_26B22C0B8);
  uint64_t v22 = sub_252831138();
  os_log_type_t v23 = sub_252831628();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_25277D000, v22, v23, "Full URL Path noticed in path component", v24, 2u);
    MEMORY[0x2533BE070](v24, -1, -1);
  }

  return ((uint64_t (*)(uint64_t, char *, uint64_t))v27)(v28, v16, v13);
}

uint64_t sub_25280F4E4@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  LODWORD(v55) = a3;
  LODWORD(v56) = a2;
  uint64_t v57 = a1;
  uint64_t v50 = a4;
  uint64_t v6 = sub_2528308C8();
  uint64_t v54 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v45 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD48);
  uint64_t v49 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v45 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD50);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_2528309B8();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252830918();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_252781C54((uint64_t)v20, &qword_26B22BD50);
    uint64_t v25 = sub_252830BD8();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = v50;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v50, v5, v25);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v27, 0, 1, v25);
  }
  else
  {
    uint64_t v51 = v17;
    uint64_t v52 = v11;
    uint64_t v53 = v9;
    uint64_t v48 = v22;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v21);
    uint64_t v47 = v24;
    unint64_t v29 = sub_252830908();
    if (v29)
    {
      unint64_t v30 = sub_25280FC2C(v29, v57, v56 & 1, v55 & 1);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v46 = v21;
      MEMORY[0x270FA5388](0);
      LOBYTE(v45[-2]) = v56 & 1;
      v45[-1] = v5;
      uint64_t v31 = sub_25280D8A4((uint64_t)sub_252810944, (uint64_t)&v45[-4], v57);
      uint64_t v32 = *(void *)(v31 + 16);
      if (v32)
      {
        unint64_t v33 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
        v45[1] = v31;
        uint64_t v34 = v31 + v33;
        uint64_t v35 = *(void *)(v49 + 72);
        uint64_t v56 = v6;
        uint64_t v57 = v35;
        uint64_t v36 = v53;
        unint64_t v55 = (unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
        id v37 = (void (**)(char *, char *, uint64_t))(v54 + 32);
        unint64_t v30 = MEMORY[0x263F8EE78];
        uint64_t v38 = (uint64_t)v51;
        os_log_type_t v39 = v52;
        do
        {
          sub_252810968(v34, v38);
          sub_252803704(v38, (uint64_t)v15, &qword_26B22BD48);
          if ((*v55)(v15, 1, v6) == 1)
          {
            sub_252781C54((uint64_t)v15, &qword_26B22BD48);
          }
          else
          {
            uint64_t v40 = *v37;
            (*v37)(v39, v15, v6);
            v40(v36, v39, v6);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v30 = sub_252821BA0(0, *(void *)(v30 + 16) + 1, 1, v30);
            }
            unint64_t v42 = *(void *)(v30 + 16);
            unint64_t v41 = *(void *)(v30 + 24);
            if (v42 >= v41 >> 1) {
              unint64_t v30 = sub_252821BA0(v41 > 1, v42 + 1, 1, v30);
            }
            *(void *)(v30 + 16) = v42 + 1;
            uint64_t v36 = v53;
            v40((char *)(v30+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v42), v53, v6);
            uint64_t v38 = (uint64_t)v51;
            os_log_type_t v39 = v52;
          }
          v34 += v57;
          --v32;
        }
        while (v32);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t v30 = MEMORY[0x263F8EE78];
      }
      uint64_t v21 = v46;
    }
    uint64_t v43 = v47;
    if (!*(void *)(v30 + 16)) {
      swift_bridgeObjectRelease();
    }
    sub_2528308D8();
    sub_252830978();
    if (v44) {
      sub_2528308F8();
    }
    sub_252830928();
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v43, v21);
  }
}

void sub_25280FAA8()
{
  uint64_t v0 = sub_252830898();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v2, qword_26B22C040);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B22C040);
  sub_252830868();
  uint64_t v5 = sub_252830878();
  unint64_t v7 = v6;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  uint64_t v8 = (void *)sub_252830C48();
  id v9 = objc_msgSend(self, sel_characterSetWithBitmapRepresentation_, v8);
  sub_252782E20(v5, v7);

  uint64_t v10 = (void *)sub_252831298();
  objc_msgSend(v9, sel_removeCharactersInString_, v10);

  sub_252830888();
}

uint64_t sub_25280FC2C(unint64_t a1, uint64_t a2, int a3, int a4)
{
  int v87 = a4;
  int v90 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E698);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v86 = (char *)v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E6A0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v93 = (char *)v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E6A8);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  id v103 = (void *)((char *)v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (void *)((char *)v82 - v14);
  uint64_t v104 = sub_2528308C8();
  uint64_t v16 = *(void *)(v104 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v104);
  uint64_t v84 = (char *)v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  unint64_t v83 = (char *)v82 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v85 = (uint64_t)v82 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)v82 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)v82 - v26;
  unint64_t v107 = a1;
  uint64_t v89 = *(void *)(a2 + 16);
  if (!v89)
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  uint64_t v88 = a2 + 32;
  os_log_type_t v95 = (void (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v96 = (void (**)(char *, char *, uint64_t))(v16 + 32);
  uint64_t v99 = (unsigned int (**)(int64_t *, uint64_t, uint64_t))(v9 + 48);
  unint64_t v100 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v101 = (uint64_t (**)(char *, uint64_t))(v16 + 8);
  swift_bridgeObjectRetain();
  v82[1] = a2;
  swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  unint64_t v98 = v15;
  uint64_t v94 = v16;
  uint64_t v91 = v27;
  while (2)
  {
    unint64_t v29 = (uint64_t *)(v88 + 32 * v28);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = v29[3];
    if (v90)
    {
      uint64_t v102 = v29[2];
      uint64_t v105 = v31;
      uint64_t v106 = v30;
      uint64_t v33 = qword_26B22BED0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v33 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_252830898();
      uint64_t v35 = __swift_project_value_buffer(v34, (uint64_t)qword_26B22C040);
      sub_25279033C();
      uint64_t v97 = v35;
      uint64_t v31 = sub_2528316E8();
      uint64_t v37 = v36;
      swift_bridgeObjectRelease();
      if (!v37)
      {
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
      uint64_t v92 = v28;
      uint64_t v105 = v102;
      uint64_t v106 = v32;
      sub_2528316E8();
      swift_bridgeObjectRelease();
      uint64_t v38 = v37;
    }
    else
    {
      uint64_t v92 = v28;
      uint64_t v39 = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v38 = v39;
    }
    uint64_t v102 = v38;
    sub_2528308A8();
    swift_bridgeObjectRelease();
    unint64_t v40 = *(void *)(v107 + 16);
    uint64_t v97 = v107;
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v42 = 0;
    uint64_t v43 = v96;
    if (!v40)
    {
LABEL_12:
      uint64_t v44 = 1;
      unint64_t v42 = v40;
      goto LABEL_15;
    }
    while (1)
    {
      if (v42 >= *(void *)(v97 + 16))
      {
        __break(1u);
        goto LABEL_44;
      }
      uint64_t v45 = v25;
      uint64_t v46 = v94;
      uint64_t v47 = &v93[*(int *)(v8 + 48)];
      uint64_t v48 = v104;
      (*(void (**)(char *, unint64_t, uint64_t))(v94 + 16))(v47, v97+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v42, v104);
      uint64_t v49 = (char *)v103 + *(int *)(v8 + 48);
      *id v103 = v42;
      uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
      uint64_t v25 = v45;
      uint64_t v43 = v96;
      v50(v49, v47, v48);
      uint64_t v44 = 0;
      ++v42;
LABEL_15:
      uint64_t v51 = (uint64_t)v103;
      (*v100)(v103, v44, 1, v8);
      sub_252803704(v51, (uint64_t)v15, &qword_269C1E6A8);
      if ((*v99)(v15, 1, v8) == 1) {
        break;
      }
      int64_t v52 = *v15;
      uint64_t v53 = *v43;
      (*v43)(v25, (char *)v15 + *(int *)(v8 + 48), v104);
      if (sub_2528308B8() == v31 && v54 == v102)
      {
        swift_bridgeObjectRelease();
        uint64_t v60 = v94;
        unint64_t v61 = v91;
LABEL_25:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v62 = v85;
        sub_2528107E8(v52, v85);
        int64_t v63 = *v101;
        uint64_t v64 = v62;
        uint64_t v65 = v104;
        (*v101)((char *)v64, v104);
        uint64_t result = v63(v25, v65);
        unint64_t v66 = v107;
        int64_t v67 = *(void *)(v107 + 16);
        if (v52 >= v67)
        {
          long long v70 = *v95;
          if (v87)
          {
            uint64_t v71 = (uint64_t)v86;
            uint64_t v72 = v104;
            v70(v86, v61, v104);
            sub_2528109D0(0, 0, v71);
            v63(v61, v72);
            uint64_t v28 = v92;
          }
          else
          {
            v70(v83, v61, v104);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v66 = sub_252821BA0(0, v67 + 1, 1, v66);
            }
            unint64_t v80 = *(void *)(v66 + 16);
            unint64_t v79 = *(void *)(v66 + 24);
            if (v80 >= v79 >> 1) {
              unint64_t v66 = sub_252821BA0(v79 > 1, v80 + 1, 1, v66);
            }
            *(void *)(v66 + 16) = v80 + 1;
            uint64_t v81 = v104;
            v53((char *)(v66+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(void *)(v60 + 72) * v80), v83, v104);
            unint64_t v107 = v66;
            v63(v61, v81);
            uint64_t v15 = v98;
            uint64_t v28 = v92;
          }
          goto LABEL_4;
        }
        uint64_t v28 = v92;
        if ((v52 & 0x8000000000000000) == 0)
        {
          uint64_t v68 = (uint64_t)v86;
          uint64_t v69 = v104;
          (*v95)(v86, v61, v104);
          sub_2528109D0(v52, v52, v68);
          v63(v61, v69);
          goto LABEL_4;
        }
LABEL_44:
        __break(1u);
        return result;
      }
      char v55 = sub_252831A58();
      swift_bridgeObjectRelease();
      if (v55)
      {
        uint64_t v15 = v98;
        uint64_t v60 = v94;
        unint64_t v61 = v91;
        goto LABEL_25;
      }
      uint64_t result = (*v101)(v25, v104);
      uint64_t v15 = v98;
      if (v42 == v40) {
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v56 = *v95;
    if (v87)
    {
      uint64_t v57 = (uint64_t)v86;
      uint64_t v58 = v91;
      uint64_t v59 = v104;
      v56(v86, v91, v104);
      sub_2528109D0(0, 0, v57);
      (*v101)(v58, v59);
      uint64_t v28 = v92;
    }
    else
    {
      long long v73 = v91;
      v56(v84, v91, v104);
      unint64_t v74 = v107;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v74 = sub_252821BA0(0, *(void *)(v74 + 16) + 1, 1, v74);
      }
      uint64_t v75 = v94;
      uint64_t v28 = v92;
      unint64_t v77 = *(void *)(v74 + 16);
      unint64_t v76 = *(void *)(v74 + 24);
      if (v77 >= v76 >> 1) {
        unint64_t v74 = sub_252821BA0(v76 > 1, v77 + 1, 1, v74);
      }
      *(void *)(v74 + 16) = v77 + 1;
      uint64_t v78 = v104;
      (*(void (**)(unint64_t, char *, uint64_t))(v75 + 32))(v74+ ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80))+ *(void *)(v75 + 72) * v77, v84, v104);
      unint64_t v107 = v74;
      (*(void (**)(char *, uint64_t))(v75 + 8))(v73, v78);
    }
LABEL_4:
    if (++v28 != v89) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  return v107;
}

uint64_t sub_2528105F4@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  if ((a1 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_7;
  }
  uint64_t v3 = qword_26B22BED0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_252830898();
  __swift_project_value_buffer(v4, (uint64_t)qword_26B22C040);
  sub_25279033C();
  sub_2528316E8();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  if (v6)
  {
    sub_2528316E8();
    swift_bridgeObjectRelease();
LABEL_7:
    sub_2528308A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_2528308C8();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a2, 0, 1, v7);
  }
  uint64_t v9 = sub_2528308C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a2, 1, 1, v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2528107E8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_2528234BC(v5);
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v7 = v6 - 1;
  uint64_t v8 = sub_2528308C8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 72);
  unint64_t v11 = v5 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)) + v10 * a1;
  uint64_t result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v9 + 32))(a2, v11, v8);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    uint64_t result = sub_252831908();
    __break(1u);
    return result;
  }
  if (v10 > 0 || v11 >= v11 + v10 + v10 * (v7 - a1))
  {
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v10)
  {
    uint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  *(void *)(v5 + 16) = v7;
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_252810944@<X0>(uint64_t a1@<X8>)
{
  return sub_2528105F4(*(unsigned char *)(v1 + 16), a1);
}

uint64_t sub_252810968(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2528109D0(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v5 = *v3;
  int64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t v5 = sub_252821BA0(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *uint64_t v3 = v5;
  }
  uint64_t v14 = sub_2528308C8();
  uint64_t v15 = *(void *)(v14 - 8);
  unint64_t v16 = v5 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  uint64_t v17 = *(void *)(v15 + 72);
  unint64_t v18 = v16 + v17 * a1;
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_25;
  }
  uint64_t v19 = *(void *)(v5 + 16);
  uint64_t v20 = v19 - a2;
  if (__OFSUB__(v19, a2)) {
    goto LABEL_33;
  }
  if (v20 < 0)
  {
LABEL_35:
    uint64_t result = sub_252831908();
    __break(1u);
    return result;
  }
  unint64_t v21 = v18 + v17;
  unint64_t v22 = v16 + v17 * a2;
  if (v18 + v17 < v22 || v21 >= v22 + v20 * v17)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v21 != v22)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  uint64_t v24 = *(void *)(v5 + 16);
  BOOL v25 = __OFADD__(v24, v9);
  uint64_t v26 = v24 + v9;
  if (v25)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(void *)(v5 + 16) = v26;
LABEL_25:
  if (v17 >= 1) {
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 16))(v18, a3, v14);
  }
  return sub_252781C54(a3, &qword_269C1E698);
}

uint64_t sub_252810BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[27] = a8;
  v8[28] = v14;
  v8[25] = a6;
  v8[26] = a7;
  v8[23] = a4;
  v8[24] = a5;
  v8[21] = a2;
  v8[22] = a3;
  v8[20] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E6B8);
  v8[29] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for NetworkError();
  v8[30] = v9;
  v8[31] = *(void *)(v9 - 8);
  unsigned char v8[32] = swift_task_alloc();
  uint64_t v10 = sub_252830DB8();
  v8[33] = v10;
  v8[34] = *(void *)(v10 - 8);
  v8[35] = swift_task_alloc();
  v8[36] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v8[37] = swift_task_alloc();
  uint64_t v11 = sub_2528307F8();
  v8[38] = v11;
  v8[39] = *(void *)(v11 - 8);
  v8[40] = swift_task_alloc();
  v8[41] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_252810E28, 0, 0);
}

uint64_t sub_252810E28()
{
  if (qword_269C1CEC8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_252831158();
  v0[42] = v1;
  v0[43] = __swift_project_value_buffer(v1, (uint64_t)qword_269C2D2C8);
  uint64_t v2 = sub_252831138();
  os_log_type_t v3 = sub_252831628();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_25277D000, v2, v3, "Verifying TAF OTP....", v4, 2u);
    MEMORY[0x2533BE070](v4, -1, -1);
  }

  unint64_t v5 = (void *)swift_task_alloc();
  v0[44] = v5;
  *unint64_t v5 = v0;
  v5[1] = sub_252810FB4;
  uint64_t v6 = v0[37];
  uint64_t v7 = v0[22];
  uint64_t v8 = v0[23];
  uint64_t v9 = v0[21];
  return sub_25281B194(v6, v9, v7, v8);
}

uint64_t sub_252810FB4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2528110DC, 0, 0);
}

uint64_t sub_2528110DC()
{
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 296);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_252781C54(v3, &qword_26B22BD40);
    uint64_t v4 = sub_252831138();
    os_log_type_t v5 = sub_252831618();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_25277D000, v4, v5, "Unable to create request URL for TAF Account Verification | OTP.", v6, 2u);
      MEMORY[0x2533BE070](v6, -1, -1);
    }

    sub_2528148D0((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
    swift_allocError();
    *uint64_t v7 = 0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
  else
  {
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v10(*(void *)(v0 + 328), v3, v1);
    if (os_variant_has_internal_diagnostics())
    {
      *(unsigned char *)(v0 + 400) = 0;
      uint64_t v11 = (__CFString *)sub_252831298();
      uint64_t v12 = (__CFString *)sub_252831298();
      int AppBooleanValue = CFPreferencesGetAppBooleanValue(v11, v12, (Boolean *)(v0 + 400));

      if (*(unsigned char *)(v0 + 400))
      {
        if (AppBooleanValue)
        {
          uint64_t v14 = *(void *)(v0 + 320);
          uint64_t v15 = *(void *)(v0 + 328);
          uint64_t v16 = *(void *)(v0 + 304);
          uint64_t v17 = *(void *)(v0 + 312);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v14, v15, v16);
          sub_2528307B8();
          (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
          v10(v15, v14, v16);
          unint64_t v18 = sub_252831138();
          os_log_type_t v19 = sub_252831628();
          if (os_log_type_enabled(v18, v19))
          {
            uint64_t v20 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v20 = 0;
            _os_log_impl(&dword_25277D000, v18, v19, "Adding additional OTP override header in verify request.", v20, 2u);
            MEMORY[0x2533BE070](v20, -1, -1);
          }
        }
      }
    }
    sub_252804F18(0xD000000000000018, 0x800000025283D380, (uint8_t *)0xD00000000000002BLL, 0x800000025283D3A0);
    sub_252830DA8();
    unint64_t v21 = (void *)swift_task_alloc();
    *(void *)(v0 + 360) = v21;
    *unint64_t v21 = v0;
    v21[1] = sub_252811558;
    uint64_t v22 = *(void *)(v0 + 328);
    return MEMORY[0x270EF1EB0](v22, 0);
  }
}

uint64_t sub_252811558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v5 = (void *)*v4;
  v5[46] = a1;
  v5[47] = a2;
  v5[48] = a3;
  v5[49] = v3;
  swift_task_dealloc();
  if (v3) {
    uint64_t v6 = sub_2528125E0;
  }
  else {
    uint64_t v6 = sub_25281169C;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_25281169C()
{
  uint64_t v106 = v0;
  v105[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t v1 = *(void *)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 264);
  uint64_t v4 = *(void *)(v0 + 272);
  uint64_t v5 = *(void *)(v0 + 224);
  uint64_t v6 = *(void *)(v0 + 208);
  uint64_t v102 = *(void *)(v0 + 200);
  uint64_t v103 = *(void *)(v0 + 216);
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_252806A64();
  uint64_t v9 = v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  swift_bridgeObjectRetain();
  sub_25282C970(v102, v6, v7, v9, v103, v5, 2, v2, v0 + 16);
  sub_25282CB08();
  sub_252812B50(v0 + 16);
  self;
  uint64_t v10 = swift_dynamicCastObjCClass();
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    uint64_t v12 = *(void *)(v0 + 328);
    uint64_t v13 = *(NSObject **)(v0 + 288);
    uint64_t v15 = *(void *)(v0 + 200);
    uint64_t v14 = *(void *)(v0 + 208);
    uint64_t v16 = *(void **)(v0 + 192);
    id v17 = *(id *)(v0 + 384);
    sub_2527EAA54(v12, (uint64_t)objc_msgSend(v11, sel_statusCode), v15, v14, v13, v16);
    sub_252805814(0xD000000000000018, (char *)0x800000025283D3D0, (unint64_t)objc_msgSend(v11, sel_statusCode), qword_2702C4AE0);
    id v18 = objc_msgSend(v11, sel_statusCode);
    os_log_type_t v19 = (void *)v0;
    switch((unint64_t)v18)
    {
      case 0x190uLL:
        uint64_t v20 = sub_252831138();
        os_log_type_t v21 = sub_252831618();
        if (os_log_type_enabled(v20, v21))
        {
          uint64_t v22 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v22 = 0;
          _os_log_impl(&dword_25277D000, v20, v21, "BAD REQUEST | Check request", v22, 2u);
          MEMORY[0x2533BE070](v22, -1, -1);
        }
        unint64_t v23 = v19[47];
        uint64_t v24 = (void *)v19[48];
        uint64_t v25 = v19[46];

        sub_252812AFC();
        uint64_t v26 = (void *)swift_allocError();
        *uint64_t v27 = 0;
        goto LABEL_37;
      case 0x191uLL:
        uint64_t v58 = sub_252831138();
        os_log_type_t v59 = sub_252831618();
        if (os_log_type_enabled(v58, v59))
        {
          uint64_t v60 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v60 = 0;
          _os_log_impl(&dword_25277D000, v58, v59, "Unauthorized | Incorrect passcode.", v60, 2u);
          MEMORY[0x2533BE070](v60, -1, -1);
        }
        unint64_t v23 = v19[47];
        uint64_t v24 = (void *)v19[48];
        uint64_t v25 = v19[46];

        sub_252812AFC();
        uint64_t v26 = (void *)swift_allocError();
        uint64_t v62 = 1;
        goto LABEL_36;
      case 0x192uLL:
      case 0x193uLL:
      case 0x194uLL:
      case 0x195uLL:
      case 0x196uLL:
      case 0x197uLL:
      case 0x198uLL:
      case 0x199uLL:
      case 0x19BuLL:
      case 0x19CuLL:
      case 0x19DuLL:
      case 0x19EuLL:
      case 0x19FuLL:
      case 0x1A0uLL:
      case 0x1A1uLL:
      case 0x1A2uLL:
      case 0x1A3uLL:
      case 0x1A4uLL:
      case 0x1A5uLL:
      case 0x1A6uLL:
      case 0x1A7uLL:
      case 0x1A8uLL:
      case 0x1A9uLL:
      case 0x1AAuLL:
      case 0x1ABuLL:
      case 0x1ACuLL:
        goto LABEL_22;
      case 0x19AuLL:
        int64_t v63 = sub_252831138();
        os_log_type_t v64 = sub_252831618();
        if (os_log_type_enabled(v63, v64))
        {
          uint64_t v65 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v65 = 0;
          _os_log_impl(&dword_25277D000, v63, v64, "Passcode | Expired", v65, 2u);
          MEMORY[0x2533BE070](v65, -1, -1);
        }
        unint64_t v23 = v19[47];
        uint64_t v24 = (void *)v19[48];
        uint64_t v25 = v19[46];

        sub_252812AFC();
        uint64_t v26 = (void *)swift_allocError();
        uint64_t v62 = 7;
        goto LABEL_36;
      case 0x1ADuLL:
        unint64_t v66 = sub_252831138();
        os_log_type_t v67 = sub_252831618();
        if (os_log_type_enabled(v66, v67))
        {
          uint64_t v68 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v68 = 0;
          _os_log_impl(&dword_25277D000, v66, v67, "Passcode | Too Many requests", v68, 2u);
          MEMORY[0x2533BE070](v68, -1, -1);
        }
        unint64_t v23 = v19[47];
        uint64_t v24 = (void *)v19[48];
        uint64_t v25 = v19[46];

        sub_252812AFC();
        uint64_t v26 = (void *)swift_allocError();
        uint64_t v62 = 5;
        goto LABEL_36;
      default:
        if (v18 == (id)500)
        {
          uint64_t v69 = sub_252831138();
          os_log_type_t v70 = sub_252831618();
          if (os_log_type_enabled(v69, v70))
          {
            uint64_t v71 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v71 = 0;
            _os_log_impl(&dword_25277D000, v69, v70, "Internal Server Error", v71, 2u);
            MEMORY[0x2533BE070](v71, -1, -1);
          }
          unint64_t v23 = v19[47];
          uint64_t v24 = (void *)v19[48];
          uint64_t v25 = v19[46];

          sub_252812AFC();
          uint64_t v26 = (void *)swift_allocError();
          uint64_t v62 = 6;
LABEL_36:
          *unint64_t v61 = v62;
LABEL_37:
          swift_willThrow();
          sub_252782E20(v25, v23);

          goto LABEL_38;
        }
        if (v18 == (id)201)
        {
          if (qword_269C1CEC0 != -1) {
            swift_once();
          }
          __swift_project_value_buffer(*(void *)(v0 + 336), (uint64_t)qword_269C2D2B0);
          uint64_t v34 = sub_252831138();
          os_log_type_t v35 = sub_252831628();
          if (os_log_type_enabled(v34, v35))
          {
            uint64_t v36 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v36 = 0;
            _os_log_impl(&dword_25277D000, v34, v35, "TAF Account Verification(OTP) succeeded!", v36, 2u);
            MEMORY[0x2533BE070](v36, -1, -1);
          }
          uint64_t v37 = (void *)v19[49];

          sub_252830828();
          swift_allocObject();
          sub_252830818();
          sub_252812B9C();
          sub_252830808();
          uint64_t v38 = v37;
          swift_release();
          if (v37) {
            goto LABEL_18;
          }
          uint64_t v84 = v19[11];
          uint64_t v85 = v19[13];
          uint64_t v104 = v19[14];
          if (v84)
          {
            uint64_t v101 = v19[10];
            swift_bridgeObjectRelease();
            uint64_t v85 = v84;
          }
          else
          {
            if (!v85)
            {
              if (!v19[14])
              {
                uint64_t v97 = sub_252831138();
                os_log_type_t v98 = sub_252831618();
                if (os_log_type_enabled(v97, v98))
                {
                  uint64_t v99 = (uint8_t *)swift_slowAlloc();
                  uint64_t v100 = swift_slowAlloc();
                  v105[0] = v100;
                  *(_DWORD *)uint64_t v99 = 136315138;
                  v19[19] = sub_25278F894(0xD000000000000035, 0x800000025283D3F0, v105);
                  sub_252831698();
                  _os_log_impl(&dword_25277D000, v97, v98, "TAF Account Verification(OTP) failed | %s", v99, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x2533BE070](v100, -1, -1);
                  MEMORY[0x2533BE070](v99, -1, -1);
                }

                sub_2528148D0((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
                uint64_t v38 = (void *)swift_allocError();
                swift_storeEnumTagMultiPayload();
                swift_willThrow();
LABEL_18:
                uint64_t v39 = sub_252831138();
                os_log_type_t v40 = sub_252831618();
                if (os_log_type_enabled(v39, v40))
                {
                  unint64_t v41 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)unint64_t v41 = 0;
                  _os_log_impl(&dword_25277D000, v39, v40, "TAF Account Verification(OTP) failed | Decoding Error", v41, 2u);
                  MEMORY[0x2533BE070](v41, -1, -1);
                }
                uint64_t v42 = v19[31];

                v19[18] = v38;
                id v43 = v38;
                __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4C0);
                int v44 = swift_dynamicCast();
                uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(v42 + 56);
                unint64_t v47 = v19[47];
                uint64_t v46 = (void *)v19[48];
                uint64_t v48 = v19[46];
                if (v44)
                {
                  uint64_t v49 = v19[32];
                  uint64_t v50 = v19[29];
                  v45(v50, 0, 1, v19[30]);
                  sub_252812BF0(v50, v49);
                  sub_2528148D0((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
                  uint64_t v26 = (void *)swift_allocError();
                  sub_252812C54(v49, v51);
                  swift_willThrow();
                  sub_252782E20(v48, v47);

                  sub_2527D325C(v49);
                }
                else
                {
                  uint64_t v86 = v19[29];
                  v45(v86, 1, 1, v19[30]);
                  sub_252781C54(v86, &qword_269C1E6B8);
                  sub_2528148D0((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
                  uint64_t v26 = (void *)swift_allocError();
                  *int v87 = 1;
                  swift_storeEnumTagMultiPayload();
                  swift_willThrow();
                  sub_252782E20(v48, v47);
                }
                break;
              }
              uint64_t v85 = 0;
            }
            uint64_t v101 = v19[12];
          }
          uint64_t v88 = v19;
          uint64_t v89 = (void *)v19[48];
          uint64_t v90 = v88[41];
          uint64_t v91 = v88[38];
          uint64_t v92 = v88[39];
          uint64_t v93 = v88[36];
          uint64_t v94 = v88[34];
          uint64_t v95 = v88[33];
          uint64_t v96 = (void *)v88[20];
          sub_252782E20(v88[46], v88[47]);

          (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v93, v95);
          (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v90, v91);
          *uint64_t v96 = v104;
          v96[1] = v101;
          v96[2] = v85;
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          unint64_t v79 = (uint64_t (*)(void))v88[1];
          goto LABEL_43;
        }
LABEL_22:
        id v52 = *(id *)(v0 + 384);
        uint64_t v53 = sub_252831138();
        os_log_type_t v54 = sub_252831618();
        if (os_log_type_enabled(v53, v54))
        {
          char v55 = *(void **)(v0 + 384);
          uint64_t v56 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v56 = 134217984;
          *(void *)(v0 + 128) = objc_msgSend(v11, sel_statusCode);
          sub_252831698();

          _os_log_impl(&dword_25277D000, v53, v54, "Request failed : Status Code %ld", v56, 0xCu);
          MEMORY[0x2533BE070](v56, -1, -1);
          uint64_t v57 = *(NSObject **)(v0 + 384);
        }
        else
        {

          uint64_t v57 = *(NSObject **)(v0 + 384);
          uint64_t v53 = v57;
        }
        uint64_t v81 = *(void *)(v0 + 368);
        unint64_t v82 = *(void *)(v0 + 376);

        sub_2528148D0((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
        uint64_t v26 = (void *)swift_allocError();
        *unint64_t v83 = objc_msgSend(v11, sel_statusCode);
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_252782E20(v81, v82);

        break;
    }
  }
  else
  {
    os_log_type_t v19 = (void *)v0;
    if (qword_269C1CEC0 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(*(void *)(v0 + 336), (uint64_t)qword_269C2D2B0);
    uint64_t v28 = sub_252831138();
    os_log_type_t v29 = sub_252831618();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl(&dword_25277D000, v28, v29, "Unable to process TAF Account Verification(OTP) response from Utility.", v30, 2u);
      MEMORY[0x2533BE070](v30, -1, -1);
    }
    unint64_t v31 = v19[47];
    uint64_t v24 = (void *)v19[48];
    uint64_t v32 = v19[46];

    sub_2528148D0((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
    uint64_t v26 = (void *)swift_allocError();
    *uint64_t v33 = 2;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_252782E20(v32, v31);
LABEL_38:
  }
  (*(void (**)(void, void))(v19[34] + 8))(v19[36], v19[33]);
  v19[17] = v26;
  id v72 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4C0);
  int v73 = swift_dynamicCast();
  uint64_t v74 = v19[41];
  uint64_t v76 = v19[38];
  uint64_t v75 = v19[39];
  if (v73)
  {
    uint64_t v77 = v19[15];
    sub_252812AFC();
    swift_allocError();
    *uint64_t v78 = v77;
  }
  else
  {
    sub_252826B80(v26);
  }
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v76);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v79 = (uint64_t (*)(void))v19[1];
LABEL_43:
  return v79();
}

uint64_t sub_2528125E0()
{
  uint64_t v1 = (void *)v0[49];
  (*(void (**)(void, void))(v0[34] + 8))(v0[36], v0[33]);
  v0[17] = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4C0);
  int v3 = swift_dynamicCast();
  uint64_t v4 = v0[41];
  uint64_t v5 = v0[38];
  uint64_t v6 = v0[39];
  if (v3)
  {
    uint64_t v7 = v0[15];
    sub_252812AFC();
    swift_allocError();
    *uint64_t v8 = v7;
  }
  else
  {
    sub_252826B80(v1);
  }
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_25281278C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E6E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252814814();
  sub_252831B38();
  v11[0] = 0;
  sub_2528319A8();
  if (!v2)
  {
    v11[0] = 1;
    sub_2528319A8();
    sub_252814868(v3 + 32, (uint64_t)v12);
    sub_252814868((uint64_t)v12, (uint64_t)v11);
    v10[15] = 2;
    type metadata accessor for UtilitySubscriptionTokenSet();
    sub_2528148D0(&qword_269C1D770, (void (*)(uint64_t))type metadata accessor for UtilitySubscriptionTokenSet);
    sub_2528319D8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_252812974()
{
  unint64_t v1 = 0xD000000000000011;
  if (*v0 != 1) {
    unint64_t v1 = 0x7365526E656B6F74;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701080931;
  }
}

uint64_t sub_2528129D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2528143E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252812A00(uint64_t a1)
{
  unint64_t v2 = sub_252814814();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252812A3C(uint64_t a1)
{
  unint64_t v2 = sub_252814814();

  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_252812A78@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_252814544(a1, (uint64_t *)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_252812AC0(void *a1)
{
  return sub_25281278C(a1);
}

unint64_t sub_252812AFC()
{
  unint64_t result = qword_269C1E6C0;
  if (!qword_269C1E6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E6C0);
  }
  return result;
}

uint64_t sub_252812B50(uint64_t a1)
{
  return a1;
}

unint64_t sub_252812B9C()
{
  unint64_t result = qword_269C1E6C8;
  if (!qword_269C1E6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E6C8);
  }
  return result;
}

uint64_t sub_252812BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NetworkError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_252812C54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NetworkError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_252812CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[17] = a5;
  v6[18] = a6;
  v6[15] = a3;
  v6[16] = a4;
  v6[13] = a1;
  v6[14] = a2;
  uint64_t v7 = sub_252830DB8();
  v6[19] = v7;
  v6[20] = *(void *)(v7 - 8);
  v6[21] = swift_task_alloc();
  v6[22] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v6[23] = swift_task_alloc();
  uint64_t v8 = sub_2528307F8();
  v6[24] = v8;
  v6[25] = *(void *)(v8 - 8);
  v6[26] = swift_task_alloc();
  v6[27] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_252812E58, 0, 0);
}

uint64_t sub_252812E58()
{
  if (qword_269C1CEC8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_252831158();
  v0[28] = v1;
  v0[29] = __swift_project_value_buffer(v1, (uint64_t)qword_269C2D2C8);
  uint64_t v2 = sub_252831138();
  os_log_type_t v3 = sub_252831628();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_25277D000, v2, v3, "Initiate TAF OTP....", v4, 2u);
    MEMORY[0x2533BE070](v4, -1, -1);
  }

  long long v5 = (void *)swift_task_alloc();
  v0[30] = v5;
  *long long v5 = v0;
  v5[1] = sub_252812FE0;
  uint64_t v6 = v0[23];
  uint64_t v7 = v0[13];
  return sub_25281AC94(v6, v7);
}

uint64_t sub_252812FE0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_252813108, 0, 0);
}

uint64_t sub_252813108()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 184);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_252781C54(v3, &qword_26B22BD40);
    uint64_t v4 = sub_252831138();
    os_log_type_t v5 = sub_252831618();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_25277D000, v4, v5, "Unable to create request URL for TAF Account Verification | OTP.", v6, 2u);
      MEMORY[0x2533BE070](v6, -1, -1);
    }

    type metadata accessor for NetworkError();
    sub_2528148D0((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
    swift_allocError();
    *uint64_t v7 = 0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8(0);
  }
  else
  {
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v10(*(void *)(v0 + 216), v3, v1);
    if (os_variant_has_internal_diagnostics())
    {
      *(unsigned char *)(v0 + 272) = 0;
      uint64_t v11 = (__CFString *)sub_252831298();
      uint64_t v12 = (__CFString *)sub_252831298();
      int AppBooleanValue = CFPreferencesGetAppBooleanValue(v11, v12, (Boolean *)(v0 + 272));

      if (*(unsigned char *)(v0 + 272))
      {
        if (AppBooleanValue)
        {
          uint64_t v14 = *(void *)(v0 + 208);
          uint64_t v15 = *(void *)(v0 + 216);
          uint64_t v16 = *(void *)(v0 + 192);
          uint64_t v17 = *(void *)(v0 + 200);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v14, v15, v16);
          sub_2528307B8();
          (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
          v10(v15, v14, v16);
          id v18 = sub_252831138();
          os_log_type_t v19 = sub_252831628();
          if (os_log_type_enabled(v18, v19))
          {
            uint64_t v20 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v20 = 0;
            _os_log_impl(&dword_25277D000, v18, v19, "Adding additional OTP override header in initiate request.", v20, 2u);
            MEMORY[0x2533BE070](v20, -1, -1);
          }
        }
      }
    }
    sub_252804F18(0xD000000000000018, 0x800000025283D450, (uint8_t *)0xD000000000000027, 0x800000025283D470);
    sub_252830DA8();
    os_log_type_t v21 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v21;
    *os_log_type_t v21 = v0;
    v21[1] = sub_252813578;
    uint64_t v22 = *(void *)(v0 + 216);
    return MEMORY[0x270EF1EB0](v22, 0);
  }
}

uint64_t sub_252813578(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v4;
  *(void *)(v7 + 256) = a3;
  *(void *)(v7 + 264) = v3;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v8 = sub_25281400C;
  }
  else
  {
    sub_252782E20(a1, a2);
    uint64_t v8 = sub_2528136D4;
  }
  return MEMORY[0x270FA2498](v8, 0, 0);
}

uint64_t sub_2528136D4()
{
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v69 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 128);
  uint64_t v68 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_252806A64();
  uint64_t v9 = v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  swift_bridgeObjectRetain();
  sub_25282C970(v68, v6, v7, v9, v69, v5, 1, v2, v0 + 16);
  sub_25282CB08();
  sub_252812B50(v0 + 16);
  self;
  uint64_t v10 = swift_dynamicCastObjCClass();
  if (!v10)
  {
    os_log_type_t v19 = (void *)v0;
    if (qword_269C1CEC0 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(*(void *)(v0 + 224), (uint64_t)qword_269C2D2B0);
    uint64_t v27 = sub_252831138();
    os_log_type_t v28 = sub_252831618();
    if (os_log_type_enabled(v27, v28))
    {
      os_log_type_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v29 = 0;
      _os_log_impl(&dword_25277D000, v27, v28, "Unable to process TAF Account Verification(OTP) response from Utility.", v29, 2u);
      MEMORY[0x2533BE070](v29, -1, -1);
    }
    uint64_t v23 = v19[32];

    type metadata accessor for NetworkError();
    sub_2528148D0((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
    uint64_t v25 = (void *)swift_allocError();
    *uint64_t v30 = 2;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_36;
  }
  uint64_t v11 = (void *)v10;
  uint64_t v12 = *(void *)(v0 + 216);
  uint64_t v13 = *(NSObject **)(v0 + 176);
  uint64_t v15 = *(void *)(v0 + 120);
  uint64_t v14 = *(void *)(v0 + 128);
  uint64_t v16 = *(void **)(v0 + 112);
  id v17 = *(id *)(v0 + 256);
  sub_2527EAA54(v12, (uint64_t)objc_msgSend(v11, sel_statusCode), v15, v14, v13, v16);
  uint64_t v18 = (uint64_t)objc_msgSend(v11, sel_statusCode);
  os_log_type_t v19 = (void *)v0;
  if (v18 > 403)
  {
    switch(v18)
    {
      case 404:
        os_log_type_t v35 = sub_252831138();
        os_log_type_t v36 = sub_252831618();
        if (os_log_type_enabled(v35, v36))
        {
          uint64_t v37 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v37 = 0;
          _os_log_impl(&dword_25277D000, v35, v36, "Invalid Factor | OTP Expired session.", v37, 2u);
          MEMORY[0x2533BE070](v37, -1, -1);
        }
        uint64_t v23 = v19[32];

        sub_252812AFC();
        uint64_t v25 = (void *)swift_allocError();
        uint64_t v26 = 8;
        goto LABEL_25;
      case 429:
        uint64_t v38 = sub_252831138();
        os_log_type_t v39 = sub_252831618();
        if (os_log_type_enabled(v38, v39))
        {
          os_log_type_t v40 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v40 = 0;
          _os_log_impl(&dword_25277D000, v38, v39, "Too Many Request | User requested too many OTP verification for the same account.", v40, 2u);
          MEMORY[0x2533BE070](v40, -1, -1);
        }
        uint64_t v23 = v19[32];

        sub_252812AFC();
        uint64_t v25 = (void *)swift_allocError();
        uint64_t v26 = 5;
        goto LABEL_25;
      case 500:
        uint64_t v20 = sub_252831138();
        os_log_type_t v21 = sub_252831618();
        if (os_log_type_enabled(v20, v21))
        {
          uint64_t v22 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v22 = 0;
          _os_log_impl(&dword_25277D000, v20, v21, "Internal Server Error", v22, 2u);
          MEMORY[0x2533BE070](v22, -1, -1);
        }
        uint64_t v23 = v19[32];

        sub_252812AFC();
        uint64_t v25 = (void *)swift_allocError();
        uint64_t v26 = 6;
LABEL_25:
        *uint64_t v24 = v26;
LABEL_35:
        swift_willThrow();

LABEL_36:
        (*(void (**)(void, void))(v19[20] + 8))(v19[22], v19[19]);
        v19[10] = v25;
        id v60 = v25;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4C0);
        int v61 = swift_dynamicCast();
        uint64_t v62 = v19[27];
        uint64_t v64 = v19[24];
        uint64_t v63 = v19[25];
        if (v61)
        {
          uint64_t v65 = v19[11];
          sub_252812AFC();
          swift_allocError();
          void *v66 = v65;
        }
        else
        {
          sub_252826B80(v25);
        }
        swift_willThrow();

        (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v62, v64);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        id v52 = (uint64_t (*)(uint64_t))v19[1];
        uint64_t v53 = 0;
        goto LABEL_40;
    }
LABEL_31:
    id v54 = *(id *)(v0 + 256);
    char v55 = sub_252831138();
    os_log_type_t v56 = sub_252831618();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = *(void **)(v0 + 256);
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v58 = 134217984;
      *(void *)(v0 + 96) = objc_msgSend(v11, sel_statusCode);
      sub_252831698();

      _os_log_impl(&dword_25277D000, v55, v56, "Request failed : Status Code %ld", v58, 0xCu);
      MEMORY[0x2533BE070](v58, -1, -1);
      uint64_t v23 = *(NSObject **)(v0 + 256);
    }
    else
    {

      uint64_t v23 = *(NSObject **)(v0 + 256);
      char v55 = v23;
    }

    type metadata accessor for NetworkError();
    sub_2528148D0((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
    uint64_t v25 = (void *)swift_allocError();
    *os_log_type_t v59 = objc_msgSend(v11, sel_statusCode);
    swift_storeEnumTagMultiPayload();
    goto LABEL_35;
  }
  if (v18 != 204)
  {
    if (v18 == 400)
    {
      unint64_t v31 = sub_252831138();
      os_log_type_t v32 = sub_252831618();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v33 = 0;
        _os_log_impl(&dword_25277D000, v31, v32, "BAD REQUEST | Check request", v33, 2u);
        MEMORY[0x2533BE070](v33, -1, -1);
      }
      uint64_t v23 = v19[32];

      sub_252812AFC();
      uint64_t v25 = (void *)swift_allocError();
      *uint64_t v34 = 0;
      goto LABEL_35;
    }
    goto LABEL_31;
  }
  if (qword_269C1CEC0 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(*(void *)(v0 + 224), (uint64_t)qword_269C2D2B0);
  unint64_t v41 = sub_252831138();
  os_log_type_t v42 = sub_252831628();
  if (os_log_type_enabled(v41, v42))
  {
    id v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v43 = 0;
    _os_log_impl(&dword_25277D000, v41, v42, "TAF Account Verification(OTP) Initiated successfully!", v43, 2u);
    MEMORY[0x2533BE070](v43, -1, -1);
  }
  int v44 = (void *)v19[32];
  uint64_t v45 = v19[27];
  uint64_t v46 = v19;
  uint64_t v47 = v19[25];
  uint64_t v48 = v46[24];
  uint64_t v49 = v46[22];
  uint64_t v51 = v46[19];
  uint64_t v50 = v46[20];

  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v51);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v48);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v52 = (uint64_t (*)(uint64_t))v46[1];
  uint64_t v53 = 1;
LABEL_40:
  return v52(v53);
}

uint64_t sub_25281400C()
{
  uint64_t v1 = (void *)v0[33];
  (*(void (**)(void, void))(v0[20] + 8))(v0[22], v0[19]);
  v0[10] = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4C0);
  int v3 = swift_dynamicCast();
  uint64_t v4 = v0[27];
  uint64_t v5 = v0[24];
  uint64_t v6 = v0[25];
  if (v3)
  {
    uint64_t v7 = v0[11];
    sub_252812AFC();
    swift_allocError();
    *uint64_t v8 = v7;
  }
  else
  {
    sub_252826B80(v1);
  }
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9(0);
}

void destroy for InternalAccountVerificationResponse(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for InternalAccountVerificationResponse(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

void *assignWithCopy for InternalAccountVerificationResponse(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[4];
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  id v6 = v5;

  return a1;
}

uint64_t assignWithTake for InternalAccountVerificationResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for InternalAccountVerificationResponse(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for InternalAccountVerificationResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalAccountVerificationResponse()
{
  return &type metadata for InternalAccountVerificationResponse;
}

uint64_t sub_2528143E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701080931 && a2 == 0xE400000000000000;
  if (v2 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025283A840 || (sub_252831A58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365526E656B6F74 && a2 == 0xED000065736E6F70)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_252831A58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_252814544@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E6D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252814814();
  sub_252831B28();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v25 = 0;
  uint64_t v9 = sub_252831928();
  uint64_t v11 = v10;
  uint64_t v21 = v9;
  char v24 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_252831928();
  uint64_t v14 = v13;
  uint64_t v19 = v12;
  type metadata accessor for UtilitySubscriptionTokenSet();
  char v23 = 2;
  sub_2528148D0(qword_269C1D780, (void (*)(uint64_t))type metadata accessor for UtilitySubscriptionTokenSet);
  uint64_t v20 = v14;
  swift_bridgeObjectRetain();
  sub_252831958();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = (uint64_t)v22;
  id v16 = v22;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

  uint64_t v17 = v20;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v21;
  a2[1] = v11;
  a2[2] = v19;
  a2[3] = v17;
  a2[4] = v15;
  return result;
}

unint64_t sub_252814814()
{
  unint64_t result = qword_269C1E6E0;
  if (!qword_269C1E6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E6E0);
  }
  return result;
}

uint64_t sub_252814868(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E6F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2528148D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for InternalAccountVerificationResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2528149E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalAccountVerificationResponse.CodingKeys()
{
  return &type metadata for InternalAccountVerificationResponse.CodingKeys;
}

unint64_t sub_252814A20()
{
  unint64_t result = qword_269C1E6F8;
  if (!qword_269C1E6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E6F8);
  }
  return result;
}

unint64_t sub_252814A78()
{
  unint64_t result = qword_269C1E700;
  if (!qword_269C1E700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E700);
  }
  return result;
}

unint64_t sub_252814AD0()
{
  unint64_t result = qword_269C1E708;
  if (!qword_269C1E708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E708);
  }
  return result;
}

uint64_t sub_252814B24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2528307F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_25280EB98())
  {
    if (qword_26B22BEE8 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_252831158();
    __swift_project_value_buffer(v42, (uint64_t)qword_26B22C070);
    uint64_t v8 = sub_252831138();
    os_log_type_t v9 = sub_252831628();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_25277D000, v8, v9, "Adding HMAC Auth header to request", v10, 2u);
      MEMORY[0x2533BE070](v10, -1, -1);
    }

    uint64_t v11 = sub_25280DF84();
    uint64_t v43 = v2;
    uint64_t v44 = a1;
    switch((char)v11)
    {
      case 1:
        if (qword_269C1CE78 != -1) {
          goto LABEL_42;
        }
        goto LABEL_16;
      case 2:
        if (qword_269C1CE78 != -1) {
LABEL_42:
        }
          uint64_t v11 = swift_once();
LABEL_16:
        MEMORY[0x270FA5388](v11);
        *(&v42 - 2) = v23;
        uint64_t v13 = &unk_2702C3EE0;
        uint64_t v14 = sub_252819124;
        break;
      case 3:
        if (qword_269C1CE78 != -1) {
          uint64_t v11 = swift_once();
        }
        MEMORY[0x270FA5388](v11);
        *(&v42 - 2) = v24;
        uint64_t v13 = &unk_2702C3EE0;
        uint64_t v14 = sub_252818BB0;
        break;
      default:
        if (qword_269C1CE78 != -1) {
          uint64_t v11 = swift_once();
        }
        MEMORY[0x270FA5388](v11);
        *(&v42 - 2) = v12;
        uint64_t v13 = &unk_2702C3EA0;
        uint64_t v14 = sub_252819124;
        break;
    }
    sub_252818BB8((uint64_t)v13, (uint64_t (*)(uint64_t, void))v14);
    unint64_t v45 = sub_252831348();
    unint64_t v26 = v25;
    swift_bridgeObjectRelease();
    uint64_t v27 = (__CFString *)sub_252831298();
    os_log_type_t v28 = (__CFString *)sub_252831298();
    CFPropertyListRef v29 = CFPreferencesCopyAppValue(v27, v28);

    if (v29)
    {
      uint64_t v48 = (uint64_t)v29;
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        unint64_t v26 = v47;
        unint64_t v45 = v46;
        if (qword_26B22BEE0 != -1) {
          swift_once();
        }
        __swift_project_value_buffer(v42, (uint64_t)qword_26B22C058);
        uint64_t v30 = sub_252831138();
        os_log_type_t v31 = sub_252831628();
        if (os_log_type_enabled(v30, v31))
        {
          os_log_type_t v32 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v32 = 0;
          _os_log_impl(&dword_25277D000, v30, v31, "HMAC Secret Key overridden via defaults", v32, 2u);
          MEMORY[0x2533BE070](v32, -1, -1);
        }
      }
    }
    uint64_t v33 = (__CFString *)sub_252831298();
    uint64_t v34 = (__CFString *)sub_252831298();
    CFPropertyListRef v35 = CFPreferencesCopyAppValue(v33, v34);

    if (v35 && (uint64_t v48 = (uint64_t)v35, (swift_dynamicCast() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      uint64_t v37 = v46;
      uint64_t v36 = v47;
      if (qword_26B22BEE0 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v42, (uint64_t)qword_26B22C058);
      uint64_t v38 = sub_252831138();
      os_log_type_t v39 = sub_252831628();
      if (os_log_type_enabled(v38, v39))
      {
        os_log_type_t v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v40 = 0;
        _os_log_impl(&dword_25277D000, v38, v39, "HMAC Secret Value overridden via defaults", v40, 2u);
        MEMORY[0x2533BE070](v40, -1, -1);
      }
    }
    else
    {
      uint64_t v36 = 0xE100000000000000;
      uint64_t v37 = 49;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v43, v4);
    sub_2528307B8();
    sub_252818CC0();
    sub_2528307B8();
    swift_bridgeObjectRelease();
    sub_252815A64(v45, v26, v37, v36, v44);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_26B22BEE8 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_252831158();
    __swift_project_value_buffer(v15, (uint64_t)qword_26B22C070);
    id v16 = sub_252831138();
    os_log_type_t v17 = sub_252831628();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      unint64_t v46 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      char v20 = sub_25280DF84();
      unint64_t v21 = 0xEA00000000006C61;
      uint64_t v22 = 0x6E7265746E496171;
      switch(v20)
      {
        case 1:
          unint64_t v21 = 0xE300000000000000;
          uint64_t v22 = 7759204;
          break;
        case 2:
          unint64_t v21 = 0xE400000000000000;
          uint64_t v22 = 1953654115;
          break;
        case 3:
          unint64_t v21 = 0xE400000000000000;
          uint64_t v22 = 1685025392;
          break;
        default:
          break;
      }
      uint64_t v48 = sub_25278F894(v22, v21, (uint64_t *)&v46);
      sub_252831698();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25277D000, v16, v17, "Current connected env %s does not require HMAC Auth", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533BE070](v19, -1, -1);
      MEMORY[0x2533BE070](v18, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, v2, v4);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
}

uint64_t sub_252815460()
{
  sub_2528311B8();
  sub_2528190DC(&qword_269C1E738, MEMORY[0x263F045C0]);
  uint64_t v0 = sub_2528311F8();
  uint64_t v2 = sub_25281894C(v0, v1);
  swift_bridgeObjectRelease();
  int64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_25278FE94(0, v3, 0);
    uint64_t v4 = 0;
    uint64_t v5 = MEMORY[0x263F8E7C0];
    do
    {
      char v6 = *(unsigned char *)(v2 + v4 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E0B0);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_252832B00;
      *(void *)(v7 + 56) = MEMORY[0x263F8E778];
      *(void *)(v7 + 64) = v5;
      *(unsigned char *)(v7 + 32) = v6;
      uint64_t v8 = sub_2528312D8();
      uint64_t v10 = v9;
      unint64_t v12 = *(void *)(v16 + 16);
      unint64_t v11 = *(void *)(v16 + 24);
      if (v12 >= v11 >> 1) {
        sub_25278FE94(v11 > 1, v12 + 1, 1);
      }
      ++v4;
      *(void *)(v16 + 16) = v12 + 1;
      uint64_t v13 = v16 + 16 * v12;
      *(void *)(v13 + 32) = v8;
      *(void *)(v13 + 40) = v10;
    }
    while (v3 != v4);
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF40);
  sub_2527E88E0(&qword_269C1E068, &qword_26B22BF40);
  uint64_t v14 = sub_252831278();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_252815674()
{
  v17[3] = *MEMORY[0x263EF8340];
  uint64_t v0 = sub_252831208();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2528311B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2528307C8();
  if (v9 >> 60 == 15) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = v8;
  }
  if (v9 >> 60 == 15) {
    unint64_t v11 = 0xC000000000000000;
  }
  else {
    unint64_t v11 = v9;
  }
  sub_2528190DC(&qword_269C1DED0, MEMORY[0x263F047F8]);
  sub_2528311A8();
  switch(v11 >> 62)
  {
    case 1uLL:
      uint64_t v16 = v4;
      if (v10 >> 32 < (int)v10) {
        __break(1u);
      }
      unint64_t v15 = v11 & 0x3FFFFFFFFFFFFFFFLL;
      sub_252782DC8(v10, v11);
      sub_252818ABC((int)v10, v10 >> 32);
      sub_252782E20(v10, v11);
      uint64_t v4 = v16;
      goto LABEL_15;
    case 2uLL:
      uint64_t v16 = v4;
      uint64_t v12 = *(void *)(v10 + 16);
      unint64_t v15 = *(void *)(v10 + 24);
      sub_252782DC8(v10, v11);
      swift_retain();
      swift_retain();
      sub_252818ABC(v12, v15);
      uint64_t v4 = v16;
      swift_release();
      swift_release();
      goto LABEL_14;
    case 3uLL:
      memset(v17, 0, 14);
      goto LABEL_13;
    default:
      v17[0] = v10;
      LOWORD(v17[1]) = v11;
      BYTE2(v17[1]) = BYTE2(v11);
      BYTE3(v17[1]) = BYTE3(v11);
      BYTE4(v17[1]) = BYTE4(v11);
      BYTE5(v17[1]) = BYTE5(v11);
LABEL_13:
      sub_252831188();
LABEL_14:
      sub_252782E20(v10, v11);
LABEL_15:
      sub_252831198();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      uint64_t v13 = sub_252815460();
      sub_252782E20(v10, v11);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return v13;
  }
}

uint64_t sub_252815A30()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t type metadata accessor for HMACConstants()
{
  return self;
}

uint64_t sub_252815A64@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v12 = sub_252830DB8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252830D78();
  sub_252830D58();
  double v17 = v16;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E0B0);
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = MEMORY[0x263F8D538];
  *(_OWORD *)(v18 + 16) = xmmword_252832B00;
  uint64_t v20 = MEMORY[0x263F8D5B8];
  *(void *)(v18 + 56) = v19;
  *(void *)(v18 + 64) = v20;
  *(double *)(v18 + 32) = v17 * 1000.0;
  uint64_t v21 = sub_2528312D8();
  v32[1] = a3;
  sub_252815E14(a1, a2, a3, a4, v21, v22);
  if (v23)
  {
    uint64_t v24 = sub_2528307F8();
    uint64_t v25 = *(void *)(v24 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(a5, v6, v24);
    sub_2528307B8();
    swift_bridgeObjectRelease();
    sub_2528307B8();
    swift_bridgeObjectRelease();
    sub_2528307B8();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(a5, 0, 1, v24);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_269C1CE80 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_252831158();
    __swift_project_value_buffer(v27, (uint64_t)qword_269C2D238);
    os_log_type_t v28 = sub_252831138();
    os_log_type_t v29 = sub_252831618();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl(&dword_25277D000, v28, v29, "Unable to generate HMAC Signature", v30, 2u);
      MEMORY[0x2533BE070](v30, -1, -1);
    }

    uint64_t v31 = sub_2528307F8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(a5, 1, 1, v31);
  }
}

uint64_t sub_252815E14(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v113 = a5;
  uint64_t v114 = a3;
  unint64_t v111 = a2;
  unint64_t v123 = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E710);
  uint64_t v122 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  os_log_t v120 = (char *)v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_2528311D8();
  uint64_t v119 = *(void *)(v121 - 8);
  MEMORY[0x270FA5388](v121);
  long long v118 = (char *)v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD50);
  MEMORY[0x270FA5388](v11 - 8);
  long long v115 = (char *)v106 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_252831308();
  uint64_t v116 = *(void *)(v13 - 8);
  uint64_t v117 = v13;
  MEMORY[0x270FA5388](v13);
  unint64_t v15 = (char *)v106 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_252830BD8();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)v106 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2528307A8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_252781C54((uint64_t)v18, &qword_26B22BD58);
    if (qword_269C1CE80 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_252831158();
    __swift_project_value_buffer(v23, (uint64_t)qword_269C2D238);
    uint64_t v24 = sub_252831138();
    os_log_type_t v25 = sub_252831618();
    if (os_log_type_enabled(v24, v25))
    {
      unint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v26 = 0;
      _os_log_impl(&dword_25277D000, v24, v25, "Unable to retrieve URL from request.", v26, 2u);
      MEMORY[0x2533BE070](v26, -1, -1);
    }

    return 0;
  }
  uint64_t v109 = v8;
  os_log_type_t v28 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  uint64_t v108 = v19;
  v28(v22, v18, v19);
  sub_252830768();
  uint64_t v107 = v20;
  if (v29)
  {
    sub_252831328();
    swift_bridgeObjectRelease();
  }
  unint64_t v112 = v22;
  sub_252830B68();
  v106[1] = sub_252831328();
  uint64_t v110 = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = sub_252830788();
  if (v31) {
    uint64_t v32 = v31;
  }
  else {
    uint64_t v32 = MEMORY[0x263F8EE80];
  }
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v126 = v32;
  sub_25279FF4C(v113, a6, 0xD00000000000001BLL, 0x800000025283D530, isUniquelyReferenced_nonNull_native);
  uint64_t v34 = v126;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  char v35 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v126 = v34;
  sub_25279FF4C(v114, a4, 0xD00000000000001BLL, 0x800000025283D570, v35);
  uint64_t v36 = v126;
  swift_bridgeObjectRelease();
  uint64_t v37 = sub_252816B2C(v36);
  uint64_t v39 = v38;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFE8);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_252835580;
  sub_2528312E8();
  uint64_t v41 = sub_2528312B8();
  unint64_t v43 = v42;
  uint64_t v44 = v117;
  unint64_t v45 = *(void (**)(char *, uint64_t))(v116 + 8);
  v45(v15, v117);
  uint64_t v113 = v37;
  uint64_t v114 = v39;
  if (v43 >> 60 == 15)
  {
    if (qword_269C1CE80 != -1) {
      swift_once();
    }
    uint64_t v46 = sub_252831158();
    __swift_project_value_buffer(v46, (uint64_t)qword_269C2D238);
    unint64_t v47 = sub_252831138();
    os_log_type_t v48 = sub_252831618();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v49 = 0;
      _os_log_impl(&dword_25277D000, v47, v48, "String encoding failed. Returning empty string", v49, 2u);
      MEMORY[0x2533BE070](v49, -1, -1);
    }

    uint64_t v50 = 0;
    unint64_t v51 = 0xE000000000000000;
  }
  else
  {
    uint64_t v50 = sub_252830C58();
    unint64_t v51 = v52;
    sub_252783CC0(v41, v43);
  }
  swift_bridgeObjectRelease();
  *(void *)(v40 + 32) = v50;
  *(void *)(v40 + 40) = v51;
  sub_2528312E8();
  uint64_t v53 = sub_2528312B8();
  unint64_t v55 = v54;
  v45(v15, v44);
  if (v55 >> 60 == 15)
  {
    unint64_t v56 = v123;
    if (qword_269C1CE80 != -1) {
      swift_once();
    }
    uint64_t v57 = sub_252831158();
    __swift_project_value_buffer(v57, (uint64_t)qword_269C2D238);
    uint64_t v58 = sub_252831138();
    os_log_type_t v59 = sub_252831618();
    if (os_log_type_enabled(v58, v59))
    {
      id v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v60 = 0;
      _os_log_impl(&dword_25277D000, v58, v59, "String encoding failed. Returning empty string", v60, 2u);
      MEMORY[0x2533BE070](v60, -1, -1);
    }

    uint64_t v61 = 0;
    unint64_t v62 = 0xE000000000000000;
  }
  else
  {
    uint64_t v61 = sub_252830C58();
    unint64_t v62 = v63;
    sub_252783CC0(v53, v55);
    unint64_t v56 = v123;
  }
  swift_bridgeObjectRelease();
  *(void *)(v40 + 48) = v61;
  *(void *)(v40 + 56) = v62;
  uint64_t v64 = (uint64_t)v115;
  sub_252830918();
  uint64_t v65 = sub_2528309B8();
  uint64_t v66 = *(void *)(v65 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65) == 1)
  {
    sub_252781C54(v64, &qword_26B22BD50);
    unint64_t v67 = v111;
    uint64_t v68 = v113;
  }
  else
  {
    uint64_t v69 = sub_2528308E8();
    unint64_t v71 = v70;
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v64, v65);
    if (v71)
    {
      uint64_t v72 = HIBYTE(v71) & 0xF;
      if ((v71 & 0x2000000000000000) == 0) {
        uint64_t v72 = v69 & 0xFFFFFFFFFFFFLL;
      }
      unint64_t v67 = v111;
      if (v72)
      {
        sub_2528312E8();
        uint64_t v73 = sub_2528312B8();
        unint64_t v75 = v74;
        v45(v15, v44);
        if (v75 >> 60 == 15)
        {
          if (qword_269C1CE80 != -1) {
            swift_once();
          }
          uint64_t v76 = sub_252831158();
          __swift_project_value_buffer(v76, (uint64_t)qword_269C2D238);
          uint64_t v77 = sub_252831138();
          os_log_type_t v78 = sub_252831618();
          BOOL v79 = os_log_type_enabled(v77, v78);
          uint64_t v68 = v113;
          unint64_t v56 = v123;
          if (v79)
          {
            unint64_t v80 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)unint64_t v80 = 0;
            _os_log_impl(&dword_25277D000, v77, v78, "String encoding failed. Returning empty string", v80, 2u);
            MEMORY[0x2533BE070](v80, -1, -1);
          }

          uint64_t v81 = 0;
          unint64_t v82 = 0xE000000000000000;
        }
        else
        {
          uint64_t v81 = sub_252830C58();
          unint64_t v82 = v83;
          sub_252783CC0(v73, v75);
          uint64_t v68 = v113;
          unint64_t v56 = v123;
        }
        swift_bridgeObjectRelease();
        unint64_t v85 = *(void *)(v40 + 16);
        unint64_t v84 = *(void *)(v40 + 24);
        if (v85 >= v84 >> 1) {
          uint64_t v40 = (uint64_t)sub_252821A90((void *)(v84 > 1), v85 + 1, 1, (void *)v40);
        }
        *(void *)(v40 + 16) = v85 + 1;
        uint64_t v86 = v40 + 16 * v85;
        *(void *)(v86 + 32) = v81;
        *(void *)(v86 + 40) = v82;
        goto LABEL_45;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v67 = v111;
    }
    uint64_t v68 = v113;
    unint64_t v56 = v123;
  }
LABEL_45:
  unint64_t v88 = *(void *)(v40 + 16);
  unint64_t v87 = *(void *)(v40 + 24);
  if (v88 >= v87 >> 1) {
    uint64_t v40 = (uint64_t)sub_252821A90((void *)(v87 > 1), v88 + 1, 1, (void *)v40);
  }
  *(void *)(v40 + 16) = v88 + 1;
  uint64_t v89 = v40 + 16 * v88;
  uint64_t v90 = v114;
  *(void *)(v89 + 32) = v68;
  *(void *)(v89 + 40) = v90;
  uint64_t v126 = v40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF40);
  sub_2527E88E0(&qword_269C1E068, &qword_26B22BF40);
  unint64_t v91 = sub_252831278();
  unint64_t v93 = v92;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v94 = sub_2528095F8(v91, v93);
  uint64_t v117 = v94;
  unint64_t v96 = v95;
  swift_bridgeObjectRetain();
  uint64_t v126 = sub_2528095F8(v56, v67);
  unint64_t v127 = v97;
  os_log_type_t v98 = v118;
  sub_2528311C8();
  uint64_t v126 = v94;
  unint64_t v127 = v96;
  sub_252831208();
  sub_2528190DC(&qword_269C1DED0, MEMORY[0x263F047F8]);
  sub_252818EC4();
  uint64_t v99 = v120;
  sub_2528311E8();
  uint64_t v100 = v109;
  uint64_t v128 = v109;
  uint64_t v129 = sub_2527E88E0(&qword_269C1E720, &qword_269C1E710);
  uint64_t v101 = __swift_allocate_boxed_opaque_existential_0(&v126);
  uint64_t v102 = v122;
  (*(void (**)(uint64_t *, char *, uint64_t))(v122 + 16))(v101, v99, v100);
  __swift_project_boxed_opaque_existential_1(&v126, v128);
  sub_252830AA8();
  uint64_t v103 = v124;
  unint64_t v104 = v125;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v126);
  uint64_t v27 = sub_252830C58();
  sub_252782E20(v103, v104);
  sub_252782E20(v117, v96);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v99, v100);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v98, v121);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v107 + 8))(v112, v108);
  return v27;
}

uint64_t sub_252816B2C(uint64_t a1)
{
  uint64_t v2 = sub_252831308();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = 0;
  unint64_t v39 = 0xE000000000000000;
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v36 = sub_252816FB8(v6);
  sub_252817ABC((uint64_t *)&v36);
  swift_bridgeObjectRelease();
  uint64_t v7 = v36[2];
  if (v7)
  {
    char v35 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v31 = v36;
    uint64_t v32 = v2;
    uint64_t v8 = v36 + 5;
    do
    {
      if (*(void *)(a1 + 16))
      {
        uint64_t v9 = *(v8 - 1);
        uint64_t v10 = *v8;
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_2527D9A38(v9, v10);
        if (v12)
        {
          uint64_t v13 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v11);
          uint64_t v14 = v13[1];
          uint64_t v33 = *v13;
          uint64_t v34 = v14;
          uint64_t v36 = 0;
          unint64_t v37 = 0xE000000000000000;
          swift_bridgeObjectRetain();
          sub_2528312E8();
          uint64_t v15 = sub_2528312B8();
          unint64_t v17 = v16;
          uint64_t v18 = *v35;
          (*v35)(v5, v2);
          if (v17 >> 60 == 15)
          {
            if (qword_269C1CE80 != -1) {
              swift_once();
            }
            uint64_t v19 = sub_252831158();
            __swift_project_value_buffer(v19, (uint64_t)qword_269C2D238);
            uint64_t v20 = sub_252831138();
            os_log_type_t v21 = sub_252831618();
            if (os_log_type_enabled(v20, v21))
            {
              uint64_t v22 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v22 = 0;
              _os_log_impl(&dword_25277D000, v20, v21, "String encoding failed. Returning empty string", v22, 2u);
              MEMORY[0x2533BE070](v22, -1, -1);
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_252830C58();
            sub_252783CC0(v15, v17);
            swift_bridgeObjectRelease();
          }
          sub_2528313A8();
          swift_bridgeObjectRelease();
          sub_2528313A8();
          sub_2528313A8();
          swift_bridgeObjectRelease();
          uint64_t v36 = 0;
          unint64_t v37 = 0xE000000000000000;
          sub_2528312E8();
          uint64_t v23 = sub_2528312B8();
          unint64_t v25 = v24;
          uint64_t v2 = v32;
          v18(v5, v32);
          if (v25 >> 60 == 15)
          {
            if (qword_269C1CE80 != -1) {
              swift_once();
            }
            uint64_t v26 = sub_252831158();
            __swift_project_value_buffer(v26, (uint64_t)qword_269C2D238);
            uint64_t v27 = sub_252831138();
            os_log_type_t v28 = sub_252831618();
            if (os_log_type_enabled(v27, v28))
            {
              uint64_t v29 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v29 = 0;
              _os_log_impl(&dword_25277D000, v27, v28, "String encoding failed. Returning empty string", v29, 2u);
              MEMORY[0x2533BE070](v29, -1, -1);
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_252830C58();
            sub_252783CC0(v23, v25);
            swift_bridgeObjectRelease();
          }
          sub_2528313A8();
          swift_bridgeObjectRelease();
          sub_2528313A8();
          sub_2528313A8();
        }
        swift_bridgeObjectRelease();
      }
      v8 += 2;
      --v7;
    }
    while (v7);
    swift_release();
    return v38;
  }
  else
  {
    swift_release();
    return 0;
  }
}

void *sub_252816FB8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFE8);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_25281874C((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_25280CF74();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_2528170A0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFE8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_252831908();
  __break(1u);
  return result;
}

uint64_t sub_25281720C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFF8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_252831908();
  __break(1u);
  return result;
}

uint64_t sub_25281735C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFD8);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD48) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  void v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD48) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  os_log_type_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_252831908();
  __break(1u);
  return result;
}

uint64_t sub_2528175A4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFE0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_252831908();
  __break(1u);
  return result;
}

uint64_t sub_25281772C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFF0);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E740);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_252831908();
  __break(1u);
  return result;
}

uint64_t sub_2528178B8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E730);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1DFE8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_252831908();
  __break(1u);
  return result;
}

unsigned char *sub_252817A44@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_252818F18(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_252818FDC((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_252819058((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_252817ABC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_252818B9C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_252817B28(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_252817B28(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_252831A28();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_252818214(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  uint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      int64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      uint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          unint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_2528182E4((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v97 = sub_252818738((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_252831538();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  int64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    unint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    unint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_252831A58();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    os_log_type_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_252831A58()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v11 = sub_252818580(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      int64_t v11 = sub_252818580((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    unint64_t v42 = v11 + 32;
    unint64_t v43 = &v11[16 * v41 + 32];
    *(void *)unint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            BOOL v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        unint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        unint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        unint64_t v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        unint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_2528182E4((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        int64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        unint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_252831A58() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_2528318A8();
  __break(1u);
  return result;
}

uint64_t sub_252818214(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_252831A58(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2528182E4(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      unint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_252831A58() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    unint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_252831A58() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_25281867C((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_252831908();
  __break(1u);
  return result;
}

char *sub_252818580(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E728);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_25281867C(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_252831908();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_252818738(uint64_t a1)
{
  return sub_252818580(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_25281874C(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *int64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_25281894C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = (void *)MEMORY[0x263F8EE78];
  if (v2 != a2)
  {
    if (v2 > a2)
    {
      uint64_t v5 = a2;
      if (a2 < 0)
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      if (!v2)
      {
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      uint64_t v6 = result;
      uint64_t result = swift_bridgeObjectRetain();
      size_t v4 = 0;
      uint64_t v7 = v3 + 4;
      while (1)
      {
        char v8 = *(unsigned char *)(v6 + v5 + 32);
        if (!v4)
        {
          unint64_t v9 = v3[3];
          if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_29;
          }
          int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
          if (v10 <= 1) {
            uint64_t v11 = 1;
          }
          else {
            uint64_t v11 = v10;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFF8);
          int64_t v12 = (void *)swift_allocObject();
          size_t v13 = 2 * _swift_stdlib_malloc_size(v12) - 64;
          void v12[2] = v11;
          uint64_t v12[3] = v13;
          unint64_t v14 = (unint64_t)(v12 + 4);
          size_t v15 = v3[3] >> 1;
          if (v3[2])
          {
            if (v12 != v3 || v14 >= (unint64_t)v3 + v15 + 32) {
              memmove(v12 + 4, v3 + 4, v15);
            }
            v3[2] = 0;
          }
          uint64_t v7 = (unsigned char *)(v14 + v15);
          size_t v4 = (v13 >> 1) - v15;
          uint64_t result = swift_release();
          uint64_t v3 = v12;
        }
        BOOL v17 = __OFSUB__(v4--, 1);
        if (v17) {
          break;
        }
        ++v5;
        *v7++ = v8;
        if (v2 == v5)
        {
          uint64_t result = swift_bridgeObjectRelease();
          goto LABEL_24;
        }
      }
      __break(1u);
LABEL_29:
      __break(1u);
    }
    __break(1u);
    goto LABEL_31;
  }
  size_t v4 = 0;
LABEL_24:
  unint64_t v18 = v3[3];
  if (v18 < 2) {
    return (uint64_t)v3;
  }
  unint64_t v19 = v18 >> 1;
  BOOL v17 = __OFSUB__(v19, v4);
  unint64_t v20 = v19 - v4;
  if (!v17)
  {
    v3[2] = v20;
    return (uint64_t)v3;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_252818ABC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2528309E8();
  if (!result || (uint64_t result = sub_252830A18(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_252830A08();
      sub_252831208();
      sub_2528190DC(&qword_269C1DED0, MEMORY[0x263F047F8]);
      return sub_252831188();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_252818B9C(uint64_t a1)
{
  return sub_2528170A0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_252818BB0(uint64_t a1, unsigned int a2)
{
  return sub_252824AC8(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_252818BB8(uint64_t a1, uint64_t (*a2)(uint64_t, void))
{
  uint64_t v11 = MEMORY[0x263F8EE78];
  sub_25278FEB4(0, 0, 0);
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v5 = 0;
    uint64_t v6 = a1 + 32;
    do
    {
      char v7 = a2(v5, *(unsigned __int8 *)(v6 + v5));
      unint64_t v9 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      if (v9 >= v8 >> 1) {
        sub_25278FEB4(v8 > 1, v9 + 1, 1);
      }
      ++v5;
      *(void *)(v11 + 16) = v9 + 1;
      *(unsigned char *)(v11 + v9 + 32) = v7;
    }
    while (v4 != v5);
  }
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_252818CC0()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_preferredLanguages);
  if (!v1)
  {
    sub_2528314F8();
    id v1 = (id)sub_2528314E8();
    swift_bridgeObjectRelease();
  }
  id v2 = objc_msgSend(v0, sel_minimizedLanguagesFromLanguages_, v1);

  uint64_t v3 = sub_2528314F8();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = *(void *)(v3 + 32);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    if (v4 != 1)
    {
      uint64_t v6 = -v4;
      uint64_t v7 = v3 + 56;
      uint64_t v8 = -1;
      do
      {
        swift_bridgeObjectRetain();
        sub_2528313A8();
        sub_2528313A8();
        sub_252831A38();
        sub_2528313A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_2528313A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        --v8;
        v7 += 16;
      }
      while (v6 != v8);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 28261;
  }
  return v5;
}

unint64_t sub_252818EC4()
{
  unint64_t result = qword_269C1E718;
  if (!qword_269C1E718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E718);
  }
  return result;
}

uint64_t sub_252818F18(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_252818FDC(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_252830A28();
  swift_allocObject();
  uint64_t result = sub_2528309D8();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_252830C18();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_252819058(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_252830A28();
  swift_allocObject();
  uint64_t result = sub_2528309D8();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_2528190DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_252819128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[13] = a6;
  v7[14] = a7;
  v7[11] = a4;
  v7[12] = a5;
  v7[9] = a2;
  v7[10] = a3;
  v7[8] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD40);
  v7[15] = swift_task_alloc();
  uint64_t v9 = sub_2528307F8();
  v7[16] = v9;
  v7[17] = *(void *)(v9 - 8);
  v7[18] = swift_task_alloc();
  int64_t v10 = (void *)swift_task_alloc();
  v7[19] = v10;
  void *v10 = v7;
  v10[1] = sub_252819258;
  return sub_2527BAEF8(a7);
}

uint64_t sub_252819258()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_252819354, 0, 0);
}

uint64_t sub_252819354()
{
  uint64_t KeyPath = swift_getKeyPath();
  v0[20] = KeyPath;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[21] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_252819414;
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[10];
  uint64_t v7 = v0[11];
  uint64_t v8 = v0[8];
  uint64_t v9 = v0[9];
  return sub_252781DBC(v3, v8, v9, v6, v7, v4, v5, KeyPath);
}

uint64_t sub_252819414()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_25281952C, 0, 0);
}

uint64_t sub_25281952C()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[15];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_2527A5E98(v3);
    if (qword_269C1CED0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D2E0);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable to generate request URL for TokenSet Generation", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }

    type metadata accessor for NetworkError();
    sub_25281AC4C((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
    swift_allocError();
    *uint64_t v8 = 0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[18], v3, v1);
    sub_252804F18(0xD00000000000001DLL, 0x800000025283D5E0, (uint8_t *)0xD00000000000002ELL, 0x800000025283D600);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[22] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_2528197E8;
    uint64_t v12 = v0[18];
    return MEMORY[0x270EF1EB0](v12, 0);
  }
}

uint64_t sub_2528197E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[23] = a1;
  v5[24] = a2;
  v5[25] = a3;
  v5[26] = v3;
  swift_task_dealloc();
  if (v3) {
    os_log_type_t v6 = sub_25281ABC4;
  }
  else {
    os_log_type_t v6 = sub_252819900;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_252819900()
{
  uint64_t v106 = v0;
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (!v1)
  {
    if (qword_269C1CED0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_252831158();
    __swift_project_value_buffer(v9, (uint64_t)qword_269C2D2E0);
    int64_t v10 = sub_252831138();
    os_log_type_t v11 = sub_252831618();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_25277D000, v10, v11, "Unable to process Address Verification Response.", v12, 2u);
      MEMORY[0x2533BE070](v12, -1, -1);
    }
    unint64_t v13 = *(void *)(v0 + 192);
    unint64_t v14 = *(void **)(v0 + 200);
    uint64_t v15 = *(void *)(v0 + 184);
    uint64_t v17 = *(void *)(v0 + 136);
    uint64_t v16 = *(void *)(v0 + 144);
    uint64_t v18 = *(void *)(v0 + 128);

    type metadata accessor for NetworkError();
    sub_25281AC4C((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
    swift_allocError();
    *unint64_t v19 = 2;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_252782E20(v15, v13);
LABEL_44:

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    goto LABEL_54;
  }
  uint64_t v2 = (void *)v1;
  id v3 = *(id *)(v0 + 200);
  sub_252805814(0xD000000000000016, (char *)0x800000025283D630, (unint64_t)objc_msgSend(v2, sel_statusCode), qword_2702C4B08);
  id v4 = objc_msgSend(v2, sel_statusCode);
  switch((unint64_t)v4)
  {
    case 0x190uLL:
      if (qword_269C1CED0 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_252831158();
      __swift_project_value_buffer(v5, (uint64_t)qword_269C2D2E0);
      os_log_type_t v6 = sub_252831138();
      os_log_type_t v7 = sub_252831618();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl(&dword_25277D000, v6, v7, "BAD REQUEST | Check request", v8, 2u);
        MEMORY[0x2533BE070](v8, -1, -1);
      }
      goto LABEL_43;
    case 0x191uLL:
      if (qword_269C1CED0 != -1) {
        swift_once();
      }
      uint64_t v43 = sub_252831158();
      __swift_project_value_buffer(v43, (uint64_t)qword_269C2D2E0);
      unint64_t v44 = sub_252831138();
      os_log_type_t v45 = sub_252831618();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        uint64_t v47 = swift_slowAlloc();
        v105[0] = v47;
        *(_DWORD *)uint64_t v46 = 136315138;
        *(void *)(v0 + 48) = sub_25278F894(0xD000000000000068, 0x800000025283D710, v105);
        sub_252831698();
        _os_log_impl(&dword_25277D000, v44, v45, "%s", v46, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2533BE070](v47, -1, -1);
        MEMORY[0x2533BE070](v46, -1, -1);
      }

      id v48 = *(id *)(v0 + 200);
      uint64_t v49 = sub_252831138();
      os_log_type_t v50 = sub_252831608();
      BOOL v51 = os_log_type_enabled(v49, v50);
      unint64_t v52 = *(void *)(v0 + 192);
      uint64_t v53 = *(void **)(v0 + 200);
      uint64_t v54 = *(void *)(v0 + 184);
      uint64_t v55 = *(void *)(v0 + 136);
      uint64_t v56 = *(void *)(v0 + 144);
      uint64_t v57 = *(void *)(v0 + 128);
      if (v51)
      {
        os_log_type_t type = v50;
        unint64_t v102 = *(void *)(v0 + 192);
        uint64_t v58 = (uint8_t *)swift_slowAlloc();
        uint64_t v99 = swift_slowAlloc();
        v105[0] = v99;
        *(_DWORD *)uint64_t v58 = 136315138;
        uint64_t v101 = v57;
        id v59 = objc_msgSend(v2, sel_allHeaderFields);
        sub_252831228();

        uint64_t v60 = sub_252831238();
        unint64_t v62 = v61;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 40) = sub_25278F894(v60, v62, v105);
        sub_252831698();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_25277D000, v49, type, "Headers: %s", v58, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2533BE070](v99, -1, -1);
        MEMORY[0x2533BE070](v58, -1, -1);

        type metadata accessor for NetworkError();
        sub_25281AC4C((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
        swift_allocError();
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_252782E20(v54, v102);

        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v56, v101);
      }
      else
      {

        type metadata accessor for NetworkError();
        sub_25281AC4C((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
        swift_allocError();
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_252782E20(v54, v52);

        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v56, v57);
      }
      goto LABEL_54;
    case 0x192uLL:
    case 0x193uLL:
    case 0x194uLL:
    case 0x195uLL:
    case 0x196uLL:
    case 0x197uLL:
    case 0x198uLL:
    case 0x199uLL:
    case 0x19AuLL:
    case 0x19BuLL:
    case 0x19DuLL:
    case 0x19EuLL:
    case 0x19FuLL:
    case 0x1A0uLL:
    case 0x1A1uLL:
    case 0x1A2uLL:
    case 0x1A3uLL:
    case 0x1A4uLL:
    case 0x1A5uLL:
    case 0x1A6uLL:
    case 0x1A7uLL:
    case 0x1A8uLL:
    case 0x1A9uLL:
    case 0x1AAuLL:
    case 0x1ABuLL:
    case 0x1ACuLL:
      goto LABEL_23;
    case 0x19CuLL:
      if (*(void *)(v0 + 88))
      {
        if (qword_269C1CED0 != -1) {
          swift_once();
        }
        uint64_t v63 = sub_252831158();
        __swift_project_value_buffer(v63, (uint64_t)qword_269C2D2E0);
        uint64_t v64 = sub_252831138();
        os_log_type_t v65 = sub_252831618();
        if (os_log_type_enabled(v64, v65))
        {
          uint64_t v66 = (uint8_t *)swift_slowAlloc();
          uint64_t v67 = swift_slowAlloc();
          v105[0] = v67;
          *(_DWORD *)uint64_t v66 = 136315138;
          *(void *)(v0 + 32) = sub_25278F894(0xD000000000000051, 0x800000025283D6B0, v105);
          sub_252831698();
          _os_log_impl(&dword_25277D000, v64, v65, "%s", v66, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2533BE070](v67, -1, -1);
          MEMORY[0x2533BE070](v66, -1, -1);
        }
      }
      else
      {
        if (qword_269C1CED0 != -1) {
          swift_once();
        }
        uint64_t v84 = sub_252831158();
        __swift_project_value_buffer(v84, (uint64_t)qword_269C2D2E0);
        uint64_t v64 = sub_252831138();
        os_log_type_t v85 = sub_252831618();
        if (os_log_type_enabled(v64, v85))
        {
          uint64_t v86 = (uint8_t *)swift_slowAlloc();
          uint64_t v87 = swift_slowAlloc();
          v105[0] = v87;
          *(_DWORD *)uint64_t v86 = 136315138;
          *(void *)(v0 + 24) = sub_25278F894(0xD000000000000056, 0x800000025283D650, v105);
          sub_252831698();
          _os_log_impl(&dword_25277D000, v64, v85, "%s", v86, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2533BE070](v87, -1, -1);
          MEMORY[0x2533BE070](v86, -1, -1);
        }
      }

      unint64_t v88 = *(void *)(v0 + 192);
      unint64_t v89 = *(void **)(v0 + 200);
      uint64_t v90 = *(void *)(v0 + 184);
      uint64_t v92 = *(void *)(v0 + 136);
      uint64_t v91 = *(void *)(v0 + 144);
      uint64_t v93 = *(void *)(v0 + 128);
      type metadata accessor for NetworkError();
      sub_25281AC4C((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      sub_252782E20(v90, v88);

      (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v91, v93);
      goto LABEL_54;
    case 0x1ADuLL:
      if (qword_269C1CED0 != -1) {
        swift_once();
      }
      uint64_t v68 = sub_252831158();
      __swift_project_value_buffer(v68, (uint64_t)qword_269C2D2E0);
      os_log_type_t v6 = sub_252831138();
      os_log_type_t v69 = sub_252831618();
      if (os_log_type_enabled(v6, v69))
      {
        uint64_t v70 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v70 = 0;
        _os_log_impl(&dword_25277D000, v6, v69, "TOO MANY REQUESTS | Server rejected calls cause of too many requests being made", v70, 2u);
        MEMORY[0x2533BE070](v70, -1, -1);
      }
LABEL_43:
      unint64_t v71 = *(void *)(v0 + 192);
      unint64_t v14 = *(void **)(v0 + 200);
      uint64_t v72 = *(void *)(v0 + 184);
      uint64_t v17 = *(void *)(v0 + 136);
      uint64_t v16 = *(void *)(v0 + 144);
      uint64_t v18 = *(void *)(v0 + 128);

      type metadata accessor for NetworkError();
      sub_25281AC4C((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      sub_252782E20(v72, v71);

      goto LABEL_44;
    default:
      if (v4 == (id)500)
      {
        if (qword_269C1CED0 != -1) {
          swift_once();
        }
        uint64_t v73 = sub_252831158();
        __swift_project_value_buffer(v73, (uint64_t)qword_269C2D2E0);
        uint64_t v74 = sub_252831138();
        os_log_type_t v75 = sub_252831618();
        if (os_log_type_enabled(v74, v75))
        {
          uint64_t v76 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v76 = 0;
          _os_log_impl(&dword_25277D000, v74, v75, "Internal Server Error", v76, 2u);
          MEMORY[0x2533BE070](v76, -1, -1);
        }
        unint64_t v78 = *(void *)(v0 + 192);
        uint64_t v77 = *(void **)(v0 + 200);
        uint64_t v79 = *(void *)(v0 + 184);
        uint64_t v80 = *(void *)(v0 + 136);
        uint64_t v103 = *(void *)(v0 + 128);
        uint64_t v104 = *(void *)(v0 + 144);

        goto LABEL_52;
      }
      if (v4 != (id)201)
      {
LABEL_23:
        if (qword_269C1CEC0 != -1) {
          swift_once();
        }
        uint64_t v35 = *(void **)(v0 + 200);
        uint64_t v36 = sub_252831158();
        __swift_project_value_buffer(v36, (uint64_t)qword_269C2D2B0);
        id v37 = v35;
        uint64_t v38 = sub_252831138();
        os_log_type_t v39 = sub_252831618();
        BOOL v40 = os_log_type_enabled(v38, v39);
        unint64_t v41 = *(void **)(v0 + 200);
        if (v40)
        {
          unint64_t v42 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)unint64_t v42 = 134217984;
          *(void *)(v0 + 16) = objc_msgSend(v2, sel_statusCode);
          sub_252831698();

          _os_log_impl(&dword_25277D000, v38, v39, "Request failed : Status Code %ld", v42, 0xCu);
          MEMORY[0x2533BE070](v42, -1, -1);
        }
        else
        {
        }
        unint64_t v78 = *(void *)(v0 + 192);
        uint64_t v77 = *(void **)(v0 + 200);
        uint64_t v79 = *(void *)(v0 + 184);
        uint64_t v80 = *(void *)(v0 + 136);
        uint64_t v103 = *(void *)(v0 + 128);
        uint64_t v104 = *(void *)(v0 + 144);
LABEL_52:
        type metadata accessor for NetworkError();
        sub_25281AC4C((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
        swift_allocError();
        *uint64_t v81 = objc_msgSend(v2, sel_statusCode);
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_252782E20(v79, v78);

        (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v104, v103);
        goto LABEL_54;
      }
      if (qword_269C1CED0 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_252831158();
      __swift_project_value_buffer(v20, (uint64_t)qword_269C2D2E0);
      uint64_t v21 = sub_252831138();
      os_log_type_t v22 = sub_252831628();
      if (os_log_type_enabled(v21, v22))
      {
        BOOL v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)BOOL v23 = 0;
        _os_log_impl(&dword_25277D000, v21, v22, "Address Verification Response received", v23, 2u);
        MEMORY[0x2533BE070](v23, -1, -1);
      }
      unint64_t v24 = *(void **)(v0 + 208);

      sub_252830828();
      swift_allocObject();
      sub_252830818();
      type metadata accessor for UtilitySubscriptionTokenSet();
      sub_25281AC4C(qword_269C1D780, (void (*)(uint64_t))type metadata accessor for UtilitySubscriptionTokenSet);
      sub_252830808();
      if (v24)
      {
        uint64_t v25 = v24;
        swift_release();
        uint64_t v26 = sub_252831138();
        os_log_type_t v27 = sub_252831618();
        if (os_log_type_enabled(v26, v27))
        {
          uint64_t v28 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v28 = 0;
          _os_log_impl(&dword_25277D000, v26, v27, "Error while decoding response from server", v28, 2u);
          MEMORY[0x2533BE070](v28, -1, -1);
        }
        unint64_t v29 = *(void *)(v0 + 192);
        uint64_t v30 = *(void **)(v0 + 200);
        uint64_t v31 = *(void *)(v0 + 184);
        uint64_t v33 = *(void *)(v0 + 136);
        uint64_t v32 = *(void *)(v0 + 144);
        uint64_t v34 = *(void *)(v0 + 128);

        sub_252825138(v25);
        swift_willThrow();
        sub_252782E20(v31, v29);

        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
LABEL_54:
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v82 = *(uint64_t (**)(void))(v0 + 8);
        return v82();
      }
      unint64_t v94 = *(void *)(v0 + 192);
      uint64_t v95 = *(void **)(v0 + 200);
      uint64_t v96 = *(void *)(v0 + 184);
      (*(void (**)(void, void))(*(void *)(v0 + 136) + 8))(*(void *)(v0 + 144), *(void *)(v0 + 128));

      swift_release();
      sub_252782E20(v96, v94);
      uint64_t v97 = *(void *)(v0 + 56);
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v98 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v98(v97);
  }
}

uint64_t sub_25281ABC4()
{
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_25281AC4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25281AC94(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = sub_252830DE8();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v4 = sub_2528307F8();
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  v2[10] = swift_task_alloc();
  uint64_t v5 = sub_252830BD8();
  v2[11] = v5;
  v2[12] = *(void *)(v5 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25281AE4C, 0, 0);
}

uint64_t sub_25281AE4C()
{
  if (*(void *)(v0[3] + OBJC_IVAR____TtC19HomeUtilityServices21TAFVerificationFactor__factor + 56))
  {
    uint64_t v1 = v0[11];
    uint64_t v2 = v0[12];
    uint64_t v3 = v0[10];
    swift_bridgeObjectRetain();
    sub_252830BA8();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) != 1)
    {
      uint64_t v12 = v0[13];
      uint64_t v11 = v0[14];
      uint64_t v13 = v0[11];
      uint64_t v14 = v0[12];
      uint64_t v15 = v0[9];
      uint64_t v16 = v0[8];
      uint64_t v18 = v0[5];
      uint64_t v17 = v0[6];
      uint64_t v21 = v0[4];
      uint64_t v22 = v0[2];
      uint64_t v23 = v0[7];
      (*(void (**)(uint64_t, void, uint64_t))(v14 + 32))(v11, v0[10], v13);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, v11, v13);
      sub_252830798();
      sub_252830778();
      sub_252830DD8();
      sub_252830DC8();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v21);
      sub_252831328();
      swift_bridgeObjectRelease();
      sub_2528307B8();
      swift_bridgeObjectRelease();
      sub_25282DE9C(v15, 0, v22);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v23);
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v11, v13);
      goto LABEL_10;
    }
    sub_2527CFD14(v0[10]);
  }
  if (qword_269C1CEC8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_252831158();
  __swift_project_value_buffer(v4, (uint64_t)qword_269C2D2C8);
  uint64_t v5 = sub_252831138();
  os_log_type_t v6 = sub_252831618();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_25277D000, v5, v6, "Unable to generate send OTP URL for TAF Flow.", v7, 2u);
    MEMORY[0x2533BE070](v7, -1, -1);
  }
  uint64_t v8 = v0[7];
  uint64_t v9 = v0[8];
  uint64_t v10 = v0[2];

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v10, 1, 1, v8);
LABEL_10:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_25281B194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[13] = a3;
  v4[14] = a4;
  v4[11] = a1;
  v4[12] = a2;
  uint64_t v5 = sub_252830DE8();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  uint64_t v6 = sub_2528307F8();
  v4[18] = v6;
  v4[19] = *(void *)(v6 - 8);
  v4[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  v4[21] = swift_task_alloc();
  uint64_t v7 = sub_252830BD8();
  v4[22] = v7;
  v4[23] = *(void *)(v7 - 8);
  unsigned char v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25281B37C, 0, 0);
}

uint64_t sub_25281B37C()
{
  if (!*(void *)(*(void *)(v0 + 96) + OBJC_IVAR____TtC19HomeUtilityServices21TAFVerificationFactor__factor + 56)) {
    goto LABEL_4;
  }
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 168);
  swift_bridgeObjectRetain();
  sub_252830BA8();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_2527CFD14(*(void *)(v0 + 168));
LABEL_4:
    if (qword_269C1CEC8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_252831158();
    __swift_project_value_buffer(v4, (uint64_t)qword_269C2D2C8);
    uint64_t v5 = sub_252831138();
    os_log_type_t v6 = sub_252831618();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25277D000, v5, v6, "Unable to generate verify OTP URL for TAF Flow.", v7, 2u);
      MEMORY[0x2533BE070](v7, -1, -1);
    }
    uint64_t v8 = *(void *)(v0 + 144);
    uint64_t v9 = *(void *)(v0 + 152);
    uint64_t v10 = *(void *)(v0 + 88);

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v10, 1, 1, v8);
    goto LABEL_16;
  }
  uint64_t v12 = *(void *)(v0 + 104);
  uint64_t v11 = *(void *)(v0 + 112);
  (*(void (**)(void, void, void))(*(void *)(v0 + 184) + 32))(*(void *)(v0 + 200), *(void *)(v0 + 168), *(void *)(v0 + 176));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_252832B00;
  *(void *)(inited + 32) = 0x65646F4373736170;
  *(void *)(inited + 40) = 0xE800000000000000;
  *(void *)(inited + 48) = v12;
  *(void *)(inited + 56) = v11;
  swift_bridgeObjectRetain();
  sub_252786E88(inited);
  uint64_t v14 = self;
  uint64_t v15 = (void *)sub_252831218();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 80) = 0;
  id v16 = objc_msgSend(v14, sel_dataWithJSONObject_options_error_, v15, 0, v0 + 80);

  id v17 = *(id *)(v0 + 80);
  if (v16)
  {
    uint64_t v19 = *(void *)(v0 + 192);
    uint64_t v18 = *(void *)(v0 + 200);
    uint64_t v21 = *(void *)(v0 + 176);
    uint64_t v20 = *(void *)(v0 + 184);
    uint64_t v22 = *(void *)(v0 + 160);
    uint64_t v44 = *(void *)(v0 + 152);
    uint64_t v23 = *(void *)(v0 + 136);
    uint64_t v45 = *(void *)(v0 + 144);
    uint64_t v24 = *(void *)(v0 + 128);
    uint64_t v42 = *(void *)(v0 + 120);
    uint64_t v43 = *(void *)(v0 + 88);
    uint64_t v25 = sub_252830C68();
    unint64_t v41 = v26;

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v19, v18, v21);
    sub_252830798();
    sub_252830778();
    sub_252782DC8(v25, v41);
    sub_2528307D8();
    sub_252830DD8();
    sub_252830DC8();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v42);
    sub_252831328();
    swift_bridgeObjectRelease();
    sub_2528307B8();
    swift_bridgeObjectRelease();
    sub_25282DE9C(v22, 1, v43);
    sub_252782E20(v25, v41);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v22, v45);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v21);
  }
  else
  {
    os_log_type_t v27 = v17;
    uint64_t v28 = (void *)sub_252830B18();

    swift_willThrow();
    if (qword_269C1CEC8 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_252831158();
    __swift_project_value_buffer(v29, (uint64_t)qword_269C2D2C8);
    uint64_t v30 = sub_252831138();
    os_log_type_t v31 = sub_252831618();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl(&dword_25277D000, v30, v31, "Unable to encode TAF OTP Passcode", v32, 2u);
      MEMORY[0x2533BE070](v32, -1, -1);
    }
    uint64_t v33 = *(void *)(v0 + 200);
    uint64_t v34 = *(void *)(v0 + 176);
    uint64_t v35 = *(void *)(v0 + 184);
    uint64_t v36 = *(void *)(v0 + 144);
    uint64_t v37 = *(void *)(v0 + 152);
    uint64_t v38 = *(void *)(v0 + 88);

    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v38, 1, 1, v36);
  }
LABEL_16:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t static UtilityServices.searchUtilitiesNearLocation(_:)()
{
  return sub_25281BB10(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 0);
}

uint64_t static UtilityServices.getUtilityInformation(_:)()
{
  return sub_25281BB10(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 0);
}

uint64_t sub_25281BB10(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_25281BC9C(int a1, void *aBlock)
{
  uint64_t v3 = _Block_copy(aBlock);
  (*((void (**)(void *, void, void))v3 + 2))(v3, 0, 0);
  _Block_release(v3);
  uint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
  return sub_252820170(v4);
}

uint64_t static UtilityServices.authorizeAndSubscribeToSinglePremise(_:utilityID:authCode:)()
{
  return sub_25281BB10(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 0);
}

uint64_t sub_25281BF0C(int a1, int a2, int a3, void *aBlock)
{
  uint64_t v5 = _Block_copy(aBlock);
  (*((void (**)(void *, void, void))v5 + 2))(v5, 0, 0);
  _Block_release(v5);
  uint64_t v6 = *(uint64_t (**)(void))(v4 + 8);
  return sub_252820170(v6);
}

uint64_t static UtilityServices.tafAuthorizeAndSubscribeToSinglePremise(_:utilityID:fields:)()
{
  return sub_25281BB10(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 0);
}

uint64_t static UtilityServices.subscribePremiseToUsageData(_:utilityID:utilityHomeID:)()
{
  return sub_25281BB10(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 0);
}

uint64_t sub_25281C34C(int a1, int a2, int a3, void *aBlock)
{
  uint64_t v5 = _Block_copy(aBlock);
  (*((void (**)(void *, void, void))v5 + 2))(v5, 0, 0);
  _Block_release(v5);
  uint64_t v6 = *(uint64_t (**)(void))(v4 + 8);
  return sub_252820170(v6);
}

uint64_t UtilitySubscriptionService.createUtilitySubscription(serviceLocation:accessToken:siteID:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[5] = a6;
  v7[6] = v6;
  v7[3] = a2;
  v7[4] = a3;
  void v7[2] = a1;
  return MEMORY[0x270FA2498](sub_25281C414, 0, 0);
}

uint64_t sub_25281C414()
{
  uint64_t v1 = (uint64_t *)(v0[2] + OBJC_IVAR____TtC19HomeUtilityServices22UtilityServiceLocation_serviceLocationID);
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v4 = (uint64_t *)(*(void *)(v0[6] + OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_configuration)
                 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C1D960
                                                                                              + dword_269C1D960);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  v0[7] = v6;
  swift_bridgeObjectRetain();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[8] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_25281C52C;
  uint64_t v8 = v0[4];
  uint64_t v9 = v0[5];
  uint64_t v10 = v0[3];
  return v12(v3, v2, v10, v8, v5, v6, v9);
}

uint64_t sub_25281C52C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_25281C684, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_25281C684()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25281C888(void *a1, int a2, int a3, void *a4, void *aBlock, void *a6)
{
  v6[3] = a4;
  v6[4] = a6;
  _OWORD v6[2] = a1;
  _OWORD v6[5] = _Block_copy(aBlock);
  v6[6] = sub_2528312A8();
  v6[7] = v10;
  id v11 = a1;
  id v12 = a4;
  id v13 = a6;
  return MEMORY[0x270FA2498](sub_25281C930, 0, 0);
}

uint64_t sub_25281C930()
{
  uint64_t v1 = (uint64_t *)(v0[2] + OBJC_IVAR____TtC19HomeUtilityServices22UtilityServiceLocation_serviceLocationID);
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v4 = (uint64_t *)(*(void *)(v0[4] + OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_configuration)
                 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config);
  id v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C1D960
                                                                                              + dword_269C1D960);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  v0[8] = v6;
  swift_bridgeObjectRetain();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[9] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_25281CA48;
  uint64_t v8 = v0[6];
  uint64_t v9 = v0[7];
  uint64_t v10 = v0[3];
  return v12(v3, v2, v8, v9, v5, v6, v10);
}

uint64_t sub_25281CA48(void *a1)
{
  uint64_t v4 = (void *)*v2;
  v4[10] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_25281CBE0, 0, 0);
  }
  else
  {
    uint64_t v6 = (void *)v4[4];
    uint64_t v5 = (void (**)(void, void, void))v4[5];
    uint64_t v7 = (void *)v4[2];
    uint64_t v8 = (void *)v4[3];
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    ((void (**)(void, void *, void))v5)[2](v5, a1, 0);
    _Block_release(v5);

    uint64_t v9 = (uint64_t (*)(void))v4[1];
    return v9();
  }
}

uint64_t sub_25281CBE0()
{
  uint64_t v1 = (void *)v0[10];
  uint64_t v3 = (void *)v0[4];
  uint64_t v2 = (void (**)(void, void, void))v0[5];
  uint64_t v5 = (void *)v0[2];
  uint64_t v4 = (void *)v0[3];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)sub_252830B08();

  ((void (**)(void, void, void *))v2)[2](v2, 0, v6);
  _Block_release(v2);
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t UtilitySubscriptionService.verifyOTPForAccount(factor:oneTimePasscode:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[8] = a4;
  v5[9] = v4;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  uint64_t v6 = sub_252830DE8();
  v5[10] = v6;
  v5[11] = *(void *)(v6 - 8);
  v5[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25281CD70, 0, 0);
}

uint64_t sub_25281CD70()
{
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v4 = (uint64_t *)(*(void *)(v0[9] + OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_configuration)
                 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  v0[13] = v6;
  swift_bridgeObjectRetain();
  sub_252830DD8();
  uint64_t v7 = sub_252830DC8();
  v0[14] = v8;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[15] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_25281CEA8;
  uint64_t v10 = v0[7];
  uint64_t v11 = v0[8];
  uint64_t v12 = v0[5];
  uint64_t v13 = v0[6];
  return sub_252810BEC((uint64_t)(v0 + 2), v12, v13, v10, v11, v5, v6, v7);
}

uint64_t sub_25281CEA8()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_25281D1B0;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_25281CFCC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25281CFCC()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v0[4];
  if (v2)
  {
    uint64_t v3 = v0[3];

    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v4(v3, v2);
  }
  else
  {
    if (qword_269C1CEC8 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_252831158();
    __swift_project_value_buffer(v6, (uint64_t)qword_269C2D2C8);
    uint64_t v7 = sub_252831138();
    os_log_type_t v8 = sub_252831618();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_25277D000, v7, v8, "TAF Account Verification(OTP) failed | No authorization code.", v9, 2u);
      MEMORY[0x2533BE070](v9, -1, -1);
    }

    type metadata accessor for NetworkError();
    sub_2527B3838();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_bridgeObjectRelease();

    swift_willThrow();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_25281D1B0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25281D3D0(void *a1, int a2, void *a3, void *aBlock, void *a5)
{
  v5[3] = a3;
  v5[4] = a5;
  uint64_t v5[2] = a1;
  v5[5] = _Block_copy(aBlock);
  uint64_t v9 = sub_2528312A8();
  uint64_t v11 = v10;
  v5[6] = v10;
  id v12 = a1;
  id v13 = a3;
  a5;
  uint64_t v14 = (void *)swift_task_alloc();
  v5[7] = v14;
  *uint64_t v14 = v5;
  v14[1] = sub_25281D4D0;
  return UtilitySubscriptionService.verifyOTPForAccount(factor:oneTimePasscode:_:)((uint64_t)v12, v9, v11, (uint64_t)v13);
}

uint64_t sub_25281D4D0()
{
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void **)(*v1 + 32);
  uint64_t v5 = *(void **)(*v1 + 24);
  uint64_t v6 = *(void **)(*v1 + 16);
  uint64_t v7 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v8 = sub_252830B08();

    uint64_t v9 = 0;
    uint64_t v10 = (void *)v8;
  }
  else
  {
    uint64_t v9 = sub_252831298();
    swift_bridgeObjectRelease();
    uint64_t v8 = 0;
    uint64_t v10 = (void *)v9;
  }
  uint64_t v11 = *(void (***)(void, void, void))(v3 + 40);
  v11[2](v11, v9, v8);

  _Block_release(v11);
  id v12 = *(uint64_t (**)(void))(v7 + 8);
  return v12();
}

uint64_t UtilitySubscriptionService.createUtilitySubscription(serviceLocationID:accessToken:siteID:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C1E7A0 + dword_269C1E7A0);
  id v13 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v13;
  *id v13 = v7;
  v13[1] = sub_2527853B0;
  return v15(a1, a2, a3, a4, a7);
}

uint64_t sub_25281D934(int a1, int a2, int a3, void *a4, void *aBlock, void *a6)
{
  _OWORD v6[2] = a4;
  v6[3] = a6;
  v6[4] = _Block_copy(aBlock);
  uint64_t v9 = sub_2528312A8();
  uint64_t v11 = v10;
  _OWORD v6[5] = v10;
  uint64_t v12 = sub_2528312A8();
  uint64_t v14 = v13;
  v6[6] = v13;
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C1E7A0 + dword_269C1E7A0);
  id v15 = a4;
  a6;
  uint64_t v16 = (void *)swift_task_alloc();
  v6[7] = v16;
  *uint64_t v16 = v6;
  v16[1] = sub_25281DA5C;
  return v18(v9, v11, v12, v14, (uint64_t)v15);
}

uint64_t sub_25281DA5C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void **)(*v2 + 24);
  uint64_t v7 = *(void **)(*v2 + 16);
  uint64_t v8 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void (***)(void, void, void))(v5 + 32);
  if (v3)
  {
    uint64_t v10 = (void *)sub_252830B08();

    ((void (**)(void, void, void *))v9)[2](v9, 0, v10);
    _Block_release(v9);
  }
  else
  {
    ((void (**)(void, void *, void))v9)[2](*(void *)(v5 + 32), a1, 0);
    _Block_release(v9);
  }
  uint64_t v11 = *(uint64_t (**)(void))(v8 + 8);
  return v11();
}

uint64_t UtilitySubscriptionService.createUtilitySubscription(serviceLocationID:accessToken:zoneName:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C1E7B0 + dword_269C1E7B0);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v13;
  *uint64_t v13 = v7;
  v13[1] = sub_252793470;
  return v15(a1, a2, a3, a4, a7);
}

uint64_t sub_25281DED0(int a1, int a2, int a3, void *a4, void *aBlock, void *a6)
{
  _OWORD v6[2] = a4;
  v6[3] = a6;
  v6[4] = _Block_copy(aBlock);
  uint64_t v9 = sub_2528312A8();
  uint64_t v11 = v10;
  _OWORD v6[5] = v10;
  uint64_t v12 = sub_2528312A8();
  uint64_t v14 = v13;
  v6[6] = v13;
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C1E7B0 + dword_269C1E7B0);
  id v15 = a4;
  a6;
  uint64_t v16 = (void *)swift_task_alloc();
  v6[7] = v16;
  *uint64_t v16 = v6;
  v16[1] = sub_252820238;
  return v18(v9, v11, v12, v14, (uint64_t)v15);
}

uint64_t static UtilitySubscriptionService.resendHistoricalData(accessToken:subscriptionID:utilityID:start:end:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269C1E7C0 + dword_269C1E7C0);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v11;
  *uint64_t v11 = v8;
  v11[1] = sub_2527CE5C4;
  return v13(a7, a8);
}

uint64_t sub_25281E268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, const void *a7)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD70);
  uint64_t v10 = swift_task_alloc();
  void v7[2] = v10;
  uint64_t v11 = sub_252830DB8();
  v7[3] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v7[4] = v12;
  v7[5] = swift_task_alloc();
  v7[6] = _Block_copy(a7);
  sub_252830D68();
  if (a5)
  {
    sub_252830D68();
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v13 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v13, 1, v11);
  uint64_t v16 = (uint64_t (__cdecl *)())((char *)&dword_269C1E7C0 + dword_269C1E7C0);
  uint64_t v14 = (void *)swift_task_alloc();
  _OWORD v7[7] = v14;
  *uint64_t v14 = v7;
  v14[1] = sub_25281E424;
  return v16();
}

uint64_t sub_25281E424(char a1)
{
  uint64_t v3 = v1;
  uint64_t v6 = *v2;
  uint64_t v5 = *v2;
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v8 = v5[6];
  uint64_t v9 = v5[5];
  uint64_t v10 = v5[4];
  uint64_t v11 = v5[3];
  sub_252781C54(v5[2], &qword_26B22BD70);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  if (v3)
  {
    uint64_t v12 = (void *)sub_252830B08();

    (*(void (**)(uint64_t, void, void *))(v8 + 16))(v8, 0, v12);
  }
  else
  {
    (*(void (**)(uint64_t, void, void))(v8 + 16))(v8, a1 & 1, 0);
  }
  _Block_release((const void *)v6[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v7[1];
  return v13();
}

uint64_t static UtilitySubscriptionService.revokeSubscription(accessToken:subscriptionID:utilityID:_:)()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_269C1E7D0 + dword_269C1E7D0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2527CC144;
  return v3();
}

uint64_t sub_25281E870(int a1, int a2, int a3, int a4, void *aBlock)
{
  *(void *)(v5 + 16) = _Block_copy(aBlock);
  uint64_t v8 = (uint64_t (__cdecl *)())((char *)&dword_269C1E7D0 + dword_269C1E7D0);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_25281E91C;
  return v8();
}

uint64_t sub_25281E91C(char a1)
{
  uint64_t v3 = v1;
  uint64_t v6 = *v2;
  uint64_t v5 = *v2;
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v8 = *(void *)(v5 + 16);
  if (v3)
  {
    uint64_t v9 = (void *)sub_252830B08();

    (*(void (**)(uint64_t, void, void *))(v8 + 16))(v8, 0, v9);
  }
  else
  {
    (*(void (**)(uint64_t, void, void))(v8 + 16))(v8, a1 & 1, 0);
  }
  _Block_release(*(const void **)(v6 + 16));
  uint64_t v10 = *(uint64_t (**)(void))(v7 + 8);
  return v10();
}

uint64_t sub_25281EA94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_252786D4C;
  return v6();
}

uint64_t sub_25281EB60(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_252786D4C;
  return v7();
}

uint64_t sub_25281EC2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252831598();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_252831588();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_252781C54(a1, &qword_269C1D100);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_252831558();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_25281EDD8(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25281EEB4;
  return v6(a1);
}

uint64_t sub_25281EEB4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_25281EFAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  _OWORD v6[5] = a4;
  _OWORD v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x270FA2498](sub_25281EFD4, 0, 0);
}

uint64_t sub_25281EFD4()
{
  if (qword_26B22BF18 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_252831158();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B22C0B8);
  uint64_t v2 = sub_252831138();
  os_log_type_t v3 = sub_252831618();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    MEMORY[0x2533BE070](v4, -1, -1);
  }
  uint64_t v5 = v0[7];

  uint64_t v6 = (uint64_t *)(*(void *)(v5 + OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_configuration)
                 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config);
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  v0[8] = v7;
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C1D960
                                                                                              + dword_269C1D960);
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[9] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_2527CA808;
  uint64_t v10 = v0[5];
  uint64_t v11 = v0[6];
  uint64_t v12 = v0[3];
  uint64_t v13 = v0[4];
  uint64_t v14 = v0[2];
  return v16(v14, v12, v13, v10, v8, v7, v11);
}

uint64_t sub_25281F180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  _OWORD v6[5] = a4;
  _OWORD v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x270FA2498](sub_25281F1A8, 0, 0);
}

uint64_t sub_25281F1A8()
{
  if (qword_26B22BF18 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_252831158();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B22C0B8);
  uint64_t v2 = sub_252831138();
  os_log_type_t v3 = sub_252831618();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    MEMORY[0x2533BE070](v4, -1, -1);
  }
  uint64_t v5 = v0[7];

  uint64_t v6 = (uint64_t *)(*(void *)(v5 + OBJC_IVAR____TtC19HomeUtilityServices26UtilitySubscriptionService_configuration)
                 + OBJC_IVAR____TtC19HomeUtilityServices20UtilityConfiguration_config);
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  v0[8] = v7;
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C1D960
                                                                                              + dword_269C1D960);
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[9] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_25281F354;
  uint64_t v10 = v0[5];
  uint64_t v11 = v0[6];
  uint64_t v12 = v0[3];
  uint64_t v13 = v0[4];
  uint64_t v14 = v0[2];
  return v16(v14, v12, v13, v10, v8, v7, v11);
}

uint64_t sub_25281F354(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_252820244, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_25281F4AC()
{
  return MEMORY[0x270FA2498](sub_252820240, 0, 0);
}

uint64_t sub_25281F4C8()
{
  return MEMORY[0x270FA2498](sub_25281F4E4, 0, 0);
}

uint64_t sub_25281F4E4()
{
  if (qword_26B22BF18 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_252831158();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B22C0B8);
  uint64_t v2 = sub_252831138();
  os_log_type_t v3 = sub_252831618();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_25277D000, v2, v3, "This API has been deprecated and use of this API will result in request failure.", v4, 2u);
    MEMORY[0x2533BE070](v4, -1, -1);
  }

  type metadata accessor for NetworkError();
  sub_2527B3838();
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5(0);
}

uint64_t sub_25281F640()
{
  _Block_release(*(const void **)(v0 + 48));

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_25281F698()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = (void *)v0[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_252786D4C;
  uint64_t v8 = (uint64_t (*)(int, int, int, int, void *))((char *)&dword_269C1E7D8 + dword_269C1E7D8);
  return v8(v2, v3, v4, v5, v6);
}

uint64_t sub_25281F774()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25281F7AC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_252786A30;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269C1E7F8 + dword_269C1E7F8);
  return v6(a1, v4);
}

uint64_t sub_25281F864()
{
  _Block_release(*(const void **)(v0 + 64));

  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_25281F8CC()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v7 = v0[7];
  uint64_t v8 = (const void *)v0[8];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *uint64_t v9 = v1;
  v9[1] = sub_252786D4C;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, const void *))((char *)&dword_269C1E808 + dword_269C1E808);
  return v10(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_25281F9C0()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v7 = (void *)v0[6];
  uint64_t v6 = (void *)v0[7];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_252786D4C;
  uint64_t v9 = (uint64_t (*)(int, int, int, void *, void *, void *))((char *)&dword_269C1E818 + dword_269C1E818);
  return v9(v2, v3, v4, v5, v7, v6);
}

uint64_t sub_25281FAA0()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v7 = (void *)v0[6];
  uint64_t v6 = (void *)v0[7];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_252786D4C;
  uint64_t v9 = (uint64_t (*)(int, int, int, void *, void *, void *))((char *)&dword_269C1E838 + dword_269C1E838);
  return v9(v2, v3, v4, v5, v7, v6);
}

uint64_t sub_25281FB7C()
{
  _Block_release(*(const void **)(v0 + 40));

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_25281FBD4()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v6 = (void *)v0[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_252786D4C;
  uint64_t v8 = (uint64_t (*)(void *, int, void *, void *, void *))((char *)&dword_269C1E858 + dword_269C1E858);
  return v8(v2, v3, v4, v5, v6);
}

uint64_t objectdestroy_46Tm()
{
  _Block_release(*(const void **)(v0 + 48));

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_25281FD08()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v7 = (void *)v0[6];
  uint64_t v6 = (void *)v0[7];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_252786A30;
  uint64_t v9 = (uint64_t (*)(void *, int, int, void *, void *, void *))((char *)&dword_269C1E878 + dword_269C1E878);
  return v9(v2, v3, v4, v5, v7, v6);
}

uint64_t sub_25281FDE8()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_252786D4C;
  uint64_t v7 = (uint64_t (*)(int, int, int, void *))((char *)&dword_269C1E898 + dword_269C1E898);
  return v7(v2, v3, v4, v5);
}

uint64_t sub_25281FEBC()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_252786D4C;
  uint64_t v7 = (uint64_t (*)(int, int, int, void *))((char *)&dword_269C1E8B8 + dword_269C1E8B8);
  return v7(v2, v3, v4, v5);
}

uint64_t objectdestroy_106Tm()
{
  _Block_release(*(const void **)(v0 + 40));

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_25281FFE0()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_252786D4C;
  uint64_t v7 = (uint64_t (*)(int, int, int, void *))((char *)&dword_269C1E8D8 + dword_269C1E8D8);
  return v7(v2, v3, v4, v5);
}

uint64_t sub_2528200B4()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_252786D4C;
  uint64_t v5 = (uint64_t (*)(int, void *))((char *)&dword_269C1E8E8 + dword_269C1E8E8);
  return v5(v2, v3);
}

uint64_t sub_252820170(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_25282017C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_252786D4C;
  uint64_t v5 = (uint64_t (*)(int, void *))((char *)&dword_269C1E908 + dword_269C1E908);
  return v5(v2, v3);
}

Swift::String __swiftcall CLLocationCoordinate2D.geohash(length:)(Swift::Int length)
{
  double v3 = v2;
  double v4 = v1;
  type metadata accessor for Geohash();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = 0;
  *(void *)(inited + 24) = 0;
  uint64_t v7 = sub_25282066C(length, v4, v3);
  uint64_t v9 = v8;
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v7;
  uint64_t v11 = v9;
  result._object = v11;
  result._uint64_t countAndFlagsBits = v10;
  return result;
}

uint64_t type metadata accessor for Geohash()
{
  return self;
}

int64_t sub_2528202FC(int64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    if ((uint64_t)v2 >= result) {
      unint64_t v3 = result;
    }
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (!result) {
      unint64_t v3 = 0;
    }
    if (v2 >= v3) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

double sub_252820340(double a1, double a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_2528313C8();
  if (v5)
  {
    uint64_t v6 = v5;
    do
    {
      double v8 = (a1 + a2) * 0.5;
      if (v4 == 49 && v6 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v7 = sub_252831A58();
        swift_bridgeObjectRelease();
        if ((v7 & 1) == 0)
        {
          a2 = (a1 + a2) * 0.5;
          double v8 = a1;
        }
      }
      uint64_t v4 = sub_2528313C8();
      uint64_t v6 = v9;
      a1 = v8;
    }
    while (v9);
  }
  else
  {
    double v8 = a1;
  }
  swift_bridgeObjectRelease();
  return v8;
}

Swift::String __swiftcall CLLocation.geohash(length:)(Swift::Int length)
{
  type metadata accessor for Geohash();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = 0;
  *(void *)(inited + 24) = 0;
  objc_msgSend(v1, sel_coordinate);
  double v5 = v4;
  objc_msgSend(v1, sel_coordinate);
  uint64_t v7 = sub_25282066C(length, v5, v6);
  uint64_t v9 = v8;
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v7;
  uint64_t v11 = v9;
  result._object = v11;
  result._uint64_t countAndFlagsBits = v10;
  return result;
}

CLLocation __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CLLocation.init(geohash:)(Swift::String geohash)
{
  object = (objc_class *)geohash._object;
  uint64_t countAndFlagsBits = geohash._countAndFlagsBits;
  type metadata accessor for Geohash();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = 0;
  *(void *)(inited + 24) = 0;
  sub_252820F04(countAndFlagsBits, (unint64_t)object);
  if (v1)
  {
    swift_setDeallocating();
    swift_bridgeObjectRelease();
  }
  else
  {
    double v10 = v5;
    double v11 = v6;
    double v12 = v7;
    double v13 = v8;
    swift_bridgeObjectRelease();
    object = (objc_class *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithLatitude_longitude_, (v10 + v11) * 0.5, (v12 + v13) * 0.5);
    swift_setDeallocating();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = object;
  result._internal = v9;
  result.super.isa = v14;
  return result;
}

uint64_t static Geohash.Error.== infix(_:_:)()
{
  return 1;
}

uint64_t Geohash.Error.hash(into:)()
{
  return sub_252831B08();
}

uint64_t Geohash.Error.hashValue.getter()
{
  return sub_252831B18();
}

uint64_t sub_25282066C(uint64_t result, double a2, double a3)
{
  double v4 = ceil((double)result * 5.0 * 0.5);
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_77:
    __break(1u);
    return result;
  }
  int64_t v75 = result;
  unint64_t v78 = (uint64_t)v4;
  uint64_t v5 = sub_252820E10((uint64_t)v4, a2);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    double v7 = (double *)(v5 + 32);
    double v8 = (void *)MEMORY[0x263F8EE78];
    double v9 = -90.0;
    double v10 = 90.0;
    do
    {
      double v13 = *v7;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v15 = v8;
      if (v13 >= (v10 + v9) * 0.5)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v15 = sub_252821A90(0, v8[2] + 1, 1, v8);
        }
        unint64_t v20 = v15[2];
        unint64_t v19 = v15[3];
        if (v20 >= v19 >> 1) {
          uint64_t v15 = sub_252821A90((void *)(v19 > 1), v20 + 1, 1, v15);
        }
        _OWORD v15[2] = v20 + 1;
        double v11 = &v15[2 * v20];
        v11[4] = 49;
        double v12 = v11 + 4;
        double v9 = (v10 + v9) * 0.5;
      }
      else
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v15 = sub_252821A90(0, v8[2] + 1, 1, v8);
        }
        unint64_t v17 = v15[2];
        unint64_t v16 = v15[3];
        if (v17 >= v16 >> 1) {
          uint64_t v15 = sub_252821A90((void *)(v16 > 1), v17 + 1, 1, v15);
        }
        _OWORD v15[2] = v17 + 1;
        uint64_t v18 = &v15[2 * v17];
        void v18[4] = 48;
        double v12 = v18 + 4;
        double v10 = (v10 + v9) * 0.5;
      }
      v12[1] = 0xE100000000000000;
      swift_bridgeObjectRelease();
      ++v7;
      double v8 = v15;
      --v6;
    }
    while (v6);
  }
  else
  {
    uint64_t v15 = (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_252820E10(v78, a3);
  uint64_t v22 = *(void *)(v21 + 16);
  if (v22)
  {
    uint64_t v23 = (double *)(v21 + 32);
    uint64_t v24 = (void *)MEMORY[0x263F8EE78];
    double v25 = -180.0;
    double v26 = 180.0;
    do
    {
      double v29 = *v23;
      swift_bridgeObjectRetain();
      char v30 = swift_isUniquelyReferenced_nonNull_native();
      os_log_type_t v31 = v24;
      if (v29 >= (v26 + v25) * 0.5)
      {
        if ((v30 & 1) == 0) {
          os_log_type_t v31 = sub_252821A90(0, v24[2] + 1, 1, v24);
        }
        unint64_t v36 = v31[2];
        unint64_t v35 = v31[3];
        if (v36 >= v35 >> 1) {
          os_log_type_t v31 = sub_252821A90((void *)(v35 > 1), v36 + 1, 1, v31);
        }
        v31[2] = v36 + 1;
        os_log_type_t v27 = &v31[2 * v36];
        v27[4] = 49;
        uint64_t v28 = v27 + 4;
        double v25 = (v26 + v25) * 0.5;
      }
      else
      {
        if ((v30 & 1) == 0) {
          os_log_type_t v31 = sub_252821A90(0, v24[2] + 1, 1, v24);
        }
        unint64_t v33 = v31[2];
        unint64_t v32 = v31[3];
        if (v33 >= v32 >> 1) {
          os_log_type_t v31 = sub_252821A90((void *)(v32 > 1), v33 + 1, 1, v31);
        }
        v31[2] = v33 + 1;
        uint64_t v34 = &v31[2 * v33];
        v34[4] = 48;
        uint64_t v28 = v34 + 4;
        double v26 = (v26 + v25) * 0.5;
      }
      v28[1] = 0xE100000000000000;
      swift_bridgeObjectRelease();
      ++v23;
      uint64_t v24 = v31;
      --v22;
    }
    while (v22);
  }
  else
  {
    os_log_type_t v31 = (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  uint64_t v77 = v31[2];
  if (v77)
  {
    CLLocation result = swift_bridgeObjectRetain();
    uint64_t v37 = 0;
    unint64_t v38 = 0;
    os_log_type_t v39 = (void *)MEMORY[0x263F8EE78];
    uint64_t v76 = v15;
    while (v38 < v15[2])
    {
      int64_t v40 = v39[2];
      int64_t v41 = v40 + 2;
      if (__OFADD__(v40, 2)) {
        goto LABEL_72;
      }
      uint64_t v42 = v31[v37 + 4];
      uint64_t v43 = v31[v37 + 5];
      uint64_t v44 = v15[v37 + 5];
      uint64_t v79 = v15[v37 + 4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v45 = (void *)swift_isUniquelyReferenced_nonNull_native();
      if (!v45 || v41 > v39[3] >> 1)
      {
        if (v40 <= v41) {
          int64_t v46 = v40 + 2;
        }
        else {
          int64_t v46 = v40;
        }
        os_log_type_t v39 = sub_252821A90(v45, v46, 1, v39);
      }
      unint64_t v48 = v39[2];
      unint64_t v47 = v39[3];
      unint64_t v49 = v48 + 1;
      swift_bridgeObjectRetain();
      if (v48 >= v47 >> 1) {
        os_log_type_t v39 = sub_252821A90((void *)(v47 > 1), v48 + 1, 1, v39);
      }
      v39[2] = v49;
      os_log_type_t v50 = &v39[2 * v48];
      v50[4] = v42;
      v50[5] = v43;
      unint64_t v51 = v39[3];
      swift_bridgeObjectRetain();
      if (v49 >= v51 >> 1) {
        os_log_type_t v39 = sub_252821A90((void *)(v51 > 1), v48 + 2, 1, v39);
      }
      uint64_t v15 = v76;
      ++v38;
      v39[2] = v48 + 2;
      unint64_t v52 = &v39[2 * v49];
      v52[4] = v79;
      v52[5] = v44;
      swift_bridgeObjectRelease();
      CLLocation result = swift_bridgeObjectRelease();
      v37 += 2;
      if (v77 == v38)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_51;
      }
    }
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  swift_bridgeObjectRelease();
  os_log_type_t v39 = (void *)MEMORY[0x263F8EE78];
LABEL_51:
  swift_bridgeObjectRelease();
  uint64_t v53 = v39[2];
  if (v53)
  {
    swift_bridgeObjectRetain();
    uint64_t v54 = 0;
    unint64_t v55 = 0;
    uint64_t v56 = v39 + 5;
    uint64_t v57 = (void *)MEMORY[0x263F8EE78];
    do
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      CLLocation result = sub_252831468();
      uint64_t v59 = result;
      uint64_t v61 = v60;
      if (v54 + 5 * (v55 / 5))
      {
        if (!v57[2]) {
          goto LABEL_73;
        }
        CLLocation result = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v62 = v57;
        if (result)
        {
          uint64_t v63 = v57[2];
          if (!v63) {
            goto LABEL_74;
          }
        }
        else
        {
          CLLocation result = (uint64_t)sub_2528234D0(v57);
          unint64_t v62 = (void *)result;
          uint64_t v63 = *(void *)(result + 16);
          if (!v63) {
            goto LABEL_74;
          }
        }
        uint64_t v64 = v63 - 1;
        os_log_type_t v65 = &v62[2 * v64];
        uint64_t v67 = v65[4];
        uint64_t v66 = v65[5];
        v62[2] = v64;
        uint64_t v80 = v67;
        uint64_t v81 = v66;
        sub_2528313A8();
        swift_bridgeObjectRelease();
        unint64_t v69 = v62[2];
        unint64_t v68 = v62[3];
        if (v69 >= v68 >> 1) {
          unint64_t v62 = sub_252821A90((void *)(v68 > 1), v69 + 1, 1, v62);
        }
        v62[2] = v69 + 1;
        uint64_t v58 = &v62[2 * v69];
        v58[4] = v80;
        v58[5] = v81;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v57 = v62;
      }
      else
      {
        uint64_t v70 = v57;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v70 = sub_252821A90(0, v57[2] + 1, 1, v57);
        }
        unint64_t v72 = v70[2];
        unint64_t v71 = v70[3];
        if (v72 >= v71 >> 1) {
          uint64_t v70 = sub_252821A90((void *)(v71 > 1), v72 + 1, 1, v70);
        }
        v70[2] = v72 + 1;
        uint64_t v73 = &v70[2 * v72];
        v73[4] = v59;
        v73[5] = v61;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v57 = v70;
      }
      v56 += 2;
      ++v55;
      --v54;
      --v53;
    }
    while (v53);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v57 = (void *)MEMORY[0x263F8EE78];
  }
  swift_retain();
  uint64_t v74 = sub_252823958((uint64_t)v57);
  swift_bridgeObjectRelease();
  swift_release();
  sub_2528202FC(v75, (uint64_t)v74);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E928);
  sub_2527E88E0(&qword_269C1E930, &qword_269C1E928);
  return sub_252831458();
}

uint64_t sub_252820E10(unint64_t a1, double a2)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_2528318A8();
    __break(1u);
    return result;
  }
  if (!a1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t result = sub_252831538();
  *(void *)(result + 16) = a1;
  double v4 = (double *)(result + 32);
  if (a1 < 4)
  {
    unint64_t v5 = 0;
    double v6 = a2;
LABEL_9:
    unint64_t v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  v4 += a1 & 0xFFFFFFFFFFFFFFFCLL;
  double v6 = a2;
  int64x2_t v7 = vdupq_lane_s64(*(uint64_t *)&a2, 0);
  double v8 = (int64x2_t *)(result + 48);
  unint64_t v9 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    *double v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v5 != a1) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_252820F04(uint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_252831378();
  if (v4)
  {
    uint64_t v5 = v4;
    double v6 = sub_2528235A0(v4, 0);
    swift_bridgeObjectRetain();
    int64x2_t v7 = sub_2528234E4(&v21, v6 + 4, v5, a1, a2);
    uint64_t result = swift_bridgeObjectRelease();
    if (v7 != (void *)v5) {
      goto LABEL_24;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    double v6 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v21 = 0;
  unint64_t v22 = 0xE000000000000000;
  uint64_t v9 = v6[2];
  if (v9)
  {
    swift_retain();
    unint64_t v10 = v6 + 5;
    do
    {
      uint64_t v12 = *(v10 - 1);
      uint64_t v11 = *v10;
      swift_bridgeObjectRetain_n();
      if (*(void *)(sub_252821250() + 16) && (sub_2527D9B98(v12, v11), (v13 & 1) != 0))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2528313A8();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
      swift_bridgeObjectRelease();
      v10 += 2;
      --v9;
    }
    while (v9);
    swift_release_n();
    uint64_t v14 = v21;
    unint64_t v15 = v22;
  }
  else
  {
    swift_release();
    uint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
  }
  if (0xCCCCCCCCCCCCCCCDLL * sub_252831378() + 0x1999999999999999 >= 0x3333333333333333)
  {
    swift_bridgeObjectRelease();
    sub_252823AC4();
    swift_allocError();
    return swift_willThrow();
  }
  uint64_t v16 = HIBYTE(v15) & 0xF;
  if ((v15 & 0x2000000000000000) == 0) {
    uint64_t v16 = v14 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v21 = v14;
  unint64_t v22 = v15;
  uint64_t v23 = 0;
  uint64_t v24 = v16;
  swift_bridgeObjectRetain();
  uint64_t result = sub_2528313C8();
  uint64_t v18 = v17;
  if (!v17)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_252820340(-90.0, 90.0);
    sub_252820340(-180.0, 180.0);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v19 = 0;
  while (!__OFADD__(v19, 1))
  {
    MEMORY[0x2533BD170](result, v18);
    swift_bridgeObjectRelease();
    uint64_t result = sub_2528313C8();
    uint64_t v18 = v20;
    ++v19;
    if (!v20) {
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_252821250()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    uint64_t v1 = sub_2528212AC();
    *(void *)(v0 + 16) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2528212AC()
{
  uint64_t v0 = sub_2528313C8();
  if (!v1)
  {
    uint64_t v5 = (void *)MEMORY[0x263F8EE80];
LABEL_31:
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  uint64_t v2 = v0;
  uint64_t v3 = v1;
  uint64_t v4 = 0;
  uint64_t v5 = (void *)MEMORY[0x263F8EE80];
  while (1)
  {
    uint64_t v8 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    sub_252823CB8();
    sub_252831448();
    uint64_t v9 = sub_252831378();
    if ((unint64_t)(5 - v9 % 5) >= 5) {
      unint64_t v10 = -(v9 % 5);
    }
    else {
      unint64_t v10 = 5 - v9 % 5;
    }
    if (v10)
    {
      uint64_t v11 = (void *)sub_252831538();
      _OWORD v11[2] = v10;
      v11[4] = 48;
      v11[5] = 0xE100000000000000;
      unint64_t v12 = v10 - 1;
      if (v10 != 1)
      {
        char v13 = v11 + 6;
        if (v10 < 5)
        {
          unint64_t v14 = 1;
LABEL_17:
          unint64_t v17 = v10 - v14;
          do
          {
            *char v13 = 48;
            v13[1] = 0xE100000000000000;
            v13 += 2;
            --v17;
          }
          while (v17);
          goto LABEL_19;
        }
        unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL | 1;
        v13 += 2 * (v12 & 0xFFFFFFFFFFFFFFFCLL);
        unint64_t v15 = v11 + 10;
        unint64_t v16 = v12 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          *(v15 - 2) = xmmword_2528395E0;
          *(v15 - 1) = xmmword_2528395E0;
          *unint64_t v15 = xmmword_2528395E0;
          v15[1] = xmmword_2528395E0;
          v15 += 4;
          v16 -= 4;
        }
        while (v16);
        if (v12 != (v12 & 0xFFFFFFFFFFFFFFFCLL)) {
          goto LABEL_17;
        }
      }
    }
LABEL_19:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF40);
    sub_2527E88E0(&qword_269C1E068, &qword_26B22BF40);
    uint64_t v18 = sub_252831278();
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2528313A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v23 = sub_2527D9B98(v2, v3);
    uint64_t v24 = v5[2];
    BOOL v25 = (v22 & 1) == 0;
    uint64_t v26 = v24 + v25;
    if (__OFADD__(v24, v25)) {
      goto LABEL_33;
    }
    char v27 = v22;
    if (v5[3] >= v26)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v22) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_252823300();
        if (v27) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_252822A9C(v26, isUniquelyReferenced_nonNull_native);
      uint64_t v28 = sub_2527D9B98(v2, v3);
      if ((v27 & 1) != (v29 & 1)) {
        goto LABEL_35;
      }
      unint64_t v23 = v28;
      if (v27)
      {
LABEL_3:
        double v6 = (uint64_t *)(v5[7] + 16 * v23);
        swift_bridgeObjectRelease();
        *double v6 = v18;
        v6[1] = v20;
        goto LABEL_4;
      }
    }
    v5[(v23 >> 6) + 8] |= 1 << v23;
    char v30 = (uint64_t *)(v5[6] + 16 * v23);
    *char v30 = v2;
    v30[1] = v3;
    os_log_type_t v31 = (uint64_t *)(v5[7] + 16 * v23);
    *os_log_type_t v31 = v18;
    v31[1] = v20;
    uint64_t v32 = v5[2];
    BOOL v33 = __OFADD__(v32, 1);
    uint64_t v34 = v32 + 1;
    if (v33) {
      goto LABEL_34;
    }
    uint64_t v5[2] = v34;
    swift_bridgeObjectRetain();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_2528313C8();
    uint64_t v3 = v7;
    uint64_t v4 = v8;
    if (!v7) {
      goto LABEL_31;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  uint64_t result = sub_252831A98();
  __break(1u);
  return result;
}

uint64_t sub_252821644()
{
  if (*(void *)(v0 + 24))
  {
    uint64_t v1 = *(void *)(v0 + 24);
  }
  else
  {
    uint64_t v1 = sub_2528216A0();
    *(void *)(v0 + 24) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2528216A0()
{
  uint64_t v0 = sub_2528313C8();
  if (!v1)
  {
    uint64_t v5 = (void *)MEMORY[0x263F8EE80];
LABEL_29:
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  uint64_t v2 = v0;
  uint64_t v3 = v1;
  uint64_t v4 = 0;
  uint64_t v5 = (void *)MEMORY[0x263F8EE80];
  while (1)
  {
    uint64_t v8 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    sub_252823CB8();
    sub_252831448();
    uint64_t v9 = sub_252831378();
    if ((unint64_t)(5 - v9 % 5) >= 5) {
      unint64_t v10 = -(v9 % 5);
    }
    else {
      unint64_t v10 = 5 - v9 % 5;
    }
    if (v10)
    {
      uint64_t v11 = (void *)sub_252831538();
      _OWORD v11[2] = v10;
      v11[4] = 48;
      v11[5] = 0xE100000000000000;
      unint64_t v12 = v10 - 1;
      if (v10 != 1)
      {
        char v13 = v11 + 6;
        if (v10 < 5)
        {
          unint64_t v14 = 1;
LABEL_17:
          unint64_t v17 = v10 - v14;
          do
          {
            *char v13 = 48;
            v13[1] = 0xE100000000000000;
            v13 += 2;
            --v17;
          }
          while (v17);
          goto LABEL_19;
        }
        unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL | 1;
        v13 += 2 * (v12 & 0xFFFFFFFFFFFFFFFCLL);
        unint64_t v15 = v11 + 10;
        unint64_t v16 = v12 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          *(v15 - 2) = xmmword_2528395E0;
          *(v15 - 1) = xmmword_2528395E0;
          *unint64_t v15 = xmmword_2528395E0;
          v15[1] = xmmword_2528395E0;
          v15 += 4;
          v16 -= 4;
        }
        while (v16);
        if (v12 != (v12 & 0xFFFFFFFFFFFFFFFCLL)) {
          goto LABEL_17;
        }
      }
    }
LABEL_19:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF40);
    sub_2527E88E0(&qword_269C1E068, &qword_26B22BF40);
    uint64_t v18 = sub_252831278();
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2528313A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v21 = v18;
    uint64_t v22 = v20;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v25 = sub_2527D9A38(v18, v22);
    uint64_t v26 = v5[2];
    BOOL v27 = (v24 & 1) == 0;
    uint64_t v28 = v26 + v27;
    if (__OFADD__(v26, v27)) {
      goto LABEL_31;
    }
    char v29 = v24;
    if (v5[3] >= v28)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_252823144();
      }
    }
    else
    {
      sub_252822774(v28, isUniquelyReferenced_nonNull_native);
      uint64_t v30 = sub_2527D9A38(v21, v22);
      if ((v29 & 1) != (v31 & 1)) {
        goto LABEL_33;
      }
      unint64_t v25 = v30;
    }
    if (v29)
    {
      double v6 = (uint64_t *)(v5[7] + 16 * v25);
      swift_bridgeObjectRelease();
      *double v6 = v2;
      v6[1] = v3;
    }
    else
    {
      v5[(v25 >> 6) + 8] |= 1 << v25;
      uint64_t v32 = (uint64_t *)(v5[6] + 16 * v25);
      *uint64_t v32 = v21;
      v32[1] = v22;
      BOOL v33 = (uint64_t *)(v5[7] + 16 * v25);
      *BOOL v33 = v2;
      v33[1] = v3;
      uint64_t v34 = v5[2];
      BOOL v35 = __OFADD__(v34, 1);
      uint64_t v36 = v34 + 1;
      if (v35) {
        goto LABEL_32;
      }
      uint64_t v5[2] = v36;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_2528313C8();
    uint64_t v3 = v7;
    uint64_t v4 = v8;
    if (!v7) {
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  uint64_t result = sub_252831A98();
  __break(1u);
  return result;
}

uint64_t Geohash.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Geohash.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0228](v0, 32, 7);
}

void *sub_252821A90(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFE8);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      char v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x263F8EE78];
      char v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_252823618(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_252821BA0(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    char v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BFD0);
  uint64_t v10 = *(void *)(sub_2528308C8() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  char v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_2528318A8();
    __break(1u);
    return result;
  }
  void v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_2528308C8() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25282370C(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_252821E08(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E968);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      char v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      char v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_252823864(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_252821F18(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E970);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      char v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      char v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_252823DA8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_252822028(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E958);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_252823EB4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_25282214C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D158);
  char v42 = a2;
  uint64_t v6 = sub_2528318E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  os_log_type_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    char v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    BOOL v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_252831AF8();
    sub_252831258();
    uint64_t result = sub_252831B18();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *uint64_t v19 = v34;
    v19[1] = v33;
    uint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *uint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  char v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_252822474(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4B0);
  uint64_t v6 = sub_2528318E8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      unint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      char v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_2527933EC(v24, v35);
      }
      else
      {
        sub_252784638((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_252831AF8();
      sub_252831258();
      uint64_t result = sub_252831B18();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *unint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_2527933EC(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_252822774(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E950);
  char v42 = a2;
  uint64_t v6 = sub_2528318E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  os_log_type_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    char v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    BOOL v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_252831AF8();
    sub_252831258();
    uint64_t result = sub_252831B18();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    int64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *int64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  char v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_252822A9C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E960);
  char v39 = a2;
  uint64_t result = sub_2528318E8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v38 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v20 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v21 = v20 | (v8 << 6);
      }
      else
      {
        int64_t v22 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v8;
        if (!v23)
        {
          int64_t v8 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v8];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              if ((v39 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
              if (v36 >= 64) {
                bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v38 = -1 << v36;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v8 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v8];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v24;
          }
        }
LABEL_30:
        unint64_t v11 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v8 << 6);
      }
      uint64_t v29 = 16 * v21;
      uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + v29);
      uint64_t v32 = *v30;
      uint64_t v31 = v30[1];
      uint64_t v33 = (uint64_t *)(*(void *)(v5 + 56) + v29);
      uint64_t v34 = *v33;
      uint64_t v35 = v33[1];
      if ((v39 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_252831AF8();
      sub_252831258();
      uint64_t result = sub_252831B18();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v15 == v26;
          if (v15 == v26) {
            unint64_t v15 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v15);
        }
        while (v28 == -1);
        unint64_t v16 = __clz(__rbit64(~v28)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = 16 * v16;
      uint64_t v18 = (void *)(*(void *)(v7 + 48) + v17);
      *uint64_t v18 = v32;
      v18[1] = v31;
      unint64_t v19 = (void *)(*(void *)(v7 + 56) + v17);
      *unint64_t v19 = v34;
      v19[1] = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

void *sub_252822DA0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D158);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2528318D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    unint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *int64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_252822F5C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2528318D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_252784638(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v19;
    v21[1] = v18;
    sub_2527933EC(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_252823144()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E950);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2528318D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *int64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_252823300()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E960);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2528318D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *int64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2528234BC(unint64_t a1)
{
  return sub_252821BA0(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_2528234D0(void *a1)
{
  return sub_252821A90(0, a1[2], 0, a1);
}

void *sub_2528234E4(void *result, uint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5 = result;
  uint64_t v6 = HIBYTE(a5) & 0xF;
  uint64_t v12 = a4;
  unint64_t v13 = a5;
  if ((a5 & 0x2000000000000000) == 0) {
    uint64_t v6 = a4 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v14 = v6;
  if (!a2)
  {
    uint64_t v7 = 0;
LABEL_14:
    *uint64_t v5 = a4;
    v5[1] = a5;
    uint64_t v5[2] = 0;
    v5[3] = v6;
    return (void *)v7;
  }
  uint64_t v7 = a3;
  if (!a3) {
    goto LABEL_14;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    int64_t v8 = a2;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = sub_2528313C8();
      if (!v11) {
        break;
      }
      ++v9;
      *int64_t v8 = v10;
      v8[1] = v11;
      v8 += 2;
      if (v7 == v9)
      {
        a4 = v12;
        a5 = v13;
        goto LABEL_13;
      }
    }
    a4 = v12;
    a5 = v13;
    uint64_t v7 = v9;
LABEL_13:
    uint64_t v6 = v14;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void *sub_2528235A0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E968);
  uint64_t v4 = (void *)swift_allocObject();
  int64_t v5 = _swift_stdlib_malloc_size(v4);
  uint64_t v6 = v5 - 32;
  if (v5 < 32) {
    uint64_t v6 = v5 - 17;
  }
  v4[2] = a1;
  v4[3] = 2 * (v6 >> 4);
  return v4;
}

uint64_t sub_252823618(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_252831908();
  __break(1u);
  return result;
}

uint64_t sub_25282370C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_2528308C8() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_252831908();
  __break(1u);
  return result;
}

uint64_t sub_252823864(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_252831908();
  __break(1u);
  return result;
}

void *sub_252823958(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v2 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  uint64_t v3 = (void *)MEMORY[0x263F8EE78];
  do
  {
    uint64_t v5 = *(v2 - 1);
    uint64_t v4 = *v2;
    swift_bridgeObjectRetain_n();
    uint64_t v6 = sub_252821644();
    if (*(void *)(v6 + 16) && (uint64_t v7 = sub_2527D9A38(v5, v4), (v8 & 1) != 0))
    {
      uint64_t v9 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v7);
      uint64_t v11 = *v9;
      uint64_t v10 = v9[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_252821E08(0, v3[2] + 1, 1, v3);
      }
      unint64_t v13 = v3[2];
      unint64_t v12 = v3[3];
      if (v13 >= v12 >> 1) {
        uint64_t v3 = sub_252821E08((void *)(v12 > 1), v13 + 1, 1, v3);
      }
      v3[2] = v13 + 1;
      uint64_t v14 = &v3[2 * v13];
      v14[4] = v11;
      v14[5] = v10;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
    }
    v2 += 2;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

unint64_t sub_252823AC4()
{
  unint64_t result = qword_269C1E938;
  if (!qword_269C1E938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E938);
  }
  return result;
}

unint64_t sub_252823B1C()
{
  unint64_t result = qword_269C1E940;
  if (!qword_269C1E940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E940);
  }
  return result;
}

uint64_t method lookup function for Geohash(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Geohash);
}

uint64_t dispatch thunk of Geohash.encode(latitude:longitude:length:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of Geohash.decode(geohash:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

unsigned char *storeEnumTagSinglePayload for Geohash.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x252823C80);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Geohash.Error()
{
  return &type metadata for Geohash.Error;
}

unint64_t sub_252823CB8()
{
  unint64_t result = qword_269C1E948;
  if (!qword_269C1E948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E948);
  }
  return result;
}

uint64_t sub_252823D0C(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_252831388();
    return sub_252831478();
  }
  return result;
}

uint64_t sub_252823DA8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BF28);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_252831908();
  __break(1u);
  return result;
}

uint64_t sub_252823EB4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_252831908();
  __break(1u);
  return result;
}

uint64_t sub_252823FAC@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v52 = a1;
  unint64_t v5 = (void *)sub_252830B28();
  id v6 = (id)*(v5 - 1);
  MEMORY[0x270FA5388](v5);
  char v8 = (uint64_t *)((char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B22BD58);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v51 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269C1CE90 != -1) {
LABEL_19:
  }
    swift_once();
  uint64_t v11 = sub_252831158();
  uint64_t v53 = __swift_project_value_buffer(v11, (uint64_t)qword_269C2D250);
  unint64_t v12 = sub_252831138();
  os_log_type_t v13 = sub_2528315F8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_25277D000, v12, v13, "Trying to locate geohash file in geohash-2 folder.", v14, 2u);
    MEMORY[0x2533BE070](v14, -1, -1);
  }

  type metadata accessor for Geohash();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = 0;
  *(void *)(inited + 24) = 0;
  sub_25282066C(8, a2, a3);
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_252823D0C(2);
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  uint64_t v54 = MEMORY[0x2533BD110](v16, v18, v20, v22);
  unint64_t v24 = v23;
  swift_bridgeObjectRelease();
  if (sub_252831378() < 2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_252831138();
    os_log_type_t v36 = sub_252831618();
    if (os_log_type_enabled(v35, v36))
    {
      int64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      v55[0] = v38;
      *(_DWORD *)int64_t v37 = 136315138;
      swift_bridgeObjectRetain();
      void v55[2] = sub_25278F894(v54, v24, v55);
      sub_252831698();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25277D000, v35, v36, "Unable to locate matching geohash in geohash-2 Folder for : %s", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533BE070](v38, -1, -1);
      MEMORY[0x2533BE070](v37, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v39 = v52;
    uint64_t v40 = sub_252830BD8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 1, 1, v40);
  }
  else
  {
    unint64_t v48 = v8;
    unint64_t v49 = (void (**)(uint64_t *, void, void *))v6;
    os_log_type_t v50 = v5;
    int64_t v25 = self;
    if (qword_26B22BF60 != -1) {
      swift_once();
    }
    char v8 = &qword_26B22C020;
    while (1)
    {
      v55[0] = qword_26B22C020;
      v55[1] = *(void *)algn_26B22C028;
      swift_bridgeObjectRetain();
      sub_2528313A8();
      sub_2528313A8();
      swift_bridgeObjectRetain();
      sub_2528313A8();
      swift_bridgeObjectRelease();
      sub_2528313A8();
      id v26 = objc_msgSend(v25, sel_defaultManager);
      unint64_t v5 = (void *)sub_252831298();
      id v6 = objc_msgSend(v26, sel_fileExistsAtPath_, v5);

      if (v6) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_252831378();
      swift_bridgeObjectRelease();
      if (__OFSUB__(v27, 1))
      {
        __break(1u);
        goto LABEL_19;
      }
      uint64_t v28 = sub_252823D0C(v27 - 1);
      uint64_t v30 = v29;
      uint64_t v32 = v31;
      uint64_t v34 = v33;
      swift_bridgeObjectRelease();
      MEMORY[0x2533BD110](v28, v30, v32, v34);
      swift_bridgeObjectRelease();
      if (sub_252831378() <= 1) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v42 = sub_252831138();
    os_log_type_t v43 = sub_252831628();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v44 = 0;
      _os_log_impl(&dword_25277D000, v42, v43, "Located geohash file in geohash-2 folder.", v44, 2u);
      MEMORY[0x2533BE070](v44, -1, -1);
    }

    uint64_t v45 = sub_252830BD8();
    int64_t v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56);
    v46(v51, 1, 1, v45);
    v49[13](v48, *MEMORY[0x263F06E50], v50);
    uint64_t v47 = v52;
    sub_252830BB8();
    return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v46)(v47, 0, 1, v45);
  }
}

id sub_252824658()
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  char v31 = 1;
  id v0 = objc_msgSend(self, sel_defaultManager);
  uint64_t v1 = (void *)sub_252831298();
  unsigned int v2 = objc_msgSend(v0, sel_fileExistsAtPath_isDirectory_, v1, &v31);

  if (v2)
  {
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_252831158();
    __swift_project_value_buffer(v3, (uint64_t)qword_269C2D250);
    uint64_t v4 = sub_252831138();
    os_log_type_t v5 = sub_252831618();
    if (os_log_type_enabled(v4, v5))
    {
      id v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v6 = 0;
      _os_log_impl(&dword_25277D000, v4, v5, "Path exists", v6, 2u);
      MEMORY[0x2533BE070](v6, -1, -1);
    }

    uint64_t v7 = sub_252831138();
    os_log_type_t v8 = sub_252831618();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_25277D000, v7, v8, "Deleting existing file", v9, 2u);
      MEMORY[0x2533BE070](v9, -1, -1);
    }

    uint64_t v10 = (void *)sub_252831298();
    id v30 = 0;
    unsigned int v11 = objc_msgSend(v0, sel_removeItemAtPath_error_, v10, &v30);

    if (v11)
    {
      id v12 = v30;
    }
    else
    {
      id v13 = v30;
      uint64_t v14 = (void *)sub_252830B18();

      swift_willThrow();
    }
  }
  unint64_t v15 = (void *)sub_252831298();
  id v30 = 0;
  id v16 = objc_msgSend(v0, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v15, 1, 0, &v30);

  if (v16)
  {
    id v17 = v30;
  }
  else
  {
    id v18 = v30;
    uint64_t v19 = (void *)sub_252830B18();

    swift_willThrow();
    if (qword_269C1CE90 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_252831158();
    __swift_project_value_buffer(v20, (uint64_t)qword_269C2D250);
    id v21 = v19;
    id v22 = v19;
    unint64_t v23 = sub_252831138();
    os_log_type_t v24 = sub_252831618();
    if (os_log_type_enabled(v23, v24))
    {
      int64_t v25 = (uint8_t *)swift_slowAlloc();
      id v26 = (void *)swift_slowAlloc();
      *(_DWORD *)int64_t v25 = 138412290;
      id v27 = v19;
      uint64_t v28 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v30 = v28;
      sub_252831698();
      *id v26 = v28;

      _os_log_impl(&dword_25277D000, v23, v24, "Unable to create GeoHash Directory! %@", v25, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D030);
      swift_arrayDestroy();
      MEMORY[0x2533BE070](v26, -1, -1);
      MEMORY[0x2533BE070](v25, -1, -1);
    }
    else
    {
    }
  }
  return v16;
}

void sub_252824AB4()
{
  qword_269C1E978 = (uint64_t)&unk_2702C3E40;
}

uint64_t sub_252824AC8(uint64_t result, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    uint64_t v4 = result % v3;
    if ((v4 & 0x8000000000000000) == 0) {
      return *(unsigned __int8 *)(a3 + v4 + 32) ^ a2;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t NetworkError.errorDescription.getter()
{
  uint64_t v1 = sub_252830EF8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for NetworkError();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (unint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_252812C54(v0, (uint64_t)v7);
  unint64_t v8 = 0xD00000000000002ELL;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unint64_t v13 = 0xD00000000000003ELL;
      unint64_t v14 = 0x800000025283DE50;
      unint64_t v11 = 0;
      unint64_t v12 = 0xE000000000000000;
      sub_2528317C8();
      swift_bridgeObjectRelease();
      unint64_t v11 = 0xD000000000000015;
      unint64_t v12 = 0x800000025283DEC0;
      sub_2528313A8();
      swift_bridgeObjectRelease();
      sub_2528313A8();
      swift_bridgeObjectRelease();
      goto LABEL_21;
    case 2u:
      unint64_t v9 = *v7;
      unint64_t v13 = 0;
      unint64_t v14 = 0xE000000000000000;
      sub_2528317C8();
      sub_2528313A8();
      unint64_t v11 = v9;
      sub_252831A38();
      sub_2528313A8();
      swift_bridgeObjectRelease();
      sub_2528313A8();
LABEL_21:
      unint64_t v8 = v13;
      break;
    case 3u:
      return v8;
    case 4u:
      unint64_t v8 = 0xD000000000000038;
      break;
    case 5u:
      unint64_t v8 = 0xD000000000000020;
      break;
    case 6u:
      unint64_t v8 = 0xD000000000000014;
      break;
    case 7u:
      unint64_t v8 = 0xD000000000000019;
      break;
    case 8u:
      unint64_t v8 = 0xD000000000000038;
      break;
    case 9u:
      unint64_t v8 = 0xD000000000000024;
      break;
    case 0xAu:
    case 0x10u:
      unint64_t v8 = 0xD00000000000001BLL;
      break;
    case 0xBu:
      unint64_t v8 = 0xD000000000000033;
      break;
    case 0xCu:
      unint64_t v8 = 0xD00000000000003ALL;
      break;
    case 0xDu:
      unint64_t v8 = 0xD00000000000001ALL;
      break;
    case 0xEu:
      unint64_t v8 = 0x6E49206E656B6F54;
      break;
    case 0xFu:
      unint64_t v8 = 0xD00000000000001CLL;
      break;
    case 0x11u:
      unint64_t v8 = 0xD00000000000004FLL;
      break;
    case 0x12u:
      unint64_t v8 = 0x7270654420495041;
      break;
    case 0x13u:
      unint64_t v8 = 0xD00000000000003ALL;
      break;
    default:
      (*(void (**)(char *, unint64_t *, uint64_t))(v2 + 32))(v4, v7, v1);
      unint64_t v13 = 0;
      unint64_t v14 = 0xE000000000000000;
      sub_2528317C8();
      sub_2528313A8();
      sub_252831898();
      sub_2528313A8();
      unint64_t v8 = v13;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      break;
  }
  return v8;
}

unint64_t NetworkInternalError.errorDescription.getter()
{
  unint64_t result = 0xD00000000000002BLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000032;
      break;
    case 2:
      unint64_t result = 0xD000000000000027;
      break;
    case 3:
      unint64_t result = 0xD000000000000024;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t UtilityTerritoryConfigError.hash(into:)()
{
  return sub_252831B08();
}

BOOL static UtilityTerritoryConfigError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2528250D8(void (*a1)(void))
{
  a1();

  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_252825110(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_252825138(void *a1)
{
  uint64_t v2 = (uint8_t *)sub_252831818();
  uint64_t v3 = (long long *)*((void *)v2 - 1);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v80 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E9A8);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_252831828();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  id v16 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (long long *)((char *)&v80 - v18);
  MEMORY[0x270FA5388](v17);
  uint64_t v86 = (char *)&v80 - v20;
  v90[0] = (uint64_t)a1;
  id v21 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D4C0);
  char v22 = swift_dynamicCast();
  unint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (v22)
  {
    uint64_t v84 = v2;
    os_log_type_t v85 = v3;
    v23(v11, 0, 1, v12);
    os_log_type_t v24 = v86;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v86, v11, v12);
    int64_t v25 = *(void (**)(long long *, char *, uint64_t))(v13 + 16);
    v25(v19, v24, v12);
    int v26 = (*(uint64_t (**)(long long *, uint64_t))(v13 + 88))(v19, v12);
    if (v26 == *MEMORY[0x263F8DCB0])
    {
      (*(void (**)(long long *, uint64_t))(v13 + 96))(v19, v12);
      if (qword_26B22BF18 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_252831158();
      __swift_project_value_buffer(v27, (uint64_t)qword_26B22C0B8);
      uint64_t v28 = sub_252831138();
      os_log_type_t v29 = sub_252831618();
      if (!os_log_type_enabled(v28, v29)) {
        goto LABEL_14;
      }
      id v30 = (uint8_t *)swift_slowAlloc();
      char v31 = v19;
      uint64_t v32 = swift_slowAlloc();
      v90[0] = v32;
      *(_DWORD *)id v30 = 136315138;
      uint64_t v33 = sub_252831B78();
      v89[0] = sub_25278F894(v33, v34, v90);
      sub_252831698();
      swift_bridgeObjectRelease();
      uint64_t v35 = "DecodingError.typeMismatch : %s";
LABEL_13:
      _os_log_impl(&dword_25277D000, v28, v29, v35, v30, 0xCu);
      swift_arrayDestroy();
      uint64_t v39 = v32;
      uint64_t v19 = v31;
      MEMORY[0x2533BE070](v39, -1, -1);
      MEMORY[0x2533BE070](v30, -1, -1);
LABEL_14:

      (*(void (**)(char *, uint64_t))(v13 + 8))(v86, v12);
      uint64_t v41 = v84;
      uint64_t v40 = v85;
      char v42 = (uint64_t *)&unk_269C1E9C0;
LABEL_15:
      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(v42);
      (*((void (**)(char *, uint8_t *))v40 + 1))((char *)v19 + *(int *)(v43 + 48), v41);
      goto LABEL_16;
    }
    if (v26 == *MEMORY[0x263F8DCC0])
    {
      (*(void (**)(long long *, uint64_t))(v13 + 96))(v19, v12);
      if (qword_26B22BF18 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_252831158();
      __swift_project_value_buffer(v36, (uint64_t)qword_26B22C0B8);
      uint64_t v28 = sub_252831138();
      os_log_type_t v29 = sub_252831618();
      if (!os_log_type_enabled(v28, v29)) {
        goto LABEL_14;
      }
      id v30 = (uint8_t *)swift_slowAlloc();
      char v31 = v19;
      uint64_t v32 = swift_slowAlloc();
      v90[0] = v32;
      *(_DWORD *)id v30 = 136315138;
      uint64_t v37 = sub_252831B78();
      v89[0] = sub_25278F894(v37, v38, v90);
      sub_252831698();
      swift_bridgeObjectRelease();
      uint64_t v35 = "DecodingError.valueNotFound : %s";
      goto LABEL_13;
    }
    if (v26 == *MEMORY[0x263F8DCA8])
    {
      (*(void (**)(long long *, uint64_t))(v13 + 96))(v19, v12);
      sub_25280A568(v19, (uint64_t)v90);
      if (qword_26B22BF18 != -1) {
        swift_once();
      }
      uint64_t v47 = sub_252831158();
      __swift_project_value_buffer(v47, (uint64_t)qword_26B22C0B8);
      sub_252826B1C((uint64_t)v90, (uint64_t)v89);
      unint64_t v48 = sub_252831138();
      os_log_type_t v49 = sub_252831618();
      if (os_log_type_enabled(v48, v49))
      {
        os_log_type_t v50 = (uint8_t *)swift_slowAlloc();
        uint64_t v83 = swift_slowAlloc();
        uint64_t v88 = v83;
        *(_DWORD *)os_log_type_t v50 = 136315138;
        uint64_t v82 = (uint64_t)(v50 + 4);
        __swift_project_boxed_opaque_existential_1(v89, v89[3]);
        uint64_t v51 = sub_252831B48();
        uint64_t v87 = sub_25278F894(v51, v52, &v88);
        sub_252831698();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v89);
        _os_log_impl(&dword_25277D000, v48, v49, "DecodingError.keyNotFound : %s", v50, 0xCu);
        uint64_t v53 = v83;
        swift_arrayDestroy();
        MEMORY[0x2533BE070](v53, -1, -1);
        MEMORY[0x2533BE070](v50, -1, -1);
      }
      else
      {

        __swift_destroy_boxed_opaque_existential_0((uint64_t)v89);
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v90);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v86, v12);
      uint64_t v41 = v84;
      uint64_t v40 = v85;
      char v42 = (uint64_t *)&unk_269C1E9B8;
      goto LABEL_15;
    }
    if (v26 == *MEMORY[0x263F8DCB8])
    {
      (*(void (**)(long long *, uint64_t))(v13 + 96))(v19, v12);
      uint64_t v54 = v85;
      unint64_t v55 = v19;
      uint64_t v56 = v84;
      (*((void (**)(char *, long long *, uint8_t *))v85 + 4))(v8, v55, v84);
      if (qword_26B22BF18 != -1) {
        swift_once();
      }
      uint64_t v57 = sub_252831158();
      __swift_project_value_buffer(v57, (uint64_t)qword_26B22C0B8);
      (*((void (**)(char *, char *, uint8_t *))v54 + 2))(v6, v8, v56);
      uint64_t v58 = sub_252831138();
      os_log_type_t v59 = sub_252831618();
      int v60 = v59;
      if (os_log_type_enabled(v58, v59))
      {
        LODWORD(v83) = v60;
        uint64_t v61 = (uint8_t *)swift_slowAlloc();
        uint64_t v82 = swift_slowAlloc();
        v90[0] = v82;
        *(_DWORD *)uint64_t v61 = 136315138;
        uint64_t v80 = v61 + 4;
        uint64_t v81 = v61;
        uint64_t v62 = sub_2528317F8();
        uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E9B0);
        uint64_t v64 = MEMORY[0x2533BD2E0](v62, v63);
        unint64_t v66 = v65;
        swift_bridgeObjectRelease();
        v89[0] = sub_25278F894(v64, v66, v90);
        sub_252831698();
        swift_bridgeObjectRelease();
        uint64_t v67 = (void (*)(char *, uint8_t *))*((void *)v85 + 1);
        v67(v6, v56);
        unint64_t v68 = v81;
        _os_log_impl(&dword_25277D000, v58, (os_log_type_t)v83, "DecodingError.dataCorrupted : %s", v81, 0xCu);
        uint64_t v69 = v82;
        swift_arrayDestroy();
        MEMORY[0x2533BE070](v69, -1, -1);
        MEMORY[0x2533BE070](v68, -1, -1);
      }
      else
      {

        uint64_t v67 = (void (*)(char *, uint8_t *))*((void *)v54 + 1);
        v67(v6, v56);
      }
      v67(v8, v56);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v86, v12);
    }
    else
    {
      if (qword_26B22BF18 != -1) {
        swift_once();
      }
      uint64_t v70 = sub_252831158();
      __swift_project_value_buffer(v70, (uint64_t)qword_26B22C0B8);
      v25((long long *)v16, v86, v12);
      unint64_t v71 = sub_252831138();
      os_log_type_t v72 = sub_252831618();
      if (os_log_type_enabled(v71, v72))
      {
        uint64_t v73 = (uint8_t *)swift_slowAlloc();
        uint64_t v74 = (void *)swift_slowAlloc();
        uint64_t v84 = v73;
        os_log_type_t v85 = v19;
        *(_DWORD *)uint64_t v73 = 138412290;
        uint64_t v83 = (uint64_t)(v73 + 4);
        swift_allocError();
        v25(v75, v16, v12);
        uint64_t v76 = _swift_stdlib_bridgeErrorToNSError();
        v90[0] = v76;
        uint64_t v19 = v85;
        sub_252831698();
        *uint64_t v74 = v76;
        uint64_t v77 = *(void (**)(char *, uint64_t))(v13 + 8);
        v77(v16, v12);
        os_log_type_t v78 = v72;
        uint64_t v79 = v84;
        _os_log_impl(&dword_25277D000, v71, v78, "Uncaught DecodingError %@", v84, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269C1D030);
        swift_arrayDestroy();
        MEMORY[0x2533BE070](v74, -1, -1);
        MEMORY[0x2533BE070](v79, -1, -1);
      }
      else
      {

        uint64_t v77 = *(void (**)(char *, uint64_t))(v13 + 8);
        v77(v16, v12);
      }
      v77(v86, v12);
      v77((char *)v19, v12);
    }
  }
  else
  {
    v23(v11, 1, 1, v12);
    sub_252781C54((uint64_t)v11, &qword_269C1E9A8);
  }
LABEL_16:
  type metadata accessor for NetworkError();
  sub_25282753C((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
  uint64_t v44 = swift_allocError();
  *uint64_t v45 = 1;
  swift_storeEnumTagMultiPayload();
  return v44;
}

uint64_t _s19HomeUtilityServices12NetworkErrorO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252830EF8();
  uint64_t v27 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for NetworkError();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (unsigned __int8 *)&v26 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C1E998);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = &v19[*(int *)(v17 + 56)];
  sub_252812C54(a1, (uint64_t)v19);
  sub_252812C54(a2, (uint64_t)v20);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_252812C54((uint64_t)v19, (uint64_t)v13);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_44;
      }
      BOOL v21 = *v13 == *v20;
      goto LABEL_8;
    case 2u:
      sub_252812C54((uint64_t)v19, (uint64_t)v10);
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_44;
      }
      BOOL v21 = *v10 == *(void *)v20;
LABEL_8:
      BOOL v22 = v21;
      goto LABEL_47;
    case 3u:
      if (swift_getEnumCaseMultiPayload() == 3) {
        goto LABEL_12;
      }
      goto LABEL_44;
    case 4u:
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_44;
      }
      goto LABEL_12;
    case 5u:
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_44;
      }
      goto LABEL_12;
    case 6u:
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_44;
      }
      goto LABEL_12;
    case 7u:
      if (swift_getEnumCaseMultiPayload() != 7) {
        goto LABEL_44;
      }
      goto LABEL_12;
    case 8u:
      if (swift_getEnumCaseMultiPayload() != 8) {
        goto LABEL_44;
      }
      goto LABEL_12;
    case 9u:
      if (swift_getEnumCaseMultiPayload() != 9) {
        goto LABEL_44;
      }
      goto LABEL_12;
    case 0xAu:
      if (swift_getEnumCaseMultiPayload() != 10) {
        goto LABEL_44;
      }
      goto LABEL_12;
    case 0xBu:
      if (swift_getEnumCaseMultiPayload() != 11) {
        goto LABEL_44;
      }
      goto LABEL_12;
    case 0xCu:
      if (swift_getEnumCaseMultiPayload() != 12) {
        goto LABEL_44;
      }
      goto LABEL_12;
    case 0xDu:
      if (swift_getEnumCaseMultiPayload() != 13) {
        goto LABEL_44;
      }
      goto LABEL_12;
    case 0xEu:
      if (swift_getEnumCaseMultiPayload() != 14) {
        goto LABEL_44;
      }
      goto LABEL_12;
    case 0xFu:
      if (swift_getEnumCaseMultiPayload() != 15) {
        goto LABEL_44;
      }
      goto LABEL_12;
    case 0x10u:
      if (swift_getEnumCaseMultiPayload() != 16) {
        goto LABEL_44;
      }
      goto LABEL_12;
    case 0x11u:
      if (swift_getEnumCaseMultiPayload() != 17) {
        goto LABEL_44;
      }
      goto LABEL_12;
    case 0x12u:
      if (swift_getEnumCaseMultiPayload() != 18) {
        goto LABEL_44;
      }
      goto LABEL_12;
    case 0x13u:
      if (swift_getEnumCaseMultiPayload() != 19) {
        goto LABEL_44;
      }
LABEL_12:
      sub_2527D325C((uint64_t)v19);
      return 1;
    default:
      sub_252812C54((uint64_t)v19, (uint64_t)v15);
      if (swift_getEnumCaseMultiPayload())
      {
        (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v4);
LABEL_44:
        sub_252781C54((uint64_t)v19, &qword_269C1E998);
        return 0;
      }
      else
      {
        uint64_t v24 = v27;
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v6, v20, v4);
        sub_25282753C(&qword_269C1E9A0, MEMORY[0x263F07A00]);
        sub_252831488();
        sub_252831488();
        BOOL v22 = v29 == v28;
        int64_t v25 = *(void (**)(char *, uint64_t))(v24 + 8);
        v25(v6, v4);
        v25(v15, v4);
LABEL_47:
        sub_2527D325C((uint64_t)v19);
      }
      return v22;
  }
}

uint64_t type metadata accessor for NetworkError()
{
  uint64_t result = qword_26B22BBE0;
  if (!qword_26B22BBE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_252826350()
{
  return sub_25282753C((unint64_t *)&qword_269C1D948, (void (*)(uint64_t))type metadata accessor for NetworkError);
}

unint64_t sub_25282639C()
{
  unint64_t result = qword_269C1E980;
  if (!qword_269C1E980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E980);
  }
  return result;
}

unint64_t sub_2528263F4()
{
  unint64_t result = qword_269C1E988;
  if (!qword_269C1E988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E988);
  }
  return result;
}

unint64_t sub_25282644C()
{
  unint64_t result = qword_269C1E990;
  if (!qword_269C1E990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C1E990);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for NetworkError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_252830EF8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}