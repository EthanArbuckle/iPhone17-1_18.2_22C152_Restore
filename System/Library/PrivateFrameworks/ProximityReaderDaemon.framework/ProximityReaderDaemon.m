uint64_t sub_25AB14164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void v9[3];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  v1 = MEMORY[0x270FA5388](v0);
  v9[2] = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  v3 = sub_25AC32000();
  v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AC32040();
  swift_allocObject();
  sub_25AC32030();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F06198], v3);
  sub_25AC32010();
  v7 = sub_25AC32020();
  swift_release();
  return v7;
}

uint64_t sub_25AB145C0(uint64_t a1)
{
  v38[4] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](v4);
  v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25AB14164();
  if (v11 >> 60 == 15) {
    return 0;
  }
  uint64_t v13 = v10;
  unint64_t v14 = v11;
  v36 = v6;
  v15 = self;
  v16 = (void *)sub_25AC32380();
  v38[0] = 0;
  id v17 = objc_msgSend(v15, sel_JSONObjectWithData_options_error_, v16, 4, v38);

  if (!v17)
  {
    uint64_t v35 = v13;
    id v19 = v38[0];
    v20 = (void *)sub_25AC321F0();

    swift_willThrow();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1, a1);
    uint64_t v21 = sub_25AC34EB0();
    unint64_t v23 = v22;
    if (qword_26A49F808 != -1) {
      swift_once();
    }
    uint64_t v24 = __swift_project_value_buffer(v3, (uint64_t)qword_26A4A1D00);
    uint64_t v25 = (uint64_t)v36;
    sub_25AB150E0(v24, (uint64_t)v36);
    uint64_t v26 = sub_25AC345E0();
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
    {
      sub_25AB16944(v35, v14);

      swift_bridgeObjectRelease();
      sub_25AB15148(v25);
    }
    else
    {
      swift_bridgeObjectRetain();
      v28 = sub_25AC345C0();
      os_log_type_t v29 = sub_25AC352C0();
      v30 = v28;
      if (os_log_type_enabled(v28, v29))
      {
        v31 = (uint8_t *)swift_slowAlloc();
        v34 = (void *)swift_slowAlloc();
        v38[0] = v34;
        *(_DWORD *)v31 = 136315138;
        v33[1] = v31 + 4;
        swift_bridgeObjectRetain();
        uint64_t v37 = sub_25AB56574(v21, v23, (uint64_t *)v38);
        sub_25AC354A0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_25AB11000, v30, v29, "Error encoding %s to Dictionary", v31, 0xCu);
        v32 = v34;
        swift_arrayDestroy();
        MEMORY[0x261151C20](v32, -1, -1);
        MEMORY[0x261151C20](v31, -1, -1);
        sub_25AB16944(v35, v14);
      }
      else
      {
        sub_25AB16944(v35, v14);

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v27 + 8))(v36, v26);
    }
    return 0;
  }
  id v18 = v38[0];
  sub_25AC35500();
  sub_25AB16944(v13, v14);
  swift_unknownObjectRelease();
  sub_25AC34DC0();
  if (swift_dynamicCast()) {
    return v37;
  }
  else {
    return 0;
  }
}

void sub_25AB14A7C()
{
  v20[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v0);
  v2 = (char *)v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v3 = objc_msgSend(self, sel_defaultManager);
  v20[0] = 0;
  id v4 = objc_msgSend(v3, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, 5, 1, 0, 0, v20);

  id v5 = v20[0];
  if (v4)
  {
    sub_25AC322C0();
    id v6 = v5;
  }
  else
  {
    id v7 = v20[0];
    uint64_t v8 = (void *)sub_25AC321F0();

    swift_willThrow();
    if (qword_26A49F808 != -1) {
      swift_once();
    }
    uint64_t v9 = __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1D00);
    sub_25AB150E0(v9, (uint64_t)v2);
    uint64_t v10 = sub_25AC345E0();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v2, 1, v10) == 1)
    {
      sub_25AB15148((uint64_t)v2);
    }
    else
    {
      id v12 = v8;
      uint64_t v13 = sub_25AC345C0();
      os_log_type_t v14 = sub_25AC352B0();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        id v19 = (void *)swift_slowAlloc();
        *(_DWORD *)v15 = 138412290;
        id v16 = v8;
        id v17 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v20[0] = v17;
        sub_25AC354A0();
        id v18 = v19;
        *id v19 = v17;

        _os_log_impl(&dword_25AB11000, v13, v14, "Could not load library URL: %@", v15, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A8);
        swift_arrayDestroy();
        MEMORY[0x261151C20](v18, -1, -1);
        MEMORY[0x261151C20](v15, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v11 + 8))(v2, v10);
    }
    sub_25AC35680();
    __break(1u);
  }
}

uint64_t sub_25AB14E18()
{
  uint64_t v0 = sub_25AC32300();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  id v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v2, qword_26A4A1B78);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1B78);
  sub_25AB14A7C();
  sub_25AC322A0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_25AB14FFC(uint64_t a1)
{
  return sub_25AB15030(a1, qword_26A4A1B90);
}

uint64_t sub_25AB15010(uint64_t a1)
{
  return sub_25AB15030(a1, qword_26A4A1BA8);
}

uint64_t sub_25AB15030(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_25AC32300();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  if (qword_26A49F7A0 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v3, (uint64_t)qword_26A4A1B78);
  return sub_25AC322A0();
}

uint64_t sub_25AB150E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25AB15148(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25AB151A8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_25AB151B0(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FAF0, type metadata accessor for ConfigurationError);
  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_25AB1521C(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FAF0, type metadata accessor for ConfigurationError);
  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_25AB1528C(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FB20, type metadata accessor for ConfigurationError);
  return MEMORY[0x270EEF788](a1, v2);
}

id sub_25AB152F8()
{
  return *v0;
}

uint64_t sub_25AB15300(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FBB8, type metadata accessor for ReadError);
  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_25AB1536C(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FBB8, type metadata accessor for ReadError);
  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_25AB153D8(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FBE8, type metadata accessor for ReadError);
  return MEMORY[0x270EEF788](a1, v2);
}

void sub_25AB15444(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_25AB15450(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned __int8 *sub_25AB1545C@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_25AB1546C(uint64_t a1, uint64_t a2)
{
  return sub_25AB167AC(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_25AB15484(uint64_t a1, id *a2)
{
  uint64_t result = sub_25AC34E20();
  *a2 = 0;
  return result;
}

uint64_t sub_25AB154FC(uint64_t a1, id *a2)
{
  char v3 = sub_25AC34E30();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_25AB1557C@<X0>(uint64_t *a1@<X8>)
{
  sub_25AC34E40();
  uint64_t v2 = sub_25AC34E10();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_25AB155C0(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FB30, type metadata accessor for SecureChannelError);
  return MEMORY[0x270EEF7E8](a1, v2);
}

uint64_t sub_25AB1562C(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FB30, type metadata accessor for SecureChannelError);
  return MEMORY[0x270EEF7A0](a1, v2);
}

uint64_t sub_25AB15698(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_25AB16B1C(&qword_26A49FB30, type metadata accessor for SecureChannelError);
  id v5 = a1;
  return MEMORY[0x270EEF790](v5, a2, v4);
}

uint64_t sub_25AB15728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25AB16B1C(&qword_26A49FB30, type metadata accessor for SecureChannelError);
  return MEMORY[0x270EEF7D0](a1, a2, v4);
}

uint64_t sub_25AB157A8(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FB20, type metadata accessor for ConfigurationError);
  return MEMORY[0x270EEF7E8](a1, v2);
}

uint64_t sub_25AB15814(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FB20, type metadata accessor for ConfigurationError);
  return MEMORY[0x270EEF7A0](a1, v2);
}

uint64_t sub_25AB15880(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_25AB16B1C(&qword_26A49FB20, type metadata accessor for ConfigurationError);
  id v5 = a1;
  return MEMORY[0x270EEF790](v5, a2, v4);
}

uint64_t sub_25AB15910(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25AB16B1C(&qword_26A49FB20, type metadata accessor for ConfigurationError);
  return MEMORY[0x270EEF7D0](a1, a2, v4);
}

uint64_t sub_25AB1598C()
{
  return sub_25AC34E40();
}

uint64_t sub_25AB1599C(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FB78, type metadata accessor for SPRXPCError);
  return MEMORY[0x270EEF7E8](a1, v2);
}

uint64_t sub_25AB15A08(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FB78, type metadata accessor for SPRXPCError);
  return MEMORY[0x270EEF7A0](a1, v2);
}

uint64_t sub_25AB15A74(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_25AB16B1C(&qword_26A49FB78, type metadata accessor for SPRXPCError);
  id v5 = a1;
  return MEMORY[0x270EEF790](v5, a2, v4);
}

uint64_t sub_25AB15B04()
{
  id v1 = *v0;
  uint64_t v2 = sub_25AC35420();

  return v2;
}

uint64_t sub_25AB15B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25AB16B1C(&qword_26A49FB78, type metadata accessor for SPRXPCError);
  return MEMORY[0x270EEF7D0](a1, a2, v4);
}

void *sub_25AB15BB8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

BOOL sub_25AB15BC8(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_25AB15BDC(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FAA8, type metadata accessor for PINControllerError);
  return MEMORY[0x270EEF7E8](a1, v2);
}

uint64_t sub_25AB15C48(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FAA8, type metadata accessor for PINControllerError);
  return MEMORY[0x270EEF7A0](a1, v2);
}

uint64_t sub_25AB15CB4(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_25AB16B1C(&qword_26A49FAA8, type metadata accessor for PINControllerError);
  id v5 = a1;
  return MEMORY[0x270EEF790](v5, a2, v4);
}

uint64_t sub_25AB15D44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25AB16B1C(&qword_26A49FAA8, type metadata accessor for PINControllerError);
  return MEMORY[0x270EEF7D0](a1, a2, v4);
}

uint64_t sub_25AB15DC0(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FBE8, type metadata accessor for ReadError);
  return MEMORY[0x270EEF7E8](a1, v2);
}

uint64_t sub_25AB15E2C(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FBE8, type metadata accessor for ReadError);
  return MEMORY[0x270EEF7A0](a1, v2);
}

uint64_t sub_25AB15E98(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_25AB16B1C(&qword_26A49FBE8, type metadata accessor for ReadError);
  id v5 = a1;
  return MEMORY[0x270EEF790](v5, a2, v4);
}

uint64_t sub_25AB15F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25AB16B1C(&qword_26A49FBE8, type metadata accessor for ReadError);
  return MEMORY[0x270EEF7D0](a1, a2, v4);
}

uint64_t sub_25AB15FA4()
{
  return sub_25AC359D0();
}

uint64_t sub_25AB16004(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FB38, type metadata accessor for SecureChannelError);
  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_25AB16070(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FB38, type metadata accessor for SecureChannelError);
  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_25AB160DC(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FB30, type metadata accessor for SecureChannelError);
  return MEMORY[0x270EEF788](a1, v2);
}

uint64_t sub_25AB16148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25AB16B1C(&qword_26A49FB30, type metadata accessor for SecureChannelError);
  return MEMORY[0x270EEF7B8](a1, a2, a3, v6);
}

uint64_t sub_25AB161CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25AB16B1C(&qword_26A49FB20, type metadata accessor for ConfigurationError);
  return MEMORY[0x270EEF7B8](a1, a2, a3, v6);
}

uint64_t sub_25AB16250(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FB80, type metadata accessor for SPRXPCError);
  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_25AB162BC(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FB80, type metadata accessor for SPRXPCError);
  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_25AB16328(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FB78, type metadata accessor for SPRXPCError);
  return MEMORY[0x270EEF788](a1, v2);
}

uint64_t sub_25AB16394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25AB16B1C(&qword_26A49FB78, type metadata accessor for SPRXPCError);
  return MEMORY[0x270EEF7B8](a1, a2, a3, v6);
}

uint64_t sub_25AB16418(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FAB0, type metadata accessor for PINControllerError);
  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_25AB16484(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FAB0, type metadata accessor for PINControllerError);
  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_25AB164F0(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FAA8, type metadata accessor for PINControllerError);
  return MEMORY[0x270EEF788](a1, v2);
}

uint64_t sub_25AB1655C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25AB16B1C(&qword_26A49FAA8, type metadata accessor for PINControllerError);
  return MEMORY[0x270EEF7B8](a1, a2, a3, v6);
}

uint64_t sub_25AB165E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25AB16B1C(&qword_26A49FBE8, type metadata accessor for ReadError);
  return MEMORY[0x270EEF7B8](a1, a2, a3, v6);
}

uint64_t sub_25AB16664@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_25AC34E10();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_25AB166AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25AC34E40();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25AB166D8(uint64_t a1)
{
  uint64_t v2 = sub_25AB16B1C(&qword_26A49FBF0, type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_25AB16B1C(&qword_26A49FBF8, type metadata accessor for URLResourceKey);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_25AB16794(uint64_t a1, uint64_t a2)
{
  return sub_25AB167AC(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_25AB167AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_25AC34E40();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_25AB167F0()
{
  sub_25AC34E40();
  sub_25AC34F20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB16844()
{
  sub_25AC34E40();
  sub_25AC35970();
  sub_25AC34F20();
  uint64_t v0 = sub_25AC359D0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25AB168B8()
{
  uint64_t v0 = sub_25AC34E40();
  uint64_t v2 = v1;
  if (v0 == sub_25AC34E40() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_25AC35870();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_25AB16944(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_25AB16958(a1, a2);
  }
  return a1;
}

uint64_t sub_25AB16958(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

void type metadata accessor for Code(uint64_t a1)
{
}

void type metadata accessor for ConfigurationError(uint64_t a1)
{
}

void type metadata accessor for SPRTransactionOutcomeStatus(uint64_t a1)
{
}

void type metadata accessor for SPRCardEffectiveState(uint64_t a1)
{
}

void type metadata accessor for SPRCardExpirationState(uint64_t a1)
{
}

void type metadata accessor for SPRTransactionCVMType(uint64_t a1)
{
}

void _s3__C4CodeOMa_0(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

void _s3__C4CodeOMa_1(uint64_t a1)
{
}

void type metadata accessor for ReadError(uint64_t a1)
{
}

uint64_t sub_25AB16A8C()
{
  return sub_25AB16B1C(&qword_26A49FA68, type metadata accessor for ReadError);
}

uint64_t sub_25AB16AD4()
{
  return sub_25AB16B1C(&qword_26A49FA70, type metadata accessor for ReadError);
}

uint64_t sub_25AB16B1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25AB16B64()
{
  return sub_25AB16B1C(&qword_26A49FA78, type metadata accessor for URLResourceKey);
}

uint64_t sub_25AB16BAC()
{
  return sub_25AB16B1C(&qword_26A49FA80, type metadata accessor for URLResourceKey);
}

uint64_t sub_25AB16BF4()
{
  return sub_25AB16B1C(&qword_26A49FA88, type metadata accessor for URLResourceKey);
}

uint64_t sub_25AB16C3C()
{
  return sub_25AB16B1C(&qword_26A49FA90, type metadata accessor for ConfigurationError);
}

uint64_t sub_25AB16C84()
{
  return sub_25AB16B1C(&qword_26A49FA98, type metadata accessor for ConfigurationError);
}

uint64_t sub_25AB16CCC()
{
  return sub_25AB16B1C(&qword_26A49FAA0, type metadata accessor for Code);
}

uint64_t sub_25AB16D14()
{
  return sub_25AB16B1C(&qword_26A49FAA8, type metadata accessor for PINControllerError);
}

void type metadata accessor for PINControllerError(uint64_t a1)
{
}

uint64_t sub_25AB16D70()
{
  return sub_25AB16B1C(&qword_26A49FAB0, type metadata accessor for PINControllerError);
}

uint64_t sub_25AB16DB8()
{
  return sub_25AB16B1C(&qword_26A49FAB8, type metadata accessor for PINControllerError);
}

uint64_t sub_25AB16E00()
{
  return sub_25AB16B1C(&qword_26A49FAC0, type metadata accessor for PINControllerError);
}

uint64_t sub_25AB16E48()
{
  return sub_25AB16B1C(&qword_26A49FAC8, type metadata accessor for Code);
}

uint64_t sub_25AB16E90()
{
  return sub_25AB16B1C(&qword_26A49FAD0, type metadata accessor for Code);
}

unint64_t sub_25AB16EDC()
{
  unint64_t result = qword_26A49FAD8;
  if (!qword_26A49FAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FAD8);
  }
  return result;
}

uint64_t sub_25AB16F30()
{
  return sub_25AB16B1C(&qword_26A49FAE0, type metadata accessor for PINControllerError);
}

uint64_t sub_25AB16F78()
{
  return sub_25AB16B1C(&qword_26A49FAE8, type metadata accessor for PINControllerError);
}

uint64_t sub_25AB16FC0()
{
  return sub_25AB16B1C(&qword_26A49FAF0, type metadata accessor for ConfigurationError);
}

uint64_t sub_25AB17008()
{
  return sub_25AB16B1C(&qword_26A49FAF8, type metadata accessor for ConfigurationError);
}

uint64_t sub_25AB17050()
{
  return sub_25AB16B1C(&qword_26A49FB00, type metadata accessor for ConfigurationError);
}

uint64_t sub_25AB17098()
{
  return sub_25AB16B1C(&qword_26A49FB08, _s3__C4CodeOMa_3);
}

void _s3__C4CodeOMa_3(uint64_t a1)
{
}

uint64_t sub_25AB170F4()
{
  return sub_25AB16B1C(&qword_26A49FB10, _s3__C4CodeOMa_3);
}

uint64_t sub_25AB1713C()
{
  return sub_25AB16B1C(&qword_26A49FB18, _s3__C4CodeOMa_3);
}

uint64_t sub_25AB17184()
{
  return sub_25AB16B1C(&qword_26A49FB20, type metadata accessor for ConfigurationError);
}

uint64_t sub_25AB171CC()
{
  return sub_25AB16B1C(&qword_26A49FB28, _s3__C4CodeOMa_0);
}

uint64_t sub_25AB17214()
{
  return sub_25AB16B1C(&qword_26A49FB30, type metadata accessor for SecureChannelError);
}

void type metadata accessor for SecureChannelError(uint64_t a1)
{
}

uint64_t sub_25AB17270()
{
  return sub_25AB16B1C(&qword_26A49FB38, type metadata accessor for SecureChannelError);
}

uint64_t sub_25AB172B8()
{
  return sub_25AB16B1C(&qword_26A49FB40, type metadata accessor for SecureChannelError);
}

uint64_t sub_25AB17300()
{
  return sub_25AB16B1C(&qword_26A49FB48, type metadata accessor for SecureChannelError);
}

uint64_t sub_25AB17348()
{
  return sub_25AB16B1C(&qword_26A49FB50, _s3__C4CodeOMa_0);
}

uint64_t sub_25AB17390()
{
  return sub_25AB16B1C(&qword_26A49FB58, _s3__C4CodeOMa_0);
}

uint64_t sub_25AB173D8()
{
  return sub_25AB16B1C(&qword_26A49FB60, type metadata accessor for SecureChannelError);
}

uint64_t sub_25AB17420()
{
  return sub_25AB16B1C(&qword_26A49FB68, type metadata accessor for SecureChannelError);
}

uint64_t sub_25AB17468()
{
  return sub_25AB16B1C(&qword_26A49FB70, _s3__C4CodeOMa_1);
}

uint64_t sub_25AB174B0()
{
  return sub_25AB16B1C(&qword_26A49FB78, type metadata accessor for SPRXPCError);
}

void type metadata accessor for SPRXPCError(uint64_t a1)
{
}

uint64_t sub_25AB1750C()
{
  return sub_25AB16B1C(&qword_26A49FB80, type metadata accessor for SPRXPCError);
}

uint64_t sub_25AB17554()
{
  return sub_25AB16B1C(&qword_26A49FB88, type metadata accessor for SPRXPCError);
}

uint64_t sub_25AB1759C()
{
  return sub_25AB16B1C(&qword_26A49FB90, type metadata accessor for SPRXPCError);
}

uint64_t sub_25AB175E4()
{
  return sub_25AB16B1C(&qword_26A49FB98, _s3__C4CodeOMa_1);
}

uint64_t sub_25AB1762C()
{
  return sub_25AB16B1C(&qword_26A49FBA0, _s3__C4CodeOMa_1);
}

uint64_t sub_25AB17674()
{
  return sub_25AB16B1C(&qword_26A49FBA8, type metadata accessor for SPRXPCError);
}

uint64_t sub_25AB176BC()
{
  return sub_25AB16B1C(&qword_26A49FBB0, type metadata accessor for SPRXPCError);
}

uint64_t sub_25AB17704()
{
  return sub_25AB16B1C(&qword_26A49FBB8, type metadata accessor for ReadError);
}

uint64_t sub_25AB1774C()
{
  return sub_25AB16B1C(&qword_26A49FBC0, type metadata accessor for ReadError);
}

uint64_t sub_25AB17794()
{
  return sub_25AB16B1C(&qword_26A49FBC8, type metadata accessor for ReadError);
}

uint64_t sub_25AB177DC()
{
  return sub_25AB16B1C(&qword_26A49FBD0, _s3__C4CodeOMa_2);
}

void _s3__C4CodeOMa_2(uint64_t a1)
{
}

void sub_25AB17838(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_25AB17880()
{
  return sub_25AB16B1C(&qword_26A49FBD8, _s3__C4CodeOMa_2);
}

uint64_t sub_25AB178C8()
{
  return sub_25AB16B1C(&qword_26A49FBE0, _s3__C4CodeOMa_2);
}

uint64_t sub_25AB17910()
{
  return sub_25AB16B1C(&qword_26A49FBE8, type metadata accessor for ReadError);
}

uint64_t sub_25AB17974()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25AC34340();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_44;
  }
  if (*(void *)(v5 + 16))
  {
    unint64_t v6 = sub_25AB8D62C(6911082, 0xE300000000000000);
    if (v7)
    {
      sub_25AB18F50(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v59);
      if (swift_dynamicCast())
      {
        unint64_t v8 = v58;
        if (!*(void *)(v5 + 16)) {
          goto LABEL_42;
        }
        uint64_t v9 = *(void *)&v57;
        unint64_t v10 = sub_25AB8D62C(7627113, 0xE300000000000000);
        if ((v11 & 1) == 0) {
          goto LABEL_42;
        }
        sub_25AB18F50(*(void *)(v5 + 56) + 32 * v10, (uint64_t)&v59);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_42;
        }
        if (!*(void *)(v5 + 16)) {
          goto LABEL_42;
        }
        uint64_t v12 = *(void *)&v57;
        unint64_t v13 = sub_25AB8D62C(7370853, 0xE300000000000000);
        if ((v14 & 1) == 0) {
          goto LABEL_42;
        }
        sub_25AB18F50(*(void *)(v5 + 56) + 32 * v13, (uint64_t)&v59);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_42;
        }
        if (!*(void *)(v5 + 16)) {
          goto LABEL_42;
        }
        double v15 = v57;
        unint64_t v16 = sub_25AB8D62C(1684632694, 0xE400000000000000);
        if ((v17 & 1) == 0) {
          goto LABEL_42;
        }
        sub_25AB18F50(*(void *)(v5 + 56) + 32 * v16, (uint64_t)&v59);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_42;
        }
        unint64_t v18 = v58;
        if (!*(void *)(v5 + 16)) {
          goto LABEL_41;
        }
        uint64_t v19 = *(void *)&v57;
        unint64_t v20 = sub_25AB8D62C(6580592, 0xE300000000000000);
        if ((v21 & 1) == 0) {
          goto LABEL_41;
        }
        sub_25AB18F50(*(void *)(v5 + 56) + 32 * v20, (uint64_t)&v59);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_41;
        }
        unint64_t v22 = v58;
        if (!*(void *)(v5 + 16)
          || (v56 = *(void *)&v57, unint64_t v23 = sub_25AB8D62C(1684631668, 0xE400000000000000), (v24 & 1) == 0))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_42:
          swift_bridgeObjectRelease();
          goto LABEL_43;
        }
        sub_25AB18F50(*(void *)(v5 + 56) + 32 * v23, (uint64_t)&v59);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_40;
        }
        unint64_t v55 = v58;
        if (!*(void *)(v5 + 16)
          || (v54 = *(void *)&v57, unint64_t v25 = sub_25AB8D62C(7234157, 0xE300000000000000), (v26 & 1) == 0))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_41:
          swift_bridgeObjectRelease();
          goto LABEL_42;
        }
        sub_25AB18F50(*(void *)(v5 + 56) + 32 * v25, (uint64_t)&v59);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_39;
        }
        unint64_t v53 = v58;
        if (*(void *)(v5 + 16)
          && (v52 = *(void *)&v57, unint64_t v27 = sub_25AB8D62C(6580589, 0xE300000000000000), (v28 & 1) != 0))
        {
          sub_25AB18F50(*(void *)(v5 + 56) + 32 * v27, (uint64_t)&v59);
          if ((swift_dynamicCast() & 1) == 0)
          {
LABEL_38:
            swift_bridgeObjectRelease();
LABEL_39:
            swift_bridgeObjectRelease();
            goto LABEL_40;
          }
          unint64_t v51 = v58;
          if (*(void *)(v5 + 16))
          {
            uint64_t v50 = *(void *)&v57;
            unint64_t v29 = sub_25AB8D62C(6513517, 0xE300000000000000);
            if (v30)
            {
              sub_25AB18F50(*(void *)(v5 + 56) + 32 * v29, (uint64_t)&v59);
              if (swift_dynamicCast())
              {
                uint64_t v49 = sub_25ABD5430(*(uint64_t *)&v57, v58);
                if ((v31 & 1) == 0)
                {
                  *(void *)(v1 + 32) = v9;
                  *(void *)(v1 + 40) = v8;
                  sub_25AC340E0();
                  *(void *)(v1 + 16) = v12;
                  *(double *)(v1 + 24) = v15 - v32;
                  unint64_t v33 = v53;
                  *(void *)(v1 + 64) = v52;
                  *(void *)(v1 + 72) = v33;
                  unint64_t v34 = v51;
                  *(void *)(v1 + 48) = v50;
                  *(void *)(v1 + 56) = v34;
                  *(void *)(v1 + 80) = v49;
                  *(void *)(v1 + 88) = v19;
                  uint64_t v35 = v56;
                  *(void *)(v1 + 96) = v18;
                  *(void *)(v1 + 104) = v35;
                  uint64_t v36 = v54;
                  *(void *)(v1 + 112) = v22;
                  *(void *)(v1 + 120) = v36;
                  *(void *)(v1 + 128) = v55;
                  if (*(void *)(v5 + 16)
                    && (unint64_t v37 = sub_25AB8D62C(0x64697074666173, 0xE700000000000000), (v38 & 1) != 0))
                  {
                    sub_25AB18F50(*(void *)(v5 + 56) + 32 * v37, (uint64_t)&v59);
                  }
                  else
                  {
                    long long v59 = 0u;
                    long long v60 = 0u;
                  }
                  swift_bridgeObjectRelease();
                  if (*((void *)&v60 + 1))
                  {
                    int v46 = swift_dynamicCast();
                    uint64_t v47 = *(void *)&v57;
                    unint64_t v48 = v58;
                    if (!v46)
                    {
                      uint64_t v47 = 0;
                      unint64_t v48 = 0;
                    }
                  }
                  else
                  {
                    sub_25AB18FAC((uint64_t)&v59, &qword_26A49FD00);
                    uint64_t v47 = 0;
                    unint64_t v48 = 0;
                  }
                  *(void *)(v1 + 136) = v47;
                  *(void *)(v1 + 144) = v48;
                  return v1;
                }
              }
              swift_bridgeObjectRelease();
              goto LABEL_38;
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
LABEL_40:
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
    }
  }
LABEL_43:
  swift_bridgeObjectRelease();
LABEL_44:
  if (qword_26A49F7E0 != -1) {
    swift_once();
  }
  uint64_t v39 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1C88);
  sub_25AB150E0(v39, (uint64_t)v4);
  uint64_t v40 = sub_25AC345E0();
  uint64_t v41 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v4, 1, v40) == 1)
  {
    sub_25AB18FAC((uint64_t)v4, &qword_26A49F9A0);
  }
  else
  {
    v42 = sub_25AC345C0();
    os_log_type_t v43 = sub_25AC352C0();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v44 = 0;
      _os_log_impl(&dword_25AB11000, v42, v43, "SessionToken could not be parsed", v44, 2u);
      MEMORY[0x261151C20](v44, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v41 + 8))(v4, v40);
  }
  type metadata accessor for SessionToken();
  swift_deallocPartialClassInstance();
  return 0;
}

BOOL sub_25AB18068()
{
  uint64_t v0 = sub_25AC32420();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25AC324E0();
  uint64_t v25 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25AC32500();
  uint64_t v24 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = (uint64_t (*)(void))sub_25AC34000();
  char v11 = v10();
  swift_release();
  if ((v11 & 1) != 0
    && (id v12 = objc_msgSend(self, sel_standardUserDefaults),
        unint64_t v13 = (void *)sub_25AC34E10(),
        unsigned int v14 = objc_msgSend(v12, sel_BOOLForKey_, v13),
        v12,
        v13,
        v14))
  {
    sub_25AC324D0();
    uint64_t v15 = v25;
    (*(void (**)(char *, void, uint64_t))(v25 + 104))(v6, *MEMORY[0x263F078C0], v4);
    sub_25AC32410();
    char v16 = sub_25AC324F0();
    char v17 = *(void (**)(char *, uint64_t))(v1 + 8);
    v17(v3, v0);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v7);
    if ((v16 & 1) == 0) {
      return 1;
    }
    double v19 = *(double *)(v26 + 24);
    sub_25AC32410();
    sub_25AC323E0();
    double v21 = v22;
    v17(v3, v0);
  }
  else
  {
    double v19 = *(double *)(v26 + 24);
    sub_25AC32410();
    sub_25AC323E0();
    double v21 = v20;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v19 <= v21;
}

unint64_t sub_25AB183C0(char a1)
{
  unint64_t result = 7627113;
  switch(a1)
  {
    case 1:
      unint64_t result = 7370853;
      break;
    case 2:
      unint64_t result = 6911082;
      break;
    case 3:
      unint64_t result = 6580589;
      break;
    case 4:
      unint64_t result = 7234157;
      break;
    case 5:
      unint64_t result = 6513517;
      break;
    case 6:
      unint64_t result = 1684632694;
      break;
    case 7:
      unint64_t result = 0x4972656E74726170;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_25AB184C0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_25AB184D4()
{
  return sub_25AC359D0();
}

uint64_t sub_25AB1851C()
{
  return sub_25AC35980();
}

uint64_t sub_25AB18548()
{
  return sub_25AC359D0();
}

unint64_t sub_25AB1858C()
{
  return sub_25AB183C0(*v0);
}

uint64_t sub_25AB18594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB192C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25AB185BC()
{
  return 0;
}

void sub_25AB185C8(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_25AB185D4(uint64_t a1)
{
  unint64_t v2 = sub_25AB18EAC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB18610(uint64_t a1)
{
  unint64_t v2 = sub_25AB18EAC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB1864C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25AB1869C()
{
  sub_25AB1864C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SessionToken()
{
  return self;
}

uint64_t sub_25AB186F4(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD08);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  unint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB18EAC();
  sub_25AC35A00();
  v8[15] = 0;
  sub_25AC35810();
  if (!v1)
  {
    v8[14] = 1;
    sub_25AC35810();
    v8[13] = 2;
    sub_25AC357F0();
    v8[12] = 3;
    sub_25AC357F0();
    v8[11] = 4;
    sub_25AC357F0();
    v8[10] = 5;
    sub_25AC35820();
    v8[9] = 6;
    sub_25AC357F0();
    v8[8] = 7;
    sub_25AC357F0();
    v8[7] = 8;
    sub_25AC357F0();
    v8[6] = 9;
    sub_25AC357C0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_25AB18994()
{
  return MEMORY[0x263F8D320];
}

void *sub_25AB189A0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FCF0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB18EAC();
  sub_25AC359F0();
  if (v2)
  {
    type metadata accessor for SessionToken();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v21[31] = 0;
    sub_25AC35780();
    v1[2] = v9;
    v21[30] = 1;
    sub_25AC35780();
    v1[3] = v10;
    v21[29] = 2;
    v1[4] = sub_25AC35760();
    v1[5] = v12;
    v21[28] = 3;
    v1[6] = sub_25AC35760();
    v1[7] = v13;
    v21[27] = 4;
    v1[8] = sub_25AC35760();
    v1[9] = v14;
    v21[26] = 5;
    v1[10] = sub_25AC35790();
    v21[25] = 6;
    v1[11] = sub_25AC35760();
    v1[12] = v15;
    v21[24] = 7;
    v1[13] = sub_25AC35760();
    v1[14] = v16;
    v21[15] = 8;
    v1[15] = sub_25AC35760();
    v1[16] = v17;
    v21[14] = 9;
    uint64_t v18 = sub_25AC35730();
    uint64_t v20 = v19;
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    v3[17] = v18;
    v3[18] = v20;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

void *sub_25AB18DDC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for SessionToken();
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_25AB189A0(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_25AB18E34(void *a1)
{
  return sub_25AB186F4(a1);
}

uint64_t sub_25AB18E58@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 40);
  *a1 = *(void *)(*(void *)v1 + 32);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_25AB18EAC()
{
  unint64_t result = qword_26A49FCF8;
  if (!qword_26A49FCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FCF8);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_25AB18F50(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_25AB18FAC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SessionToken.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SessionToken.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB19174);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

uint64_t sub_25AB1919C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_25AB191A8(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SessionToken.CodingKeys()
{
  return &type metadata for SessionToken.CodingKeys;
}

unint64_t sub_25AB191C4()
{
  unint64_t result = qword_26A49FD10;
  if (!qword_26A49FD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FD10);
  }
  return result;
}

unint64_t sub_25AB1921C()
{
  unint64_t result = qword_26A49FD18;
  if (!qword_26A49FD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FD18);
  }
  return result;
}

unint64_t sub_25AB19274()
{
  unint64_t result = qword_26A49FD20;
  if (!qword_26A49FD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FD20);
  }
  return result;
}

uint64_t sub_25AB192C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7627113 && a2 == 0xE300000000000000;
  if (v2 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7370853 && a2 == 0xE300000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 6911082 && a2 == 0xE300000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6580589 && a2 == 0xE300000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 7234157 && a2 == 0xE300000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 6513517 && a2 == 0xE300000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1684632694 && a2 == 0xE400000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x4972656E74726170 && a2 == 0xE900000000000064 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025AC3D5A0 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000025AC3D5C0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_25AC35870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_25AB1966C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v46 = a4;
  uint64_t v47 = a5;
  uint64_t v45 = a3;
  uint64_t v43 = a2;
  uint64_t v51 = a1;
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD40);
  uint64_t v5 = *(void *)(v52 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v52);
  unint64_t v48 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_25AC31FA0();
  uint64_t v7 = *(void *)(v50 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x270FA5388](v50);
  uint64_t v49 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v42 - v10;
  uint64_t v12 = sub_25AC328E0();
  uint64_t v42 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t (*)(void))sub_25AC34000();
  char v16 = v15();
  swift_release();
  if ((v16 & 1) != 0
    && (id v17 = objc_msgSend(self, sel_standardUserDefaults),
        uint64_t v18 = (void *)sub_25AC34E10(),
        unsigned int v19 = objc_msgSend(v17, sel_BOOLForKey_, v18),
        v17,
        v18,
        v19))
  {
    uint64_t v20 = sub_25AB8FF24(v43, v45, v46);
    uint64_t v22 = v21;
    uint64_t v23 = sub_25AB903A8();
    uint64_t v25 = v24;
    sub_25AC326A0();
    sub_25AC32850();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v14, v12);
    uint64_t v53 = v20;
    uint64_t v54 = v22;
    uint64_t v55 = v23;
    uint64_t v56 = v25;
    long long v57 = xmmword_25AC37A40;
    char v58 = 0;
    return sub_25AC35100();
  }
  else
  {
    uint64_t v46 = v8;
    if (qword_26A49F850 != -1) {
      swift_once();
    }
    v44 = v11;
    uint64_t v45 = qword_26A4A1DC8;
    uint64_t v27 = v7;
    char v28 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    unint64_t v29 = v11;
    char v30 = v11;
    uint64_t v31 = v50;
    v28(v30, v47, v50);
    double v32 = v48;
    uint64_t v33 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v48, v51, v52);
    unint64_t v34 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v35 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v35 + v34, v32, v33);
    uint64_t v36 = swift_allocObject();
    swift_weakInit();
    unint64_t v37 = v49;
    v28(v49, (uint64_t)v29, v31);
    unint64_t v38 = (*(unsigned __int8 *)(v27 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    uint64_t v39 = v38 + v46;
    uint64_t v40 = (char *)swift_allocObject();
    *((void *)v40 + 2) = sub_25AB1AD6C;
    *((void *)v40 + 3) = v35;
    *((void *)v40 + 4) = v36;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(&v40[v38], v37, v31);
    v40[v39] = 0;
    swift_retain();
    uint64_t v41 = (uint64_t)v44;
    sub_25AB3F510((uint64_t)v44, 0, 0, (uint64_t)sub_25AB1AEF0, (uint64_t)v40);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(v41, v31);
  }
}

uint64_t sub_25AB19B34(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  uint64_t v15 = sub_25AC328E0();
  uint64_t v3 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  char v12 = *(unsigned char *)(a1 + 48);
  sub_25AC326A0();
  sub_25AC32850();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v15);
  uint64_t v17 = v6;
  uint64_t v18 = v7;
  uint64_t v19 = v8;
  uint64_t v20 = v9;
  uint64_t v21 = v10;
  uint64_t v22 = v11;
  char v23 = v12;
  sub_25AB1B020(v6, v7, v8, v9, v10, v11, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD40);
  return sub_25AC35100();
}

uint64_t sub_25AB19C7C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AuthorizerService()
{
  return self;
}

uint64_t sub_25AB19CB0(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD58);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB1BAA0();
  sub_25AC35A00();
  v8[15] = 0;
  sub_25AC357F0();
  if (!v1)
  {
    v8[14] = 1;
    sub_25AC357F0();
    v8[13] = 2;
    sub_25AC357C0();
    v8[12] = 3;
    sub_25AC357F0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_25AB19E60()
{
  unint64_t result = 0x6C646E7542707061;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x6973736553646C6FLL;
      break;
    case 3:
      unint64_t result = 0x6E656B6F54707370;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25AB19F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB1B578(a1, a2);
  *a3 = result;
  return result;
}

void sub_25AB19F30(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_25AB19F3C(uint64_t a1)
{
  unint64_t v2 = sub_25AB1BAA0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB19F78(uint64_t a1)
{
  unint64_t v2 = sub_25AB1BAA0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB19FB4(void *a1)
{
  return sub_25AB19CB0(a1);
}

uint64_t sub_25AB19FCC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25AB380B8(*a1, *a2);
}

uint64_t sub_25AB19FD8()
{
  return sub_25AC359D0();
}

uint64_t sub_25AB1A094()
{
  sub_25AC34F20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB1A13C()
{
  return sub_25AC359D0();
}

uint64_t sub_25AB1A1F4(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD68);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB1BA4C();
  sub_25AC35A00();
  v8[15] = 0;
  sub_25AC357F0();
  if (!v1)
  {
    v8[14] = 1;
    sub_25AC357F0();
    v8[13] = 2;
    sub_25AC357F0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_25AB1A37C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25AB1B768();
  *a1 = result;
  return result;
}

void sub_25AB1A3AC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEC0000006E656B6FLL;
  unint64_t v4 = 0xEB000000006E656BLL;
  uint64_t v5 = 0x6F546C656E72656BLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x746E61686372656DLL;
    unint64_t v4 = 0xEC0000006F676F4CLL;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x546E6F6973736573;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_25AB1A424()
{
  uint64_t v1 = 0x6F546C656E72656BLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x746E61686372656DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x546E6F6973736573;
  }
}

uint64_t sub_25AB1A498@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25AB1B768();
  *a1 = result;
  return result;
}

void sub_25AB1A4C0(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_25AB1A4CC(uint64_t a1)
{
  unint64_t v2 = sub_25AB1BA4C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB1A508(uint64_t a1)
{
  unint64_t v2 = sub_25AB1BA4C();
  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_25AB1A544@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_25AB1B7B4(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_25AB1A588(void *a1)
{
  return sub_25AB1A1F4(a1);
}

uint64_t sub_25AB1A5A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[21] = a5;
  v6[22] = a6;
  v6[19] = a3;
  v6[20] = a4;
  v6[17] = a1;
  v6[18] = a2;
  uint64_t v7 = sub_25AC31FA0();
  v6[23] = v7;
  v6[24] = *(void *)(v7 - 8);
  v6[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD30);
  v6[26] = swift_task_alloc();
  uint64_t v8 = sub_25AC32300();
  v6[27] = v8;
  v6[28] = *(void *)(v8 - 8);
  v6[29] = swift_task_alloc();
  v6[30] = swift_task_alloc();
  uint64_t v9 = sub_25AC328E0();
  v6[31] = v9;
  v6[32] = *(void *)(v9 - 8);
  v6[33] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB1A760);
}

uint64_t sub_25AB1A760()
{
  uint64_t v1 = v0;
  uint64_t v3 = v0[32];
  uint64_t v2 = v0[33];
  unint64_t v4 = v0 + 10;
  uint64_t v5 = v0[31];
  uint64_t v6 = v1[30];
  uint64_t v7 = v1[28];
  uint64_t v19 = v1[29];
  uint64_t v20 = v1[27];
  uint64_t v8 = v1[25];
  uint64_t v9 = v1[26];
  uint64_t v23 = v1[22];
  uint64_t v24 = v4;
  uint64_t v10 = v1[20];
  uint64_t v11 = v1[18];
  uint64_t v21 = v1[19];
  uint64_t v22 = v1[21];
  sub_25AC326A0();
  sub_25AC32870();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v5);
  sub_25AC35580();
  swift_bridgeObjectRelease();
  sub_25AC336D0();
  sub_25AC34F60();
  swift_bridgeObjectRelease();
  sub_25AC34F60();
  sub_25AB37904(*(unsigned char *)(v11 + 96));
  sub_25AC322E0();
  swift_bridgeObjectRelease();
  sub_25AC32250();
  swift_bridgeObjectRelease();
  sub_25AB1AC6C(v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v19, v6, v20);
  sub_25AC336F0();
  sub_25AC31F60();
  sub_25AC31F20();
  uint64_t v12 = *(void *)(v11 + 40);
  uint64_t v13 = *(void *)(v11 + 64);
  uint64_t v14 = *(void *)(v11 + 72);
  v1[2] = *(void *)(v11 + 32);
  v1[3] = v12;
  v1[4] = v13;
  v1[5] = v14;
  v1[6] = v22;
  v1[7] = v23;
  v1[8] = v21;
  v1[9] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25ABE1F34();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25AC31F90();
  uint64_t v15 = (void *)swift_task_alloc();
  v1[34] = v15;
  v15[2] = v11;
  v15[3] = v21;
  v15[4] = v10;
  v15[5] = v8;
  uint64_t v16 = (void *)swift_task_alloc();
  v1[35] = v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD38);
  void *v16 = v1;
  v16[1] = sub_25AB1AA44;
  return MEMORY[0x270FA2318](v24, 0, 0, 0xD000000000000037, 0x800000025AC3D630, sub_25AB1ACCC, v15, v17);
}

uint64_t sub_25AB1AA44()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25AB1AB5C);
}

uint64_t sub_25AB1AB5C()
{
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 136);
  (*(void (**)(void, void))(*(void *)(v0 + 224) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 216));
  long long v10 = *(_OWORD *)(v0 + 96);
  long long v11 = *(_OWORD *)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 120);
  char v7 = *(unsigned char *)(v0 + 128);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)uint64_t v4 = v11;
  *(_OWORD *)(v4 + 16) = v10;
  *(void *)(v4 + 32) = v6;
  *(void *)(v4 + 40) = v5;
  *(unsigned char *)(v4 + 48) = v7;
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_25AB1AC6C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25AB1ACCC(uint64_t a1)
{
  return sub_25AB1966C(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_25AB1ACD8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD40);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_25AB1AD6C(uint64_t a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD40) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_25AB19B34(a1, v4);
}

uint64_t sub_25AB1ADE0()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25AB1AE18()
{
  uint64_t v1 = sub_25AC31FA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_25AB1AEF0(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_25AC31FA0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (uint64_t (*)(unsigned char *))v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + v4;
  char v9 = *((unsigned char *)v1 + v4 + *(void *)(v3 + 64));
  sub_25AB1AFB8(a1, (uint64_t)v11);
  return sub_25AB3F2A4((uint64_t)v11, v5, v6, v7, v8, v9);
}

uint64_t sub_25AB1AFB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25AB1B020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) == 0) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t initializeBufferWithCopyOfBuffer for SessionRequest(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for SessionRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SessionRequest(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SessionRequest(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for SessionRequest(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionRequest()
{
  return &type metadata for SessionRequest;
}

uint64_t destroy for SessionResponse()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SessionResponse(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SessionResponse(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for SessionResponse(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionResponse(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionResponse()
{
  return &type metadata for SessionResponse;
}

uint64_t sub_25AB1B578(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C646E7542707061 && a2 == 0xEB00000000644965;
  if (v2 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025AC3D670 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6973736553646C6FLL && a2 == 0xEF6E656B6F546E6FLL || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E656B6F54707370 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_25AC35870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_25AB1B768()
{
  unint64_t v0 = sub_25AC35720();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_25AB1B7B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD48);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB1BA4C();
  sub_25AC359F0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v27 = 0;
  uint64_t v9 = sub_25AC35760();
  uint64_t v11 = v10;
  uint64_t v24 = v9;
  char v26 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_25AC35760();
  uint64_t v14 = v13;
  uint64_t v22 = v12;
  char v25 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = v14;
  uint64_t v15 = sub_25AC35760();
  uint64_t v17 = v16;
  uint64_t v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v19 = v23;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  return result;
}

unint64_t sub_25AB1BA4C()
{
  unint64_t result = qword_26A49FD50;
  if (!qword_26A49FD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FD50);
  }
  return result;
}

unint64_t sub_25AB1BAA0()
{
  unint64_t result = qword_26A49FD60;
  if (!qword_26A49FD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FD60);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SessionRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SessionRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB1BC50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionRequest.CodingKeys()
{
  return &type metadata for SessionRequest.CodingKeys;
}

uint64_t getEnumTagSinglePayload for SessionResponse.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SessionResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB1BDE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionResponse.CodingKeys()
{
  return &type metadata for SessionResponse.CodingKeys;
}

unint64_t sub_25AB1BE20()
{
  unint64_t result = qword_26A49FD70;
  if (!qword_26A49FD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FD70);
  }
  return result;
}

unint64_t sub_25AB1BE78()
{
  unint64_t result = qword_26A49FD78;
  if (!qword_26A49FD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FD78);
  }
  return result;
}

unint64_t sub_25AB1BED0()
{
  unint64_t result = qword_26A49FD80;
  if (!qword_26A49FD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FD80);
  }
  return result;
}

unint64_t sub_25AB1BF28()
{
  unint64_t result = qword_26A49FD88;
  if (!qword_26A49FD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FD88);
  }
  return result;
}

unint64_t sub_25AB1BF80()
{
  unint64_t result = qword_26A49FD90;
  if (!qword_26A49FD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FD90);
  }
  return result;
}

unint64_t sub_25AB1BFD8()
{
  unint64_t result = qword_26A49FD98;
  if (!qword_26A49FD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FD98);
  }
  return result;
}

void sub_25AB1C038(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4 = [*a1 *a2];
  uint64_t v5 = sub_25AC34E40();
  uint64_t v7 = v6;

  *a3 = v5;
  a3[1] = v7;
}

void sub_25AB1C08C(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_transactionTimestamp);
  sub_25AC323F0();
}

void sub_25AB1C0EC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_paymentCardDataHash);
  uint64_t v4 = sub_25AC323A0();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

id ManagedTransaction.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedTransaction.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedTransaction();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedTransaction()
{
  return self;
}

id ManagedTransaction.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedTransaction();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedTransaction.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFF260]);
  id v1 = (void *)sub_25AC34E10();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

char *keypath_get_selector_safSessionHash()
{
  return sel_safSessionHash;
}

void sub_25AB1C32C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_25AB1C34C(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_transactionId()
{
  return sel_transactionId;
}

void sub_25AB1C378(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_25AB1C398(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_transactionTimestamp()
{
  return sel_transactionTimestamp;
}

void sub_25AB1C3C8(uint64_t a1, void **a2)
{
  id v2 = *a2;
  id v3 = (id)sub_25AC323C0();
  objc_msgSend(v2, sel_setTransactionTimestamp_, v3);
}

char *keypath_get_selector_paymentCardDataHash()
{
  return sel_paymentCardDataHash;
}

void sub_25AB1C434(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void keypath_setTm(void *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void), SEL *a6)
{
  objc_super v7 = *a2;
  id v8 = (id)a5(*a1, a1[1]);
  objc_msgSend(v7, *a6, v8);
}

uint64_t sub_25AB1C4BC()
{
  uint64_t v0 = sub_25AC32300();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v2, qword_26A49FDA0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A49FDA0);
  if (qword_26A49F7A8 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1B90);
  sub_25AC322A0();
  sub_25AC322B0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_25AB1C61C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388]();
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F828 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1D60);
  sub_25AB150E0(v5, (uint64_t)v4);
  uint64_t v6 = sub_25AC345E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_25AB18FAC((uint64_t)v4, &qword_26A49F9A0);
  }
  else
  {
    id v8 = sub_25AC345C0();
    os_log_type_t v9 = sub_25AC352D0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_25AB11000, v8, v9, "SAF DB deinit", v10, 2u);
      MEMORY[0x261151C20](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }

  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for StoreAndForwardStorage()
{
  return self;
}

void sub_25AB1C824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v32 = a5;
  v30[4] = a3;
  v30[5] = a4;
  v30[2] = a1;
  v30[3] = a2;
  v33[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v31 = sub_25AC32420();
  uint64_t v9 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F828 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_26A4A1D60);
  sub_25AB150E0(v15, (uint64_t)v14);
  uint64_t v16 = sub_25AC345E0();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16) == 1)
  {
    sub_25AB18FAC((uint64_t)v14, &qword_26A49F9A0);
  }
  else
  {
    v30[1] = a6;
    uint64_t v18 = sub_25AC345C0();
    os_log_type_t v19 = sub_25AC352D0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      v30[0] = v7;
      uint64_t v21 = v20;
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_25AB11000, v18, v19, "Saving ManagedTransaction", v20, 2u);
      uint64_t v7 = v30[0];
      MEMORY[0x261151C20](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
  }
  type metadata accessor for ManagedTransaction();
  id v22 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(void *)(v7 + 112));
  uint64_t v23 = (void *)sub_25AC34E10();
  objc_msgSend(v22, sel_setSafSessionHash_, v23);

  uint64_t v24 = (void *)sub_25AC34E10();
  objc_msgSend(v22, sel_setTransactionId_, v24);

  sub_25AC32400();
  char v25 = (void *)sub_25AC323C0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v31);
  objc_msgSend(v22, sel_setTransactionTimestamp_, v25);

  char v26 = (void *)sub_25AC32380();
  objc_msgSend(v22, sel_setPaymentCardDataHash_, v26);

  char v27 = *(void **)(v7 + 112);
  v33[0] = 0;
  if (objc_msgSend(v27, sel_save_, v33))
  {
    id v28 = v33[0];
  }
  else
  {
    id v29 = v33[0];
    sub_25AC321F0();

    swift_willThrow();
  }
}

uint64_t sub_25AB1CBF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v7 = (void *)sub_25AC34E10();
  id v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  sub_25AB1DDD8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FDD0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_25AC37D80;
  *(void *)(v9 + 56) = MEMORY[0x263F8D310];
  *(void *)(v9 + 64) = sub_25AB1DE18();
  *(void *)(v9 + 32) = a1;
  *(void *)(v9 + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)sub_25AC35270();
  objc_msgSend(v8, sel_setPredicate_, v10);

  uint64_t v11 = *(void **)(v3 + 112);
  type metadata accessor for ManagedTransaction();
  id v12 = v11;
  uint64_t v13 = sub_25AC353D0();

  return v13;
}

uint64_t sub_25AB1CD64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v8 = v7;
  uint64_t v69 = a6;
  uint64_t v67 = a4;
  uint64_t v68 = a5;
  uint64_t v65 = a2;
  uint64_t v66 = a3;
  uint64_t v64 = a1;
  uint64_t v73 = *MEMORY[0x263EF8340];
  uint64_t v63 = sub_25AC32420();
  uint64_t v10 = *(void **)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  id v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  ObjCClassFromMetadata = (objc_class *)((char *)&v56 - v18);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v56 - v20;
  if (a7 < 1)
  {
    if (qword_26A49F828 != -1) {
      swift_once();
    }
    uint64_t v25 = __swift_project_value_buffer(v13, (uint64_t)qword_26A4A1D60);
    sub_25AB150E0(v25, (uint64_t)v16);
    uint64_t v26 = sub_25AC345E0();
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v16, 1, v26) == 1)
    {
      return sub_25AB18FAC((uint64_t)v16, &qword_26A49F9A0);
    }
    else
    {
      unint64_t v48 = sub_25AC345C0();
      os_log_type_t v49 = sub_25AC352C0();
      if (os_log_type_enabled(v48, v49))
      {
        uint64_t v50 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v50 = 0;
        _os_log_impl(&dword_25AB11000, v48, v49, "Invalid number of transactions to persist in the DB", v50, 2u);
        MEMORY[0x261151C20](v50, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v16, v26);
    }
  }
  else
  {
    uint64_t v22 = a7;
    if (qword_26A49F828 != -1) {
LABEL_32:
    }
      swift_once();
    uint64_t v59 = __swift_project_value_buffer(v13, (uint64_t)qword_26A4A1D60);
    sub_25AB150E0(v59, (uint64_t)v21);
    uint64_t v23 = sub_25AC345E0();
    uint64_t v62 = *(void *)(v23 - 8);
    long long v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48);
    uint64_t v58 = v62 + 48;
    int v24 = v57(v21, 1, v23);
    uint64_t v56 = v8;
    uint64_t v60 = v23;
    v61 = ObjCClassFromMetadata;
    if (v24 == 1)
    {
      sub_25AB18FAC((uint64_t)v21, &qword_26A49F9A0);
    }
    else
    {
      id v29 = sub_25AC345C0();
      os_log_type_t v30 = sub_25AC352D0();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 134217984;
        *(void *)&long long v71 = v22;
        sub_25AC354A0();
        _os_log_impl(&dword_25AB11000, v29, v30, "Saving [%ld] Mocked ManagedTransaction", v31, 0xCu);
        MEMORY[0x261151C20](v31, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v62 + 8))(v21, v23);
    }
    uint64_t v21 = (char *)type metadata accessor for ManagedTransaction();
    ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    id v8 = (void (**)(char *, uint64_t))(v10 + 1);
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
    uint64_t v32 = 1;
    while (1)
    {
      id v33 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_initWithContext_, *(void *)(v70 + 112));
      unint64_t v34 = (void *)sub_25AC34E10();
      objc_msgSend(v33, sel_setSafSessionHash_, v34);

      uint64_t v35 = (void *)sub_25AC34E10();
      objc_msgSend(v33, sel_setTransactionId_, v35);

      sub_25AC32400();
      uint64_t v36 = (void *)sub_25AC323C0();
      (*v8)(v12, v63);
      objc_msgSend(v33, sel_setTransactionTimestamp_, v36);

      unint64_t v37 = (void *)sub_25AC32380();
      objc_msgSend(v33, sel_setPaymentCardDataHash_, v37);

      v72 = v21;
      *(void *)&long long v71 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_25AB90880(0, v10[2] + 1, 1, v10);
      }
      unint64_t v13 = v10[2];
      unint64_t v38 = v10[3];
      if (v13 >= v38 >> 1) {
        uint64_t v10 = sub_25AB90880((void *)(v38 > 1), v13 + 1, 1, v10);
      }
      v10[2] = v13 + 1;
      sub_25AB1DDC8(&v71, &v10[4 * v13 + 4]);
      if (v22 == v32) {
        break;
      }
      if (__OFADD__(v32++, 1))
      {
        __break(1u);
        goto LABEL_32;
      }
    }
    uint64_t v40 = *(void **)(v70 + 112);
    *(void *)&long long v71 = 0;
    unsigned __int8 v41 = objc_msgSend(v40, sel_save_, &v71);
    uint64_t v42 = (void *)v71;
    if (v41)
    {
      uint64_t v43 = (uint64_t)v61;
      sub_25AB150E0(v59, (uint64_t)v61);
      uint64_t v44 = v60;
      int v45 = v57((char *)v43, 1, v60);
      id v46 = v42;
      if (v45 == 1)
      {
        swift_bridgeObjectRelease();
        return sub_25AB18FAC(v43, &qword_26A49F9A0);
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v51 = sub_25AC345C0();
        os_log_type_t v52 = sub_25AC352D0();
        if (os_log_type_enabled(v51, v52))
        {
          uint64_t v53 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v53 = 134217984;
          uint64_t v54 = v44;
          uint64_t v55 = v10[2];
          swift_bridgeObjectRelease();
          *(void *)&long long v71 = v55;
          uint64_t v44 = v54;
          sub_25AC354A0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_25AB11000, v51, v52, "Saved [%ld] mocked transactions", v53, 0xCu);
          MEMORY[0x261151C20](v53, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        return (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 8))(v43, v44);
      }
    }
    else
    {
      id v47 = (id)v71;
      swift_bridgeObjectRelease();
      sub_25AC321F0();

      return swift_willThrow();
    }
  }
}

uint64_t sub_25AB1D504()
{
  return v0;
}

char *sub_25AB1D510()
{
  uint64_t v44 = type metadata accessor for CoreDataStoreConfiguration();
  MEMORY[0x270FA5388](v44);
  uint64_t v2 = (char *)&v44 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD30);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25AC32300();
  uint64_t v53 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  unint64_t v48 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  int v45 = (char *)&v44 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v44 - v14;
  if (qword_26A49F828 != -1) {
    swift_once();
  }
  uint64_t v50 = __swift_project_value_buffer(v10, (uint64_t)qword_26A4A1D60);
  sub_25AB150E0(v50, (uint64_t)v15);
  uint64_t v16 = sub_25AC345E0();
  uint64_t v51 = *(void *)(v16 - 8);
  uint64_t v17 = (char *)(v51 + 48);
  os_log_type_t v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
  int v18 = v49(v15, 1, v16);
  uint64_t v46 = v0;
  id v47 = v2;
  if (v18 == 1)
  {
    sub_25AB18FAC((uint64_t)v15, &qword_26A49F9A0);
  }
  else
  {
    os_log_type_t v19 = sub_25AC345C0();
    os_log_type_t v20 = sub_25AC352D0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_25AB11000, v19, v20, "Retrieving DB context", v21, 2u);
      MEMORY[0x261151C20](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v51 + 8))(v15, v16);
  }
  type metadata accessor for StoreAndForwardStorage();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v23 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  int v24 = (void *)sub_25AC34E10();
  uint64_t v25 = (void *)sub_25AC34E10();
  id v26 = objc_msgSend(v23, sel_URLForResource_withExtension_, v24, v25);

  if (v26)
  {
    uint64_t v27 = v48;
    sub_25AC322C0();

    uint64_t v28 = v53;
    id v29 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
    v29(v5, v27, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v5, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v5, 1, v6) != 1)
    {
      os_log_type_t v30 = v45;
      v29(v45, v5, v6);
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FDC0);
      uint64_t v32 = v47;
      uint64_t v17 = (char *)v47 + *(int *)(v31 + 64);
      id v33 = (char *)v47 + *(int *)(v31 + 80);
      *id v47 = 0;
      v32[1] = 0;
      v32[2] = 0x646E4165726F7453;
      v32[3] = 0xEF64726177726F46;
      if (qword_26A49F7B8 != -1) {
        swift_once();
      }
      uint64_t v34 = __swift_project_value_buffer(v6, (uint64_t)qword_26A49FDA0);
      uint64_t v35 = v28;
      uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
      v36(v17, v34, v6);
      v36(v33, (uint64_t)v30, v6);
      v52[3] = v44;
      v52[4] = (uint64_t)&off_270885FB8;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v52);
      sub_25AB1DD08((uint64_t)v32, (uint64_t)boxed_opaque_existential_1);
      type metadata accessor for CoreDataStore();
      swift_initStackObject();
      uint64_t v38 = v46;
      uint64_t v39 = sub_25AB8E9DC(v52);
      if (!v38)
      {
        uint64_t v17 = (char *)objc_msgSend(*(id *)(v39 + 16), sel_newBackgroundContext);
        objc_msgSend(v17, sel_setAutomaticallyMergesChangesFromParent_, 1);
        swift_release();
      }
      sub_25AB1DD6C((uint64_t)v32);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v30, v6);
      return v17;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v5, 1, 1, v6);
  }
  sub_25AB18FAC((uint64_t)v5, &qword_26A49FD30);
  sub_25AB150E0(v50, (uint64_t)v13);
  if (v49(v13, 1, v16) == 1)
  {
    sub_25AB18FAC((uint64_t)v13, &qword_26A49F9A0);
  }
  else
  {
    uint64_t v40 = sub_25AC345C0();
    os_log_type_t v41 = sub_25AC352C0();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v42 = 0;
      _os_log_impl(&dword_25AB11000, v40, v41, "Could not generate model URL", v42, 2u);
      MEMORY[0x261151C20](v42, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v51 + 8))(v13, v16);
  }
  sub_25AB1DC50();
  swift_allocError();
  swift_willThrow();
  return v17;
}

unint64_t sub_25AB1DC50()
{
  unint64_t result = qword_26A49FDB8;
  if (!qword_26A49FDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FDB8);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_25AB1DD08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CoreDataStoreConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25AB1DD6C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CoreDataStoreConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_25AB1DDC8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_25AB1DDD8()
{
  unint64_t result = qword_26A49FDC8;
  if (!qword_26A49FDC8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A49FDC8);
  }
  return result;
}

unint64_t sub_25AB1DE18()
{
  unint64_t result = qword_26A49FDD8;
  if (!qword_26A49FDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FDD8);
  }
  return result;
}

uint64_t (*sub_25AB1DE6C())()
{
  return j__swift_endAccess;
}

uint64_t sub_25AB1DECC(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_resolvedCustomerLocale;
  uint64_t v4 = sub_25AC324C0();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  v5(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_resolvedCardPreferredLocale, 1, 1, v4);
  uint64_t v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_analyticsLanguageSource);
  uint64_t *v6 = sub_25AC339E0();
  v6[1] = v7;
  *(void *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_cardDeclineCount) = 0;
  sub_25AC32440();
  *(void *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_disconnectionCount) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_attestationFailureCount) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_readerNotAvailableCount) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_vasErrorCount) = 0;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_readSuccessReceived) = 0;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_readerReadyReceived) = 0;
  uint64_t v8 = v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_transactionData;
  sub_25AB1E86C((uint64_t)v13);
  sub_25AB1E8A4((uint64_t)v13, v8);
  uint64_t v9 = v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_readerError;
  *(void *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 8) = -4;
  uint64_t v10 = v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_readErrorToReturn;
  *(void *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 8) = 1;
  uint64_t v11 = (void *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_cardReaderBlob);
  *uint64_t v11 = 0;
  v11[1] = 0;
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_25AB1E060(char a1)
{
  uint64_t v3 = sub_25AC32450();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  sub_25AB1E86C((uint64_t)v14);
  uint64_t v7 = v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_transactionData;
  swift_beginAccess();
  sub_25AB1E8A4(v7, (uint64_t)v15);
  sub_25AB1E8A4((uint64_t)v14, v7);
  sub_25AB1EA48((uint64_t)v15);
  uint64_t v8 = v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_readerError;
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = -4;
  uint64_t v9 = v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_readErrorToReturn;
  *(void *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 8) = 1;
  uint64_t v10 = (void *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_cardReaderBlob);
  *uint64_t v10 = 0;
  v10[1] = 0;
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_readSuccessReceived) = 0;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_readerReadyReceived) = 0;
  if ((a1 & 1) == 0)
  {
    sub_25AC32440();
    uint64_t v12 = v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_readId;
    swift_beginAccess();
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v4 + 40))(v12, v6, v3);
    uint64_t result = swift_endAccess();
    *(void *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_disconnectionCount) = 0;
    *(void *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_attestationFailureCount) = 0;
    *(void *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_readerNotAvailableCount) = 0;
    *(void *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_vasErrorCount) = 0;
  }
  return result;
}

uint64_t sub_25AB1E244()
{
  sub_25AC35580();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "retry count D=");
  sub_25AC35850();
  sub_25AC34F60();
  swift_bridgeObjectRelease();
  sub_25AC34F60();
  sub_25AC35850();
  sub_25AC34F60();
  swift_bridgeObjectRelease();
  sub_25AC34F60();
  sub_25AC35850();
  sub_25AC34F60();
  swift_bridgeObjectRelease();
  sub_25AC34F60();
  sub_25AC35850();
  sub_25AC34F60();
  swift_bridgeObjectRelease();
  return v1[0];
}

BOOL sub_25AB1E3DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_transactionData;
  swift_beginAccess();
  sub_25AB1E8A4(v2, (uint64_t)v18);
  sub_25AB1E8A4((uint64_t)v18, (uint64_t)v19);
  if (sub_25AB1E90C((uint64_t)v19) == 1) {
    return *(void *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_cardReaderBlob + 8) == 0;
  }
  sub_25AB1E8A4((uint64_t)v18, (uint64_t)v17);
  sub_25AB1E924((uint64_t)v17);
  sub_25AC33050();
  uint64_t v3 = sub_25AC337F0();
  uint64_t v5 = v4;
  if (v3 == sub_25AC337F0() && v5 == v6) {
    goto LABEL_4;
  }
  char v7 = sub_25AC35870();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    sub_25AC33050();
    uint64_t v8 = sub_25AC337F0();
    uint64_t v10 = v9;
    if (v8 == sub_25AC337F0() && v10 == v11)
    {
LABEL_4:
      swift_bridgeObjectRelease_n();
      goto LABEL_9;
    }
    char v12 = sub_25AC35870();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      sub_25AB1EA48((uint64_t)v18);
      return *(void *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_cardReaderBlob + 8) == 0;
    }
  }
LABEL_9:
  uint64_t v13 = v20;
  unint64_t v14 = v21;
  sub_25AB1EA48((uint64_t)v18);
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = v13 & 0xFFFFFFFFFFFFLL;
  }
  if (!v15) {
    return 0;
  }
  return *(void *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_cardReaderBlob + 8) == 0;
}

uint64_t sub_25AB1E58C()
{
  sub_25AB1EC14(v0 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_resolvedCustomerLocale);
  sub_25AB1EC14(v0 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_resolvedCardPreferredLocale);
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_readId;
  uint64_t v2 = sub_25AC32450();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_25AB1E8A4(v0 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_transactionData, (uint64_t)v4);
  sub_25AB1EA48((uint64_t)v4);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_25AB1E694()
{
  return type metadata accessor for TransactionStore();
}

uint64_t type metadata accessor for TransactionStore()
{
  uint64_t result = qword_26A49FDE0;
  if (!qword_26A49FDE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_25AB1E6E8()
{
  sub_25AB1E814();
  if (v0 <= 0x3F)
  {
    sub_25AC32450();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_25AB1E814()
{
  if (!qword_26A49FDF0)
  {
    sub_25AC324C0();
    unint64_t v0 = sub_25AC35470();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A49FDF0);
    }
  }
}

double sub_25AB1E86C(uint64_t a1)
{
  *(unsigned char *)(a1 + 336) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_25AB1E8A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FDF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25AB1E90C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_25AB1E924(uint64_t a1)
{
  uint64_t v4 = *(void **)(a1 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v2 = v4;
  return a1;
}

uint64_t sub_25AB1EA48(uint64_t a1)
{
  sub_25AB1EADC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void **)(a1 + 216));
  return a1;
}

uint64_t sub_25AB1EADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25AB1EC14(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FE00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_25AB1EC74(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_environment] = 5;
  uint64_t v11 = OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_discoveryCache;
  type metadata accessor for DiscoveryCache(0);
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = v4;
  swift_defaultActor_initialize();
  *(void *)(v12 + 112) = 0x40AC200000000000;
  uint64_t v14 = v12 + OBJC_IVAR____TtC21ProximityReaderDaemon14DiscoveryCache_cache;
  uint64_t v15 = type metadata accessor for DiscoveryCacheContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(void *)&v4[v11] = v12;
  uint64_t v16 = OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_contentWebService;
  type metadata accessor for ContentWebService();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  *(void *)&v13[v16] = v17;
  int v18 = &v13[OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_bundleId];
  *(void *)int v18 = a2;
  *((void *)v18 + 1) = a3;
  *(void *)&v13[OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_connection] = a1;
  type metadata accessor for DiscoveryAnalyticsManager();
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = (void *)(v19 + OBJC_IVAR____TtC21ProximityReaderDaemon25DiscoveryAnalyticsManager_analyticsSessionID);
  void *v20 = 0;
  v20[1] = 0;
  unint64_t v21 = (void *)(v19 + OBJC_IVAR____TtC21ProximityReaderDaemon25DiscoveryAnalyticsManager_appId);
  *unint64_t v21 = a2;
  v21[1] = a3;
  swift_bridgeObjectRetain();
  id v22 = a1;
  sub_25AC32E40();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FF38);
  *(void *)(v19 + OBJC_IVAR____TtC21ProximityReaderDaemon25DiscoveryAnalyticsManager_serializer) = sub_25AC32D10();
  *(void *)&v13[OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_analyticsManager] = v19;

  v35.receiver = v13;
  v35.super_class = ObjectType;
  id v23 = objc_msgSendSuper2(&v35, sel_init);
  uint64_t v24 = qword_26A49F830;
  id v25 = v23;
  if (v24 != -1) {
    swift_once();
  }
  uint64_t v26 = __swift_project_value_buffer(v8, (uint64_t)qword_26A4A1D78);
  sub_25AB150E0(v26, (uint64_t)v10);
  uint64_t v27 = sub_25AC345E0();
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v10, 1, v27) == 1)
  {

    sub_25AB18FAC((uint64_t)v10, &qword_26A49F9A0);
  }
  else
  {
    id v29 = sub_25AC345C0();
    os_log_type_t v30 = sub_25AC352D0();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_25AB11000, v29, v30, "created", v31, 2u);
      MEMORY[0x261151C20](v31, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v27);
  }
  return v25;
}

id sub_25AB1F004()
{
  unint64_t v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388]();
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F830 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v3, (uint64_t)qword_26A4A1D78);
  sub_25AB150E0(v6, (uint64_t)v5);
  uint64_t v7 = sub_25AC345E0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
  {
    sub_25AB18FAC((uint64_t)v5, &qword_26A49F9A0);
  }
  else
  {
    uint64_t v9 = sub_25AC345C0();
    os_log_type_t v10 = sub_25AC352D0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_25AB11000, v9, v10, "DiscoveryService deinit", v11, 2u);
      MEMORY[0x261151C20](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
  }
  v13.receiver = v1;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_dealloc);
}

uint64_t type metadata accessor for DiscoveryService()
{
  return self;
}

uint64_t sub_25AB1F2F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FF30);
  v5[7] = swift_task_alloc();
  uint64_t v6 = sub_25AC32D50();
  v5[8] = v6;
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  v5[11] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  v5[12] = swift_task_alloc();
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB1F438);
}

uint64_t sub_25AB1F438()
{
  if (qword_26A49F830 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[14];
  uint64_t v2 = __swift_project_value_buffer(v0[11], (uint64_t)qword_26A4A1D78);
  v0[15] = v2;
  sub_25AB150E0(v2, v1);
  uint64_t v3 = sub_25AC345E0();
  v0[16] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v0[17] = v4;
  uint64_t v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v0[18] = (uint64_t)v5;
  v0[19] = (v4 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v5(v1, 1, v3) == 1)
  {
    sub_25AB18FAC(v0[14], &qword_26A49F9A0);
  }
  else
  {
    uint64_t v6 = sub_25AC345C0();
    os_log_type_t v7 = sub_25AC352D0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_25AB11000, v6, v7, "DiscoveryService - get content", v8, 2u);
      MEMORY[0x261151C20](v8, -1, -1);
    }
    uint64_t v9 = v0[14];

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v3);
  }
  os_log_type_t v10 = (void *)swift_task_alloc();
  v0[20] = (uint64_t)v10;
  *os_log_type_t v10 = v0;
  v10[1] = sub_25AB1F640;
  return sub_25AB1FC90();
}

uint64_t sub_25AB1F640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void *)*v5;
  v6[21] = a2;
  v6[22] = a4;
  swift_task_dealloc();
  if (v4)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v7 = (uint64_t (*)(void))v6[1];
    return v7();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_25AB1F7C0);
  }
}

uint64_t sub_25AB1F7C0()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (uint64_t *)(v1 + 96);
    while (1)
    {
      uint64_t v4 = *(v3 - 1);
      uint64_t v5 = *v3;
      BOOL v6 = *(v3 - 3) == v0[2] && *(v3 - 2) == v0[3];
      if (v6 || (sub_25AC35870() & 1) != 0)
      {
        BOOL v7 = v4 == v0[4] && v5 == v0[5];
        if (v7 || (sub_25AC35870() & 1) != 0) {
          break;
        }
      }
      v3 += 9;
      if (!--v2) {
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25AC32D40();
    uint64_t v8 = 0;
  }
  else
  {
LABEL_15:
    uint64_t v8 = 1;
  }
  uint64_t v9 = v0[8];
  uint64_t v10 = v0[9];
  uint64_t v11 = v0[7];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v11, v8, 1, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9) == 1)
  {
    uint64_t v12 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[18];
    uint64_t v13 = v0[15];
    uint64_t v14 = v0[16];
    uint64_t v15 = v0[12];
    sub_25AB18FAC(v0[7], &qword_26A49FF30);
    sub_25AB150E0(v13, v15);
    if (v12(v15, 1, v14) == 1)
    {
      sub_25AB18FAC(v0[12], &qword_26A49F9A0);
    }
    else
    {
      unint64_t v21 = sub_25AC345C0();
      os_log_type_t v22 = sub_25AC352C0();
      if (os_log_type_enabled(v21, v22))
      {
        id v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v23 = 0;
        _os_log_impl(&dword_25AB11000, v21, v22, "DiscoveryService - content not found", v23, 2u);
        MEMORY[0x261151C20](v23, -1, -1);
      }
      uint64_t v24 = v0[16];
      uint64_t v25 = v0[17];
      uint64_t v26 = v0[12];

      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v24);
    }
    sub_25AB24D18();
    swift_allocError();
    *uint64_t v27 = 0;
    swift_willThrow();
LABEL_33:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v42 = (uint64_t (*)(void))v0[1];
    return v42();
  }
  (*(void (**)(void, void, void))(v0[9] + 32))(v0[10], v0[7], v0[8]);
  uint64_t v16 = sub_25ABE2B8C();
  if (v17 >> 60 == 15)
  {
    int v18 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[18];
    uint64_t v19 = v0[16];
    uint64_t v20 = v0[13];
    sub_25AB150E0(v0[15], v20);
    if (v18(v20, 1, v19) == 1)
    {
      sub_25AB18FAC(v0[13], &qword_26A49F9A0);
    }
    else
    {
      uint64_t v32 = sub_25AC345C0();
      os_log_type_t v33 = sub_25AC352C0();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v34 = 0;
        _os_log_impl(&dword_25AB11000, v32, v33, "DiscoveryService - content encoding error", v34, 2u);
        MEMORY[0x261151C20](v34, -1, -1);
      }
      uint64_t v35 = v0[16];
      uint64_t v36 = v0[17];
      uint64_t v37 = v0[13];

      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v35);
    }
    uint64_t v39 = v0[9];
    uint64_t v38 = v0[10];
    uint64_t v40 = v0[8];
    sub_25AB24D18();
    swift_allocError();
    *os_log_type_t v41 = 6;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    goto LABEL_33;
  }
  uint64_t v28 = v16;
  unint64_t v29 = v17;
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v30 = (uint64_t (*)(uint64_t, unint64_t))v0[1];
  return v30(v28, v29);
}

uint64_t sub_25AB1FC90()
{
  v1[6] = v0;
  uint64_t v2 = sub_25AC32420();
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  uint64_t v3 = sub_25AC324C0();
  v1[10] = v3;
  v1[11] = *(void *)(v3 - 8);
  v1[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FEB8);
  v1[13] = swift_task_alloc();
  v1[14] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB1FE50);
}

uint64_t sub_25AB1FE50()
{
  if (qword_26A49F830 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[20];
  uint64_t v2 = __swift_project_value_buffer(v0[14], (uint64_t)qword_26A4A1D78);
  v0[21] = v2;
  sub_25AB150E0(v2, v1);
  uint64_t v3 = sub_25AC345E0();
  v0[22] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v0[23] = v4;
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v0[24] = (uint64_t)v5;
  v0[25] = (v4 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  int v6 = v5(v1, 1, v3);
  uint64_t v7 = v0[20];
  if (v6 == 1)
  {
    sub_25AB18FAC(v0[20], &qword_26A49F9A0);
  }
  else
  {
    sub_25AB464DC(v0[6], 0x66696E614D746567, 0xED00002928747365, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  uint64_t v8 = v0[12];
  uint64_t v9 = v0[13];
  uint64_t v10 = v0[10];
  uint64_t v11 = v0[11];
  sub_25AC324B0();
  sub_25AC324A0();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8, v10);
  uint64_t v12 = sub_25AC32490();
  uint64_t v13 = *(void *)(v12 - 8);
  int v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12);
  uint64_t v15 = v0[13];
  if (v14 == 1)
  {
    sub_25AB18FAC(v0[13], &qword_26A49FEB8);
    uint64_t v16 = sub_25AC34100();
    uint64_t v18 = v17;
  }
  else
  {
    uint64_t v16 = sub_25AC32480();
    uint64_t v18 = v19;
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v12);
  }
  uint64_t v20 = v0[6];
  v0[26] = v18;
  v0[27] = v16;
  uint64_t v21 = OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_discoveryCache;
  v0[28] = OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_discoveryCache;
  v0[29] = *(void *)(v20 + v21);
  swift_retain();
  return MEMORY[0x270FA2498](sub_25AB200E8);
}

uint64_t sub_25AB200E8()
{
  uint64_t v1 = sub_25AB4B08C(v0[27], v0[26]);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  v0[2] = v1;
  v0[3] = v2;
  v0[4] = v4;
  v0[5] = v6;
  swift_release();
  v0[30] = v1;
  v0[31] = v3;
  v0[32] = v5;
  return MEMORY[0x270FA2498](sub_25AB20180);
}

uint64_t sub_25AB20180()
{
  if (v0[31])
  {
    uint64_t v31 = v0[31];
    uint64_t v30 = v0[5];
    uint64_t v1 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[24];
    uint64_t v3 = v0[21];
    uint64_t v2 = v0[22];
    uint64_t v4 = v0[19];
    swift_bridgeObjectRelease();
    sub_25AB150E0(v3, v4);
    if (v1(v4, 1, v2) == 1)
    {
      sub_25AB18FAC(v0[19], &qword_26A49F9A0);
    }
    else
    {
      uint64_t v10 = sub_25AC345C0();
      os_log_type_t v11 = sub_25AC352D0();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v12 = 0;
        _os_log_impl(&dword_25AB11000, v10, v11, "DiscoveryService - configuration read from cache", v12, 2u);
        MEMORY[0x261151C20](v12, -1, -1);
      }
      uint64_t v14 = v0[22];
      uint64_t v13 = v0[23];
      uint64_t v15 = v0[19];

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
    }
    uint64_t v29 = v0[32];
    uint64_t v16 = v0[30];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[1];
    return v17(v16, v31, v29, v30);
  }
  else
  {
    char v5 = sub_25AB23400();
    if (v5 == 5)
    {
      uint64_t v6 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[24];
      uint64_t v7 = v0[21];
      uint64_t v8 = v0[22];
      uint64_t v9 = v0[15];
      swift_bridgeObjectRelease();
      sub_25AB150E0(v7, v9);
      if (v6(v9, 1, v8) == 1)
      {
        sub_25AB18FAC(v0[15], &qword_26A49F9A0);
      }
      else
      {
        uint64_t v21 = sub_25AC345C0();
        os_log_type_t v22 = sub_25AC352C0();
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v23 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v23 = 0;
          _os_log_impl(&dword_25AB11000, v21, v22, "DiscoveryService - getManifest - unable to get environment", v23, 2u);
          MEMORY[0x261151C20](v23, -1, -1);
        }
        uint64_t v24 = v0[22];
        uint64_t v25 = v0[23];
        uint64_t v26 = v0[15];

        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v24);
      }
      sub_25AB24D18();
      swift_allocError();
      *uint64_t v27 = 6;
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v28 = (uint64_t (*)(void))v0[1];
      return v28();
    }
    else
    {
      char v19 = v5;
      uint64_t v20 = (void *)swift_task_alloc();
      v0[33] = v20;
      void *v20 = v0;
      v20[1] = sub_25AB2059C;
      return sub_25AB23C48(v19);
    }
  }
}

uint64_t sub_25AB2059C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 272) = v1;
  swift_task_dealloc();
  if (v1)
  {
    char v5 = sub_25AB21078;
  }
  else
  {
    *(void *)(v4 + 280) = a1;
    char v5 = sub_25AB206C4;
  }
  return MEMORY[0x270FA2498](v5);
}

uint64_t sub_25AB206C4()
{
  uint64_t v1 = sub_25AB24D6C(v0[35]);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  v0[36] = v3;
  v0[37] = v5;
  if (v3)
  {
    v0[38] = v7;
    swift_bridgeObjectRetain();
    uint64_t v8 = (void *)swift_task_alloc();
    v0[39] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_25AB2095C;
    return sub_25AB253A4(v1, v3);
  }
  else
  {
    uint64_t v10 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[24];
    uint64_t v11 = v0[21];
    uint64_t v12 = v0[22];
    uint64_t v13 = v0[16];
    swift_bridgeObjectRelease();
    sub_25AB150E0(v11, v13);
    if (v10(v13, 1, v12) == 1)
    {
      sub_25AB18FAC(v0[16], &qword_26A49F9A0);
    }
    else
    {
      uint64_t v14 = sub_25AC345C0();
      os_log_type_t v15 = sub_25AC352C0();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_25AB11000, v14, v15, "DiscoveryService - getManifest - unable to get region configuration", v16, 2u);
        MEMORY[0x261151C20](v16, -1, -1);
      }
      uint64_t v17 = v0[22];
      uint64_t v18 = v0[23];
      uint64_t v19 = v0[16];

      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v17);
    }
    sub_25AB24D18();
    swift_allocError();
    void *v20 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
}

uint64_t sub_25AB2095C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[40] = a1;
  v4[41] = a2;
  v4[42] = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v5 = sub_25AB20DC8;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_25AB20A7C;
  }
  return MEMORY[0x270FA2498](v5);
}

uint64_t sub_25AB20A7C()
{
  if (*(void *)(v0[41] + 16))
  {
    uint64_t v1 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[24];
    uint64_t v2 = v0[22];
    uint64_t v3 = v0[18];
    sub_25AB150E0(v0[21], v3);
    if (v1(v3, 1, v2) == 1)
    {
      sub_25AB18FAC(v0[18], &qword_26A49F9A0);
    }
    else
    {
      uint64_t v8 = sub_25AC345C0();
      os_log_type_t v9 = sub_25AC352D0();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v10 = 0;
        _os_log_impl(&dword_25AB11000, v8, v9, "DiscoveryService - configuration & manifest read from back-end", v10, 2u);
        MEMORY[0x261151C20](v10, -1, -1);
      }
      uint64_t v11 = v0[22];
      uint64_t v12 = v0[23];
      uint64_t v13 = v0[18];

      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v11);
    }
    v0[43] = *(void *)(v0[6] + v0[28]);
    swift_retain();
    sub_25AC32410();
    return MEMORY[0x270FA2498](sub_25AB20EC0);
  }
  else
  {
    uint64_t v4 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[24];
    uint64_t v6 = v0[21];
    uint64_t v5 = v0[22];
    uint64_t v7 = v0[17];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25AB150E0(v6, v7);
    if (v4(v7, 1, v5) == 1)
    {
      sub_25AB18FAC(v0[17], &qword_26A49F9A0);
    }
    else
    {
      uint64_t v14 = sub_25AC345C0();
      os_log_type_t v15 = sub_25AC352C0();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_25AB11000, v14, v15, "DiscoveryService - getManifest - empty manifest", v16, 2u);
        MEMORY[0x261151C20](v16, -1, -1);
      }
      uint64_t v17 = v0[22];
      uint64_t v18 = v0[23];
      uint64_t v19 = v0[17];

      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v17);
    }
    sub_25AB24D18();
    swift_allocError();
    void *v20 = 6;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
}

uint64_t sub_25AB20DC8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB20EC0()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[7];
  sub_25AB4ABC0(v1, v0[27], v0[26], v0[40], v0[41], v0[37], v0[38]);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return MEMORY[0x270FA2498](sub_25AB20F7C);
}

uint64_t sub_25AB20F7C()
{
  swift_bridgeObjectRelease();
  uint64_t v4 = v0[40];
  uint64_t v1 = v0[37];
  uint64_t v5 = v0[38];
  uint64_t v6 = v0[41];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[1];
  return v2(v4, v6, v1, v5);
}

uint64_t sub_25AB21078()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB212D8(int a1, int a2, void *aBlock, void *a4)
{
  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  uint64_t v6 = sub_25AC34E40();
  uint64_t v8 = v7;
  v4[4] = v7;
  uint64_t v9 = sub_25AC34E40();
  uint64_t v11 = v10;
  v4[5] = v10;
  a4;
  uint64_t v12 = (void *)swift_task_alloc();
  v4[6] = v12;
  *uint64_t v12 = v4;
  v12[1] = sub_25AB213D4;
  return sub_25AB1F2F0(v6, v8, v9, v11);
}

uint64_t sub_25AB213D4(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = *v3;
  uint64_t v8 = *(void **)(*v3 + 16);
  uint64_t v9 = *v3;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4)
  {
    uint64_t v10 = sub_25AC321E0();

    uint64_t v11 = 0;
    uint64_t v12 = (void *)v10;
  }
  else
  {
    uint64_t v11 = sub_25AC32380();
    sub_25AB16958(a1, a2);
    uint64_t v10 = 0;
    uint64_t v12 = (void *)v11;
  }
  uint64_t v13 = *(void (***)(void, void, void))(v7 + 24);
  v13[2](v13, v11, v10);

  _Block_release(v13);
  uint64_t v14 = *(uint64_t (**)(void))(v9 + 8);
  return v14();
}

uint64_t sub_25AB215AC()
{
  void v1[2] = v0;
  v1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB21654);
}

uint64_t sub_25AB21654()
{
  if (qword_26A49F830 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[5];
  uint64_t v2 = __swift_project_value_buffer(v0[3], (uint64_t)qword_26A4A1D78);
  v0[6] = v2;
  sub_25AB150E0(v2, v1);
  uint64_t v3 = sub_25AC345E0();
  v0[7] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v0[8] = v4;
  uint64_t v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v0[9] = (uint64_t)v5;
  v0[10] = (v4 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v5(v1, 1, v3) == 1)
  {
    sub_25AB18FAC(v0[5], &qword_26A49F9A0);
  }
  else
  {
    uint64_t v6 = sub_25AC345C0();
    os_log_type_t v7 = sub_25AC352D0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_25AB11000, v6, v7, "DiscoveryService - get content list", v8, 2u);
      MEMORY[0x261151C20](v8, -1, -1);
    }
    uint64_t v9 = v0[5];

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v3);
  }
  uint64_t v10 = (void *)swift_task_alloc();
  v0[11] = (uint64_t)v10;
  *uint64_t v10 = v0;
  v10[1] = sub_25AB2185C;
  return sub_25AB1FC90();
}

uint64_t sub_25AB2185C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)*v5;
  uint64_t v10 = (void *)*v5;
  swift_task_dealloc();
  if (v4)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v10[1];
    return v11();
  }
  else
  {
    v9[12] = a4;
    v9[13] = a2;
    v9[14] = a1;
    return MEMORY[0x270FA2498](sub_25AB219C8);
  }
}

uint64_t sub_25AB219C8()
{
  unint64_t v1 = sub_25AB25C08(v0[14], v0[13]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_25ABE3014(v1);
  unint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if (v4 >> 60 == 15)
  {
    uint64_t v5 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[9];
    uint64_t v6 = v0[7];
    uint64_t v7 = v0[4];
    sub_25AB150E0(v0[6], v7);
    if (v5(v7, 1, v6) == 1)
    {
      sub_25AB18FAC(v0[4], &qword_26A49F9A0);
    }
    else
    {
      uint64_t v10 = sub_25AC345C0();
      os_log_type_t v11 = sub_25AC352C0();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v12 = 0;
        _os_log_impl(&dword_25AB11000, v10, v11, "DiscoveryService - content list encoding error", v12, 2u);
        MEMORY[0x261151C20](v12, -1, -1);
      }
      uint64_t v13 = v0[7];
      uint64_t v14 = v0[8];
      uint64_t v15 = v0[4];

      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v13);
    }
    sub_25AB24D18();
    swift_allocError();
    void *v16 = 6;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(uint64_t, unint64_t))v0[1];
    return v8(v2, v4);
  }
}

uint64_t sub_25AB21D48(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  unint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *unint64_t v4 = v2;
  v4[1] = sub_25AB21DF0;
  return sub_25AB215AC();
}

uint64_t sub_25AB21DF0(uint64_t a1, unint64_t a2)
{
  unint64_t v4 = v2;
  uint64_t v7 = *v3;
  uint64_t v8 = *(void **)(*v3 + 16);
  uint64_t v9 = *v3;
  swift_task_dealloc();

  if (v4)
  {
    uint64_t v10 = sub_25AC321E0();

    uint64_t v11 = 0;
    uint64_t v12 = (void *)v10;
  }
  else
  {
    uint64_t v11 = sub_25AC32380();
    sub_25AB16958(a1, a2);
    uint64_t v10 = 0;
    uint64_t v12 = (void *)v11;
  }
  uint64_t v13 = *(void (***)(void, void, void))(v7 + 24);
  v13[2](v13, v11, v10);

  _Block_release(v13);
  uint64_t v14 = *(uint64_t (**)(void))(v9 + 8);
  return v14();
}

uint64_t sub_25AB21F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v4[13] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB22034);
}

uint64_t sub_25AB22034()
{
  if (qword_26A49F830 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[15];
  uint64_t v2 = __swift_project_value_buffer(v0[13], (uint64_t)qword_26A4A1D78);
  v0[16] = v2;
  sub_25AB150E0(v2, v1);
  uint64_t v3 = sub_25AC345E0();
  v0[17] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v0[18] = v4;
  uint64_t v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v0[19] = v5;
  v0[20] = (v4 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v5(v1, 1, v3) == 1)
  {
    sub_25AB18FAC(v0[15], &qword_26A49F9A0);
  }
  else
  {
    uint64_t v6 = sub_25AC345C0();
    os_log_type_t v7 = sub_25AC352D0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_25AB11000, v6, v7, "DiscoveryService - get layoutBundle", v8, 2u);
      MEMORY[0x261151C20](v8, -1, -1);
    }
    uint64_t v9 = v0[15];

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v3);
  }
  uint64_t v10 = (uint64_t (*)(void))sub_25AC34000();
  char v11 = v10();
  swift_release();
  if ((v11 & 1) != 0
    && (id v12 = objc_msgSend(self, sel_standardUserDefaults),
        uint64_t v13 = (void *)sub_25AC34E10(),
        unsigned int v14 = objc_msgSend(v12, sel_BOOLForKey_, v13),
        v13,
        v12,
        v14))
  {
    sub_25AB24D18();
    swift_allocError();
    void *v15 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
  else
  {
    uint64_t v18 = (void *)swift_task_alloc();
    v0[21] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_25AB22338;
    return sub_25AB1FC90();
  }
}

uint64_t sub_25AB22338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void *)*v5;
  _OWORD v6[2] = v5;
  v6[3] = a1;
  v6[4] = a2;
  v6[5] = a3;
  v6[6] = a4;
  v6[7] = v4;
  os_log_type_t v7 = (void *)*v5;
  v6[22] = a2;
  v6[23] = a4;
  swift_task_dealloc();
  if (v4)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v7[1];
    return v8();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_25AB2249C);
  }
}

uint64_t sub_25AB2249C()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (uint64_t *)(v1 + 48);
    while (1)
    {
      uint64_t v5 = *v3;
      uint64_t v4 = v3[1];
      uint64_t v6 = v3[2];
      BOOL v7 = *(v3 - 2) == v0[10] && *(v3 - 1) == v0[11];
      if (v7 || (sub_25AC35870() & 1) != 0) {
        break;
      }
      v3 += 9;
      if (!--v2) {
        goto LABEL_9;
      }
    }
    uint64_t v24 = v0[5];
    uint64_t v25 = v0[23];
    uint64_t v19 = (void *)v0[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v0[8] = v6;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_25AC35850();
    uint64_t v22 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    *uint64_t v19 = v24;
    v19[1] = v25;
    v19[2] = v5;
    v19[3] = v4;
    v19[4] = v20;
    v19[5] = v22;
    uint64_t v18 = (uint64_t (*)(void))v0[1];
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[19];
    uint64_t v9 = v0[17];
    uint64_t v10 = v0[14];
    sub_25AB150E0(v0[16], v10);
    if (v8(v10, 1, v9) == 1)
    {
      sub_25AB18FAC(v0[14], &qword_26A49F9A0);
    }
    else
    {
      char v11 = sub_25AC345C0();
      os_log_type_t v12 = sub_25AC352C0();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v13 = 0;
        _os_log_impl(&dword_25AB11000, v11, v12, "DiscoveryService - get layoutBundle - content not found", v13, 2u);
        MEMORY[0x261151C20](v13, -1, -1);
      }
      uint64_t v14 = v0[17];
      uint64_t v15 = v0[18];
      uint64_t v16 = v0[14];

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v14);
    }
    sub_25AB24D18();
    swift_allocError();
    *uint64_t v17 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
  }
  return v18();
}

uint64_t sub_25AB228CC(int a1, void *aBlock, void *a3)
{
  v3[8] = a3;
  v3[9] = _Block_copy(aBlock);
  uint64_t v5 = sub_25AC34E40();
  uint64_t v7 = v6;
  v3[10] = v6;
  a3;
  uint64_t v8 = (void *)swift_task_alloc();
  v3[11] = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_25AB229B4;
  return sub_25AB21F88((uint64_t)(v3 + 2), v5, v7);
}

uint64_t sub_25AB229B4()
{
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void **)(*v1 + 64);
  uint64_t v5 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  uint64_t v6 = *(void (***)(void, void, void, void, void))(v3 + 72);
  if (v2)
  {
    uint64_t v7 = (void *)sub_25AC321E0();

    ((void (**)(void, void, void, void, void *))v6)[2](v6, 0, 0, 0, v7);
    _Block_release(v6);
  }
  else
  {
    uint64_t v8 = (void *)sub_25AC34E10();
    uint64_t v9 = (void *)sub_25AC34E10();
    uint64_t v10 = (void *)sub_25AC34E10();
    ((void (**)(void, void *, void *, void *, void))v6)[2](v6, v8, v9, v10, 0);

    _Block_release(v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  char v11 = *(uint64_t (**)(void))(v5 + 8);
  return v11();
}

uint64_t sub_25AB22C64()
{
  void v1[2] = v0;
  v1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  v1[4] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB22CFC);
}

uint64_t sub_25AB22CFC()
{
  if (qword_26A49F830 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[4];
  uint64_t v2 = __swift_project_value_buffer(v0[3], (uint64_t)qword_26A4A1D78);
  sub_25AB150E0(v2, v1);
  uint64_t v3 = sub_25AC345E0();
  uint64_t v4 = *(void *)(v3 - 8);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  uint64_t v6 = v0[4];
  if (v5 == 1)
  {
    sub_25AB18FAC(v0[4], &qword_26A49F9A0);
  }
  else
  {
    sub_25AB464DC(v0[2], 0x65526C65636E6163, 0xEF29287473657571, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v7 = *(void **)(*(void *)(v0[2] + OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_contentWebService) + 16);
  if (v7) {
    objc_msgSend(v7, sel_cancel);
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_25AB22FF8(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25AB230A0;
  return sub_25AB22C64();
}

uint64_t sub_25AB230A0()
{
  uint64_t v1 = *(void (***)(void))(*v0 + 24);
  uint64_t v2 = *(void **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();

  v1[2](v1);
  _Block_release(v1);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_25AB231D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F830 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1D78);
  sub_25AB150E0(v5, (uint64_t)v4);
  uint64_t v6 = sub_25AC345E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_25AB18FAC((uint64_t)v4, &qword_26A49F9A0);
  }
  else
  {
    sub_25AB464DC(v1, 0xD00000000000001DLL, 0x800000025AC3DB60, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  return sub_25AB2B898();
}

uint64_t sub_25AB23400()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25AC330F0();
  uint64_t v53 = *(void *)(v2 - 8);
  uint64_t v54 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25AC32EE0();
  uint64_t v52 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v55 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25AC32F20();
  uint64_t v56 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v49 - v14;
  uint64_t v16 = (uint64_t (*)(void))sub_25AC34000();
  char v17 = v16();
  swift_release();
  if (v17)
  {
    uint64_t v50 = v7;
    uint64_t v51 = v4;
    uint64_t v18 = sub_25AC34150();
    uint64_t v20 = v19;
    uint64_t v21 = sub_25AC34090();
    uint64_t v22 = sub_25AB38B5C(v18, v20, v21);
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v61[0] = v22;
    v61[1] = v24;
    uint64_t v59 = 45;
    unint64_t v60 = 0xE100000000000000;
    uint64_t v57 = 0;
    unint64_t v58 = 0xE000000000000000;
    sub_25AB25ABC();
    sub_25AC354D0();
    swift_bridgeObjectRelease();
    sub_25AC34EC0();
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_25AB91F78();
    if (v25 == 5)
    {
      if (qword_26A49F830 != -1) {
        swift_once();
      }
      uint64_t v26 = __swift_project_value_buffer(v10, (uint64_t)qword_26A4A1D78);
      sub_25AB150E0(v26, (uint64_t)v13);
      uint64_t v27 = sub_25AC345E0();
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v13, 1, v27) == 1)
      {
        sub_25AB18FAC((uint64_t)v13, &qword_26A49F9A0);
      }
      else
      {
        uint64_t v43 = sub_25AC345C0();
        os_log_type_t v44 = sub_25AC352C0();
        if (os_log_type_enabled(v43, v44))
        {
          int v45 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)int v45 = 0;
          _os_log_impl(&dword_25AB11000, v43, v44, "Content environment could not be loaded", v45, 2u);
          MEMORY[0x261151C20](v45, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v27);
      }
      (*(void (**)(char *, void, uint64_t))(v52 + 104))(v55, *MEMORY[0x263F15478], v5);
      (*(void (**)(char *, void, uint64_t))(v53 + 104))(v51, *MEMORY[0x263F154D0], v54);
      id v46 = objc_msgSend(self, sel_processInfo);
      id v47 = objc_msgSend(v46, sel_processName);

      sub_25AC34E40();
      sub_25AC32F10();
      sub_25AC330E0();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v9, v50);
      return 5;
    }
  }
  else
  {
    id v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFB210]), sel_init);
    id v30 = objc_msgSend(v29, sel_aa_primaryAppleAccount);

    if (v30 && (unsigned __int8 v31 = objc_msgSend(v30, sel_aa_isSandboxAccount), v30, (v31 & 1) != 0)) {
      uint64_t v25 = 3;
    }
    else {
      uint64_t v25 = 4;
    }
  }
  uint64_t v32 = OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_environment;
  int v33 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_environment);
  if (v33 == 5 || (sub_25AB37A20(v33, v25) & 1) == 0)
  {
    *(unsigned char *)(v1 + v32) = v25;
    if (qword_26A49F830 != -1) {
      swift_once();
    }
    uint64_t v34 = __swift_project_value_buffer(v10, (uint64_t)qword_26A4A1D78);
    sub_25AB150E0(v34, (uint64_t)v15);
    uint64_t v35 = sub_25AC345E0();
    uint64_t v36 = *(void *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v15, 1, v35) == 1)
    {
      sub_25AB18FAC((uint64_t)v15, &qword_26A49F9A0);
    }
    else
    {
      uint64_t v37 = sub_25AC345C0();
      os_log_type_t v38 = sub_25AC352D0();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        uint64_t v40 = swift_slowAlloc();
        v61[0] = v40;
        *(_DWORD *)uint64_t v39 = 136315138;
        unint64_t v41 = 0xE300000000000000;
        uint64_t v42 = 7759204;
        switch((char)v25)
        {
          case 1:
            unint64_t v41 = 0xE200000000000000;
            uint64_t v42 = 24945;
            break;
          case 2:
            unint64_t v41 = 0xEB00000000676E69;
            uint64_t v42 = 0x74656B72616D6171;
            break;
          case 3:
            unint64_t v41 = 0xE500000000000000;
            uint64_t v42 = 0x7466617264;
            break;
          case 4:
            unint64_t v41 = 0xE400000000000000;
            uint64_t v42 = 1685025392;
            break;
          default:
            break;
        }
        uint64_t v59 = sub_25AB56574(v42, v41, v61);
        sub_25AC354A0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25AB11000, v37, v38, "\nENVIRONMENT: ------------------------------------\ncontents: %s\n-------------------------------------------------", v39, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x261151C20](v40, -1, -1);
        MEMORY[0x261151C20](v39, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v35);
    }
  }
  return v25;
}

uint64_t sub_25AB23C48(char a1)
{
  *(void *)(v2 + 120) = v1;
  *(unsigned char *)(v2 + 57) = a1;
  *(void *)(v2 + 128) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  *(void *)(v2 + 136) = swift_task_alloc();
  *(void *)(v2 + 144) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB23CF4);
}

uint64_t sub_25AB23CF4()
{
  if (qword_26A49F830 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = __swift_project_value_buffer(*(void *)(v0 + 128), (uint64_t)qword_26A4A1D78);
  *(void *)(v0 + 152) = v2;
  sub_25AB150E0(v2, v1);
  uint64_t v3 = sub_25AC345E0();
  *(void *)(v0 + 160) = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)(v0 + 168) = v4;
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  *(void *)(v0 + 176) = v5;
  *(void *)(v0 + 184) = (v4 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  int v6 = v5(v1, 1, v3);
  uint64_t v7 = *(void *)(v0 + 144);
  if (v6 == 1)
  {
    sub_25AB18FAC(*(void *)(v0 + 144), &qword_26A49F9A0);
  }
  else
  {
    sub_25AB464DC(*(void *)(v0 + 120), 0xD000000000000016, 0x800000025AC3DBA0, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  *(void *)(v0 + 192) = *(void *)(*(void *)(v0 + 120)
                                    + OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_contentWebService);
  swift_retain();
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_25AB23ED8;
  char v9 = *(unsigned char *)(v0 + 57);
  return sub_25AB97794(v0 + 64, v9);
}

uint64_t sub_25AB23ED8()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_25AB23FF0);
}

uint64_t sub_25AB23FF0()
{
  sub_25AB259D8(v0 + 64, v0 + 16, &qword_26A49FED8);
  if (*(unsigned char *)(v0 + 56))
  {
    uint64_t v1 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 176);
    uint64_t v2 = *(void *)(v0 + 160);
    uint64_t v3 = *(void *)(v0 + 136);
    int v4 = *(unsigned __int8 *)(v0 + 16);
    uint64_t v5 = 6;
    if (v4 == 3) {
      uint64_t v5 = 3;
    }
    if (v4 == 5) {
      uint64_t v6 = 5;
    }
    else {
      uint64_t v6 = v5;
    }
    sub_25AB150E0(*(void *)(v0 + 152), *(void *)(v0 + 136));
    if (v1(v3, 1, v2) == 1)
    {
      sub_25AB18FAC(*(void *)(v0 + 136), &qword_26A49F9A0);
    }
    else
    {
      uint64_t v10 = sub_25AC345C0();
      os_log_type_t v11 = sub_25AC352C0();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        uint64_t v13 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 138412290;
        sub_25AB24D18();
        swift_allocError();
        *uint64_t v14 = v6;
        uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v0 + 112) = v15;
        sub_25AC354A0();
        *uint64_t v13 = v15;
        _os_log_impl(&dword_25AB11000, v10, v11, "DiscoveryService - getConfiguration - %@", v12, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A8);
        swift_arrayDestroy();
        MEMORY[0x261151C20](v13, -1, -1);
        MEMORY[0x261151C20](v12, -1, -1);
      }
      uint64_t v16 = *(void *)(v0 + 160);
      uint64_t v17 = *(void *)(v0 + 168);
      uint64_t v18 = *(void *)(v0 + 136);

      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v16);
    }
    sub_25AB24D18();
    swift_allocError();
    *uint64_t v19 = v6;
    swift_willThrow();
    sub_25AB25A3C(v0 + 64, (void (*)(void, void, void, void, void, void))sub_25AB25A7C);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v8(v7);
  }
}

uint64_t sub_25AB242D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  int v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *int v4 = v3;
  v4[1] = sub_25AB25F50;
  return v6();
}

uint64_t sub_25AB243A0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_25AB25F50;
  return v7();
}

uint64_t sub_25AB2446C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25AC35140();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_25AC35130();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_25AB18FAC(a1, &qword_26A4A0070);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25AC350E0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_25AB24618(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25AB246F4;
  return v6(a1);
}

uint64_t sub_25AB246F4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_25AB247F0()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_25AB25F50;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_26A49FE38 + dword_26A49FE38);
  return v5(v2, v3);
}

uint64_t sub_25AB248A0()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_25AB25F50;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_26A49FE48 + dword_26A49FE48);
  return v6(v2, v3, v4);
}

uint64_t sub_25AB24964(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_25AB25F50;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_26A49FE58 + dword_26A49FE58);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_25AB24A30()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25AB24A68(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25AB24B20;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26A49FE68 + dword_26A49FE68);
  return v6(a1, v4);
}

uint64_t sub_25AB24B20()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_25AB24C14()
{
  _Block_release(*(const void **)(v0 + 24));
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25AB24C5C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_25AB25F50;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_26A49FE80 + dword_26A49FE80);
  return v6(v2, v3, v4);
}

unint64_t sub_25AB24D18()
{
  unint64_t result = qword_26A49FEB0;
  if (!qword_26A49FEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FEB0);
  }
  return result;
}

uint64_t sub_25AB24D6C(uint64_t a1)
{
  uint64_t v55 = sub_25AC324C0();
  uint64_t v2 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v54 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FEB8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v51 = a1 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  int64_t v49 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v53 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v12 = 0;
  uint64_t v50 = a1;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_26;
    }
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    if (v15 >= v49) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v51 + 8 * v15);
    ++v12;
    if (!v16)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v49) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v51 + 8 * v12);
      if (!v16)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v49) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v51 + 8 * v12);
        if (!v16)
        {
          int64_t v12 = v15 + 3;
          if (v15 + 3 >= v49) {
            goto LABEL_33;
          }
          unint64_t v16 = *(void *)(v51 + 8 * v12);
          if (!v16)
          {
            int64_t v12 = v15 + 4;
            if (v15 + 4 >= v49) {
              goto LABEL_33;
            }
            unint64_t v16 = *(void *)(v51 + 8 * v12);
            if (!v16) {
              break;
            }
          }
        }
      }
    }
LABEL_25:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_26:
    uint64_t v18 = 16 * v14;
    uint64_t v19 = (uint64_t *)(*(void *)(a1 + 48) + v18);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    uint64_t v52 = *(void *)(*(void *)(a1 + 56) + v18);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v22 = v54;
    sub_25AC324B0();
    sub_25AC324A0();
    (*v53)(v22, v55);
    uint64_t v23 = sub_25AC32490();
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v6, 1, v23) == 1)
    {
      sub_25AB18FAC((uint64_t)v6, &qword_26A49FEB8);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v25 = sub_25AC32480();
      uint64_t v27 = v26;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v23);
      if (v21 == v25 && v20 == v27)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v52;
      }
      char v29 = sub_25AC35870();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v29)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return v52;
      }
      a1 = v50;
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v17 = v15 + 5;
  if (v17 < v49)
  {
    unint64_t v16 = *(void *)(v51 + 8 * v17);
    if (!v16)
    {
      while (1)
      {
        int64_t v12 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          break;
        }
        if (v12 >= v49) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v51 + 8 * v12);
        ++v17;
        if (v16) {
          goto LABEL_25;
        }
      }
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    int64_t v12 = v17;
    goto LABEL_25;
  }
LABEL_33:
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v30 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v31 = -1;
  if (v30 < 64) {
    uint64_t v31 = ~(-1 << v30);
  }
  unint64_t v32 = v31 & *(void *)(a1 + 64);
  int64_t v33 = (unint64_t)(v30 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v34 = 0;
  if (!v32) {
    goto LABEL_37;
  }
  while (2)
  {
    unint64_t v35 = __clz(__rbit64(v32));
    v32 &= v32 - 1;
    unint64_t v36 = v35 | (v34 << 6);
LABEL_55:
    uint64_t v40 = 16 * v36;
    unint64_t v41 = (uint64_t *)(*(void *)(a1 + 48) + v40);
    uint64_t v43 = *v41;
    uint64_t v42 = v41[1];
    uint64_t v44 = *(void *)(*(void *)(a1 + 56) + v40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v43 == sub_25AC34100() && v42 == v45)
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_66:
      swift_bridgeObjectRelease();
      return v44;
    }
    char v47 = sub_25AC35870();
    swift_bridgeObjectRelease();
    if (v47)
    {
      swift_release();
      goto LABEL_66;
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    a1 = v50;
    if (v32) {
      continue;
    }
    break;
  }
LABEL_37:
  int64_t v37 = v34 + 1;
  if (__OFADD__(v34, 1)) {
    goto LABEL_70;
  }
  if (v37 >= v33)
  {
LABEL_67:
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  unint64_t v38 = *(void *)(v51 + 8 * v37);
  ++v34;
  if (v38) {
    goto LABEL_54;
  }
  int64_t v34 = v37 + 1;
  if (v37 + 1 >= v33) {
    goto LABEL_67;
  }
  unint64_t v38 = *(void *)(v51 + 8 * v34);
  if (v38) {
    goto LABEL_54;
  }
  int64_t v34 = v37 + 2;
  if (v37 + 2 >= v33) {
    goto LABEL_67;
  }
  unint64_t v38 = *(void *)(v51 + 8 * v34);
  if (v38) {
    goto LABEL_54;
  }
  int64_t v34 = v37 + 3;
  if (v37 + 3 >= v33) {
    goto LABEL_67;
  }
  unint64_t v38 = *(void *)(v51 + 8 * v34);
  if (v38) {
    goto LABEL_54;
  }
  int64_t v34 = v37 + 4;
  if (v37 + 4 >= v33) {
    goto LABEL_67;
  }
  unint64_t v38 = *(void *)(v51 + 8 * v34);
  if (v38) {
    goto LABEL_54;
  }
  int64_t v39 = v37 + 5;
  if (v39 >= v33) {
    goto LABEL_67;
  }
  unint64_t v38 = *(void *)(v51 + 8 * v39);
  if (v38)
  {
    int64_t v34 = v39;
LABEL_54:
    unint64_t v32 = (v38 - 1) & v38;
    unint64_t v36 = __clz(__rbit64(v38)) + (v34 << 6);
    goto LABEL_55;
  }
  while (1)
  {
    int64_t v34 = v39 + 1;
    if (__OFADD__(v39, 1)) {
      break;
    }
    if (v34 >= v33) {
      goto LABEL_67;
    }
    unint64_t v38 = *(void *)(v51 + 8 * v34);
    ++v39;
    if (v38) {
      goto LABEL_54;
    }
  }
LABEL_72:
  __break(1u);
  return result;
}

uint64_t sub_25AB253A4(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  v3[18] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  v3[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB25440);
}

uint64_t sub_25AB25440()
{
  v0[20] = *(void *)(v0[17] + OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_contentWebService);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_26A4A0CE0 + dword_26A4A0CE0);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[21] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25AB2551C;
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[16];
  return v5((uint64_t)(v0 + 8), v2, v3);
}

uint64_t sub_25AB2551C()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_25AB25634);
}

uint64_t sub_25AB25634()
{
  sub_25AB259D8(v0 + 64, v0 + 16, &qword_26A49FED0);
  if (*(unsigned char *)(v0 + 56))
  {
    int v1 = *(unsigned __int8 *)(v0 + 16);
    uint64_t v2 = 6;
    if (v1 == 3) {
      uint64_t v2 = 3;
    }
    if (v1 == 5) {
      uint64_t v3 = 5;
    }
    else {
      uint64_t v3 = v2;
    }
    if (qword_26A49F830 != -1) {
      swift_once();
    }
    uint64_t v4 = *(void *)(v0 + 152);
    uint64_t v5 = __swift_project_value_buffer(*(void *)(v0 + 144), (uint64_t)qword_26A4A1D78);
    sub_25AB150E0(v5, v4);
    uint64_t v6 = sub_25AC345E0();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
    {
      sub_25AB18FAC(*(void *)(v0 + 152), &qword_26A49F9A0);
    }
    else
    {
      int64_t v12 = sub_25AC345C0();
      os_log_type_t v13 = sub_25AC352C0();
      if (os_log_type_enabled(v12, v13))
      {
        unint64_t v14 = (uint8_t *)swift_slowAlloc();
        uint64_t v22 = v3;
        int64_t v15 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v14 = 138412290;
        sub_25AB24D18();
        swift_allocError();
        uint64_t *v16 = v22;
        uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v0 + 112) = v17;
        sub_25AC354A0();
        void *v15 = v17;
        _os_log_impl(&dword_25AB11000, v12, v13, "DiscoveryService - getManifest - %@", v14, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A8);
        swift_arrayDestroy();
        uint64_t v18 = v15;
        uint64_t v3 = v22;
        MEMORY[0x261151C20](v18, -1, -1);
        MEMORY[0x261151C20](v14, -1, -1);
      }
      uint64_t v19 = *(void *)(v0 + 152);

      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v19, v6);
    }
    sub_25AB24D18();
    swift_allocError();
    uint64_t *v20 = v3;
    swift_willThrow();
    sub_25AB25A3C(v0 + 64, (void (*)(void, void, void, void, void, void))sub_25AB25994);
    swift_task_dealloc();
    uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
    return v21();
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 16);
    uint64_t v8 = *(void *)(v0 + 24);
    swift_task_dealloc();
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v10(v9, v8);
  }
}

uint64_t sub_25AB25994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = vars8;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB259D8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25AB25A3C(uint64_t a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_25AB25A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = vars8;
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_25AB25ABC()
{
  unint64_t result = qword_26A4A0F90;
  if (!qword_26A4A0F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0F90);
  }
  return result;
}

uint64_t objectdestroyTm()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25AB25B54()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_25AB24B20;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_26A49FEE0 + dword_26A49FEE0);
  return v5(v2, v3);
}

unint64_t sub_25AB25C08(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = sub_25AC32D50();
  uint64_t v3 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a2 + 16);
  if (!v6) {
    return MEMORY[0x263F8EE78];
  }
  v13[2] = v3 + 32;
  swift_bridgeObjectRetain();
  v13[1] = a2;
  uint64_t v7 = a2 + 96;
  unint64_t v8 = MEMORY[0x263F8EE78];
  uint64_t v14 = v3;
  int64_t v15 = v5;
  do
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25AC32D40();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v8 = sub_25AB90990(0, *(void *)(v8 + 16) + 1, 1, v8);
    }
    unint64_t v10 = *(void *)(v8 + 16);
    unint64_t v9 = *(void *)(v8 + 24);
    uint64_t v11 = v14;
    if (v10 >= v9 >> 1) {
      unint64_t v8 = sub_25AB90990(v9 > 1, v10 + 1, 1, v8);
    }
    *(void *)(v8 + 16) = v10 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v8+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v10, v15, v16);
    v7 += 72;
    --v6;
  }
  while (v6);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_25AB25DF8()
{
  _Block_release(*(const void **)(v0 + 32));
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25AB25E48()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  void *v6 = v1;
  v6[1] = sub_25AB25F50;
  uint64_t v7 = (uint64_t (*)(int, int, void *, void *))((char *)&dword_26A49FF08 + dword_26A49FF08);
  return v7(v2, v3, v5, v4);
}

uint64_t objectdestroy_4Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t (*sub_25AB25F54())()
{
  return j__swift_endAccess;
}

uint64_t sub_25AB25FA8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25AB1E8A4(v0 + 48, (uint64_t)v2);
  sub_25AB1EA48((uint64_t)v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PINStore()
{
  return self;
}

uint64_t sub_25AB26034()
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  uint64_t v1 = sub_25AC34D60();
  MEMORY[0x270FA5388](v1);
  long long v14 = xmmword_25AC37F30;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(&v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)], v0, v1);
  sub_25AB29C70(&qword_26A49FF60, MEMORY[0x263F045C0]);
  sub_25AC35020();
  uint64_t v4 = v11;
  unint64_t v5 = v12;
  if (v12 != *(void *)(v11 + 16))
  {
    unint64_t v6 = v12;
    do
    {
      if ((v5 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_9:
        __break(1u);
      }
      if (v6 >= *(void *)(v4 + 16)) {
        goto LABEL_9;
      }
      char v8 = *(unsigned char *)(v4 + 32 + v6++);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FF68);
      void v13[3] = v7;
      v13[4] = sub_25AB29CB8();
      LOBYTE(v13[0]) = v8;
      v10[7] = *(unsigned char *)__swift_project_boxed_opaque_existential_1(v13, v7);
      sub_25AC32360();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v6 != *(void *)(v11 + 16));
  }
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_25AB26288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[55] = a4;
  v5[56] = v4;
  v5[53] = a2;
  v5[54] = a3;
  v5[52] = a1;
  uint64_t v6 = sub_25AC34D80();
  v5[57] = v6;
  v5[58] = *(void *)(v6 - 8);
  v5[59] = swift_task_alloc();
  uint64_t v7 = sub_25AC34D60();
  v5[60] = v7;
  v5[61] = *(void *)(v7 - 8);
  v5[62] = swift_task_alloc();
  v5[63] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  v5[64] = swift_task_alloc();
  v5[65] = swift_task_alloc();
  v5[66] = swift_task_alloc();
  v5[67] = swift_task_alloc();
  v5[68] = swift_task_alloc();
  v5[69] = swift_task_alloc();
  v5[70] = swift_task_alloc();
  v5[71] = swift_task_alloc();
  v5[72] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB26470);
}

uint64_t sub_25AB26470()
{
  uint64_t v119 = v0;
  uint64_t v118 = *MEMORY[0x263EF8340];
  if (qword_26A49F828 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 576);
  uint64_t v2 = __swift_project_value_buffer(*(void *)(v0 + 504), (uint64_t)qword_26A4A1D60);
  *(void *)(v0 + 584) = v2;
  sub_25AB150E0(v2, v1);
  uint64_t v3 = sub_25AC345E0();
  *(void *)(v0 + 592) = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)(v0 + 600) = v4;
  unint64_t v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  *(void *)(v0 + 608) = v5;
  *(void *)(v0 + 616) = (v4 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  uint64_t v100 = v4;
  uint64_t v101 = v2;
  v102 = v5;
  if (v5(v1, 1, v3) == 1)
  {
    sub_25AB15148(*(void *)(v0 + 576));
  }
  else
  {
    uint64_t v6 = sub_25AC345C0();
    os_log_type_t v7 = sub_25AC352B0();
    if (os_log_type_enabled(v6, v7))
    {
      char v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v8 = 0;
      _os_log_impl(&dword_25AB11000, v6, v7, "handleReadResult", v8, 2u);
      MEMORY[0x261151C20](v8, -1, -1);
    }
    uint64_t v9 = *(void *)(v0 + 576);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v3);
  }
  uint64_t v10 = *(void *)(v0 + 424);
  uint64_t v103 = *(void *)(v0 + 416);
  uint64_t v104 = v10;
  swift_bridgeObjectRetain();
  sub_25AC34F60();
  sub_25ABE78F0(v103, v104, (uint64_t)&v103);
  swift_bridgeObjectRelease();
  uint64_t v11 = v103;
  uint64_t v12 = v104;
  *(void *)(v0 + 624) = v103;
  *(void *)(v0 + 632) = v12;
  uint64_t v13 = v105;
  uint64_t v14 = v106;
  *(void *)(v0 + 640) = v105;
  *(void *)(v0 + 648) = v14;
  uint64_t v15 = v107;
  uint64_t v16 = v108;
  *(void *)(v0 + 656) = v107;
  *(void *)(v0 + 664) = v16;
  uint64_t v18 = v109;
  uint64_t v17 = v110;
  *(void *)(v0 + 672) = v109;
  *(void *)(v0 + 680) = v17;
  uint64_t v19 = v111;
  uint64_t v20 = v112;
  *(void *)(v0 + 688) = v111;
  *(void *)(v0 + 696) = v20;
  uint64_t v22 = v113;
  uint64_t v21 = v114;
  *(void *)(v0 + 704) = v113;
  *(void *)(v0 + 712) = v21;
  int v23 = v115;
  uint64_t v24 = v116;
  *(void *)(v0 + 720) = v115;
  *(void *)(v0 + 728) = v24;
  __int16 v25 = v117;
  *(_WORD *)(v0 + 130) = v117;
  if (!v12)
  {
    uint64_t v41 = *(void *)(v0 + 520);
    sub_25AB150E0(v101, v41);
    unsigned int v42 = v102(v41, 1, v3);
    uint64_t v36 = *(void *)(v0 + 520);
    if (v42 != 1)
    {
      int64_t v37 = sub_25AC345C0();
      os_log_type_t v51 = sub_25AC352C0();
      if (os_log_type_enabled(v37, v51))
      {
        uint64_t v52 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v52 = 0;
        _os_log_impl(&dword_25AB11000, v37, v51, "Could not load SAF session", v52, 2u);
        MEMORY[0x261151C20](v52, -1, -1);
      }
      uint64_t v40 = *(void *)(v0 + 520);
      goto LABEL_22;
    }
LABEL_15:
    sub_25AB15148(v36);
LABEL_37:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v67 = *(uint64_t (**)(uint64_t, void))(v0 + 8);
    return v67(24, 0);
  }
  uint64_t v98 = v3;
  *(void *)(v0 + 160) = v11;
  *(void *)(v0 + 168) = v12;
  *(void *)(v0 + 176) = v13;
  *(void *)(v0 + 184) = v14;
  *(void *)(v0 + 192) = v15;
  *(void *)(v0 + 200) = v16;
  *(void *)(v0 + 208) = v18;
  *(void *)(v0 + 216) = v17;
  *(void *)(v0 + 224) = v19;
  *(void *)(v0 + 232) = v20;
  *(void *)(v0 + 240) = v22;
  *(void *)(v0 + 248) = v21;
  *(_DWORD *)(v0 + 256) = v23;
  *(void *)(v0 + 264) = v24;
  char v87 = v25 & 1;
  *(unsigned char *)(v0 + 272) = v25 & 1;
  uint64_t v90 = v19;
  uint64_t v91 = v11;
  *(unsigned char *)(v0 + 273) = HIBYTE(v25) & 1;
  uint64_t v96 = v14;
  uint64_t v97 = v16;
  uint64_t v94 = v18;
  uint64_t v95 = v12;
  uint64_t v26 = v20;
  uint64_t v27 = v21;
  uint64_t v92 = v13;
  uint64_t v93 = v15;
  uint64_t v28 = v22;
  int v29 = v23;
  uint64_t v30 = v24;
  uint64_t v99 = v17;
  sub_25AC328F0();
  uint64_t v31 = sub_25AC32340();
  unint64_t v33 = v32;
  swift_bridgeObjectRelease();
  uint64_t v88 = v31;
  *(void *)(v0 + 736) = v31;
  *(void *)(v0 + 744) = v33;
  if (v33 >> 60 == 15)
  {
    uint64_t v34 = *(void *)(v0 + 528);
    sub_25AB294C0(v91, v95);
    sub_25AB150E0(v101, v34);
    uint64_t v3 = v98;
    unsigned int v35 = v102(v34, 1, v98);
    uint64_t v36 = *(void *)(v0 + 528);
    if (v35 != 1)
    {
      int64_t v37 = sub_25AC345C0();
      os_log_type_t v38 = sub_25AC352C0();
      if (os_log_type_enabled(v37, v38))
      {
        int64_t v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int64_t v39 = 0;
        _os_log_impl(&dword_25AB11000, v37, v38, "Could not generate SAF hash", v39, 2u);
        MEMORY[0x261151C20](v39, -1, -1);
      }
      uint64_t v40 = *(void *)(v0 + 528);
LABEL_22:

      (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v40, v3);
      goto LABEL_37;
    }
    goto LABEL_15;
  }
  uint64_t v43 = v99;
  uint64_t v82 = v30;
  int v83 = v29;
  uint64_t v84 = v28;
  uint64_t v85 = v27;
  uint64_t v86 = v26;
  uint64_t v44 = *(void *)(v0 + 432);
  unsigned __int8 v45 = sub_25AB455C4();
  if ((*(unsigned char *)(v44 + 336) & 1) == 0)
  {
    uint64_t v46 = v98;
    uint64_t v48 = v101;
    char v47 = v102;
    unint64_t v49 = v33;
    uint64_t v50 = v88;
    if ((v45 & 1) == 0)
    {
LABEL_31:
      uint64_t v59 = *(void *)(v0 + 536);
      sub_25AB150E0(v48, v59);
      if (v47(v59, 1, v46) == 1)
      {
        sub_25AB15148(*(void *)(v0 + 536));
      }
      else
      {
        uint64_t v60 = v43;
        v61 = sub_25AC345C0();
        os_log_type_t v62 = sub_25AC352C0();
        if (os_log_type_enabled(v61, v62))
        {
          uint64_t v63 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v63 = 0;
          _os_log_impl(&dword_25AB11000, v61, v62, "Read was not executed in SAF mode, updating SAF session to force a new prepare", v63, 2u);
          MEMORY[0x261151C20](v63, -1, -1);
        }
        uint64_t v64 = *(void *)(v0 + 536);

        (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v64, v46);
        uint64_t v43 = v60;
      }
      uint64_t v66 = *(void *)(v0 + 416);
      uint64_t v65 = *(void *)(v0 + 424);
      *(void *)(v0 + 280) = v91;
      *(void *)(v0 + 288) = v95;
      *(void *)(v0 + 296) = v92;
      *(void *)(v0 + 304) = v96;
      *(void *)(v0 + 312) = v93;
      *(void *)(v0 + 320) = v97;
      *(void *)(v0 + 328) = v94;
      *(void *)(v0 + 336) = v43;
      *(void *)(v0 + 344) = v90;
      *(void *)(v0 + 352) = v86;
      *(void *)(v0 + 360) = v84;
      *(void *)(v0 + 368) = v85;
      *(_DWORD *)(v0 + 376) = v83;
      *(void *)(v0 + 384) = v82;
      *(unsigned char *)(v0 + 392) = v87;
      *(unsigned char *)(v0 + 393) = 1;
      uint64_t v103 = v66;
      uint64_t v104 = v65;
      swift_bridgeObjectRetain();
      sub_25AC34F60();
      sub_25ABD5FBC(v103, v104, v0 + 280);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_25AB16944(v50, v49);
      goto LABEL_37;
    }
LABEL_24:
    uint64_t v53 = *(void *)(v0 + 544);
    sub_25AB150E0(v48, v53);
    if (v47(v53, 1, v46) == 1)
    {
      sub_25AB15148(*(void *)(v0 + 544));
    }
    else
    {
      uint64_t v54 = sub_25AC345C0();
      os_log_type_t v55 = sub_25AC352B0();
      uint64_t v56 = v54;
      if (os_log_type_enabled(v54, v55))
      {
        uint64_t v57 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v57 = 0;
        _os_log_impl(&dword_25AB11000, v56, v55, "Simulating SAF reader mode mismatch", v57, 2u);
        MEMORY[0x261151C20](v57, -1, -1);
      }
      uint64_t v58 = *(void *)(v0 + 544);

      (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v58, v46);
      uint64_t v43 = v99;
    }
    goto LABEL_31;
  }
  uint64_t v46 = v98;
  uint64_t v48 = v101;
  char v47 = v102;
  unint64_t v49 = v33;
  uint64_t v50 = v88;
  if (v45) {
    goto LABEL_24;
  }
  sub_25AB29C70(&qword_26A49FF50, MEMORY[0x263F047F8]);
  sub_25AC34D50();
  switch(v49 >> 62)
  {
    case 1uLL:
      if (v88 >> 32 < (int)v88) {
        __break(1u);
      }
      sub_25AB29558(v88, v49);
      sub_25AB28D64((int)v88, v88 >> 32);
      goto LABEL_42;
    case 2uLL:
      uint64_t v69 = *(void *)(v88 + 16);
      uint64_t v81 = *(void *)(v88 + 24);
      sub_25AB29544(v88, v49);
      swift_retain();
      swift_retain();
      sub_25AB28D64(v69, v81);
      swift_release();
      swift_release();
LABEL_42:
      sub_25AB16944(v88, v49);
      goto LABEL_46;
    case 3uLL:
      *(void *)(v0 + 132) = 0;
      *(void *)(v0 + 138) = 0;
      goto LABEL_45;
    default:
      *(void *)(v0 + 146) = v88;
      *(_WORD *)(v0 + 154) = v49;
      *(unsigned char *)(v0 + 156) = BYTE2(v49);
      *(unsigned char *)(v0 + 157) = BYTE3(v49);
      *(unsigned char *)(v0 + 158) = BYTE4(v49);
      *(unsigned char *)(v0 + 159) = BYTE5(v49);
LABEL_45:
      sub_25AC34D30();
      sub_25AB16944(v88, v49);
LABEL_46:
      uint64_t v70 = *(void *)(v0 + 568);
      uint64_t v72 = *(void *)(v0 + 488);
      uint64_t v71 = *(void *)(v0 + 496);
      uint64_t v73 = *(void *)(v0 + 472);
      uint64_t v89 = *(void *)(v0 + 480);
      uint64_t v74 = *(void *)(v0 + 456);
      uint64_t v75 = *(void *)(v0 + 464);
      sub_25AC34D40();
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v73, v74);
      *(void *)(v0 + 752) = sub_25AB26034();
      *(void *)(v0 + 760) = v76;
      (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v89);
      sub_25AB150E0(v101, v70);
      if (v102(v70, 1, v98) == 1)
      {
        sub_25AB15148(*(void *)(v0 + 568));
      }
      else
      {
        v77 = sub_25AC345C0();
        os_log_type_t v78 = sub_25AC352B0();
        if (os_log_type_enabled(v77, v78))
        {
          v79 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v79 = 0;
          _os_log_impl(&dword_25AB11000, v77, v78, "Saving SAF transaction", v79, 2u);
          MEMORY[0x261151C20](v79, -1, -1);
        }
        uint64_t v80 = *(void *)(v0 + 568);

        (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v80, v98);
      }
      *(void *)(v0 + 768) = sub_25AB289D8();
      *(void *)(v0 + 776) = 0;
      uint64_t result = MEMORY[0x270FA2498](sub_25AB2732C);
      break;
  }
  return result;
}

uint64_t sub_25AB2732C()
{
  uint64_t v1 = v0[97];
  v0[98] = sub_25AB1CBF8(v0[52], v0[53]);
  v0[99] = v1;
  if (v1)
  {
    sub_25AB294C0(v0[78], v0[79]);
    uint64_t v2 = sub_25AB28350;
  }
  else
  {
    uint64_t v2 = sub_25AB2742C;
  }
  return MEMORY[0x270FA2498](v2);
}

uint64_t sub_25AB2742C()
{
  uint64_t v1 = (uint64_t (*)(void))sub_25AC34000();
  char v2 = v1();
  swift_release();
  if ((v2 & 1) != 0
    && (id v3 = objc_msgSend(self, sel_standardUserDefaults),
        uint64_t v4 = (void *)sub_25AC34E10(),
        unsigned int v5 = objc_msgSend(v3, sel_BOOLForKey_, v4),
        v4,
        v3,
        v5))
  {
    uint64_t v6 = sub_25AC32900();
    uint64_t v8 = v7;
    v0[100] = v7;
    uint64_t v9 = (void *)swift_task_alloc();
    v0[101] = v9;
    void *v9 = v0;
    v9[1] = sub_25AB2761C;
    uint64_t v10 = v0[98];
    uint64_t v11 = v0[96];
    uint64_t v12 = v0[94];
    uint64_t v13 = v0[52];
    uint64_t v14 = v0[53];
    return sub_25AB295B0(v11, (uint64_t)(v0 + 20), v13, v14, v10, v6, v8, v12);
  }
  else
  {
    v0[103] = sub_25AC32900();
    v0[104] = v16;
    return MEMORY[0x270FA2498](sub_25AB27D58);
  }
}

uint64_t sub_25AB2761C()
{
  char v2 = (void *)*v1;
  v2[102] = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[79];
  uint64_t v4 = v2[78];
  swift_bridgeObjectRelease();
  sub_25AB294C0(v4, v3);
  if (v7) {
    unsigned int v5 = sub_25AB27A14;
  }
  else {
    unsigned int v5 = sub_25AB278B8;
  }
  return MEMORY[0x270FA2498](v5);
}

uint64_t sub_25AB278B8()
{
  unint64_t v1 = v0[95];
  uint64_t v2 = v0[94];
  sub_25AB16944(v0[92], v0[93]);
  sub_25AB16958(v2, v1);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void, uint64_t))v0[1];
  return v3(0, 1);
}

uint64_t sub_25AB27A14()
{
  swift_release();
  unint64_t v1 = (void *)v0[102];
  uint64_t v2 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[76];
  uint64_t v3 = v0[74];
  uint64_t v4 = v0[64];
  sub_25AB150E0(v0[73], v4);
  if (v2(v4, 1, v3) == 1)
  {
    unint64_t v5 = v0[95];
    uint64_t v6 = v0[94];
    uint64_t v7 = v0[64];
    sub_25AB16944(v0[92], v0[93]);

    sub_25AB16958(v6, v5);
    sub_25AB15148(v7);
  }
  else
  {
    id v8 = v1;
    id v9 = v1;
    uint64_t v10 = sub_25AC345C0();
    os_log_type_t v11 = sub_25AC352C0();
    BOOL v12 = os_log_type_enabled(v10, v11);
    unint64_t v13 = v0[95];
    uint64_t v14 = v0[94];
    uint64_t v15 = v0[92];
    if (v12)
    {
      unint64_t v22 = v0[93];
      unint64_t v24 = v0[95];
      uint64_t v23 = v0[94];
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 138412290;
      id v18 = v1;
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      v0[51] = v19;
      sub_25AC354A0();
      *uint64_t v17 = v19;

      _os_log_impl(&dword_25AB11000, v10, v11, "Could not save SAF transaction due to: [ %@ ]", v16, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A8);
      swift_arrayDestroy();
      MEMORY[0x261151C20](v17, -1, -1);
      MEMORY[0x261151C20](v16, -1, -1);
      sub_25AB16944(v15, v22);

      sub_25AB16958(v23, v24);
    }
    else
    {
      sub_25AB16944(v0[92], v0[93]);

      sub_25AB16958(v14, v13);
    }
    (*(void (**)(void, void))(v0[75] + 8))(v0[64], v0[74]);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(uint64_t, void))v0[1];
  return v20(24, 0);
}

uint64_t sub_25AB27D58()
{
  uint64_t v1 = v0[99];
  sub_25AB1C824(v0[52], v0[53], v0[103], v0[104], v0[94], v0[95]);
  v0[105] = v1;
  if (v1)
  {
    sub_25AB294C0(v0[78], v0[79]);
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_25AB28694;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_25AB27E78;
  }
  return MEMORY[0x270FA2498](v2);
}

uint64_t sub_25AB27E78()
{
  uint64_t v1 = *(void *)(v0 + 784);
  uint64_t v2 = v1 + 1;
  if (__OFADD__(v1, 1)) {
    __break(1u);
  }
  if (v2 >= sub_25AC34110())
  {
    uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 608);
    uint64_t v11 = *(void *)(v0 + 592);
    uint64_t v12 = *(void *)(v0 + 560);
    sub_25AB150E0(*(void *)(v0 + 584), v12);
    if (v10(v12, 1, v11) == 1)
    {
      sub_25AB15148(*(void *)(v0 + 560));
    }
    else
    {
      uint64_t v21 = sub_25AC345C0();
      os_log_type_t v22 = sub_25AC352D0();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl(&dword_25AB11000, v21, v22, "SAF transactions limit reached", v23, 2u);
        MEMORY[0x261151C20](v23, -1, -1);
      }
      uint64_t v24 = *(void *)(v0 + 600);
      uint64_t v25 = *(void *)(v0 + 592);
      uint64_t v26 = *(void *)(v0 + 560);

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v25);
    }
    unint64_t v48 = *(void *)(v0 + 760);
    uint64_t v47 = *(void *)(v0 + 752);
    unint64_t v27 = *(void *)(v0 + 744);
    uint64_t v28 = *(void *)(v0 + 736);
    uint64_t v29 = *(void *)(v0 + 728);
    uint64_t v30 = *(void *)(v0 + 720);
    uint64_t v31 = *(void *)(v0 + 712);
    uint64_t v32 = *(void *)(v0 + 704);
    uint64_t v33 = *(void *)(v0 + 696);
    uint64_t v34 = *(void *)(v0 + 688);
    uint64_t v35 = *(void *)(v0 + 680);
    uint64_t v36 = *(void *)(v0 + 672);
    uint64_t v37 = *(void *)(v0 + 664);
    uint64_t v38 = *(void *)(v0 + 656);
    uint64_t v39 = *(void *)(v0 + 648);
    uint64_t v40 = *(void *)(v0 + 640);
    uint64_t v41 = *(void *)(v0 + 632);
    uint64_t v43 = *(void *)(v0 + 416);
    uint64_t v42 = *(void *)(v0 + 424);
    char v44 = *(unsigned char *)(v0 + 131) & 1;
    *(void *)(v0 + 16) = *(void *)(v0 + 624);
    *(void *)(v0 + 24) = v41;
    *(void *)(v0 + 32) = v40;
    *(void *)(v0 + 40) = v39;
    *(void *)(v0 + 48) = v38;
    *(void *)(v0 + 56) = v37;
    *(void *)(v0 + 64) = v36;
    *(void *)(v0 + 72) = v35;
    *(void *)(v0 + 80) = v34;
    *(void *)(v0 + 88) = v33;
    *(void *)(v0 + 96) = v32;
    *(void *)(v0 + 104) = v31;
    *(_DWORD *)(v0 + 112) = v30;
    *(void *)(v0 + 120) = v29;
    *(unsigned char *)(v0 + 128) = 1;
    *(unsigned char *)(v0 + 129) = v44;
    uint64_t v49 = v43;
    uint64_t v50 = v42;
    swift_bridgeObjectRetain();
    sub_25AC34F60();
    sub_25ABD5FBC(v49, v50, v0 + 16);
    swift_bridgeObjectRelease();
    sub_25AB16944(v28, v27);
    sub_25AB16958(v47, v48);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 608);
    uint64_t v4 = *(void *)(v0 + 592);
    uint64_t v5 = *(void *)(v0 + 584);
    uint64_t v6 = *(void *)(v0 + 552);
    sub_25AB294C0(*(void *)(v0 + 624), *(void *)(v0 + 632));
    sub_25AB150E0(v5, v6);
    if (v3(v6, 1, v4) == 1)
    {
      unint64_t v7 = *(void *)(v0 + 760);
      uint64_t v8 = *(void *)(v0 + 752);
      uint64_t v9 = *(void *)(v0 + 552);
      sub_25AB16944(*(void *)(v0 + 736), *(void *)(v0 + 744));
      sub_25AB16958(v8, v7);
      swift_release();
      sub_25AB15148(v9);
    }
    else
    {
      unint64_t v13 = sub_25AC345C0();
      os_log_type_t v14 = sub_25AC352B0();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 134217984;
        *(void *)(v0 + 400) = v2;
        sub_25AC354A0();
        _os_log_impl(&dword_25AB11000, v13, v14, "Number of transactions [%ld]", v15, 0xCu);
        MEMORY[0x261151C20](v15, -1, -1);
      }
      unint64_t v16 = *(void *)(v0 + 760);
      uint64_t v17 = *(void *)(v0 + 752);
      uint64_t v18 = *(void *)(v0 + 600);
      uint64_t v19 = *(void *)(v0 + 592);
      uint64_t v20 = *(void *)(v0 + 552);
      sub_25AB16944(*(void *)(v0 + 736), *(void *)(v0 + 744));

      sub_25AB16958(v17, v16);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unsigned __int8 v45 = *(uint64_t (**)(void, uint64_t))(v0 + 8);
  return v45(0, 1);
}

uint64_t sub_25AB28350()
{
  swift_release();
  uint64_t v1 = (void *)v0[99];
  uint64_t v2 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[76];
  uint64_t v3 = v0[74];
  uint64_t v4 = v0[64];
  sub_25AB150E0(v0[73], v4);
  if (v2(v4, 1, v3) == 1)
  {
    unint64_t v5 = v0[95];
    uint64_t v6 = v0[94];
    uint64_t v7 = v0[64];
    sub_25AB16944(v0[92], v0[93]);

    sub_25AB16958(v6, v5);
    sub_25AB15148(v7);
  }
  else
  {
    id v8 = v1;
    id v9 = v1;
    uint64_t v10 = sub_25AC345C0();
    os_log_type_t v11 = sub_25AC352C0();
    BOOL v12 = os_log_type_enabled(v10, v11);
    unint64_t v13 = v0[95];
    uint64_t v14 = v0[94];
    uint64_t v15 = v0[92];
    if (v12)
    {
      unint64_t v22 = v0[93];
      unint64_t v24 = v0[95];
      uint64_t v23 = v0[94];
      unint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v16 = 138412290;
      id v18 = v1;
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      v0[51] = v19;
      sub_25AC354A0();
      *uint64_t v17 = v19;

      _os_log_impl(&dword_25AB11000, v10, v11, "Could not save SAF transaction due to: [ %@ ]", v16, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A8);
      swift_arrayDestroy();
      MEMORY[0x261151C20](v17, -1, -1);
      MEMORY[0x261151C20](v16, -1, -1);
      sub_25AB16944(v15, v22);

      sub_25AB16958(v23, v24);
    }
    else
    {
      sub_25AB16944(v0[92], v0[93]);

      sub_25AB16958(v14, v13);
    }
    (*(void (**)(void, void))(v0[75] + 8))(v0[64], v0[74]);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(uint64_t, void))v0[1];
  return v20(24, 0);
}

uint64_t sub_25AB28694()
{
  swift_release();
  uint64_t v1 = (void *)v0[105];
  uint64_t v2 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[76];
  uint64_t v3 = v0[74];
  uint64_t v4 = v0[64];
  sub_25AB150E0(v0[73], v4);
  if (v2(v4, 1, v3) == 1)
  {
    unint64_t v5 = v0[95];
    uint64_t v6 = v0[94];
    uint64_t v7 = v0[64];
    sub_25AB16944(v0[92], v0[93]);

    sub_25AB16958(v6, v5);
    sub_25AB15148(v7);
  }
  else
  {
    id v8 = v1;
    id v9 = v1;
    uint64_t v10 = sub_25AC345C0();
    os_log_type_t v11 = sub_25AC352C0();
    BOOL v12 = os_log_type_enabled(v10, v11);
    unint64_t v13 = v0[95];
    uint64_t v14 = v0[94];
    uint64_t v15 = v0[92];
    if (v12)
    {
      unint64_t v22 = v0[93];
      unint64_t v24 = v0[95];
      uint64_t v23 = v0[94];
      unint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v16 = 138412290;
      id v18 = v1;
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      v0[51] = v19;
      sub_25AC354A0();
      *uint64_t v17 = v19;

      _os_log_impl(&dword_25AB11000, v10, v11, "Could not save SAF transaction due to: [ %@ ]", v16, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A8);
      swift_arrayDestroy();
      MEMORY[0x261151C20](v17, -1, -1);
      MEMORY[0x261151C20](v16, -1, -1);
      sub_25AB16944(v15, v22);

      sub_25AB16958(v23, v24);
    }
    else
    {
      sub_25AB16944(v0[92], v0[93]);

      sub_25AB16958(v14, v13);
    }
    (*(void (**)(void, void))(v0[75] + 8))(v0[64], v0[74]);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(uint64_t, void))v0[1];
  return v20(24, 0);
}

uint64_t sub_25AB289D8()
{
  uint64_t v2 = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v3);
  unint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v2 + 16))
  {
    uint64_t v6 = *(void *)(v2 + 16);
  }
  else
  {
    if (qword_26A49F828 != -1) {
      swift_once();
    }
    uint64_t v7 = __swift_project_value_buffer(v3, (uint64_t)qword_26A4A1D60);
    sub_25AB150E0(v7, (uint64_t)v5);
    uint64_t v8 = sub_25AC345E0();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8) == 1)
    {
      sub_25AB15148((uint64_t)v5);
    }
    else
    {
      uint64_t v10 = sub_25AC345C0();
      os_log_type_t v11 = sub_25AC352B0();
      if (os_log_type_enabled(v10, v11))
      {
        BOOL v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)BOOL v12 = 0;
        _os_log_impl(&dword_25AB11000, v10, v11, "Initializing SAF storage", v12, 2u);
        MEMORY[0x261151C20](v12, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v8);
    }
    type metadata accessor for StoreAndForwardStorage();
    uint64_t v6 = swift_allocObject();
    swift_defaultActor_initialize();
    unint64_t v13 = sub_25AB1D510();
    if (v1)
    {
      swift_defaultActor_destroy();
      swift_deallocPartialClassInstance();
      return v6;
    }
    *(void *)(v6 + 112) = v13;
    *(void *)(v2 + 16) = v6;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v6;
}

uint64_t sub_25AB28C2C()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StoreAndForwardManager()
{
  return self;
}

uint64_t sub_25AB28C88()
{
  return 1;
}

uint64_t sub_25AB28C9C()
{
  return sub_25AC359D0();
}

uint64_t sub_25AB28CE0()
{
  return sub_25AC35980();
}

uint64_t sub_25AB28D08()
{
  return sub_25AC359D0();
}

unint64_t sub_25AB28D48()
{
  return 0xD000000000000017;
}

uint64_t sub_25AB28D64(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_25AC32070();
  if (!result || (uint64_t result = sub_25AC320A0(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_25AC32090();
      sub_25AC34D80();
      sub_25AB29C70(&qword_26A49FF50, MEMORY[0x263F047F8]);
      return sub_25AC34D30();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25AB28E44()
{
  sub_25AC32270();
  char v0 = sub_25AC34FE0();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

id sub_25AB28E94(os_log_t a1)
{
  uint64_t v2 = sub_25AC32EA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  os_log_type_t v11 = (char *)v42 - v10;
  uint64_t v48 = (uint64_t)a1;
  BOOL v12 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A00C0);
  unint64_t v13 = (objc_class *)sub_25AC325C0();
  if (swift_dynamicCast())
  {
    id v14 = (id)v47;
    if (qword_26A49F828 != -1) {
      swift_once();
    }
    uint64_t v15 = __swift_project_value_buffer(v6, (uint64_t)qword_26A4A1D60);
    sub_25AB150E0(v15, (uint64_t)v11);
    uint64_t v16 = sub_25AC345E0();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v11, 1, v16) == 1)
    {
      sub_25AB15148((uint64_t)v11);
    }
    else
    {
      id v14 = v14;
      uint64_t v21 = sub_25AC345C0();
      os_log_type_t v22 = sub_25AC352C0();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        uint64_t v48 = v24;
        *(_DWORD *)uint64_t v23 = 136315138;
        uint64_t v46 = v23 + 4;
        sub_25AC325B0();
        uint64_t v25 = sub_25AC325E0();
        uint64_t v47 = sub_25AB56574(v25, v26, &v48);
        sub_25AC354A0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25AB11000, v21, v22, "[SAF] Returning error: [ %s ]", v23, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x261151C20](v24, -1, -1);
        MEMORY[0x261151C20](v23, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v16);
    }
  }
  else
  {
    if (qword_26A49F828 != -1) {
      swift_once();
    }
    uint64_t v18 = __swift_project_value_buffer(v6, (uint64_t)qword_26A4A1D60);
    sub_25AB150E0(v18, (uint64_t)v9);
    uint64_t v19 = sub_25AC345E0();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v9, 1, v19) == 1)
    {
      sub_25AB15148((uint64_t)v9);
    }
    else
    {
      unint64_t v27 = a1;
      uint64_t v28 = a1;
      uint64_t v29 = sub_25AC345C0();
      os_log_type_t v30 = sub_25AC352C0();
      LODWORD(v46) = v30;
      if (os_log_type_enabled(v29, v30))
      {
        unsigned __int8 v45 = (uint8_t *)swift_slowAlloc();
        uint64_t v44 = swift_slowAlloc();
        uint64_t v47 = (uint64_t)a1;
        uint64_t v48 = v44;
        os_log_t v43 = v29;
        uint64_t v31 = v45;
        *(_DWORD *)unsigned __int8 v45 = 136315138;
        v42[1] = v31 + 4;
        uint64_t v32 = a1;
        uint64_t v33 = sub_25AC34EB0();
        uint64_t v47 = sub_25AB56574(v33, v34, &v48);
        sub_25AC354A0();
        swift_bridgeObjectRelease();

        a1 = v43;
        uint64_t v35 = v45;
        _os_log_impl(&dword_25AB11000, v43, (os_log_type_t)v46, "[SAF] Unexpected error: [ %s ]", v45, 0xCu);
        uint64_t v36 = v44;
        swift_arrayDestroy();
        MEMORY[0x261151C20](v36, -1, -1);
        MEMORY[0x261151C20](v35, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v19);
    }
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F15458], v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FF48);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25AC37D80;
    *(void *)(inited + 32) = sub_25AC32580();
    *(void *)(inited + 40) = v38;
    uint64_t v39 = sub_25AC32E90();
    *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 48) = v39;
    sub_25AB714E8(inited);
    id v40 = objc_allocWithZone(v13);
    id v14 = (id)sub_25AC325D0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v14;
}

uint64_t sub_25AB294C0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25AB29544(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_25AB29558(a1, a2);
  }
  return a1;
}

uint64_t sub_25AB29558(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_25AB295B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[24] = a8;
  v8[25] = v11;
  v8[22] = a6;
  v8[23] = a7;
  v8[20] = a4;
  v8[21] = a5;
  v8[18] = a2;
  v8[19] = a3;
  v8[17] = a1;
  v8[26] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  v8[27] = swift_task_alloc();
  v8[28] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB29670);
}

uint64_t sub_25AB29670()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = sub_25AC34110();
  v0[29] = v2 - v1;
  if (__OFSUB__(v2, v1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v2 - v1 >= 1)
  {
    if (qword_26A49F828 == -1)
    {
LABEL_4:
      uint64_t v3 = v0[28];
      uint64_t v4 = __swift_project_value_buffer(v0[26], (uint64_t)qword_26A4A1D60);
      sub_25AB150E0(v4, v3);
      uint64_t v5 = sub_25AC345E0();
      uint64_t v6 = *(void *)(v5 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
      {
        sub_25AB15148(v0[28]);
      }
      else
      {
        uint64_t v11 = sub_25AC345C0();
        os_log_type_t v12 = sub_25AC352B0();
        if (os_log_type_enabled(v11, v12))
        {
          unint64_t v13 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v13 = 0;
          _os_log_impl(&dword_25AB11000, v11, v12, "Saving maximum number of transactions in SAF mode", v13, 2u);
          MEMORY[0x261151C20](v13, -1, -1);
        }
        uint64_t v14 = v0[28];

        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
      }
      return MEMORY[0x270FA2498](sub_25AB299D0);
    }
LABEL_23:
    swift_once();
    goto LABEL_4;
  }
  if (qword_26A49F828 != -1) {
    swift_once();
  }
  uint64_t v7 = v0[27];
  uint64_t v8 = __swift_project_value_buffer(v0[26], (uint64_t)qword_26A4A1D60);
  sub_25AB150E0(v8, v7);
  uint64_t v9 = sub_25AC345E0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) == 1)
  {
    sub_25AB15148(v0[27]);
  }
  else
  {
    uint64_t v15 = sub_25AC345C0();
    os_log_type_t v16 = sub_25AC352C0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_25AB11000, v15, v16, "Max number of SAF transaction has already been reached", v17, 2u);
      MEMORY[0x261151C20](v17, -1, -1);
    }
    uint64_t v18 = v0[27];

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v18, v9);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_25AB299D0()
{
  sub_25AB1CD64(v0[19], v0[20], v0[22], v0[23], v0[24], v0[25], v0[29]);
  return MEMORY[0x270FA2498](sub_25AB29AA0);
}

uint64_t sub_25AB29AA0()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 144);
  char v4 = *(unsigned char *)(v3 + 113);
  int v5 = *(_DWORD *)(v3 + 96);
  uint64_t v6 = *(void *)(v3 + 104);
  uint64_t v7 = *(void *)(v3 + 80);
  uint64_t v8 = *(void *)(v3 + 88);
  uint64_t v9 = *(void *)(v3 + 64);
  uint64_t v10 = *(void *)(v3 + 72);
  uint64_t v11 = *(void *)(v3 + 48);
  uint64_t v12 = *(void *)(v3 + 56);
  uint64_t v13 = *(void *)(v3 + 32);
  uint64_t v14 = *(void *)(v3 + 40);
  uint64_t v15 = *(void *)(v3 + 16);
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t v17 = *(void *)(v3 + 8);
  *(void *)(v0 + 16) = *(void *)v3;
  *(void *)(v0 + 24) = v17;
  *(void *)(v0 + 32) = v15;
  *(void *)(v0 + 40) = v16;
  *(void *)(v0 + 48) = v13;
  *(void *)(v0 + 56) = v14;
  *(void *)(v0 + 64) = v11;
  *(void *)(v0 + 72) = v12;
  *(void *)(v0 + 80) = v9;
  *(void *)(v0 + 88) = v10;
  *(void *)(v0 + 96) = v7;
  *(void *)(v0 + 104) = v8;
  *(_DWORD *)(v0 + 112) = v5;
  *(void *)(v0 + 120) = v6;
  *(unsigned char *)(v0 + 128) = 1;
  *(unsigned char *)(v0 + 129) = v4;
  uint64_t v20 = v1;
  sub_25AB29BF8(v3);
  swift_bridgeObjectRetain();
  sub_25AC34F60();
  sub_25ABD5FBC(v20, v2, v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_25AB29BF8(uint64_t a1)
{
  return a1;
}

uint64_t sub_25AB29C70(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25AB29CB8()
{
  unint64_t result = qword_26A49FF70;
  if (!qword_26A49FF70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A49FF68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FF70);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StoreAndForwardError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for StoreAndForwardError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25AB29E4CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25AB29E74()
{
  return 0;
}

ValueMetadata *type metadata accessor for StoreAndForwardError()
{
  return &type metadata for StoreAndForwardError;
}

unint64_t sub_25AB29E90()
{
  unint64_t result = qword_26A49FF78;
  if (!qword_26A49FF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FF78);
  }
  return result;
}

uint64_t destroy for StoreAndForwardSession()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StoreAndForwardSession(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StoreAndForwardSession(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  return a1;
}

__n128 __swift_memcpy114_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(_WORD *)(a1 + 112) = *((_WORD *)a2 + 56);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for StoreAndForwardSession(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  return a1;
}

uint64_t getEnumTagSinglePayload for StoreAndForwardSession(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 114)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StoreAndForwardSession(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 112) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 114) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 114) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreAndForwardSession()
{
  return &type metadata for StoreAndForwardSession;
}

uint64_t sub_25AB2A27C()
{
  return sub_25AC35990();
}

unint64_t sub_25AB2A3B0(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x496E6F6973736573;
      break;
    case 2:
      unint64_t result = 0x746E61686372656DLL;
      break;
    case 3:
      unint64_t result = 0x4972656E74726170;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x4449746F6F62;
      break;
    case 6:
      unint64_t result = 0x797269707865;
      break;
    case 7:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25AB2A4D4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FFA0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB2B500();
  sub_25AC35A00();
  LOBYTE(v11) = 0;
  sub_25AC357F0();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_25AC357F0();
    LOBYTE(v11) = 2;
    sub_25AC357F0();
    LOBYTE(v11) = 3;
    sub_25AC357F0();
    LOBYTE(v11) = 4;
    sub_25AC357F0();
    LOBYTE(v11) = 5;
    sub_25AC357F0();
    long long v11 = *(_OWORD *)(v3 + 96);
    v10[15] = 6;
    sub_25AB2B5A8();
    sub_25AC35830();
    LOBYTE(v11) = 7;
    sub_25AC35800();
    LOBYTE(v11) = 8;
    sub_25AC35800();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_25AB2A764()
{
  return sub_25AB2A3B0(*v0);
}

uint64_t sub_25AB2A76C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB2AB60(a1, a2);
  *a3 = result;
  return result;
}

void sub_25AB2A794(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_25AB2A7A0(uint64_t a1)
{
  unint64_t v2 = sub_25AB2B500();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB2A7DC(uint64_t a1)
{
  unint64_t v2 = sub_25AB2B500();
  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_25AB2A818@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_25AB2AEEC(a1, (uint64_t)v8);
  if (!v2)
  {
    long long v5 = v12;
    *(_OWORD *)(a2 + 64) = v11;
    *(_OWORD *)(a2 + 80) = v5;
    *(_OWORD *)(a2 + 96) = v13;
    *(_WORD *)(a2 + 112) = v14;
    long long v6 = v8[1];
    *(_OWORD *)a2 = v8[0];
    *(_OWORD *)(a2 + 16) = v6;
    double result = *(double *)&v9;
    long long v7 = v10;
    *(_OWORD *)(a2 + 32) = v9;
    *(_OWORD *)(a2 + 48) = v7;
  }
  return result;
}

uint64_t sub_25AB2A880(void *a1)
{
  return sub_25AB2A4D4(a1);
}

uint64_t sub_25AB2A898()
{
  return sub_25AC359D0();
}

uint64_t sub_25AB2A8DC()
{
  return sub_25AC359D0();
}

uint64_t sub_25AB2A918@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25AB2A924(uint64_t a1, long long *a2)
{
  long long v2 = *(_OWORD *)(a1 + 80);
  v12[4] = *(_OWORD *)(a1 + 64);
  v12[5] = v2;
  v12[6] = *(_OWORD *)(a1 + 96);
  __int16 v13 = *(_WORD *)(a1 + 112);
  long long v3 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  v12[2] = *(_OWORD *)(a1 + 32);
  v12[3] = v4;
  long long v5 = *a2;
  long long v6 = a2[1];
  long long v7 = a2[3];
  v14[2] = a2[2];
  v14[3] = v7;
  v14[0] = v5;
  v14[1] = v6;
  long long v8 = a2[4];
  long long v9 = a2[5];
  long long v10 = a2[6];
  __int16 v15 = *((_WORD *)a2 + 56);
  v14[5] = v9;
  v14[6] = v10;
  v14[4] = v8;
  return sub_25AB2AA00((uint64_t)v12, (uint64_t)v14) & 1;
}

unint64_t sub_25AB2A9AC()
{
  unint64_t result = qword_26A49FF80;
  if (!qword_26A49FF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FF80);
  }
  return result;
}

uint64_t sub_25AB2AA00(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = sub_25AC35870(), v6 = 0, (v5 & 1) != 0))
  {
    BOOL v7 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v7 || (char v8 = sub_25AC35870(), v6 = 0, (v8 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (v9 = sub_25AC35870(), char v6 = 0, (v9 & 1) != 0))
      {
        if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56)
          || (char v10 = sub_25AC35870(), v6 = 0, (v10 & 1) != 0))
        {
          if (*(void *)(a1 + 64) == *(void *)(a2 + 64) && *(void *)(a1 + 72) == *(void *)(a2 + 72)
            || (char v11 = sub_25AC35870(), v6 = 0, (v11 & 1) != 0))
          {
            if (*(void *)(a1 + 80) == *(void *)(a2 + 80) && *(void *)(a1 + 88) == *(void *)(a2 + 88)
              || (v12 = sub_25AC35870(), char v6 = 0, (v12 & 1) != 0))
            {
              if (*(_DWORD *)(a1 + 96) == *(_DWORD *)(a2 + 96)
                && *(double *)(a1 + 104) == *(double *)(a2 + 104)
                && ((*(unsigned __int8 *)(a1 + 112) ^ *(unsigned __int8 *)(a2 + 112)) & 1) == 0)
              {
                char v6 = ((*(unsigned char *)(a1 + 113) & 1) == 0) ^ *(unsigned char *)(a2 + 113);
              }
              else
              {
                char v6 = 0;
              }
            }
          }
        }
      }
    }
  }
  return v6 & 1;
}

uint64_t sub_25AB2AB60(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000044 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEA00000000004449 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4972656E74726170 && a2 == 0xE900000000000044 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000025AC3DD90 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4449746F6F62 && a2 == 0xE600000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x797269707865 && a2 == 0xE600000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000025AC3DDB0 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000025AC3DDD0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_25AC35870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_25AB2AEEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FF88);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB2B500();
  sub_25AC359F0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v47) = 0;
  uint64_t v9 = sub_25AC35760();
  uint64_t v11 = v10;
  LOBYTE(v47) = 1;
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_25AC35760();
  uint64_t v43 = v9;
  LOBYTE(v47) = 2;
  uint64_t v13 = v12;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_25AC35760();
  uint64_t v45 = v13;
  uint64_t v41 = v14;
  LOBYTE(v47) = 3;
  uint64_t v16 = v15;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_25AC35760();
  uint64_t v44 = v16;
  uint64_t v40 = v17;
  LOBYTE(v47) = 4;
  uint64_t v19 = v18;
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_25AC35760();
  uint64_t v39 = v19;
  LOBYTE(v47) = 5;
  uint64_t v21 = v20;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_25AC35760();
  uint64_t v24 = v23;
  uint64_t v35 = v22;
  char v46 = 6;
  sub_25AB2B554();
  uint64_t v37 = v24;
  swift_bridgeObjectRetain();
  uint64_t v36 = 0;
  sub_25AC357A0();
  int v34 = v47;
  uint64_t v25 = v48;
  LOBYTE(v47) = 7;
  int v33 = sub_25AC35770();
  LOBYTE(v47) = 8;
  LOBYTE(v24) = sub_25AC35770();
  LODWORD(v36) = v33 & 1;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  uint64_t v26 = v37;
  swift_bridgeObjectRelease();
  uint64_t v27 = v21;
  swift_bridgeObjectRelease();
  uint64_t v28 = v39;
  swift_bridgeObjectRelease();
  uint64_t v29 = v44;
  swift_bridgeObjectRelease();
  uint64_t v30 = v45;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v43;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v42;
  *(void *)(a2 + 24) = v30;
  *(void *)(a2 + 32) = v41;
  *(void *)(a2 + 40) = v29;
  *(void *)(a2 + 48) = v40;
  *(void *)(a2 + 56) = v28;
  *(void *)(a2 + 64) = v38;
  *(void *)(a2 + 72) = v27;
  *(void *)(a2 + 80) = v35;
  *(void *)(a2 + 88) = v26;
  *(_DWORD *)(a2 + 96) = v34;
  *(void *)(a2 + 104) = v25;
  *(unsigned char *)(a2 + 112) = v36;
  *(unsigned char *)(a2 + 113) = v24 & 1;
  return result;
}

unint64_t sub_25AB2B500()
{
  unint64_t result = qword_26A49FF90;
  if (!qword_26A49FF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FF90);
  }
  return result;
}

unint64_t sub_25AB2B554()
{
  unint64_t result = qword_26A49FF98;
  if (!qword_26A49FF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FF98);
  }
  return result;
}

unint64_t sub_25AB2B5A8()
{
  unint64_t result = qword_26A49FFA8;
  if (!qword_26A49FFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FFA8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TransactionData.OutcomeStatus(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StoreAndForwardSession.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB2B758);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreAndForwardSession.CodingKeys()
{
  return &type metadata for StoreAndForwardSession.CodingKeys;
}

unint64_t sub_25AB2B794()
{
  unint64_t result = qword_26A49FFB0;
  if (!qword_26A49FFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FFB0);
  }
  return result;
}

unint64_t sub_25AB2B7EC()
{
  unint64_t result = qword_26A49FFB8;
  if (!qword_26A49FFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FFB8);
  }
  return result;
}

unint64_t sub_25AB2B844()
{
  unint64_t result = qword_26A49FFC0;
  if (!qword_26A49FFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A49FFC0);
  }
  return result;
}

uint64_t sub_25AB2B898()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v26 = (uint64_t)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0070);
  ((void (*)(void))MEMORY[0x270FA5388])();
  int v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FFF8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25AC331D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v10 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v25 - v11;
  sub_25AB897A8((uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_25AB18FAC((uint64_t)v5, &qword_26A49FFF8);
    if (qword_26A49F830 != -1) {
      swift_once();
    }
    uint64_t v13 = __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1D78);
    uint64_t v14 = v26;
    sub_25AB150E0(v13, v26);
    uint64_t v15 = sub_25AC345E0();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {
      return sub_25AB18FAC(v14, &qword_26A49F9A0);
    }
    else
    {
      uint64_t v22 = sub_25AC345C0();
      os_log_type_t v23 = sub_25AC352C0();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl(&dword_25AB11000, v22, v23, "DiscoveryAnalyticsManager - sendAnalytics - unable to decode analytics data", v24, 2u);
        MEMORY[0x261151C20](v24, -1, -1);
      }

      return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    }
  }
  else
  {
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v18(v12, v5, v6);
    uint64_t v19 = sub_25AC35140();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v3, 1, 1, v19);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    unint64_t v20 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = 0;
    *(void *)(v21 + 24) = 0;
    v18((char *)(v21 + v20), v10, v6);
    *(void *)(v21 + ((v8 + v20 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
    swift_retain();
    sub_25AB71DDC((uint64_t)v3, (uint64_t)&unk_26A4A0008, v21);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
}

uint64_t sub_25AB2BD08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[86] = a5;
  v5[85] = a4;
  v5[87] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  v5[88] = swift_task_alloc();
  uint64_t v6 = sub_25AC331D0();
  v5[89] = v6;
  v5[90] = *(void *)(v6 - 8);
  v5[91] = swift_task_alloc();
  v5[92] = swift_task_alloc();
  uint64_t v7 = sub_25AC33190();
  v5[93] = v7;
  v5[94] = *(void *)(v7 - 8);
  v5[95] = swift_task_alloc();
  v5[96] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB2BE7C);
}

uint64_t sub_25AB2BE7C()
{
  uint64_t v123 = v0;
  uint64_t v1 = *(void *)(v0 + 768);
  uint64_t v2 = *(void *)(v0 + 752);
  uint64_t v3 = *(void *)(v0 + 744);
  sub_25AC33170();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0010);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25AC38270;
  *(void *)(inited + 32) = sub_25AC33CB0();
  *(void *)(inited + 40) = v5;
  sub_25AC331C0();
  uint64_t v6 = sub_25AC33180();
  uint64_t v8 = v7;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(void *)(v0 + 776) = v9;
  *(void *)(v0 + 784) = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v1, v3);
  uint64_t v10 = MEMORY[0x263F8D310];
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 80) = sub_25AC33C20();
  *(void *)(inited + 88) = v11;
  uint64_t v12 = sub_25AC33160();
  *(void *)(inited + 120) = v10;
  *(void *)(inited + 96) = v12;
  *(void *)(inited + 104) = v13;
  *(void *)(inited + 128) = sub_25AC33C90();
  *(void *)(inited + 136) = v14;
  uint64_t v15 = sub_25AC331A0();
  *(void *)(inited + 168) = v10;
  *(void *)(inited + 144) = v15;
  *(void *)(inited + 152) = v16;
  *(void *)(inited + 176) = sub_25AC33B30();
  *(void *)(inited + 184) = v17;
  uint64_t v18 = sub_25AC33130();
  *(void *)(inited + 216) = v10;
  *(void *)(inited + 192) = v18;
  *(void *)(inited + 200) = v19;
  *(void *)(inited + 224) = sub_25AC33AC0();
  *(void *)(inited + 232) = v20;
  uint64_t v21 = sub_25AC33120();
  *(void *)(inited + 264) = v10;
  *(void *)(inited + 240) = v21;
  *(void *)(inited + 248) = v22;
  *(void *)(inited + 272) = sub_25AC33AB0();
  *(void *)(inited + 280) = v23;
  uint64_t v24 = sub_25AC33110();
  *(void *)(inited + 312) = v10;
  *(void *)(inited + 288) = v24;
  *(void *)(inited + 296) = v25;
  unint64_t v26 = sub_25AB7162C(inited);
  uint64_t v119 = v9;
  if (sub_25AC33100())
  {
    uint64_t v27 = *(void *)(v0 + 688);
    uint64_t v28 = sub_25AC33BF0();
    uint64_t v30 = v29;
    uint64_t v31 = *(void *)(v27 + OBJC_IVAR____TtC21ProximityReaderDaemon25DiscoveryAnalyticsManager_appId);
    uint64_t v32 = *(void *)(v27 + OBJC_IVAR____TtC21ProximityReaderDaemon25DiscoveryAnalyticsManager_appId + 8);
    *(void *)(v0 + 424) = v10;
    *(void *)(v0 + 400) = v31;
    *(void *)(v0 + 408) = v32;
    sub_25AB1DDC8((_OWORD *)(v0 + 400), (_OWORD *)(v0 + 336));
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v122 = v26;
    uint64_t v34 = *(void *)(v0 + 360);
    uint64_t v35 = __swift_mutable_project_boxed_opaque_existential_0(v0 + 336, v34);
    uint64_t v36 = *(void *)(v34 - 8);
    uint64_t v37 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v36 + 16))(v37, v35, v34);
    sub_25AB83AF8(*v37, v37[1], v28, v30, isUniquelyReferenced_nonNull_native, &v122);
    __swift_destroy_boxed_opaque_existential_1(v0 + 336);
    swift_task_dealloc();
    unint64_t v26 = v122;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  char v38 = sub_25AC33140();
  if (v38 != 2)
  {
    char v39 = v38 & 1;
    uint64_t v40 = sub_25AC33B70();
    uint64_t v42 = v41;
    *(void *)(v0 + 488) = MEMORY[0x263F8D4F8];
    *(unsigned char *)(v0 + 464) = v39;
    sub_25AB1DDC8((_OWORD *)(v0 + 464), (_OWORD *)(v0 + 432));
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v122 = v26;
    uint64_t v44 = *(void *)(v0 + 456);
    uint64_t v45 = __swift_mutable_project_boxed_opaque_existential_0(v0 + 432, v44);
    uint64_t v46 = *(void *)(v44 - 8);
    int v47 = (char *)swift_task_alloc();
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v47, v45, v44);
    sub_25AB84160(*v47, v40, v42, v43, &v122);
    __swift_destroy_boxed_opaque_existential_1(v0 + 432);
    swift_task_dealloc();
    unint64_t v26 = v122;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v48 = sub_25AC33150();
  if (v49)
  {
    uint64_t v50 = v48;
    uint64_t v51 = v49;
    uint64_t v52 = sub_25AC33BC0();
    uint64_t v54 = v53;
    *(void *)(v0 + 552) = MEMORY[0x263F8D310];
    *(void *)(v0 + 528) = v50;
    *(void *)(v0 + 536) = v51;
    sub_25AB1DDC8((_OWORD *)(v0 + 528), (_OWORD *)(v0 + 496));
    LOBYTE(v50) = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v122 = v26;
    uint64_t v55 = *(void *)(v0 + 520);
    uint64_t v56 = __swift_mutable_project_boxed_opaque_existential_0(v0 + 496, v55);
    uint64_t v57 = *(void *)(v55 - 8);
    uint64_t v58 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v57 + 16))(v58, v56, v55);
    sub_25AB83AF8(*v58, v58[1], v52, v54, v50, &v122);
    __swift_destroy_boxed_opaque_existential_1(v0 + 496);
    swift_task_dealloc();
    unint64_t v26 = v122;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v59 = sub_25AC331B0();
  if (v60)
  {
    uint64_t v61 = v59;
    uint64_t v62 = v60;
    uint64_t v63 = sub_25AC33CA0();
    uint64_t v65 = v64;
    *(void *)(v0 + 392) = MEMORY[0x263F8D310];
    *(void *)(v0 + 368) = v61;
    *(void *)(v0 + 376) = v62;
    sub_25AB1DDC8((_OWORD *)(v0 + 368), (_OWORD *)(v0 + 560));
    LOBYTE(v61) = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v122 = v26;
    uint64_t v66 = *(void *)(v0 + 584);
    uint64_t v67 = __swift_mutable_project_boxed_opaque_existential_0(v0 + 560, v66);
    uint64_t v68 = *(void *)(v66 - 8);
    uint64_t v69 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v68 + 16))(v69, v67, v66);
    sub_25AB83AF8(*v69, v69[1], v63, v65, v61, &v122);
    __swift_destroy_boxed_opaque_existential_1(v0 + 560);
    swift_task_dealloc();
    unint64_t v26 = v122;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  *(void *)(v0 + 792) = v26;
  uint64_t v70 = *(void *)(v0 + 768);
  uint64_t v71 = *(void *)(v0 + 760);
  uint64_t v72 = *(void *)(v0 + 752);
  uint64_t v73 = *(void *)(v0 + 744);
  uint64_t v74 = *(void *)(v0 + 720);
  uint64_t v112 = *(void *)(v0 + 712);
  uint64_t v114 = *(void *)(v0 + 736);
  uint64_t v110 = *(void *)(v0 + 680);
  sub_25AC331C0();
  uint64_t v75 = *MEMORY[0x263F154E8];
  uint64_t v76 = *(void (**)(uint64_t))(v72 + 104);
  *(void *)(v0 + 800) = v76;
  *(void *)(v0 + 808) = (v72 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  uint64_t v109 = v76;
  ((void (*)(uint64_t, uint64_t, uint64_t))v76)(v71, v75, v73);
  *(void *)(v0 + 816) = sub_25AB2DA08();
  sub_25AC35040();
  sub_25AC35040();
  uint64_t v77 = *(void *)(v0 + 624);
  uint64_t v78 = *(void *)(v0 + 616);
  v119(v71, v73);
  v119(v70, v73);
  v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 16);
  *(void *)(v0 + 824) = v79;
  *(void *)(v0 + 832) = (v74 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v79(v114, v110, v112);
  if (v77 == v78)
  {
    uint64_t v80 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 720) + 8);
    v80(*(void *)(v0 + 736), *(void *)(v0 + 712));
LABEL_12:
    *(void *)(v0 + 840) = v80;
    uint64_t v87 = sub_25AC33D20();
    uint64_t v89 = v88;
    *(void *)(v0 + 848) = v88;
    uint64_t v90 = sub_25AC33130();
    uint64_t v92 = v91;
    *(void *)(v0 + 856) = v91;
    uint64_t v93 = (void *)swift_task_alloc();
    *(void *)(v0 + 864) = v93;
    *uint64_t v93 = v0;
    v93[1] = sub_25AB2C8F8;
    return MEMORY[0x270EFAA10](v87, v89, v90, v92);
  }
  uint64_t v81 = *(void *)(v0 + 768);
  uint64_t v82 = *(void *)(v0 + 760);
  uint64_t v83 = *(void *)(v0 + 744);
  uint64_t v84 = *(void *)(v0 + 720);
  uint64_t v115 = *(void *)(v0 + 736);
  uint64_t v117 = *(void *)(v0 + 712);
  sub_25AC331C0();
  unsigned int v111 = *MEMORY[0x263F154F0];
  v109(v82);
  sub_25AC35040();
  sub_25AC35040();
  uint64_t v85 = *(void *)(v0 + 664);
  uint64_t v86 = *(void *)(v0 + 656);
  v119(v82, v83);
  v119(v81, v83);
  uint64_t v80 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
  v80(v115, v117);
  if (v85 == v86) {
    goto LABEL_12;
  }
  uint64_t v120 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 824);
  uint64_t v94 = *(void (**)(uint64_t, void, uint64_t))(v0 + 800);
  uint64_t v113 = *(void (**)(uint64_t, uint64_t))(v0 + 776);
  uint64_t v95 = *(void *)(v0 + 768);
  uint64_t v96 = *(void *)(v0 + 760);
  uint64_t v97 = *(void *)(v0 + 744);
  uint64_t v116 = *(void *)(v0 + 728);
  uint64_t v118 = *(void *)(v0 + 712);
  uint64_t v98 = *(void *)(v0 + 680);
  sub_25AC331C0();
  v94(v96, *MEMORY[0x263F154E0], v97);
  sub_25AC35040();
  sub_25AC35040();
  uint64_t v99 = *(void *)(v0 + 648);
  uint64_t v100 = *(void *)(v0 + 640);
  v113(v96, v97);
  v113(v95, v97);
  v120(v116, v98, v118);
  if (v99 == v100)
  {
    char v101 = 1;
  }
  else
  {
    v102 = *(void (**)(uint64_t, void, uint64_t))(v0 + 800);
    v121 = *(void (**)(uint64_t, uint64_t))(v0 + 776);
    uint64_t v103 = *(void *)(v0 + 768);
    uint64_t v104 = *(void *)(v0 + 760);
    uint64_t v105 = *(void *)(v0 + 744);
    sub_25AC331C0();
    v102(v104, v111, v105);
    sub_25AC35040();
    sub_25AC35040();
    char v101 = *(void *)(v0 + 632) == *(void *)(v0 + 672);
    v121(v104, v105);
    v121(v103, v105);
  }
  v80(*(void *)(v0 + 728), *(void *)(v0 + 712));
  uint64_t v106 = (void *)swift_task_alloc();
  *(void *)(v0 + 880) = v106;
  *uint64_t v106 = v0;
  v106[1] = sub_25AB2CEA0;
  uint64_t v107 = *(void *)(v0 + 792);
  return sub_25AB2DA60(v107, v101);
}

uint64_t sub_25AB2C8F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[74] = v2;
  v3[75] = a1;
  v3[76] = a2;
  v3[109] = a2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_25AB2CA3C);
}

uint64_t sub_25AB2CA3C()
{
  uint64_t v1 = v0[109];
  if (v1)
  {
    uint64_t v2 = (void *)(v0[86] + OBJC_IVAR____TtC21ProximityReaderDaemon25DiscoveryAnalyticsManager_analyticsSessionID);
    void *v2 = v0[75];
    v2[1] = v1;
    swift_bridgeObjectRelease();
    uint64_t v32 = (void (*)(void, void))v0[105];
    uint64_t v31 = (void (*)(uint64_t, uint64_t, uint64_t))v0[103];
    uint64_t v3 = (void (*)(uint64_t, void, uint64_t))v0[100];
    uint64_t v4 = (void (*)(uint64_t, uint64_t))v0[97];
    uint64_t v5 = v0[96];
    uint64_t v6 = v0[95];
    uint64_t v7 = v0[93];
    uint64_t v29 = v0[91];
    uint64_t v30 = v0[89];
    uint64_t v8 = v0[85];
    sub_25AC331C0();
    v3(v6, *MEMORY[0x263F154E0], v7);
    sub_25AC35040();
    sub_25AC35040();
    uint64_t v9 = v0[81];
    uint64_t v10 = v0[80];
    v4(v6, v7);
    v4(v5, v7);
    v31(v29, v8, v30);
    if (v9 == v10)
    {
      char v11 = 1;
    }
    else
    {
      uint64_t v16 = (void (*)(uint64_t, void, uint64_t))v0[100];
      uint64_t v17 = (void (*)(uint64_t, uint64_t))v0[97];
      uint64_t v18 = v0[96];
      uint64_t v19 = v0[95];
      uint64_t v20 = v0[93];
      sub_25AC331C0();
      v16(v19, *MEMORY[0x263F154F0], v20);
      sub_25AC35040();
      sub_25AC35040();
      char v11 = v0[79] == v0[84];
      v17(v19, v20);
      v17(v18, v20);
    }
    v32(v0[91], v0[89]);
    uint64_t v21 = (void *)swift_task_alloc();
    v0[110] = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_25AB2CEA0;
    uint64_t v22 = v0[99];
    return sub_25AB2DA60(v22, v11);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_26A49F830 != -1) {
      swift_once();
    }
    uint64_t v12 = v0[88];
    uint64_t v13 = __swift_project_value_buffer(v0[87], (uint64_t)qword_26A4A1D78);
    sub_25AB150E0(v13, v12);
    uint64_t v14 = sub_25AC345E0();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) == 1)
    {
      sub_25AB18FAC(v0[88], &qword_26A49F9A0);
    }
    else
    {
      uint64_t v24 = sub_25AC345C0();
      os_log_type_t v25 = sub_25AC352C0();
      if (os_log_type_enabled(v24, v25))
      {
        unint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v26 = 0;
        _os_log_impl(&dword_25AB11000, v24, v25, "DiscoveryAnalyticsManager - sendEvent - could not create analytics session", v26, 2u);
        MEMORY[0x261151C20](v26, -1, -1);
      }
      uint64_t v27 = v0[88];

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v27, v14);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v28 = (uint64_t (*)(void))v0[1];
    return v28();
  }
}

uint64_t sub_25AB2CEA0()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_25AB2CFB8);
}

uint64_t sub_25AB2CFB8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB2D050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 136) = a6;
  *(void *)(v6 + 96) = a4;
  *(void *)(v6 + 104) = a5;
  *(void *)(v6 + 80) = a2;
  *(void *)(v6 + 88) = a3;
  *(void *)(v6 + 112) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  *(void *)(v6 + 120) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB2D0F0);
}

uint64_t sub_25AB2D0F0()
{
  uint64_t v31 = v0;
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = sub_25AC33CB0();
  if (!*(void *)(v1 + 16) || (unint64_t v4 = sub_25AB8D62C(v2, v3), (v5 & 1) == 0))
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_25AB18F50(*(void *)(*(void *)(v0 + 80) + 56) + 32 * v4, v0 + 16);
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 40))
  {
LABEL_10:
    uint64_t v14 = (uint64_t *)&unk_26A4A0040;
    uint64_t v15 = v0 + 16;
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0048);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_12;
  }
  uint64_t v7 = *(void *)(v0 + 48);
  unint64_t v6 = *(void *)(v0 + 56);
  if (qword_26A49F830 != -1) {
    swift_once();
  }
  uint64_t v8 = *(void *)(v0 + 120);
  uint64_t v9 = __swift_project_value_buffer(*(void *)(v0 + 112), (uint64_t)qword_26A4A1D78);
  sub_25AB150E0(v9, v8);
  uint64_t v10 = sub_25AC345E0();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10);
  uint64_t v13 = *(void *)(v0 + 120);
  if (v12 != 1)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_25AC345C0();
    os_log_type_t v22 = sub_25AC352B0();
    if (os_log_type_enabled(v21, v22))
    {
      os_log_type_t type = v22;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v30 = v28;
      *(_DWORD *)uint64_t v23 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 64) = sub_25AB56574(v7, v6, &v30);
      sub_25AC354A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v23 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_25AC34DB0();
      unint64_t v26 = v25;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 72) = sub_25AB56574(v24, v26, &v30);
      sub_25AC354A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25AB11000, v21, type, "Sending event: [%s] [%s]", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x261151C20](v28, -1, -1);
      MEMORY[0x261151C20](v23, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(void, uint64_t))(v11 + 8))(*(void *)(v0 + 120), v10);
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = &qword_26A49F9A0;
  uint64_t v15 = v13;
LABEL_11:
  sub_25AB18FAC(v15, v14);
LABEL_12:
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v16;
  void *v16 = v0;
  v16[1] = sub_25AB2D50C;
  uint64_t v17 = *(unsigned __int8 *)(v0 + 136);
  uint64_t v19 = *(void *)(v0 + 96);
  uint64_t v18 = *(void *)(v0 + 104);
  uint64_t v20 = *(void *)(v0 + 80);
  return MEMORY[0x270EFAA38](v19, v18, v20, v17);
}

uint64_t sub_25AB2D50C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_25AB2D620()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC21ProximityReaderDaemon25DiscoveryAnalyticsManager_manager;
  uint64_t v2 = sub_25AC32E50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_25AB2D6F8()
{
  return type metadata accessor for DiscoveryAnalyticsManager();
}

uint64_t type metadata accessor for DiscoveryAnalyticsManager()
{
  uint64_t result = qword_26A49FFE8;
  if (!qword_26A49FFE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25AB2D74C()
{
  uint64_t result = sub_25AC32E50();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_25AB2D7FC()
{
  uint64_t v1 = sub_25AC331D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_25AB2D8E4(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_25AC331D0() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_25AB24B20;
  return sub_25AB2BD08(a1, v6, v7, v8, v9);
}

unint64_t sub_25AB2DA08()
{
  unint64_t result = qword_26A4A0018;
  if (!qword_26A4A0018)
  {
    sub_25AC33190();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26A4A0018);
  }
  return result;
}

uint64_t sub_25AB2DA60(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 64) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  *(void *)(v3 + 32) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  *(void *)(v3 + 40) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB2DAFC);
}

uint64_t sub_25AB2DAFC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon25DiscoveryAnalyticsManager_analyticsSessionID + 8);
  if (v2)
  {
    char v3 = *(unsigned char *)(v0 + 64);
    uint64_t v4 = *(void *)(v0 + 16);
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon25DiscoveryAnalyticsManager_analyticsSessionID);
    *(void *)(v0 + 48) = *(void *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon25DiscoveryAnalyticsManager_serializer);
    uint64_t v6 = swift_allocObject();
    *(void *)(v0 + 56) = v6;
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v1;
    *(void *)(v6 + 32) = v5;
    *(void *)(v6 + 40) = v2;
    *(unsigned char *)(v6 + 48) = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FF38);
    sub_25AB2DF78();
    sub_25AC350E0();
    return MEMORY[0x270FA2498](sub_25AB2DD90);
  }
  else
  {
    if (qword_26A49F830 != -1) {
      swift_once();
    }
    uint64_t v7 = *(void *)(v0 + 40);
    uint64_t v8 = __swift_project_value_buffer(*(void *)(v0 + 32), (uint64_t)qword_26A4A1D78);
    sub_25AB150E0(v8, v7);
    uint64_t v9 = sub_25AC345E0();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) == 1)
    {
      sub_25AB18FAC(*(void *)(v0 + 40), &qword_26A49F9A0);
    }
    else
    {
      uint64_t v11 = sub_25AC345C0();
      os_log_type_t v12 = sub_25AC352C0();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v13 = 0;
        _os_log_impl(&dword_25AB11000, v11, v12, "DiscoveryAnalyticsManager - sendEvent - analytics session not found", v13, 2u);
        MEMORY[0x261151C20](v13, -1, -1);
      }
      uint64_t v14 = *(void *)(v0 + 40);

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v14, v9);
    }
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
}

uint64_t sub_25AB2DD90()
{
  sub_25AC32D00();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t __swift_mutable_project_boxed_opaque_existential_0(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_25AB2DE68()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 49, 7);
}

uint64_t sub_25AB2DEB0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_25AB24B20;
  return sub_25AB2D050(a1, v4, v5, v6, v7, v8);
}

unint64_t sub_25AB2DF78()
{
  unint64_t result = qword_26A4A0038;
  if (!qword_26A4A0038)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A49FF38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0038);
  }
  return result;
}

uint64_t sub_25AB2DFD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 168);
  uint64_t v4 = *(void *)(v1 + 176);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 96);
  uint64_t v10 = *(void *)(v1 + 104);
  uint64_t v11 = *(void *)(v1 + 64);
  uint64_t v12 = *(void *)(v1 + 72);
  uint64_t v13 = *(void *)(v1 + 80);
  uint64_t v14 = *(void *)(v1 + 88);
  *(void *)(a1 + 16) = *(void *)(v1 + 16);
  *(unsigned char *)(a1 + 32) = 4;
  uint64_t v15 = *(void *)(v1 + 112);
  uint64_t v16 = *(void *)(v1 + 120);
  *(void *)(a1 + 40) = v3;
  *(unsigned char *)(a1 + 56) = 8;
  *(void *)(a1 + 64) = v5;
  uint64_t v17 = *(void *)(v1 + 128);
  uint64_t v18 = *(void *)(v1 + 136);
  *(void *)(a1 + 80) = v7;
  *(void *)(a1 + 96) = v9;
  uint64_t v19 = *(void *)(v1 + 144);
  uint64_t v20 = *(void *)(v1 + 152);
  *(void *)(a1 + 112) = v11;
  LOBYTE(v7) = *(unsigned char *)(v1 + 160);
  *(void *)(a1 + 128) = v13;
  LOBYTE(v9) = *(unsigned char *)(v1 + 192);
  *(void *)(a1 + 144) = v15;
  LOBYTE(v15) = *(unsigned char *)(v1 + 193);
  *(void *)(a1 + 160) = v17;
  LOBYTE(v17) = *(unsigned char *)(v1 + 194);
  *(void *)(a1 + 176) = v19;
  *(unsigned char *)(a1 + 192) = v7;
  *(unsigned char *)(a1 + 193) = 1;
  uint64_t v21 = *(void *)(v1 + 200);
  uint64_t v28 = *(void *)(v1 + 208);
  *(unsigned char *)(a1 + 194) = v9;
  *(unsigned char *)(a1 + 195) = v15;
  uint64_t v22 = *(void *)(v1 + 216);
  uint64_t v23 = *(void *)(v1 + 224);
  *(unsigned char *)(a1 + 196) = v17;
  *(void *)(a1 + 200) = v21;
  *(unsigned char *)(a1 + 232) = -4;
  uint64_t v24 = *(void *)(v1 + 264);
  uint64_t v29 = *(void *)(v1 + 272);
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = v22;
  *(void *)(a1 + 272) = v24;
  *(unsigned char *)(a1 + 296) = 1;
  *(unsigned char *)(a1 + 312) = 1;
  uint64_t v25 = *(void *)(v1 + 288);
  *(void *)(a1 + 320) = *(void *)(v1 + 280);
  uint64_t v26 = *(void *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v26;
  *(void *)(a1 + 24) = v2;
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 88) = v8;
  *(void *)(a1 + 104) = v10;
  *(void *)(a1 + 120) = v12;
  *(void *)(a1 + 136) = v14;
  *(void *)(a1 + 152) = v16;
  *(void *)(a1 + 168) = v18;
  *(void *)(a1 + 184) = v20;
  *(void *)(a1 + 208) = v28;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 256) = v23;
  *(unsigned char *)(a1 + 264) = 0;
  *(void *)(a1 + 280) = v29;
  *(void *)(a1 + 288) = 0;
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 328) = v25;
  *(unsigned char *)(a1 + 336) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t sub_25AB2E1BC(char a1)
{
  unint64_t result = 0x746361736E617274;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6B726F7774656ELL;
      break;
    case 2:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
    case 13:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    case 7:
      unint64_t result = 0x64496B656BLL;
      break;
    case 8:
      unint64_t result = 0x746E756F6D61;
      break;
    case 9:
      unint64_t result = 0x79636E6572727563;
      break;
    case 10:
      unint64_t result = 0x69757165526E6970;
      break;
    case 11:
      unint64_t result = 0x6C757365526D7663;
      break;
    case 12:
      unint64_t result = 0x6974617269707865;
      break;
    case 14:
      unint64_t result = 0xD000000000000010;
      break;
    case 15:
      unint64_t result = 0x626C6C6146726F66;
      break;
    case 16:
      unint64_t result = 0x6B6361626C6C6166;
      break;
    case 17:
      unint64_t result = 0xD000000000000015;
      break;
    case 18:
      unint64_t result = 0xD000000000000018;
      break;
    case 19:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 20:
      unint64_t result = 0xD000000000000011;
      break;
    case 21:
      unint64_t result = 0x7954707041796170;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25AB2E48C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0068);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB359D0();
  sub_25AC35A00();
  char v9 = 0;
  sub_25AC357F0();
  if (!v1)
  {
    char v9 = 1;
    sub_25AC357F0();
    char v9 = 2;
    sub_25AC357F0();
    char v9 = 3;
    sub_25AC357F0();
    char v9 = 4;
    sub_25AC357F0();
    char v9 = 5;
    sub_25AC357F0();
    char v9 = 6;
    sub_25AC357F0();
    char v9 = 7;
    sub_25AC357F0();
    char v9 = 8;
    sub_25AC357F0();
    char v9 = 9;
    sub_25AC357F0();
    char v9 = 10;
    sub_25AC35800();
    char v9 = 11;
    sub_25AC357F0();
    char v9 = 12;
    sub_25AC35810();
    char v9 = 13;
    sub_25AC35800();
    char v9 = 14;
    sub_25AC35800();
    char v9 = 15;
    sub_25AC35800();
    char v9 = 16;
    sub_25AC357F0();
    char v9 = 17;
    sub_25AC357F0();
    char v9 = 18;
    sub_25AC357C0();
    char v9 = 19;
    sub_25AC357C0();
    char v9 = 20;
    sub_25AC357F0();
    char v9 = 21;
    sub_25AC357F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_25AB2E90C()
{
  return sub_25AB2E1BC(*v0);
}

uint64_t sub_25AB2E914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB3400C(a1, a2);
  *a3 = result;
  return result;
}

void sub_25AB2E93C(unsigned char *a1@<X8>)
{
  *a1 = 22;
}

uint64_t sub_25AB2E948(uint64_t a1)
{
  unint64_t v2 = sub_25AB359D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB2E984(uint64_t a1)
{
  unint64_t v2 = sub_25AB359D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_25AB2E9C0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_25AB34900(a1, __src);
  if (!v2) {
    return memcpy(a2, __src, 0x128uLL);
  }
  return result;
}

uint64_t sub_25AB2EA14(void *a1)
{
  return sub_25AB2E48C(a1);
}

uint64_t sub_25AB2EA2C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_25AB2F218((uint64_t *)a3);
  if (!v4)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_25AB35A24(a3);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = *(void *)(v3 + 112);
    *(void *)(v3 + 112) = 0x8000000000000000;
    sub_25ABAEDC0((const void *)a3, a1, a2, isUniquelyReferenced_nonNull_native);
    *(void *)(v3 + 112) = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_25AB310AC(a1, a2, *(double *)(a3 + 184));
    if (qword_26A49F7D8 != -1) {
      swift_once();
    }
    uint64_t v13 = __swift_project_value_buffer(v8, (uint64_t)qword_26A4A1C70);
    sub_25AB150E0(v13, (uint64_t)v10);
    uint64_t v14 = sub_25AC345E0();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14) == 1)
    {
      return sub_25AB18FAC((uint64_t)v10, &qword_26A49F9A0);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      uint64_t v16 = sub_25AC345C0();
      os_log_type_t v17 = sub_25AC352B0();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = swift_slowAlloc();
        os_log_t v23 = v16;
        uint64_t v19 = (uint8_t *)v18;
        uint64_t v24 = swift_slowAlloc();
        v25[0] = v24;
        *(_DWORD *)uint64_t v19 = 136315138;
        uint64_t v22 = v19 + 4;
        swift_bridgeObjectRetain();
        uint64_t v26 = sub_25AB56574(a1, a2, v25);
        sub_25AC354A0();
        swift_bridgeObjectRelease_n();
        os_log_t v20 = v23;
        _os_log_impl(&dword_25AB11000, v23, v17, "Inserting: [ %s ] on cache", v19, 0xCu);
        uint64_t v21 = v24;
        swift_arrayDestroy();
        MEMORY[0x261151C20](v21, -1, -1);
        MEMORY[0x261151C20](v19, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v10, v14);
    }
  }
  return result;
}

uint64_t sub_25AB2ED78(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_beginAccess();
  uint64_t v10 = *(void *)(v2 + 112);
  if (*(void *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_25AB8D62C(a1, a2);
    if (v12)
    {
      uint64_t v30 = a1;
      memcpy(v29, (const void *)(*(void *)(v10 + 56) + 296 * v11), 0x128uLL);
      sub_25AB35A24((uint64_t)v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_26A49F7D8 != -1) {
        swift_once();
      }
      uint64_t v13 = __swift_project_value_buffer(v6, (uint64_t)qword_26A4A1C70);
      sub_25AB150E0(v13, (uint64_t)v8);
      uint64_t v14 = sub_25AC345E0();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14) == 1)
      {
        sub_25AB18FAC((uint64_t)v8, &qword_26A49F9A0);
      }
      else
      {
        swift_bridgeObjectRetain_n();
        uint64_t v16 = sub_25AC345C0();
        os_log_type_t v17 = sub_25AC352B0();
        int v25 = v17;
        if (os_log_type_enabled(v16, v17))
        {
          uint64_t v26 = (uint8_t *)swift_slowAlloc();
          uint64_t v23 = swift_slowAlloc();
          v28[0] = v23;
          uint64_t v24 = v16;
          uint64_t v18 = v26;
          *(_DWORD *)uint64_t v26 = 136315138;
          v22[1] = v18 + 4;
          swift_bridgeObjectRetain();
          v27[0] = sub_25AB56574(v30, a2, v28);
          sub_25AC354A0();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_25AB11000, v24, (os_log_type_t)v25, "Removing: [ %s ] from cache", v26, 0xCu);
          uint64_t v19 = v23;
          swift_arrayDestroy();
          MEMORY[0x261151C20](v19, -1, -1);
          MEMORY[0x261151C20](v26, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
        (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v14);
      }
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v20 = v30;
      sub_25ABAB5D0(v30, a2, v27);
      swift_bridgeObjectRelease();
      sub_25AB36198((uint64_t)v27, (uint64_t)v28);
      sub_25AB36B90((uint64_t)v28, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25AB36A58);
      swift_endAccess();
      swift_beginAccess();
      if (*(void *)(*(void *)(v3 + 120) + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_25AB8D62C(v20, a2);
        if (v21)
        {
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_getObjectType();
          sub_25AC353A0();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_25ABAB500(v20, a2);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      sub_25AB2FC18(v29);
      return sub_25AB35B48((uint64_t)v29);
    }
    else
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_25AB2F218(uint64_t *a1)
{
  uint64_t v73 = sub_25AC32CF0();
  uint64_t v71 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  uint64_t v72 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v69 = (uint64_t)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v60 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v74 = (uint64_t)&v60 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD30);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25AC32300();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  os_log_type_t v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(v1 + 136);
  v76[0] = *(void *)(v1 + 128);
  v76[1] = v18;
  uint64_t v19 = *a1;
  unint64_t v20 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v70 = v19;
  sub_25AC34F60();
  swift_bridgeObjectRelease();
  sub_25AC34F60();
  sub_25AC34F60();
  sub_25AC32260();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_25AB18FAC((uint64_t)v13, &qword_26A49FD30);
LABEL_5:
    if (qword_26A49F7D8 != -1) {
      swift_once();
    }
    uint64_t v23 = __swift_project_value_buffer(v4, (uint64_t)qword_26A4A1C70);
    sub_25AB150E0(v23, (uint64_t)v9);
    uint64_t v24 = sub_25AC345E0();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v9, 1, v24) == 1) {
      return sub_25AB18FAC((uint64_t)v9, &qword_26A49F9A0);
    }
    sub_25AB35A24((uint64_t)a1);
    sub_25AB35A24((uint64_t)a1);
    uint64_t v27 = sub_25AC345C0();
    os_log_type_t v28 = sub_25AC352C0();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      v76[0] = v74;
      *(_DWORD *)uint64_t v29 = 136315138;
      uint64_t v73 = (uint64_t)(v29 + 4);
      swift_bridgeObjectRetain();
      uint64_t v77 = sub_25AB56574(v70, v20, v76);
      sub_25AC354A0();
      swift_bridgeObjectRelease();
      sub_25AB35B48((uint64_t)a1);
      sub_25AB35B48((uint64_t)a1);
      _os_log_impl(&dword_25AB11000, v27, v28, "Could not save cache data: [%s]", v29, 0xCu);
      uint64_t v30 = v74;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v30, -1, -1);
      MEMORY[0x261151C20](v29, -1, -1);
    }
    else
    {

      sub_25AB35B48((uint64_t)a1);
      sub_25AB35B48((uint64_t)a1);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v9, v24);
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  uint64_t v21 = sub_25ABE3830();
  if (v22 >> 60 == 15)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    goto LABEL_5;
  }
  uint64_t v31 = v21;
  unint64_t v32 = v22;
  uint64_t v67 = v17;
  if (qword_26A49F7D8 != -1) {
    swift_once();
  }
  uint64_t v64 = __swift_project_value_buffer(v4, (uint64_t)qword_26A4A1C70);
  uint64_t v33 = v74;
  sub_25AB150E0(v64, v74);
  uint64_t v34 = sub_25AC345E0();
  uint64_t v65 = *(void *)(v34 - 8);
  uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  uint64_t v68 = v34;
  uint64_t v63 = v35;
  int v36 = ((uint64_t (*)(uint64_t, uint64_t))v35)(v33, 1);
  uint64_t v66 = v31;
  if (v36 == 1)
  {
    sub_25AB18FAC(v33, &qword_26A49F9A0);
    uint64_t v37 = v67;
    char v38 = v72;
  }
  else
  {
    sub_25AB35A24((uint64_t)a1);
    sub_25AB35A24((uint64_t)a1);
    char v39 = sub_25AC345C0();
    os_log_type_t v40 = sub_25AC352B0();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      v76[0] = v61;
      unint64_t v62 = v32;
      uint64_t v60 = v41;
      *(_DWORD *)uint64_t v41 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v77 = sub_25AB56574(v70, v20, v76);
      unint64_t v32 = v62;
      uint64_t v33 = v74;
      sub_25AC354A0();
      swift_bridgeObjectRelease();
      sub_25AB35B48((uint64_t)a1);
      sub_25AB35B48((uint64_t)a1);
      os_log_type_t v42 = v40;
      char v43 = v60;
      _os_log_impl(&dword_25AB11000, v39, v42, "Saving cache data: [%s] to FS", v60, 0xCu);
      uint64_t v44 = v61;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v44, -1, -1);
      MEMORY[0x261151C20](v43, -1, -1);
    }
    else
    {

      sub_25AB35B48((uint64_t)a1);
      sub_25AB35B48((uint64_t)a1);
    }
    uint64_t v37 = v67;
    char v38 = v72;
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v33, v68);
    uint64_t v31 = v66;
  }
  sub_25AC32CE0();
  uint64_t v45 = v31;
  uint64_t v46 = v75;
  sub_25AC32CB0();
  int v47 = (void (**)(char *, uint64_t))(v71 + 8);
  if (v46)
  {
    (*v47)(v38, v73);
    uint64_t v48 = v69;
    sub_25AB150E0(v64, v69);
    if (v63(v48, 1, v68) == 1)
    {
      sub_25AB18FAC(v48, &qword_26A49F9A0);
      uint64_t v49 = v66;
    }
    else
    {
      unint64_t v62 = v32;
      uint64_t v50 = v46;
      uint64_t v51 = v46;
      uint64_t v52 = sub_25AC345C0();
      os_log_type_t v53 = sub_25AC352C0();
      if (os_log_type_enabled(v52, v53))
      {
        uint64_t v54 = (uint8_t *)swift_slowAlloc();
        uint64_t v55 = swift_slowAlloc();
        *(_DWORD *)uint64_t v54 = 136315138;
        uint64_t v75 = v54 + 4;
        v76[0] = v55;
        uint64_t v77 = (uint64_t)v46;
        uint64_t v56 = v46;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A00C0);
        uint64_t v57 = sub_25AC34EB0();
        uint64_t v77 = sub_25AB56574(v57, v58, v76);
        sub_25AC354A0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_25AB11000, v52, v53, "Could not save cache data: [%s]", v54, 0xCu);
        swift_arrayDestroy();
        uint64_t v59 = v55;
        uint64_t v37 = v67;
        MEMORY[0x261151C20](v59, -1, -1);
        MEMORY[0x261151C20](v54, -1, -1);
      }
      else
      {
      }
      unint64_t v32 = v62;
      uint64_t v49 = v66;
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v69, v68);
    }
    swift_willThrow();
    sub_25AB16944(v49, v32);
  }
  else
  {
    sub_25AB16944(v45, v32);
    (*v47)(v38, v73);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v37, v14);
}

uint64_t sub_25AB2FC18(uint64_t *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v48 = (uint64_t)v41 - v7;
  uint64_t v8 = sub_25AC32CF0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v49 = v8;
  uint64_t v50 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD30);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_25AC32300();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(v1 + 136);
  v52[0] = *(void *)(v1 + 128);
  v52[1] = v19;
  int v47 = a1;
  uint64_t v20 = *a1;
  unint64_t v21 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v46 = v20;
  sub_25AC34F60();
  swift_bridgeObjectRelease();
  sub_25AC34F60();
  sub_25AC34F60();
  sub_25AC32260();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_25AB18FAC((uint64_t)v14, &qword_26A49FD30);
    if (qword_26A49F7D8 != -1) {
      swift_once();
    }
    uint64_t v22 = __swift_project_value_buffer(v3, (uint64_t)qword_26A4A1C70);
    sub_25AB150E0(v22, (uint64_t)v6);
    uint64_t v23 = sub_25AC345E0();
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v6, 1, v23) == 1)
    {
      return sub_25AB18FAC((uint64_t)v6, &qword_26A49F9A0);
    }
    else
    {
      uint64_t v27 = sub_25AC345C0();
      os_log_type_t v28 = sub_25AC352C0();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        _os_log_impl(&dword_25AB11000, v27, v28, "Cache data file does not exist, cannot be removed", v29, 2u);
        MEMORY[0x261151C20](v29, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v6, v23);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    sub_25AC32CE0();
    if ((sub_25AC32CD0() & 1) != 0 && (uint64_t v26 = v51, sub_25AC32CC0(), !v26))
    {
      if (qword_26A49F7D8 != -1) {
        swift_once();
      }
      uint64_t v30 = __swift_project_value_buffer(v3, (uint64_t)qword_26A4A1C70);
      uint64_t v31 = v48;
      sub_25AB150E0(v30, v48);
      uint64_t v32 = sub_25AC345E0();
      uint64_t v33 = *(void *)(v32 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
      {
        (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v49);
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
        return sub_25AB18FAC(v31, &qword_26A49F9A0);
      }
      else
      {
        uint64_t v44 = v32;
        uint64_t v51 = 0;
        uint64_t v34 = (uint64_t)v47;
        sub_25AB35A24((uint64_t)v47);
        sub_25AB35A24(v34);
        uint64_t v35 = sub_25AC345C0();
        os_log_type_t v36 = sub_25AC352B0();
        uint64_t v45 = v35;
        if (os_log_type_enabled(v35, v36))
        {
          uint64_t v37 = (uint8_t *)swift_slowAlloc();
          uint64_t v43 = swift_slowAlloc();
          v52[0] = v43;
          os_log_type_t v42 = v37;
          *(_DWORD *)uint64_t v37 = 136315138;
          v41[1] = v37 + 4;
          swift_bridgeObjectRetain();
          v52[3] = sub_25AB56574(v46, v21, v52);
          sub_25AC354A0();
          swift_bridgeObjectRelease();
          sub_25AB35B48(v34);
          sub_25AB35B48(v34);
          char v38 = v45;
          char v39 = v42;
          _os_log_impl(&dword_25AB11000, v45, v36, "Deleted cache data: [%s] from FS", v42, 0xCu);
          uint64_t v40 = v43;
          swift_arrayDestroy();
          MEMORY[0x261151C20](v40, -1, -1);
          MEMORY[0x261151C20](v39, -1, -1);
        }
        else
        {

          sub_25AB35B48(v34);
          sub_25AB35B48(v34);
        }
        (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v49);
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v48, v44);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v49);
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    }
  }
}

uint64_t sub_25AB30374()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25AC32420();
  uint64_t v57 = *(void *)(v2 - 8);
  uint64_t v58 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v56 = (char *)v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD30);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v59 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v46 - v7;
  uint64_t v9 = sub_25AC32300();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v63 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v66 = (char *)v46 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v46 - v15;
  uint64_t v17 = sub_25AC32CF0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AC32CE0();
  sub_25AC322E0();
  uint64_t v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v62 = v10 + 48;
  if (v61(v8, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    return sub_25AB18FAC((uint64_t)v8, &qword_26A49FD30);
  }
  uint64_t v60 = v18;
  uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v65 = v10 + 32;
  v64(v16, v8, v9);
  uint64_t v22 = v20;
  uint64_t v23 = v16;
  if ((sub_25AC32CD0() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v22, v17);
  }
  uint64_t v24 = sub_25AC32C90();
  uint64_t v25 = v24;
  uint64_t v26 = v10;
  if (!v24)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v22, v17);
  }
  uint64_t v48 = v22;
  uint64_t v49 = v17;
  swift_retain();
  unint64_t v27 = sub_25AB36200(v25, v1);
  v46[2] = 0;
  swift_bridgeObjectRelease();
  uint64_t v50 = v1;
  uint64_t result = swift_release();
  uint64_t v67 = MEMORY[0x263F8EE78];
  uint64_t v55 = *(void *)(v27 + 16);
  int v47 = v23;
  if (v55)
  {
    unint64_t v28 = 0;
    uint64_t v51 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
    uint64_t v53 = v10 + 56;
    uint64_t v54 = v10 + 16;
    v46[1] = (v10 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v29 = (uint64_t)v59;
    uint64_t v30 = v60;
    unint64_t v52 = v27;
    while (1)
    {
      if (v28 >= *(void *)(v27 + 16))
      {
        __break(1u);
        return result;
      }
      unint64_t v31 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      uint64_t v32 = *(void *)(v26 + 72);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v26 + 16))(v29, v27 + v31 + v32 * v28, v9);
      uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56);
      v33(v29, 0, 1, v9);
      if (v61((char *)v29, 1, v9) == 1) {
        goto LABEL_26;
      }
      v64(v66, (char *)v29, v9);
      if (sub_25AC32230() == 6513780 && v34 == 0xE300000000000000) {
        break;
      }
      char v35 = sub_25AC35870();
      swift_bridgeObjectRelease();
      if (v35) {
        goto LABEL_19;
      }
      uint64_t result = (*v51)(v66, v9);
LABEL_12:
      unint64_t v27 = v52;
      if (v55 == ++v28)
      {
        v33(v29, 1, 1, v9);
        goto LABEL_26;
      }
    }
    swift_bridgeObjectRelease();
LABEL_19:
    v64(v63, v66, v9);
    uint64_t v36 = v67;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_25AB67C54(0, *(void *)(v36 + 16) + 1, 1);
      uint64_t v36 = v67;
    }
    unint64_t v38 = *(void *)(v36 + 16);
    unint64_t v37 = *(void *)(v36 + 24);
    if (v38 >= v37 >> 1)
    {
      sub_25AB67C54(v37 > 1, v38 + 1, 1);
      uint64_t v36 = v67;
    }
    *(void *)(v36 + 16) = v38 + 1;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v64)(v36 + v31 + v38 * v32, v63, v9);
    uint64_t v67 = v36;
    uint64_t v30 = v60;
    goto LABEL_12;
  }
  char v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  uint64_t v29 = (uint64_t)v59;
  uint64_t v30 = v60;
  v39(v59, 1, 1, v9);
LABEL_26:
  swift_bridgeObjectRelease();
  sub_25AB18FAC(v29, &qword_26A49FD30);
  uint64_t v40 = v67;
  uint64_t v41 = v56;
  sub_25AC32410();
  sub_25AC323E0();
  uint64_t v43 = v42;
  uint64_t v44 = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v41, v58);
  MEMORY[0x270FA5388](v44);
  uint64_t v45 = v48;
  v46[-4] = v48;
  v46[-3] = v43;
  v46[-2] = v50;
  sub_25AB3652C(v40, (void (*)(char *))sub_25AB36A48);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v47, v9);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v45, v49);
  return swift_release();
}

uint64_t sub_25AB30AA0(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v37 - v10;
  uint64_t v12 = sub_25AC32CA0();
  unint64_t v14 = v13;
  sub_25AB8A098((uint64_t)v46);
  sub_25AB16958(v12, v14);
  sub_25AB36198((uint64_t)v46, (uint64_t)v44);
  sub_25AB36198((uint64_t)v44, (uint64_t)v45);
  if (sub_25AB1E90C((uint64_t)v45) != 1)
  {
    memcpy(v47, v45, 0x128uLL);
    double v15 = *(double *)&v45[23];
    if (*(double *)&v45[23] + -0.5 > a1)
    {
      if (qword_26A49F7D8 != -1) {
        swift_once();
      }
      uint64_t v16 = __swift_project_value_buffer(v6, (uint64_t)qword_26A4A1C70);
      sub_25AB150E0(v16, (uint64_t)v11);
      uint64_t v17 = sub_25AC345E0();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v11, 1, v17) == 1)
      {
        sub_25AB18FAC((uint64_t)v11, &qword_26A49F9A0);
      }
      else
      {
        sub_25AB36198((uint64_t)v44, (uint64_t)v42);
        sub_25AB36198((uint64_t)v44, (uint64_t)v43);
        sub_25AB35A24((uint64_t)v43);
        sub_25AB35A24((uint64_t)v42);
        uint64_t v26 = sub_25AC345C0();
        os_log_type_t v27 = sub_25AC352B0();
        if (os_log_type_enabled(v26, v27))
        {
          unint64_t v28 = (uint8_t *)swift_slowAlloc();
          uint64_t v39 = swift_slowAlloc();
          uint64_t v41 = v39;
          unint64_t v38 = v28;
          *(_DWORD *)unint64_t v28 = 136315138;
          v37[1] = v28 + 4;
          uint64_t v29 = v45[0];
          unint64_t v30 = v45[1];
          swift_bridgeObjectRetain();
          uint64_t v40 = sub_25AB56574(v29, v30, &v41);
          sub_25AC354A0();
          swift_bridgeObjectRelease();
          sub_25AB36B90((uint64_t)v44, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25AB36A58);
          sub_25AB36B90((uint64_t)v44, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25AB36A58);
          os_log_type_t v31 = v27;
          uint64_t v32 = v38;
          _os_log_impl(&dword_25AB11000, v26, v31, "Loading cache data from FS: [%s]", v38, 0xCu);
          uint64_t v33 = v39;
          swift_arrayDestroy();
          MEMORY[0x261151C20](v33, -1, -1);
          MEMORY[0x261151C20](v32, -1, -1);
        }
        else
        {

          sub_25AB36B90((uint64_t)v44, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25AB36A58);
          sub_25AB36B90((uint64_t)v44, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25AB36A58);
        }
        (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v17);
      }
      uint64_t v34 = v45[0];
      unint64_t v35 = v45[1];
      swift_beginAccess();
      sub_25AB36B90((uint64_t)v44, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25AB36C1C);
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v42[0] = *(void *)(a4 + 112);
      *(void *)(a4 + 112) = 0x8000000000000000;
      sub_25ABAEDC0(v47, v34, v35, isUniquelyReferenced_nonNull_native);
      *(void *)(a4 + 112) = v42[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_25AB310AC(v34, v35, v15);
      return sub_25AB36B90((uint64_t)v44, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25AB36A58);
    }
    sub_25AB36B90((uint64_t)v44, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25AB36A58);
  }
  if (qword_26A49F7D8 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v6, (uint64_t)qword_26A4A1C70);
  sub_25AB150E0(v19, (uint64_t)v9);
  uint64_t v20 = sub_25AC345E0();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v9, 1, v20) == 1)
  {
    sub_25AB18FAC((uint64_t)v9, &qword_26A49F9A0);
  }
  else
  {
    uint64_t v22 = sub_25AC345C0();
    os_log_type_t v23 = sub_25AC352D0();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_25AB11000, v22, v23, "Sanitizing previous cache data", v24, 2u);
      MEMORY[0x261151C20](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
  }
  return sub_25AC32CC0();
}

uint64_t sub_25AB310AC(uint64_t a1, unint64_t a2, double a3)
{
  uint64_t v7 = sub_25AC34C50();
  uint64_t v78 = *(void *)(v7 - 8);
  uint64_t v79 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v77 = (void *)((char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  uint64_t v76 = (uint64_t)v58 - v10;
  uint64_t v11 = sub_25AC34CC0();
  uint64_t v74 = *(void *)(v11 - 8);
  uint64_t v75 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v73 = (char *)v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  double v15 = (char *)v58 - v14;
  uint64_t v72 = sub_25AC32420();
  uint64_t v71 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v70 = (char *)v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_25AC34C60();
  uint64_t v67 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v65 = (char *)v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_25AC34CA0();
  uint64_t v64 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v63 = (char *)v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_25AC35370();
  uint64_t v62 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = v3 + 120;
  swift_beginAccess();
  uint64_t v81 = v3;
  if (*(void *)(*(void *)(v3 + 120) + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25AB8D62C(a1, a2);
    if (v25)
    {
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_getObjectType();
      sub_25AC353A0();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  if (qword_26A49F7D8 != -1) {
    swift_once();
  }
  uint64_t v26 = __swift_project_value_buffer(v22, (uint64_t)qword_26A4A1C70);
  sub_25AB150E0(v26, (uint64_t)v24);
  uint64_t v27 = sub_25AC345E0();
  uint64_t v28 = *(void *)(v27 - 8);
  int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48))(v24, 1, v27);
  uint64_t v80 = a1;
  if (v29 == 1)
  {
    sub_25AB18FAC((uint64_t)v24, &qword_26A49F9A0);
  }
  else
  {
    uint64_t v60 = v19;
    swift_bridgeObjectRetain_n();
    unint64_t v30 = sub_25AC345C0();
    os_log_type_t v31 = sub_25AC352B0();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      aBlock[0] = v59;
      *(_DWORD *)uint64_t v32 = 136315138;
      v58[1] = v32 + 4;
      swift_bridgeObjectRetain();
      uint64_t v82 = sub_25AB56574(v80, a2, aBlock);
      sub_25AC354A0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25AB11000, v30, v31, "Scheduling timer to remove cache data: [%s]", v32, 0xCu);
      uint64_t v33 = v59;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v33, -1, -1);
      uint64_t v34 = v32;
      a1 = v80;
      MEMORY[0x261151C20](v34, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v19 = v60;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v24, v27);
  }
  sub_25AB369A4();
  sub_25AC35360();
  uint64_t v35 = sub_25AC35380();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v21, v19);
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v37 = (void *)swift_allocObject();
  void v37[2] = a1;
  v37[3] = a2;
  unint64_t v61 = a2;
  v37[4] = v81;
  aBlock[4] = (uint64_t)sub_25AB36A24;
  aBlock[5] = (uint64_t)v37;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_25AB72188;
  aBlock[3] = (uint64_t)&block_descriptor;
  unint64_t v38 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v39 = v63;
  sub_25ABD27B8();
  uint64_t v40 = v65;
  sub_25ABD27BC();
  uint64_t v41 = v35;
  sub_25AC35390();
  _Block_release(v38);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v40, v68);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v39, v66);
  swift_release();
  uint64_t v42 = v70;
  sub_25AC32410();
  sub_25AC323E0();
  double v44 = v43;
  (*(void (**)(char *, uint64_t))(v71 + 8))(v42, v72);
  uint64_t v45 = v73;
  sub_25AC34CB0();
  MEMORY[0x261150860](v45, a3 - v44);
  uint64_t v46 = *(void (**)(char *, uint64_t))(v74 + 8);
  int v47 = v45;
  uint64_t v48 = v75;
  v46(v47, v75);
  uint64_t v49 = v76;
  sub_25ABD283C(v76);
  uint64_t v50 = v77;
  sub_25ABD28B0(v77);
  MEMORY[0x261150F20](v15, v49, v50, ObjectType);
  uint64_t v51 = *(void (**)(void *, uint64_t))(v78 + 8);
  unint64_t v52 = v50;
  uint64_t v53 = v79;
  v51(v52, v79);
  v51((void *)v49, v53);
  v46(v15, v48);
  sub_25AC353B0();
  swift_beginAccess();
  uint64_t v54 = v61;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v55 = v81;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v82 = *(void *)(v55 + 120);
  *(void *)(v55 + 120) = 0x8000000000000000;
  sub_25ABAEC50(v41, v80, v54, isUniquelyReferenced_nonNull_native);
  *(void *)(v55 + 120) = v82;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_unknownObjectRelease();
}

uint64_t sub_25AB31A90(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v23 - v10;
  if (qword_26A49F7D8 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v6, (uint64_t)qword_26A4A1C70);
  sub_25AB150E0(v12, (uint64_t)v11);
  uint64_t v13 = sub_25AC345E0();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) == 1)
  {
    sub_25AB18FAC((uint64_t)v11, &qword_26A49F9A0);
  }
  else
  {
    uint64_t v26 = a1;
    uint64_t v24 = v14;
    swift_bridgeObjectRetain_n();
    double v15 = sub_25AC345C0();
    os_log_type_t v16 = sub_25AC352B0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v25 = v13;
      uint64_t v18 = (uint8_t *)v17;
      uint64_t v19 = swift_slowAlloc();
      v23[2] = a3;
      uint64_t v20 = v19;
      uint64_t v28 = v19;
      v23[3] = v9;
      *(_DWORD *)uint64_t v18 = 136315138;
      v23[1] = v18 + 4;
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_25AB56574(v26, a2, &v28);
      sub_25AC354A0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25AB11000, v15, v16, "Timer expired, removing cache data: [%s]", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261151C20](v20, -1, -1);
      uint64_t v21 = v18;
      uint64_t v13 = v25;
      MEMORY[0x261151C20](v21, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v13);
    a1 = v26;
  }
  return sub_25AB2ED78(a1, a2);
}

uint64_t sub_25AB31F54()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for TransactionContainerCache()
{
  return self;
}

uint64_t sub_25AB31FC0()
{
  type metadata accessor for TransactionDataManager();
  swift_allocObject();
  uint64_t result = sub_25AB31FFC();
  qword_26A4A1C38 = result;
  return result;
}

uint64_t sub_25AB31FFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0070);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v0 + 16) = MEMORY[0x263F8EE78];
  sub_25AC345B0();
  uint64_t v5 = sub_25AC34570();
  uint64_t v7 = v6;
  type metadata accessor for TransactionContainerCache();
  uint64_t v8 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  unsigned char v8[16] = v5;
  v8[17] = v7;
  uint64_t v9 = MEMORY[0x263F8EE80];
  v8[14] = MEMORY[0x263F8EE80];
  v8[15] = v9;
  *(void *)(v1 + 24) = v8;
  uint64_t v10 = sub_25AC35140();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = v11;
  sub_25AB71F88((uint64_t)v4, (uint64_t)&unk_26A4A0080, (uint64_t)v12);
  swift_release();
  return v1;
}

uint64_t sub_25AB32170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a1;
  *(void *)(v4 + 48) = a4;
  return MEMORY[0x270FA2498](sub_25AB32190);
}

uint64_t sub_25AB32190()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 56) = Strong;
  if (Strong)
  {
    *(void *)(v0 + 64) = *(void *)(Strong + 24);
    swift_retain();
    swift_release();
    return MEMORY[0x270FA2498](sub_25AB32274);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_25AB32274()
{
  sub_25AB30374();
  swift_release();
  return MEMORY[0x270FA2498](sub_25AB322E4);
}

uint64_t sub_25AB322E4()
{
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 56) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_25AB3230C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + 16;
  swift_beginAccess();
  if (*(void *)(*(void *)(v2 + 16) + 16) > 9uLL)
  {
    uint64_t result = swift_beginAccess();
    if (!*(void *)(*(void *)v5 + 16))
    {
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    sub_25AB36838(0, 1);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v7 = *(void **)v5;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v5 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v7 = sub_25AB90D74(0, v7[2] + 1, 1, v7);
    *(void *)uint64_t v5 = v7;
  }
  unint64_t v10 = v7[2];
  unint64_t v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    uint64_t v7 = sub_25AB90D74((void *)(v9 > 1), v10 + 1, 1, v7);
    *(void *)uint64_t v5 = v7;
  }
  v7[2] = v10 + 1;
  uint64_t v11 = &v7[2 * v10];
  v11[4] = a1;
  v11[5] = a2;
  return swift_endAccess();
}

uint64_t sub_25AB3245C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[194] = v3;
  v4[193] = a3;
  v4[192] = a2;
  v4[191] = a1;
  v4[195] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  v4[196] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB32500);
}

uint64_t sub_25AB32500()
{
  uint64_t v14 = v0;
  if (qword_26A49F7D8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[196];
  uint64_t v2 = __swift_project_value_buffer(v0[195], (uint64_t)qword_26A4A1C70);
  sub_25AB150E0(v2, v1);
  uint64_t v3 = sub_25AC345E0();
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) == 1)
  {
    sub_25AB18FAC(v0[196], &qword_26A49F9A0);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    uint64_t v5 = sub_25AC345C0();
    os_log_type_t v6 = sub_25AC352B0();
    BOOL v7 = os_log_type_enabled(v5, v6);
    unint64_t v8 = v0[193];
    if (v7)
    {
      uint64_t v12 = v0[192];
      unint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v13 = v10;
      *(_DWORD *)unint64_t v9 = 136315138;
      swift_bridgeObjectRetain();
      v0[190] = sub_25AB56574(v12, v8, &v13);
      sub_25AC354A0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25AB11000, v5, v6, "Retrieving: [%s] from cache", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261151C20](v10, -1, -1);
      MEMORY[0x261151C20](v9, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(void, uint64_t))(v4 + 8))(v0[196], v3);
  }
  v0[197] = *(void *)(v0[194] + 24);
  return MEMORY[0x270FA2498](sub_25AB3278C);
}

uint64_t sub_25AB3278C()
{
  uint64_t v1 = v0[197];
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 112);
  if (*(void *)(v2 + 16))
  {
    uint64_t v3 = v0[193];
    uint64_t v4 = v0[192];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_25AB8D62C(v4, v3);
    if (v6)
    {
      memcpy(v0 + 113, (const void *)(*(void *)(v2 + 56) + 296 * v5), 0x128uLL);
      sub_25AB35A24((uint64_t)(v0 + 113));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return MEMORY[0x270FA2498](sub_25AB32900);
    }
    uint64_t v7 = (uint64_t)(v0 + 76);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = (uint64_t)(v0 + 39);
  }
  sub_25AB36168(v7);
  sub_25AB36198(v7, (uint64_t)(v0 + 2));
  sub_25AB36198((uint64_t)(v0 + 2), v0[191]);
  swift_task_dealloc();
  unint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_25AB32900()
{
  sub_25AB2ED78(v0[192], v0[193]);
  memcpy(v0 + 150, v0 + 113, 0x128uLL);
  nullsub_1(v0 + 150);
  sub_25AB36198((uint64_t)(v0 + 150), (uint64_t)(v0 + 2));
  sub_25AB36198((uint64_t)(v0 + 2), v0[191]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_25AB329C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v83 = a4;
  uint64_t v84 = a5;
  uint64_t v88 = a3;
  uint64_t v82 = a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0070);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = &v54[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_25AC32420();
  uint64_t v80 = *(void *)(v11 - 8);
  uint64_t v81 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v79 = &v54[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  os_log_type_t v16 = &v54[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = &v54[-v17];
  if (qword_26A49F7D8 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v13, (uint64_t)qword_26A4A1C70);
  sub_25AB150E0(v19, (uint64_t)v18);
  uint64_t v20 = sub_25AC345E0();
  uint64_t v87 = *(void *)(v20 - 8);
  uint64_t v78 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v87 + 48);
  if (v78(v18, 1, v20) == 1)
  {
    sub_25AB18FAC((uint64_t)v18, &qword_26A49F9A0);
  }
  else
  {
    uint64_t v77 = v19;
    sub_25AB1E924(a1);
    sub_25AB1E924(a1);
    uint64_t v21 = sub_25AC345C0();
    os_log_type_t v22 = sub_25AC352B0();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v86 = v6;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v76 = v16;
      uint64_t v24 = (uint8_t *)v23;
      uint64_t v75 = swift_slowAlloc();
      uint64_t v93 = v75;
      *(_DWORD *)uint64_t v24 = 136315138;
      uint64_t v74 = v24 + 4;
      uint64_t v85 = v10;
      uint64_t v25 = *(void *)a1;
      unint64_t v26 = *(void *)(a1 + 8);
      swift_bridgeObjectRetain();
      uint64_t v27 = v25;
      uint64_t v6 = v86;
      uint64_t v89 = sub_25AB56574(v27, v26, &v93);
      sub_25AC354A0();
      uint64_t v10 = v85;
      swift_bridgeObjectRelease();
      sub_25AB36048(a1);
      sub_25AB36048(a1);
      _os_log_impl(&dword_25AB11000, v21, v22, "Storing: [%s] in cache", v24, 0xCu);
      uint64_t v28 = v75;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v28, -1, -1);
      int v29 = v24;
      os_log_type_t v16 = v76;
      MEMORY[0x261151C20](v29, -1, -1);
    }
    else
    {

      sub_25AB36048(a1);
      sub_25AB36048(a1);
    }
    (*(void (**)(unsigned char *, uint64_t))(v87 + 8))(v18, v20);
    uint64_t v19 = v77;
  }
  uint64_t v31 = *(void *)a1;
  uint64_t v30 = *(void *)(a1 + 8);
  swift_beginAccess();
  if (sub_25AB333EC(v31, v30, *(void **)(v6 + 16)))
  {
    sub_25AB150E0(v19, (uint64_t)v16);
    unsigned int v32 = v78(v16, 1, v20);
    swift_bridgeObjectRetain();
    if (v32 == 1)
    {
      sub_25AB18FAC((uint64_t)v16, &qword_26A49F9A0);
    }
    else
    {
      uint64_t v46 = sub_25AC345C0();
      os_log_type_t v47 = sub_25AC352B0();
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v48 = v16;
        uint64_t v49 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v49 = 0;
        _os_log_impl(&dword_25AB11000, v46, v47, "Transaction ID already saved", v49, 2u);
        uint64_t v50 = v49;
        os_log_type_t v16 = v48;
        MEMORY[0x261151C20](v50, -1, -1);
      }

      (*(void (**)(unsigned char *, uint64_t))(v87 + 8))(v16, v20);
    }
    uint64_t v51 = sub_25AC35140();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v10, 1, 1, v51);
    uint64_t v52 = swift_allocObject();
    swift_weakInit();
    uint64_t v53 = (void *)swift_allocObject();
    v53[2] = 0;
    v53[3] = 0;
    v53[4] = v52;
    v53[5] = v31;
    v53[6] = v30;
    sub_25AC15CBC((uint64_t)v10, (uint64_t)&unk_26A4A00A8, (uint64_t)v53);
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = v79;
    sub_25AC32410();
    sub_25AC323E0();
    double v35 = v34;
    (*(void (**)(unsigned char *, uint64_t))(v80 + 8))(v33, v81);
    uint64_t v36 = *(void *)(a1 + 16);
    uint64_t v75 = *(void *)(a1 + 24);
    uint64_t v37 = *(void *)(a1 + 64);
    uint64_t v74 = *(uint8_t **)(a1 + 72);
    uint64_t v38 = *(void *)(a1 + 80);
    uint64_t v73 = *(void *)(a1 + 88);
    uint64_t v86 = v6;
    uint64_t v39 = *(void *)(a1 + 104);
    uint64_t v61 = *(void *)(a1 + 112);
    uint64_t v72 = *(void *)(a1 + 120);
    uint64_t v60 = *(void *)(a1 + 128);
    uint64_t v71 = *(void *)(a1 + 136);
    uint64_t v59 = *(void *)(a1 + 96);
    uint64_t v58 = *(void *)(a1 + 144);
    uint64_t v79 = *(unsigned char **)(a1 + 152);
    uint64_t v57 = *(void *)(a1 + 160);
    uint64_t v77 = v31;
    uint64_t v76 = *(unsigned char **)(a1 + 168);
    uint64_t v56 = *(void *)(a1 + 176);
    uint64_t v78 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(a1 + 184);
    int v55 = *(unsigned __int8 *)(a1 + 192);
    uint64_t v64 = *(void *)(a1 + 40);
    uint64_t v80 = *(void *)(a1 + 48);
    int v67 = *(unsigned __int8 *)(a1 + 194);
    int v66 = *(unsigned __int8 *)(a1 + 195);
    int v65 = *(unsigned __int8 *)(a1 + 196);
    uint64_t v69 = *(void *)(a1 + 200);
    uint64_t v81 = *(void *)(a1 + 208);
    uint64_t v68 = *(void *)(a1 + 248);
    uint64_t v87 = *(void *)(a1 + 256);
    LODWORD(v89) = *(_DWORD *)v92;
    *(_DWORD *)((char *)&v89 + 3) = *(_DWORD *)&v92[3];
    int v94 = v90;
    char v95 = v91;
    uint64_t v40 = *(void *)(a1 + 280);
    uint64_t v62 = *(void *)(a1 + 272);
    uint64_t v63 = *(void *)(a1 + 320);
    uint64_t v85 = v10;
    uint64_t v70 = *(void *)(a1 + 328);
    uint64_t v41 = sub_25AC35140();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v10, 1, 1, v41);
    uint64_t v42 = swift_allocObject();
    swift_weakInit();
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 32) = v42;
    *(void *)(v43 + 72) = v36;
    *(void *)(v43 + 88) = v37;
    *(void *)(v43 + 104) = v38;
    *(void *)(v43 + 120) = v61;
    *(void *)(v43 + 136) = v60;
    *(void *)(v43 + 152) = v59;
    *(void *)(v43 + 168) = v58;
    *(void *)(v43 + 184) = v57;
    *(void *)(v43 + 200) = v56;
    *(unsigned char *)(v43 + 216) = v55;
    *(_DWORD *)(v43 + 220) = *(_DWORD *)((char *)&v89 + 3);
    *(_DWORD *)(v43 + 217) = v89;
    *(void *)(v43 + 224) = v64;
    *(unsigned char *)(v43 + 248) = v67;
    *(unsigned char *)(v43 + 249) = v66;
    *(unsigned char *)(v43 + 250) = v65;
    *(_DWORD *)(v43 + 251) = v94;
    *(unsigned char *)(v43 + 255) = v95;
    *(void *)(v43 + 256) = v69;
    *(void *)(v43 + 272) = v68;
    *(void *)(v43 + 288) = v82;
    *(void *)(v43 + 304) = v83;
    *(void *)(v43 + 320) = v62;
    *(void *)(v43 + 336) = v63;
    *(void *)(v43 + 64) = v30;
    *(void *)(v43 + 80) = v75;
    *(void *)(v43 + 96) = v74;
    *(void *)(v43 + 112) = v73;
    *(void *)(v43 + 128) = v72;
    *(void *)(v43 + 144) = v71;
    *(void *)(v43 + 160) = v39;
    *(void *)(v43 + 176) = v79;
    *(void *)(v43 + 192) = v76;
    *(void *)(v43 + 16) = 0;
    *(void *)(v43 + 24) = 0;
    uint64_t v44 = v77;
    *(void *)(v43 + 40) = v77;
    *(void *)(v43 + 48) = v30;
    *(void *)(v43 + 56) = v44;
    *(void *)(v43 + 208) = v78;
    *(void *)(v43 + 232) = v80;
    *(double *)(v43 + 240) = v35 + 55.0;
    *(void *)(v43 + 264) = v81;
    *(void *)(v43 + 280) = v87;
    *(void *)(v43 + 296) = v88;
    *(void *)(v43 + 312) = v84;
    *(void *)(v43 + 328) = v40;
    *(void *)(v43 + 344) = v70;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25AC15CBC((uint64_t)v85, (uint64_t)&unk_26A4A0098, v43);
    swift_release();
    sub_25AB3230C(v77, v30);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_25AB333EC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_25AC35870();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_25AC35870() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25AB334B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[8] = a6;
  v7[9] = a7;
  v7[6] = a4;
  v7[7] = a5;
  v7[5] = a1;
  return MEMORY[0x270FA2498](sub_25AB334DC);
}

uint64_t sub_25AB334DC()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 80) = Strong;
  if (Strong)
  {
    *(void *)(v0 + 88) = *(void *)(Strong + 24);
    swift_retain();
    swift_release();
    return MEMORY[0x270FA2498](sub_25AB335C0);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_25AB335C0()
{
  sub_25AB2EA2C(*(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
  swift_release();
  return MEMORY[0x270FA2498](sub_25AB33680);
}

uint64_t sub_25AB33680()
{
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 80) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_25AB336AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a1;
  v6[6] = a4;
  return MEMORY[0x270FA2498](sub_25AB336D0);
}

uint64_t sub_25AB336D0()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 72) = Strong;
  if (Strong)
  {
    *(void *)(v0 + 80) = *(void *)(Strong + 24);
    swift_retain();
    swift_release();
    return MEMORY[0x270FA2498](sub_25AB337B4);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_25AB337B4()
{
  sub_25AB2ED78(*(void *)(v0 + 56), *(void *)(v0 + 64));
  swift_release();
  return MEMORY[0x270FA2498](sub_25AB33870);
}

uint64_t sub_25AB33870()
{
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 72) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_25AB3389C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TransactionDataManager()
{
  return self;
}

uint64_t destroy for TransactionContainer()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TransactionContainer(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  uint64_t v12 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v12;
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v13 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v13;
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_WORD *)(a1 + 193) = *(_WORD *)(a2 + 193);
  uint64_t v14 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v14;
  uint64_t v15 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v15;
  uint64_t v16 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v16;
  uint64_t v17 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v17;
  uint64_t v18 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v18;
  uint64_t v19 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TransactionContainer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(unsigned char *)(a1 + 193) = *(unsigned char *)(a2 + 193);
  *(unsigned char *)(a1 + 194) = *(unsigned char *)(a2 + 194);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy296_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x128uLL);
}

uint64_t assignWithTake for TransactionContainer(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v13;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v14 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v14;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(unsigned char *)(a1 + 193) = *(unsigned char *)(a2 + 193);
  *(unsigned char *)(a1 + 194) = *(unsigned char *)(a2 + 194);
  uint64_t v15 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TransactionContainer(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 296)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransactionContainer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 296) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 296) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransactionContainer()
{
  return &type metadata for TransactionContainer;
}

uint64_t sub_25AB3400C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746361736E617274 && a2 == 0xED000064496E6F69;
  if (v2 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B726F7774656ELL && a2 == 0xE700000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000025AC3DFA0 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000025AC3DFC0 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000025AC3DFE0 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000025AC3E000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000025AC3E020 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x64496B656BLL && a2 == 0xE500000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x746E756F6D61 && a2 == 0xE600000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xEC00000065646F43 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x69757165526E6970 && a2 == 0xEB00000000646572 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6C757365526D7663 && a2 == 0xEF34366573614274 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6974617269707865 && a2 == 0xEA00000000006E6FLL || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000025AC3E040 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000025AC3E060 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x626C6C6146726F66 && a2 == 0xEB000000006B6361 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x6B6361626C6C6166 && a2 == 0xEE00746E756F6D41 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000025AC3E080 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000025AC3E0A0 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x800000025AC3E0C0 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025AC3E0E0 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x7954707041796170 && a2 == 0xEA00000000006570)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else
  {
    char v6 = sub_25AC35870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 21;
    }
    else {
      return 22;
    }
  }
}

void *sub_25AB34900@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0058);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v96 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_25AB359D0();
  sub_25AC359F0();
  if (v2) {
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
  }
  uint64_t v86 = a2;
  LOBYTE(v98[0]) = 0;
  uint64_t v11 = sub_25AC35760();
  LOBYTE(v98[0]) = 1;
  uint64_t v13 = v12;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_25AC35760();
  uint64_t v95 = v13;
  uint64_t v15 = v14;
  LOBYTE(v98[0]) = 2;
  uint64_t v17 = v16;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_25AC35760();
  uint64_t v94 = v17;
  uint64_t v85 = v18;
  LOBYTE(v98[0]) = 3;
  uint64_t v20 = v19;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_25AC35760();
  uint64_t v93 = v20;
  uint64_t v84 = v21;
  LOBYTE(v98[0]) = 4;
  uint64_t v23 = v22;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_25AC35760();
  uint64_t v92 = v23;
  uint64_t v83 = v24;
  LOBYTE(v98[0]) = 5;
  uint64_t v26 = v25;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_25AC35760();
  uint64_t v91 = v26;
  uint64_t v82 = v27;
  LOBYTE(v98[0]) = 6;
  uint64_t v29 = v28;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_25AC35760();
  uint64_t v90 = v29;
  uint64_t v81 = v30;
  LOBYTE(v98[0]) = 7;
  uint64_t v32 = v31;
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_25AC35760();
  uint64_t v89 = v32;
  uint64_t v80 = v33;
  LOBYTE(v98[0]) = 8;
  uint64_t v35 = v34;
  swift_bridgeObjectRetain();
  uint64_t v79 = sub_25AC35760();
  uint64_t v88 = v35;
  uint64_t v77 = v15;
  LOBYTE(v98[0]) = 9;
  uint64_t v87 = v36;
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_25AC35760();
  uint64_t v78 = v38;
  uint64_t v39 = v37;
  LOBYTE(v98[0]) = 10;
  swift_bridgeObjectRetain();
  int v76 = sub_25AC35770();
  LOBYTE(v98[0]) = 11;
  uint64_t v74 = sub_25AC35760();
  uint64_t v75 = v40;
  LOBYTE(v98[0]) = 12;
  swift_bridgeObjectRetain();
  sub_25AC35780();
  uint64_t v42 = v41;
  LOBYTE(v98[0]) = 13;
  int v73 = sub_25AC35770();
  LOBYTE(v98[0]) = 14;
  int v72 = sub_25AC35770();
  LOBYTE(v98[0]) = 15;
  int v71 = sub_25AC35770();
  LOBYTE(v98[0]) = 16;
  uint64_t v69 = sub_25AC35760();
  uint64_t v70 = v43;
  LOBYTE(v98[0]) = 17;
  swift_bridgeObjectRetain();
  uint64_t v66 = sub_25AC35760();
  uint64_t v68 = v44;
  LOBYTE(v98[0]) = 18;
  swift_bridgeObjectRetain();
  uint64_t v63 = sub_25AC35730();
  uint64_t v65 = v45;
  uint64_t v67 = 0;
  LOBYTE(v98[0]) = 19;
  swift_bridgeObjectRetain();
  uint64_t v46 = v67;
  uint64_t v62 = sub_25AC35730();
  uint64_t v64 = v47;
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = (void *)swift_bridgeObjectRelease();
    if (!v67) {
      return (void *)swift_bridgeObjectRelease();
    }
  }
  else
  {
    LOBYTE(v98[0]) = 20;
    swift_bridgeObjectRetain();
    uint64_t v61 = sub_25AC35760();
    uint64_t v49 = v48;
    char v121 = 21;
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_25AC35760();
    uint64_t v60 = v50;
    LODWORD(v67) = v76 & 1;
    char v51 = v73 & 1;
    int v58 = v73 & 1;
    int v76 = v72 & 1;
    int v73 = v71 & 1;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v97[0] = v11;
    v97[1] = v95;
    v97[2] = v77;
    v97[3] = v94;
    v97[4] = v85;
    v97[5] = v93;
    v97[6] = v84;
    v97[7] = v92;
    v97[8] = v83;
    v97[9] = v91;
    v97[10] = v82;
    v97[11] = v90;
    v97[12] = v81;
    v97[13] = v89;
    v97[14] = v80;
    v97[15] = v88;
    v97[16] = v79;
    v97[17] = v87;
    uint64_t v57 = v39;
    v97[18] = v39;
    v97[19] = v78;
    LOBYTE(v97[20]) = v67;
    v97[21] = v74;
    v97[22] = v75;
    v97[23] = v42;
    LOBYTE(v97[24]) = v51;
    BYTE1(v97[24]) = v76;
    BYTE2(v97[24]) = v73;
    v97[25] = v69;
    v97[26] = v70;
    v97[27] = v66;
    v97[28] = v68;
    v97[29] = v63;
    v97[30] = v65;
    v97[31] = v62;
    v97[32] = v64;
    v97[33] = v61;
    v97[34] = v49;
    v97[35] = v59;
    v97[36] = v60;
    sub_25AB35A24((uint64_t)v97);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v52 = v93;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v53 = v88;
    swift_bridgeObjectRelease();
    uint64_t v54 = v87;
    swift_bridgeObjectRelease();
    uint64_t v55 = v78;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v56 = v64;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
    v98[0] = v11;
    v98[1] = v95;
    v98[2] = v77;
    v98[3] = v94;
    v98[4] = v85;
    v98[5] = v52;
    v98[6] = v84;
    v98[7] = v92;
    v98[8] = v83;
    v98[9] = v91;
    v98[10] = v82;
    v98[11] = v90;
    v98[12] = v81;
    v98[13] = v89;
    v98[14] = v80;
    v98[15] = v53;
    v98[16] = v79;
    v98[17] = v54;
    v98[18] = v57;
    v98[19] = v55;
    char v99 = v67;
    *(_DWORD *)&v100[3] = *(_DWORD *)((char *)v124 + 3);
    *(_DWORD *)uint64_t v100 = v124[0];
    uint64_t v101 = v74;
    uint64_t v102 = v75;
    uint64_t v103 = v42;
    char v104 = v58;
    char v105 = v76;
    char v106 = v73;
    char v108 = v123;
    int v107 = v122;
    uint64_t v109 = v69;
    uint64_t v110 = v70;
    uint64_t v111 = v66;
    uint64_t v112 = v68;
    uint64_t v113 = v63;
    uint64_t v114 = v65;
    uint64_t v115 = v62;
    uint64_t v116 = v56;
    uint64_t v117 = v61;
    uint64_t v118 = v49;
    uint64_t v119 = v59;
    uint64_t v120 = v60;
    sub_25AB35B48((uint64_t)v98);
    return memcpy(v86, v97, 0x128uLL);
  }
  return result;
}

unint64_t sub_25AB359D0()
{
  unint64_t result = qword_26A4A0060;
  if (!qword_26A4A0060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0060);
  }
  return result;
}

uint64_t sub_25AB35A24(uint64_t a1)
{
  return a1;
}

uint64_t sub_25AB35B48(uint64_t a1)
{
  return a1;
}

uint64_t sub_25AB35C6C()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25AB35CA4()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25AB35CE4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25AB24B20;
  v5[5] = a1;
  v5[6] = v4;
  return MEMORY[0x270FA2498](sub_25AB32190);
}

uint64_t sub_25AB35D94()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 352, 7);
}

uint64_t sub_25AB35E64(uint64_t a1)
{
  long long v7 = *(_OWORD *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_25AB25F50;
  *(void *)(v5 + 64) = v4;
  *(void *)(v5 + 72) = v1 + 56;
  *(_OWORD *)(v5 + 48) = v7;
  *(void *)(v5 + 40) = a1;
  return MEMORY[0x270FA2498](sub_25AB334DC);
}

uint64_t sub_25AB35F34()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_25AB35F7C(uint64_t a1)
{
  long long v7 = *(_OWORD *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_25AB24B20;
  *(void *)(v5 + 64) = v4;
  *(_OWORD *)(v5 + 48) = v7;
  *(void *)(v5 + 40) = a1;
  return MEMORY[0x270FA2498](sub_25AB336D0);
}

uint64_t sub_25AB36048(uint64_t a1)
{
  uint64_t v3 = *(void **)(a1 + 216);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return a1;
}

double sub_25AB36168(uint64_t a1)
{
  *(void *)(a1 + 288) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_25AB36198(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A00B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_25AB36200(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD30);
  MEMORY[0x270FA5388](v5 - 8);
  long long v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25AC32300();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v28 = (char *)v25 - v13;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14) {
    return MEMORY[0x263F8EE78];
  }
  v25[1] = v2;
  uint64_t v34 = *(void *)(a2 + 128);
  uint64_t v15 = *(void *)(a2 + 136);
  uint64_t v30 = (void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
  uint64_t v31 = v15;
  uint64_t v29 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v27 = v12;
  uint64_t v16 = (void (**)(char *, char *, uint64_t))(v12 + 32);
  swift_bridgeObjectRetain();
  v25[0] = a1;
  uint64_t v17 = a1 + 40;
  unint64_t v18 = MEMORY[0x263F8EE78];
  uint64_t v26 = v11;
  do
  {
    uint64_t v32 = v34;
    uint64_t v33 = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25AC34F60();
    sub_25AC32260();
    swift_bridgeObjectRelease();
    (*v30)(v7, 0, 1, v8);
    swift_bridgeObjectRelease();
    if ((*v29)(v7, 1, v8) == 1)
    {
      sub_25AB18FAC((uint64_t)v7, &qword_26A49FD30);
    }
    else
    {
      uint64_t v19 = *v16;
      uint64_t v20 = v28;
      (*v16)(v28, v7, v8);
      v19(v11, v20, v8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v18 = sub_25AB90AC0(0, *(void *)(v18 + 16) + 1, 1, v18);
      }
      unint64_t v22 = *(void *)(v18 + 16);
      unint64_t v21 = *(void *)(v18 + 24);
      if (v22 >= v21 >> 1) {
        unint64_t v18 = sub_25AB90AC0(v21 > 1, v22 + 1, 1, v18);
      }
      *(void *)(v18 + 16) = v22 + 1;
      unint64_t v23 = v18
          + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))
          + *(void *)(v27 + 72) * v22;
      uint64_t v11 = v26;
      v19((char *)v23, v26, v8);
    }
    v17 += 16;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v18;
}

char *sub_25AB3652C(uint64_t a1, void (*a2)(char *))
{
  uint64_t v30 = a2;
  uint64_t v4 = sub_25AC32300();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  long long v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD30);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    v24[3] = v2;
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    uint64_t v15 = *(void *)(v12 + 56);
    uint64_t v16 = a1;
    uint64_t v17 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 40);
    uint64_t v28 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v29 = v13;
    uint64_t v26 = (void (**)(char *, char *, uint64_t))(v12 + 16);
    uint64_t v27 = v15;
    uint64_t v25 = (void (**)(char *, uint64_t))(v12 - 8);
    v24[2] = v16;
    swift_bridgeObjectRetain();
    uint64_t v31 = (char *)MEMORY[0x263F8EE78];
    v24[1] = (v12 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v24[4] = v12;
    while (1)
    {
      v29(v10, v14, v4);
      unint64_t v18 = *v17;
      (*v17)(v10, 0, 1, v4);
      if ((*v28)(v10, 1, v4) == 1) {
        break;
      }
      (*v26)(v7, v10, v4);
      v30(v7);
      char v32 = 0;
      (*v25)(v7, v4);
      if ((v32 & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v31 = sub_25AB909C4(0, *((void *)v31 + 2) + 1, 1, v31);
        }
        unint64_t v20 = *((void *)v31 + 2);
        unint64_t v19 = *((void *)v31 + 3);
        unint64_t v21 = v20 + 1;
        if (v20 >= v19 >> 1) {
          uint64_t v31 = sub_25AB909C4((char *)(v19 > 1), v20 + 1, 1, v31);
        }
        *((void *)v31 + 2) = v21;
      }
      v14 += v27;
      if (!--v11)
      {
        v18(v10, 1, 1, v4);
        break;
      }
    }
  }
  else
  {
    unint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain();
    uint64_t v31 = (char *)MEMORY[0x263F8EE78];
    v22(v10, 1, 1, v4);
  }
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_25AB36838(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_25AB90D74(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (void *)&v16[16 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_25AC356E0();
  __break(1u);
  return result;
}

unint64_t sub_25AB369A4()
{
  unint64_t result = qword_26A4A00B8;
  if (!qword_26A4A00B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A4A00B8);
  }
  return result;
}

uint64_t sub_25AB369E4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25AB36A24()
{
  return sub_25AB31A90(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_25AB36A48(uint64_t a1)
{
  return sub_25AB30AA0(*(double *)(v1 + 24), a1, *(void *)(v1 + 16), *(void *)(v1 + 32));
}

uint64_t sub_25AB36A58(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25AB36B90(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  long long v5 = *(_OWORD *)(a1 + 256);
  long long v6 = *(_OWORD *)(a1 + 272);
  long long v4 = *(_OWORD *)(a1 + 224);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((void *)&v4 + 1),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    *(void *)(a1 + 288));
  return a1;
}

uint64_t sub_25AB36C1C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TransactionContainer.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEB) {
    goto LABEL_17;
  }
  if (a2 + 21 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 21) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 21;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x16;
  int v8 = v6 - 22;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TransactionContainer.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 21 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 21) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEA)
  {
    unsigned int v6 = ((a2 - 235) >> 8) + 1;
    *uint64_t result = a2 + 21;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB36EB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 21;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransactionContainer.CodingKeys()
{
  return &type metadata for TransactionContainer.CodingKeys;
}

unint64_t sub_25AB36EEC()
{
  unint64_t result = qword_26A4A00D0;
  if (!qword_26A4A00D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A00D0);
  }
  return result;
}

unint64_t sub_25AB36F44()
{
  unint64_t result = qword_26A4A00D8;
  if (!qword_26A4A00D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A00D8);
  }
  return result;
}

unint64_t sub_25AB36F9C()
{
  unint64_t result = qword_26A4A00E0;
  if (!qword_26A4A00E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A00E0);
  }
  return result;
}

uint64_t destroy for PaymentEntitlementVerifier()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PaymentEntitlementVerifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_WORD *)(a1 + 84) = *(_WORD *)(a2 + 84);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PaymentEntitlementVerifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(unsigned char *)(a1 + 82) = *(unsigned char *)(a2 + 82);
  *(unsigned char *)(a1 + 83) = *(unsigned char *)(a2 + 83);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  *(unsigned char *)(a1 + 85) = *(unsigned char *)(a2 + 85);
  return a1;
}

__n128 __swift_memcpy86_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 78) = *(void *)(a2 + 78);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for PaymentEntitlementVerifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(unsigned char *)(a1 + 82) = *(unsigned char *)(a2 + 82);
  *(unsigned char *)(a1 + 83) = *(unsigned char *)(a2 + 83);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  *(unsigned char *)(a1 + 85) = *(unsigned char *)(a2 + 85);
  return a1;
}

uint64_t getEnumTagSinglePayload for PaymentEntitlementVerifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 86)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PaymentEntitlementVerifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 84) = 0;
    *(_DWORD *)(result + 80) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 86) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 86) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaymentEntitlementVerifier()
{
  return &type metadata for PaymentEntitlementVerifier;
}

uint64_t sub_25AB37354@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (void *)sub_25AC34E10();
  id v5 = objc_msgSend(a1, sel_valueForEntitlement_, v4);

  if (v5)
  {
    sub_25AC35500();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  sub_25AB3783C((uint64_t)&v24, (uint64_t)v26);
  if (v27)
  {
    if (swift_dynamicCast())
    {
      char v22 = v23;
      goto LABEL_9;
    }
  }
  else
  {
    sub_25AB378A4((uint64_t)v26);
  }
  char v22 = 0;
LABEL_9:
  uint64_t v6 = (void *)sub_25AC34E10();
  id v7 = objc_msgSend(a1, sel_valueForEntitlement_, v6);

  if (v7)
  {
    sub_25AC35500();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  sub_25AB3783C((uint64_t)&v24, (uint64_t)v26);
  if (v27)
  {
    if (swift_dynamicCast())
    {
      char v21 = v23;
      goto LABEL_17;
    }
  }
  else
  {
    sub_25AB378A4((uint64_t)v26);
  }
  char v21 = 0;
LABEL_17:
  uint64_t v8 = (void *)sub_25AC34E10();
  id v9 = objc_msgSend(a1, sel_valueForEntitlement_, v8);

  if (v9)
  {
    sub_25AC35500();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  sub_25AB3783C((uint64_t)&v24, (uint64_t)v26);
  if (v27)
  {
    if (swift_dynamicCast())
    {
      char v20 = v23;
      goto LABEL_25;
    }
  }
  else
  {
    sub_25AB378A4((uint64_t)v26);
  }
  char v20 = 0;
LABEL_25:
  uint64_t v10 = (void *)sub_25AC34E10();
  id v11 = objc_msgSend(a1, sel_valueForEntitlement_, v10);

  if (v11)
  {
    sub_25AC35500();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  sub_25AB3783C((uint64_t)&v24, (uint64_t)v26);
  if (v27)
  {
    if (swift_dynamicCast())
    {
      char v12 = v23;
      goto LABEL_33;
    }
  }
  else
  {
    sub_25AB378A4((uint64_t)v26);
  }
  char v12 = 0;
LABEL_33:
  uint64_t v13 = (void *)sub_25AC34E10();
  id v14 = objc_msgSend(a1, sel_valueForEntitlement_, v13);

  if (v14)
  {
    sub_25AC35500();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  sub_25AB3783C((uint64_t)&v24, (uint64_t)v26);
  if (v27)
  {
    if (swift_dynamicCast())
    {
      char v15 = v23;
      goto LABEL_41;
    }
  }
  else
  {
    sub_25AB378A4((uint64_t)v26);
  }
  char v15 = 0;
LABEL_41:
  uint64_t v16 = (void *)sub_25AC34E10();
  id v17 = objc_msgSend(a1, (SEL)&selRef_initWithContext_, v16);

  if (v17)
  {
    sub_25AC35500();
    swift_unknownObjectRelease();
  }
  else
  {

    long long v24 = 0u;
    long long v25 = 0u;
  }
  sub_25AB3783C((uint64_t)&v24, (uint64_t)v26);
  if (!v27)
  {
    uint64_t result = sub_25AB378A4((uint64_t)v26);
    goto LABEL_48;
  }
  uint64_t result = swift_dynamicCast();
  if (!result)
  {
LABEL_48:
    char v19 = 0;
    goto LABEL_49;
  }
  char v19 = v23;
LABEL_49:
  *(void *)a2 = 0xD000000000000043;
  *(void *)(a2 + 8) = 0x800000025AC3E100;
  *(void *)(a2 + 16) = 0xD00000000000002ALL;
  *(void *)(a2 + 24) = 0x800000025AC3E150;
  *(void *)(a2 + 32) = 0xD000000000000030;
  *(void *)(a2 + 40) = 0x800000025AC3E180;
  *(void *)(a2 + 48) = 0xD000000000000030;
  *(void *)(a2 + 56) = 0x800000025AC3E1C0;
  *(void *)(a2 + 64) = 0xD000000000000030;
  *(void *)(a2 + 72) = 0x800000025AC3E200;
  *(unsigned char *)(a2 + 80) = v22;
  *(unsigned char *)(a2 + 81) = v21;
  *(unsigned char *)(a2 + 82) = v20;
  *(unsigned char *)(a2 + 83) = v12;
  *(unsigned char *)(a2 + 84) = v15;
  *(unsigned char *)(a2 + 85) = v19;
  return result;
}

uint64_t sub_25AB3783C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25AB378A4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_25AB37904(unsigned __int8 a1)
{
  if (a1 >= 6u)
  {
    unint64_t v2 = 0xD00000000000001DLL;
    if (a1 == 7) {
      unint64_t v2 = 0xD000000000000022;
    }
    if (a1 == 6) {
      return 0xD000000000000022;
    }
    else {
      return v2;
    }
  }
  else
  {
    sub_25AC35580();
    sub_25AC34F60();
    sub_25AC35660();
    sub_25AC34F60();
    return 0;
  }
}

uint64_t sub_25AB37A20(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 7759204;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 7759204;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v5 = 24945;
      break;
    case 2:
      uint64_t v5 = 0x74656B72616D6171;
      unint64_t v3 = 0xEB00000000676E69;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x7466617264;
      break;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1685025392;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE200000000000000;
      if (v5 == 24945) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xEB00000000676E69;
      if (v5 != 0x74656B72616D6171) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x7466617264;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1685025392) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_25AC35870();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_25AB37BBC(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x4D5643206F4ELL;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x4D5643206F4ELL;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x727574616E676953;
      unint64_t v3 = 0xE900000000000065;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x4D5643444FLL;
      break;
    case 3:
      uint64_t v5 = 0x5020656E696C6E4FLL;
      unint64_t v3 = 0xEA00000000004E49;
      break;
    case 4:
      uint64_t v5 = 0x6C70704120746F4ELL;
      unint64_t v3 = 0xEE00656C62616369;
      break;
    case 5:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x7974706D45;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE900000000000065;
      if (v5 == 0x727574616E676953) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x4D5643444FLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xEA00000000004E49;
      if (v5 != 0x5020656E696C6E4FLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v2 = 0x6C70704120746F4ELL;
      unint64_t v6 = 0xEE00656C62616369;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x7974706D45) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_25AC35870();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_25AB37DD8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x7974706D65;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x7974706D65;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x6465766F72707061;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x64656E696C636564;
      break;
    case 3:
      unint64_t v5 = 0x6552656E696C6E6FLL;
      unint64_t v3 = 0xED00007473657571;
      break;
    case 4:
      unint64_t v5 = 0x696C707041646E65;
      unint64_t v3 = 0xEE006E6F69746163;
      break;
    case 5:
      unint64_t v5 = 0x654E7463656C6573;
      unint64_t v3 = 0xEA00000000007478;
      break;
    case 6:
      unint64_t v3 = 0x800000025AC3D1D0;
      unint64_t v5 = 0xD000000000000013;
      break;
    case 7:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x6E69616741797274;
      break;
    case 8:
      unint64_t v3 = 0xE200000000000000;
      unint64_t v5 = 16718;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v7 = 0x766F72707061;
      goto LABEL_13;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v7 = 0x6E696C636564;
LABEL_13:
      if (v5 != (v7 & 0xFFFFFFFFFFFFLL | 0x6465000000000000)) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 3:
      unint64_t v6 = 0xED00007473657571;
      if (v5 != 0x6552656E696C6E6FLL) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 4:
      unint64_t v6 = 0xEE006E6F69746163;
      if (v5 != 0x696C707041646E65) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 5:
      unint64_t v6 = 0xEA00000000007478;
      if (v5 != 0x654E7463656C6573) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 6:
      unint64_t v6 = 0x800000025AC3D1D0;
      if (v5 != 0xD000000000000013) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 7:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v2 = 0x6E69616741797274;
      goto LABEL_24;
    case 8:
      unint64_t v6 = 0xE200000000000000;
      if (v5 != 16718) {
        goto LABEL_28;
      }
      goto LABEL_25;
    default:
LABEL_24:
      if (v5 != v2) {
        goto LABEL_28;
      }
LABEL_25:
      if (v3 == v6) {
        char v8 = 1;
      }
      else {
LABEL_28:
      }
        char v8 = sub_25AC35870();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_25AB380B8(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEC0000006E656B6FLL;
  uint64_t v3 = 0x546E6F6973736573;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x6F546C656E72656BLL;
    }
    else {
      uint64_t v5 = 0x746E61686372656DLL;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEB000000006E656BLL;
    }
    else {
      unint64_t v6 = 0xEC0000006F676F4CLL;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x546E6F6973736573;
  unint64_t v6 = 0xEC0000006E656B6FLL;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x6F546C656E72656BLL;
    }
    else {
      uint64_t v3 = 0x746E61686372656DLL;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xEB000000006E656BLL;
    }
    else {
      unint64_t v2 = 0xEC0000006F676F4CLL;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_25AC35870();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_25AB381FC(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 3236209;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 3236209;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 3301745;
      break;
    case 2:
      uint64_t v5 = 3367281;
      break;
    case 3:
      uint64_t v5 = 3432817;
      break;
    case 4:
      uint64_t v5 = 3498353;
      break;
    case 5:
      uint64_t v5 = 3563889;
      break;
    case 6:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1953654115;
      break;
    case 7:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x676E6967617473;
      break;
    case 8:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1685025392;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 3301745) {
        goto LABEL_25;
      }
      goto LABEL_28;
    case 2:
      if (v5 != 3367281) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 3:
      if (v5 != 3432817) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 4:
      if (v5 != 3498353) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 5:
      if (v5 != 3563889) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 6:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1953654115) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 7:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v2 = 0x676E6967617473;
      goto LABEL_24;
    case 8:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1685025392) {
        goto LABEL_28;
      }
      goto LABEL_25;
    default:
LABEL_24:
      if (v5 != v2) {
        goto LABEL_28;
      }
LABEL_25:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_28:
      }
        char v7 = sub_25AC35870();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_25AB383F8(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEB00000000646574;
  unint64_t v3 = 0x6164696C61766E69;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000018;
    }
    else {
      unint64_t v5 = 0x6E776F6E6B6E75;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x800000025AC3D240;
    }
    else {
      unint64_t v6 = 0xE700000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0x6164696C61766E69;
  unint64_t v6 = 0xEB00000000646574;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v3 = 0xD000000000000018;
    }
    else {
      unint64_t v3 = 0x6E776F6E6B6E75;
    }
    if (v7 == 1) {
      unint64_t v2 = 0x800000025AC3D240;
    }
    else {
      unint64_t v2 = 0xE700000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_25AC35870();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_25AB3851C()
{
  sub_25AC34F20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB38680()
{
  sub_25AC34F20();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for EnvironmentManager()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for SPSEnvironment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB3885CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SPSEnvironment()
{
  return &type metadata for SPSEnvironment;
}

unint64_t sub_25AB38898()
{
  unint64_t result = qword_26A4A00F0;
  if (!qword_26A4A00F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A4A00F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A00F0);
  }
  return result;
}

uint64_t sub_25AB388F4(char a1)
{
  uint64_t result = 3236209;
  switch(a1)
  {
    case 1:
      uint64_t result = 3301745;
      break;
    case 2:
      uint64_t result = 3367281;
      break;
    case 3:
      uint64_t result = 3432817;
      break;
    case 4:
      uint64_t result = 3498353;
      break;
    case 5:
      uint64_t result = 3563889;
      break;
    case 6:
      uint64_t result = 1953654115;
      break;
    case 7:
      uint64_t result = 0x676E6967617473;
      break;
    case 8:
      uint64_t result = 1685025392;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25AB389AC(unsigned __int8 *a1, char *a2)
{
  return sub_25AB381FC(*a1, *a2);
}

uint64_t sub_25AB389B8()
{
  return sub_25AC359D0();
}

uint64_t sub_25AB38A00()
{
  return sub_25AB38680();
}

uint64_t sub_25AB38A08()
{
  return sub_25AC359D0();
}

uint64_t sub_25AB38A4C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25AB38B10();
  *a1 = result;
  return result;
}

uint64_t sub_25AB38A7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25AB388F4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_25AB38AA8(void *a1@<X8>)
{
  *a1 = &unk_270881C70;
}

unint64_t sub_25AB38ABC()
{
  unint64_t result = qword_26A4A0100;
  if (!qword_26A4A0100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0100);
  }
  return result;
}

uint64_t sub_25AB38B10()
{
  unint64_t v0 = sub_25AC35720();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

uint64_t sub_25AB38B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (__CFString *)sub_25AC34E10();
  sub_25AC340D0();
  uint64_t v5 = (__CFString *)sub_25AC34E10();
  swift_bridgeObjectRelease();
  CFPropertyListRef v6 = CFPreferencesCopyAppValue(v4, v5);

  if (v6 && swift_dynamicCast()) {
    return v8;
  }
  swift_bridgeObjectRetain();
  return a3;
}

uint64_t sub_25AB38C18(char a1)
{
  unint64_t v2 = (uint64_t (*)(void))sub_25AC34000();
  char v3 = v2();
  swift_release();
  if (v3 & 1) == 0 && (a1)
  {
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFB210]), sel_init);
    id v10 = objc_msgSend(v9, sel_aa_primaryAppleAccount);
    if (v10)
    {
      id v11 = v10;
      unsigned __int8 v12 = objc_msgSend(v10, sel_aa_isSandboxAccount);

      if (v12) {
        return 6;
      }
    }
    else
    {
    }
    return 8;
  }
  else
  {
    uint64_t v4 = sub_25AC34140();
    uint64_t v6 = v5;
    uint64_t v7 = sub_25AC34080();
    sub_25AB38B5C(v4, v6, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25AB25ABC();
    sub_25AC354D0();
    swift_bridgeObjectRelease();
    sub_25AC34EC0();
    swift_bridgeObjectRelease();
    return sub_25AB38B10();
  }
}

uint64_t sub_25AB38D9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = v2;
  if (v2 == 1)
  {
    type metadata accessor for SessionToken();
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_25AB17974();
    uint64_t v4 = *(void *)(v1 + 152);
    *(void *)(v1 + 152) = v3;
    swift_retain();
    sub_25AB39D94(v4);
  }
  sub_25AB3A118(v2);
  return v3;
}

uint64_t sub_25AB38E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10, uint64_t a11, char a12)
{
  *(void *)(v12 + 80) = sub_25AC34030();
  *(void *)(v12 + 88) = 0;
  *(unsigned char *)(v12 + 96) = 1;
  *(void *)(v12 + 152) = 1;
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  *(void *)(v12 + 32) = a3;
  *(void *)(v12 + 40) = a4;
  *(void *)(v12 + 48) = a5;
  *(void *)(v12 + 56) = a6;
  *(void *)(v12 + 64) = a7;
  *(void *)(v12 + 72) = a8;
  *(void *)(v12 + 104) = sub_25AB39DA4();
  *(void *)(v12 + 112) = v22;
  *(void *)(v12 + 120) = a10;
  *(void *)(v12 + 128) = a11;
  *(unsigned char *)(v12 + 136) = a12;
  *(double *)(v12 + 144) = a9;
  return v12;
}

unint64_t sub_25AB38EFC(char a1)
{
  unint64_t result = 0x5472656E74726170;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x546E6F6973736573;
      break;
    case 2:
      unint64_t result = 0x6F546C656E72656BLL;
      break;
    case 3:
      unint64_t result = 0x6D6E6F7269766E65;
      break;
    case 4:
      unint64_t result = 0x437972746E756F63;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0x6F6973726556736FLL;
      break;
    case 7:
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 8:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25AB39060(char a1)
{
  unint64_t result = 0x5472656E74726170;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x546E6F6973736573;
      break;
    case 2:
      unint64_t result = 0x6F546C656E72656BLL;
      break;
    case 3:
      unint64_t result = 0x6D6E6F7269766E65;
      break;
    case 4:
      unint64_t result = 0x437972746E756F63;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0x6F6973726556736FLL;
      break;
    case 7:
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 8:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25AB391C4(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_25AB38EFC(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_25AB38EFC(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_25AC35870();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_25AB39250()
{
  char v1 = *v0;
  sub_25AC35970();
  sub_25AB38EFC(v1);
  sub_25AC34F20();
  swift_bridgeObjectRelease();
  return sub_25AC359D0();
}

uint64_t sub_25AB392B4()
{
  sub_25AB38EFC(*v0);
  sub_25AC34F20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB39308()
{
  char v1 = *v0;
  sub_25AC35970();
  sub_25AB38EFC(v1);
  sub_25AC34F20();
  swift_bridgeObjectRelease();
  return sub_25AC359D0();
}

uint64_t sub_25AB39368@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25AB3A334();
  *a1 = result;
  return result;
}

unint64_t sub_25AB39398@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_25AB38EFC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_25AB393C4()
{
  return sub_25AB39060(*v0);
}

uint64_t sub_25AB393CC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25AB3A334();
  *a1 = result;
  return result;
}

uint64_t sub_25AB393F4(uint64_t a1)
{
  unint64_t v2 = sub_25AB39D40();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB39430(uint64_t a1)
{
  unint64_t v2 = sub_25AB39D40();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB3946C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25AB39D94(*(void *)(v0 + 152));
  return v0;
}

uint64_t sub_25AB394BC()
{
  sub_25AB3946C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SessionStore()
{
  return self;
}

uint64_t sub_25AB39514(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0118);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB39D40();
  sub_25AC35A00();
  v8[15] = 0;
  sub_25AC357F0();
  if (!v1)
  {
    v8[14] = 1;
    sub_25AC357F0();
    v8[13] = 2;
    sub_25AC357F0();
    v8[12] = 3;
    sub_25AC357F0();
    v8[11] = 4;
    sub_25AC35820();
    v8[10] = 5;
    sub_25AC357E0();
    v8[9] = 6;
    swift_bridgeObjectRetain();
    sub_25AC357F0();
    swift_bridgeObjectRelease();
    v8[8] = 7;
    swift_bridgeObjectRetain();
    sub_25AC357F0();
    swift_bridgeObjectRelease();
    v8[7] = 8;
    sub_25AC35800();
    v8[6] = 9;
    sub_25AC35810();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_25AB39810()
{
  return MEMORY[0x263F8D1F8];
}

uint64_t sub_25AB3981C(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0108);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)(v1 + 80) = sub_25AC34030();
  *(void *)(v1 + 88) = 0;
  *(unsigned char *)(v1 + 96) = 1;
  *(void *)(v1 + 152) = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB39D40();
  sub_25AC359F0();
  if (v2)
  {
    sub_25AB39D94(*(void *)(v1 + 152));
    type metadata accessor for SessionStore();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v18[15] = 0;
    *(void *)(v1 + 16) = sub_25AC35760();
    *(void *)(v1 + 24) = v8;
    v18[14] = 1;
    *(void *)(v1 + 32) = sub_25AC35760();
    *(void *)(v1 + 40) = v9;
    v18[13] = 2;
    *(void *)(v1 + 48) = sub_25AC35760();
    *(void *)(v1 + 56) = v10;
    v18[12] = 3;
    *(void *)(v1 + 64) = sub_25AC35760();
    *(void *)(v1 + 72) = v11;
    v18[11] = 4;
    *(void *)(v1 + 80) = sub_25AC35790();
    v18[10] = 5;
    *(void *)(v1 + 88) = sub_25AC35750();
    *(unsigned char *)(v1 + 96) = v12 & 1;
    v18[9] = 6;
    *(void *)(v1 + 104) = sub_25AC35760();
    *(void *)(v1 + 112) = v14;
    v18[8] = 7;
    *(void *)(v1 + 120) = sub_25AC35760();
    *(void *)(v1 + 128) = v15;
    v18[7] = 8;
    *(unsigned char *)(v1 + 136) = sub_25AC35770() & 1;
    v18[6] = 9;
    sub_25AC35780();
    uint64_t v17 = v16;
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    *(void *)(v1 + 144) = v17;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_25AB39C84@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for SessionStore();
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_25AB3981C(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_25AB39CDC(void *a1)
{
  return sub_25AB39514(a1);
}

uint64_t sub_25AB39D00@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SessionStore();
  uint64_t result = sub_25AC355A0();
  *a1 = result;
  return result;
}

unint64_t sub_25AB39D40()
{
  unint64_t result = qword_26A4A0110;
  if (!qword_26A4A0110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0110);
  }
  return result;
}

uint64_t sub_25AB39D94(uint64_t result)
{
  if (result != 1) {
    return swift_release();
  }
  return result;
}

uint64_t sub_25AB39DA4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (uint64_t (*)(void))sub_25AC34000();
  char v4 = v3();
  swift_release();
  if ((v4 & 1) != 0
    && (id v5 = objc_msgSend(self, sel_standardUserDefaults),
        uint64_t v6 = (void *)sub_25AC34E10(),
        id v7 = objc_msgSend(v5, sel_stringForKey_, v6),
        v5,
        v6,
        v7))
  {
    uint64_t v8 = sub_25AC34E40();
    unint64_t v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    unint64_t v10 = 0xE000000000000000;
  }
  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
  }
  if (!v11)
  {
    swift_bridgeObjectRelease();
    sub_25AC345B0();
    uint64_t v8 = sub_25AC345A0();
    unint64_t v13 = v12;
    if (qword_26A49F7D8 != -1) {
      swift_once();
    }
    uint64_t v14 = __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1C70);
    sub_25AB150E0(v14, (uint64_t)v2);
    uint64_t v15 = sub_25AC345E0();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v2, 1, v15) == 1)
    {
      sub_25AB15148((uint64_t)v2);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      uint64_t v17 = sub_25AC345C0();
      os_log_type_t v18 = sub_25AC352D0();
      if (os_log_type_enabled(v17, v18))
      {
        char v19 = (uint8_t *)swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        uint64_t v23 = v20;
        *(_DWORD *)char v19 = 136315138;
        v22[1] = v19 + 4;
        swift_bridgeObjectRetain();
        void v22[2] = sub_25AB56574(v8, v13, &v23);
        sub_25AC354A0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_25AB11000, v17, v18, "os version: %s", v19, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x261151C20](v20, -1, -1);
        MEMORY[0x261151C20](v19, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(char *, uint64_t))(v16 + 8))(v2, v15);
    }
  }
  return v8;
}

uint64_t sub_25AB3A118(uint64_t result)
{
  if (result != 1) {
    return swift_retain();
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SessionStore.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB3A1F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionStore.CodingKeys()
{
  return &type metadata for SessionStore.CodingKeys;
}

unint64_t sub_25AB3A230()
{
  unint64_t result = qword_26A4A0120;
  if (!qword_26A4A0120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0120);
  }
  return result;
}

unint64_t sub_25AB3A288()
{
  unint64_t result = qword_26A4A0128;
  if (!qword_26A4A0128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0128);
  }
  return result;
}

unint64_t sub_25AB3A2E0()
{
  unint64_t result = qword_26A4A0130;
  if (!qword_26A4A0130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0130);
  }
  return result;
}

uint64_t sub_25AB3A334()
{
  unint64_t v0 = sub_25AC35720();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA) {
    return 10;
  }
  else {
    return v0;
  }
}

BOOL sub_25AB3A380(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_25AB3A398()
{
  if (*v0) {
    return 0x6E6F73616572;
  }
  else {
    return 1701080931;
  }
}

uint64_t sub_25AB3A3C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB3B9FC(a1, a2);
  *a3 = result;
  return result;
}

void sub_25AB3A3F0(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_25AB3A3FC(uint64_t a1)
{
  unint64_t v2 = sub_25AB3C918();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB3A438(uint64_t a1)
{
  unint64_t v2 = sub_25AB3C918();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB3A474@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_25AB3BAD8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t type metadata accessor for APIServiceHelper()
{
  return self;
}

uint64_t sub_25AB3A4C8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB3A5A4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB3A688()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB3A758()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB3A82C(uint64_t a1, void (*a2)(void *, void *))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v20 >= v8) {
      return swift_release();
    }
    unint64_t v21 = *(void *)(v4 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v21 = *(void *)(v4 + 8 * v10);
      if (!v21)
      {
        int64_t v10 = v20 + 2;
        if (v20 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v21 = *(void *)(v4 + 8 * v10);
        if (!v21)
        {
          int64_t v10 = v20 + 3;
          if (v20 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v21 = *(void *)(v4 + 8 * v10);
          if (!v21) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v21 - 1) & v21;
    unint64_t v12 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_5:
    uint64_t v13 = 16 * v12;
    uint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + v13);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 56) + v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    v24[0] = v15;
    v24[1] = v16;
    v23[0] = v18;
    v23[1] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v24, v23);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v22 = v20 + 4;
  if (v22 >= v8) {
    return swift_release();
  }
  unint64_t v21 = *(void *)(v4 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v21 = *(void *)(v4 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_25AB3A9D8(uint64_t a1, void (*a2)(void *, unsigned char *))
{
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v7) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v20 + 8 * v15);
    ++v9;
    if (!v16)
    {
      int64_t v9 = v15 + 1;
      if (v15 + 1 >= v7) {
        return swift_release();
      }
      unint64_t v16 = *(void *)(v20 + 8 * v9);
      if (!v16)
      {
        int64_t v9 = v15 + 2;
        if (v15 + 2 >= v7) {
          return swift_release();
        }
        unint64_t v16 = *(void *)(v20 + 8 * v9);
        if (!v16)
        {
          int64_t v9 = v15 + 3;
          if (v15 + 3 >= v7) {
            return swift_release();
          }
          unint64_t v16 = *(void *)(v20 + 8 * v9);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    unint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v14 = *v12;
    uint64_t v13 = v12[1];
    sub_25AB18F50(*(void *)(a1 + 56) + 32 * v11, (uint64_t)v19);
    v18[0] = v14;
    v18[1] = v13;
    swift_bridgeObjectRetain();
    a2(v18, v19);
    uint64_t result = sub_25AB18FAC((uint64_t)v18, &qword_26A4A0140);
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v7) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v20 + 8 * v17);
  if (v16)
  {
    int64_t v9 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v9 >= v7) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v20 + 8 * v9);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_25AB3ABA0(uint64_t a1, void (*a2)(void *, uint64_t *))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v8) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v4 + 8 * v16);
    ++v10;
    if (!v17)
    {
      int64_t v10 = v16 + 1;
      if (v16 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v4 + 8 * v10);
      if (!v17)
      {
        int64_t v10 = v16 + 2;
        if (v16 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v17 = *(void *)(v4 + 8 * v10);
        if (!v17)
        {
          int64_t v10 = v16 + 3;
          if (v16 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v17 = *(void *)(v4 + 8 * v10);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v17 - 1) & v17;
    unint64_t v12 = __clz(__rbit64(v17)) + (v10 << 6);
LABEL_5:
    uint64_t v13 = (void *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v14 = v13[1];
    uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8 * v12);
    v19[0] = *v13;
    v19[1] = v14;
    uint64_t v20 = v15;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    a2(v19, &v20);
    swift_unknownObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v8) {
    return swift_release();
  }
  unint64_t v17 = *(void *)(v4 + 8 * v18);
  if (v17)
  {
    int64_t v10 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v4 + 8 * v10);
    ++v18;
    if (v17) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_25AB3AD4C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v67 = *MEMORY[0x263EF8340];
  if (a2 >> 60 == 15) {
    return 0x3E7974706D653CLL;
  }
  unint64_t v7 = self;
  sub_25AB29558(a1, a2);
  int64_t v8 = (void *)sub_25AC32380();
  *(void *)&long long v65 = 0;
  id v9 = objc_msgSend(v7, sel_JSONObjectWithData_options_error_, v8, 1, &v65);

  if (!v9)
  {
    id v12 = (id)v65;
    uint64_t v13 = (void *)sub_25AC321F0();

    swift_willThrow();
    sub_25AB16944(a1, a2);
    return 0x3E726F7272653CLL;
  }
  id v10 = (id)v65;
  sub_25AC35500();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0138);
  unint64_t v11 = swift_dynamicCast();
  if (v11)
  {
    uint64_t v63 = *(void *)&v64[0];
    if ((a3 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_9;
  }
  unint64_t v11 = sub_25AB71510(MEMORY[0x263F8EE78]);
  uint64_t v63 = v11;
  if (a3)
  {
LABEL_9:
    uint64_t v59 = a1;
    unint64_t v60 = a2;
    uint64_t v14 = (void *)sub_25AB714E8(MEMORY[0x263F8EE78]);
    int64_t v15 = 0;
    uint64_t v61 = v63 + 64;
    uint64_t v16 = 1 << *(unsigned char *)(v63 + 32);
    uint64_t v17 = -1;
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    unint64_t v18 = v17 & *(void *)(v63 + 64);
    int64_t v62 = (unint64_t)(v16 + 63) >> 6;
    uint64_t v19 = MEMORY[0x263F8D310];
    while (1)
    {
      if (v18)
      {
        unint64_t v21 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        unint64_t v22 = v21 | (v15 << 6);
      }
      else
      {
        int64_t v23 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_54;
        }
        if (v23 >= v62)
        {
LABEL_51:
          uint64_t v58 = swift_release();
          *(void *)&long long v65 = 0;
          *((void *)&v65 + 1) = 0xE000000000000000;
          MEMORY[0x270FA5388](v58);
          sub_25AB3A9D8((uint64_t)v14, (void (*)(void *, unsigned char *))sub_25AB3C4C4);
          sub_25AB16944(v59, v60);
          swift_bridgeObjectRelease();
          return v65;
        }
        unint64_t v24 = *(void *)(v61 + 8 * v23);
        ++v15;
        if (!v24)
        {
          int64_t v15 = v23 + 1;
          if (v23 + 1 >= v62) {
            goto LABEL_51;
          }
          unint64_t v24 = *(void *)(v61 + 8 * v15);
          if (!v24)
          {
            int64_t v15 = v23 + 2;
            if (v23 + 2 >= v62) {
              goto LABEL_51;
            }
            unint64_t v24 = *(void *)(v61 + 8 * v15);
            if (!v24)
            {
              int64_t v25 = v23 + 3;
              if (v25 >= v62) {
                goto LABEL_51;
              }
              unint64_t v24 = *(void *)(v61 + 8 * v25);
              if (!v24)
              {
                while (1)
                {
                  int64_t v15 = v25 + 1;
                  if (__OFADD__(v25, 1)) {
                    goto LABEL_58;
                  }
                  if (v15 >= v62) {
                    goto LABEL_51;
                  }
                  unint64_t v24 = *(void *)(v61 + 8 * v15);
                  ++v25;
                  if (v24) {
                    goto LABEL_29;
                  }
                }
              }
              int64_t v15 = v25;
            }
          }
        }
LABEL_29:
        unint64_t v18 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v15 << 6);
      }
      uint64_t v26 = (uint64_t *)(*(void *)(v63 + 48) + 16 * v22);
      uint64_t v28 = *v26;
      uint64_t v27 = v26[1];
      uint64_t v29 = *(void *)(*(void *)(v63 + 56) + 8 * v22);
      *(void *)&long long v65 = sub_25AC34EC0();
      *((void *)&v65 + 1) = v30;
      *(void *)&v64[0] = 0x6E656B6F74;
      *((void *)&v64[0] + 1) = 0xE500000000000000;
      sub_25AB25ABC();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      char v31 = sub_25AC354F0();
      swift_bridgeObjectRelease();
      if (v31 & 1) != 0 && (*(void *)&v64[0] = v29, swift_unknownObjectRetain(), (swift_dynamicCast()))
      {
        uint64_t v32 = sub_25AC34310();
        uint64_t v34 = v33;
        swift_bridgeObjectRelease();
        uint64_t ObjectType = v19;
        *(void *)&long long v65 = v32;
        *((void *)&v65 + 1) = v34;
        sub_25AB1DDC8(&v65, v64);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v37 = sub_25AB8D62C(v28, v27);
        uint64_t v38 = v14[2];
        BOOL v39 = (v36 & 1) == 0;
        uint64_t v40 = v38 + v39;
        if (__OFADD__(v38, v39)) {
          goto LABEL_56;
        }
        char v41 = v36;
        if (v14[3] >= v40)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_25ABAF834();
          }
        }
        else
        {
          sub_25ABAB948(v40, isUniquelyReferenced_nonNull_native);
          unint64_t v42 = sub_25AB8D62C(v28, v27);
          if ((v41 & 1) != (v43 & 1)) {
            goto LABEL_59;
          }
          unint64_t v37 = v42;
        }
        uint64_t v19 = MEMORY[0x263F8D310];
        if (v41) {
          goto LABEL_12;
        }
        v14[(v37 >> 6) + 8] |= 1 << v37;
        uint64_t v56 = (uint64_t *)(v14[6] + 16 * v37);
        *uint64_t v56 = v28;
        v56[1] = v27;
        sub_25AB1DDC8(v64, (_OWORD *)(v14[7] + 32 * v37));
        uint64_t v57 = v14[2];
        BOOL v54 = __OFADD__(v57, 1);
        uint64_t v55 = v57 + 1;
        if (v54) {
          goto LABEL_57;
        }
      }
      else
      {
        uint64_t ObjectType = swift_getObjectType();
        *(void *)&long long v65 = v29;
        sub_25AB1DDC8(&v65, v64);
        swift_unknownObjectRetain();
        char v44 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v37 = sub_25AB8D62C(v28, v27);
        uint64_t v46 = v14[2];
        BOOL v47 = (v45 & 1) == 0;
        uint64_t v48 = v46 + v47;
        if (__OFADD__(v46, v47))
        {
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
        }
        char v49 = v45;
        if (v14[3] >= v48)
        {
          if ((v44 & 1) == 0) {
            sub_25ABAF834();
          }
        }
        else
        {
          sub_25ABAB948(v48, v44);
          unint64_t v50 = sub_25AB8D62C(v28, v27);
          if ((v49 & 1) != (v51 & 1))
          {
LABEL_59:
            uint64_t result = sub_25AC358B0();
            __break(1u);
            return result;
          }
          unint64_t v37 = v50;
        }
        uint64_t v19 = MEMORY[0x263F8D310];
        if (v49)
        {
LABEL_12:
          uint64_t v20 = (_OWORD *)(v14[7] + 32 * v37);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
          sub_25AB1DDC8(v64, v20);
          goto LABEL_13;
        }
        v14[(v37 >> 6) + 8] |= 1 << v37;
        uint64_t v52 = (uint64_t *)(v14[6] + 16 * v37);
        *uint64_t v52 = v28;
        v52[1] = v27;
        sub_25AB1DDC8(v64, (_OWORD *)(v14[7] + 32 * v37));
        uint64_t v53 = v14[2];
        BOOL v54 = __OFADD__(v53, 1);
        uint64_t v55 = v53 + 1;
        if (v54) {
          goto LABEL_55;
        }
      }
      v14[2] = v55;
      swift_bridgeObjectRetain();
LABEL_13:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
LABEL_6:
  *(void *)&long long v65 = 0;
  *((void *)&v65 + 1) = 0xE000000000000000;
  MEMORY[0x270FA5388](v11);
  sub_25AB3ABA0(v63, (void (*)(void *, uint64_t *))sub_25AB3C4AC);
  swift_bridgeObjectRelease();
  sub_25AB16944(a1, a2);
  return v65;
}

uint64_t sub_25AB3B458(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD30);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25AC31FA0();
  uint64_t v43 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v42 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25AC31F40();
  unint64_t v11 = 0xE000000000000000;
  if (v10)
  {
    uint64_t v44 = 0;
    unint64_t v45 = 0xE000000000000000;
    uint64_t v12 = MEMORY[0x270FA5388](v10);
    *(&v34 - 2) = (uint64_t)&v44;
    sub_25AB3A82C(v12, (void (*)(void *, void *))sub_25AB3C528);
    swift_bridgeObjectRelease();
    unint64_t v11 = v45;
    uint64_t v39 = v44;
  }
  else
  {
    uint64_t v39 = 0;
  }
  uint64_t v13 = sub_25AC31F80();
  unint64_t v15 = v14;
  uint64_t v40 = sub_25AB3AD4C(v13, v14, 1);
  unint64_t v41 = v16;
  sub_25AB16944(v13, v15);
  if (qword_26A49F7E0 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v7, (uint64_t)qword_26A4A1C88);
  sub_25AB150E0(v17, (uint64_t)v9);
  uint64_t v18 = sub_25AC345E0();
  uint64_t v19 = *(void *)(v18 - 8);
  int v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v9, 1, v18);
  unint64_t v22 = v42;
  uint64_t v21 = v43;
  if (v20 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_25AB18FAC((uint64_t)v9, &qword_26A49F9A0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v42, a1, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v24 = sub_25AC345C0();
    int v38 = sub_25AC352B0();
    if (os_log_type_enabled(v24, (os_log_type_t)v38))
    {
      os_log_t v36 = v24;
      uint64_t v37 = v5;
      uint64_t v25 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v44 = v35;
      *(_DWORD *)uint64_t v25 = 136315650;
      sub_25AC31F70();
      uint64_t v26 = sub_25AC32300();
      uint64_t v27 = *(void *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v4, 1, v26) == 1)
      {
        sub_25AB18FAC((uint64_t)v4, &qword_26A49FD30);
        uint64_t v28 = 0;
        unint64_t v29 = 0xE000000000000000;
      }
      else
      {
        uint64_t v28 = sub_25AC32240();
        unint64_t v29 = v30;
        (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v26);
      }
      uint64_t v46 = sub_25AB56574(v28, v29, &v44);
      sub_25AC354A0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v37);
      *(_WORD *)(v25 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_25AB56574(v39, v11, &v44);
      sub_25AC354A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 22) = 2080;
      unint64_t v31 = v41;
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_25AB56574(v40, v31, &v44);
      sub_25AC354A0();
      swift_bridgeObjectRelease_n();
      os_log_t v32 = v36;
      _os_log_impl(&dword_25AB11000, v36, (os_log_type_t)v38, "----> %s\n%s\n%s", (uint8_t *)v25, 0x20u);
      uint64_t v33 = v35;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v33, -1, -1);
      MEMORY[0x261151C20](v25, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v5);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v9, v18);
  }
}

uint64_t sub_25AB3B9FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701080931 && a2 == 0xE400000000000000;
  if (v2 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25AC35870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25AB3BAD8(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0150);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB3C918();
  sub_25AC359F0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v11 = 0;
    uint64_t v7 = sub_25AC35760();
    char v10 = 1;
    swift_bridgeObjectRetain();
    sub_25AC35760();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_25AB3BCE0(uint64_t a1, void (*a2)(unsigned char *, unsigned char *))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v8) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v4 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v14 = *(void *)(v4 + 8 * v10);
        if (!v14)
        {
          int64_t v10 = v13 + 3;
          if (v13 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v14 = *(void *)(v4 + 8 * v10);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_5:
    sub_25AB3C4CC(*(void *)(a1 + 48) + 40 * v12, (uint64_t)v16);
    sub_25AB18F50(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v17);
    a2(v16, v17);
    uint64_t result = sub_25AB18FAC((uint64_t)v16, &qword_26A4A0148);
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v8) {
    return swift_release();
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v4 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_25AB3BE90(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  uint64_t v51 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD30);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25AC31FA0();
  uint64_t v52 = *(void *)(v10 - 8);
  uint64_t v53 = v10;
  MEMORY[0x270FA5388](v10);
  unint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v13);
  int64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = objc_msgSend(a4, sel_allHeaderFields);
  uint64_t v17 = sub_25AC34DA0();

  uint64_t v56 = 0;
  unint64_t v57 = 0xE000000000000000;
  BOOL v54 = &v56;
  sub_25AB3BCE0(v17, (void (*)(unsigned char *, unsigned char *))sub_25AB3C4A4);
  swift_bridgeObjectRelease();
  unint64_t v18 = v57;
  uint64_t v50 = v56;
  uint64_t v19 = sub_25AB3AD4C(a2, a3, 1);
  unint64_t v21 = v20;
  if (qword_26A49F7E0 != -1) {
    swift_once();
  }
  uint64_t v22 = __swift_project_value_buffer(v13, (uint64_t)qword_26A4A1C88);
  sub_25AB150E0(v22, (uint64_t)v15);
  uint64_t v23 = sub_25AC345E0();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v15, 1, v23) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_25AB18FAC((uint64_t)v15, &qword_26A49F9A0);
  }
  else
  {
    uint64_t v48 = v19;
    uint64_t v49 = v24;
    uint64_t v26 = v52;
    uint64_t v27 = v53;
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v12, v51, v53);
    uint64_t v28 = v12;
    id v29 = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v30 = sub_25AC345C0();
    LODWORD(v51) = sub_25AC352B0();
    if (os_log_type_enabled(v30, (os_log_type_t)v51))
    {
      id v44 = v29;
      os_log_t v45 = v30;
      unint64_t v46 = v21;
      uint64_t v47 = v23;
      uint64_t v31 = swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v56 = v43;
      *(_DWORD *)uint64_t v31 = 136315906;
      sub_25AC31F70();
      uint64_t v32 = sub_25AC32300();
      uint64_t v33 = *(void *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v9, 1, v32) == 1)
      {
        sub_25AB18FAC((uint64_t)v9, &qword_26A49FD30);
        uint64_t v34 = 0;
        unint64_t v35 = 0xE000000000000000;
      }
      else
      {
        uint64_t v34 = sub_25AC32240();
        unint64_t v35 = v36;
        (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v32);
      }
      uint64_t v55 = sub_25AB56574(v34, v35, &v56);
      sub_25AC354A0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v28, v53);
      *(_WORD *)(v31 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_25AB56574(v50, v18, &v56);
      sub_25AC354A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 22) = 2048;
      id v37 = v44;
      id v38 = objc_msgSend(v44, sel_statusCode);

      uint64_t v55 = (uint64_t)v38;
      sub_25AC354A0();

      *(_WORD *)(v31 + 32) = 2080;
      unint64_t v39 = v46;
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_25AB56574(v48, v39, &v56);
      sub_25AC354A0();
      swift_bridgeObjectRelease_n();
      os_log_t v40 = v45;
      _os_log_impl(&dword_25AB11000, v45, (os_log_type_t)v51, "<---- %s\"\n%s\n%ld {%s\n}", (uint8_t *)v31, 0x2Au);
      uint64_t v41 = v43;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v41, -1, -1);
      MEMORY[0x261151C20](v31, -1, -1);

      uint64_t v23 = v47;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v27);
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v15, v23);
  }
}

uint64_t sub_25AB3C4A4()
{
  return sub_25AB3A688();
}

uint64_t sub_25AB3C4AC()
{
  return sub_25AB3A4C8();
}

uint64_t sub_25AB3C4C4()
{
  return sub_25AB3A758();
}

uint64_t sub_25AB3C4CC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_25AB3C528()
{
  return sub_25AB3A5A4();
}

uint64_t destroy for APIErrorResponse()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for APIErrorResponse(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for APIErrorResponse(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for APIErrorResponse(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for APIErrorResponse(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for APIErrorResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for APIErrorResponse()
{
  return &type metadata for APIErrorResponse;
}

uint64_t destroy for APIError()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for APIError(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for APIError(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for APIError(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for APIError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for APIError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for APIError()
{
  return &type metadata for APIError;
}

unint64_t sub_25AB3C918()
{
  unint64_t result = qword_26A4A0158;
  if (!qword_26A4A0158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0158);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for APIErrorResponse.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for APIErrorResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB3CAC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_25AB3CAF0(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for APIErrorResponse.CodingKeys()
{
  return &type metadata for APIErrorResponse.CodingKeys;
}

uint64_t getEnumTagSinglePayload for TransactionData.CvmType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for APIErrorType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB3CC68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for APIErrorType()
{
  return &type metadata for APIErrorType;
}

unint64_t sub_25AB3CCA4()
{
  unint64_t result = qword_26A4A0160;
  if (!qword_26A4A0160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0160);
  }
  return result;
}

unint64_t sub_25AB3CCFC()
{
  unint64_t result = qword_26A4A0168;
  if (!qword_26A4A0168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0168);
  }
  return result;
}

unint64_t sub_25AB3CD54()
{
  unint64_t result = qword_26A4A0170;
  if (!qword_26A4A0170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0170);
  }
  return result;
}

unint64_t sub_25AB3CDAC()
{
  unint64_t result = qword_26A4A0178;
  if (!qword_26A4A0178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0178);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CancelationTrigger(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB3CECCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CancelationTrigger()
{
  return &type metadata for CancelationTrigger;
}

unint64_t sub_25AB3CF08()
{
  unint64_t result = qword_26A4A0180;
  if (!qword_26A4A0180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0180);
  }
  return result;
}

uint64_t sub_25AB3CF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a2;
  uint64_t v37 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A01C0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v35 = v4;
  unint64_t v36 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25AC31FA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v30 - v9;
  uint64_t v11 = (uint64_t (*)(void))sub_25AC34000();
  char v12 = v11();
  swift_release();
  if ((v12 & 1) != 0
    && (id v13 = objc_msgSend(self, sel_standardUserDefaults),
        uint64_t v14 = (void *)sub_25AC34E10(),
        unsigned int v15 = objc_msgSend(v13, sel_BOOLForKey_, v14),
        v13,
        v14,
        v15))
  {
    unint64_t v38 = 0xD000000000000011;
    unint64_t v39 = 0x800000025AC3E550;
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    uint64_t v40 = 1;
    char v43 = 0;
    return sub_25AC35100();
  }
  else
  {
    uint64_t v33 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (qword_26A49F850 != -1) {
      swift_once();
    }
    uint64_t v32 = qword_26A4A1DC8;
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v17(v10, v34, v5);
    unint64_t v18 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v36, v37, v2);
    uint64_t v19 = *(unsigned __int8 *)(v3 + 80);
    uint64_t v31 = v10;
    uint64_t v37 = v5;
    uint64_t v20 = (v19 + 16) & ~v19;
    uint64_t v21 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v21 + v20, v18, v2);
    uint64_t v22 = swift_allocObject();
    swift_weakInit();
    uint64_t v23 = v33;
    uint64_t v24 = v10;
    uint64_t v25 = v37;
    v17(v33, (uint64_t)v24, v37);
    unint64_t v26 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v27 = v26 + v7;
    uint64_t v28 = (char *)swift_allocObject();
    *((void *)v28 + 2) = sub_25AB42B64;
    *((void *)v28 + 3) = v21;
    *((void *)v28 + 4) = v22;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v28[v26], v23, v25);
    v28[v27] = 0;
    swift_retain();
    uint64_t v29 = (uint64_t)v31;
    sub_25AB3FE24((uint64_t)v31, 0, 0, (uint64_t)sub_25AB42BDC, (uint64_t)v28);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v25);
  }
}

uint64_t sub_25AB3D364(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A01C0);
  return sub_25AC35100();
}

uint64_t sub_25AB3D3F4(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v37 = a3;
  uint64_t v40 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0198);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v39 = sub_25AC31FA0();
  uint64_t v7 = *(void *)(v39 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x270FA5388](v39);
  unint64_t v38 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v37 - v10;
  char v12 = (uint64_t (*)(void))sub_25AC34000();
  char v13 = v12(v12);
  swift_release();
  if (a2)
  {
    if (v13)
    {
      id v14 = objc_msgSend(self, sel_standardUserDefaults, v37);
      unsigned int v15 = (void *)sub_25AC34E10();
      unsigned int v16 = objc_msgSend(v14, sel_BOOLForKey_, v15);

      if (v16)
      {
        long long v17 = xmmword_25AC38B60;
LABEL_8:
        long long v41 = v17;
        uint64_t v43 = 0;
        uint64_t v44 = 0;
        uint64_t v42 = 0;
        char v45 = 0;
        return sub_25AC35100();
      }
    }
    if (qword_26A49F850 != -1) {
      swift_once();
    }
    sub_25AC31F50();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v40, v4);
    unint64_t v22 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v23 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v23 + v22, (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    uint64_t v24 = swift_allocObject();
    swift_weakInit();
    unint64_t v26 = v38;
    uint64_t v25 = v39;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v38, v11, v39);
    unint64_t v27 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v28 = v27 + v8;
    uint64_t v29 = (char *)swift_allocObject();
    *((void *)v29 + 2) = sub_25AB42868;
    *((void *)v29 + 3) = v23;
    *((void *)v29 + 4) = v24;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v29[v27], v26, v25);
    v29[v28] = 1;
    swift_retain();
    sub_25AB3FEFC((uint64_t)v11, 1, 0, (uint64_t)sub_25AB42F4C, (uint64_t)v29);
  }
  else
  {
    if (v13)
    {
      id v18 = objc_msgSend(self, sel_standardUserDefaults, v37);
      uint64_t v19 = (void *)sub_25AC34E10();
      unsigned int v20 = objc_msgSend(v18, sel_BOOLForKey_, v19);

      if (v20)
      {
        long long v17 = xmmword_25AC38B50;
        goto LABEL_8;
      }
    }
    if (qword_26A49F850 != -1) {
      swift_once();
    }
    sub_25AC31F50();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v40, v4);
    unint64_t v30 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v31 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v31 + v30, (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    uint64_t v32 = swift_allocObject();
    swift_weakInit();
    uint64_t v33 = v38;
    uint64_t v25 = v39;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v38, v11, v39);
    unint64_t v34 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v35 = v34 + v8;
    unint64_t v36 = (char *)swift_allocObject();
    *((void *)v36 + 2) = sub_25AB42868;
    *((void *)v36 + 3) = v31;
    *((void *)v36 + 4) = v32;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v36[v34], v33, v25);
    v36[v35] = 1;
    swift_retain();
    sub_25AB3FE90((uint64_t)v11, 1, 0, (uint64_t)sub_25AB42DB8, (uint64_t)v36);
  }
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v11, v25);
}

uint64_t sub_25AB3D9C8(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a2;
  uint64_t v27 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0198);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  uint64_t v26 = sub_25AC31FA0();
  uint64_t v5 = *(void *)(v26 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = MEMORY[0x270FA5388](v26);
  uint64_t v25 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t v10 = (uint64_t (*)(void))sub_25AC34000();
  char v11 = v10(v10);
  swift_release();
  if ((v11 & 1) != 0
    && (id v12 = objc_msgSend(self, sel_standardUserDefaults, v24),
        char v13 = (void *)sub_25AC34E10(),
        unsigned int v14 = objc_msgSend(v12, sel_BOOLForKey_, v13),
        v12,
        v13,
        v14))
  {
    unint64_t v28 = 0xD000000000000019;
    unint64_t v29 = 0x800000025AC3E410;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v30 = 0;
    char v33 = 0;
    return sub_25AC35100();
  }
  else
  {
    if (qword_26A49F850 != -1) {
      swift_once();
    }
    sub_25AC31F50();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v27, v2);
    unint64_t v16 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v17 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v17 + v16, (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
    uint64_t v18 = swift_allocObject();
    swift_weakInit();
    unsigned int v20 = v25;
    uint64_t v19 = v26;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v25, v9, v26);
    unint64_t v21 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v22 = v21 + v6;
    uint64_t v23 = (char *)swift_allocObject();
    *((void *)v23 + 2) = sub_25AB42868;
    *((void *)v23 + 3) = v17;
    *((void *)v23 + 4) = v18;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v23[v21], v20, v19);
    v23[v22] = 1;
    swift_retain();
    sub_25AB3FF68((uint64_t)v9, 1, 0, (uint64_t)sub_25AB428A8, (uint64_t)v23);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v9, v19);
  }
}

uint64_t sub_25AB3DDA0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0198);
  return sub_25AC35100();
}

uint64_t type metadata accessor for MerchantService()
{
  return self;
}

uint64_t sub_25AB3DE58(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0210);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB43FD4();
  sub_25AC35A00();
  v8[15] = 0;
  sub_25AC357F0();
  if (!v1)
  {
    v8[14] = 1;
    sub_25AC357F0();
    v8[13] = 2;
    sub_25AC357F0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_25AB3DFE0(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  int v12 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0260);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB43F80();
  sub_25AC35A00();
  char v14 = 0;
  sub_25AC357F0();
  if (!v4)
  {
    char v13 = 1;
    sub_25AC357D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_25AB3E150(char a1)
{
  unint64_t result = 0x5472656E74726170;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x6C646E7542707061;
      break;
    case 3:
      unint64_t result = 0x6564496E656B6F74;
      break;
    case 4:
      unint64_t result = 0x6F4C656369766564;
      break;
    case 5:
      unint64_t result = 0x6973726556736F74;
      break;
    case 6:
      unint64_t result = 0x6F6973726556736FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25AB3E268(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0240);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB440D0();
  sub_25AC35A00();
  v8[15] = 0;
  sub_25AC357F0();
  if (!v1)
  {
    v8[14] = 1;
    sub_25AC357F0();
    v8[13] = 2;
    sub_25AC357F0();
    v8[12] = 3;
    sub_25AC357F0();
    v8[11] = 4;
    sub_25AC357F0();
    v8[10] = 5;
    sub_25AC357F0();
    v8[9] = 6;
    sub_25AC357F0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_25AB3E490(char a1)
{
  unint64_t result = 0x5472656E74726170;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x6C646E7542707061;
      break;
    case 3:
      unint64_t result = 0x6564496E656B6F74;
      break;
    case 4:
      unint64_t result = 0x6F4C656369766564;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25AB3E58C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A01F0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB43AA8();
  sub_25AC35A00();
  v8[15] = 0;
  sub_25AC357F0();
  if (!v1)
  {
    v8[14] = 1;
    sub_25AC357F0();
    v8[13] = 2;
    sub_25AC357F0();
    v8[12] = 3;
    sub_25AC357F0();
    v8[11] = 4;
    sub_25AC357F0();
    v8[10] = 5;
    sub_25AC35800();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_25AB3E794()
{
  unint64_t v1 = 0x6C646E7542707061;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000011;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x5472656E74726170;
  }
}

uint64_t sub_25AB3E804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB43AFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25AB3E82C(uint64_t a1)
{
  unint64_t v2 = sub_25AB43FD4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB3E868(uint64_t a1)
{
  unint64_t v2 = sub_25AB43FD4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB3E8A4(void *a1)
{
  return sub_25AB3DE58(a1);
}

uint64_t sub_25AB3E8BC()
{
  if (*v0) {
    return 0x6C416B6E696C6572;
  }
  else {
    return 0xD00000000000001ALL;
  }
}

uint64_t sub_25AB3E908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB43C80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25AB3E930(uint64_t a1)
{
  unint64_t v2 = sub_25AB43F80();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB3E96C(uint64_t a1)
{
  unint64_t v2 = sub_25AB43F80();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB3E9A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_25AB43D94(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_25AB3E9D8(void *a1)
{
  return sub_25AB3DFE0(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

unint64_t sub_25AB3E9F8()
{
  return sub_25AB3E150(*v0);
}

uint64_t sub_25AB3EA00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB44DF8(a1, a2);
  *a3 = result;
  return result;
}

void sub_25AB3EA28(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_25AB3EA34(uint64_t a1)
{
  unint64_t v2 = sub_25AB440D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB3EA70(uint64_t a1)
{
  unint64_t v2 = sub_25AB440D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB3EAAC(void *a1)
{
  return sub_25AB3E268(a1);
}

unint64_t sub_25AB3EACC()
{
  return 0xD000000000000012;
}

uint64_t sub_25AB3EAE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB4515C(a1, a2);
  *a3 = result & 1;
  return result;
}

void sub_25AB3EB14(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_25AB3EB20(uint64_t a1)
{
  unint64_t v2 = sub_25AB4407C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB3EB5C(uint64_t a1)
{
  unint64_t v2 = sub_25AB4407C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB3EB98@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25AB3EF98(a1, &qword_26A4A0230, (void (*)(void))sub_25AB4407C, a2);
}

uint64_t sub_25AB3EBD4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_25AB3F15C(a1, a2, a3, &qword_26A4A0250, (void (*)(void))sub_25AB4407C);
}

uint64_t sub_25AB3EC10()
{
  return 0x7453657461647075;
}

uint64_t sub_25AB3EC30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7453657461647075 && a2 == 0xEC00000073757461)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_25AC35870();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_25AB3ECE0(uint64_t a1)
{
  unint64_t v2 = sub_25AB44028();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB3ED1C(uint64_t a1)
{
  unint64_t v2 = sub_25AB44028();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB3ED58@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25AB3EF98(a1, &qword_26A4A0220, (void (*)(void))sub_25AB44028, a2);
}

uint64_t sub_25AB3ED94(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_25AB3F15C(a1, a2, a3, &qword_26A4A0258, (void (*)(void))sub_25AB44028);
}

unint64_t sub_25AB3EDD0()
{
  return sub_25AB3E490(*v0);
}

uint64_t sub_25AB3EDD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB451E4(a1, a2);
  *a3 = result;
  return result;
}

void sub_25AB3EE00(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_25AB3EE0C(uint64_t a1)
{
  unint64_t v2 = sub_25AB43AA8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB3EE48(uint64_t a1)
{
  unint64_t v2 = sub_25AB43AA8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB3EE84(void *a1)
{
  return sub_25AB3E58C(a1);
}

unint64_t sub_25AB3EE9C()
{
  return 0xD000000000000018;
}

uint64_t sub_25AB3EEB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB454C8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25AB3EEE4(uint64_t a1)
{
  unint64_t v2 = sub_25AB43A54();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB3EF20(uint64_t a1)
{
  unint64_t v2 = sub_25AB43A54();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB3EF5C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25AB3EF98(a1, &qword_26A4A01E0, (void (*)(void))sub_25AB43A54, a2);
}

uint64_t sub_25AB3EF98@<X0>(void *a1@<X0>, uint64_t *a2@<X3>, void (*a3)(void)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v18 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v17 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_25AC359F0();
  if (v4) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v10 = v17;
  uint64_t v11 = v18;
  uint64_t v12 = sub_25AC35760();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v7);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v11 = v12;
  v11[1] = v14;
  return result;
}

uint64_t sub_25AB3F120(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_25AB3F15C(a1, a2, a3, &qword_26A4A0268, (void (*)(void))sub_25AB43A54);
}

uint64_t sub_25AB3F15C(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v13 = a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13();
  sub_25AC35A00();
  sub_25AC357F0();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_25AB3F2A4(uint64_t a1, uint64_t (*a2)(unsigned char *), uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  sub_25AB259D8(a1, (uint64_t)v14, &qword_26A49FD38);
  uint64_t v10 = v14[0];
  sub_25AB259D8(a1, (uint64_t)v13, &qword_26A49FD38);
  sub_25AB259D8(a1, (uint64_t)v15, &qword_26A49FD38);
  if (v15[48])
  {
    if (v10 == 2)
    {
      swift_beginAccess();
      uint64_t result = swift_weakLoadStrong();
      if (result)
      {
        sub_25AB3F510(a5, a6 & 1, 0, (uint64_t)a2, a3);
        return swift_release();
      }
    }
    else
    {
      return a2(v13);
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v13);
    return sub_25AB42AB4(a1);
  }
  return result;
}

uint64_t sub_25AB3F3E8(uint64_t a1, uint64_t (*a2)(unsigned char *), uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t *a7, void (*a8)(uint64_t, void, void, uint64_t (*)(void), uint64_t))
{
  sub_25AB259D8(a1, (uint64_t)v18, a7);
  uint64_t v15 = v18[0];
  sub_25AB259D8(a1, (uint64_t)v17, a7);
  sub_25AB259D8(a1, (uint64_t)v19, a7);
  if (v19[40])
  {
    if (v15 == 2)
    {
      swift_beginAccess();
      uint64_t result = swift_weakLoadStrong();
      if (result)
      {
        a8(a5, a6 & 1, 0, (uint64_t (*)(void))a2, a3);
        return swift_release();
      }
    }
    else
    {
      return a2(v17);
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    a2(v17);
    return sub_25AB42CFC(a1);
  }
  return result;
}

uint64_t sub_25AB3F510(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v34 = a5;
  uint64_t v33 = a4;
  uint64_t v32 = a3;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v9 = MEMORY[0x270FA5388](v30);
  v29[1] = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v31 = (char *)v29 - v11;
  uint64_t v12 = sub_25AC31FA0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v29 - v17;
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F77A08]), sel_init);
  id v35 = v19;
  uint64_t v36 = a1;
  sub_25AB40918((void (*)(uint64_t))sub_25AB4557C);
  uint64_t v20 = 16;
  if (a2) {
    uint64_t v20 = 24;
  }
  id v21 = *(id *)(v6 + v20);
  sub_25AB3B458((uint64_t)v18);
  uint64_t v22 = (void *)sub_25AC31F30();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1, v12);
  unint64_t v23 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v34;
  *(void *)(v24 + 16) = v33;
  *(void *)(v24 + 24) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v24 + v23, v16, v12);
  aBlock[4] = sub_25AB42964;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25AB41338;
  aBlock[3] = &block_descriptor_18;
  uint64_t v26 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v27 = objc_msgSend(v21, sel_dataTaskWithRequest_completionHandler_, v22, v26);
  _Block_release(v26);

  objc_msgSend(v27, sel_resume);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
}

uint64_t sub_25AB3FE24(uint64_t a1, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_25AB3FFD4(a1, a2, a3, a4, a5, (void (*)(uint64_t))sub_25AB4557C, (uint64_t)&unk_270883498, (uint64_t)sub_25AB42CE4, block_descriptor_33);
}

uint64_t sub_25AB3FE90(uint64_t a1, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_25AB3FFD4(a1, a2, a3, a4, a5, (void (*)(uint64_t))sub_25AB4557C, (uint64_t)&unk_2708835D8, (uint64_t)sub_25AB430F0, block_descriptor_62);
}

uint64_t sub_25AB3FEFC(uint64_t a1, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_25AB3FFD4(a1, a2, a3, a4, a5, (void (*)(uint64_t))sub_25AB4557C, (uint64_t)&unk_270883588, (uint64_t)sub_25AB42F70, block_descriptor_55);
}

uint64_t sub_25AB3FF68(uint64_t a1, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_25AB3FFD4(a1, a2, a3, a4, a5, (void (*)(uint64_t))sub_25AB428C8, (uint64_t)&unk_2708833A8, (uint64_t)sub_25AB428E8, block_descriptor_0);
}

uint64_t sub_25AB3FFD4(uint64_t a1, char a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), uint64_t a7, uint64_t a8, char *a9)
{
  uint64_t v39 = a8;
  uint64_t v38 = a7;
  uint64_t v11 = v9;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  id v37 = a3;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v14 = MEMORY[0x270FA5388](v35);
  uint64_t v34 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v36 = (char *)&v34 - v16;
  uint64_t v17 = sub_25AC31FA0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  id v21 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  unint64_t v23 = (char *)&v34 - v22;
  id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F77A08]), sel_init);
  id v42 = v24;
  uint64_t v43 = a1;
  sub_25AB40918(a6);
  uint64_t v36 = a9;
  uint64_t v25 = 16;
  if (a2) {
    uint64_t v25 = 24;
  }
  id v37 = *(id *)(v11 + v25);
  sub_25AB3B458((uint64_t)v23);
  uint64_t v26 = (void *)sub_25AC31F30();
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, a1, v17);
  unint64_t v27 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v28 = swift_allocObject();
  uint64_t v29 = v41;
  *(void *)(v28 + 16) = v40;
  *(void *)(v28 + 24) = v29;
  (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v28 + v27, v21, v17);
  aBlock[4] = v39;
  aBlock[5] = v28;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25AB41338;
  aBlock[3] = v36;
  uint64_t v30 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v31 = v37;
  id v32 = objc_msgSend(v37, sel_dataTaskWithRequest_completionHandler_, v26, v30);
  _Block_release(v30);

  objc_msgSend(v32, sel_resume);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v23, v17);
}

void sub_25AB40918(void (*a1)(uint64_t))
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v4);
  if (v1)
  {
    _s3__C4CodeOMa_1(0);
    v16[1] = 14001;
    id v7 = v1;
    sub_25AB42918(&qword_26A49FB98, _s3__C4CodeOMa_1);
    char v8 = sub_25AC32100();

    if (v8)
    {

      if (qword_26A49F800 != -1) {
        swift_once();
      }
      uint64_t v9 = __swift_project_value_buffer(v3, (uint64_t)qword_26A4A1CE8);
      sub_25AB150E0(v9, (uint64_t)v6);
      uint64_t v10 = sub_25AC345E0();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
      {
        uint64_t v12 = sub_25AB18FAC((uint64_t)v6, &qword_26A49F9A0);
      }
      else
      {
        uint64_t v13 = sub_25AC345C0();
        os_log_type_t v14 = sub_25AC352C0();
        if (os_log_type_enabled(v13, v14))
        {
          uint64_t v15 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v15 = 0;
          _os_log_impl(&dword_25AB11000, v13, v14, "SPR XPC service disconnected, let's try one more time", v15, 2u);
          MEMORY[0x261151C20](v15, -1, -1);
        }

        uint64_t v12 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v6, v10);
      }
      a1(v12);
    }
  }
}

uint64_t *sub_25AB40BB0(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, void (*a5)(long long *), uint64_t a6, uint64_t a7)
{
  if (a4)
  {
    long long v30 = xmmword_25AC38BB0;
    long long v31 = xmmword_25AC38BC0;
    char v8 = "Server not reachable";
  }
  else
  {
    if (a3)
    {
      self;
      uint64_t v13 = swift_dynamicCastObjCClass();
      if (v13 && a2 >> 60 != 15)
      {
        uint64_t v16 = (void *)v13;
        id v17 = a3;
        sub_25AB29544(a1, a2);
        sub_25AB3BE90(a7, a1, a2, v16);
        unint64_t v18 = (unint64_t)objc_msgSend(v16, sel_statusCode);
        if (v18 - 300 >= 0xFFFFFFFFFFFFFF9CLL)
        {
          uint64_t v29 = v17;
          sub_25AB88638(&v35);
          long long v20 = v35;
          uint64_t v22 = v36;
          uint64_t v21 = v37;
          unint64_t v23 = v38;
          uint64_t v24 = v39;
          sub_25AB259D8((uint64_t)&v35, (uint64_t)v40, &qword_26A4A01A8);
          if (v41)
          {
            long long v30 = v20;
            *(void *)&long long v31 = v22;
            *((void *)&v31 + 1) = v21;
            unint64_t v32 = v23;
            uint64_t v33 = v24;
            char v34 = 0;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            a5(&v30);

            sub_25AB16944(a1, a2);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return sub_25AB42A2C((uint64_t *)&v35);
          }
          long long v30 = xmmword_25AC38BD0;
          long long v31 = xmmword_25AC38BE0;
          unint64_t v32 = 0x800000025AC3E4D0;
          uint64_t v33 = 0;
          char v34 = 1;
          a5(&v30);
        }
        else
        {
          if ((v18 | 2) == 0x193)
          {
            long long v30 = xmmword_25AC38B90;
            long long v31 = xmmword_25AC38BA0;
            uint64_t v19 = "Authentication error";
          }
          else
          {
            uint64_t v25 = sub_25AB88A70();
            if (v26)
            {
              *(void *)&long long v30 = 4;
              *((void *)&v30 + 1) = v25;
              *(void *)&long long v31 = v26;
              *((void *)&v31 + 1) = v27;
              unint64_t v32 = v28;
              uint64_t v33 = 0;
              char v34 = 1;
              a5(&v30);

              sub_25AB16944(a1, a2);
              swift_bridgeObjectRelease();
              return (uint64_t *)swift_bridgeObjectRelease();
            }
            long long v30 = xmmword_25AC38BD0;
            long long v31 = xmmword_25AC38BE0;
            uint64_t v19 = "Protocol build or parse error";
          }
          unint64_t v32 = (unint64_t)(v19 - 32) | 0x8000000000000000;
          uint64_t v33 = 0;
          char v34 = 1;
          a5(&v30);
        }
        return (uint64_t *)sub_25AB16944(a1, a2);
      }
    }
    long long v30 = xmmword_25AC38B70;
    long long v31 = xmmword_25AC38B80;
    char v8 = "Channel failure, nil api service";
  }
  unint64_t v32 = (unint64_t)(v8 - 32) | 0x8000000000000000;
  uint64_t v33 = 0;
  char v34 = 1;
  return (uint64_t *)((uint64_t (*)(long long *))a5)(&v30);
}

uint64_t sub_25AB40EAC(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, void (*a5)(long long *), uint64_t a6, uint64_t a7)
{
  if (!a4)
  {
    if (!a3 || ((self, (v15 = swift_dynamicCastObjCClass()) != 0) ? (BOOL v16 = a2 >> 60 == 15) : (BOOL v16 = 1), v16))
    {
      long long v8 = xmmword_25AC38B70;
      long long v9 = xmmword_25AC38B80;
      uint64_t v10 = "Channel failure, nil api service";
      goto LABEL_10;
    }
    unint64_t v18 = (void *)v15;
    id v19 = a3;
    sub_25AB29544(a1, a2);
    sub_25AB3BE90(a7, a1, a2, v18);
    unint64_t v20 = (unint64_t)objc_msgSend(v18, sel_statusCode);
    if (v20 - 300 >= 0xFFFFFFFFFFFFFF9CLL)
    {
      uint64_t v24 = sub_25AB8A4DC();
      if (v25)
      {
        *(void *)&long long v31 = v24;
        *((void *)&v31 + 1) = v25;
        unint64_t v33 = 0;
        long long v32 = v26;
        char v34 = 0;
        a5(&v31);

        sub_25AB16944(a1, a2);
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      if ((v20 | 2) == 0x193)
      {
        long long v21 = xmmword_25AC38B90;
        long long v22 = xmmword_25AC38BA0;
        unint64_t v23 = "Authentication error";
LABEL_21:
        long long v31 = v21;
        long long v32 = v22;
        unint64_t v33 = (unint64_t)(v23 - 32) | 0x8000000000000000;
        char v34 = 1;
        a5(&v31);

        return sub_25AB16944(a1, a2);
      }
      uint64_t v27 = sub_25AB88A70();
      if (v28)
      {
        *(void *)&long long v31 = 4;
        *((void *)&v31 + 1) = v27;
        *(void *)&long long v32 = v28;
        *((void *)&v32 + 1) = v29;
        unint64_t v33 = v30;
        char v34 = 1;
        a5(&v31);

        sub_25AB16944(a1, a2);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
    long long v21 = xmmword_25AC38BD0;
    long long v22 = xmmword_25AC38BE0;
    unint64_t v23 = "Protocol build or parse error";
    goto LABEL_21;
  }
  long long v8 = xmmword_25AC38BB0;
  long long v9 = xmmword_25AC38BC0;
  uint64_t v10 = "Server not reachable";
LABEL_10:
  long long v31 = v8;
  long long v32 = v9;
  unint64_t v33 = (unint64_t)(v10 - 32) | 0x8000000000000000;
  char v34 = 1;
  return ((uint64_t (*)(long long *))a5)(&v31);
}

uint64_t sub_25AB410F0(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, void (*a5)(long long *), uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, unint64_t))
{
  if (!a4)
  {
    if (!a3 || ((self, (uint64_t v17 = swift_dynamicCastObjCClass()) != 0) ? (v18 = a2 >> 60 == 15) : (v18 = 1), v18))
    {
      long long v9 = xmmword_25AC38B70;
      long long v10 = xmmword_25AC38B80;
      uint64_t v11 = "Channel failure, nil api service";
      goto LABEL_10;
    }
    unint64_t v20 = (void *)v17;
    id v21 = a3;
    sub_25AB29544(a1, a2);
    sub_25AB3BE90(a7, a1, a2, v20);
    unint64_t v22 = (unint64_t)objc_msgSend(v20, sel_statusCode);
    if (v22 - 300 >= 0xFFFFFFFFFFFFFF9CLL)
    {
      uint64_t v26 = a8(a1, a2);
      if (v27)
      {
        *(void *)&long long v32 = v26;
        *((void *)&v32 + 1) = v27;
        unint64_t v34 = 0;
        long long v33 = 0uLL;
        char v35 = 0;
        a5(&v32);

        sub_25AB16944(a1, a2);
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      if ((v22 | 2) == 0x193)
      {
        long long v23 = xmmword_25AC38B90;
        long long v24 = xmmword_25AC38BA0;
        uint64_t v25 = "Authentication error";
LABEL_21:
        long long v32 = v23;
        long long v33 = v24;
        unint64_t v34 = (unint64_t)(v25 - 32) | 0x8000000000000000;
        char v35 = 1;
        a5(&v32);

        return sub_25AB16944(a1, a2);
      }
      uint64_t v28 = sub_25AB88A70();
      if (v29)
      {
        *(void *)&long long v32 = 4;
        *((void *)&v32 + 1) = v28;
        *(void *)&long long v33 = v29;
        *((void *)&v33 + 1) = v30;
        unint64_t v34 = v31;
        char v35 = 1;
        a5(&v32);

        sub_25AB16944(a1, a2);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
    long long v23 = xmmword_25AC38BD0;
    long long v24 = xmmword_25AC38BE0;
    uint64_t v25 = "Protocol build or parse error";
    goto LABEL_21;
  }
  long long v9 = xmmword_25AC38BB0;
  long long v10 = xmmword_25AC38BC0;
  uint64_t v11 = "Server not reachable";
LABEL_10:
  long long v32 = v9;
  long long v33 = v10;
  unint64_t v34 = (unint64_t)(v11 - 32) | 0x8000000000000000;
  char v35 = 1;
  return ((uint64_t (*)(long long *))a5)(&v32);
}

uint64_t sub_25AB41338(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v6 = a2;
  id v7 = *(void (**)(void *, unint64_t, void *, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v8 = v6;
    uint64_t v6 = (void *)sub_25AC323A0();
    unint64_t v10 = v9;
  }
  else
  {
    swift_retain();
    unint64_t v10 = 0xF000000000000000;
  }
  id v11 = a3;
  id v12 = a4;
  v7(v6, v10, a3, a4);

  sub_25AB16944((uint64_t)v6, v10);
  return swift_release();
}

uint64_t sub_25AB41400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[16] = a3;
  v4[17] = a4;
  v4[14] = a1;
  v4[15] = a2;
  uint64_t v5 = sub_25AC31FA0();
  v4[18] = v5;
  v4[19] = *(void *)(v5 - 8);
  v4[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD30);
  v4[21] = swift_task_alloc();
  uint64_t v6 = sub_25AC32300();
  v4[22] = v6;
  v4[23] = *(void *)(v6 - 8);
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB41560);
}

uint64_t sub_25AB41560()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[23];
  uint64_t v16 = v0[24];
  uint64_t v17 = v0[22];
  uint64_t v4 = v0[20];
  uint64_t v5 = v0[21];
  uint64_t v6 = v0[17];
  uint64_t v18 = v0[16];
  id v19 = v0 + 8;
  uint64_t v7 = v0[15];
  sub_25AC35580();
  swift_bridgeObjectRelease();
  sub_25AC33710();
  sub_25AC34F60();
  swift_bridgeObjectRelease();
  sub_25AC34F60();
  sub_25AB37904(*(unsigned char *)(v7 + 96));
  sub_25AC322E0();
  swift_bridgeObjectRelease();
  sub_25AC32250();
  swift_bridgeObjectRelease();
  sub_25AB18FAC(v5, &qword_26A49FD30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v16, v2, v17);
  sub_25AC336F0();
  sub_25AC31F60();
  sub_25AC31F20();
  uint64_t v8 = *(void *)(v7 + 32);
  uint64_t v9 = *(void *)(v7 + 40);
  uint64_t v10 = *(void *)(v7 + 64);
  uint64_t v11 = *(void *)(v7 + 72);
  void v1[2] = v18;
  v1[3] = v6;
  v1[4] = v8;
  v1[5] = v9;
  v1[6] = v10;
  v1[7] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25ABE3C34();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25AC31F90();
  uint64_t v12 = swift_task_alloc();
  v1[26] = v12;
  *(void *)(v12 + 16) = v4;
  uint64_t v13 = (void *)swift_task_alloc();
  v1[27] = v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A01B8);
  *uint64_t v13 = v1;
  v13[1] = sub_25AB41800;
  return MEMORY[0x270FA2318](v19, 0, 0, 0xD00000000000001FLL, 0x800000025AC3E530, sub_25AB42B50, v12, v14);
}

uint64_t sub_25AB41800()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25AB41918);
}

uint64_t sub_25AB41918()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 112);
  (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 200), *(void *)(v0 + 176));
  long long v9 = *(_OWORD *)(v0 + 80);
  long long v10 = *(_OWORD *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 96);
  char v6 = *(unsigned char *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)uint64_t v4 = v10;
  *(_OWORD *)(v4 + 16) = v9;
  *(void *)(v4 + 32) = v5;
  *(unsigned char *)(v4 + 40) = v6;
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

id sub_25AB41A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  id v8 = objc_allocWithZone(MEMORY[0x263F089E0]);
  long long v9 = (void *)sub_25AC32290();
  id v10 = objc_msgSend(v8, sel_initWithURL_, v9);

  uint64_t v11 = (void *)sub_25AC34E10();
  objc_msgSend(v10, sel_setHTTPMethod_, v11);

  uint64_t v12 = (void *)sub_25AC34E10();
  uint64_t v13 = (void *)sub_25AC34E10();
  objc_msgSend(v10, sel_addValue_forHTTPHeaderField_, v12, v13);

  sub_25AC32970();
  uint64_t v14 = (void *)sub_25AC34E10();
  swift_bridgeObjectRelease();
  sub_25AC32960();
  uint64_t v15 = (void *)sub_25AC34E10();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_ak_addAuthorizationHeaderWithServiceToken_forAltDSID_, v14, v15);

  objc_msgSend(v10, sel_ak_addClientInfoHeader);
  objc_msgSend(v10, sel_ak_addDeviceUDIDHeader);
  objc_msgSend(v10, sel_ak_addDeviceSerialNumberHeader);
  objc_msgSend(v10, sel_ak_addInternalBuildHeader);
  objc_msgSend(v10, sel_ak_addFeatureMaskHeader);
  objc_msgSend(v10, sel_ak_addLocaleHeader);
  objc_msgSend(v10, sel_ak_addTimeZoneHeaders);
  objc_msgSend(v10, sel_ak_addDeviceMLBHeader);
  objc_msgSend(v10, sel_ak_addDeviceROMHeader);
  if (a6 >> 60 != 15)
  {
    sub_25AB29558(a5, a6);
    uint64_t v16 = (void *)sub_25AC32380();
    objc_msgSend(v10, sel_setHTTPBody_, v16);

    sub_25AB16944(a5, a6);
  }
  return v10;
}

uint64_t sub_25AB41C5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 169) = a4;
  *(void *)(v4 + 184) = a2;
  *(void *)(v4 + 192) = a3;
  *(void *)(v4 + 176) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD30);
  *(void *)(v4 + 200) = swift_task_alloc();
  uint64_t v5 = sub_25AC32300();
  *(void *)(v4 + 208) = v5;
  *(void *)(v4 + 216) = *(void *)(v5 - 8);
  *(void *)(v4 + 224) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB41D54);
}

uint64_t sub_25AB41D54()
{
  uint64_t v1 = (void *)v0;
  uint64_t v34 = v0 + 128;
  uint64_t v32 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 200);
  int v33 = *(unsigned __int8 *)(v0 + 169);
  uint64_t v4 = *(void *)(v0 + 184);
  sub_25AC35580();
  swift_bridgeObjectRelease();
  sub_25AC33710();
  sub_25AC34F60();
  swift_bridgeObjectRelease();
  sub_25AC34F60();
  sub_25AB37904(*(unsigned char *)(v4 + 96));
  sub_25AC322E0();
  swift_bridgeObjectRelease();
  sub_25AC32250();
  swift_bridgeObjectRelease();
  sub_25AB18FAC(v2, &qword_26A49FD30);
  sub_25AC345B0();
  sub_25AC344C0();
  uint64_t v31 = v3;
  uint64_t v5 = sub_25AC32940();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v4 + 72);
  uint64_t v9 = *(void *)(v4 + 40);
  uint64_t v29 = *(void *)(v4 + 32);
  uint64_t v30 = *(void *)(v4 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_25AC33FF0();
  uint64_t v11 = v10;
  uint64_t v27 = sub_25AC32930();
  uint64_t v13 = v12;
  uint64_t v26 = sub_25AC340C0();
  uint64_t v15 = v14;
  sub_25AC34F60();
  swift_bridgeObjectRelease();
  void v1[2] = v5;
  v1[3] = v7;
  v1[4] = v30;
  v1[5] = v8;
  v1[6] = v29;
  v1[7] = v9;
  v1[8] = v28;
  v1[9] = v11;
  v1[10] = v27;
  v1[11] = v13;
  v1[12] = v26;
  v1[13] = v15;
  v1[14] = 0x4F20656E6F685069;
  v1[15] = 0xEA00000000003B53;
  uint64_t v16 = sub_25ABE4058();
  unint64_t v18 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v33) {
    uint64_t v19 = 5526864;
  }
  else {
    uint64_t v19 = 1414745936;
  }
  if (v33) {
    uint64_t v20 = 0xE300000000000000;
  }
  else {
    uint64_t v20 = 0xE400000000000000;
  }
  v1[29] = v18;
  v1[30] = v16;
  id v21 = sub_25AB41A18(v32, v31, v19, v20, v16, v18);
  v1[31] = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = swift_task_alloc();
  v1[32] = v22;
  *(unsigned char *)(v22 + 16) = v33;
  *(void *)(v22 + 24) = v21;
  long long v23 = (void *)swift_task_alloc();
  v1[33] = v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0190);
  *long long v23 = v1;
  v23[1] = sub_25AB420BC;
  return MEMORY[0x270FA2318](v34, 0, 0, 0xD000000000000022, 0x800000025AC3E590, sub_25AB42D34, v22, v24);
}

uint64_t sub_25AB420BC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25AB421D4);
}

uint64_t sub_25AB421D4()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v3 = *(void *)(v0 + 224);
  unint64_t v2 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 216);
  uint64_t v6 = *(void *)(v0 + 176);

  sub_25AB16944(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  long long v10 = *(_OWORD *)(v0 + 144);
  long long v11 = *(_OWORD *)(v0 + 128);
  uint64_t v7 = *(void *)(v0 + 160);
  LOBYTE(v2) = *(unsigned char *)(v0 + 168);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)uint64_t v6 = v11;
  *(_OWORD *)(v6 + 16) = v10;
  *(void *)(v6 + 32) = v7;
  *(unsigned char *)(v6 + 40) = v2;
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_25AB422B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[20] = a2;
  v3[21] = a3;
  v3[19] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD30);
  v3[22] = swift_task_alloc();
  uint64_t v4 = sub_25AC32300();
  v3[23] = v4;
  v3[24] = *(void *)(v4 - 8);
  v3[25] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB423AC);
}

uint64_t sub_25AB423AC()
{
  uint64_t v1 = v0;
  uint64_t v26 = v0[25];
  uint64_t v27 = v0 + 13;
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[22];
  uint64_t v4 = v0[20];
  sub_25AC35580();
  swift_bridgeObjectRelease();
  sub_25AC33710();
  sub_25AC34F60();
  swift_bridgeObjectRelease();
  sub_25AC34F60();
  sub_25AB37904(*(unsigned char *)(v4 + 96));
  sub_25AC322E0();
  swift_bridgeObjectRelease();
  sub_25AC32250();
  swift_bridgeObjectRelease();
  sub_25AB18FAC(v3, &qword_26A49FD30);
  uint64_t v25 = v2;
  uint64_t v5 = sub_25AC32940();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v4 + 64);
  uint64_t v9 = *(void *)(v4 + 72);
  uint64_t v10 = *(void *)(v4 + 40);
  uint64_t v24 = *(void *)(v4 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_25AC33FF0();
  uint64_t v13 = v12;
  uint64_t v14 = sub_25AC32930();
  void v1[2] = v5;
  v1[3] = v7;
  v1[4] = v8;
  v1[5] = v9;
  v1[6] = v24;
  v1[7] = v10;
  v1[8] = v11;
  v1[9] = v13;
  v1[10] = v14;
  v1[11] = v15;
  *((unsigned char *)v1 + 96) = 1;
  uint64_t v16 = sub_25ABE44A4();
  unint64_t v18 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1[26] = v16;
  v1[27] = v18;
  id v19 = sub_25AB41A18(v26, v25, 1414745936, 0xE400000000000000, v16, v18);
  v1[28] = v19;
  uint64_t v20 = swift_task_alloc();
  v1[29] = v20;
  *(void *)(v20 + 16) = v19;
  id v21 = (void *)swift_task_alloc();
  v1[30] = v21;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0190);
  *id v21 = v1;
  v21[1] = sub_25AB42658;
  return MEMORY[0x270FA2318](v27, 0, 0, 0xD00000000000001CLL, 0x800000025AC3E3F0, sub_25AB42854, v20, v22);
}

uint64_t sub_25AB42658()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25AB42770);
}

uint64_t sub_25AB42770()
{
  unint64_t v1 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 192);
  uint64_t v6 = *(void *)(v0 + 152);

  sub_25AB16944(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  long long v10 = *(_OWORD *)(v0 + 120);
  long long v11 = *(_OWORD *)(v0 + 104);
  uint64_t v7 = *(void *)(v0 + 136);
  LOBYTE(v2) = *(unsigned char *)(v0 + 144);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)uint64_t v6 = v11;
  *(_OWORD *)(v6 + 16) = v10;
  *(void *)(v6 + 32) = v7;
  *(unsigned char *)(v6 + 40) = v2;
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_25AB42854(uint64_t a1)
{
  return sub_25AB3D9C8(a1, *(void *)(v1 + 16));
}

uint64_t sub_25AB4285C()
{
  return objectdestroyTm_0(&qword_26A4A0198);
}

uint64_t sub_25AB4286C()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25AB428A8(uint64_t a1)
{
  return sub_25AB42BFC(a1, &qword_26A4A01A0, (void (*)(uint64_t, void, void, uint64_t (*)(void), uint64_t))sub_25AB3FF68);
}

void sub_25AB428C8()
{
  sub_25AB49EF8(*(void **)(v0 + 16));
}

uint64_t sub_25AB428E8(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  return sub_25AB42F88(a1, a2, a3, a4, (uint64_t (*)(uint64_t, unint64_t))sub_25AB8B12C);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_25AB42918(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25AB42964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25AB4297C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25AB40BB0);
}

uint64_t sub_25AB4297C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = *(void *)(sub_25AC31FA0() - 8);
  uint64_t v11 = *(void *)(v5 + 16);
  uint64_t v12 = *(void *)(v5 + 24);
  uint64_t v13 = v5 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return a5(a1, a2, a3, a4, v11, v12, v13);
}

uint64_t *sub_25AB42A2C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_25AB42A64(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25AB42AB4(uint64_t a1)
{
  return a1;
}

uint64_t sub_25AB42AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) == 0) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB42B50(uint64_t a1)
{
  return sub_25AB3CF5C(a1, *(void *)(v1 + 16));
}

uint64_t sub_25AB42B58()
{
  return objectdestroyTm_0(&qword_26A4A01C0);
}

uint64_t sub_25AB42B64(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A01C0);
  return sub_25AB3D364(a1);
}

uint64_t sub_25AB42BDC(uint64_t a1)
{
  return sub_25AB42BFC(a1, &qword_26A4A01B8, (void (*)(uint64_t, void, void, uint64_t (*)(void), uint64_t))sub_25AB3FE24);
}

uint64_t sub_25AB42BFC(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, void, void, uint64_t (*)(void), uint64_t))
{
  uint64_t v7 = *(void *)(sub_25AC31FA0() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (uint64_t (*)(unsigned char *))v3[2];
  uint64_t v10 = v3[3];
  uint64_t v11 = v3[4];
  uint64_t v12 = (uint64_t)v3 + v8;
  char v13 = *((unsigned char *)v3 + v8 + *(void *)(v7 + 64));
  sub_25AB259D8(a1, (uint64_t)v15, a2);
  return sub_25AB3F3E8((uint64_t)v15, v9, v10, v11, v12, v13, a2, a3);
}

uint64_t sub_25AB42CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25AB4297C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25AB40EAC);
}

uint64_t sub_25AB42CFC(uint64_t a1)
{
  return a1;
}

uint64_t sub_25AB42D34(uint64_t a1)
{
  return sub_25AB3D3F4(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_25AB42D40()
{
  return objectdestroyTm_0(&qword_26A4A0198);
}

uint64_t sub_25AB42D4C(uint64_t a1)
{
  return sub_25AB3DDA0(a1);
}

uint64_t sub_25AB42DB8(uint64_t a1)
{
  return sub_25AB42BFC(a1, &qword_26A4A01D8, (void (*)(uint64_t, void, void, uint64_t (*)(void), uint64_t))sub_25AB3FE90);
}

uint64_t sub_25AB42DD8()
{
  return objectdestroyTm_0(&qword_26A4A0198);
}

uint64_t objectdestroyTm_0(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return MEMORY[0x270FA0238](v1, v6, v7);
}

uint64_t objectdestroy_7Tm()
{
  uint64_t v1 = sub_25AC31FA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_25AB42F4C(uint64_t a1)
{
  return sub_25AB42BFC(a1, &qword_26A4A01D0, (void (*)(uint64_t, void, void, uint64_t (*)(void), uint64_t))sub_25AB3FEFC);
}

uint64_t sub_25AB42F70(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  return sub_25AB42F88(a1, a2, a3, a4, (uint64_t (*)(uint64_t, unint64_t))sub_25AB8AD14);
}

uint64_t sub_25AB42F88(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(uint64_t, unint64_t))
{
  uint64_t v11 = *(void *)(sub_25AC31FA0() - 8);
  return sub_25AB410F0(a1, a2, a3, a4, *(void (**)(long long *))(v5 + 16), *(void *)(v5 + 24), v5 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), a5);
}

uint64_t objectdestroy_10Tm()
{
  uint64_t v1 = sub_25AC31FA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_25AB430F0(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  return sub_25AB42F88(a1, a2, a3, a4, (uint64_t (*)(uint64_t, unint64_t))sub_25AB8A8FC);
}

uint64_t destroy for EnrollmentRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for EnrollmentRequest(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EnrollmentRequest(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

void *assignWithTake for EnrollmentRequest(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EnrollmentRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EnrollmentRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EnrollmentRequest()
{
  return &type metadata for EnrollmentRequest;
}

void *initializeBufferWithCopyOfBuffer for DiscoveryManifest(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for DiscoveryManifest()
{
  return swift_bridgeObjectRelease();
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for DiscoveryManifest(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for EnrollmentResponse()
{
  return &type metadata for EnrollmentResponse;
}

ValueMetadata *type metadata accessor for ReEnrollmentResponse()
{
  return &type metadata for ReEnrollmentResponse;
}

ValueMetadata *type metadata accessor for VerifyMerchantRequest()
{
  return &type metadata for VerifyMerchantRequest;
}

uint64_t sub_25AB4354C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VerifyMerchantResponse(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for VerifyMerchantResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for VerifyMerchantResponse(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VerifyMerchantResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VerifyMerchantResponse()
{
  return &type metadata for VerifyMerchantResponse;
}

uint64_t initializeWithCopy for SubscriptionRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SubscriptionRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for SubscriptionRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 81)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 81) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionRequest()
{
  return &type metadata for SubscriptionRequest;
}

void *assignWithCopy for DiscoveryManifest(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DiscoveryManifest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DiscoveryManifest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionResponse()
{
  return &type metadata for SubscriptionResponse;
}

unint64_t sub_25AB43A54()
{
  unint64_t result = qword_26A4A01E8;
  if (!qword_26A4A01E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A01E8);
  }
  return result;
}

unint64_t sub_25AB43AA8()
{
  unint64_t result = qword_26A4A01F8;
  if (!qword_26A4A01F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A01F8);
  }
  return result;
}

uint64_t sub_25AB43AFC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x5472656E74726170 && a2 == 0xEC0000006E656B6FLL;
  if (v2 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C646E7542707061 && a2 == 0xEB00000000644965 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025AC3D670)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_25AC35870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_25AB43C80(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001ALL && a2 == 0x800000025AC3E600 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C416B6E696C6572 && a2 == 0xED00006465776F6CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_25AC35870();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25AB43D94(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0200);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB43F80();
  sub_25AC359F0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v9[15] = 0;
    uint64_t v7 = sub_25AC35760();
    v9[14] = 1;
    swift_bridgeObjectRetain();
    sub_25AC35740();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_25AB43F80()
{
  unint64_t result = qword_26A4A0208;
  if (!qword_26A4A0208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0208);
  }
  return result;
}

unint64_t sub_25AB43FD4()
{
  unint64_t result = qword_26A4A0218;
  if (!qword_26A4A0218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0218);
  }
  return result;
}

unint64_t sub_25AB44028()
{
  unint64_t result = qword_26A4A0228;
  if (!qword_26A4A0228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0228);
  }
  return result;
}

unint64_t sub_25AB4407C()
{
  unint64_t result = qword_26A4A0238;
  if (!qword_26A4A0238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0238);
  }
  return result;
}

unint64_t sub_25AB440D0()
{
  unint64_t result = qword_26A4A0248;
  if (!qword_26A4A0248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0248);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EnrollmentRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EnrollmentRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB44280);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EnrollmentRequest.CodingKeys()
{
  return &type metadata for EnrollmentRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for EnrollmentResponse.CodingKeys()
{
  return &type metadata for EnrollmentResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for ReEnrollmentResponse.CodingKeys()
{
  return &type metadata for ReEnrollmentResponse.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for VerifyMerchantRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB443ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VerifyMerchantRequest.CodingKeys()
{
  return &type metadata for VerifyMerchantRequest.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for VerifyMerchantResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB444B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VerifyMerchantResponse.CodingKeys()
{
  return &type metadata for VerifyMerchantResponse.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SubscriptionRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB445B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionRequest.CodingKeys()
{
  return &type metadata for SubscriptionRequest.CodingKeys;
}

unsigned char *_s21ProximityReaderDaemon18EnrollmentResponseV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25AB44688);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionResponse.CodingKeys()
{
  return &type metadata for SubscriptionResponse.CodingKeys;
}

unint64_t sub_25AB446C4()
{
  unint64_t result = qword_26A4A0270;
  if (!qword_26A4A0270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0270);
  }
  return result;
}

unint64_t sub_25AB4471C()
{
  unint64_t result = qword_26A4A0278;
  if (!qword_26A4A0278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0278);
  }
  return result;
}

unint64_t sub_25AB44774()
{
  unint64_t result = qword_26A4A0280;
  if (!qword_26A4A0280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0280);
  }
  return result;
}

unint64_t sub_25AB447CC()
{
  unint64_t result = qword_26A4A0288;
  if (!qword_26A4A0288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0288);
  }
  return result;
}

unint64_t sub_25AB44824()
{
  unint64_t result = qword_26A4A0290;
  if (!qword_26A4A0290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0290);
  }
  return result;
}

unint64_t sub_25AB4487C()
{
  unint64_t result = qword_26A4A0298;
  if (!qword_26A4A0298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0298);
  }
  return result;
}

unint64_t sub_25AB448D4()
{
  unint64_t result = qword_26A4A02A0;
  if (!qword_26A4A02A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A02A0);
  }
  return result;
}

unint64_t sub_25AB4492C()
{
  unint64_t result = qword_26A4A02A8;
  if (!qword_26A4A02A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A02A8);
  }
  return result;
}

unint64_t sub_25AB44984()
{
  unint64_t result = qword_26A4A02B0;
  if (!qword_26A4A02B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A02B0);
  }
  return result;
}

unint64_t sub_25AB449DC()
{
  unint64_t result = qword_26A4A02B8;
  if (!qword_26A4A02B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A02B8);
  }
  return result;
}

unint64_t sub_25AB44A34()
{
  unint64_t result = qword_26A4A02C0;
  if (!qword_26A4A02C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A02C0);
  }
  return result;
}

unint64_t sub_25AB44A8C()
{
  unint64_t result = qword_26A4A02C8;
  if (!qword_26A4A02C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A02C8);
  }
  return result;
}

unint64_t sub_25AB44AE4()
{
  unint64_t result = qword_26A4A02D0;
  if (!qword_26A4A02D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A02D0);
  }
  return result;
}

unint64_t sub_25AB44B3C()
{
  unint64_t result = qword_26A4A02D8;
  if (!qword_26A4A02D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A02D8);
  }
  return result;
}

unint64_t sub_25AB44B94()
{
  unint64_t result = qword_26A4A02E0;
  if (!qword_26A4A02E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A02E0);
  }
  return result;
}

unint64_t sub_25AB44BEC()
{
  unint64_t result = qword_26A4A02E8;
  if (!qword_26A4A02E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A02E8);
  }
  return result;
}

unint64_t sub_25AB44C44()
{
  unint64_t result = qword_26A4A02F0;
  if (!qword_26A4A02F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A02F0);
  }
  return result;
}

unint64_t sub_25AB44C9C()
{
  unint64_t result = qword_26A4A02F8;
  if (!qword_26A4A02F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A02F8);
  }
  return result;
}

unint64_t sub_25AB44CF4()
{
  unint64_t result = qword_26A4A0300;
  if (!qword_26A4A0300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0300);
  }
  return result;
}

unint64_t sub_25AB44D4C()
{
  unint64_t result = qword_26A4A0308;
  if (!qword_26A4A0308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0308);
  }
  return result;
}

unint64_t sub_25AB44DA4()
{
  unint64_t result = qword_26A4A0310;
  if (!qword_26A4A0310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0310);
  }
  return result;
}

uint64_t sub_25AB44DF8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x5472656E74726170 && a2 == 0xEC0000006E656B6FLL;
  if (v2 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025AC3D670 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C646E7542707061 && a2 == 0xEB00000000644965 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6564496E656B6F74 && a2 == 0xEF7265696669746ELL || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F4C656369766564 && a2 == 0xEC000000656C6163 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6973726556736F74 && a2 == 0xEA00000000006E6FLL || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F6973726556736FLL && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_25AC35870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_25AB4515C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000025AC3E620)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_25AC35870();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_25AB451E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x5472656E74726170 && a2 == 0xEC0000006E656B6FLL;
  if (v2 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025AC3D670 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C646E7542707061 && a2 == 0xEB00000000644965 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6564496E656B6F74 && a2 == 0xEF7265696669746ELL || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F4C656369766564 && a2 == 0xEC000000656C6163 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000025AC3E5E0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_25AC35870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_25AB454C8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x800000025AC3E5C0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_25AC35870();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void sub_25AB4557C()
{
}

uint64_t type metadata accessor for Mock()
{
  return self;
}

id sub_25AB455C4()
{
  uint64_t v0 = (uint64_t (*)(void))sub_25AC34000();
  char v1 = v0();
  swift_release();
  if ((v1 & 1) == 0) {
    return 0;
  }
  char v2 = (uint64_t (*)(void))sub_25AC34000();
  char v3 = v2();
  swift_release();
  if (v3)
  {
    id v4 = objc_msgSend(self, sel_standardUserDefaults);
    uint64_t v5 = (void *)sub_25AC34E10();
    id v6 = objc_msgSend(v4, sel_BOOLForKey_, v5);
  }
  else
  {
    id v6 = 0;
  }
  id v7 = objc_msgSend(self, sel_standardUserDefaults);
  int v8 = (void *)sub_25AC34E10();
  objc_msgSend(v7, sel_removeObjectForKey_, v8);

  return v6;
}

uint64_t sub_25AB456F0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  __swift_allocate_value_buffer(v0, qword_26A4A1C40);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1C40);
  sub_25AC345D0();
  uint64_t v2 = sub_25AC345E0();
  char v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(v1, 0, 1, v2);
}

uint64_t sub_25AB457B4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  __swift_allocate_value_buffer(v0, qword_26A4A1C58);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1C58);
  sub_25AC345D0();
  uint64_t v2 = sub_25AC345E0();
  char v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(v1, 0, 1, v2);
}

uint64_t sub_25AB4588C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  __swift_allocate_value_buffer(v0, qword_26A4A1C70);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1C70);
  sub_25AC345D0();
  uint64_t v2 = sub_25AC345E0();
  char v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(v1, 0, 1, v2);
}

uint64_t sub_25AB45960()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  __swift_allocate_value_buffer(v0, qword_26A4A1C88);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1C88);
  sub_25AC345D0();
  uint64_t v2 = sub_25AC345E0();
  char v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(v1, 0, 1, v2);
}

uint64_t sub_25AB45A38()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  __swift_allocate_value_buffer(v0, qword_26A4A1CA0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1CA0);
  sub_25AC345D0();
  uint64_t v2 = sub_25AC345E0();
  char v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(v1, 0, 1, v2);
}

uint64_t sub_25AB45B00()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  __swift_allocate_value_buffer(v0, qword_26A4A1CB8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1CB8);
  sub_25AC345D0();
  uint64_t v2 = sub_25AC345E0();
  char v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(v1, 0, 1, v2);
}

uint64_t sub_25AB45BC8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  __swift_allocate_value_buffer(v0, qword_26A4A1CD0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1CD0);
  sub_25AC345D0();
  uint64_t v2 = sub_25AC345E0();
  char v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(v1, 0, 1, v2);
}

uint64_t sub_25AB45C90()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  __swift_allocate_value_buffer(v0, qword_26A4A1CE8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1CE8);
  sub_25AC345D0();
  uint64_t v2 = sub_25AC345E0();
  char v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(v1, 0, 1, v2);
}

uint64_t sub_25AB45D54()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  __swift_allocate_value_buffer(v0, qword_26A4A1D00);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1D00);
  sub_25AC345D0();
  uint64_t v2 = sub_25AC345E0();
  char v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(v1, 0, 1, v2);
}

uint64_t sub_25AB45E20()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  __swift_allocate_value_buffer(v0, qword_26A4A1D18);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1D18);
  sub_25AC345D0();
  uint64_t v2 = sub_25AC345E0();
  char v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(v1, 0, 1, v2);
}

uint64_t sub_25AB45EF4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  __swift_allocate_value_buffer(v0, qword_26A4A1D30);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1D30);
  sub_25AC345D0();
  uint64_t v2 = sub_25AC345E0();
  char v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(v1, 0, 1, v2);
}

uint64_t sub_25AB45FC4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  __swift_allocate_value_buffer(v0, qword_26A4A1D48);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1D48);
  sub_25AC345D0();
  uint64_t v2 = sub_25AC345E0();
  char v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(v1, 0, 1, v2);
}

uint64_t sub_25AB46090()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  __swift_allocate_value_buffer(v0, qword_26A4A1D60);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1D60);
  sub_25AC345D0();
  uint64_t v2 = sub_25AC345E0();
  char v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(v1, 0, 1, v2);
}

uint64_t sub_25AB46168()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  __swift_allocate_value_buffer(v0, qword_26A4A1D78);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1D78);
  sub_25AC345D0();
  uint64_t v2 = sub_25AC345E0();
  char v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(v1, 0, 1, v2);
}

uint64_t sub_25AB46238()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  __swift_allocate_value_buffer(v0, qword_26A4A1D90);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1D90);
  sub_25AC345D0();
  uint64_t v2 = sub_25AC345E0();
  char v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(v1, 0, 1, v2);
}

uint64_t sub_25AB4630C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  __swift_allocate_value_buffer(v0, qword_26A4A1DA8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1DA8);
  sub_25AC345D0();
  uint64_t v2 = sub_25AC345E0();
  char v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(v1, 0, 1, v2);
}

uint64_t sub_25AB463DC()
{
  uint64_t result = MCGestaltIsInternalBuild();
  byte_26A4A1DC0 = result;
  return result;
}

uint64_t type metadata accessor for PRLoggers()
{
  return self;
}

unint64_t sub_25AB46420(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t result = sub_25AC34F40();
  if (v4) {
    uint64_t result = 15;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_12;
  }
  return sub_25AC35010();
}

void sub_25AB464DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  if (qword_26A49F848 != -1) {
    swift_once();
  }
  if (byte_26A4A1DC0 == 1)
  {
    uint64_t v9 = HIBYTE(a5) & 0xF;
    if ((a5 & 0x2000000000000000) == 0) {
      uint64_t v9 = a4 & 0xFFFFFFFFFFFFLL;
    }
    if (v9)
    {
      uint64_t v30 = a2;
      unint64_t v31 = a3;
      swift_bridgeObjectRetain();
      sub_25AC34F60();
      sub_25AC34F60();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    uint64_t v30 = sub_25AC34DF0();
    unint64_t v31 = v10;
    sub_25AB25ABC();
    uint64_t v11 = sub_25AC354D0();
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    unint64_t v14 = sub_25AB46420(8uLL, v11, v13);
    uint64_t v16 = v15;
    uint64_t v29 = v17;
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_25AC345C0();
    os_log_type_t v21 = sub_25AC352A0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v30 = v28;
      *(_DWORD *)uint64_t v22 = 136381187;
      swift_getObjectType();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0318);
      uint64_t v23 = sub_25AC34EB0();
      sub_25AB56574(v23, v24, &v30);
      sub_25AC354A0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v25 = MEMORY[0x261150A30](v14, v16, v29, v19);
      unint64_t v27 = v26;
      swift_bridgeObjectRelease();
      sub_25AB56574(v25, v27, &v30);
      sub_25AC354A0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 22) = 2081;
      swift_bridgeObjectRetain();
      sub_25AB56574(a2, a3, &v30);
      sub_25AC354A0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25AB11000, v20, v21, "(o)%{private}s-%{private}s.%{private}s", (uint8_t *)v22, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x261151C20](v28, -1, -1);
      MEMORY[0x261151C20](v22, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_unknownObjectRelease_n();
    }
  }
}

_OWORD *sub_25AB46888@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0320);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25AC32420();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StoreAndForwardMonitorEvent();
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AB4710C(v2, (uint64_t)v13);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      long long v20 = *(_OWORD *)v13;
      long long v104 = *((_OWORD *)v13 + 1);
      long long v105 = v20;
      long long v21 = *((_OWORD *)v13 + 2);
      long long v102 = *((_OWORD *)v13 + 3);
      long long v103 = v21;
      long long v101 = *((_OWORD *)v13 + 4);
      uint64_t v22 = *((void *)v13 + 10);
      uint64_t v99 = *((void *)v13 + 11);
      uint64_t v100 = v22;
      uint64_t v98 = *((unsigned int *)v13 + 24);
      uint64_t v97 = *((void *)v13 + 13);
      __int16 v23 = v13[112];
      int v24 = v13[113];
      uint64_t v25 = *((void *)v13 + 15);
      uint64_t v106 = *((void *)v13 + 16);
      uint64_t v107 = v25;
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0338);
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, &v13[*(int *)(v26 + 64)], v7);
      if (v24) {
        __int16 v27 = 256;
      }
      else {
        __int16 v27 = 0;
      }
      long long v120 = v105;
      long long v121 = v104;
      long long v122 = v103;
      long long v123 = v102;
      long long v124 = v101;
      uint64_t v125 = v100;
      uint64_t v126 = v99;
      uint64_t v127 = v98;
      uint64_t v128 = v97;
      __int16 v129 = v27 | v23;
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v6, v10, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
      sub_25AB4767C((uint64_t *)&v120, v107, v106, (uint64_t)v6, 0, 1, 0, 0, (uint64_t *)&v111);
      uint64_t v109 = &type metadata for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails;
      unint64_t v110 = sub_25AB47C48();
      uint64_t v28 = (_OWORD *)swift_allocObject();
      *(void *)&long long v108 = v28;
      long long v29 = v118;
      v28[7] = v117;
      v28[8] = v29;
      v28[9] = v119;
      long long v30 = v114;
      v28[3] = v113;
      v28[4] = v30;
      long long v31 = v116;
      v28[5] = v115;
      v28[6] = v31;
      long long v32 = v112;
      v28[1] = v111;
      v28[2] = v32;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      *(unsigned char *)a1 = 16;
      return (_OWORD *)sub_25AB47E04(&v108, a1 + 8);
    case 2u:
      long long v33 = *(_OWORD *)v13;
      long long v34 = *((_OWORD *)v13 + 1);
      long long v35 = *((_OWORD *)v13 + 2);
      long long v36 = *((_OWORD *)v13 + 3);
      long long v37 = *((_OWORD *)v13 + 4);
      uint64_t v38 = *((void *)v13 + 10);
      uint64_t v39 = *((void *)v13 + 11);
      uint64_t v40 = *((unsigned int *)v13 + 24);
      uint64_t v41 = *((void *)v13 + 13);
      __int16 v42 = v13[112];
      int v43 = v13[113];
      uint64_t v44 = *((void *)v13 + 15);
      uint64_t v45 = *((void *)v13 + 16);
      if (v43) {
        __int16 v46 = 256;
      }
      else {
        __int16 v46 = 0;
      }
      long long v120 = v33;
      long long v121 = v34;
      long long v122 = v35;
      long long v123 = v36;
      long long v124 = v37;
      uint64_t v125 = v38;
      uint64_t v126 = v39;
      uint64_t v127 = v40;
      uint64_t v128 = v41;
      __int16 v129 = v46 | v42;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
      sub_25AB4767C((uint64_t *)&v120, 0, 0, (uint64_t)v6, 0, 1, v44, v45, (uint64_t *)&v111);
      *(void *)(a1 + 32) = &type metadata for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails;
      *(void *)(a1 + 40) = sub_25AB47C48();
      uint64_t result = (_OWORD *)swift_allocObject();
      *(void *)(a1 + 8) = result;
      long long v47 = v118;
      result[7] = v117;
      result[8] = v47;
      result[9] = v119;
      long long v48 = v114;
      result[3] = v113;
      result[4] = v48;
      long long v49 = v116;
      result[5] = v115;
      result[6] = v49;
      long long v50 = v112;
      result[1] = v111;
      result[2] = v50;
      char v19 = 18;
      goto LABEL_21;
    case 3u:
      long long v51 = *((_OWORD *)v13 + 1);
      long long v52 = *((_OWORD *)v13 + 2);
      long long v53 = *((_OWORD *)v13 + 3);
      long long v54 = *((_OWORD *)v13 + 4);
      uint64_t v55 = *((void *)v13 + 10);
      uint64_t v56 = *((void *)v13 + 11);
      uint64_t v57 = *((unsigned int *)v13 + 24);
      uint64_t v58 = *((void *)v13 + 13);
      __int16 v59 = v13[112];
      uint64_t v60 = *((void *)v13 + 15);
      if (v13[113]) {
        __int16 v61 = 256;
      }
      else {
        __int16 v61 = 0;
      }
      long long v120 = *(_OWORD *)v13;
      long long v121 = v51;
      long long v122 = v52;
      long long v123 = v53;
      long long v124 = v54;
      uint64_t v125 = v55;
      uint64_t v126 = v56;
      uint64_t v127 = v57;
      uint64_t v128 = v58;
      __int16 v129 = v61 | v59;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
      sub_25AB4767C((uint64_t *)&v120, 0, 0, (uint64_t)v6, v60, 0, 0, 0, (uint64_t *)&v111);
      *(void *)(a1 + 32) = &type metadata for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails;
      *(void *)(a1 + 40) = sub_25AB47C48();
      uint64_t result = (_OWORD *)swift_allocObject();
      *(void *)(a1 + 8) = result;
      long long v62 = v118;
      result[7] = v117;
      result[8] = v62;
      result[9] = v119;
      long long v63 = v114;
      result[3] = v113;
      result[4] = v63;
      long long v64 = v116;
      result[5] = v115;
      result[6] = v64;
      long long v65 = v112;
      result[1] = v111;
      result[2] = v65;
      char v19 = 19;
      goto LABEL_21;
    case 4u:
      sub_25AB47170((uint64_t)v13, (uint64_t)&v120);
      uint64_t v66 = *((void *)v13 + 15);
      int v67 = v13[128];
      uint64_t v69 = *((void *)v13 + 17);
      uint64_t v68 = *((void *)v13 + 18);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
      sub_25AB4767C((uint64_t *)&v120, 0, 0, (uint64_t)v6, v66, v67, v69, v68, (uint64_t *)&v111);
      *(void *)(a1 + 32) = &type metadata for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails;
      *(void *)(a1 + 40) = sub_25AB47C48();
      uint64_t result = (_OWORD *)swift_allocObject();
      *(void *)(a1 + 8) = result;
      long long v70 = v118;
      result[7] = v117;
      result[8] = v70;
      result[9] = v119;
      long long v71 = v114;
      result[3] = v113;
      result[4] = v71;
      long long v72 = v116;
      result[5] = v115;
      result[6] = v72;
      long long v73 = v112;
      result[1] = v111;
      result[2] = v73;
      char v19 = 20;
      goto LABEL_21;
    case 5u:
      long long v74 = *((_OWORD *)v13 + 1);
      long long v75 = *((_OWORD *)v13 + 2);
      long long v76 = *((_OWORD *)v13 + 3);
      long long v77 = *((_OWORD *)v13 + 4);
      uint64_t v78 = *((void *)v13 + 10);
      uint64_t v79 = *((void *)v13 + 11);
      uint64_t v80 = *((unsigned int *)v13 + 24);
      uint64_t v81 = *((void *)v13 + 13);
      __int16 v82 = v13[112];
      uint64_t v83 = *((void *)v13 + 15);
      if (v13[113]) {
        __int16 v84 = 256;
      }
      else {
        __int16 v84 = 0;
      }
      long long v120 = *(_OWORD *)v13;
      long long v121 = v74;
      long long v122 = v75;
      long long v123 = v76;
      long long v124 = v77;
      uint64_t v125 = v78;
      uint64_t v126 = v79;
      uint64_t v127 = v80;
      uint64_t v128 = v81;
      __int16 v129 = v84 | v82;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
      sub_25AB4767C((uint64_t *)&v120, 0, 0, (uint64_t)v6, v83, 0, 0, 0, (uint64_t *)&v111);
      *(void *)(a1 + 32) = &type metadata for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails;
      *(void *)(a1 + 40) = sub_25AB47C48();
      uint64_t result = (_OWORD *)swift_allocObject();
      *(void *)(a1 + 8) = result;
      long long v85 = v118;
      result[7] = v117;
      result[8] = v85;
      result[9] = v119;
      long long v86 = v114;
      result[3] = v113;
      result[4] = v86;
      long long v87 = v116;
      result[5] = v115;
      result[6] = v87;
      long long v88 = v112;
      result[1] = v111;
      result[2] = v88;
      char v19 = 21;
      goto LABEL_21;
    case 6u:
      sub_25AB47170((uint64_t)v13, (uint64_t)&v120);
      uint64_t v89 = *((void *)v13 + 15);
      int v90 = v13[128];
      uint64_t v92 = *((void *)v13 + 17);
      uint64_t v91 = *((void *)v13 + 18);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
      sub_25AB4767C((uint64_t *)&v120, 0, 0, (uint64_t)v6, v89, v90, v92, v91, (uint64_t *)&v111);
      *(void *)(a1 + 32) = &type metadata for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails;
      *(void *)(a1 + 40) = sub_25AB47C48();
      uint64_t result = (_OWORD *)swift_allocObject();
      *(void *)(a1 + 8) = result;
      long long v93 = v118;
      result[7] = v117;
      result[8] = v93;
      result[9] = v119;
      long long v94 = v114;
      result[3] = v113;
      result[4] = v94;
      long long v95 = v116;
      result[5] = v115;
      result[6] = v95;
      long long v96 = v112;
      result[1] = v111;
      result[2] = v96;
      char v19 = 22;
      goto LABEL_21;
    default:
      sub_25AB47D14(*(void *)v13, *((void *)v13 + 1), *((void *)v13 + 2), *((void *)v13 + 3), *((void *)v13 + 4), *((void *)v13 + 5), *((void *)v13 + 6), *((void *)v13 + 7), (uint64_t)&v111, *((void *)v13 + 8), *((void *)v13 + 9));
      *(void *)(a1 + 32) = &type metadata for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails;
      *(void *)(a1 + 40) = sub_25AB47C48();
      uint64_t result = (_OWORD *)swift_allocObject();
      *(void *)(a1 + 8) = result;
      long long v15 = v118;
      result[7] = v117;
      result[8] = v15;
      result[9] = v119;
      long long v16 = v114;
      result[3] = v113;
      result[4] = v16;
      long long v17 = v116;
      result[5] = v115;
      result[6] = v17;
      long long v18 = v112;
      result[1] = v111;
      result[2] = v18;
      char v19 = 17;
LABEL_21:
      *(unsigned char *)a1 = v19;
      return result;
  }
}

uint64_t type metadata accessor for StoreAndForwardMonitorEvent()
{
  uint64_t result = qword_26A4A0348;
  if (!qword_26A4A0348) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25AB4710C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StoreAndForwardMonitorEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25AB47170(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0328);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_25AB471D8(char a1)
{
  unint64_t result = 0x6974617669746361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x496E6F6973736573;
      break;
    case 2:
      unint64_t result = 0x746E61686372656DLL;
      break;
    case 3:
      unint64_t result = 0x4972656E74726170;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x64697074666173;
      break;
    case 6:
      unint64_t result = 0x797269707865;
      break;
    case 7:
      unint64_t result = 0x6E6F73616572;
      break;
    case 8:
      unint64_t result = 0x6E756F4364616572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25AB47308(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0360);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB496DC();
  sub_25AC35A00();
  v8[15] = 0;
  sub_25AC357C0();
  if (!v1)
  {
    v8[14] = 1;
    sub_25AC357F0();
    v8[13] = 2;
    sub_25AC357F0();
    v8[12] = 3;
    sub_25AC357F0();
    v8[11] = 4;
    sub_25AC357F0();
    v8[10] = 5;
    sub_25AC357C0();
    v8[9] = 6;
    sub_25AC357C0();
    v8[8] = 7;
    sub_25AC357C0();
    v8[7] = 8;
    sub_25AC357C0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_25AB47580()
{
  return sub_25AB471D8(*v0);
}

uint64_t sub_25AB47588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB4993C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25AB475B0(uint64_t a1)
{
  unint64_t v2 = sub_25AB496DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB475EC(uint64_t a1)
{
  unint64_t v2 = sub_25AB496DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB47628(void *a1)
{
  return sub_25AB47308(a1);
}

uint64_t sub_25AB4767C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v68 = a8;
  uint64_t v67 = a7;
  int v63 = a6;
  uint64_t v57 = a5;
  uint64_t v74 = a4;
  uint64_t v66 = a3;
  uint64_t v65 = a2;
  sub_25AB47170((uint64_t)a1, (uint64_t)v76);
  uint64_t v73 = v77;
  uint64_t v11 = v78;
  uint64_t v72 = v79;
  uint64_t v12 = v80;
  uint64_t v71 = v81;
  uint64_t v13 = v82;
  uint64_t v70 = v83;
  uint64_t v14 = v84;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0340);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v58 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_25AC32530();
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  long long v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_25AC32420();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v69 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0320);
  MEMORY[0x270FA5388](v22 - 8);
  int v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AB47170((uint64_t)a1, (uint64_t)&v85);
  if (v86)
  {
    uint64_t v61 = v85;
    uint64_t v62 = v86;
    swift_bridgeObjectRetain();
    uint64_t v64 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25AB47EE4(a1);
  }
  else
  {
    uint64_t v61 = sub_25AC340A0();
    uint64_t v62 = v25;
    uint64_t v73 = sub_25AC340A0();
    uint64_t v64 = v26;
    uint64_t v72 = sub_25AC340A0();
    uint64_t v12 = v27;
    uint64_t v71 = sub_25AC340A0();
    uint64_t v13 = v28;
    uint64_t v70 = sub_25AC340A0();
    uint64_t v14 = v29;
  }
  sub_25AB47E1C(v74, (uint64_t)v24);
  int v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v24, 1, v19);
  long long v31 = v69;
  if (v30 == 1)
  {
    uint64_t v32 = 0;
    uint64_t v33 = 0;
  }
  else
  {
    uint64_t v55 = v14;
    uint64_t v54 = v13;
    uint64_t v56 = v12;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v69, v24, v19);
    long long v34 = v31;
    long long v35 = (void *)sub_25AC323C0();
    long long v36 = v58;
    sub_25AC32510();
    uint64_t v37 = v59;
    uint64_t v38 = v60;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48))(v36, 1, v60);
    if (result == 1)
    {
      __break(1u);
      return result;
    }
    uint64_t v40 = self;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v18, v36, v38);
    uint64_t v41 = v37;
    __int16 v42 = (void *)sub_25AC32520();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v18, v38);
    id v43 = objc_msgSend(v40, sel_stringFromDate_timeZone_formatOptions_, v35, v42, 3955);

    uint64_t v32 = sub_25AC34E40();
    uint64_t v33 = v44;

    (*(void (**)(char *, uint64_t))(v20 + 8))(v34, v19);
    uint64_t v12 = v56;
    uint64_t v13 = v54;
    uint64_t v14 = v55;
  }
  uint64_t v45 = v64;
  if (v63)
  {
    uint64_t v48 = 0;
    uint64_t v49 = 0;
  }
  else
  {
    if (sub_25AC340F0() == v57)
    {
      uint64_t v46 = sub_25AC340A0();
    }
    else
    {
      uint64_t v75 = v57;
      uint64_t v46 = sub_25AC35850();
    }
    uint64_t v48 = v46;
    uint64_t v49 = v47;
  }
  uint64_t result = sub_25AB47E84(v74);
  uint64_t v50 = v62;
  *a9 = v61;
  a9[1] = v50;
  a9[2] = v73;
  a9[3] = v45;
  a9[4] = v72;
  a9[5] = v12;
  a9[6] = v71;
  a9[7] = v13;
  a9[8] = v70;
  a9[9] = v14;
  uint64_t v51 = v66;
  a9[10] = v65;
  a9[11] = v51;
  a9[12] = v32;
  a9[13] = v33;
  uint64_t v52 = v68;
  a9[14] = v67;
  a9[15] = v52;
  a9[16] = v48;
  a9[17] = v49;
  return result;
}

unint64_t sub_25AB47C48()
{
  unint64_t result = qword_26A4A0330;
  if (!qword_26A4A0330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0330);
  }
  return result;
}

uint64_t sub_25AB47C9C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 160, 7);
}

double sub_25AB47D14@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v14 = a4;
  if (a2)
  {
    uint64_t v17 = a2;
    if (a4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v22 = a7;
    uint64_t v23 = sub_25AC340A0();
    a7 = v22;
    a1 = v23;
    uint64_t v17 = v24;
    if (v14)
    {
LABEL_3:
      if (a6) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t v28 = a7;
      uint64_t v29 = sub_25AC340A0();
      a7 = v28;
      a5 = v29;
      a6 = v30;
      uint64_t v19 = a10;
      uint64_t v20 = a11;
      if (a8) {
        goto LABEL_5;
      }
LABEL_9:
      a7 = sub_25AC340A0();
      a8 = v31;
      goto LABEL_5;
    }
  }
  uint64_t v25 = a7;
  uint64_t v26 = sub_25AC340A0();
  a7 = v25;
  a3 = v26;
  uint64_t v14 = v27;
  if (!a6) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v19 = a10;
  uint64_t v20 = a11;
  if (!a8) {
    goto LABEL_9;
  }
LABEL_5:
  *(void *)a9 = 0;
  *(void *)(a9 + 8) = 0;
  *(void *)(a9 + 16) = a1;
  *(void *)(a9 + 24) = v17;
  *(void *)(a9 + 32) = a3;
  *(void *)(a9 + 40) = v14;
  *(void *)(a9 + 48) = a5;
  *(void *)(a9 + 56) = a6;
  *(void *)(a9 + 64) = a7;
  *(void *)(a9 + 72) = a8;
  double result = 0.0;
  *(_OWORD *)(a9 + 80) = 0u;
  *(_OWORD *)(a9 + 96) = 0u;
  *(void *)(a9 + 112) = v19;
  *(void *)(a9 + 120) = v20;
  *(void *)(a9 + 128) = 0;
  *(void *)(a9 + 136) = 0;
  return result;
}

uint64_t sub_25AB47E04(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_25AB47E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25AB47E84(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_25AB47EE4(uint64_t *a1)
{
  return a1;
}

uint64_t destroy for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  uint64_t v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  uint64_t v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

void *assignWithTake for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails()
{
  return &type metadata for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails;
}

uint64_t sub_25AB48374(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v13 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v13;
        uint64_t v14 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v14;
        uint64_t v15 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v15;
        uint64_t v16 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v16;
        uint64_t v17 = a2[9];
        *(void *)(a1 + 64) = a2[8];
        *(void *)(a1 + 72) = v17;
        uint64_t v18 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v18;
        *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
        *(_WORD *)(a1 + 112) = *((_WORD *)a2 + 56);
        uint64_t v19 = a2[16];
        *(void *)(a1 + 120) = a2[15];
        *(void *)(a1 + 128) = v19;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0338) + 64);
        uint64_t v21 = a1 + v20;
        uint64_t v22 = (uint64_t)a2 + v20;
        uint64_t v23 = sub_25AC32420();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
        break;
      case 2u:
        uint64_t v24 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v24;
        uint64_t v25 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v25;
        uint64_t v26 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v26;
        uint64_t v27 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v27;
        uint64_t v28 = a2[9];
        *(void *)(a1 + 64) = a2[8];
        *(void *)(a1 + 72) = v28;
        uint64_t v29 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v29;
        *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
        *(_WORD *)(a1 + 112) = *((_WORD *)a2 + 56);
        uint64_t v30 = a2[15];
        uint64_t v31 = a2[16];
        *(void *)(a1 + 120) = v30;
        *(void *)(a1 + 128) = v31;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
      case 5u:
        uint64_t v32 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v32;
        uint64_t v33 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v33;
        uint64_t v34 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v34;
        uint64_t v35 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v35;
        uint64_t v36 = a2[9];
        *(void *)(a1 + 64) = a2[8];
        *(void *)(a1 + 72) = v36;
        uint64_t v37 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v37;
        *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
        *(_WORD *)(a1 + 112) = *((_WORD *)a2 + 56);
        *(void *)(a1 + 120) = a2[15];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v38 = a2[1];
        if (!v38) {
          goto LABEL_12;
        }
        goto LABEL_11;
      case 6u:
        uint64_t v38 = a2[1];
        if (v38)
        {
LABEL_11:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v38;
          uint64_t v39 = a2[3];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = v39;
          uint64_t v40 = a2[5];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = v40;
          uint64_t v41 = a2[7];
          *(void *)(a1 + 48) = a2[6];
          *(void *)(a1 + 56) = v41;
          uint64_t v42 = a2[9];
          *(void *)(a1 + 64) = a2[8];
          *(void *)(a1 + 72) = v42;
          uint64_t v43 = a2[11];
          *(void *)(a1 + 80) = a2[10];
          *(void *)(a1 + 88) = v43;
          *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
          *(_WORD *)(a1 + 112) = *((_WORD *)a2 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
LABEL_12:
          long long v44 = *((_OWORD *)a2 + 5);
          *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
          *(_OWORD *)(a1 + 80) = v44;
          *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
          *(_WORD *)(a1 + 112) = *((_WORD *)a2 + 56);
          long long v45 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v45;
          long long v46 = *((_OWORD *)a2 + 3);
          *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
          *(_OWORD *)(a1 + 48) = v46;
        }
        *(void *)(a1 + 120) = a2[15];
        *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
        uint64_t v47 = a2[18];
        *(void *)(a1 + 136) = a2[17];
        *(void *)(a1 + 144) = v47;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v6;
        uint64_t v7 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v7;
        uint64_t v8 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v8;
        uint64_t v9 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v9;
        uint64_t v10 = a2[8];
        uint64_t v11 = a2[9];
        *(void *)(a1 + 64) = v10;
        *(void *)(a1 + 72) = v11;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_25AB488C4(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0338) + 64);
      uint64_t v4 = sub_25AC32420();
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
      return v5(v3, v4);
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    case 3:
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    case 4:
    case 6:
      if (*(void *)(a1 + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_11:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25AB48AB0(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v22 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v22;
      uint64_t v23 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v23;
      uint64_t v24 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v24;
      uint64_t v25 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v25;
      uint64_t v26 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v26;
      uint64_t v27 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v27;
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
      uint64_t v28 = *(void *)(a2 + 128);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v29 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0338) + 64);
      uint64_t v30 = a1 + v29;
      uint64_t v31 = a2 + v29;
      uint64_t v32 = sub_25AC32420();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      goto LABEL_12;
    case 2u:
      uint64_t v33 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v33;
      uint64_t v34 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v34;
      uint64_t v35 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v35;
      uint64_t v36 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v36;
      uint64_t v37 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v37;
      uint64_t v38 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v38;
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
      uint64_t v39 = *(void *)(a2 + 120);
      uint64_t v40 = *(void *)(a2 + 128);
      *(void *)(a1 + 120) = v39;
      *(void *)(a1 + 128) = v40;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    case 3u:
    case 5u:
      uint64_t v4 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v5;
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v6;
      uint64_t v7 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v7;
      uint64_t v8 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v8;
      uint64_t v9 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v9;
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 4u:
    case 6u:
      uint64_t v10 = *(void *)(a2 + 8);
      if (v10)
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v10;
        uint64_t v11 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v11;
        uint64_t v12 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = v12;
        uint64_t v13 = *(void *)(a2 + 56);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = v13;
        uint64_t v14 = *(void *)(a2 + 72);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = v14;
        uint64_t v15 = *(void *)(a2 + 88);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = v15;
        *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
        *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v41 = *(_OWORD *)(a2 + 80);
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 80) = v41;
        *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
        *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
        long long v42 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v42;
        long long v43 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v43;
      }
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      uint64_t v44 = *(void *)(a2 + 144);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = v44;
      goto LABEL_11;
    default:
      uint64_t v16 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v16;
      uint64_t v17 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v17;
      uint64_t v18 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v18;
      uint64_t v19 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v19;
      uint64_t v20 = *(void *)(a2 + 64);
      uint64_t v21 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v20;
      *(void *)(a1 + 72) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_8:
      swift_bridgeObjectRetain();
LABEL_11:
      swift_bridgeObjectRetain();
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

uint64_t sub_25AB48E20(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    sub_25AB492C0(a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        *(void *)(a1 + 16) = *((void *)a2 + 2);
        *(void *)(a1 + 24) = *((void *)a2 + 3);
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(void *)(a1 + 40) = *((void *)a2 + 5);
        *(void *)(a1 + 48) = *((void *)a2 + 6);
        *(void *)(a1 + 56) = *((void *)a2 + 7);
        *(void *)(a1 + 64) = *((void *)a2 + 8);
        *(void *)(a1 + 72) = *((void *)a2 + 9);
        *(void *)(a1 + 80) = *((void *)a2 + 10);
        *(void *)(a1 + 88) = *((void *)a2 + 11);
        *(_OWORD *)(a1 + 96) = a2[6];
        *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
        *(unsigned char *)(a1 + 113) = *((unsigned char *)a2 + 113);
        *(void *)(a1 + 120) = *((void *)a2 + 15);
        *(void *)(a1 + 128) = *((void *)a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0338) + 64);
        uint64_t v5 = a1 + v4;
        uint64_t v6 = (uint64_t)a2 + v4;
        uint64_t v7 = sub_25AC32420();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
        goto LABEL_13;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        *(void *)(a1 + 16) = *((void *)a2 + 2);
        *(void *)(a1 + 24) = *((void *)a2 + 3);
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(void *)(a1 + 40) = *((void *)a2 + 5);
        *(void *)(a1 + 48) = *((void *)a2 + 6);
        *(void *)(a1 + 56) = *((void *)a2 + 7);
        *(void *)(a1 + 64) = *((void *)a2 + 8);
        *(void *)(a1 + 72) = *((void *)a2 + 9);
        *(void *)(a1 + 80) = *((void *)a2 + 10);
        *(void *)(a1 + 88) = *((void *)a2 + 11);
        *(_OWORD *)(a1 + 96) = a2[6];
        *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
        *(unsigned char *)(a1 + 113) = *((unsigned char *)a2 + 113);
        *(void *)(a1 + 120) = *((void *)a2 + 15);
        *(void *)(a1 + 128) = *((void *)a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 3u:
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        *(void *)(a1 + 16) = *((void *)a2 + 2);
        *(void *)(a1 + 24) = *((void *)a2 + 3);
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(void *)(a1 + 40) = *((void *)a2 + 5);
        *(void *)(a1 + 48) = *((void *)a2 + 6);
        *(void *)(a1 + 56) = *((void *)a2 + 7);
        *(void *)(a1 + 64) = *((void *)a2 + 8);
        *(void *)(a1 + 72) = *((void *)a2 + 9);
        *(void *)(a1 + 80) = *((void *)a2 + 10);
        *(void *)(a1 + 88) = *((void *)a2 + 11);
        *(_OWORD *)(a1 + 96) = a2[6];
        *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
        *(unsigned char *)(a1 + 113) = *((unsigned char *)a2 + 113);
        *(void *)(a1 + 120) = *((void *)a2 + 15);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_12;
      case 4u:
      case 6u:
        if (*((void *)a2 + 1))
        {
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *((void *)a2 + 1);
          *(void *)(a1 + 16) = *((void *)a2 + 2);
          *(void *)(a1 + 24) = *((void *)a2 + 3);
          *(void *)(a1 + 32) = *((void *)a2 + 4);
          *(void *)(a1 + 40) = *((void *)a2 + 5);
          *(void *)(a1 + 48) = *((void *)a2 + 6);
          *(void *)(a1 + 56) = *((void *)a2 + 7);
          *(void *)(a1 + 64) = *((void *)a2 + 8);
          *(void *)(a1 + 72) = *((void *)a2 + 9);
          *(void *)(a1 + 80) = *((void *)a2 + 10);
          *(void *)(a1 + 88) = *((void *)a2 + 11);
          *(_OWORD *)(a1 + 96) = a2[6];
          *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
          *(unsigned char *)(a1 + 113) = *((unsigned char *)a2 + 113);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v8 = *a2;
          long long v9 = a2[1];
          long long v10 = a2[3];
          *(_OWORD *)(a1 + 32) = a2[2];
          *(_OWORD *)(a1 + 48) = v10;
          *(_OWORD *)a1 = v8;
          *(_OWORD *)(a1 + 16) = v9;
          long long v11 = a2[4];
          long long v12 = a2[5];
          long long v13 = a2[6];
          *(_WORD *)(a1 + 112) = *((_WORD *)a2 + 56);
          *(_OWORD *)(a1 + 80) = v12;
          *(_OWORD *)(a1 + 96) = v13;
          *(_OWORD *)(a1 + 64) = v11;
        }
        uint64_t v14 = *((void *)a2 + 15);
        *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
        *(void *)(a1 + 120) = v14;
        *(void *)(a1 + 136) = *((void *)a2 + 17);
        *(void *)(a1 + 144) = *((void *)a2 + 18);
        goto LABEL_12;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        *(void *)(a1 + 16) = *((void *)a2 + 2);
        *(void *)(a1 + 24) = *((void *)a2 + 3);
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(void *)(a1 + 40) = *((void *)a2 + 5);
        *(void *)(a1 + 48) = *((void *)a2 + 6);
        *(void *)(a1 + 56) = *((void *)a2 + 7);
        *(void *)(a1 + 64) = *((void *)a2 + 8);
        *(void *)(a1 + 72) = *((void *)a2 + 9);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_9:
        swift_bridgeObjectRetain();
LABEL_12:
        swift_bridgeObjectRetain();
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

uint64_t sub_25AB492C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StoreAndForwardMonitorEvent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_25AB4931C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v6 = a2[5];
    a1[4] = a2[4];
    a1[5] = v6;
    a1[6] = a2[6];
    *((_WORD *)a1 + 56) = *((_WORD *)a2 + 56);
    long long v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    long long v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    *(_OWORD *)((char *)a1 + 120) = *(_OWORD *)((char *)a2 + 120);
    uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0338) + 64);
    long long v10 = (char *)a1 + v9;
    long long v11 = (char *)a2 + v9;
    uint64_t v12 = sub_25AC32420();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_25AB4941C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25AB492C0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v6 = a2[5];
      a1[4] = a2[4];
      a1[5] = v6;
      a1[6] = a2[6];
      *((_WORD *)a1 + 56) = *((_WORD *)a2 + 56);
      long long v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      long long v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      *(_OWORD *)((char *)a1 + 120) = *(_OWORD *)((char *)a2 + 120);
      uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0338) + 64);
      long long v10 = (char *)a1 + v9;
      long long v11 = (char *)a2 + v9;
      uint64_t v12 = sub_25AC32420();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25AB4952C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_25AB49554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_25AB49580()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_25AB49590()
{
  uint64_t v3 = "P";
  uint64_t result = sub_25AC32420();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    uint64_t v4 = &v2;
    uint64_t v5 = &unk_25AC396A8;
    long long v6 = &unk_25AC396C0;
    long long v7 = &unk_25AC396D8;
    long long v8 = &unk_25AC396C0;
    uint64_t v9 = &unk_25AC396D8;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_25AB49660(uint64_t a1)
{
  unint64_t result = sub_25AB49688();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25AB49688()
{
  unint64_t result = qword_26A4A0358;
  if (!qword_26A4A0358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0358);
  }
  return result;
}

unint64_t sub_25AB496DC()
{
  unint64_t result = qword_26A4A0368;
  if (!qword_26A4A0368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0368);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB497FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails.CodingKeys()
{
  return &type metadata for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails.CodingKeys;
}

unint64_t sub_25AB49838()
{
  unint64_t result = qword_26A4A0370;
  if (!qword_26A4A0370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0370);
  }
  return result;
}

unint64_t sub_25AB49890()
{
  unint64_t result = qword_26A4A0378;
  if (!qword_26A4A0378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0378);
  }
  return result;
}

unint64_t sub_25AB498E8()
{
  unint64_t result = qword_26A4A0380;
  if (!qword_26A4A0380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0380);
  }
  return result;
}

uint64_t sub_25AB4993C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6974617669746361 && a2 == 0xEC00000064496E6FLL;
  if (v2 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEA00000000006449 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4972656E74726170 && a2 == 0xE900000000000064 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025AC3D670 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x64697074666173 && a2 == 0xE700000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x797269707865 && a2 == 0xE600000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6E756F4364616572 && a2 == 0xEB00000000726574)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_25AC35870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

id sub_25AB49D28()
{
  type metadata accessor for SecureChannel();
  uint64_t v0 = swift_allocObject();
  id v1 = objc_msgSend(self, sel_ephemeralSessionConfiguration);
  objc_msgSend(v1, sel_setTimeoutIntervalForResource_, 600.0);
  objc_msgSend(v1, sel_setTLSMinimumSupportedProtocolVersion_, 771);
  id v2 = objc_msgSend(self, sel_sessionWithConfiguration_, v1);

  *(void *)(v0 + 16) = v2;
  id result = sub_25AB49DF0();
  *(void *)(v0 + 24) = result;
  qword_26A4A1DC8 = v0;
  return result;
}

id sub_25AB49DF0()
{
  id v0 = objc_msgSend(self, sel_ephemeralSessionConfiguration);
  objc_msgSend(v0, sel_setTimeoutIntervalForResource_, 600.0);
  objc_msgSend(v0, sel_setTLSMinimumSupportedProtocolVersion_, 771);
  id v1 = objc_allocWithZone(MEMORY[0x263F29120]);
  id v2 = (void *)sub_25AC34E10();
  id v3 = objc_msgSend(v1, sel_initWithIdentifier_, v2);

  objc_msgSend(v0, sel_set_appleIDContext_, v3);
  id v4 = objc_msgSend(self, sel_sessionWithConfiguration_, v0);

  return v4;
}

void sub_25AB49EF8(void *a1)
{
  v7[1] = *(id *)MEMORY[0x263EF8340];
  id v2 = (void *)sub_25AC31F30();
  v7[0] = 0;
  id v3 = objc_msgSend(a1, sel_securingRequest_error_, v2, v7);

  id v4 = v7[0];
  if (v3)
  {
    sub_25AC31F50();
    id v5 = v4;
  }
  else
  {
    id v6 = v7[0];
    sub_25AC321F0();

    swift_willThrow();
  }
}

uint64_t sub_25AB49FE0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SecureChannel()
{
  return self;
}

uint64_t sub_25AB4A044(uint64_t a1)
{
  return sub_25AB4A0B0(a1, 0xD000000000000018, 0x800000025AC3E7A0, &qword_26A4A0388);
}

id static Queues.main.getter()
{
  return sub_25AB4A2CC(&qword_26A49F858, (void **)&qword_26A4A0388);
}

uint64_t sub_25AB4A08C(uint64_t a1)
{
  return sub_25AB4A0B0(a1, 0xD000000000000026, 0x800000025AC3E770, &qword_26A4A0390);
}

uint64_t sub_25AB4A0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = sub_25AC352F0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_25AC34CA0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = sub_25AC35320();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  long long v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AB4A328();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F8F138], v7);
  sub_25AC34C80();
  v12[1] = MEMORY[0x263F8EE78];
  sub_25AB4A368();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A03A8);
  sub_25AB4A3C0();
  sub_25AC35510();
  uint64_t result = sub_25AC35340();
  *a4 = result;
  return result;
}

id static Queues.cleanupSerialQueue.getter()
{
  return sub_25AB4A2CC(&qword_26A49F860, (void **)&qword_26A4A0390);
}

id sub_25AB4A2CC(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  id v3 = *a2;
  return v3;
}

ValueMetadata *type metadata accessor for Queues()
{
  return &type metadata for Queues;
}

unint64_t sub_25AB4A328()
{
  unint64_t result = qword_26A4A0398;
  if (!qword_26A4A0398)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A4A0398);
  }
  return result;
}

unint64_t sub_25AB4A368()
{
  unint64_t result = qword_26A4A03A0;
  if (!qword_26A4A03A0)
  {
    sub_25AC352F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A03A0);
  }
  return result;
}

unint64_t sub_25AB4A3C0()
{
  unint64_t result = qword_26A4A03B0;
  if (!qword_26A4A03B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A4A03A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A03B0);
  }
  return result;
}

uint64_t sub_25AB4A41C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0408);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB4C610();
  sub_25AC35A00();
  LOBYTE(v15) = 0;
  sub_25AC32420();
  sub_25AB4C778(&qword_26A4A0410);
  sub_25AC35830();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for DiscoveryCacheContent(0);
    LOBYTE(v15) = 1;
    sub_25AC357F0();
    long long v10 = (uint64_t *)(v3 + *(int *)(v9 + 24));
    uint64_t v12 = *v10;
    uint64_t v11 = v10[1];
    uint64_t v15 = v12;
    uint64_t v16 = v11;
    v14[15] = 2;
    sub_25AB4C7BC();
    sub_25AC35830();
    LOBYTE(v15) = 3;
    sub_25AC357F0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_25AB4A63C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v4 = sub_25AC32420();
  uint64_t v28 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v29 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A03E8);
  uint64_t v27 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DiscoveryCacheContent(0);
  MEMORY[0x270FA5388](v8);
  long long v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB4C610();
  sub_25AC359F0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v25 = a1;
  uint64_t v11 = (uint64_t)v10;
  uint64_t v12 = v28;
  LOBYTE(v31) = 0;
  sub_25AB4C778(&qword_26A4A03F8);
  long long v13 = v29;
  sub_25AC357A0();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v10, v13, v4);
  LOBYTE(v31) = 1;
  uint64_t v14 = sub_25AC35760();
  uint64_t v15 = v8;
  uint64_t v16 = (uint64_t *)(v11 + *(int *)(v8 + 20));
  uint64_t *v16 = v14;
  v16[1] = v17;
  char v33 = 2;
  sub_25AB4C664();
  sub_25AC357A0();
  uint64_t v18 = v32;
  uint64_t v19 = (void *)(v11 + *(int *)(v8 + 24));
  *uint64_t v19 = v31;
  v19[1] = v18;
  LOBYTE(v31) = 3;
  uint64_t v20 = sub_25AC35760();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v30);
  uint64_t v23 = (uint64_t *)(v11 + *(int *)(v15 + 28));
  *uint64_t v23 = v20;
  v23[1] = v22;
  sub_25AB4C6B8(v11, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return sub_25AB4C71C(v11);
}

uint64_t sub_25AB4AA70()
{
  uint64_t result = 1702125924;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E6F69676572;
      break;
    case 2:
    case 3:
      uint64_t result = 0x74736566696E616DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25AB4AAF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB4D3BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25AB4AB18(uint64_t a1)
{
  unint64_t v2 = sub_25AB4C610();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB4AB54(uint64_t a1)
{
  unint64_t v2 = sub_25AB4C610();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB4AB90@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25AB4A63C(a1, a2);
}

uint64_t sub_25AB4ABA8(void *a1)
{
  return sub_25AB4A41C(a1);
}

uint64_t sub_25AB4ABC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v30 = a7;
  uint64_t v29 = a6;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0420);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v29 - v16;
  uint64_t v18 = (int *)type metadata accessor for DiscoveryCacheContent(0);
  uint64_t v19 = *((void *)v18 - 1);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_25AC32420();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v21, a1, v22);
  uint64_t v23 = &v21[v18[5]];
  *(void *)uint64_t v23 = a2;
  *((void *)v23 + 1) = a3;
  uint64_t v24 = &v21[v18[6]];
  *(void *)uint64_t v24 = a4;
  *((void *)v24 + 1) = a5;
  uint64_t v25 = &v21[v18[7]];
  uint64_t v26 = v30;
  *(void *)uint64_t v25 = v29;
  *((void *)v25 + 1) = v26;
  sub_25AB4C6B8((uint64_t)v21, (uint64_t)v17);
  (*(void (**)(char *, void, uint64_t, int *))(v19 + 56))(v17, 0, 1, v18);
  sub_25AB4C874((uint64_t)v17, (uint64_t)v15);
  uint64_t v27 = v31 + OBJC_IVAR____TtC21ProximityReaderDaemon14DiscoveryCache_cache;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25AB4C8DC((uint64_t)v15, v27);
  swift_endAccess();
  sub_25AB4CD7C();
  return sub_25AB4C71C((uint64_t)v21);
}

uint64_t sub_25AB4ADFC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0420);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DiscoveryCacheContent(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = v0 + OBJC_IVAR____TtC21ProximityReaderDaemon14DiscoveryCache_cache;
  swift_beginAccess();
  sub_25AB4C8DC((uint64_t)v6, v8);
  swift_endAccess();
  sub_25AB4C9A8();
  if (qword_26A49F830 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v1, (uint64_t)qword_26A4A1D78);
  sub_25AB4C944(v9, (uint64_t)v3, &qword_26A49F9A0);
  uint64_t v10 = sub_25AC345E0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v3, 1, v10) == 1) {
    return sub_25AB18FAC((uint64_t)v3, &qword_26A49F9A0);
  }
  uint64_t v13 = sub_25AC345C0();
  os_log_type_t v14 = sub_25AC352B0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_25AB11000, v13, v14, "Discovery cache released", v15, 2u);
    MEMORY[0x261151C20](v15, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v3, v10);
}

uint64_t sub_25AB4B08C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FE00);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0420);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v45 = (uint64_t)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v39 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v39 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = type metadata accessor for DiscoveryCacheContent(0);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v44 = (uint64_t)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v39 - v23;
  if (sub_25AB4B53C()) {
    goto LABEL_14;
  }
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  long long v42 = v13;
  uint64_t v25 = v2 + OBJC_IVAR____TtC21ProximityReaderDaemon14DiscoveryCache_cache;
  swift_beginAccess();
  uint64_t v43 = v25;
  sub_25AB4C944(v25, (uint64_t)v16, &qword_26A4A0420);
  uint64_t v39 = v20;
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v27 = v26(v16, 1, v19);
  sub_25AB18FAC((uint64_t)v16, &qword_26A4A0420);
  if (v27 == 1 && (sub_25AB4B780() & 1) == 0) {
    goto LABEL_12;
  }
  sub_25AB4C944(v43, (uint64_t)v18, &qword_26A4A0420);
  if (v26(v18, 1, v19) == 1)
  {
LABEL_13:
    sub_25AB18FAC((uint64_t)v18, &qword_26A4A0420);
    goto LABEL_14;
  }
  sub_25AB4C810((uint64_t)v18, (uint64_t)v24);
  uint64_t v28 = &v24[*(int *)(v19 + 20)];
  uint64_t v29 = *((void *)v28 + 1);
  uint64_t v48 = *(void *)v28;
  uint64_t v49 = v29;
  uint64_t v46 = v40;
  uint64_t v47 = v41;
  uint64_t v30 = sub_25AC324C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v7, 1, 1, v30);
  sub_25AB25ABC();
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_25AC354E0();
  sub_25AB18FAC((uint64_t)v7, &qword_26A49FE00);
  swift_bridgeObjectRelease();
  sub_25AB4C71C((uint64_t)v24);
  uint64_t v32 = (uint64_t)v42;
  if (v31)
  {
LABEL_14:
    sub_25AB4ADFC();
    return 0;
  }
  uint64_t v33 = v45;
  sub_25AB4C944(v43, v45, &qword_26A4A0420);
  int v34 = v26((char *)v33, 1, v19);
  sub_25AB18FAC(v33, &qword_26A4A0420);
  if (v34 == 1 && (sub_25AB4B780() & 1) == 0)
  {
    uint64_t v18 = (char *)v32;
LABEL_12:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v18, 1, 1, v19);
    goto LABEL_13;
  }
  sub_25AB4C944(v43, v32, &qword_26A4A0420);
  if (v26((char *)v32, 1, v19) == 1)
  {
    uint64_t v18 = (char *)v32;
    goto LABEL_13;
  }
  uint64_t v35 = v32;
  uint64_t v36 = v44;
  sub_25AB4C810(v35, v44);
  uint64_t v37 = *(void *)(v36 + *(int *)(v19 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25AB4C71C(v36);
  return v37;
}

BOOL sub_25AB4B53C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0420);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v17 - v5;
  uint64_t v7 = type metadata accessor for DiscoveryCacheContent(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v17 = (uint64_t)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v0 + OBJC_IVAR____TtC21ProximityReaderDaemon14DiscoveryCache_cache;
  swift_beginAccess();
  sub_25AB4C944(v10, (uint64_t)v4, &qword_26A4A0420);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v12 = v11(v4, 1, v7);
  sub_25AB18FAC((uint64_t)v4, &qword_26A4A0420);
  if (v12 == 1 && (sub_25AB4B780() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  else
  {
    sub_25AB4C944(v10, (uint64_t)v6, &qword_26A4A0420);
    if (v11(v6, 1, v7) != 1)
    {
      uint64_t v13 = v17;
      sub_25AB4C810((uint64_t)v6, v17);
      sub_25AC323D0();
      double v15 = fabs(v14);
      sub_25AB4C71C(v13);
      return v15 > 3600.0;
    }
  }
  sub_25AB18FAC((uint64_t)v6, &qword_26A4A0420);
  return 1;
}

uint64_t sub_25AB4B780()
{
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v37);
  uint64_t v38 = (char *)v32 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0420);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  v32[0] = (uint64_t)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v33 = (char *)v32 - v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v34 = (uint64_t)v32 - v6;
  uint64_t v7 = type metadata accessor for DiscoveryCacheContent(0);
  uint64_t v35 = *(void *)(v7 - 8);
  uint64_t v36 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25AC32300();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25AC32CF0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AC32CE0();
  uint64_t v39 = 0;
  unint64_t v40 = 0xE000000000000000;
  sub_25AC35580();
  sub_25AC345B0();
  uint64_t v18 = sub_25AC34530();
  unint64_t v20 = v19;
  swift_bridgeObjectRelease();
  uint64_t v39 = v18;
  unint64_t v40 = v20;
  sub_25AC34F60();
  sub_25AC32260();
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_25AC32CA0();
  unint64_t v23 = v22;
  uint64_t v24 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v25 = v34;
  sub_25AB892E4(v34);
  sub_25AB16958(v21, v23);
  uint64_t v27 = v35;
  uint64_t v26 = v36;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v25, 1, v36) == 1)
  {
    sub_25AB18FAC(v25, &qword_26A4A0420);
    return 0;
  }
  else
  {
    sub_25AB4C810(v25, (uint64_t)v9);
    sub_25AB4C810((uint64_t)v9, v24);
    uint64_t v28 = 1;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    uint64_t v30 = v32[0];
    sub_25AB4C874(v24, v32[0]);
    uint64_t v31 = v32[1] + OBJC_IVAR____TtC21ProximityReaderDaemon14DiscoveryCache_cache;
    swift_beginAccess();
    sub_25AB4C8DC(v30, v31);
    swift_endAccess();
  }
  return v28;
}

uint64_t sub_25AB4BD5C()
{
  sub_25AB18FAC(v0 + OBJC_IVAR____TtC21ProximityReaderDaemon14DiscoveryCache_cache, &qword_26A4A0420);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_25AB4BDA4()
{
  return type metadata accessor for DiscoveryCache(0);
}

uint64_t type metadata accessor for DiscoveryCache(uint64_t a1)
{
  return sub_25AB4BEEC(a1, (uint64_t *)&unk_26A4A03C0);
}

void sub_25AB4BDCC()
{
  sub_25AB4BE74();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_25AB4BE74()
{
  if (!qword_26A4A03D0)
  {
    type metadata accessor for DiscoveryCacheContent(255);
    unint64_t v0 = sub_25AC35470();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A4A03D0);
    }
  }
}

uint64_t type metadata accessor for DiscoveryCacheContent(uint64_t a1)
{
  return sub_25AB4BEEC(a1, (uint64_t *)&unk_26A4A03D8);
}

uint64_t sub_25AB4BEEC(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_25AB4BF24(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25AC32420();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = (uint64_t *)((char *)a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_25AB4C030(uint64_t a1)
{
  uint64_t v2 = sub_25AC32420();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB4C0C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25AC32420();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = v17[1];
  void *v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_25AB4C184(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25AC32420();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25AB4C278(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25AC32420();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_25AB4C308(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25AC32420();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25AB4C3CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25AB4C3E0);
}

uint64_t sub_25AB4C3E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25AC32420();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_25AB4C4A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25AB4C4B8);
}

uint64_t sub_25AB4C4B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_25AC32420();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_25AB4C578()
{
  uint64_t result = sub_25AC32420();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_25AB4C610()
{
  unint64_t result = qword_26A4A03F0;
  if (!qword_26A4A03F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A03F0);
  }
  return result;
}

unint64_t sub_25AB4C664()
{
  unint64_t result = qword_26A4A0400;
  if (!qword_26A4A0400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0400);
  }
  return result;
}

uint64_t sub_25AB4C6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DiscoveryCacheContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25AB4C71C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DiscoveryCacheContent(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25AB4C778(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25AC32420();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25AB4C7BC()
{
  unint64_t result = qword_26A4A0418;
  if (!qword_26A4A0418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0418);
  }
  return result;
}

uint64_t sub_25AB4C810(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DiscoveryCacheContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25AB4C874(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25AB4C8DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_25AB4C944(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25AB4C9A8()
{
  v12[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v12[0]);
  uint64_t v0 = sub_25AC32300();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25AC32CF0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AC32CE0();
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_25AC35580();
  sub_25AC345B0();
  uint64_t v8 = sub_25AC34530();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  uint64_t v13 = v8;
  unint64_t v14 = v10;
  sub_25AC34F60();
  sub_25AC32260();
  swift_bridgeObjectRelease();
  sub_25AC32CC0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_25AB4CD7C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_25AC32300();
  uint64_t v21 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25AC32CF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_25ABE2740();
  if (v11 >> 60 != 15)
  {
    uint64_t v12 = result;
    unint64_t v13 = v11;
    uint64_t v19 = v2;
    sub_25AC32CE0();
    uint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    sub_25AC35580();
    sub_25AC345B0();
    uint64_t v14 = sub_25AC34530();
    uint64_t v20 = v12;
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    uint64_t v22 = v14;
    unint64_t v23 = v16;
    uint64_t v17 = v20;
    sub_25AC34F60();
    sub_25AC32260();
    swift_bridgeObjectRelease();
    sub_25AC32CB0();
    uint64_t v18 = (void (**)(char *, uint64_t))(v21 + 8);
    sub_25AB16944(v17, v13);
    (*v18)(v5, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DiscoveryCacheContent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB4D27CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryCacheContent.CodingKeys()
{
  return &type metadata for DiscoveryCacheContent.CodingKeys;
}

unint64_t sub_25AB4D2B8()
{
  unint64_t result = qword_26A4A0428;
  if (!qword_26A4A0428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0428);
  }
  return result;
}

unint64_t sub_25AB4D310()
{
  unint64_t result = qword_26A4A0430;
  if (!qword_26A4A0430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0430);
  }
  return result;
}

unint64_t sub_25AB4D368()
{
  unint64_t result = qword_26A4A0438;
  if (!qword_26A4A0438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0438);
  }
  return result;
}

uint64_t sub_25AB4D3BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F69676572 && a2 == 0xE600000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74736566696E616DLL && a2 == 0xE800000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74736566696E616DLL && a2 == 0xEE006E6F69676552)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_25AC35870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_25AB4D57C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v77 = a3;
  uint64_t v7 = sub_25AC32420();
  uint64_t v74 = *(void *)(v7 - 8);
  uint64_t v75 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v73 = (char *)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v67 - v13;
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v9, (uint64_t)qword_26A4A1CE8);
  sub_25AB150E0(v15, (uint64_t)v14);
  uint64_t v16 = sub_25AC345E0();
  uint64_t v17 = *(void *)(v16 - 8);
  long long v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v76(v14, 1, v16) == 1)
  {
    sub_25AB18FAC((uint64_t)v14, &qword_26A49F9A0);
  }
  else
  {
    uint64_t v72 = v15;
    swift_bridgeObjectRetain_n();
    uint64_t v18 = sub_25AC345C0();
    os_log_type_t v19 = sub_25AC352B0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v71 = v12;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v68 = v4;
      uint64_t v21 = (uint8_t *)v20;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v70 = v16;
      uint64_t v23 = v22;
      *(void *)&long long v80 = v22;
      uint64_t v69 = v17;
      *(_DWORD *)uint64_t v21 = 136380675;
      v67[1] = v21 + 4;
      uint64_t v24 = sub_25AC34310();
      *(void *)&v79[0] = sub_25AB56574(v24, v25, (uint64_t *)&v80);
      uint64_t v17 = v69;
      sub_25AC354A0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25AB11000, v18, v19, "status: %{private}s", v21, 0xCu);
      swift_arrayDestroy();
      uint64_t v26 = v23;
      uint64_t v16 = v70;
      MEMORY[0x261151C20](v26, -1, -1);
      uint64_t v27 = v21;
      uint64_t v4 = v68;
      MEMORY[0x261151C20](v27, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
  }
  uint64_t v28 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v28 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v28)
  {
    sub_25AC34330();
    if (BYTE8(v80))
    {
      LODWORD(v28) = 0;
    }
    else
    {
      double v29 = *(double *)&v80;
      uint64_t v30 = v73;
      sub_25AC32410();
      sub_25AC323E0();
      double v32 = v31;
      (*(void (**)(char *, uint64_t))(v74 + 8))(v30, v75);
      LODWORD(v28) = v32 <= v29;
    }
  }
  uint64_t v33 = qword_25AC39B50[*(char *)(v4 + 24)];
  if (v28)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    a1 = 0;
    a2 = 0xE000000000000000;
  }
  uint64_t v34 = sub_25AB4EF4C(a1, a2, v33);
  swift_bridgeObjectRelease();
  uint64_t v35 = (uint64_t (*)(void))sub_25AC34000();
  char v36 = v35();
  swift_release();
  if (v36)
  {
    id v37 = objc_msgSend(self, sel_standardUserDefaults);
    uint64_t v38 = (void *)sub_25AC34E10();
    unsigned int v39 = objc_msgSend(v37, sel_BOOLForKey_, v38);

    if (v39)
    {
      uint64_t v40 = sub_25AC34E40();
      uint64_t v42 = v41;
      *((void *)&v81 + 1) = MEMORY[0x263F8D4F8];
      LOBYTE(v80) = 1;
      sub_25AB1DDC8(&v80, v79);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v78 = v34;
      sub_25ABAE96C(v79, v40, v42, isUniquelyReferenced_nonNull_native);
      uint64_t v34 = v78;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v44 = (uint64_t (*)(void))sub_25AC34000();
  char v45 = v44();
  swift_release();
  if (v45)
  {
    id v46 = objc_msgSend(self, sel_standardUserDefaults);
    uint64_t v47 = (void *)sub_25AC34E10();
    unsigned int v48 = objc_msgSend(v46, sel_BOOLForKey_, v47);

    if (v48)
    {
      uint64_t v49 = sub_25AC34E40();
      uint64_t v51 = v50;
      *((void *)&v81 + 1) = MEMORY[0x263F8D4F8];
      LOBYTE(v80) = 0;
      sub_25AB1DDC8(&v80, v79);
      char v52 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v78 = v34;
      sub_25ABAE96C(v79, v49, v51, v52);
      uint64_t v34 = v78;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t result = sub_25AB4E38C(v34, (uint64_t)&v80);
  long long v54 = v81;
  long long v55 = v89;
  uint64_t v56 = 256;
  if (!v83) {
    uint64_t v56 = 0;
  }
  uint64_t v57 = v56 | v82;
  uint64_t v58 = 0x10000;
  if (!v84) {
    uint64_t v58 = 0;
  }
  uint64_t v59 = 0x1000000;
  if (!v85) {
    uint64_t v59 = 0;
  }
  uint64_t v60 = v57 | v58 | v59;
  uint64_t v61 = 0x100000000;
  if (!v86) {
    uint64_t v61 = 0;
  }
  uint64_t v62 = 0x10000000000;
  if (!v87) {
    uint64_t v62 = 0;
  }
  uint64_t v63 = v61 | v62;
  uint64_t v64 = 0x1000000000000;
  if (!v88) {
    uint64_t v64 = 0;
  }
  uint64_t v65 = v60 | v63 | v64;
  uint64_t v66 = v77;
  _OWORD *v77 = v80;
  v66[1] = v54;
  *((void *)v66 + 4) = v65;
  *(_OWORD *)((char *)v66 + 40) = v55;
  return result;
}

uint64_t sub_25AB4DE50()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SPRStatusTask()
{
  return self;
}

uint64_t destroy for ReaderInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ReaderInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_WORD *)(a1 + 37) = *(_WORD *)(a2 + 37);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReaderInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(unsigned char *)(a1 + 37) = *(unsigned char *)(a2 + 37);
  *(unsigned char *)(a1 + 38) = *(unsigned char *)(a2 + 38);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ReaderInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(unsigned char *)(a1 + 37) = *(unsigned char *)(a2 + 37);
  *(unsigned char *)(a1 + 38) = *(unsigned char *)(a2 + 38);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReaderInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ReaderInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReaderInfo()
{
  return &type metadata for ReaderInfo;
}

uint64_t getEnumTagSinglePayload for ContentEnvironment(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SPRStatusTask.Mode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB4E2FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SPRStatusTask.Mode()
{
  return &type metadata for SPRStatusTask.Mode;
}

unint64_t sub_25AB4E338()
{
  unint64_t result = qword_26A4A0440;
  if (!qword_26A4A0440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0440);
  }
  return result;
}

uint64_t sub_25AB4E38C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v4);
  unsigned int v6 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_project_value_buffer(v4, (uint64_t)qword_26A4A1CE8);
  sub_25AB150E0(v7, (uint64_t)v6);
  uint64_t v8 = sub_25AC345E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_25AB18FAC((uint64_t)v6, &qword_26A49F9A0);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    uint64_t v10 = sub_25AC345C0();
    os_log_type_t v11 = sub_25AC352B0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v82 = swift_slowAlloc();
      *(void *)&long long v85 = v82;
      long long v81 = v12;
      *(_DWORD *)uint64_t v12 = 136380675;
      uint64_t v79 = v12 + 4;
      swift_bridgeObjectRetain();
      uint64_t v80 = MEMORY[0x263F8EE58] + 8;
      uint64_t v13 = sub_25AC34DB0();
      unint64_t v15 = v14;
      swift_bridgeObjectRelease();
      uint64_t v83 = sub_25AB56574(v13, v15, (uint64_t *)&v85);
      sub_25AC354A0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_type_t v16 = v11;
      uint64_t v17 = v81;
      _os_log_impl(&dword_25AB11000, v10, v16, "status result: %{private}s", v81, 0xCu);
      uint64_t v18 = v82;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v18, -1, -1);
      MEMORY[0x261151C20](v17, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  uint64_t v19 = sub_25AC34E40();
  if (*(void *)(a1 + 16) && (unint64_t v21 = sub_25AB8D62C(v19, v20), (v22 & 1) != 0))
  {
    sub_25AB18F50(*(void *)(a1 + 56) + 32 * v21, (uint64_t)&v85);
  }
  else
  {
    long long v85 = 0u;
    long long v86 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v86 + 1))
  {
    int v23 = swift_dynamicCast();
    if (v23) {
      uint64_t v24 = v83;
    }
    else {
      uint64_t v24 = 0;
    }
    if (v23) {
      unint64_t v25 = v84;
    }
    else {
      unint64_t v25 = 0;
    }
    long long v81 = v25;
    uint64_t v82 = v24;
  }
  else
  {
    sub_25AB18FAC((uint64_t)&v85, &qword_26A49FD00);
    long long v81 = 0;
    uint64_t v82 = 0;
  }
  uint64_t v26 = sub_25AC34E40();
  if (*(void *)(a1 + 16) && (unint64_t v28 = sub_25AB8D62C(v26, v27), (v29 & 1) != 0))
  {
    sub_25AB18F50(*(void *)(a1 + 56) + 32 * v28, (uint64_t)&v85);
  }
  else
  {
    long long v85 = 0u;
    long long v86 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v86 + 1))
  {
    int v30 = swift_dynamicCast();
    if (v30) {
      uint64_t v31 = v83;
    }
    else {
      uint64_t v31 = 0;
    }
    if (v30) {
      double v32 = v84;
    }
    else {
      double v32 = 0;
    }
    uint64_t v79 = v32;
    uint64_t v80 = v31;
  }
  else
  {
    sub_25AB18FAC((uint64_t)&v85, &qword_26A49FD00);
    uint64_t v79 = 0;
    uint64_t v80 = 0;
  }
  uint64_t v33 = sub_25AC34E40();
  if (*(void *)(a1 + 16) && (unint64_t v35 = sub_25AB8D62C(v33, v34), (v36 & 1) != 0))
  {
    sub_25AB18F50(*(void *)(a1 + 56) + 32 * v35, (uint64_t)&v85);
  }
  else
  {
    long long v85 = 0u;
    long long v86 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v86 + 1))
  {
    sub_25AB18FAC((uint64_t)&v85, &qword_26A49FD00);
    goto LABEL_43;
  }
  if (!swift_dynamicCast())
  {
LABEL_43:
    int v37 = 1;
    goto LABEL_44;
  }
  int v37 = v83;
LABEL_44:
  int v78 = v37;
  uint64_t v38 = sub_25AC34E40();
  if (*(void *)(a1 + 16) && (unint64_t v40 = sub_25AB8D62C(v38, v39), (v41 & 1) != 0))
  {
    sub_25AB18F50(*(void *)(a1 + 56) + 32 * v40, (uint64_t)&v85);
  }
  else
  {
    long long v85 = 0u;
    long long v86 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v86 + 1))
  {
    sub_25AB18FAC((uint64_t)&v85, &qword_26A49FD00);
    goto LABEL_52;
  }
  if (!swift_dynamicCast())
  {
LABEL_52:
    char v42 = 1;
    goto LABEL_53;
  }
  char v42 = v83;
LABEL_53:
  uint64_t v43 = sub_25AC34E40();
  if (*(void *)(a1 + 16) && (unint64_t v45 = sub_25AB8D62C(v43, v44), (v46 & 1) != 0))
  {
    sub_25AB18F50(*(void *)(a1 + 56) + 32 * v45, (uint64_t)&v85);
  }
  else
  {
    long long v85 = 0u;
    long long v86 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v86 + 1))
  {
    sub_25AB18FAC((uint64_t)&v85, &qword_26A49FD00);
    goto LABEL_61;
  }
  if (!swift_dynamicCast())
  {
LABEL_61:
    char v47 = 1;
    goto LABEL_62;
  }
  char v47 = v83;
LABEL_62:
  uint64_t v48 = sub_25AC34E40();
  if (*(void *)(a1 + 16) && (unint64_t v50 = sub_25AB8D62C(v48, v49), (v51 & 1) != 0))
  {
    sub_25AB18F50(*(void *)(a1 + 56) + 32 * v50, (uint64_t)&v85);
  }
  else
  {
    long long v85 = 0u;
    long long v86 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v86 + 1))
  {
    sub_25AB18FAC((uint64_t)&v85, &qword_26A49FD00);
    goto LABEL_70;
  }
  if (!swift_dynamicCast())
  {
LABEL_70:
    char v52 = 0;
    goto LABEL_71;
  }
  char v52 = v83;
LABEL_71:
  uint64_t v53 = sub_25AC34E40();
  if (*(void *)(a1 + 16) && (unint64_t v55 = sub_25AB8D62C(v53, v54), (v56 & 1) != 0))
  {
    sub_25AB18F50(*(void *)(a1 + 56) + 32 * v55, (uint64_t)&v85);
  }
  else
  {
    long long v85 = 0u;
    long long v86 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v86 + 1))
  {
    sub_25AB18FAC((uint64_t)&v85, &qword_26A49FD00);
    goto LABEL_79;
  }
  if (!swift_dynamicCast())
  {
LABEL_79:
    char v57 = 0;
    goto LABEL_80;
  }
  char v57 = v83;
LABEL_80:
  uint64_t v58 = sub_25AC34E40();
  if (*(void *)(a1 + 16) && (unint64_t v60 = sub_25AB8D62C(v58, v59), (v61 & 1) != 0))
  {
    sub_25AB18F50(*(void *)(a1 + 56) + 32 * v60, (uint64_t)&v85);
  }
  else
  {
    long long v85 = 0u;
    long long v86 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v86 + 1))
  {
    sub_25AB18FAC((uint64_t)&v85, &qword_26A49FD00);
    goto LABEL_88;
  }
  if (!swift_dynamicCast())
  {
LABEL_88:
    char v62 = 0;
    goto LABEL_89;
  }
  char v62 = v83;
LABEL_89:
  uint64_t v63 = sub_25AC34E40();
  if (*(void *)(a1 + 16) && (unint64_t v65 = sub_25AB8D62C(v63, v64), (v66 & 1) != 0))
  {
    sub_25AB18F50(*(void *)(a1 + 56) + 32 * v65, (uint64_t)&v85);
  }
  else
  {
    long long v85 = 0u;
    long long v86 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v86 + 1))
  {
    sub_25AB18FAC((uint64_t)&v85, &qword_26A49FD00);
    goto LABEL_97;
  }
  if (!swift_dynamicCast())
  {
LABEL_97:
    char v67 = 0;
    goto LABEL_98;
  }
  char v67 = v83;
LABEL_98:
  uint64_t v68 = sub_25AC34E40();
  if (*(void *)(a1 + 16) && (unint64_t v70 = sub_25AB8D62C(v68, v69), (v71 & 1) != 0))
  {
    sub_25AB18F50(*(void *)(a1 + 56) + 32 * v70, (uint64_t)&v85);
  }
  else
  {
    long long v85 = 0u;
    long long v86 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)&v86 + 1))
  {
    uint64_t result = swift_dynamicCast();
    uint64_t v73 = v83;
    uint64_t v74 = v84;
    if (!result)
    {
      uint64_t v73 = 0;
      uint64_t v74 = 0;
    }
  }
  else
  {
    uint64_t result = sub_25AB18FAC((uint64_t)&v85, &qword_26A49FD00);
    uint64_t v73 = 0;
    uint64_t v74 = 0;
  }
  uint64_t v75 = v81;
  *(void *)a2 = v82;
  *(void *)(a2 + 8) = v75;
  long long v76 = v79;
  *(void *)(a2 + 16) = v80;
  *(void *)(a2 + 24) = v76;
  *(unsigned char *)(a2 + 32) = v78;
  *(unsigned char *)(a2 + 33) = v42;
  *(unsigned char *)(a2 + 34) = v47;
  *(unsigned char *)(a2 + 35) = v52;
  *(unsigned char *)(a2 + 36) = v57;
  *(unsigned char *)(a2 + 37) = v62;
  *(unsigned char *)(a2 + 38) = v67;
  *(void *)(a2 + 40) = v73;
  *(void *)(a2 + 48) = v74;
  return result;
}

uint64_t sub_25AB4ECDC(char a1)
{
  uint64_t v3 = sub_25AC352F0();
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = sub_25AC34CA0();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_25AC35320();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MockSPRReader();
  *(void *)(v1 + 24) = swift_allocObject();
  sub_25AB4A328();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8F138], v5);
  sub_25AC34C80();
  v10[1] = MEMORY[0x263F8EE78];
  sub_25AB580F0((unint64_t *)&qword_26A4A03A0, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A03A8);
  sub_25AB58138((unint64_t *)&qword_26A4A03B0, &qword_26A4A03A8);
  sub_25AC35510();
  *(void *)(v1 + 32) = sub_25AC35340();
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(unsigned char *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_25AB4EF4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v3 + 16) == 1) {
    return sub_25AB7AA80();
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_25AB56C4C(0, v3, a1, a2, a3);
  if (v4)
  {
    swift_bridgeObjectRelease();
    if (qword_26A49F800 != -1) {
      swift_once();
    }
    uint64_t v12 = __swift_project_value_buffer(v8, (uint64_t)qword_26A4A1CE8);
    sub_25AB150E0(v12, (uint64_t)v10);
    uint64_t v13 = sub_25AC345E0();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13) == 1)
    {
      sub_25AB15148((uint64_t)v10);
    }
    else
    {
      id v15 = v4;
      id v16 = v4;
      uint64_t v3 = (uint64_t)v10;
      uint64_t v17 = sub_25AC345C0();
      os_log_type_t v18 = sub_25AC352C0();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        uint64_t v26 = (uint64_t)v4;
        uint64_t v27 = v25;
        *(_DWORD *)uint64_t v19 = 136446210;
        v24[1] = v19 + 4;
        id v20 = v4;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A00C0);
        uint64_t v21 = sub_25AC34EB0();
        uint64_t v26 = sub_25AB56574(v21, v22, &v27);
        sub_25AC354A0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_25AB11000, v17, v18, "Status error: [ %{public}s ]", v19, 0xCu);
        uint64_t v3 = v25;
        swift_arrayDestroy();
        MEMORY[0x261151C20](v3, -1, -1);
        MEMORY[0x261151C20](v19, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v13);
    }
    swift_willThrow();
  }
  else
  {
    uint64_t v3 = v11;
    swift_bridgeObjectRelease();
  }
  return v3;
}

void sub_25AB4F27C(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  v30[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v9, (uint64_t)qword_26A4A1CE8);
  sub_25AB150E0(v12, (uint64_t)v11);
  uint64_t v13 = sub_25AC345E0();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) == 1)
  {
    sub_25AB15148((uint64_t)v11);
  }
  else
  {
    v27[1] = a2;
    unint64_t v28 = a4;
    uint64_t v29 = v4;
    id v15 = sub_25AC345C0();
    os_log_type_t v16 = sub_25AC352D0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = a1;
      uint64_t v18 = a3;
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_25AB11000, v15, v16, "Requesting status", v19, 2u);
      id v20 = v19;
      a3 = v18;
      a1 = v17;
      MEMORY[0x261151C20](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    a4 = v28;
  }
  uint64_t v21 = (void *)sub_25AC34E10();
  v30[0] = 0;
  id v22 = objc_msgSend(a1, sel_statusWithToken_options_error_, v21, a3, v30);

  id v23 = v30[0];
  if (v22)
  {
    uint64_t v24 = sub_25AC34DA0();
    id v25 = v23;

    *a4 = v24;
  }
  else
  {
    id v26 = v30[0];
    sub_25AC321F0();

    swift_willThrow();
  }
}

uint64_t sub_25AB4F550(uint8_t *a1, uint64_t a2, char a3, char a4)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v4 + 16) == 1)
  {
    unint64_t v13 = sub_25AB71794(MEMORY[0x263F8EE78]);
    return sub_25AB8DA34(v13);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_25AB575A8(0, v4, (uint64_t)a1, a2, a3 & 1, a4 & 1);
    if (v5)
    {
      swift_bridgeObjectRelease();
      if (qword_26A49F800 != -1) {
        swift_once();
      }
      uint64_t v15 = __swift_project_value_buffer(v10, (uint64_t)qword_26A4A1CE8);
      sub_25AB150E0(v15, (uint64_t)v12);
      uint64_t v16 = sub_25AC345E0();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16) == 1)
      {
        sub_25AB15148((uint64_t)v12);
      }
      else
      {
        id v18 = v5;
        id v19 = v5;
        id v20 = sub_25AC345C0();
        os_log_type_t v21 = sub_25AC352C0();
        if (os_log_type_enabled(v20, v21))
        {
          a1 = (uint8_t *)swift_slowAlloc();
          uint64_t v28 = swift_slowAlloc();
          uint64_t v29 = (uint64_t)v5;
          uint64_t v30 = v28;
          *(_DWORD *)a1 = 136446210;
          v27[1] = a1 + 4;
          id v22 = v5;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A00C0);
          uint64_t v23 = sub_25AC34EB0();
          uint64_t v29 = sub_25AB56574(v23, v24, &v30);
          sub_25AC354A0();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_25AB11000, v20, v21, "Prepare error: [ %{public}s ]", a1, 0xCu);
          uint64_t v25 = v28;
          swift_arrayDestroy();
          MEMORY[0x261151C20](v25, -1, -1);
          MEMORY[0x261151C20](a1, -1, -1);
        }
        else
        {
        }
        (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v16);
      }
      swift_willThrow();
    }
    else
    {
      a1 = (uint8_t *)v14;
      swift_bridgeObjectRelease();
    }
  }
  return (uint64_t)a1;
}

uint64_t sub_25AB4F8AC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t *a6@<X8>)
{
  int v53 = a4;
  int v54 = a5;
  char v51 = a6;
  uint64_t v52 = a3;
  uint64_t v50 = a2;
  id v55 = a1;
  v56[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v47 - v10;
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v49 = v9;
  uint64_t v47 = __swift_project_value_buffer(v6, (uint64_t)qword_26A4A1CE8);
  sub_25AB150E0(v47, (uint64_t)v11);
  uint64_t v12 = sub_25AC345E0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v11, 1, v12);
  uint64_t v48 = v13;
  if (v15 == 1)
  {
    sub_25AB15148((uint64_t)v11);
  }
  else
  {
    uint64_t v16 = sub_25AC345C0();
    os_log_type_t v17 = sub_25AC352D0();
    if (os_log_type_enabled(v16, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v18 = 0;
      _os_log_impl(&dword_25AB11000, v16, v17, "Requesting prepare", v18, 2u);
      MEMORY[0x261151C20](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
  }
  id v19 = (uint64_t (*)(void))sub_25AC34000();
  char v20 = v19();
  swift_release();
  if ((v20 & 1) != 0
    && (os_log_type_t v21 = self,
        id v22 = objc_msgSend(v21, sel_standardUserDefaults),
        uint64_t v23 = (void *)sub_25AC34E10(),
        id v24 = objc_msgSend(v22, sel_integerForKey_, v23),
        v22,
        v23,
        v24))
  {
    uint64_t v25 = (uint64_t (*)(void))sub_25AC34000();
    char v26 = v25();
    swift_release();
    if (v26)
    {
      id v27 = objc_msgSend(v21, sel_standardUserDefaults);
      uint64_t v28 = (void *)sub_25AC34E10();
      id v29 = objc_msgSend(v27, sel_integerForKey_, v28);
    }
    else
    {
      id v29 = 0;
    }
    uint64_t v40 = (uint64_t)v49;
    sub_25AB150E0(v47, (uint64_t)v49);
    int v41 = v14((char *)v40, 1, v12);
    uint64_t v42 = v48;
    if (v41 == 1)
    {
      sub_25AB15148(v40);
    }
    else
    {
      uint64_t v43 = sub_25AC345C0();
      os_log_type_t v44 = sub_25AC352D0();
      if (os_log_type_enabled(v43, v44))
      {
        unint64_t v45 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)unint64_t v45 = 134217984;
        v56[0] = v29;
        sub_25AC354A0();
        _os_log_impl(&dword_25AB11000, v43, v44, "mockSPRConfigError = %ld", v45, 0xCu);
        MEMORY[0x261151C20](v45, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v12);
    }
    id v46 = objc_allocWithZone(MEMORY[0x263F087E8]);
    id v39 = (id)sub_25AC34E10();
    objc_msgSend(v46, sel_initWithDomain_code_userInfo_, v39, v29, 0);
  }
  else
  {
    if (v52) {
      uint64_t v30 = (void *)sub_25AC34E10();
    }
    else {
      uint64_t v30 = 0;
    }
    v56[0] = 0;
    id v31 = objc_msgSend(v55, sel_prepareAndWarnWithToken_force_enableStoreAndForward_error_, v30, v53 & 1, v54 & 1, v56);

    id v32 = v56[0];
    if (v31)
    {
      uint64_t v33 = sub_25AC34DA0();
      id v34 = v32;

      uint64_t result = sub_25AB8DA34(v33);
      char v36 = v51;
      *char v51 = result;
      v36[1] = v37;
      v36[2] = v38;
      return result;
    }
    id v39 = v56[0];
    sub_25AC321F0();
  }

  return swift_willThrow();
}

uint64_t sub_25AB4FE00(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0070);
  MEMORY[0x270FA5388](v13 - 8);
  int v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v4 + 16) == 1)
  {
    if (a3)
    {
      uint64_t v16 = sub_25AC35140();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
      os_log_type_t v17 = (void *)swift_allocObject();
      v17[2] = 0;
      v17[3] = 0;
      v17[4] = a4;
      swift_retain();
      sub_25AC15E44((uint64_t)v15, (uint64_t)&unk_26A4A0470, (uint64_t)v17);
      return swift_release();
    }
    else
    {
      return sub_25AB76264(0, 0);
    }
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_25AB548A0(0, (void *)v4, a1, a2, a3 & 1, a4, v19);
    if (v5)
    {
      if (qword_26A49F800 != -1) {
        swift_once();
      }
      uint64_t v20 = __swift_project_value_buffer(v10, (uint64_t)qword_26A4A1CE8);
      sub_25AB150E0(v20, (uint64_t)v12);
      uint64_t v21 = sub_25AC345E0();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 1, v21) == 1)
      {
        sub_25AB15148((uint64_t)v12);
      }
      else
      {
        id v23 = v5;
        id v24 = v5;
        uint64_t v25 = sub_25AC345C0();
        os_log_type_t v26 = sub_25AC352C0();
        if (os_log_type_enabled(v25, v26))
        {
          id v27 = (uint8_t *)swift_slowAlloc();
          uint64_t v33 = swift_slowAlloc();
          uint64_t v34 = (uint64_t)v5;
          uint64_t v35 = v33;
          *(_DWORD *)id v27 = 136446210;
          v32[1] = v27 + 4;
          id v28 = v5;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A00C0);
          uint64_t v29 = sub_25AC34EB0();
          uint64_t v34 = sub_25AB56574(v29, v30, &v35);
          sub_25AC354A0();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_25AB11000, v25, v26, "Install error: [ %{public}s ]", v27, 0xCu);
          uint64_t v31 = v33;
          swift_arrayDestroy();
          MEMORY[0x261151C20](v31, -1, -1);
          MEMORY[0x261151C20](v27, -1, -1);
        }
        else
        {
        }
        (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v21);
      }
      return swift_willThrow();
    }
  }
  return result;
}

void sub_25AB50204(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v10, (uint64_t)qword_26A4A1CE8);
  sub_25AB150E0(v13, (uint64_t)v12);
  uint64_t v14 = sub_25AC345E0();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) == 1)
  {
    sub_25AB15148((uint64_t)v12);
  }
  else
  {
    v21[1] = a2;
    v21[3] = a3;
    uint64_t v16 = sub_25AC345C0();
    os_log_type_t v17 = sub_25AC352D0();
    if (os_log_type_enabled(v16, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      v21[0] = a1;
      uint64_t v19 = v18;
      *(_WORD *)id v18 = 0;
      _os_log_impl(&dword_25AB11000, v16, v17, "Requesting install", v18, 2u);
      a1 = (void *)v21[0];
      MEMORY[0x261151C20](v19, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
  }
  uint64_t v20 = (void *)sub_25AC34E10();
  objc_msgSend(a1, sel_installAsyncWithToken_force_callback_, v20, a4 & 1, a5);
}

void sub_25AB5044C(void *a1, uint64_t a2)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_project_value_buffer(v4, (uint64_t)qword_26A4A1CE8);
  sub_25AB150E0(v7, (uint64_t)v6);
  uint64_t v8 = sub_25AC345E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_25AB15148((uint64_t)v6);
  }
  else
  {
    uint64_t v10 = sub_25AC345C0();
    os_log_type_t v11 = sub_25AC352D0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_25AB11000, v10, v11, "Requesting to validate read preconditions", v12, 2u);
      MEMORY[0x261151C20](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  uint64_t v13 = (uint64_t (*)(void))sub_25AC34000();
  char v14 = v13();
  swift_release();
  if ((v14 & 1) != 0
    && (id v15 = objc_msgSend(self, sel_standardUserDefaults),
        uint64_t v16 = (void *)sub_25AC34E10(),
        unsigned int v17 = objc_msgSend(v15, sel_BOOLForKey_, v16),
        v15,
        v16,
        v17))
  {
    sub_25AB57F44();
    swift_allocError();
    *(void *)uint64_t v18 = 1;
    *(unsigned char *)(v18 + 8) = 64;
    swift_willThrow();
  }
  else
  {
    uint64_t v19 = (void *)sub_25AB6A4DC(a2);
    uint64_t v21 = v19;
    uint64_t v22 = v20;
    if ((v20 & 0x100) != 0)
    {
      id v26 = v19;
      char v27 = v20;
      sub_25AB507A4((uint64_t *)&v26);
    }
    else
    {
      id v26 = 0;
      if (objc_msgSend(a1, sel_validateWithReadParameters_error_, v19, &v26))
      {
        id v23 = v26;
      }
      else
      {
        id v24 = v26;
        sub_25AC321F0();

        swift_willThrow();
      }
      sub_25AB57F38(v21, v22, 0);
    }
  }
}

uint64_t sub_25AB507A4(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *a1;
  LODWORD(v6) = *((unsigned __int8 *)a1 + 8);
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1CE8);
  sub_25AB150E0(v7, (uint64_t)v4);
  uint64_t v8 = sub_25AC345E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8) == 1)
  {
    sub_25AB15148((uint64_t)v4);
  }
  else
  {
    uint64_t v10 = sub_25AC345C0();
    os_log_type_t v11 = sub_25AC352C0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v23 = v5;
      uint64_t v13 = (uint8_t *)v12;
      uint64_t v14 = swift_slowAlloc();
      int v22 = (int)v6;
      uint64_t v6 = (void *)v14;
      *(_DWORD *)uint64_t v13 = 138412290;
      v21[1] = v13 + 4;
      sub_25AB57F44();
      swift_allocError();
      *(void *)uint64_t v15 = v23;
      *(unsigned char *)(v15 + 8) = v22;
      uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v24 = v16;
      sub_25AC354A0();
      void *v6 = v16;
      _os_log_impl(&dword_25AB11000, v10, v11, "Error validating read preconditions [ %@ ]", v13, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A8);
      swift_arrayDestroy();
      unsigned int v17 = v6;
      LOBYTE(v6) = v22;
      MEMORY[0x261151C20](v17, -1, -1);
      uint64_t v18 = v13;
      uint64_t v5 = v23;
      MEMORY[0x261151C20](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v4, v8);
  }
  sub_25AB57F44();
  swift_allocError();
  *(void *)uint64_t v19 = v5;
  *(unsigned char *)(v19 + 8) = (_BYTE)v6;
  return swift_willThrow();
}

uint64_t sub_25AB50A68(void *a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0070);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v2 + 16) == 1)
  {
    uint64_t v8 = *(void *)(v2 + 24);
    uint64_t v9 = sub_25AC35140();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
    uint64_t v10 = (void *)swift_allocObject();
    void v10[2] = 0;
    v10[3] = 0;
    v10[4] = a2;
    v10[5] = a1;
    v10[6] = v8;
    swift_retain();
    id v11 = a1;
    swift_retain();
    sub_25AC15E44((uint64_t)v7, (uint64_t)&unk_26A4A0468, (uint64_t)v10);
    return swift_release();
  }
  else
  {
    swift_retain();
    id v13 = a1;
    swift_retain();
    return sub_25AB52D04(0, v2, v13, a2, v2, v14);
  }
}

void sub_25AB50C10(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v8, (uint64_t)qword_26A4A1CE8);
  sub_25AB150E0(v11, (uint64_t)v10);
  uint64_t v12 = sub_25AC345E0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
  {
    sub_25AB15148((uint64_t)v10);
  }
  else
  {
    uint64_t v20 = a1;
    uint64_t v22 = a2;
    uint64_t v14 = sub_25AC345C0();
    os_log_type_t v15 = sub_25AC352D0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_25AB11000, v14, v15, "Requesting readCard", v16, 2u);
      MEMORY[0x261151C20](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    a2 = v22;
    a1 = v20;
  }
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a4;
  *(void *)(v17 + 24) = a3;
  aBlock[4] = sub_25AB58D54;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25AB5116C;
  aBlock[3] = &block_descriptor_34;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_readCardWithParameter_delegate_completion_, a2, a3, v18);
  _Block_release(v18);
}

void sub_25AB50EC8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    _s3__C4CodeOMa_1(0);
    v20[1] = (void *)14001;
    id v10 = a2;
    sub_25AB580F0(&qword_26A49FB98, _s3__C4CodeOMa_1);
    if (sub_25AC32100())
    {
      uint64_t v11 = *(void **)(a3 + 40);
      *(void *)(a3 + 40) = 0;
    }
    sub_25AB866EC(a2, a1);
  }
  else if (a1)
  {
    v20[0] = a1;
    sub_25AB85AE8(v20[0]);
    uint64_t v12 = v20[0];
  }
  else
  {
    if (qword_26A49F800 != -1)
    {
      uint64_t v19 = v7;
      swift_once();
      uint64_t v7 = v19;
    }
    uint64_t v13 = __swift_project_value_buffer(v7, (uint64_t)qword_26A4A1CE8);
    sub_25AB150E0(v13, (uint64_t)v9);
    uint64_t v14 = sub_25AC345E0();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14) == 1)
    {
      sub_25AB15148((uint64_t)v9);
    }
    else
    {
      uint64_t v16 = sub_25AC345C0();
      os_log_type_t v17 = sub_25AC352C0();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v18 = 0;
        _os_log_impl(&dword_25AB11000, v16, v17, "readCard did not return any error or transactionData", v18, 2u);
        MEMORY[0x261151C20](v18, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
    }
  }
}

void sub_25AB5116C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_25AB511F8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v1);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 16);
  if ((v2 & 1) == 0) {
    sub_25AB536B0(0, v0, v2);
  }
}

id sub_25AB514D8(void *a1)
{
  v13[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1CE8);
  sub_25AB150E0(v5, (uint64_t)v4);
  uint64_t v6 = sub_25AC345E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_25AB15148((uint64_t)v4);
  }
  else
  {
    uint64_t v8 = sub_25AC345C0();
    os_log_type_t v9 = sub_25AC352D0();
    if (os_log_type_enabled(v8, v9))
    {
      id v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v10 = 0;
      _os_log_impl(&dword_25AB11000, v8, v9, "Cancelling current readCard", v10, 2u);
      MEMORY[0x261151C20](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  v13[0] = 0;
  if (objc_msgSend(a1, sel_cancelReadAndReturnError_, v13)) {
    return v13[0];
  }
  id v12 = v13[0];
  sub_25AC321F0();

  return (id)swift_willThrow();
}

unint64_t sub_25AB5171C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v10);
  if (*(unsigned char *)(v4 + 16)) {
    return 0xD000000000000013;
  }
  uint64_t v29 = (uint64_t)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AB29558(a1, a2);
  sub_25AB29544(a3, a4);
  uint64_t v13 = sub_25AB581F8(0, v4, a1, a2, a3, a4);
  if (v5)
  {
    sub_25AB16944(a3, a4);
    sub_25AB16958(a1, a2);
    if (qword_26A49F800 != -1) {
      swift_once();
    }
    uint64_t v14 = __swift_project_value_buffer(v10, (uint64_t)qword_26A4A1CE8);
    uint64_t v15 = v29;
    sub_25AB150E0(v14, v29);
    uint64_t v16 = sub_25AC345E0();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {

      sub_25AB15148(v15);
    }
    else
    {
      id v18 = v5;
      id v19 = v5;
      uint64_t v20 = sub_25AC345C0();
      os_log_type_t v21 = sub_25AC352C0();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        uint64_t v23 = swift_slowAlloc();
        uint64_t v31 = v23;
        *(_DWORD *)uint64_t v22 = 136446210;
        v28[1] = v22 + 4;
        uint64_t v30 = (uint64_t)v5;
        id v24 = v5;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A00C0);
        uint64_t v25 = sub_25AC34EB0();
        uint64_t v30 = sub_25AB56574(v25, v26, &v31);
        sub_25AC354A0();
        uint64_t v15 = v29;
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_25AB11000, v20, v21, "Secure reader blob error: [ %{public}s ]", v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x261151C20](v23, -1, -1);
        MEMORY[0x261151C20](v22, -1, -1);
      }
      else
      {
      }
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    }
    return 0;
  }
  else
  {
    uint64_t v12 = v13;
    sub_25AB16944(a3, a4);
    sub_25AB16958(a1, a2);
  }
  return v12;
}

void sub_25AB51AB8(void *a1@<X0>, uint64_t a2@<X3>, unint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  id v31 = a1;
  uint64_t v29 = a2;
  uint64_t v30 = a4;
  v32[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_project_value_buffer(v5, (uint64_t)qword_26A4A1CE8);
  sub_25AB150E0(v8, (uint64_t)v7);
  uint64_t v9 = sub_25AC345E0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) == 1)
  {
    sub_25AB15148((uint64_t)v7);
  }
  else
  {
    uint64_t v11 = sub_25AC345C0();
    os_log_type_t v12 = sub_25AC352D0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_25AB11000, v11, v12, "Requesting secure reader blob", v13, 2u);
      MEMORY[0x261151C20](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  uint64_t v14 = (uint64_t (*)(void))sub_25AC34000();
  char v15 = v14(v14);
  swift_release();
  if (v15)
  {
    id v16 = objc_msgSend(self, sel_standardUserDefaults, v29);
    uint64_t v17 = (void *)sub_25AC34E10();
    unsigned int v18 = objc_msgSend(v16, sel_BOOLForKey_, v17);

    if (v18) {
      objc_msgSend(self, sel_sleepForTimeInterval_, 3.0);
    }
  }
  id v19 = (void *)sub_25AC32380();
  if (a3 >> 60 == 15) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = (void *)sub_25AC32380();
  }
  v32[0] = 0;
  id v21 = objc_msgSend(v31, sel_generateSecureReaderBlobWithTrxBlob_pinBlob_error_, v19, v20, v32, v29);

  id v22 = v32[0];
  if (v21)
  {
    uint64_t v23 = sub_25AC34E40();
    uint64_t v25 = v24;
    id v26 = v22;

    char v27 = v30;
    uint64_t *v30 = v23;
    v27[1] = v25;
  }
  else
  {
    id v28 = v32[0];
    sub_25AC321F0();

    swift_willThrow();
  }
}

uint64_t sub_25AB51E20(uint64_t a1)
{
  uint64_t v2 = v1;
  int v4 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v5 = *(void *)(a1 + 32);
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 8), v5);
  if (v4 == 1)
  {
    uint64_t result = sub_25AB14164();
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = result;
      unint64_t v9 = v7;
      v11[0] = result;
      v11[1] = v7;
      sub_25AB7A3B8(v11, a1, &v10);
      return sub_25AB16944(v8, v9);
    }
  }
  else
  {
    uint64_t result = sub_25AB145C0(v5);
    if (result)
    {
      v11[0] = result;
      sub_25AB51F08(v11, v2, a1);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_25AB51F08(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25AC34C60();
  uint64_t v20 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_25AC34CA0();
  uint64_t v9 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  uint64_t v18 = *(void *)(a2 + 32);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  sub_25AB58024(a3, (uint64_t)v22);
  uint64_t v14 = swift_allocObject();
  long long v15 = v22[1];
  *(_OWORD *)(v14 + 24) = v22[0];
  *(void *)(v14 + 16) = v13;
  *(_OWORD *)(v14 + 40) = v15;
  *(_OWORD *)(v14 + 56) = v22[2];
  *(void *)(v14 + 72) = v12;
  aBlock[4] = sub_25AB580C8;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25AB72188;
  aBlock[3] = &block_descriptor_1;
  id v16 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_25AC34C80();
  uint64_t v23 = MEMORY[0x263F8EE78];
  sub_25AB580F0((unint64_t *)&qword_26A4A13A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0460);
  sub_25AB58138((unint64_t *)&qword_26A4A13B0, &qword_26A4A0460);
  sub_25AC35510();
  MEMORY[0x261150E70](0, v11, v8, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v19);
  swift_release();
  return swift_release();
}

uint64_t sub_25AB52228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v27 - v7;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_26A49F800 != -1) {
      swift_once();
    }
    uint64_t v10 = __swift_project_value_buffer(v5, (uint64_t)qword_26A4A1CE8);
    sub_25AB150E0(v10, (uint64_t)v8);
    uint64_t v11 = sub_25AC345E0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v34(v8, 1, v11) == 1)
    {
      uint64_t v13 = sub_25AB15148((uint64_t)v8);
    }
    else
    {
      uint64_t v33 = v10;
      sub_25AB58024(a2, (uint64_t)v36);
      swift_bridgeObjectRetain_n();
      uint64_t v14 = sub_25AC345C0();
      os_log_type_t v15 = sub_25AC352D0();
      int v16 = v15;
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v17 = swift_slowAlloc();
        uint64_t v31 = v11;
        uint64_t v18 = v17;
        uint64_t v29 = swift_slowAlloc();
        v37[0] = v29;
        *(_DWORD *)uint64_t v18 = 136315394;
        uint64_t v32 = v12;
        LOBYTE(v35) = v36[0];
        int v28 = v16;
        uint64_t v19 = sub_25AC34EB0();
        uint64_t v30 = a2;
        uint64_t v35 = sub_25AB56574(v19, v20, v37);
        sub_25AC354A0();
        swift_bridgeObjectRelease();
        sub_25AB581A4((uint64_t)v36);
        *(_WORD *)(v18 + 12) = 2080;
        v27[1] = v18 + 14;
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_25AC34DB0();
        unint64_t v23 = v22;
        swift_bridgeObjectRelease();
        uint64_t v24 = v21;
        uint64_t v12 = v32;
        uint64_t v35 = sub_25AB56574(v24, v23, v37);
        sub_25AC354A0();
        swift_bridgeObjectRelease_n();
        a2 = v30;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25AB11000, v14, (os_log_type_t)v28, "Monitor Event Type: [%s] Details: [%s]", (uint8_t *)v18, 0x16u);
        uint64_t v25 = v29;
        swift_arrayDestroy();
        MEMORY[0x261151C20](v25, -1, -1);
        uint64_t v26 = v18;
        uint64_t v11 = v31;
        MEMORY[0x261151C20](v26, -1, -1);
      }
      else
      {

        sub_25AB581A4((uint64_t)v36);
        swift_bridgeObjectRelease_n();
      }
      uint64_t v13 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v8, v11);
    }
    MEMORY[0x270FA5388](v13);
    v27[-2] = a2;
    v27[-1] = a3;
    sub_25AB55240((void (*)(void))sub_25AB58188, (uint64_t)&v27[-4], 0, (uint64_t)v27);
    return swift_release();
  }
  return result;
}

id sub_25AB52810(void *a1, unsigned __int8 *a2)
{
  v9[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = *a2 + 1200;
  unsigned __int8 v4 = sub_25AC34050();
  unsigned __int8 v5 = sub_25AC34010();
  uint64_t v6 = (void *)sub_25AC34D90();
  v9[0] = 0;
  LODWORD(a1) = objc_msgSend(a1, sel_signalWithEvent_component_origin_details_error_, v3, v4, v5, v6, v9);

  if (a1) {
    return v9[0];
  }
  id v8 = v9[0];
  sub_25AC321F0();

  return (id)swift_willThrow();
}

void sub_25AB52918(void *a1)
{
  v27[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v2);
  unsigned __int8 v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v5 = (void *)sub_25AC34E10();
  v27[0] = 0;
  unsigned __int8 v6 = objc_msgSend(a1, sel_verifyWithPINToken_error_, v5, v27);

  if (v6)
  {
    id v7 = v27[0];
  }
  else
  {
    id v8 = v27[0];
    uint64_t v9 = (void *)sub_25AC321F0();

    swift_willThrow();
    if (qword_26A49F800 != -1) {
      swift_once();
    }
    uint64_t v10 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1CE8);
    sub_25AB150E0(v10, (uint64_t)v4);
    uint64_t v11 = sub_25AC345E0();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v4, 1, v11) == 1)
    {
      sub_25AB15148((uint64_t)v4);
    }
    else
    {
      id v13 = v9;
      id v14 = v9;
      os_log_type_t v15 = sub_25AC345C0();
      os_log_type_t v16 = sub_25AC352C0();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        uint64_t v26 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 138412290;
        uint64_t v25 = v17 + 4;
        id v18 = v9;
        uint64_t v19 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v27[0] = v19;
        sub_25AC354A0();
        unint64_t v20 = v26;
        *uint64_t v26 = v19;

        _os_log_impl(&dword_25AB11000, v15, v16, "PIN token validation failed | error: %@", v17, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A8);
        swift_arrayDestroy();
        MEMORY[0x261151C20](v20, -1, -1);
        MEMORY[0x261151C20](v17, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v12 + 8))(v4, v11);
    }
    type metadata accessor for Code(0);
    v27[0] = (id)11004;
    id v21 = v9;
    sub_25AB580F0(&qword_26A49FAC8, type metadata accessor for Code);
    char v22 = sub_25AC32100();

    sub_25AB57F98();
    swift_allocError();
    uint64_t v24 = 27;
    if (v22) {
      uint64_t v24 = 30;
    }
    *unint64_t v23 = v24;
    swift_willThrow();
  }
}

uint64_t sub_25AB52D04@<X0>(int a1@<W0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  id v7 = v6;
  int v81 = a1;
  v85[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v13 = MEMORY[0x270FA5388](v82);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  os_log_type_t v16 = (char *)&v73 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v73 - v17;
  if (*(void *)(a2 + 40))
  {
    id v20 = a3;
    swift_retain();
    swift_retain();
    id v21 = *(void **)(a2 + 40);
    if (v21) {
      goto LABEL_3;
    }
LABEL_40:
    sub_25AB564F4();
    swift_allocError();
    *char v71 = 1;
    swift_willThrow();
    swift_release();
    id v22 = a3;
    goto LABEL_41;
  }
  uint64_t v78 = v18;
  uint64_t v80 = v6;
  uint64_t v83 = (char *)&v73 - v17;
  uint64_t v29 = self;
  id v30 = a3;
  swift_retain();
  swift_retain();
  id v31 = [v29 shared];
  v85[0] = 0;
  id v32 = objc_msgSend(v31, sel_makeReaderAndReturnError_, v85);

  id v33 = v85[0];
  if (v32) {
    goto LABEL_10;
  }
  long long v76 = v29;
  id v36 = v85[0];
  uint64_t v37 = (void *)sub_25AC321F0();

  swift_willThrow();
  uint64_t v80 = 0;
  _s3__C4CodeOMa_1(0);
  v85[0] = (id)14001;
  id v38 = v37;
  sub_25AB580F0(&qword_26A49FB98, _s3__C4CodeOMa_1);
  LOBYTE(v36) = sub_25AC32100();

  uint64_t v79 = a6;
  if (v36)
  {

    if (qword_26A49F800 != -1) {
      swift_once();
    }
    uint64_t v39 = __swift_project_value_buffer(v82, (uint64_t)qword_26A4A1CE8);
    sub_25AB150E0(v39, (uint64_t)v16);
    uint64_t v40 = sub_25AC345E0();
    uint64_t v41 = *(void *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v16, 1, v40) == 1)
    {
      sub_25AB15148((uint64_t)v16);
    }
    else
    {
      char v51 = sub_25AC345C0();
      os_log_type_t v52 = sub_25AC352C0();
      uint64_t v75 = v51;
      if (os_log_type_enabled(v51, v52))
      {
        int v53 = (uint8_t *)swift_slowAlloc();
        uint64_t v77 = a5;
        int v54 = v53;
        *(_WORD *)int v53 = 0;
        _os_log_impl(&dword_25AB11000, v75, v52, "SPR XPC service disconnected, let's try one more time", v53, 2u);
        id v55 = v54;
        a5 = v77;
        MEMORY[0x261151C20](v55, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v40);
    }
    id v56 = [v76 shared];
    v85[0] = 0;
    id v32 = objc_msgSend(v56, sel_makeReaderAndReturnError_, v85);

    id v33 = v85[0];
    uint64_t v50 = v78;
    a6 = v79;
    if (v32)
    {
LABEL_10:
      id v34 = v33;
      uint64_t v35 = *(void **)(a2 + 40);
      *(void *)(a2 + 40) = v32;

      uint64_t v19 = v83;
      goto LABEL_39;
    }
    id v57 = v85[0];
    uint64_t v37 = (void *)sub_25AC321F0();

    swift_willThrow();
    uint64_t v80 = 0;
  }
  else
  {
    uint64_t v50 = v78;
  }
  uint64_t v77 = a5;
  uint64_t v19 = v83;
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v58 = __swift_project_value_buffer(v82, (uint64_t)qword_26A4A1CE8);
  sub_25AB150E0(v58, v50);
  uint64_t v59 = sub_25AC345E0();
  uint64_t v60 = *(void *)(v59 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v50, 1, v59) == 1)
  {

    sub_25AB15148(v50);
  }
  else
  {
    id v61 = v37;
    id v62 = v37;
    uint64_t v63 = sub_25AC345C0();
    os_log_type_t v64 = sub_25AC352C0();
    LODWORD(v78) = v64;
    if (os_log_type_enabled(v63, v64))
    {
      long long v76 = v63;
      unint64_t v65 = (uint8_t *)swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      uint64_t v84 = (uint64_t)v37;
      v85[0] = v75;
      *(_DWORD *)unint64_t v65 = 136446210;
      uint64_t v73 = v65 + 4;
      uint64_t v74 = v65;
      id v66 = v37;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A00C0);
      uint64_t v67 = sub_25AC34EB0();
      uint64_t v84 = sub_25AB56574(v67, v68, (uint64_t *)v85);
      sub_25AC354A0();
      swift_bridgeObjectRelease();

      uint64_t v69 = v74;
      _os_log_impl(&dword_25AB11000, v76, (os_log_type_t)v78, "Could not make Reader module! Error: [ %{public}s ]", v74, 0xCu);
      unint64_t v70 = v75;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v70, -1, -1);
      MEMORY[0x261151C20](v69, -1, -1);
    }
    else
    {
    }
    uint64_t v19 = v83;
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v50, v59);
  }
  a5 = v77;
  a6 = v79;
LABEL_39:
  id v7 = v80;
  id v21 = *(void **)(a2 + 40);
  if (!v21) {
    goto LABEL_40;
  }
LABEL_3:
  id v22 = v21;
  sub_25AB50C10(v22, (uint64_t)a3, a4, a5);
  if (v7)
  {
    uint64_t v83 = v19;
    _s3__C4CodeOMa_1(0);
    v85[0] = (id)14001;
    id v23 = v7;
    sub_25AB580F0(&qword_26A49FB98, _s3__C4CodeOMa_1);
    char v24 = sub_25AC32100();

    if ((v24 & 1) == 0)
    {
LABEL_21:
      swift_release();

LABEL_41:
      swift_release();
      goto LABEL_42;
    }
    uint64_t v79 = a6;

    if (qword_26A49F800 != -1) {
      swift_once();
    }
    uint64_t v25 = __swift_project_value_buffer(v82, (uint64_t)qword_26A4A1CE8);
    uint64_t v26 = (uint64_t)v83;
    sub_25AB150E0(v25, (uint64_t)v83);
    uint64_t v27 = sub_25AC345E0();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
    {
      sub_25AB15148(v26);
    }
    else
    {
      uint64_t v42 = sub_25AC345C0();
      os_log_type_t v43 = sub_25AC352C0();
      if (os_log_type_enabled(v42, v43))
      {
        os_log_type_t v44 = (uint8_t *)swift_slowAlloc();
        uint64_t v77 = a5;
        unint64_t v45 = v44;
        *(_WORD *)os_log_type_t v44 = 0;
        _os_log_impl(&dword_25AB11000, v42, v43, "XPC service disconnected, let's try one more time", v44, 2u);
        id v46 = v45;
        a5 = v77;
        MEMORY[0x261151C20](v46, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v28 + 8))(v83, v27);
    }
    uint64_t v47 = *(void **)(a2 + 40);
    *(void *)(a2 + 40) = 0;

    if (v81)
    {
      sub_25AB564F4();
      swift_allocError();
      *uint64_t v48 = 1;
      swift_willThrow();
      goto LABEL_21;
    }
    id v49 = a3;
    swift_retain();
    swift_retain();
    sub_25AB52D04(1, a2, v49, a4, a5);
  }

  swift_release_n();
LABEL_42:

  return swift_release_n();
}

void sub_25AB536B0(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 v4 = v3;
  int v69 = a1;
  v71[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)v62 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v62 - v14;
  os_log_type_t v16 = *(void **)(a2 + 40);
  if (v16) {
    goto LABEL_5;
  }
  uint64_t v68 = a3;
  uint64_t v17 = self;
  id v18 = objc_msgSend(v17, sel_shared);
  v71[0] = 0;
  id v19 = objc_msgSend(v18, sel_makeReaderAndReturnError_, v71);

  id v20 = v71[0];
  if (v19) {
    goto LABEL_3;
  }
  id v29 = v71[0];
  id v30 = (void *)sub_25AC321F0();

  swift_willThrow();
  unsigned __int8 v4 = 0;
  _s3__C4CodeOMa_1(0);
  v71[0] = (id)14001;
  id v31 = v30;
  sub_25AB580F0(&qword_26A49FB98, _s3__C4CodeOMa_1);
  LOBYTE(v29) = sub_25AC32100();

  if (v29)
  {

    if (qword_26A49F800 != -1) {
      swift_once();
    }
    uint64_t v32 = __swift_project_value_buffer(v7, (uint64_t)qword_26A4A1CE8);
    sub_25AB150E0(v32, (uint64_t)v13);
    uint64_t v33 = sub_25AC345E0();
    uint64_t v34 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v13, 1, v33) == 1)
    {
      sub_25AB15148((uint64_t)v13);
    }
    else
    {
      uint64_t v66 = v33;
      uint64_t v41 = sub_25AC345C0();
      os_log_type_t v42 = sub_25AC352C0();
      uint64_t v67 = v41;
      os_log_type_t v43 = v41;
      os_log_type_t v44 = v42;
      if (os_log_type_enabled(v43, v42))
      {
        unint64_t v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v45 = 0;
        os_log_type_t v46 = v44;
        uint64_t v47 = v45;
        _os_log_impl(&dword_25AB11000, v67, v46, "SPR XPC service disconnected, let's try one more time", v45, 2u);
        MEMORY[0x261151C20](v47, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v66);
    }
    id v48 = objc_msgSend(v17, sel_shared);
    v71[0] = 0;
    id v19 = objc_msgSend(v48, sel_makeReaderAndReturnError_, v71);

    id v20 = v71[0];
    if (v19)
    {
LABEL_3:
      id v21 = v20;
      id v22 = *(void **)(a2 + 40);
      *(void *)(a2 + 40) = v19;

      goto LABEL_4;
    }
    id v49 = v71[0];
    id v30 = (void *)sub_25AC321F0();

    swift_willThrow();
    unsigned __int8 v4 = 0;
  }
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v50 = __swift_project_value_buffer(v7, (uint64_t)qword_26A4A1CE8);
  sub_25AB150E0(v50, (uint64_t)v10);
  uint64_t v51 = sub_25AC345E0();
  uint64_t v52 = *(void *)(v51 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v10, 1, v51) == 1)
  {

    sub_25AB15148((uint64_t)v10);
  }
  else
  {
    id v53 = v30;
    id v54 = v30;
    id v55 = sub_25AC345C0();
    os_log_type_t v56 = sub_25AC352C0();
    uint64_t v67 = v55;
    LODWORD(v66) = v56;
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v64 = v51;
      id v57 = (uint8_t *)swift_slowAlloc();
      uint64_t v63 = (void *)swift_slowAlloc();
      uint64_t v70 = (uint64_t)v30;
      v71[0] = v63;
      unint64_t v65 = v57;
      *(_DWORD *)id v57 = 136446210;
      v62[1] = v57 + 4;
      id v58 = v30;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A00C0);
      uint64_t v59 = sub_25AC34EB0();
      uint64_t v70 = sub_25AB56574(v59, v60, (uint64_t *)v71);
      sub_25AC354A0();
      uint64_t v51 = v64;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_25AB11000, v67, (os_log_type_t)v66, "Could not make Reader module! Error: [ %{public}s ]", v65, 0xCu);
      id v61 = v63;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v61, -1, -1);
      MEMORY[0x261151C20](v65, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v52 + 8))(v10, v51);
  }
LABEL_4:
  os_log_type_t v16 = *(void **)(a2 + 40);
  if (!v16)
  {
    sub_25AB564F4();
    swift_allocError();
    *uint64_t v35 = 1;
    swift_willThrow();
    return;
  }
LABEL_5:
  id v23 = v16;
  sub_25AB514D8(v23);
  if (v4)
  {
    _s3__C4CodeOMa_1(0);
    v71[0] = (id)14001;
    id v24 = v4;
    sub_25AB580F0(&qword_26A49FB98, _s3__C4CodeOMa_1);
    char v25 = sub_25AC32100();

    if (v25)
    {

      if (qword_26A49F800 != -1) {
        swift_once();
      }
      uint64_t v26 = __swift_project_value_buffer(v7, (uint64_t)qword_26A4A1CE8);
      sub_25AB150E0(v26, (uint64_t)v15);
      uint64_t v27 = sub_25AC345E0();
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v15, 1, v27) == 1)
      {
        sub_25AB15148((uint64_t)v15);
      }
      else
      {
        id v36 = sub_25AC345C0();
        os_log_type_t v37 = sub_25AC352C0();
        if (os_log_type_enabled(v36, v37))
        {
          id v38 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v38 = 0;
          _os_log_impl(&dword_25AB11000, v36, v37, "XPC service disconnected, let's try one more time", v38, 2u);
          MEMORY[0x261151C20](v38, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v27);
      }
      uint64_t v39 = *(void **)(a2 + 40);
      *(void *)(a2 + 40) = 0;

      if (v69)
      {
        sub_25AB564F4();
        swift_allocError();
        *uint64_t v40 = 1;
        swift_willThrow();
      }
      else
      {
        sub_25AB536B0(1, a2);
      }
    }
  }
}

void sub_25AB53F54(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned __int8 v5 = v4;
  int v80 = a1;
  v85[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)v72 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v81 = (uint64_t)v72 - v16;
  long long v17 = *(_OWORD *)a3;
  long long v83 = *(_OWORD *)(a3 + 16);
  long long v84 = v17;
  id v18 = *(void **)(a3 + 40);
  if (*(void *)(a2 + 40))
  {
    sub_25AB564C8((uint64_t)&v84);
    sub_25AB564C8((uint64_t)&v83);
    id v19 = v18;
    goto LABEL_5;
  }
  uint64_t v78 = a4;
  uint64_t v79 = v4;
  id v20 = self;
  sub_25AB564C8((uint64_t)&v84);
  sub_25AB564C8((uint64_t)&v83);
  id v21 = v18;
  id v22 = objc_msgSend(v20, sel_shared);
  v85[0] = 0;
  id v23 = objc_msgSend(v22, sel_makeReaderAndReturnError_, v85);

  id v24 = v85[0];
  if (v23) {
    goto LABEL_4;
  }
  id v37 = v85[0];
  id v38 = (void *)sub_25AC321F0();

  swift_willThrow();
  uint64_t v79 = 0;
  _s3__C4CodeOMa_1(0);
  v85[0] = (id)14001;
  id v39 = v38;
  sub_25AB580F0(&qword_26A49FB98, _s3__C4CodeOMa_1);
  LOBYTE(v37) = sub_25AC32100();

  if (v37)
  {

    if (qword_26A49F800 != -1) {
      swift_once();
    }
    uint64_t v40 = __swift_project_value_buffer(v9, (uint64_t)qword_26A4A1CE8);
    sub_25AB150E0(v40, (uint64_t)v15);
    uint64_t v41 = sub_25AC345E0();
    Class isa = v41[-1].isa;
    if ((*((unsigned int (**)(char *, uint64_t, NSObject *))isa + 6))(v15, 1, v41) == 1)
    {
      sub_25AB15148((uint64_t)v15);
    }
    else
    {
      long long v76 = v41;
      uint64_t v50 = sub_25AC345C0();
      os_log_type_t v51 = sub_25AC352C0();
      uint64_t v77 = v50;
      uint64_t v52 = v50;
      os_log_type_t v53 = v51;
      if (os_log_type_enabled(v52, v51))
      {
        id v54 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v54 = 0;
        os_log_type_t v55 = v53;
        os_log_type_t v56 = v54;
        _os_log_impl(&dword_25AB11000, v77, v55, "SPR XPC service disconnected, let's try one more time", v54, 2u);
        MEMORY[0x261151C20](v56, -1, -1);
      }

      (*((void (**)(char *, NSObject *))isa + 1))(v15, v76);
    }
    id v57 = objc_msgSend(v20, sel_shared);
    v85[0] = 0;
    id v23 = objc_msgSend(v57, sel_makeReaderAndReturnError_, v85);

    id v24 = v85[0];
    if (v23)
    {
LABEL_4:
      a4 = v78;
      id v25 = v24;
      uint64_t v26 = *(void **)(a2 + 40);
      *(void *)(a2 + 40) = v23;

      unsigned __int8 v5 = v79;
      goto LABEL_5;
    }
    id v58 = v85[0];
    id v38 = (void *)sub_25AC321F0();

    swift_willThrow();
    unsigned __int8 v5 = 0;
    a4 = v78;
  }
  else
  {
    a4 = v78;
    unsigned __int8 v5 = v79;
  }
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v59 = __swift_project_value_buffer(v9, (uint64_t)qword_26A4A1CE8);
  sub_25AB150E0(v59, (uint64_t)v12);
  unint64_t v60 = sub_25AC345E0();
  Class v61 = v60[-1].isa;
  id v62 = (unsigned int (*)(char *, uint64_t))*((void *)v61 + 6);
  uint64_t v77 = v60;
  if (v62(v12, 1) == 1)
  {

    sub_25AB15148((uint64_t)v12);
  }
  else
  {
    uint64_t v79 = v5;
    id v63 = v38;
    id v64 = v38;
    unint64_t v65 = sub_25AC345C0();
    os_log_type_t v66 = sub_25AC352C0();
    long long v76 = v65;
    int v75 = v66;
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      uint64_t v73 = (void *)swift_slowAlloc();
      v85[0] = v73;
      uint64_t v74 = v67;
      *(_DWORD *)uint64_t v67 = 136446210;
      v72[1] = v67 + 4;
      uint64_t v82 = (uint64_t)v38;
      id v68 = v38;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A00C0);
      uint64_t v69 = sub_25AC34EB0();
      uint64_t v82 = sub_25AB56574(v69, v70, (uint64_t *)v85);
      sub_25AC354A0();
      a4 = v78;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_25AB11000, v76, (os_log_type_t)v75, "Could not make Reader module! Error: [ %{public}s ]", v74, 0xCu);
      char v71 = v73;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v71, -1, -1);
      MEMORY[0x261151C20](v74, -1, -1);
    }
    else
    {
    }
    unsigned __int8 v5 = v79;
    (*((void (**)(char *, NSObject *))v61 + 1))(v12, v77);
  }
LABEL_5:
  uint64_t v27 = *(void **)(a2 + 40);
  if (v27)
  {
    id v28 = v27;
    id v29 = v5;
    sub_25AB5044C(v28, a3);
    if (v5)
    {
      _s3__C4CodeOMa_1(0);
      v85[0] = (id)14001;
      id v30 = v5;
      sub_25AB580F0(&qword_26A49FB98, _s3__C4CodeOMa_1);
      char v31 = sub_25AC32100();

      if (v31)
      {

        if (qword_26A49F800 != -1) {
          swift_once();
        }
        uint64_t v32 = __swift_project_value_buffer(v9, (uint64_t)qword_26A4A1CE8);
        uint64_t v33 = v81;
        sub_25AB150E0(v32, v81);
        uint64_t v34 = sub_25AC345E0();
        uint64_t v35 = *(void *)(v34 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34) == 1)
        {
          sub_25AB15148(v33);
        }
        else
        {
          os_log_type_t v43 = sub_25AC345C0();
          os_log_type_t v44 = sub_25AC352C0();
          if (os_log_type_enabled(v43, v44))
          {
            unint64_t v45 = (uint8_t *)swift_slowAlloc();
            uint64_t v78 = a4;
            os_log_type_t v46 = v45;
            *(_WORD *)unint64_t v45 = 0;
            _os_log_impl(&dword_25AB11000, v43, v44, "XPC service disconnected, let's try one more time", v45, 2u);
            MEMORY[0x261151C20](v46, -1, -1);
          }

          (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v81, v34);
        }
        uint64_t v47 = *(void **)(a2 + 40);
        *(void *)(a2 + 40) = 0;

        if (v80)
        {
          sub_25AB564F4();
          swift_allocError();
          *id v48 = 1;
          swift_willThrow();
        }
        else
        {
          sub_25AB564C8((uint64_t)&v84);
          sub_25AB564C8((uint64_t)&v83);
          id v49 = v18;
          sub_25AB53F54(1, a2, a3);
        }
      }
    }
  }
  else
  {
    sub_25AB564F4();
    swift_allocError();
    unsigned char *v36 = 1;
    swift_willThrow();
  }
  sub_25AB56548((uint64_t)&v84);
  sub_25AB56548((uint64_t)&v83);

  sub_25AB56548((uint64_t)&v84);
  sub_25AB56548((uint64_t)&v83);
}

uint64_t sub_25AB548A0@<X0>(int a1@<W0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int v78 = a1;
  v82[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  id v19 = (char *)v70 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v79 = (uint64_t)v70 - v20;
  id v21 = (void *)a2[6];
  if (v21)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    goto LABEL_7;
  }
  uint64_t v75 = a7;
  uint64_t v76 = v13;
  int v77 = a5;
  id v22 = self;
  swift_bridgeObjectRetain();
  swift_retain();
  id v23 = [v22 shared];
  v82[0] = 0;
  id v24 = objc_msgSend(v23, sel_makeConfiguratorAndReturnError_, v82);

  id v25 = v82[0];
  if (v24)
  {
    uint64_t v13 = v76;
LABEL_5:
    id v26 = v25;
    uint64_t v27 = (void *)a2[6];
    a2[6] = v24;

    a5 = v77;
    goto LABEL_6;
  }
  uint64_t v73 = v22;
  id v36 = v82[0];
  id v37 = (void *)sub_25AC321F0();

  swift_willThrow();
  int v80 = 0;
  _s3__C4CodeOMa_1(0);
  v82[0] = (id)14001;
  id v38 = v37;
  sub_25AB580F0(&qword_26A49FB98, _s3__C4CodeOMa_1);
  LOBYTE(v36) = sub_25AC32100();

  if (v36)
  {
    uint64_t v74 = a3;

    if (qword_26A49F800 != -1) {
      swift_once();
    }
    uint64_t v39 = __swift_project_value_buffer(v76, (uint64_t)qword_26A4A1CE8);
    sub_25AB150E0(v39, (uint64_t)v19);
    uint64_t v40 = sub_25AC345E0();
    uint64_t v41 = *(void *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v19, 1, v40) == 1)
    {
      sub_25AB15148((uint64_t)v19);
    }
    else
    {
      uint64_t v52 = (uint8_t *)sub_25AC345C0();
      os_log_type_t v53 = sub_25AC352C0();
      uint64_t v72 = v52;
      if (os_log_type_enabled((os_log_t)v52, v53))
      {
        id v54 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v54 = 0;
        _os_log_impl(&dword_25AB11000, v72, v53, "SPR XPC service disconnected, let's try one more time", v54, 2u);
        MEMORY[0x261151C20](v54, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v41 + 8))(v19, v40);
    }
    id v55 = [v73 shared];
    v82[0] = 0;
    id v24 = objc_msgSend(v55, sel_makeConfiguratorAndReturnError_, v82);

    id v25 = v82[0];
    a3 = v74;
    uint64_t v13 = v76;
    if (v24) {
      goto LABEL_5;
    }
    id v56 = v82[0];
    id v37 = (void *)sub_25AC321F0();

    swift_willThrow();
    int v80 = 0;
  }
  else
  {
    uint64_t v13 = v76;
  }
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v57 = __swift_project_value_buffer(v13, (uint64_t)qword_26A4A1CE8);
  sub_25AB150E0(v57, (uint64_t)v16);
  uint64_t v58 = sub_25AC345E0();
  uint64_t v59 = *(void *)(v58 - 8);
  unint64_t v60 = *(unsigned int (**)(char *, uint64_t))(v59 + 48);
  uint64_t v76 = v58;
  if (v60(v16, 1) == 1)
  {

    sub_25AB15148((uint64_t)v16);
    a5 = v77;
  }
  else
  {
    id v61 = v37;
    id v62 = v37;
    id v63 = sub_25AC345C0();
    os_log_type_t v64 = sub_25AC352C0();
    LODWORD(v74) = v64;
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v73 = v63;
      unint64_t v65 = (uint8_t *)swift_slowAlloc();
      char v71 = (void *)swift_slowAlloc();
      uint64_t v81 = (uint64_t)v37;
      v82[0] = v71;
      uint64_t v72 = v65;
      *(_DWORD *)unint64_t v65 = 136446210;
      v70[1] = v65 + 12;
      v70[0] = v65 + 4;
      id v66 = v37;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A00C0);
      uint64_t v67 = sub_25AC34EB0();
      uint64_t v81 = sub_25AB56574(v67, v68, (uint64_t *)v82);
      sub_25AC354A0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_25AB11000, v73, (os_log_type_t)v74, "Could not make Configurator module! Error: [ %{public}s ]", (uint8_t *)v72, 0xCu);
      uint64_t v69 = v71;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v69, -1, -1);
      MEMORY[0x261151C20](v72, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v59 + 8))(v16, v76);
    a5 = v77;
  }
LABEL_6:
  id v21 = (void *)a2[6];
  if (!v21)
  {
    sub_25AB564F4();
    swift_allocError();
    unsigned char *v42 = 2;
    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease();
LABEL_26:
    swift_release();
    return swift_bridgeObjectRelease();
  }
LABEL_7:
  id v28 = v21;
  id v29 = v80;
  sub_25AB50204(v28, a3, a4, a5 & 1, a6);
  if (v29)
  {
    int v80 = a2;
    _s3__C4CodeOMa_1(0);
    v82[0] = (id)14001;
    id v30 = v29;
    sub_25AB580F0(&qword_26A49FB98, _s3__C4CodeOMa_1);
    char v31 = sub_25AC32100();

    if ((v31 & 1) == 0)
    {
LABEL_25:
      swift_release();
      swift_bridgeObjectRelease();

      goto LABEL_26;
    }
    uint64_t v74 = a3;

    if (qword_26A49F800 != -1) {
      swift_once();
    }
    uint64_t v32 = __swift_project_value_buffer(v13, (uint64_t)qword_26A4A1CE8);
    uint64_t v33 = v79;
    sub_25AB150E0(v32, v79);
    uint64_t v34 = sub_25AC345E0();
    uint64_t v35 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34) == 1)
    {
      sub_25AB15148(v33);
    }
    else
    {
      int v77 = a5;
      os_log_type_t v43 = sub_25AC345C0();
      os_log_type_t v44 = sub_25AC352C0();
      if (os_log_type_enabled(v43, v44))
      {
        unint64_t v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v45 = 0;
        _os_log_impl(&dword_25AB11000, v43, v44, "XPC service disconnected, let's try one more time", v45, 2u);
        os_log_type_t v46 = v45;
        uint64_t v33 = v79;
        MEMORY[0x261151C20](v46, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
      LOBYTE(a5) = v77;
    }
    uint64_t v47 = v80;
    id v48 = (void *)v80[6];
    v80[6] = 0;

    uint64_t v49 = v74;
    if (v78)
    {
      sub_25AB564F4();
      swift_allocError();
      *uint64_t v50 = 2;
      swift_willThrow();
      goto LABEL_25;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    sub_25AB548A0(1, v47, v49, a4, a5 & 1, a6);
  }

  swift_release_n();
  return swift_bridgeObjectRelease_n();
}

void sub_25AB55240(void (*a1)(void)@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  unsigned __int8 v6 = v5;
  uint64_t v7 = v4;
  uint64_t v76 = a1;
  v78[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)v67 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v75 = (uint64_t)v67 - v18;
  id v19 = *(void **)(v7 + 56);
  if (v19) {
    goto LABEL_5;
  }
  uint64_t v73 = a4;
  uint64_t v74 = a2;
  uint64_t v20 = self;
  id v21 = objc_msgSend(v20, sel_shared);
  v78[0] = 0;
  id v22 = objc_msgSend(v21, sel_makeMonitorAndReturnError_, v78);

  id v23 = v78[0];
  if (v22) {
    goto LABEL_3;
  }
  id v33 = v78[0];
  uint64_t v34 = (void *)sub_25AC321F0();

  swift_willThrow();
  unsigned __int8 v6 = 0;
  _s3__C4CodeOMa_1(0);
  v78[0] = (id)14001;
  id v35 = v34;
  sub_25AB580F0(&qword_26A49FB98, _s3__C4CodeOMa_1);
  LOBYTE(v33) = sub_25AC32100();

  if (v33)
  {

    if (qword_26A49F800 != -1) {
      swift_once();
    }
    uint64_t v36 = __swift_project_value_buffer(v11, (uint64_t)qword_26A4A1CE8);
    sub_25AB150E0(v36, (uint64_t)v17);
    id v37 = sub_25AC345E0();
    Class isa = v37[-1].isa;
    if ((*((unsigned int (**)(char *, uint64_t, NSObject *))isa + 6))(v17, 1, v37) == 1)
    {
      sub_25AB15148((uint64_t)v17);
    }
    else
    {
      char v71 = v37;
      unint64_t v45 = sub_25AC345C0();
      os_log_type_t v46 = sub_25AC352C0();
      uint64_t v72 = v45;
      uint64_t v47 = v45;
      os_log_type_t v48 = v46;
      if (os_log_type_enabled(v47, v46))
      {
        uint64_t v49 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v49 = 0;
        os_log_type_t v50 = v48;
        os_log_type_t v51 = v49;
        _os_log_impl(&dword_25AB11000, v72, v50, "SPR XPC service disconnected, let's try one more time", v49, 2u);
        MEMORY[0x261151C20](v51, -1, -1);
      }

      (*((void (**)(char *, NSObject *))isa + 1))(v17, v71);
    }
    id v52 = objc_msgSend(v20, sel_shared);
    v78[0] = 0;
    id v22 = objc_msgSend(v52, sel_makeMonitorAndReturnError_, v78);

    id v23 = v78[0];
    if (v22)
    {
LABEL_3:
      a2 = v74;
      id v24 = v23;
      id v25 = *(void **)(v7 + 56);
      *(void *)(v7 + 56) = v22;

      goto LABEL_4;
    }
    id v53 = v78[0];
    uint64_t v34 = (void *)sub_25AC321F0();

    swift_willThrow();
    unsigned __int8 v6 = 0;
  }
  a2 = v74;
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v54 = __swift_project_value_buffer(v11, (uint64_t)qword_26A4A1CE8);
  sub_25AB150E0(v54, (uint64_t)v14);
  id v55 = sub_25AC345E0();
  Class v56 = v55[-1].isa;
  uint64_t v57 = (unsigned int (*)(char *, uint64_t))*((void *)v56 + 6);
  uint64_t v72 = v55;
  if (v57(v14, 1) == 1)
  {

    sub_25AB15148((uint64_t)v14);
  }
  else
  {
    id v58 = v34;
    id v59 = v34;
    unint64_t v60 = sub_25AC345C0();
    os_log_type_t v61 = sub_25AC352C0();
    char v71 = v60;
    int v70 = v61;
    if (os_log_type_enabled(v60, v61))
    {
      id v62 = (uint8_t *)swift_slowAlloc();
      unint64_t v68 = (void *)swift_slowAlloc();
      uint64_t v77 = (uint64_t)v34;
      v78[0] = v68;
      uint64_t v69 = v62;
      *(_DWORD *)id v62 = 136446210;
      v67[1] = v62 + 4;
      id v63 = v34;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A00C0);
      uint64_t v64 = sub_25AC34EB0();
      uint64_t v77 = sub_25AB56574(v64, v65, (uint64_t *)v78);
      sub_25AC354A0();
      a2 = v74;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_25AB11000, v71, (os_log_type_t)v70, "Could not make Monitor module! Error: [ %{public}s ]", v69, 0xCu);
      id v66 = v68;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v66, -1, -1);
      MEMORY[0x261151C20](v69, -1, -1);
    }
    else
    {
    }
    (*((void (**)(char *, NSObject *))v56 + 1))(v14, v72);
  }
LABEL_4:
  id v19 = *(void **)(v7 + 56);
  if (!v19)
  {
    sub_25AB564F4();
    swift_allocError();
    *uint64_t v39 = 3;
    swift_willThrow();
    return;
  }
LABEL_5:
  id v26 = v19;
  v76();
  if (v6)
  {
    _s3__C4CodeOMa_1(0);
    v78[0] = (id)14001;
    id v27 = v6;
    sub_25AB580F0(&qword_26A49FB98, _s3__C4CodeOMa_1);
    char v28 = sub_25AC32100();

    if (v28)
    {

      if (qword_26A49F800 != -1) {
        swift_once();
      }
      uint64_t v29 = __swift_project_value_buffer(v11, (uint64_t)qword_26A4A1CE8);
      uint64_t v30 = v75;
      sub_25AB150E0(v29, v75);
      uint64_t v31 = sub_25AC345E0();
      uint64_t v32 = *(void *)(v31 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31) == 1)
      {
        sub_25AB15148(v30);
      }
      else
      {
        uint64_t v74 = a2;
        uint64_t v40 = sub_25AC345C0();
        os_log_type_t v41 = sub_25AC352C0();
        if (os_log_type_enabled(v40, v41))
        {
          os_log_type_t v42 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v42 = 0;
          _os_log_impl(&dword_25AB11000, v40, v41, "XPC service disconnected, let's try one more time", v42, 2u);
          MEMORY[0x261151C20](v42, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v75, v31);
        a2 = v74;
      }
      os_log_type_t v43 = *(void **)(v7 + 56);
      *(void *)(v7 + 56) = 0;

      if (a3)
      {
        sub_25AB564F4();
        swift_allocError();
        unsigned char *v44 = 3;
        swift_willThrow();
      }
      else
      {
        sub_25AB55240(v76, a2, 1);
      }
    }
  }
}

void sub_25AB55B18(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unsigned __int8 v6 = v5;
  int v74 = a1;
  v78[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)v67 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v75 = (uint64_t)v67 - v18;
  uint64_t v76 = a5;
  id v19 = *(void **)(a2 + 64);
  if (v19)
  {
    swift_bridgeObjectRetain();
    goto LABEL_7;
  }
  uint64_t v20 = v11;
  id v21 = v6;
  uint64_t v73 = a3;
  id v22 = self;
  swift_bridgeObjectRetain();
  id v23 = objc_msgSend(v22, sel_shared);
  v78[0] = 0;
  id v24 = objc_msgSend(v23, sel_makePINControllerAndReturnError_, v78);

  id v25 = v78[0];
  if (v24)
  {
    unsigned __int8 v6 = v21;
    uint64_t v11 = v20;
LABEL_5:
    id v26 = v25;
    id v27 = *(void **)(a2 + 64);
    *(void *)(a2 + 64) = v24;

    a3 = v73;
    goto LABEL_6;
  }
  id v71 = v22;
  id v36 = v78[0];
  id v37 = (void *)sub_25AC321F0();

  swift_willThrow();
  uint64_t v72 = 0;
  _s3__C4CodeOMa_1(0);
  v78[0] = (id)14001;
  id v38 = v37;
  sub_25AB580F0(&qword_26A49FB98, _s3__C4CodeOMa_1);
  LOBYTE(v36) = sub_25AC32100();

  if (v36)
  {

    uint64_t v11 = v20;
    if (qword_26A49F800 != -1) {
      swift_once();
    }
    uint64_t v39 = __swift_project_value_buffer(v20, (uint64_t)qword_26A4A1CE8);
    sub_25AB150E0(v39, (uint64_t)v17);
    uint64_t v40 = (uint8_t *)sub_25AC345E0();
    uint64_t v41 = *((void *)v40 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, uint8_t *))(v41 + 48))(v17, 1, v40) == 1)
    {
      sub_25AB15148((uint64_t)v17);
    }
    else
    {
      uint64_t v69 = v40;
      uint64_t v49 = sub_25AC345C0();
      os_log_type_t v50 = sub_25AC352C0();
      int v70 = v49;
      if (os_log_type_enabled(v49, v50))
      {
        os_log_type_t v51 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v51 = 0;
        _os_log_impl(&dword_25AB11000, v70, v50, "SPR XPC service disconnected, let's try one more time", v51, 2u);
        MEMORY[0x261151C20](v51, -1, -1);
      }

      (*(void (**)(char *, uint8_t *))(v41 + 8))(v17, v69);
    }
    id v52 = objc_msgSend(v71, sel_shared);
    v78[0] = 0;
    id v24 = objc_msgSend(v52, sel_makePINControllerAndReturnError_, v78);

    id v25 = v78[0];
    unsigned __int8 v6 = v72;
    if (v24) {
      goto LABEL_5;
    }
    id v53 = v78[0];
    id v37 = (void *)sub_25AC321F0();

    swift_willThrow();
    unsigned __int8 v6 = 0;
  }
  else
  {
    unsigned __int8 v6 = v72;
    uint64_t v11 = v20;
  }
  a3 = v73;
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v54 = __swift_project_value_buffer(v11, (uint64_t)qword_26A4A1CE8);
  sub_25AB150E0(v54, (uint64_t)v14);
  uint64_t v55 = sub_25AC345E0();
  uint64_t v56 = *(void *)(v55 - 8);
  uint64_t v57 = *(unsigned int (**)(char *, uint64_t))(v56 + 48);
  uint64_t v72 = (void *)v55;
  if (v57(v14, 1) == 1)
  {

    sub_25AB15148((uint64_t)v14);
  }
  else
  {
    id v58 = v37;
    id v59 = v37;
    unint64_t v60 = sub_25AC345C0();
    os_log_type_t v61 = sub_25AC352C0();
    LODWORD(v71) = v61;
    if (os_log_type_enabled(v60, v61))
    {
      int v70 = v60;
      id v62 = (uint8_t *)swift_slowAlloc();
      unint64_t v68 = (void *)swift_slowAlloc();
      uint64_t v77 = (uint64_t)v37;
      v78[0] = v68;
      uint64_t v69 = v62;
      *(_DWORD *)id v62 = 136446210;
      v67[1] = v62 + 12;
      v67[0] = v62 + 4;
      id v63 = v37;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A00C0);
      uint64_t v64 = sub_25AC34EB0();
      uint64_t v77 = sub_25AB56574(v64, v65, (uint64_t *)v78);
      sub_25AC354A0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_25AB11000, v70, (os_log_type_t)v71, "Could not make PIN Controller module! Error: [ %{public}s ]", v69, 0xCu);
      id v66 = v68;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v66, -1, -1);
      MEMORY[0x261151C20](v69, -1, -1);
    }
    else
    {
    }
    a3 = v73;
    (*(void (**)(char *, void *))(v56 + 8))(v14, v72);
  }
LABEL_6:
  id v19 = *(void **)(a2 + 64);
  if (!v19)
  {
    sub_25AB57F98();
    swift_allocError();
    void *v42 = 25;
    swift_willThrow();
    swift_bridgeObjectRelease_n();
    return;
  }
LABEL_7:
  id v28 = v19;
  sub_25AB52918(v28);
  if (v6)
  {
    uint64_t v29 = a3;
    _s3__C4CodeOMa_1(0);
    v78[0] = (id)14001;
    id v30 = v6;
    sub_25AB580F0(&qword_26A49FB98, _s3__C4CodeOMa_1);
    char v31 = sub_25AC32100();

    if (v31)
    {

      if (qword_26A49F800 != -1) {
        swift_once();
      }
      uint64_t v32 = __swift_project_value_buffer(v11, (uint64_t)qword_26A4A1CE8);
      uint64_t v33 = v75;
      sub_25AB150E0(v32, v75);
      uint64_t v34 = sub_25AC345E0();
      uint64_t v35 = *(void *)(v34 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34) == 1)
      {
        sub_25AB15148(v33);
      }
      else
      {
        os_log_type_t v43 = sub_25AC345C0();
        os_log_type_t v44 = sub_25AC352C0();
        if (os_log_type_enabled(v43, v44))
        {
          unint64_t v45 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v45 = 0;
          _os_log_impl(&dword_25AB11000, v43, v44, "XPC service disconnected, let's try one more time", v45, 2u);
          os_log_type_t v46 = v45;
          uint64_t v33 = v75;
          MEMORY[0x261151C20](v46, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
      }
      uint64_t v47 = *(void **)(a2 + 64);
      *(void *)(a2 + 64) = 0;

      if (v74)
      {
        sub_25AB57F98();
        swift_allocError();
        *os_log_type_t v48 = 25;
        swift_willThrow();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_25AB55B18(1, a2, v29, a4);
      }
    }
  }
  swift_bridgeObjectRelease_n();
}

uint64_t sub_25AB56444()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SPRReaderProxy()
{
  return self;
}

uint64_t sub_25AB564C8(uint64_t a1)
{
  return a1;
}

unint64_t sub_25AB564F4()
{
  unint64_t result = qword_26A4A0448;
  if (!qword_26A4A0448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0448);
  }
  return result;
}

uint64_t sub_25AB56548(uint64_t a1)
{
  return a1;
}

uint64_t sub_25AB56574(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_25AB56648(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_25AB18F50((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_25AB18F50((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_25AB56648(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_25AC354B0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_25AB56804(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_25AC355D0();
  if (!v8)
  {
    sub_25AC35670();
    __break(1u);
LABEL_17:
    uint64_t result = sub_25AC356E0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_25AB56804(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_25AB5689C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_25AB56AF8(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_25AB56AF8(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_25AB5689C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_25AB56A14(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_25AC35590();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_25AC35670();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_25AC34F80();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_25AC356E0();
    __break(1u);
LABEL_14:
    uint64_t result = sub_25AC35670();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_25AB56A14(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0450);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_25AB56A7C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_25AC34FD0();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x261150AE0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_25AB56AF8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0450);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25AC356E0();
  __break(1u);
  return result;
}

uint64_t sub_25AB56C4C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6 = v5;
  int v74 = a1;
  v79[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)v67 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v75 = (uint64_t)v67 - v18;
  uint64_t v76 = a3;
  id v19 = *(void **)(a2 + 48);
  if (v19)
  {
    swift_bridgeObjectRetain();
    goto LABEL_7;
  }
  uint64_t v20 = v11;
  id v21 = v6;
  uint64_t v73 = a5;
  id v22 = self;
  swift_bridgeObjectRetain();
  id v23 = objc_msgSend(v22, sel_shared);
  v79[0] = 0;
  id v24 = objc_msgSend(v23, sel_makeConfiguratorAndReturnError_, v79);

  id v25 = v79[0];
  if (v24)
  {
    unint64_t v6 = v21;
    uint64_t v11 = v20;
LABEL_5:
    id v26 = v25;
    id v27 = *(void **)(a2 + 48);
    *(void *)(a2 + 48) = v24;

    a5 = v73;
    goto LABEL_6;
  }
  id v71 = v22;
  id v35 = v79[0];
  id v36 = (void *)sub_25AC321F0();

  swift_willThrow();
  uint64_t v72 = 0;
  _s3__C4CodeOMa_1(0);
  v79[0] = (id)14001;
  id v37 = v36;
  sub_25AB580F0(&qword_26A49FB98, _s3__C4CodeOMa_1);
  LOBYTE(v35) = sub_25AC32100();

  if (v35)
  {

    uint64_t v11 = v20;
    if (qword_26A49F800 != -1) {
      swift_once();
    }
    uint64_t v38 = __swift_project_value_buffer(v20, (uint64_t)qword_26A4A1CE8);
    sub_25AB150E0(v38, (uint64_t)v17);
    uint64_t v39 = (uint8_t *)sub_25AC345E0();
    uint64_t v40 = *((void *)v39 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, uint8_t *))(v40 + 48))(v17, 1, v39) == 1)
    {
      sub_25AB15148((uint64_t)v17);
    }
    else
    {
      uint64_t v69 = v39;
      uint64_t v49 = sub_25AC345C0();
      os_log_type_t v50 = sub_25AC352C0();
      int v70 = v49;
      if (os_log_type_enabled(v49, v50))
      {
        os_log_type_t v51 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v51 = 0;
        _os_log_impl(&dword_25AB11000, v70, v50, "SPR XPC service disconnected, let's try one more time", v51, 2u);
        MEMORY[0x261151C20](v51, -1, -1);
      }

      (*(void (**)(char *, uint8_t *))(v40 + 8))(v17, v69);
    }
    id v52 = objc_msgSend(v71, sel_shared);
    v79[0] = 0;
    id v24 = objc_msgSend(v52, sel_makeConfiguratorAndReturnError_, v79);

    id v25 = v79[0];
    unint64_t v6 = v72;
    if (v24) {
      goto LABEL_5;
    }
    id v53 = v79[0];
    id v36 = (void *)sub_25AC321F0();

    swift_willThrow();
    unint64_t v6 = 0;
  }
  else
  {
    unint64_t v6 = v72;
    uint64_t v11 = v20;
  }
  a5 = v73;
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v54 = __swift_project_value_buffer(v11, (uint64_t)qword_26A4A1CE8);
  sub_25AB150E0(v54, (uint64_t)v14);
  uint64_t v55 = sub_25AC345E0();
  uint64_t v56 = *(void *)(v55 - 8);
  uint64_t v57 = *(unsigned int (**)(char *, uint64_t))(v56 + 48);
  uint64_t v72 = (void *)v55;
  if (v57(v14, 1) == 1)
  {

    sub_25AB15148((uint64_t)v14);
  }
  else
  {
    id v58 = v36;
    id v59 = v36;
    unint64_t v60 = sub_25AC345C0();
    os_log_type_t v61 = sub_25AC352C0();
    LODWORD(v71) = v61;
    if (os_log_type_enabled(v60, v61))
    {
      int v70 = v60;
      id v62 = (uint8_t *)swift_slowAlloc();
      unint64_t v68 = (void *)swift_slowAlloc();
      v79[0] = v68;
      uint64_t v69 = v62;
      *(_DWORD *)id v62 = 136446210;
      void v67[2] = v62 + 12;
      v67[1] = v62 + 4;
      uint64_t v77 = (uint64_t)v36;
      id v63 = v36;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A00C0);
      uint64_t v64 = sub_25AC34EB0();
      uint64_t v77 = sub_25AB56574(v64, v65, (uint64_t *)v79);
      sub_25AC354A0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_25AB11000, v70, (os_log_type_t)v71, "Could not make Configurator module! Error: [ %{public}s ]", v69, 0xCu);
      id v66 = v68;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v66, -1, -1);
      MEMORY[0x261151C20](v69, -1, -1);
    }
    else
    {
    }
    a5 = v73;
    (*(void (**)(char *, void *))(v56 + 8))(v14, v72);
  }
LABEL_6:
  id v19 = *(void **)(a2 + 48);
  if (!v19)
  {
    sub_25AB564F4();
    swift_allocError();
    *uint64_t v41 = 2;
    swift_willThrow();
    swift_bridgeObjectRelease();
    return a5;
  }
LABEL_7:
  id v28 = v19;
  sub_25AB4F27C(v28, a4, a5, &v78);
  if (v6)
  {
    uint64_t v29 = a5;
    _s3__C4CodeOMa_1(0);
    v79[0] = (id)14001;
    id v30 = v6;
    sub_25AB580F0(&qword_26A49FB98, _s3__C4CodeOMa_1);
    a5 = sub_25AC32100();

    if (a5)
    {

      if (qword_26A49F800 != -1) {
        swift_once();
      }
      uint64_t v31 = __swift_project_value_buffer(v11, (uint64_t)qword_26A4A1CE8);
      uint64_t v32 = v75;
      sub_25AB150E0(v31, v75);
      uint64_t v33 = sub_25AC345E0();
      uint64_t v34 = *(void *)(v33 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33) == 1)
      {
        sub_25AB15148(v32);
      }
      else
      {
        a5 = sub_25AC345C0();
        os_log_type_t v42 = sub_25AC352C0();
        if (os_log_type_enabled((os_log_t)a5, v42))
        {
          os_log_type_t v43 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v43 = 0;
          _os_log_impl(&dword_25AB11000, (os_log_t)a5, v42, "XPC service disconnected, let's try one more time", v43, 2u);
          os_log_type_t v44 = v43;
          uint64_t v32 = v75;
          MEMORY[0x261151C20](v44, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
      }
      unint64_t v45 = *(void **)(a2 + 48);
      *(void *)(a2 + 48) = 0;

      uint64_t v46 = v76;
      if ((v74 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        a5 = sub_25AB56C4C(1, a2, v46, a4, v29);

        swift_bridgeObjectRelease_n();
        return a5;
      }
      sub_25AB564F4();
      swift_allocError();
      *uint64_t v47 = 2;
      swift_willThrow();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();

    return v78;
  }
  return a5;
}

uint64_t sub_25AB575A8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int64_t v7 = v6;
  LODWORD(v9) = a5;
  v84[3] = *MEMORY[0x263EF8340];
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v14 = MEMORY[0x270FA5388](v80);
  uint64_t v16 = (char *)v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  id v19 = (char *)v72 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v79 = (uint64_t)v72 - v20;
  id v21 = *(void **)(a2 + 48);
  uint64_t v81 = a3;
  if (v21)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = a4;
    goto LABEL_6;
  }
  int v77 = (int)v9;
  uint64_t v23 = self;
  uint64_t v78 = a4;
  id v24 = (void *)v23;
  swift_bridgeObjectRetain();
  id v25 = objc_msgSend(v24, sel_shared);
  uint64_t v83 = 0;
  id v26 = objc_msgSend(v25, sel_makeConfiguratorAndReturnError_, &v83);

  id v9 = (id)v83;
  if (v26)
  {
    uint64_t v22 = v78;
    goto LABEL_5;
  }
  id v38 = (id)v83;
  uint64_t v39 = (void *)sub_25AC321F0();

  swift_willThrow();
  int64_t v7 = 0;
  _s3__C4CodeOMa_1(0);
  uint64_t v83 = 14001;
  id v40 = v39;
  sub_25AB580F0(&qword_26A49FB98, _s3__C4CodeOMa_1);
  LOBYTE(v38) = sub_25AC32100();

  if (v38)
  {

    if (qword_26A49F800 != -1) {
      swift_once();
    }
    uint64_t v41 = __swift_project_value_buffer(v80, (uint64_t)qword_26A4A1CE8);
    sub_25AB150E0(v41, (uint64_t)v19);
    os_log_type_t v42 = sub_25AC345E0();
    Class isa = v42[-1].isa;
    if ((*((unsigned int (**)(char *, uint64_t, NSObject *))isa + 6))(v19, 1, v42) == 1)
    {
      sub_25AB15148((uint64_t)v19);
      os_log_type_t v44 = &off_265482000;
      unint64_t v45 = &off_265482000;
    }
    else
    {
      int v74 = 0;
      uint64_t v75 = v42;
      id v53 = sub_25AC345C0();
      os_log_type_t v54 = sub_25AC352C0();
      uint64_t v76 = v53;
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v55 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v55 = 0;
        _os_log_impl(&dword_25AB11000, v76, v54, "SPR XPC service disconnected, let's try one more time", v55, 2u);
        MEMORY[0x261151C20](v55, -1, -1);
      }

      (*((void (**)(char *, NSObject *))isa + 1))(v19, v75);
      os_log_type_t v44 = &off_265482000;
      unint64_t v45 = &off_265482000;
      int64_t v7 = v74;
    }
    id v56 = [v24 (SEL)v44[137]];
    uint64_t v83 = 0;
    id v26 = objc_msgSend(v56, (SEL)v45[148], &v83);

    id v9 = (id)v83;
    uint64_t v22 = v78;
    if (v26)
    {
LABEL_5:
      id v27 = v9;
      id v28 = *(void **)(a2 + 48);
      *(void *)(a2 + 48) = v26;

      a3 = v81;
      LOBYTE(v9) = v77;
      id v21 = *(void **)(a2 + 48);
      if (v21) {
        goto LABEL_6;
      }
LABEL_39:
      sub_25AB564F4();
      swift_allocError();
      *int v70 = 2;
      swift_willThrow();
      goto LABEL_40;
    }
    id v57 = (id)v83;
    uint64_t v39 = (void *)sub_25AC321F0();

    swift_willThrow();
    int64_t v7 = 0;
  }
  a3 = v81;
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v58 = __swift_project_value_buffer(v80, (uint64_t)qword_26A4A1CE8);
  sub_25AB150E0(v58, (uint64_t)v16);
  uint64_t v59 = sub_25AC345E0();
  uint64_t v60 = *(void *)(v59 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v16, 1, v59) == 1)
  {

    sub_25AB15148((uint64_t)v16);
  }
  else
  {
    id v61 = v39;
    id v62 = v39;
    id v63 = sub_25AC345C0();
    os_log_type_t v64 = sub_25AC352C0();
    LODWORD(v76) = v64;
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v75 = v63;
      unint64_t v65 = (uint8_t *)swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      uint64_t v82 = (uint64_t)v39;
      uint64_t v83 = v73;
      int v74 = v65;
      *(_DWORD *)unint64_t v65 = 136446210;
      void v72[2] = v65 + 12;
      v72[1] = v65 + 4;
      id v66 = v39;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A00C0);
      uint64_t v67 = sub_25AC34EB0();
      uint64_t v82 = sub_25AB56574(v67, v68, &v83);
      sub_25AC354A0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_25AB11000, v75, (os_log_type_t)v76, "Could not make Configurator module! Error: [ %{public}s ]", v74, 0xCu);
      uint64_t v69 = v73;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v69, -1, -1);
      MEMORY[0x261151C20](v74, -1, -1);
    }
    else
    {
    }
    a3 = v81;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v16, v59);
  }
  LOBYTE(v9) = v77;
  uint64_t v22 = v78;
  id v21 = *(void **)(a2 + 48);
  if (!v21) {
    goto LABEL_39;
  }
LABEL_6:
  char v29 = a1;
  uint64_t v30 = a2;
  id v31 = v21;
  char v32 = (char)v9;
  sub_25AB4F8AC(v31, a3, v22, v9 & 1, a6 & 1, v84);
  if (v7)
  {
    int v77 = a6;
    _s3__C4CodeOMa_1(0);
    uint64_t v83 = 14001;
    uint64_t v33 = v7;
    sub_25AB580F0(&qword_26A49FB98, _s3__C4CodeOMa_1);
    a3 = sub_25AC32100();

    if ((a3 & 1) == 0)
    {
LABEL_23:

LABEL_40:
      swift_bridgeObjectRelease();
      return a3;
    }

    if (qword_26A49F800 != -1) {
      swift_once();
    }
    uint64_t v34 = __swift_project_value_buffer(v80, (uint64_t)qword_26A4A1CE8);
    uint64_t v35 = v79;
    sub_25AB150E0(v34, v79);
    uint64_t v36 = sub_25AC345E0();
    uint64_t v37 = *(void *)(v36 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36) == 1)
    {
      sub_25AB15148(v35);
      a3 = v81;
    }
    else
    {
      uint64_t v78 = v22;
      uint64_t v46 = sub_25AC345C0();
      os_log_type_t v47 = sub_25AC352C0();
      if (os_log_type_enabled(v46, v47))
      {
        os_log_type_t v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v48 = 0;
        _os_log_impl(&dword_25AB11000, v46, v47, "XPC service disconnected, let's try one more time", v48, 2u);
        uint64_t v49 = v48;
        uint64_t v35 = v79;
        MEMORY[0x261151C20](v49, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
      a3 = v81;
      uint64_t v22 = v78;
    }
    os_log_type_t v50 = *(void **)(v30 + 48);
    *(void *)(v30 + 48) = 0;

    char v51 = v77;
    if (v29)
    {
      sub_25AB564F4();
      swift_allocError();
      *id v52 = 2;
      swift_willThrow();
      goto LABEL_23;
    }
    swift_bridgeObjectRetain();
    a3 = sub_25AB575A8(1, v30, a3, v22, v32 & 1, v51 & 1);

    swift_bridgeObjectRelease_n();
  }
  else
  {

    swift_bridgeObjectRelease();
    return v84[0];
  }
  return a3;
}

void sub_25AB57F38(id a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
}
  }

unint64_t sub_25AB57F44()
{
  unint64_t result = qword_26A4A0458;
  if (!qword_26A4A0458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0458);
  }
  return result;
}

unint64_t sub_25AB57F98()
{
  unint64_t result = qword_26A4A1390;
  if (!qword_26A4A1390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A1390);
  }
  return result;
}

uint64_t sub_25AB57FEC()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25AB58024(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_25AB58080()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_25AB580C8()
{
  return sub_25AB52228(*(void *)(v0 + 16), v0 + 24, *(void *)(v0 + 72));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_25AB580F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25AB58138(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_25AB58188(void *a1)
{
  return sub_25AB52810(a1, *(unsigned __int8 **)(v1 + 16));
}

uint64_t sub_25AB581A4(uint64_t a1)
{
  return a1;
}

uint64_t sub_25AB581F8(int a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  v80[2] = *MEMORY[0x263EF8340];
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v12 = MEMORY[0x270FA5388](v75);
  uint64_t v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v67 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (uint64_t)&v67 - v18;
  if (*(void *)(a2 + 40))
  {
    sub_25AB29558(a3, a4);
    sub_25AB29544(a5, a6);
    uint64_t v20 = *(void **)(a2 + 40);
    if (!v20) {
      goto LABEL_42;
    }
    goto LABEL_7;
  }
  uint64_t v76 = (uint64_t)&v67 - v18;
  int v74 = a1;
  uint64_t v21 = self;
  unint64_t v22 = a4;
  uint64_t v23 = v21;
  unint64_t v73 = v22;
  sub_25AB29558(a3, v22);
  sub_25AB29544(a5, a6);
  id v24 = [v23 shared];
  uint64_t v79 = 0;
  id v25 = objc_msgSend(v24, sel_makeReaderAndReturnError_, &v79);

  id v26 = (id)v79;
  if (v25)
  {
    a4 = v73;
    goto LABEL_6;
  }
  int v70 = v23;
  id v35 = (id)v79;
  uint64_t v36 = (void *)sub_25AC321F0();

  swift_willThrow();
  int v77 = 0;
  _s3__C4CodeOMa_1(0);
  uint64_t v79 = 14001;
  id v37 = v36;
  sub_25AB580F0(&qword_26A49FB98, _s3__C4CodeOMa_1);
  LOBYTE(v35) = sub_25AC32100();

  unint64_t v71 = a6;
  uint64_t v72 = a5;
  if ((v35 & 1) == 0)
  {
    a4 = v73;
    goto LABEL_33;
  }

  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v38 = __swift_project_value_buffer(v75, (uint64_t)qword_26A4A1CE8);
  sub_25AB150E0(v38, (uint64_t)v17);
  uint64_t v39 = sub_25AC345E0();
  uint64_t v40 = *(void *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v17, 1, v39) == 1)
  {
    sub_25AB15148((uint64_t)v17);
  }
  else
  {
    os_log_type_t v47 = sub_25AC345C0();
    os_log_type_t v48 = sub_25AC352C0();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v49 = 0;
      _os_log_impl(&dword_25AB11000, v47, v48, "SPR XPC service disconnected, let's try one more time", v49, 2u);
      MEMORY[0x261151C20](v49, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v40 + 8))(v17, v39);
  }
  id v50 = [v70 shared];
  uint64_t v79 = 0;
  id v25 = objc_msgSend(v50, sel_makeReaderAndReturnError_, &v79);

  id v26 = (id)v79;
  a5 = v72;
  a4 = v73;
  if (!v25)
  {
    id v51 = (id)v79;
    uint64_t v36 = (void *)sub_25AC321F0();

    swift_willThrow();
    int v77 = 0;
LABEL_33:
    uint64_t v19 = v76;
    if (qword_26A49F800 != -1) {
      swift_once();
    }
    uint64_t v52 = __swift_project_value_buffer(v75, (uint64_t)qword_26A4A1CE8);
    sub_25AB150E0(v52, (uint64_t)v14);
    uint64_t v53 = sub_25AC345E0();
    uint64_t v54 = *(void *)(v53 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v14, 1, v53) == 1)
    {

      sub_25AB15148((uint64_t)v14);
    }
    else
    {
      id v55 = v36;
      id v56 = v36;
      id v57 = sub_25AC345C0();
      os_log_type_t v58 = sub_25AC352C0();
      LODWORD(v73) = v58;
      if (os_log_type_enabled(v57, v58))
      {
        int v70 = v57;
        uint64_t v59 = (uint8_t *)swift_slowAlloc();
        uint64_t v69 = swift_slowAlloc();
        uint64_t v78 = (uint64_t)v36;
        uint64_t v79 = v69;
        *(_DWORD *)uint64_t v59 = 136446210;
        uint64_t v67 = v59 + 4;
        unint64_t v68 = v59;
        id v60 = v36;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A00C0);
        uint64_t v61 = sub_25AC34EB0();
        uint64_t v78 = sub_25AB56574(v61, v62, &v79);
        sub_25AC354A0();
        swift_bridgeObjectRelease();

        id v63 = v68;
        _os_log_impl(&dword_25AB11000, v70, (os_log_type_t)v73, "Could not make Reader module! Error: [ %{public}s ]", v68, 0xCu);
        uint64_t v64 = v69;
        swift_arrayDestroy();
        MEMORY[0x261151C20](v64, -1, -1);
        MEMORY[0x261151C20](v63, -1, -1);
      }
      else
      {
      }
      uint64_t v19 = v76;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v14, v53);
    }
    a6 = v71;
    a5 = v72;
    a1 = v74;
    uint64_t v20 = *(void **)(a2 + 40);
    if (!v20) {
      goto LABEL_42;
    }
    goto LABEL_7;
  }
  a6 = v71;
LABEL_6:
  id v27 = v26;
  id v28 = *(void **)(a2 + 40);
  *(void *)(a2 + 40) = v25;

  a1 = v74;
  uint64_t v19 = v76;
  uint64_t v20 = *(void **)(a2 + 40);
  if (!v20)
  {
LABEL_42:
    sub_25AB564F4();
    swift_allocError();
    *unint64_t v65 = 1;
    swift_willThrow();
    goto LABEL_43;
  }
LABEL_7:
  id v29 = v20;
  uint64_t v30 = v77;
  sub_25AB51AB8(v29, a5, a6, v80);
  if (v30)
  {
    uint64_t v76 = v19;
    _s3__C4CodeOMa_1(0);
    uint64_t v79 = 14001;
    id v31 = v30;
    sub_25AB580F0(&qword_26A49FB98, _s3__C4CodeOMa_1);
    uint64_t v19 = sub_25AC32100();

    if ((v19 & 1) == 0)
    {
LABEL_25:

LABEL_43:
      sub_25AB16958(a3, a4);
      sub_25AB16944(a5, a6);
      return v19;
    }
    uint64_t v72 = a5;

    if (qword_26A49F800 != -1) {
      swift_once();
    }
    uint64_t v32 = __swift_project_value_buffer(v75, (uint64_t)qword_26A4A1CE8);
    uint64_t v19 = v76;
    sub_25AB150E0(v32, v76);
    uint64_t v33 = sub_25AC345E0();
    uint64_t v34 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v19, 1, v33) == 1)
    {
      sub_25AB15148(v19);
    }
    else
    {
      int v74 = a1;
      uint64_t v19 = sub_25AC345C0();
      os_log_type_t v41 = sub_25AC352C0();
      if (os_log_type_enabled((os_log_t)v19, v41))
      {
        os_log_type_t v42 = (uint8_t *)swift_slowAlloc();
        unint64_t v71 = a6;
        os_log_type_t v43 = v42;
        *(_WORD *)os_log_type_t v42 = 0;
        _os_log_impl(&dword_25AB11000, (os_log_t)v19, v41, "XPC service disconnected, let's try one more time", v42, 2u);
        os_log_type_t v44 = v43;
        a6 = v71;
        MEMORY[0x261151C20](v44, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v76, v33);
      LOBYTE(a1) = v74;
    }
    unint64_t v45 = *(void **)(a2 + 40);
    *(void *)(a2 + 40) = 0;

    a5 = v72;
    if (a1)
    {
      sub_25AB564F4();
      swift_allocError();
      *uint64_t v46 = 1;
      swift_willThrow();
      goto LABEL_25;
    }
    sub_25AB29558(a3, a4);
    sub_25AB29544(a5, a6);
    uint64_t v19 = sub_25AB581F8(1, a2, a3, a4, a5, a6);
    sub_25AB16944(a5, a6);
    sub_25AB16958(a3, a4);

    sub_25AB16958(a3, a4);
    sub_25AB16944(a5, a6);
  }
  else
  {

    sub_25AB16958(a3, a4);
    sub_25AB16944(a5, a6);
    return v80[0];
  }
  return v19;
}

uint64_t sub_25AB58BFC()
{
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_25AB58C4C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  id v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_25AB25F50;
  return sub_25AB79294(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_25AB58D14()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_25AB58D54(void *a1, void *a2)
{
  sub_25AB50EC8(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_25AB58D5C()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25AB58D9C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_25AB24B20;
  return sub_25AB76FB0(a1, v4, v5, v6);
}

double sub_25AB58E58()
{
  type metadata accessor for TaskManager();
  uint64_t v0 = swift_allocObject();
  double result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0;
  qword_26A4A1DD0 = v0;
  return result;
}

uint64_t sub_25AB58E90(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0070);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  sub_25AB4C944(v1 + 16, (uint64_t)v22, &qword_26A4A0478);
  uint64_t v9 = v23;
  sub_25AB18FAC((uint64_t)v22, &qword_26A4A0478);
  if (v9)
  {
    if (qword_26A49F808 != -1) {
      swift_once();
    }
    uint64_t v10 = __swift_project_value_buffer(v6, (uint64_t)qword_26A4A1D00);
    sub_25AB4C944(v10, (uint64_t)v8, &qword_26A49F9A0);
    uint64_t v11 = sub_25AC345E0();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11) == 1)
    {
      sub_25AB18FAC((uint64_t)v8, &qword_26A49F9A0);
    }
    else
    {
      uint64_t v16 = sub_25AC345C0();
      os_log_type_t v17 = sub_25AC352C0();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v18 = 0;
        _os_log_impl(&dword_25AB11000, v16, v17, "TaskManager is busy", v18, 2u);
        MEMORY[0x261151C20](v18, -1, -1);
      }

      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v8, v11);
    }
    sub_25AB564F4();
    swift_allocError();
    *uint64_t v19 = 0;
    return swift_willThrow();
  }
  else
  {
    sub_25AB59818(a1, (uint64_t)v22);
    sub_25AB5987C((uint64_t)v22, (uint64_t)v21);
    swift_beginAccess();
    sub_25AB598E4((uint64_t)v21, v1 + 16);
    swift_endAccess();
    uint64_t v13 = sub_25AC35140();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 1, 1, v13);
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = 0;
    v14[3] = 0;
    v14[4] = v1;
    swift_retain();
    sub_25AB71DDC((uint64_t)v5, (uint64_t)&unk_26A4A0488, (uint64_t)v14);
    return swift_release();
  }
}

uint64_t sub_25AB59204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 184) = a4;
  return MEMORY[0x270FA2498](sub_25AB59224);
}

uint64_t sub_25AB59224()
{
  uint64_t v1 = *(void *)(v0 + 184) + 16;
  swift_beginAccess();
  sub_25AB4C944(v1, v0 + 16, &qword_26A4A0478);
  if (*(void *)(v0 + 40))
  {
    sub_25AB59818(v0 + 16, v0 + 96);
    sub_25AB18FAC(v0 + 16, &qword_26A4A0478);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 96), *(void *)(v0 + 120));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v2;
    void *v2 = v0;
    v2[1] = sub_25AB593B0;
    return sub_25ABD74BC();
  }
  else
  {
    sub_25AB18FAC(v0 + 16, &qword_26A4A0478);
    uint64_t v4 = *(void *)(v0 + 184) + 16;
    *(_OWORD *)(v0 + 72) = 0u;
    *(void *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    swift_beginAccess();
    sub_25AB598E4(v0 + 56, v4);
    swift_endAccess();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_25AB593B0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25AB594AC);
}

uint64_t sub_25AB594AC()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  uint64_t v1 = *(void *)(v0 + 184) + 16;
  *(_OWORD *)(v0 + 72) = 0u;
  *(void *)(v0 + 88) = 0;
  *(_OWORD *)(v0 + 56) = 0u;
  swift_beginAccess();
  sub_25AB598E4(v0 + 56, v1);
  swift_endAccess();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

BOOL sub_25AB5955C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  sub_25AB4C944(v0 + 16, (uint64_t)v13, &qword_26A4A0478);
  uint64_t v4 = v14;
  sub_25AB18FAC((uint64_t)v13, &qword_26A4A0478);
  if (qword_26A49F808 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v1, (uint64_t)qword_26A4A1D00);
  sub_25AB4C944(v5, (uint64_t)v3, &qword_26A49F9A0);
  uint64_t v6 = sub_25AC345E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v3, 1, v6) == 1)
  {
    sub_25AB18FAC((uint64_t)v3, &qword_26A49F9A0);
  }
  else
  {
    uint64_t v8 = sub_25AC345C0();
    os_log_type_t v9 = sub_25AC352D0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 67109120;
      v13[0] = v4 != 0;
      sub_25AC354A0();
      _os_log_impl(&dword_25AB11000, v8, v9, "checking TaskManager busy: %{BOOL}d", v10, 8u);
      MEMORY[0x261151C20](v10, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v3, v6);
  }
  return v4 != 0;
}

uint64_t sub_25AB597B4()
{
  sub_25AB18FAC(v0 + 16, &qword_26A4A0478);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TaskManager()
{
  return self;
}

uint64_t sub_25AB59818(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_25AB5987C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25AB598E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_25AB5994C()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25AB5998C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_25AB24B20;
  v3[23] = v2;
  return MEMORY[0x270FA2498](sub_25AB59224);
}

unsigned char *storeEnumTagSinglePayload for InternalError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *double result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB59B04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalError()
{
  return &type metadata for InternalError;
}

unint64_t sub_25AB59B40()
{
  unint64_t result = qword_26A4A0490;
  if (!qword_26A4A0490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0490);
  }
  return result;
}

uint64_t sub_25AB59B94()
{
  return sub_25AC359D0();
}

uint64_t sub_25AB59BDC()
{
  return sub_25AC359A0();
}

uint64_t sub_25AB59C0C()
{
  return sub_25AC359D0();
}

uint64_t sub_25AB59C50@<X0>(__int16 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_25AB5C4B4(*a1);
  *a2 = result;
  return result;
}

void sub_25AB59C7C(_WORD *a1@<X8>)
{
  *a1 = *v1 + 1200;
}

uint64_t sub_25AB59C8C()
{
  return sub_25AC35050();
}

unint64_t sub_25AB59CDC()
{
  return 0xD000000000000011;
}

uint64_t sub_25AB59CF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB5C4CC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25AB59D24(uint64_t a1)
{
  unint64_t v2 = sub_25AB5FF7C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB59D60(uint64_t a1)
{
  unint64_t v2 = sub_25AB5FF7C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB59D9C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_25AB59E8C(a1, a2, a3, &qword_26A4A0548, (void (*)(void))sub_25AB5FF7C);
}

uint64_t sub_25AB59DD8(uint64_t a1)
{
  unint64_t v2 = sub_25AB5FED4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB59E14(uint64_t a1)
{
  unint64_t v2 = sub_25AB5FED4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB59E50(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_25AB59E8C(a1, a2, a3, &qword_26A4A0528, (void (*)(void))sub_25AB5FED4);
}

uint64_t sub_25AB59E8C(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v13 = a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13();
  sub_25AC35A00();
  sub_25AC357F0();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_25AB59FD4(uint64_t a1)
{
  unint64_t v2 = sub_25AB601C8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB5A010(uint64_t a1)
{
  unint64_t v2 = sub_25AB601C8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB5A04C(void *a1)
{
  return sub_25AB5BAC0(a1, &qword_26A4A05B8, (void (*)(void))sub_25AB601C8);
}

uint64_t sub_25AB5A088(uint64_t a1)
{
  unint64_t v2 = sub_25AB60120();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB5A0C4(uint64_t a1)
{
  unint64_t v2 = sub_25AB60120();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB5A100(void *a1)
{
  return sub_25AB5BAC0(a1, &qword_26A4A0598, (void (*)(void))sub_25AB60120);
}

unint64_t sub_25AB5A13C(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746E61686372656DLL;
      break;
    case 2:
      unint64_t result = 0x496E6F6973736573;
      break;
    case 3:
      unint64_t result = 0x746E756F6D61;
      break;
    case 4:
    case 6:
      unint64_t result = 0x746361736E617274;
      break;
    case 7:
      unint64_t result = 0x644964616572;
      break;
    case 8:
      unint64_t result = 0x6974617669746361;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25AB5A26C()
{
  return sub_25AB5A13C(*v0);
}

uint64_t sub_25AB5A274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB5C7D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25AB5A29C(uint64_t a1)
{
  unint64_t v2 = sub_25AB60270();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB5A2D8(uint64_t a1)
{
  unint64_t v2 = sub_25AB60270();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB5A314(void *a1)
{
  return sub_25AB5AE0C(a1, &qword_26A4A05D8, (void (*)(void))sub_25AB60270, (uint64_t)&type metadata for ReadStarted.CodingKeys, MEMORY[0x263F8E060]);
}

unint64_t sub_25AB5A364(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746E61686372656DLL;
      break;
    case 2:
      unint64_t result = 0x496E6F6973736573;
      break;
    case 3:
      unint64_t result = 0x4972656E74726170;
      break;
    case 4:
      unint64_t result = 0x746E756F6D61;
      break;
    case 5:
      unint64_t result = 0x656D65686373;
      break;
    case 6:
    case 8:
      unint64_t result = 0x746361736E617274;
      break;
    case 9:
      unint64_t result = 0x644964616572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25AB5A4A0(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0608);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB6036C();
  sub_25AC35A00();
  v8[15] = 0;
  sub_25AC357F0();
  if (!v1)
  {
    v8[14] = 1;
    sub_25AC357F0();
    v8[13] = 2;
    sub_25AC357F0();
    v8[12] = 3;
    sub_25AC357F0();
    v8[11] = 4;
    sub_25AC357F0();
    v8[10] = 5;
    sub_25AC357F0();
    v8[9] = 6;
    sub_25AC357F0();
    v8[8] = 7;
    sub_25AC357F0();
    v8[7] = 8;
    sub_25AC357F0();
    v8[6] = 9;
    sub_25AC357F0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_25AB5A740()
{
  return sub_25AB5A364(*v0);
}

uint64_t sub_25AB5A748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB5CF54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25AB5A770(uint64_t a1)
{
  unint64_t v2 = sub_25AB6036C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB5A7AC(uint64_t a1)
{
  unint64_t v2 = sub_25AB6036C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB5A7E8(void *a1)
{
  return sub_25AB5A4A0(a1);
}

unint64_t sub_25AB5A800(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746E61686372656DLL;
      break;
    case 2:
      unint64_t result = 0x496E6F6973736573;
      break;
    case 3:
      unint64_t result = 0x4972656E74726170;
      break;
    case 4:
      unint64_t result = 0x746E756F6D61;
      break;
    case 5:
      unint64_t result = 0x656D65686373;
      break;
    case 6:
    case 7:
      unint64_t result = 0x746361736E617274;
      break;
    case 9:
      unint64_t result = 0x6E6F73616572;
      break;
    case 10:
      unint64_t result = 0x644964616572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25AB5A954(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A05F8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB60318();
  sub_25AC35A00();
  v8[15] = 0;
  sub_25AC357F0();
  if (!v1)
  {
    v8[14] = 1;
    sub_25AC357F0();
    v8[13] = 2;
    sub_25AC357F0();
    v8[12] = 3;
    sub_25AC357F0();
    v8[11] = 4;
    sub_25AC357F0();
    v8[10] = 5;
    sub_25AC357F0();
    v8[9] = 6;
    sub_25AC357F0();
    v8[8] = 7;
    sub_25AC357F0();
    v8[7] = 8;
    sub_25AC357F0();
    v8[6] = 9;
    sub_25AC357F0();
    v8[5] = 10;
    sub_25AC357F0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_25AB5AC1C()
{
  return sub_25AB5A800(*v0);
}

uint64_t sub_25AB5AC24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB5D66C(a1, a2);
  *a3 = result;
  return result;
}

void sub_25AB5AC4C(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_25AB5AC58(uint64_t a1)
{
  unint64_t v2 = sub_25AB60318();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB5AC94(uint64_t a1)
{
  unint64_t v2 = sub_25AB60318();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB5ACD0(void *a1)
{
  return sub_25AB5A954(a1);
}

unint64_t sub_25AB5ACE8(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746E61686372656DLL;
      break;
    case 2:
      unint64_t result = 0x496E6F6973736573;
      break;
    case 3:
      unint64_t result = 0x4972656E74726170;
      break;
    case 4:
      unint64_t result = 0x746E756F6D61;
      break;
    case 5:
    case 7:
      unint64_t result = 0x746361736E617274;
      break;
    case 8:
      unint64_t result = 0x644964616572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25AB5AE0C(void *a1, uint64_t *a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t, uint64_t, unsigned char *, uint64_t))
{
  uint64_t v19 = a5;
  uint64_t v7 = v5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_25AC35A00();
  v21[16] = 0;
  uint64_t v13 = v20;
  sub_25AC357F0();
  if (!v13)
  {
    uint64_t v14 = v19;
    v21[15] = 1;
    sub_25AC357F0();
    v21[14] = 2;
    sub_25AC357F0();
    v21[13] = 3;
    sub_25AC357F0();
    v21[12] = 4;
    sub_25AC357F0();
    v21[11] = 5;
    sub_25AC357F0();
    v21[10] = 6;
    sub_25AC357F0();
    v21[9] = 7;
    sub_25AC357F0();
    uint64_t v15 = *(void *)(v7 + 128);
    uint64_t v16 = *(void *)(v7 + 136);
    v21[0] = 8;
    v14(v15, v16, v21, v9);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

unint64_t sub_25AB5B098()
{
  return sub_25AB5ACE8(*v0);
}

uint64_t sub_25AB5B0A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB5DD9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25AB5B0C8(uint64_t a1)
{
  unint64_t v2 = sub_25AB602C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB5B104(uint64_t a1)
{
  unint64_t v2 = sub_25AB602C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB5B140(void *a1)
{
  return sub_25AB5AE0C(a1, &qword_26A4A05E8, (void (*)(void))sub_25AB602C4, (uint64_t)&type metadata for ReadCanceled.CodingKeys, MEMORY[0x263F8E050]);
}

unint64_t sub_25AB5B190(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746E61686372656DLL;
      break;
    case 2:
      unint64_t result = 0x496E6F6973736573;
      break;
    case 3:
      unint64_t result = 0x4972656E74726170;
      break;
    case 4:
      unint64_t result = 0x746E756F6D61;
      break;
    case 5:
    case 7:
      unint64_t result = 0x746361736E617274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25AB5B29C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A05C8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB6021C();
  sub_25AC35A00();
  v8[15] = 0;
  sub_25AC357F0();
  if (!v1)
  {
    v8[14] = 1;
    sub_25AC357F0();
    v8[13] = 2;
    sub_25AC357F0();
    v8[12] = 3;
    sub_25AC357F0();
    v8[11] = 4;
    sub_25AC357F0();
    v8[10] = 5;
    sub_25AC357F0();
    v8[9] = 6;
    sub_25AC357F0();
    v8[8] = 7;
    sub_25AC357F0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_25AB5B4EC()
{
  return sub_25AB5B190(*v0);
}

uint64_t sub_25AB5B4F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB61CCC(a1, a2);
  *a3 = result;
  return result;
}

void sub_25AB5B51C(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_25AB5B528(uint64_t a1)
{
  unint64_t v2 = sub_25AB6021C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB5B564(uint64_t a1)
{
  unint64_t v2 = sub_25AB6021C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB5B5A0(void *a1)
{
  return sub_25AB5B29C(a1);
}

uint64_t sub_25AB5B5B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v12[0] = a4;
  v12[1] = a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0568);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB60024();
  sub_25AC35A00();
  char v14 = 0;
  sub_25AC357F0();
  if (!v5)
  {
    char v13 = 1;
    sub_25AC357F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_25AB5B72C()
{
  if (*v0) {
    return 0x5472656E74726170;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_25AB5B774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB62058(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25AB5B79C(uint64_t a1)
{
  unint64_t v2 = sub_25AB60024();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB5B7D8(uint64_t a1)
{
  unint64_t v2 = sub_25AB60024();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB5B814(void *a1)
{
  return sub_25AB5B5B8(a1, *v1, v1[1], v1[2], v1[3]);
}

unint64_t sub_25AB5B834()
{
  uint64_t v1 = 0x746E61686372656DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x546E6F6973736573;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_25AB5B8A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB62160(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25AB5B8C8(uint64_t a1)
{
  unint64_t v2 = sub_25AB600CC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB5B904(uint64_t a1)
{
  unint64_t v2 = sub_25AB600CC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB5B940(void *a1)
{
  return sub_25AB5BAC0(a1, &qword_26A4A0588, (void (*)(void))sub_25AB600CC);
}

unint64_t sub_25AB5B97C()
{
  uint64_t v1 = 0x746E61686372656DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x496E6F6973736573;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_25AB5B9E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB622D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25AB5BA0C(uint64_t a1)
{
  unint64_t v2 = sub_25AB5FF28();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB5BA48(uint64_t a1)
{
  unint64_t v2 = sub_25AB5FF28();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB5BA84(void *a1)
{
  return sub_25AB5BAC0(a1, &qword_26A4A0538, (void (*)(void))sub_25AB5FF28);
}

uint64_t sub_25AB5BAC0(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_25AC35A00();
  char v14 = 0;
  uint64_t v9 = v11[1];
  sub_25AC357F0();
  if (!v9)
  {
    char v13 = 1;
    sub_25AC357F0();
    char v12 = 2;
    sub_25AC357F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_25AB5BC54(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0578);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB60078();
  sub_25AC35A00();
  v8[15] = 0;
  sub_25AC357F0();
  if (!v1)
  {
    v8[14] = 1;
    sub_25AC357F0();
    v8[13] = 2;
    sub_25AC357F0();
    v8[12] = 3;
    sub_25AC357F0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_25AB5BE04(uint64_t a1)
{
  unint64_t v2 = sub_25AB5FFD0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB5BE40(uint64_t a1)
{
  unint64_t v2 = sub_25AB5FFD0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB5BE7C(void *a1)
{
  return sub_25AB5BAC0(a1, &qword_26A4A0558, (void (*)(void))sub_25AB5FFD0);
}

unint64_t sub_25AB5BEB8()
{
  uint64_t v1 = 0x746E61686372656DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x646F43726F727265;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_25AB5BF20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB62444(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25AB5BF48(uint64_t a1)
{
  unint64_t v2 = sub_25AB60174();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB5BF84(uint64_t a1)
{
  unint64_t v2 = sub_25AB60174();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB5BFC0(void *a1)
{
  return sub_25AB5BAC0(a1, &qword_26A4A05A8, (void (*)(void))sub_25AB60174);
}

unint64_t sub_25AB5BFFC()
{
  unint64_t result = 0xD000000000000011;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x746E61686372656DLL;
      break;
    case 2:
      unint64_t result = 0x496E6F6973736573;
      break;
    case 3:
      unint64_t result = 0x646F43726F727265;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25AB5C0A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB625B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25AB5C0C8(uint64_t a1)
{
  unint64_t v2 = sub_25AB60078();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB5C104(uint64_t a1)
{
  unint64_t v2 = sub_25AB60078();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB5C140(void *a1)
{
  return sub_25AB5BC54(a1);
}

uint64_t sub_25AB5C158(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  sub_25AB1E8A4(a3, (uint64_t)v19);
  sub_25AB1E8A4((uint64_t)v19, (uint64_t)v22);
  int v6 = a2 >> 6;
  if (v6 == 1) {
    return 0x6461655264726163;
  }
  if (v6 == 2)
  {
    if (a2 == 128 && a1 == 5)
    {
      uint64_t v8 = 0x4164616552797274;
      sub_25AB1E8A4(a3, (uint64_t)v20);
      if (sub_25AB1E90C((uint64_t)v20) == 1) {
        return v8;
      }
      char v11 = v21;
      sub_25AC34EC0();
      sub_25AB1E8A4((uint64_t)v22, (uint64_t)v18);
      sub_25AB1E924((uint64_t)v18);
      sub_25AB25ABC();
      char v12 = sub_25AC354F0();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        sub_25AC34EC0();
        char v13 = sub_25AC354F0();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0) {
          goto LABEL_31;
        }
      }
      if ((v11 & 1) == 0) {
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v8 = 0xD000000000000010;
      if (a2 == 128 && a1 == 11) {
        return 0xD000000000000013;
      }
      if (a2 != 128 || a1 != 10) {
        return sub_25AB6FC58(a1, a2);
      }
      sub_25AB1E8A4(a3, (uint64_t)v20);
      if (sub_25AB1E90C((uint64_t)v20) == 1) {
        return v8;
      }
      char v14 = v21;
      sub_25AC34EC0();
      sub_25AB1E8A4((uint64_t)v22, (uint64_t)v18);
      sub_25AB1E924((uint64_t)v18);
      sub_25AB25ABC();
      char v15 = sub_25AC354F0();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0 && (sub_25AC34EC0(), char v16 = sub_25AC354F0(), swift_bridgeObjectRelease(), (v16 & 1) == 0)
        || (v14 & 1) == 0)
      {
LABEL_31:
        sub_25AB1EA48(a3);
        return v8;
      }
    }
    uint64_t v8 = sub_25AC33890();
    goto LABEL_31;
  }
  return sub_25AB6FC58(a1, a2);
}

uint64_t sub_25AB5C4B4(__int16 a1)
{
  if ((unsigned __int16)(a1 - 1200) >= 0x17u) {
    return 23;
  }
  else {
    return (unsigned __int16)(a1 - 1200);
  }
}

uint64_t sub_25AB5C4CC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000025AC3D670)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_25AC35870();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_25AB5C554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v55 = a2;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0498);
  MEMORY[0x270FA5388](v14 - 8);
  char v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a3[6];
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[5];
  uint64_t v61 = a3[4];
  uint64_t v62 = v17;
  swift_bridgeObjectRetain();
  uint64_t v63 = v19;
  swift_bridgeObjectRetain();
  uint64_t v20 = (void *)sub_25AC33040();
  id v21 = objc_msgSend(v20, sel_description);
  uint64_t v22 = sub_25AC34E40();
  uint64_t v59 = v23;
  uint64_t v60 = v22;

  id v24 = *(void **)(a4 + 16);
  sub_25AC32FE0();
  uint64_t v25 = sub_25AC33250();
  uint64_t v64 = v18;
  uint64_t v65 = a6;
  uint64_t v57 = v26;
  uint64_t v58 = v25;
  if (!a7)
  {
    uint64_t v28 = a3[15];
    uint64_t v27 = a3[16];
    goto LABEL_5;
  }
  uint64_t v27 = a3[18];
  if (v27)
  {
    uint64_t v28 = a3[17];
LABEL_5:
    uint64_t v53 = v28;
    uint64_t v52 = v27;
    goto LABEL_7;
  }
  uint64_t v29 = sub_25AC340A0();
  uint64_t v52 = v30;
  uint64_t v53 = v29;
LABEL_7:
  swift_bridgeObjectRetain();
  id v31 = v24;
  uint64_t v56 = sub_25AC33020();
  uint64_t v33 = v32;

  uint64_t v34 = a5;
  sub_25AB5CE8C(a5, (uint64_t)v16);
  uint64_t v35 = sub_25AC32450();
  uint64_t v36 = *(void *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v16, 1, v35) == 1)
  {
    sub_25AB5CEF4((uint64_t)v16);
    uint64_t v37 = sub_25AC340A0();
    uint64_t v39 = v38;
  }
  else
  {
    uint64_t v37 = sub_25AC32430();
    uint64_t v39 = v40;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v35);
  }
  uint64_t v42 = v64;
  uint64_t v41 = v65;
  uint64_t v43 = v34;
  if (!a7)
  {
    uint64_t v41 = sub_25AC340A0();
    a7 = v44;
  }
  swift_release();
  uint64_t v45 = v54;
  uint64_t v46 = v55;
  uint64_t result = sub_25AB5CEF4(v43);
  *a8 = v45;
  a8[1] = v46;
  a8[2] = v62;
  a8[3] = v42;
  uint64_t v48 = v63;
  a8[4] = v61;
  a8[5] = v48;
  uint64_t v49 = v59;
  a8[6] = v60;
  a8[7] = v49;
  uint64_t v50 = v57;
  a8[8] = v58;
  a8[9] = v50;
  uint64_t v51 = v52;
  a8[10] = v53;
  a8[11] = v51;
  a8[12] = v56;
  a8[13] = v33;
  a8[14] = v37;
  a8[15] = v39;
  a8[16] = v41;
  a8[17] = a7;
  return result;
}

uint64_t sub_25AB5C7D8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000025AC3D670 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEA00000000006449 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746E756F6D61 && a2 == 0xE600000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xEF657079546E6F69 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025AC3D5A0 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xED000064496E6F69 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x644964616572 && a2 == 0xE600000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6974617669746361 && a2 == 0xEC00000064496E6FLL)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v5 = sub_25AC35870();
    swift_bridgeObjectRelease();
    if (v5) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_25AB5CBD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v68 = a1;
  uint64_t v69 = a2;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0498);
  MEMORY[0x270FA5388](v14 - 8);
  char v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a3[6];
  uint64_t v17 = a3[7];
  uint64_t v19 = a3[5];
  uint64_t v62 = a3[4];
  uint64_t v63 = v18;
  uint64_t v20 = a3[14];
  uint64_t v61 = a3[13];
  uint64_t v66 = v17;
  swift_bridgeObjectRetain();
  uint64_t v65 = v19;
  swift_bridgeObjectRetain();
  uint64_t v64 = v20;
  swift_bridgeObjectRetain();
  id v21 = (void *)sub_25AC33040();
  id v22 = objc_msgSend(v21, sel_description);
  uint64_t v23 = sub_25AC34E40();
  uint64_t v59 = v24;
  uint64_t v60 = v23;

  uint64_t v25 = *(void *)(a5 + 24);
  uint64_t v57 = *(void *)(a5 + 16);
  uint64_t v58 = v25;
  uint64_t v67 = a4;
  uint64_t v26 = *(void **)(a4 + 16);
  swift_bridgeObjectRetain();
  sub_25AC32FE0();
  uint64_t v27 = sub_25AC33250();
  uint64_t v55 = v28;
  uint64_t v56 = v27;
  if ((a6 & 1) == 0)
  {
    uint64_t v30 = a3[15];
    uint64_t v29 = a3[16];
    goto LABEL_5;
  }
  uint64_t v29 = a3[18];
  if (v29)
  {
    uint64_t v30 = a3[17];
LABEL_5:
    uint64_t v54 = v30;
    uint64_t v53 = v29;
    goto LABEL_7;
  }
  uint64_t v31 = sub_25AC340A0();
  uint64_t v53 = v32;
  uint64_t v54 = v31;
LABEL_7:
  swift_bridgeObjectRetain();
  id v33 = v26;
  uint64_t v52 = sub_25AC33020();
  uint64_t v35 = v34;

  uint64_t v36 = a7;
  sub_25AB5CE8C(a7, (uint64_t)v16);
  uint64_t v37 = sub_25AC32450();
  uint64_t v38 = *(void *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v16, 1, v37) == 1)
  {
    sub_25AB5CEF4((uint64_t)v16);
    uint64_t v39 = sub_25AC340A0();
    uint64_t v41 = v40;
  }
  else
  {
    uint64_t v39 = sub_25AC32430();
    uint64_t v41 = v42;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v37);
  }
  sub_25AB36048(a5);
  swift_release();
  swift_release();
  uint64_t result = sub_25AB5CEF4(v36);
  uint64_t v44 = v69;
  *a8 = v68;
  a8[1] = v44;
  uint64_t v45 = v66;
  a8[2] = v63;
  a8[3] = v45;
  uint64_t v46 = v65;
  a8[4] = v62;
  a8[5] = v46;
  uint64_t v47 = v64;
  a8[6] = v61;
  a8[7] = v47;
  uint64_t v48 = v59;
  a8[8] = v60;
  a8[9] = v48;
  uint64_t v49 = v58;
  a8[10] = v57;
  a8[11] = v49;
  uint64_t v50 = v55;
  a8[12] = v56;
  a8[13] = v50;
  uint64_t v51 = v53;
  a8[14] = v54;
  a8[15] = v51;
  a8[16] = v52;
  a8[17] = v35;
  a8[18] = v39;
  a8[19] = v41;
  return result;
}

uint64_t sub_25AB5CE8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25AB5CEF4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0498);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25AB5CF54(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000025AC3D670 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEA00000000006449 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4972656E74726170 && a2 == 0xE900000000000064 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E756F6D61 && a2 == 0xE600000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656D65686373 && a2 == 0xE600000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xEF657079546E6F69 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025AC3D5A0 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xED000064496E6F69 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x644964616572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v5 = sub_25AC35870();
    swift_bridgeObjectRelease();
    if (v5) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_25AB5D3A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v71 = a5;
  uint64_t v72 = a6;
  uint64_t v68 = a1;
  uint64_t v69 = a2;
  uint64_t v16 = a11;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0498);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a3[6];
  uint64_t v20 = a3[7];
  uint64_t v22 = a3[5];
  uint64_t v63 = a3[4];
  uint64_t v64 = v21;
  uint64_t v23 = a3[14];
  uint64_t v62 = a3[13];
  uint64_t v67 = v20;
  swift_bridgeObjectRetain();
  uint64_t v66 = v22;
  swift_bridgeObjectRetain();
  uint64_t v65 = v23;
  swift_bridgeObjectRetain();
  uint64_t v24 = (void *)sub_25AC33040();
  id v25 = objc_msgSend(v24, sel_description);
  uint64_t v26 = sub_25AC34E40();
  uint64_t v60 = v27;
  uint64_t v61 = v26;

  if (a11)
  {
    uint64_t v54 = a10;
  }
  else
  {
    uint64_t v54 = sub_25AC340A0();
    uint64_t v16 = v28;
  }
  sub_25AC32FE0();
  uint64_t v29 = sub_25AC33250();
  uint64_t v58 = v30;
  uint64_t v59 = v29;
  uint64_t v70 = v16;
  if ((a7 & 1) == 0)
  {
    uint64_t v32 = a3[15];
    uint64_t v31 = a3[16];
    goto LABEL_8;
  }
  uint64_t v31 = a3[18];
  if (v31)
  {
    uint64_t v32 = a3[17];
LABEL_8:
    uint64_t v57 = v32;
    uint64_t v56 = v31;
    goto LABEL_10;
  }
  uint64_t v33 = sub_25AC340A0();
  uint64_t v56 = v34;
  uint64_t v57 = v33;
LABEL_10:
  swift_bridgeObjectRetain();
  uint64_t v55 = sub_25AC33020();
  uint64_t v36 = v35;
  uint64_t v37 = a8;
  sub_25AB5CE8C(a8, (uint64_t)v19);
  uint64_t v38 = sub_25AC32450();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v19, 1, v38) == 1)
  {
    sub_25AB5CEF4((uint64_t)v19);
    uint64_t v40 = sub_25AC340A0();
    uint64_t v42 = v41;
  }
  else
  {
    uint64_t v40 = sub_25AC32430();
    uint64_t v42 = v43;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v38);
  }
  swift_release();

  uint64_t result = sub_25AB5CEF4(v37);
  uint64_t v45 = v69;
  *a9 = v68;
  a9[1] = v45;
  uint64_t v46 = v67;
  a9[2] = v64;
  a9[3] = v46;
  uint64_t v47 = v66;
  a9[4] = v63;
  a9[5] = v47;
  uint64_t v48 = v65;
  a9[6] = v62;
  a9[7] = v48;
  uint64_t v49 = v60;
  a9[8] = v61;
  a9[9] = v49;
  uint64_t v50 = v70;
  a9[10] = v54;
  a9[11] = v50;
  uint64_t v51 = v58;
  a9[12] = v59;
  a9[13] = v51;
  a9[14] = v55;
  a9[15] = v36;
  uint64_t v52 = v56;
  a9[16] = v57;
  a9[17] = v52;
  uint64_t v53 = v72;
  a9[18] = v71;
  a9[19] = v53;
  a9[20] = v40;
  a9[21] = v42;
  return result;
}

uint64_t sub_25AB5D66C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000025AC3D670 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEA00000000006449 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4972656E74726170 && a2 == 0xE900000000000064 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E756F6D61 && a2 == 0xE600000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656D65686373 && a2 == 0xE600000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xEF657079546E6F69 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xED000064496E6F69 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025AC3D5A0 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x644964616572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v5 = sub_25AC35870();
    swift_bridgeObjectRelease();
    if (v5) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_25AB5DB0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v63 = a1;
  uint64_t v64 = a2;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0498);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v17 = a3[5];
  uint64_t v57 = a3[4];
  uint64_t v58 = v16;
  uint64_t v18 = a3[14];
  uint64_t v56 = a3[13];
  uint64_t v61 = v15;
  swift_bridgeObjectRetain();
  uint64_t v60 = v17;
  swift_bridgeObjectRetain();
  uint64_t v59 = v18;
  swift_bridgeObjectRetain();
  uint64_t v19 = (void *)sub_25AC33040();
  id v20 = objc_msgSend(v19, sel_description);
  uint64_t v21 = sub_25AC34E40();
  uint64_t v54 = v22;
  uint64_t v55 = v21;

  uint64_t v62 = a4;
  uint64_t v23 = *(void **)(a4 + 16);
  sub_25AC32FE0();
  uint64_t v24 = sub_25AC33250();
  uint64_t v52 = v25;
  uint64_t v53 = v24;
  if ((a5 & 1) == 0)
  {
    uint64_t v27 = a3[15];
    uint64_t v26 = a3[16];
    goto LABEL_5;
  }
  uint64_t v26 = a3[18];
  if (v26)
  {
    uint64_t v27 = a3[17];
LABEL_5:
    uint64_t v51 = v27;
    uint64_t v50 = v26;
    goto LABEL_7;
  }
  uint64_t v28 = sub_25AC340A0();
  uint64_t v50 = v29;
  uint64_t v51 = v28;
LABEL_7:
  swift_bridgeObjectRetain();
  id v30 = v23;
  uint64_t v31 = sub_25AC33020();
  uint64_t v33 = v32;

  uint64_t v34 = a6;
  sub_25AB5CE8C(a6, (uint64_t)v14);
  uint64_t v35 = sub_25AC32450();
  uint64_t v36 = *(void *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v14, 1, v35) == 1)
  {
    sub_25AB5CEF4((uint64_t)v14);
    uint64_t v37 = sub_25AC340A0();
    uint64_t v39 = v38;
  }
  else
  {
    uint64_t v37 = sub_25AC32430();
    uint64_t v39 = v40;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v35);
  }
  swift_release();
  swift_release();
  uint64_t result = sub_25AB5CEF4(v34);
  uint64_t v42 = v64;
  *a7 = v63;
  a7[1] = v42;
  uint64_t v43 = v61;
  a7[2] = v58;
  a7[3] = v43;
  uint64_t v44 = v60;
  a7[4] = v57;
  a7[5] = v44;
  uint64_t v45 = v59;
  a7[6] = v56;
  a7[7] = v45;
  uint64_t v46 = v54;
  a7[8] = v55;
  a7[9] = v46;
  uint64_t v47 = v52;
  a7[10] = v53;
  a7[11] = v47;
  uint64_t v48 = v50;
  a7[12] = v51;
  a7[13] = v48;
  a7[14] = v31;
  a7[15] = v33;
  a7[16] = v37;
  a7[17] = v39;
  return result;
}

uint64_t sub_25AB5DD9C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000025AC3D670 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEA00000000006449 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4972656E74726170 && a2 == 0xE900000000000064 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E756F6D61 && a2 == 0xE600000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xEF657079546E6F69 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025AC3D5A0 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xED000064496E6F69 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x644964616572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v5 = sub_25AC35870();
    swift_bridgeObjectRelease();
    if (v5) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_25AB5E184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char a4@<W4>, void *a5@<X8>)
{
  uint64_t v8 = a3[7];
  uint64_t v9 = a3[5];
  uint64_t v26 = a3[4];
  uint64_t v27 = a3[6];
  uint64_t v10 = a3[14];
  uint64_t v25 = a3[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v11 = (void *)sub_25AC33040();
  id v12 = objc_msgSend(v11, sel_description);
  uint64_t v24 = sub_25AC34E40();
  uint64_t v14 = v13;

  sub_25AC32FE0();
  uint64_t v15 = sub_25AC33250();
  uint64_t v17 = v16;
  if (a4)
  {
    uint64_t v18 = a3[18];
    if (!v18)
    {
      uint64_t v19 = sub_25AC340A0();
      uint64_t v20 = v21;
      goto LABEL_7;
    }
    uint64_t v19 = a3[17];
  }
  else
  {
    uint64_t v19 = a3[15];
    uint64_t v18 = a3[16];
  }
  uint64_t v20 = v18;
LABEL_7:
  swift_bridgeObjectRetain();
  uint64_t result = sub_25AC33020();
  *a5 = a1;
  a5[1] = a2;
  a5[2] = v27;
  a5[3] = v8;
  a5[4] = v26;
  a5[5] = v9;
  a5[6] = v25;
  a5[7] = v10;
  a5[8] = v24;
  a5[9] = v14;
  a5[10] = v15;
  a5[11] = v17;
  a5[12] = v19;
  a5[13] = v20;
  a5[14] = result;
  a5[15] = v23;
  return result;
}

uint64_t getEnumTagSinglePayload for MonitorEventType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEA) {
    goto LABEL_17;
  }
  if (a2 + 22 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 22) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 22;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 22;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 22;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x17;
  int v8 = v6 - 23;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MonitorEventType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 22 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 22) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE9)
  {
    unsigned int v6 = ((a2 - 234) >> 8) + 1;
    *uint64_t result = a2 + 22;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB5E418);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 22;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MonitorEventType()
{
  return &type metadata for MonitorEventType;
}

ValueMetadata *type metadata accessor for ReaderInactive()
{
  return &type metadata for ReaderInactive;
}

ValueMetadata *type metadata accessor for SessionCreated()
{
  return &type metadata for SessionCreated;
}

ValueMetadata *type metadata accessor for ReaderActive()
{
  return &type metadata for ReaderActive;
}

ValueMetadata *type metadata accessor for SessionDeleted()
{
  return &type metadata for SessionDeleted;
}

ValueMetadata *type metadata accessor for InvalidPartnerToken()
{
  return &type metadata for InvalidPartnerToken;
}

ValueMetadata *type metadata accessor for InternalSessionError()
{
  return &type metadata for InternalSessionError;
}

ValueMetadata *type metadata accessor for InvalidSessionToken()
{
  return &type metadata for InvalidSessionToken;
}

ValueMetadata *type metadata accessor for SessionRefreshed()
{
  return &type metadata for SessionRefreshed;
}

ValueMetadata *type metadata accessor for OpenSessionFailed()
{
  return &type metadata for OpenSessionFailed;
}

ValueMetadata *type metadata accessor for SessionTokenExpired()
{
  return &type metadata for SessionTokenExpired;
}

uint64_t destroy for CancelRequested()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for CancelRequested(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  uint64_t v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CancelRequested(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

void *assignWithTake for CancelRequested(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CancelRequested(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CancelRequested(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CancelRequested()
{
  return &type metadata for CancelRequested;
}

ValueMetadata *type metadata accessor for ReadStarted()
{
  return &type metadata for ReadStarted;
}

uint64_t _s21ProximityReaderDaemon11ReadStartedVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25AB5E950(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadCanceled()
{
  return &type metadata for ReadCanceled;
}

uint64_t destroy for ReadFailed()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ReadFailed(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  uint64_t v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  uint64_t v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  uint64_t v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  uint64_t v13 = a2[21];
  a1[20] = a2[20];
  a1[21] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ReadFailed(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy176_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

void *assignWithTake for ReadFailed(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadFailed(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 176)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadFailed(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadFailed()
{
  return &type metadata for ReadFailed;
}

uint64_t destroy for MonitorEvent(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 8);
}

uint64_t initializeWithCopy for MonitorEvent(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a1 + 8, a2 + 8);
  return a1;
}

uint64_t assignWithCopy for MonitorEvent(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    long long v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        __n128 result = (uint64_t *)swift_release();
        *long long v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *__n128 result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *long long v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for MonitorEvent(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for MonitorEvent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MonitorEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MonitorEvent()
{
  return &type metadata for MonitorEvent;
}

uint64_t destroy for ReadCompleted()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ReadCompleted(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  uint64_t v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  uint64_t v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  uint64_t v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ReadCompleted(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy160_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

void *assignWithTake for ReadCompleted(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadCompleted(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 160)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadCompleted(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 160) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 160) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadCompleted()
{
  return &type metadata for ReadCompleted;
}

unint64_t sub_25AB5F6E8()
{
  unint64_t result = qword_26A4A04A0;
  if (!qword_26A4A04A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A04A0);
  }
  return result;
}

unint64_t sub_25AB5F73C(uint64_t a1)
{
  unint64_t result = sub_25AB5F764();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25AB5F764()
{
  unint64_t result = qword_26A4A04A8;
  if (!qword_26A4A04A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A04A8);
  }
  return result;
}

unint64_t sub_25AB5F7B8(uint64_t a1)
{
  unint64_t result = sub_25AB5F7E0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25AB5F7E0()
{
  unint64_t result = qword_26A4A04B0;
  if (!qword_26A4A04B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A04B0);
  }
  return result;
}

unint64_t sub_25AB5F834(uint64_t a1)
{
  unint64_t result = sub_25AB5F85C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25AB5F85C()
{
  unint64_t result = qword_26A4A04B8;
  if (!qword_26A4A04B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A04B8);
  }
  return result;
}

unint64_t sub_25AB5F8B0(uint64_t a1)
{
  unint64_t result = sub_25AB5F8D8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25AB5F8D8()
{
  unint64_t result = qword_26A4A04C0;
  if (!qword_26A4A04C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A04C0);
  }
  return result;
}

unint64_t sub_25AB5F92C(uint64_t a1)
{
  unint64_t result = sub_25AB5F954();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25AB5F954()
{
  unint64_t result = qword_26A4A04C8;
  if (!qword_26A4A04C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A04C8);
  }
  return result;
}

unint64_t sub_25AB5F9A8(uint64_t a1)
{
  unint64_t result = sub_25AB5F9D0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25AB5F9D0()
{
  unint64_t result = qword_26A4A04D0;
  if (!qword_26A4A04D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A04D0);
  }
  return result;
}

unint64_t sub_25AB5FA24(uint64_t a1)
{
  unint64_t result = sub_25AB5FA4C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25AB5FA4C()
{
  unint64_t result = qword_26A4A04D8;
  if (!qword_26A4A04D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A04D8);
  }
  return result;
}

unint64_t sub_25AB5FAA0(uint64_t a1)
{
  unint64_t result = sub_25AB5FAC8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25AB5FAC8()
{
  unint64_t result = qword_26A4A04E0;
  if (!qword_26A4A04E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A04E0);
  }
  return result;
}

unint64_t sub_25AB5FB1C(uint64_t a1)
{
  unint64_t result = sub_25AB5FB44();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25AB5FB44()
{
  unint64_t result = qword_26A4A04E8;
  if (!qword_26A4A04E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A04E8);
  }
  return result;
}

unint64_t sub_25AB5FB98(uint64_t a1)
{
  unint64_t result = sub_25AB5FBC0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25AB5FBC0()
{
  unint64_t result = qword_26A4A04F0;
  if (!qword_26A4A04F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A04F0);
  }
  return result;
}

unint64_t sub_25AB5FC14(uint64_t a1)
{
  unint64_t result = sub_25AB5FC3C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25AB5FC3C()
{
  unint64_t result = qword_26A4A04F8;
  if (!qword_26A4A04F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A04F8);
  }
  return result;
}

unint64_t sub_25AB5FC90(uint64_t a1)
{
  unint64_t result = sub_25AB5FCB8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25AB5FCB8()
{
  unint64_t result = qword_26A4A0500;
  if (!qword_26A4A0500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0500);
  }
  return result;
}

unint64_t sub_25AB5FD0C(uint64_t a1)
{
  unint64_t result = sub_25AB5FD34();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25AB5FD34()
{
  unint64_t result = qword_26A4A0508;
  if (!qword_26A4A0508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0508);
  }
  return result;
}

unint64_t sub_25AB5FD88(uint64_t a1)
{
  unint64_t result = sub_25AB5FDB0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25AB5FDB0()
{
  unint64_t result = qword_26A4A0510;
  if (!qword_26A4A0510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0510);
  }
  return result;
}

unint64_t sub_25AB5FE04(uint64_t a1)
{
  unint64_t result = sub_25AB5FE2C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25AB5FE2C()
{
  unint64_t result = qword_26A4A0518;
  if (!qword_26A4A0518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0518);
  }
  return result;
}

unint64_t sub_25AB5FE80()
{
  unint64_t result = qword_26A4A0520;
  if (!qword_26A4A0520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0520);
  }
  return result;
}

unint64_t sub_25AB5FED4()
{
  unint64_t result = qword_26A4A0530;
  if (!qword_26A4A0530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0530);
  }
  return result;
}

unint64_t sub_25AB5FF28()
{
  unint64_t result = qword_26A4A0540;
  if (!qword_26A4A0540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0540);
  }
  return result;
}

unint64_t sub_25AB5FF7C()
{
  unint64_t result = qword_26A4A0550;
  if (!qword_26A4A0550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0550);
  }
  return result;
}

unint64_t sub_25AB5FFD0()
{
  unint64_t result = qword_26A4A0560;
  if (!qword_26A4A0560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0560);
  }
  return result;
}

unint64_t sub_25AB60024()
{
  unint64_t result = qword_26A4A0570;
  if (!qword_26A4A0570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0570);
  }
  return result;
}

unint64_t sub_25AB60078()
{
  unint64_t result = qword_26A4A0580;
  if (!qword_26A4A0580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0580);
  }
  return result;
}

unint64_t sub_25AB600CC()
{
  unint64_t result = qword_26A4A0590;
  if (!qword_26A4A0590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0590);
  }
  return result;
}

unint64_t sub_25AB60120()
{
  unint64_t result = qword_26A4A05A0;
  if (!qword_26A4A05A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A05A0);
  }
  return result;
}

unint64_t sub_25AB60174()
{
  unint64_t result = qword_26A4A05B0;
  if (!qword_26A4A05B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A05B0);
  }
  return result;
}

unint64_t sub_25AB601C8()
{
  unint64_t result = qword_26A4A05C0;
  if (!qword_26A4A05C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A05C0);
  }
  return result;
}

unint64_t sub_25AB6021C()
{
  unint64_t result = qword_26A4A05D0;
  if (!qword_26A4A05D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A05D0);
  }
  return result;
}

unint64_t sub_25AB60270()
{
  unint64_t result = qword_26A4A05E0;
  if (!qword_26A4A05E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A05E0);
  }
  return result;
}

unint64_t sub_25AB602C4()
{
  unint64_t result = qword_26A4A05F0;
  if (!qword_26A4A05F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A05F0);
  }
  return result;
}

unint64_t sub_25AB60318()
{
  unint64_t result = qword_26A4A0600;
  if (!qword_26A4A0600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0600);
  }
  return result;
}

unint64_t sub_25AB6036C()
{
  unint64_t result = qword_26A4A0610;
  if (!qword_26A4A0610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0610);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ReadCompleted.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB6048CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadCompleted.CodingKeys()
{
  return &type metadata for ReadCompleted.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ReadFailed.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ReadFailed.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB60620);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadFailed.CodingKeys()
{
  return &type metadata for ReadFailed.CodingKeys;
}

ValueMetadata *type metadata accessor for ReadCanceled.CodingKeys()
{
  return &type metadata for ReadCanceled.CodingKeys;
}

unsigned char *_s21ProximityReaderDaemon12ReadCanceledV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB6073CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadStarted.CodingKeys()
{
  return &type metadata for ReadStarted.CodingKeys;
}

uint64_t getEnumTagSinglePayload for CancelRequested.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CancelRequested.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB608D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CancelRequested.CodingKeys()
{
  return &type metadata for CancelRequested.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionTokenExpired.CodingKeys()
{
  return &type metadata for SessionTokenExpired.CodingKeys;
}

ValueMetadata *type metadata accessor for OpenSessionFailed.CodingKeys()
{
  return &type metadata for OpenSessionFailed.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionRefreshed.CodingKeys()
{
  return &type metadata for SessionRefreshed.CodingKeys;
}

ValueMetadata *type metadata accessor for InvalidSessionToken.CodingKeys()
{
  return &type metadata for InvalidSessionToken.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for InternalSessionError.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB60A1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalSessionError.CodingKeys()
{
  return &type metadata for InternalSessionError.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for InvalidPartnerToken.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB60B20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InvalidPartnerToken.CodingKeys()
{
  return &type metadata for InvalidPartnerToken.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionDeleted.CodingKeys()
{
  return &type metadata for SessionDeleted.CodingKeys;
}

ValueMetadata *type metadata accessor for ReaderActive.CodingKeys()
{
  return &type metadata for ReaderActive.CodingKeys;
}

unsigned char *_s21ProximityReaderDaemon19SessionTokenExpiredV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB60C48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionCreated.CodingKeys()
{
  return &type metadata for SessionCreated.CodingKeys;
}

unsigned char *_s21ProximityReaderDaemon12ReaderActiveV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25AB60D1CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReaderInactive.CodingKeys()
{
  return &type metadata for ReaderInactive.CodingKeys;
}

unint64_t sub_25AB60D58()
{
  unint64_t result = qword_26A4A0618;
  if (!qword_26A4A0618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0618);
  }
  return result;
}

unint64_t sub_25AB60DB0()
{
  unint64_t result = qword_26A4A0620;
  if (!qword_26A4A0620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0620);
  }
  return result;
}

unint64_t sub_25AB60E08()
{
  unint64_t result = qword_26A4A0628;
  if (!qword_26A4A0628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0628);
  }
  return result;
}

unint64_t sub_25AB60E60()
{
  unint64_t result = qword_26A4A0630;
  if (!qword_26A4A0630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0630);
  }
  return result;
}

unint64_t sub_25AB60EB8()
{
  unint64_t result = qword_26A4A0638;
  if (!qword_26A4A0638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0638);
  }
  return result;
}

unint64_t sub_25AB60F10()
{
  unint64_t result = qword_26A4A0640;
  if (!qword_26A4A0640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0640);
  }
  return result;
}

unint64_t sub_25AB60F68()
{
  unint64_t result = qword_26A4A0648;
  if (!qword_26A4A0648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0648);
  }
  return result;
}

unint64_t sub_25AB60FC0()
{
  unint64_t result = qword_26A4A0650;
  if (!qword_26A4A0650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0650);
  }
  return result;
}

unint64_t sub_25AB61018()
{
  unint64_t result = qword_26A4A0658;
  if (!qword_26A4A0658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0658);
  }
  return result;
}

unint64_t sub_25AB61070()
{
  unint64_t result = qword_26A4A0660;
  if (!qword_26A4A0660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0660);
  }
  return result;
}

unint64_t sub_25AB610C8()
{
  unint64_t result = qword_26A4A0668;
  if (!qword_26A4A0668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0668);
  }
  return result;
}

unint64_t sub_25AB61120()
{
  unint64_t result = qword_26A4A0670;
  if (!qword_26A4A0670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0670);
  }
  return result;
}

unint64_t sub_25AB61178()
{
  unint64_t result = qword_26A4A0678;
  if (!qword_26A4A0678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0678);
  }
  return result;
}

unint64_t sub_25AB611D0()
{
  unint64_t result = qword_26A4A0680;
  if (!qword_26A4A0680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0680);
  }
  return result;
}

unint64_t sub_25AB61228()
{
  unint64_t result = qword_26A4A0688;
  if (!qword_26A4A0688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0688);
  }
  return result;
}

unint64_t sub_25AB61280()
{
  unint64_t result = qword_26A4A0690;
  if (!qword_26A4A0690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0690);
  }
  return result;
}

unint64_t sub_25AB612D8()
{
  unint64_t result = qword_26A4A0698;
  if (!qword_26A4A0698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0698);
  }
  return result;
}

unint64_t sub_25AB61330()
{
  unint64_t result = qword_26A4A06A0;
  if (!qword_26A4A06A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A06A0);
  }
  return result;
}

unint64_t sub_25AB61388()
{
  unint64_t result = qword_26A4A06A8;
  if (!qword_26A4A06A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A06A8);
  }
  return result;
}

unint64_t sub_25AB613E0()
{
  unint64_t result = qword_26A4A06B0;
  if (!qword_26A4A06B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A06B0);
  }
  return result;
}

unint64_t sub_25AB61438()
{
  unint64_t result = qword_26A4A06B8;
  if (!qword_26A4A06B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A06B8);
  }
  return result;
}

unint64_t sub_25AB61490()
{
  unint64_t result = qword_26A4A06C0;
  if (!qword_26A4A06C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A06C0);
  }
  return result;
}

unint64_t sub_25AB614E8()
{
  unint64_t result = qword_26A4A06C8;
  if (!qword_26A4A06C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A06C8);
  }
  return result;
}

unint64_t sub_25AB61540()
{
  unint64_t result = qword_26A4A06D0;
  if (!qword_26A4A06D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A06D0);
  }
  return result;
}

unint64_t sub_25AB61598()
{
  unint64_t result = qword_26A4A06D8;
  if (!qword_26A4A06D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A06D8);
  }
  return result;
}

unint64_t sub_25AB615F0()
{
  unint64_t result = qword_26A4A06E0;
  if (!qword_26A4A06E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A06E0);
  }
  return result;
}

unint64_t sub_25AB61648()
{
  unint64_t result = qword_26A4A06E8;
  if (!qword_26A4A06E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A06E8);
  }
  return result;
}

unint64_t sub_25AB616A0()
{
  unint64_t result = qword_26A4A06F0;
  if (!qword_26A4A06F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A06F0);
  }
  return result;
}

unint64_t sub_25AB616F8()
{
  unint64_t result = qword_26A4A06F8;
  if (!qword_26A4A06F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A06F8);
  }
  return result;
}

unint64_t sub_25AB61750()
{
  unint64_t result = qword_26A4A0700;
  if (!qword_26A4A0700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0700);
  }
  return result;
}

unint64_t sub_25AB617A8()
{
  unint64_t result = qword_26A4A0708;
  if (!qword_26A4A0708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0708);
  }
  return result;
}

unint64_t sub_25AB61800()
{
  unint64_t result = qword_26A4A0710;
  if (!qword_26A4A0710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0710);
  }
  return result;
}

unint64_t sub_25AB61858()
{
  unint64_t result = qword_26A4A0718;
  if (!qword_26A4A0718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0718);
  }
  return result;
}

unint64_t sub_25AB618B0()
{
  unint64_t result = qword_26A4A0720;
  if (!qword_26A4A0720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0720);
  }
  return result;
}

unint64_t sub_25AB61908()
{
  unint64_t result = qword_26A4A0728;
  if (!qword_26A4A0728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0728);
  }
  return result;
}

unint64_t sub_25AB61960()
{
  unint64_t result = qword_26A4A0730;
  if (!qword_26A4A0730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0730);
  }
  return result;
}

unint64_t sub_25AB619B8()
{
  unint64_t result = qword_26A4A0738;
  if (!qword_26A4A0738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0738);
  }
  return result;
}

unint64_t sub_25AB61A10()
{
  unint64_t result = qword_26A4A0740;
  if (!qword_26A4A0740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0740);
  }
  return result;
}

unint64_t sub_25AB61A68()
{
  unint64_t result = qword_26A4A0748;
  if (!qword_26A4A0748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0748);
  }
  return result;
}

unint64_t sub_25AB61AC0()
{
  unint64_t result = qword_26A4A0750;
  if (!qword_26A4A0750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0750);
  }
  return result;
}

unint64_t sub_25AB61B18()
{
  unint64_t result = qword_26A4A0758;
  if (!qword_26A4A0758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0758);
  }
  return result;
}

unint64_t sub_25AB61B70()
{
  unint64_t result = qword_26A4A0760;
  if (!qword_26A4A0760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0760);
  }
  return result;
}

unint64_t sub_25AB61BC8()
{
  unint64_t result = qword_26A4A0768;
  if (!qword_26A4A0768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0768);
  }
  return result;
}

unint64_t sub_25AB61C20()
{
  unint64_t result = qword_26A4A0770;
  if (!qword_26A4A0770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0770);
  }
  return result;
}

unint64_t sub_25AB61C78()
{
  unint64_t result = qword_26A4A0778;
  if (!qword_26A4A0778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26A4A0778);
  }
  return result;
}

uint64_t sub_25AB61CCC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000025AC3D670 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEA00000000006449 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4972656E74726170 && a2 == 0xE900000000000064 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E756F6D61 && a2 == 0xE600000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xEF657079546E6F69 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025AC3D5A0 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xED000064496E6F69)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v5 = sub_25AC35870();
    swift_bridgeObjectRelease();
    if (v5) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_25AB62058(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000025AC3D670 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5472656E74726170 && a2 == 0xEC0000006E656B6FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_25AC35870();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25AB62160(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000025AC3D670 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEA00000000006449 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x546E6F6973736573 && a2 == 0xEC0000006E656B6FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_25AC35870();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_25AB622D8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000025AC3D670 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEA00000000006449 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_25AC35870();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_25AB62444(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000025AC3D670 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEA00000000006449 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646F43726F727265 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_25AC35870();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_25AB625B0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000025AC3D670 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEA00000000006449 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x646F43726F727265 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_25AC35870();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

double sub_25AB62790()
{
  type metadata accessor for CardReaderAdapterFactory();
  uint64_t v0 = swift_allocObject();
  double result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0;
  qword_26A4A1DD8 = v0;
  return result;
}

uint64_t sub_25AB627C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + 16;
  swift_beginAccess();
  sub_25AB4C944(v1 + 16, (uint64_t)&v15, &qword_26A4A07A8);
  uint64_t v4 = v16;
  sub_25AB18FAC((uint64_t)&v15, &qword_26A4A07A8);
  if (!v4)
  {
    char v5 = (unsigned __int8 (*)(void))sub_25AC34000();
    uint64_t v6 = v5();
    swift_release();
    if ((v6 & 1) != 0
      && (id v7 = objc_msgSend(self, sel_standardUserDefaults),
          int v8 = (void *)sub_25AC34E10(),
          unsigned int v9 = objc_msgSend(v7, sel_BOOLForKey_, v8),
          v7,
          v8,
          v9))
    {
      uint64_t v10 = type metadata accessor for SimulatedCardReader();
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 24) = 0;
      *(void *)(v11 + 32) = 0;
      *(void *)(v11 + 16) = 0;
      uint64_t v12 = &off_270885A08;
    }
    else
    {
      uint64_t v10 = type metadata accessor for SPRAdapter();
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = 0;
      *(void *)(v11 + 24) = 0;
      *(void *)(v11 + 32) = 1;
      *(void *)(v11 + 88) = 0;
      *(_OWORD *)(v11 + 40) = 0u;
      *(_OWORD *)(v11 + 56) = 0u;
      *(_OWORD *)(v11 + 65) = 0u;
      uint64_t v12 = &off_270885598;
    }
    uint64_t v16 = v10;
    uint64_t v17 = v12;
    *(void *)&long long v15 = v11;
    sub_25AB259D8((uint64_t)&v15, (uint64_t)v14, &qword_26A4A07A8);
    swift_beginAccess();
    sub_25AB66B50((uint64_t)v14, v3);
    swift_endAccess();
  }
  uint64_t result = sub_25AB4C944(v3, (uint64_t)&v15, &qword_26A4A07A8);
  if (v16) {
    return sub_25AB47E04(&v15, a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_25AB629A8()
{
  sub_25AB18FAC(v0 + 16, &qword_26A4A07A8);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CardReaderAdapterFactory()
{
  return self;
}

uint64_t sub_25AB62A0C@<X0>(uint64_t *a1@<X8>)
{
  int v2 = v1;
  uint64_t v56 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  MEMORY[0x270FA5388](v4);
  int v8 = (char *)v45 - v7;
  uint64_t v9 = v1[3];
  uint64_t v10 = v1[4];
  uint64_t v11 = (uint64_t)(v1 + 3);
  uint64_t v13 = v1 + 5;
  uint64_t v12 = v1[5];
  uint64_t v14 = v1[6];
  uint64_t v15 = v1[7];
  uint64_t v16 = v9;
  uint64_t v17 = v10;
  uint64_t v18 = v12;
  uint64_t v19 = v14;
  uint64_t v20 = *(void *)(v11 + 40);
  uint64_t v21 = *(void *)(v11 + 48);
  uint64_t v22 = v15;
  uint64_t v23 = v20;
  uint64_t v24 = v21;
  if (v10 == 1)
  {
    uint64_t v48 = v6;
    uint64_t v47 = v5;
    uint64_t v46 = v13;
    uint64_t v49 = v20;
    uint64_t v50 = v21;
    uint64_t v51 = v15;
    uint64_t v52 = v14;
    uint64_t v53 = v12;
    uint64_t v54 = 1;
    uint64_t v55 = v9;
    if (sub_25AB66064())
    {
      if (qword_26A49F800 != -1) {
        swift_once();
      }
      uint64_t v25 = __swift_project_value_buffer(v48, (uint64_t)qword_26A4A1CE8);
      sub_25AB4C944(v25, (uint64_t)v8, &qword_26A49F9A0);
      uint64_t v26 = sub_25AC345E0();
      uint64_t v27 = *(void *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v8, 1, v26) == 1)
      {
        sub_25AB18FAC((uint64_t)v8, &qword_26A49F9A0);
      }
      else
      {
        uint64_t v34 = sub_25AC345C0();
        os_log_type_t v35 = sub_25AC352C0();
        if (os_log_type_enabled(v34, v35))
        {
          uint64_t v36 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v36 = 0;
          _os_log_impl(&dword_25AB11000, v34, v35, "get readerInfo failed, reader is busy", v36, 2u);
          MEMORY[0x261151C20](v36, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v26);
      }
    }
    else
    {
      *((unsigned char *)v2 + 80) = 1;
      uint64_t v28 = sub_25AB6688C();
      type metadata accessor for SPRStatusTask();
      uint64_t inited = swift_initStackObject();
      *(unsigned char *)(inited + 24) = 0;
      *(void *)(inited + 16) = v28;
      swift_retain();
      sub_25AB4D57C(0, 0xE000000000000000, &v57);
      uint64_t v17 = *((void *)&v57 + 1);
      uint64_t v16 = v57;
      uint64_t v18 = v58;
      uint64_t v19 = v59;
      uint64_t v22 = v60;
      uint64_t v23 = v61;
      uint64_t v24 = v62;
      swift_release();
      sub_25AB259D8((uint64_t)&v57, (uint64_t)v63, &qword_26A4A0790);
      if (v64 != 1)
      {
        *((unsigned char *)v2 + 80) = 0;
        uint64_t v48 = v2[3];
        uint64_t v47 = v2[4];
        uint64_t v46 = (_OWORD *)v2[6];
        v45[1] = v2[7];
        v45[0] = v2[8];
        sub_25AB259D8((uint64_t)&v57, v11, &qword_26A4A0790);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_25AB669C4(v48, v47);
LABEL_21:
        uint64_t v10 = v54;
        uint64_t v9 = v55;
        goto LABEL_22;
      }
      if (qword_26A49F800 != -1) {
        swift_once();
      }
      uint64_t v30 = __swift_project_value_buffer(v48, (uint64_t)qword_26A4A1CE8);
      uint64_t v31 = v47;
      sub_25AB4C944(v30, v47, &qword_26A49F9A0);
      uint64_t v32 = sub_25AC345E0();
      uint64_t v33 = *(void *)(v32 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
      {
        sub_25AB18FAC(v31, &qword_26A49F9A0);
      }
      else
      {
        uint64_t v37 = sub_25AC345C0();
        os_log_type_t v38 = sub_25AC352C0();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v39 = 0;
          _os_log_impl(&dword_25AB11000, v37, v38, "nil status, clear cache", v39, 2u);
          MEMORY[0x261151C20](v39, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v47, v32);
      }
      *((unsigned char *)v2 + 80) = 0;
      uint64_t v40 = v2[3];
      uint64_t v41 = v2[4];
      *(_OWORD *)(v2 + 3) = xmmword_25AC39AA0;
      uint64_t v42 = v46;
      *uint64_t v46 = 0u;
      v42[1] = 0u;
      *((void *)v42 + 4) = 0;
      sub_25AB669C4(v40, v41);
    }
    uint64_t v16 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v17 = 1;
    goto LABEL_21;
  }
LABEL_22:
  uint64_t result = sub_25AB66AFC(v9, v10);
  uint64_t v44 = v56;
  *uint64_t v56 = v16;
  v44[1] = v17;
  v44[2] = v18;
  v44[3] = v19;
  v44[4] = v22;
  v44[5] = v23;
  v44[6] = v24;
  return result;
}

uint64_t sub_25AB62FBC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v42 - v12;
  if (sub_25AB66064())
  {
    if (qword_26A49F800 != -1) {
      swift_once();
    }
    uint64_t v14 = __swift_project_value_buffer(v8, (uint64_t)qword_26A4A1CE8);
    sub_25AB4C944(v14, (uint64_t)v13, &qword_26A49F9A0);
    uint64_t v15 = sub_25AC345E0();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) == 1)
    {
      sub_25AB18FAC((uint64_t)v13, &qword_26A49F9A0);
    }
    else
    {
      uint64_t v24 = sub_25AC345C0();
      os_log_type_t v25 = sub_25AC352C0();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v26 = 0;
        _os_log_impl(&dword_25AB11000, v24, v25, "get allStatus failed, reader is busy", v26, 2u);
        MEMORY[0x261151C20](v26, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    }
    unint64_t v27 = sub_25AB714E8(MEMORY[0x263F8EE78]);
    uint64_t result = sub_25AB4E38C(v27, (uint64_t)&v54);
    long long v28 = v64;
    char v29 = v63;
    char v30 = v62;
    char v31 = v61;
    char v32 = v60;
    char v33 = v59;
    char v34 = v58;
    char v35 = v57;
    long long v36 = v56;
    uint64_t v37 = v54;
    uint64_t v20 = v55;
  }
  else
  {
    *(unsigned char *)(v3 + 80) = 1;
    uint64_t v17 = sub_25AB6688C();
    type metadata accessor for SPRStatusTask();
    uint64_t inited = swift_initStackObject();
    *(unsigned char *)(inited + 24) = 4;
    *(void *)(inited + 16) = v17;
    swift_retain();
    sub_25AB4D57C(a1, a2, v43);
    swift_release();
    uint64_t result = sub_25AB259D8((uint64_t)v43, (uint64_t)&v54, &qword_26A4A0790);
    uint64_t v20 = v55;
    if (v55 == 1)
    {
      if (qword_26A49F800 != -1) {
        swift_once();
      }
      uint64_t v21 = __swift_project_value_buffer(v8, (uint64_t)qword_26A4A1CE8);
      sub_25AB4C944(v21, (uint64_t)v11, &qword_26A49F9A0);
      uint64_t v22 = sub_25AC345E0();
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v11, 1, v22) == 1)
      {
        sub_25AB18FAC((uint64_t)v11, &qword_26A49F9A0);
      }
      else
      {
        os_log_type_t v38 = sub_25AC345C0();
        os_log_type_t v39 = sub_25AC352C0();
        if (os_log_type_enabled(v38, v39))
        {
          uint64_t v40 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v40 = 0;
          _os_log_impl(&dword_25AB11000, v38, v39, "nil status, returning default", v40, 2u);
          MEMORY[0x261151C20](v40, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v22);
      }
      *(unsigned char *)(v4 + 80) = 0;
      unint64_t v41 = sub_25AB714E8(MEMORY[0x263F8EE78]);
      uint64_t result = sub_25AB4E38C(v41, (uint64_t)v44);
      long long v28 = v53;
      char v29 = v52;
      char v30 = v51;
      char v31 = v50;
      char v32 = v49;
      char v33 = v48;
      char v34 = v47;
      char v35 = v46;
      long long v36 = v45;
      uint64_t v37 = v44[0];
      uint64_t v20 = v44[1];
    }
    else
    {
      uint64_t v37 = v54;
      long long v36 = v56;
      char v29 = v63 & 1;
      char v30 = v62 & 1;
      char v31 = v61 & 1;
      long long v28 = v64;
      char v32 = v60 & 1;
      char v33 = v59 & 1;
      char v34 = v58 & 1;
      char v35 = v57 & 1;
      *(unsigned char *)(v3 + 80) = 0;
    }
  }
  *(void *)a3 = v37;
  *(void *)(a3 + 8) = v20;
  *(_OWORD *)(a3 + 16) = v36;
  *(unsigned char *)(a3 + 32) = v35;
  *(unsigned char *)(a3 + 33) = v34;
  *(unsigned char *)(a3 + 34) = v33;
  *(unsigned char *)(a3 + 35) = v32;
  *(unsigned char *)(a3 + 36) = v31;
  *(unsigned char *)(a3 + 37) = v30;
  *(unsigned char *)(a3 + 38) = v29;
  *(_OWORD *)(a3 + 40) = v28;
  return result;
}

uint64_t sub_25AB6348C()
{
  uint64_t v2 = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v45 = (uint64_t)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 104;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v40 - v7 + 104;
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v40 - v9 + 104;
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v3, (uint64_t)qword_26A4A1CE8);
  sub_25AB4C944(v11, (uint64_t)v10, &qword_26A49F9A0);
  uint64_t v12 = sub_25AC345E0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v10, 1, v12) == 1)
  {
    sub_25AB18FAC((uint64_t)v10, &qword_26A49F9A0);
  }
  else
  {
    sub_25AB464DC(v2, 0xD000000000000018, 0x800000025AC3EEB0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  if (sub_25AB66064())
  {
    sub_25AB4C944(v11, (uint64_t)v8, &qword_26A49F9A0);
    if (v14(v8, 1, v12) == 1)
    {
      sub_25AB18FAC((uint64_t)v8, &qword_26A49F9A0);
    }
    else
    {
      uint64_t v20 = sub_25AC345C0();
      os_log_type_t v21 = sub_25AC352C0();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v22 = 0;
        _os_log_impl(&dword_25AB11000, v20, v21, "isSEValid check failed, reader is busy", v22, 2u);
        MEMORY[0x261151C20](v22, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
    }
    sub_25AB564F4();
    swift_allocError();
    *uint64_t v23 = 0;
    return swift_willThrow();
  }
  uint64_t v39 = v1;
  *(unsigned char *)(v2 + 80) = 1;
  uint64_t v15 = sub_25AB6688C();
  type metadata accessor for SPRStatusTask();
  uint64_t inited = swift_initStackObject();
  *(unsigned char *)(inited + 24) = 1;
  *(void *)(inited + 16) = v15;
  swift_retain();
  sub_25AB4D57C(0, 0xE000000000000000, v40);
  swift_release();
  sub_25AB259D8((uint64_t)v40, (uint64_t)v41, &qword_26A4A0790);
  if (v42 != 1)
  {
    char v24 = v43;
    char v25 = v44;
    *(unsigned char *)(v2 + 80) = 0;
    uint64_t result = (uint64_t)sub_25AB6698C(v40);
    if (v25)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FF48);
      uint64_t v32 = swift_initStackObject();
      *(_OWORD *)(v32 + 16) = xmmword_25AC37D80;
      char v33 = (objc_class *)sub_25AC325C0();
      *(void *)(v32 + 32) = sub_25AC32590();
      *(void *)(v32 + 40) = v34;
      uint64_t v35 = sub_25AC32C00();
      *(void *)(v32 + 72) = MEMORY[0x263F8D310];
      *(void *)(v32 + 48) = v35;
      *(void *)(v32 + 56) = v36;
      sub_25AB714E8(v32);
      id v37 = objc_allocWithZone(v33);
      uint64_t v27 = sub_25AC325D0();
      sub_25AB66A58();
    }
    else
    {
      if (v24) {
        return result;
      }
      id v26 = objc_allocWithZone((Class)sub_25AC325C0());
      uint64_t v27 = sub_25AC325D0();
      sub_25AB66A58();
    }
    swift_allocError();
    *os_log_type_t v38 = v27;
    return swift_willThrow();
  }
  uint64_t v17 = v11;
  uint64_t v18 = v45;
  sub_25AB4C944(v17, v45, &qword_26A49F9A0);
  if (v14((char *)v18, 1, v12) == 1)
  {
    uint64_t result = sub_25AB18FAC(v18, &qword_26A49F9A0);
    *(unsigned char *)(v2 + 80) = 0;
  }
  else
  {
    long long v28 = sub_25AC345C0();
    os_log_type_t v29 = sub_25AC352C0();
    if (os_log_type_enabled(v28, v29))
    {
      char v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v30 = 0;
      _os_log_impl(&dword_25AB11000, v28, v29, "nil status, ignore", v30, 2u);
      char v31 = v30;
      uint64_t v18 = v45;
      MEMORY[0x261151C20](v31, -1, -1);
    }

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v18, v12);
    *(unsigned char *)(v2 + 80) = 0;
  }
  return result;
}

BOOL sub_25AB639DC(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = v2;
  unint64_t v44 = a2;
  uint64_t v43 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v40 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v41 = (uint64_t)&v39 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v39 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v39 - v13;
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v5, (uint64_t)qword_26A4A1CE8);
  sub_25AB4C944(v15, (uint64_t)v14, &qword_26A49F9A0);
  uint64_t v16 = sub_25AC345E0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  uint64_t v42 = v17;
  if (v19 == 1)
  {
    sub_25AB18FAC((uint64_t)v14, &qword_26A49F9A0);
  }
  else
  {
    sub_25AB464DC(v4, 0xD000000000000011, 0x800000025AC3EE90, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
  }
  if (sub_25AB66064())
  {
    sub_25AB4C944(v15, (uint64_t)v12, &qword_26A49F9A0);
    if (v18(v12, 1, v16) == 1)
    {
      sub_25AB18FAC((uint64_t)v12, &qword_26A49F9A0);
    }
    else
    {
      uint64_t v23 = sub_25AC345C0();
      os_log_type_t v24 = sub_25AC352C0();
      if (os_log_type_enabled(v23, v24))
      {
        char v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v25 = 0;
        _os_log_impl(&dword_25AB11000, v23, v24, "isReaderValid check failed, reader is busy", v25, 2u);
        MEMORY[0x261151C20](v25, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v16);
    }
    sub_25AB564F4();
    swift_allocError();
    *id v26 = 0;
    swift_willThrow();
  }
  else
  {
    uint64_t v39 = v3;
    *(unsigned char *)(v4 + 80) = 1;
    uint64_t v20 = sub_25AB6688C();
    type metadata accessor for SPRStatusTask();
    uint64_t inited = swift_initStackObject();
    *(unsigned char *)(inited + 24) = 2;
    *(void *)(inited + 16) = v20;
    swift_retain();
    sub_25AB4D57C(v43, v44, &v45);
    swift_release();
    sub_25AB259D8((uint64_t)&v45, (uint64_t)v47, &qword_26A4A0790);
    if (v48 == 1)
    {
      uint64_t v22 = v40;
      sub_25AB4C944(v15, v40, &qword_26A49F9A0);
      if (v18((char *)v22, 1, v16) == 1)
      {
        sub_25AB18FAC(v22, &qword_26A49F9A0);
      }
      else
      {
        char v30 = sub_25AC345C0();
        os_log_type_t v31 = sub_25AC352C0();
        if (os_log_type_enabled(v30, v31))
        {
          uint64_t v32 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v32 = 0;
          _os_log_impl(&dword_25AB11000, v30, v31, "nil status, using default ReaderInfo value", v32, 2u);
          MEMORY[0x261151C20](v32, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v22, v16);
      }
      *(unsigned char *)(v4 + 80) = 0;
      unint64_t v33 = sub_25AB714E8(MEMORY[0x263F8EE78]);
      sub_25AB4E38C(v33, (uint64_t)v46);
      sub_25AB66AB0((uint64_t)v46);
      BOOL v27 = 0;
      if ((v46[37] & 1) == 0) {
        return (v46[36] & 1) == 0;
      }
    }
    else
    {
      LODWORD(v44) = v49;
      int v28 = v50;
      *(unsigned char *)(v4 + 80) = 0;
      uint64_t v29 = v41;
      sub_25AB4C944(v15, v41, &qword_26A49F9A0);
      if (v18((char *)v29, 1, v16) == 1)
      {
        sub_25AB18FAC(v29, &qword_26A49F9A0);
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v34 = sub_25AC345C0();
        os_log_type_t v35 = sub_25AC352C0();
        if (os_log_type_enabled(v34, v35))
        {
          uint64_t v36 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v36 = 67109120;
          BOOL v51 = ((v28 | v44) & 1) == 0;
          sub_25AC354A0();
          sub_25AB6698C((uint64_t *)&v45);
          _os_log_impl(&dword_25AB11000, v34, v35, "isReaderValid: %{BOOL}d", v36, 8u);
          id v37 = v36;
          uint64_t v29 = v41;
          MEMORY[0x261151C20](v37, -1, -1);
        }
        else
        {

          sub_25AB6698C((uint64_t *)&v45);
        }
        (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v29, v16);
      }
      sub_25AB6698C((uint64_t *)&v45);
      return (v28 & 1) == 0 && (v44 & 1) == 0;
    }
  }
  return v27;
}

uint64_t sub_25AB6406C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v6, (uint64_t)qword_26A4A1CE8);
  sub_25AB4C944(v9, (uint64_t)v8, &qword_26A49F9A0);
  uint64_t v10 = sub_25AC345E0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_25AB18FAC((uint64_t)v8, &qword_26A49F9A0);
  }
  else
  {
    sub_25AB464DC(v3, 0xD000000000000014, 0x800000025AC3EE70, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
  uint64_t result = sub_25AB6688C();
  if ((*(unsigned char *)(result + 16) & 1) == 0)
  {
    uint64_t v13 = result;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_25AB55B18(0, v13, a1, a2, v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_25AB64250(uint8_t *a1, uint64_t a2, char a3, int a4)
{
  uint64_t v40 = a2;
  uint64_t v5 = v4;
  int v39 = a4;
  os_log_type_t v38 = a1;
  uint64_t v7 = sub_25AC328E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v47 = (uint64_t)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v35 - v14;
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v43 = (void *)__swift_project_value_buffer(v11, (uint64_t)qword_26A4A1CE8);
  sub_25AB4C944((uint64_t)v43, (uint64_t)v15, &qword_26A49F9A0);
  uint64_t v16 = sub_25AC345E0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v18 = v42(v15, 1, v16);
  uint64_t v37 = v17;
  if (v18 == 1)
  {
    sub_25AB18FAC((uint64_t)v15, &qword_26A49F9A0);
  }
  else
  {
    sub_25AB464DC(v5, 0xD00000000000003DLL, 0x800000025AC3EE30, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v16);
  }
  uint64_t v46 = v16;
  sub_25AC32720();
  sub_25AC32870();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v19 = v8 + 8;
  uint64_t v44 = v19;
  long long v45 = v20;
  v20(v10, v7);
  if (sub_25AB66064())
  {
    sub_25AB564F4();
    os_log_type_t v21 = (void *)swift_allocError();
    *uint64_t v22 = 0;
  }
  else
  {
    uint64_t v36 = v7;
    *(unsigned char *)(v5 + 80) = 1;
    sub_25AB6688C();
    swift_retain();
    uint64_t v23 = v41;
    uint64_t v19 = sub_25AB4F550(v38, v40, a3 & 1, v39 & 1);
    swift_release();
    if (!v23)
    {
      *(unsigned char *)(v5 + 80) = 0;
      sub_25AC32720();
      sub_25AC32850();
      v45(v10, v36);
      return v19;
    }
    *(unsigned char *)(v5 + 80) = 0;
    os_log_type_t v21 = v23;
    uint64_t v7 = v36;
  }
  swift_willThrow();
  os_log_type_t v24 = (void *)sub_25AB6D704(v21);
  uint64_t v25 = v47;
  sub_25AB4C944((uint64_t)v43, v47, &qword_26A49F9A0);
  if (v42((char *)v25, 1, v46) == 1)
  {
    sub_25AB18FAC(v25, &qword_26A49F9A0);
  }
  else
  {
    uint64_t v43 = v24;
    id v26 = v24;
    BOOL v27 = sub_25AC345C0();
    os_log_type_t v28 = sub_25AC352C0();
    uint64_t v19 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = (uint64_t (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
      unsigned __int8 v49 = v42;
      *(_DWORD *)uint64_t v29 = 136446210;
      uint64_t v41 = v29 + 4;
      sub_25AC325B0();
      uint64_t v30 = sub_25AC325E0();
      uint64_t v48 = sub_25AB56574(v30, v31, (uint64_t *)&v49);
      sub_25AC354A0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25AB11000, v27, (os_log_type_t)v19, "error preparing read session: [ %{public}s ]", v29, 0xCu);
      uint64_t v32 = v42;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v32, -1, -1);
      MEMORY[0x261151C20](v29, -1, -1);
    }
    else
    {
    }
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v47, v46);
    os_log_type_t v24 = v43;
  }
  sub_25AC325C0();
  sub_25AB66A58();
  swift_allocError();
  *unint64_t v33 = v24;
  swift_willThrow();

  sub_25AC32720();
  sub_25AC32850();
  v45(v10, v7);
  return v19;
}

uint64_t sub_25AB647C0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 56) = a5;
  *(void *)(v6 + 64) = v5;
  *(void *)(v6 + 40) = a2;
  *(void *)(v6 + 48) = a4;
  *(unsigned char *)(v6 + 104) = a3;
  *(void *)(v6 + 32) = a1;
  *(void *)(v6 + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  *(void *)(v6 + 80) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB64864);
}

uint64_t sub_25AB64864()
{
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = __swift_project_value_buffer(*(void *)(v0 + 72), (uint64_t)qword_26A4A1CE8);
  sub_25AB4C944(v2, v1, &qword_26A49F9A0);
  uint64_t v3 = sub_25AC345E0();
  uint64_t v4 = *(void *)(v3 - 8);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  uint64_t v6 = *(void *)(v0 + 80);
  if (v5 == 1)
  {
    sub_25AB18FAC(*(void *)(v0 + 80), &qword_26A49F9A0);
  }
  else
  {
    sub_25AB464DC(*(void *)(v0 + 64), 0xD00000000000002BLL, 0x800000025AC3EE00, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  if (sub_25AB66064())
  {
    sub_25AB564F4();
    swift_allocError();
    *uint64_t v7 = 0;
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
  else
  {
    *(unsigned char *)(*(void *)(v0 + 64) + 80) = 1;
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_25AB64AA0;
    uint64_t v12 = *(void *)(v0 + 56);
    uint64_t v11 = *(void *)(v0 + 64);
    uint64_t v13 = *(void *)(v0 + 40);
    uint64_t v14 = *(void *)(v0 + 48);
    char v15 = *(unsigned char *)(v0 + 104);
    uint64_t v16 = *(void *)(v0 + 32);
    return sub_25AB64CAC(v0 + 16, v16, v13, v11, v15, v14, v12);
  }
}

uint64_t sub_25AB64AA0()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25AB64C2C;
  }
  else {
    uint64_t v2 = sub_25AB64BB4;
  }
  return MEMORY[0x270FA2498](v2);
}

uint64_t sub_25AB64BB4()
{
  *(unsigned char *)(v0[8] + 80) = 0;
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v2, v1);
}

uint64_t sub_25AB64C2C()
{
  *(unsigned char *)(*(void *)(v0 + 64) + 80) = 0;
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB64CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 80) = a6;
  *(void *)(v7 + 88) = a7;
  *(unsigned char *)(v7 + 160) = a5;
  *(void *)(v7 + 64) = a3;
  *(void *)(v7 + 72) = a4;
  *(void *)(v7 + 48) = a1;
  *(void *)(v7 + 56) = a2;
  *(void *)(v7 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  *(void *)(v7 + 104) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB64D50);
}

uint64_t sub_25AB64D50()
{
  uint64_t v21 = v0;
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = __swift_project_value_buffer(*(void *)(v0 + 96), (uint64_t)qword_26A4A1CE8);
  sub_25AB4C944(v2, v1, &qword_26A49F9A0);
  uint64_t v3 = sub_25AC345E0();
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) == 1)
  {
    sub_25AB18FAC(*(void *)(v0 + 104), &qword_26A49F9A0);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    uint64_t v5 = sub_25AC345C0();
    os_log_type_t v6 = sub_25AC352D0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v20 = v8;
      *(_DWORD *)uint64_t v7 = 136315138;
      uint64_t v9 = sub_25AC34310();
      *(void *)(v0 + 40) = sub_25AB56574(v9, v10, &v20);
      sub_25AC354A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25AB11000, v5, v6, "Installing kernel: [ %s ]", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261151C20](v8, -1, -1);
      MEMORY[0x261151C20](v7, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(void, uint64_t))(v4 + 8))(*(void *)(v0 + 104), v3);
  }
  uint64_t v11 = sub_25AB6688C();
  *(void *)(v0 + 112) = v11;
  type metadata accessor for SPRConfigTask();
  uint64_t inited = swift_initStackObject();
  *(void *)(v0 + 120) = inited;
  *(void *)(inited + 16) = v11;
  swift_retain();
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_25AB6505C;
  uint64_t v14 = *(void *)(v0 + 80);
  uint64_t v15 = *(void *)(v0 + 88);
  char v16 = *(unsigned char *)(v0 + 160);
  uint64_t v18 = *(void *)(v0 + 56);
  uint64_t v17 = *(void *)(v0 + 64);
  return sub_25AB75B44(v18, v17, v16, v14, v15);
}

uint64_t sub_25AB6505C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 136) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_25AB65218;
  }
  else
  {
    *(void *)(v6 + 144) = a2;
    *(void *)(v6 + 152) = a1;
    swift_release();
    uint64_t v7 = sub_25AB65198;
  }
  return MEMORY[0x270FA2498](v7);
}

uint64_t sub_25AB65198()
{
  unint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = (void *)v0[6];
  if (!v2)
  {
    uint64_t v1 = 0;
    unint64_t v2 = 0xE000000000000000;
  }
  *uint64_t v3 = v1;
  v3[1] = v2;
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_25AB65218()
{
  swift_setDeallocating();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB65294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v8, (uint64_t)qword_26A4A1CE8);
  sub_25AB4C944(v11, (uint64_t)v10, &qword_26A49F9A0);
  uint64_t v12 = sub_25AC345E0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    sub_25AB464DC(v4, 0xD000000000000027, 0x800000025AC3EDD0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    if (!*(void *)(v4 + 88)) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  sub_25AB18FAC((uint64_t)v10, &qword_26A49F9A0);
  if (*(void *)(v4 + 88))
  {
LABEL_7:
    swift_retain();
    sub_25AB8542C(2);
    swift_release();
    *(void *)(v4 + 88) = 0;
    swift_release();
  }
LABEL_8:
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  long long v23 = *(_OWORD *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 32);
  sub_25AB564C8((uint64_t)&v23);
  uint64_t v16 = sub_25AB6688C();
  uint64_t v17 = *(void **)(a1 + 40);
  type metadata accessor for SPRReadTask();
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = 0;
  *(_OWORD *)(v18 + 48) = v23;
  *(void *)(v18 + 32) = v14;
  *(void *)(v18 + 40) = v16;
  *(void *)(v18 + 64) = v15;
  *(void *)(v18 + 72) = v17;
  *(void *)(v18 + 24) = sub_25AB66A50;
  *(void *)(v18 + 80) = a2;
  *(void *)(v18 + 88) = a3;
  *(void *)(v4 + 88) = v18;
  swift_retain();
  id v19 = v17;
  swift_retain();
  swift_retain();
  swift_release();
  if (*(void *)(v4 + 88))
  {
    uint64_t v21 = *(void *)a1;
    uint64_t v20 = *(void *)(a1 + 8);
    swift_retain();
    sub_25AB84DF0(v21, v20);
    swift_release();
  }
  return swift_release();
}

uint64_t sub_25AB6554C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(void *)(result + 88) = 0;
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_25AB655A8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v19[-v8];
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v10 = __swift_project_value_buffer(v4, (uint64_t)qword_26A4A1CE8);
  sub_25AB4C944(v10, (uint64_t)v9, &qword_26A49F9A0);
  uint64_t v11 = sub_25AC345E0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v9, 1, v11) == 1)
  {
    sub_25AB18FAC((uint64_t)v9, &qword_26A49F9A0);
    if (*(void *)(v2 + 88))
    {
LABEL_5:
      swift_retain();
      char v14 = sub_25AB8542C(a1);
      swift_release();
      *(void *)(v2 + 88) = 0;
      swift_release();
      return v14 & 1;
    }
  }
  else
  {
    uint64_t v20 = 0;
    unint64_t v21 = 0xE000000000000000;
    v19[15] = a1;
    sub_25AC35660();
    sub_25AB464DC(v2, 0xD000000000000018, 0x800000025AC3EDB0, v20, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v9, v11);
    if (*(void *)(v2 + 88)) {
      goto LABEL_5;
    }
  }
  sub_25AB4C944(v10, (uint64_t)v7, &qword_26A49F9A0);
  if (v13(v7, 1, v11) == 1)
  {
    sub_25AB18FAC((uint64_t)v7, &qword_26A49F9A0);
  }
  else
  {
    uint64_t v15 = sub_25AC345C0();
    os_log_type_t v16 = sub_25AC352D0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_25AB11000, v15, v16, "No active adapter read", v17, 2u);
      MEMORY[0x261151C20](v17, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v7, v11);
  }
  char v14 = 0;
  return v14 & 1;
}

unint64_t sub_25AB658B8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5 = v4;
  LODWORD(v65) = a4;
  uint64_t v67 = a3;
  v68[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v64 = sub_25AC328E0();
  uint64_t v66 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  char v61 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v63 = (uint64_t)&v57 - v14;
  MEMORY[0x270FA5388](v13);
  os_log_type_t v16 = (char *)&v57 - v15;
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v9, (uint64_t)qword_26A4A1CE8);
  sub_25AB4C944(v17, (uint64_t)v16, &qword_26A49F9A0);
  uint64_t v18 = sub_25AC345E0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v20(v16, 1, v18) == 1)
  {
    sub_25AB18FAC((uint64_t)v16, &qword_26A49F9A0);
  }
  else
  {
    sub_25AB464DC(v5, 0xD000000000000031, 0x800000025AC3ED70, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
  }
  if (!sub_25AB6FFB0(a1, a2)) {
    goto LABEL_12;
  }
  uint64_t v60 = v19;
  uint64_t v62 = v5;
  unint64_t v21 = self;
  uint64_t v22 = (void *)sub_25AC34D90();
  swift_bridgeObjectRelease();
  v68[0] = 0;
  id v23 = objc_msgSend(v21, sel_dataWithJSONObject_options_error_, v22, 0, v68);

  id v24 = v68[0];
  if (!v23)
  {
    uint64_t v34 = v24;
    uint64_t v35 = (void *)sub_25AC321F0();

    swift_willThrow();
    uint64_t v19 = v60;
LABEL_12:
    sub_25AB4C944(v17, (uint64_t)v12, &qword_26A49F9A0);
    if (v20(v12, 1, v18) != 1)
    {
      uint64_t v37 = v19;
      os_log_type_t v38 = sub_25AC345C0();
      os_log_type_t v39 = sub_25AC352C0();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v40 = 0;
        _os_log_impl(&dword_25AB11000, v38, v39, "trxBlob cannot be serialized", v40, 2u);
        MEMORY[0x261151C20](v40, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v18);
      return 0;
    }
    uint64_t v36 = (uint64_t)v12;
LABEL_23:
    sub_25AB18FAC(v36, &qword_26A49F9A0);
    return 0;
  }
  uint64_t v58 = sub_25AC323A0();
  unint64_t v59 = v25;

  if (sub_25AB701E4(a1, a2, v65 & 1))
  {
    id v26 = (void *)sub_25AC34D90();
    swift_bridgeObjectRelease();
    v68[0] = 0;
    id v27 = objc_msgSend(v21, sel_dataWithJSONObject_options_error_, v26, 0, v68);

    id v28 = v68[0];
    uint64_t v29 = v62;
    uint64_t v30 = v66;
    if (v27)
    {
      uint64_t v31 = sub_25AC323A0();
      unint64_t v33 = v32;
    }
    else
    {
      uint64_t v41 = v28;
      uint64_t v42 = (void *)sub_25AC321F0();

      swift_willThrow();
      uint64_t v31 = 0;
      unint64_t v33 = 0xF000000000000000;
    }
  }
  else
  {
    uint64_t v31 = 0;
    unint64_t v33 = 0xF000000000000000;
    uint64_t v29 = v62;
    uint64_t v30 = v66;
  }
  if ((*(unsigned char *)(v67 + 192) & 1) != 0 && v33 >> 60 == 15)
  {
    uint64_t v43 = v63;
    sub_25AB4C944(v17, v63, &qword_26A49F9A0);
    if (v20((char *)v43, 1, v18) != 1)
    {
      char v52 = sub_25AC345C0();
      os_log_type_t v53 = sub_25AC352C0();
      if (os_log_type_enabled(v52, v53))
      {
        uint64_t v54 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v54 = 0;
        _os_log_impl(&dword_25AB11000, v52, v53, "pinBlob cannot be serialized", v54, 2u);
        MEMORY[0x261151C20](v54, -1, -1);
      }
      sub_25AB16958(v58, v59);

      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v43, v18);
      return 0;
    }
    sub_25AB16958(v58, v59);
    uint64_t v36 = v43;
    goto LABEL_23;
  }
  uint64_t v67 = v31;
  if (sub_25AB66064())
  {
    sub_25AB564F4();
    uint64_t v44 = (void *)swift_allocError();
    *long long v45 = 0;
    uint64_t v46 = v58;
    unint64_t v47 = v59;
    swift_willThrow();
    sub_25AB16958(v46, v47);
    sub_25AB16944(v67, v33);

    return 0;
  }
  *(unsigned char *)(v29 + 80) = 1;
  uint64_t v48 = v61;
  sub_25AC32650();
  sub_25AC32870();
  uint64_t v65 = *(void (**)(char *, uint64_t))(v30 + 8);
  uint64_t v66 = v30 + 8;
  v65(v48, v64);
  sub_25AB6688C();
  swift_retain();
  uint64_t v49 = v58;
  unint64_t v50 = v59;
  uint64_t v51 = v67;
  unint64_t v56 = sub_25AB5171C(v58, v59, v67, v33);
  swift_release();
  sub_25AC32650();
  sub_25AC32850();
  v65(v48, v64);
  *(unsigned char *)(v62 + 80) = 0;
  sub_25AB16958(v49, v50);
  sub_25AB16944(v51, v33);
  return v56;
}

uint64_t sub_25AB66064()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1CE8);
  sub_25AB4C944(v5, (uint64_t)v4, &qword_26A49F9A0);
  uint64_t v6 = sub_25AC345E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_25AB18FAC((uint64_t)v4, &qword_26A49F9A0);
  }
  else
  {
    swift_retain();
    uint64_t v8 = sub_25AC345C0();
    os_log_type_t v9 = sub_25AC352B0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 67109120;
      uint64_t v12[3] = *(unsigned __int8 *)(v1 + 80);
      sub_25AC354A0();
      swift_release();
      _os_log_impl(&dword_25AB11000, v8, v9, "checking SPR busy: %{BOOL}d", v10, 8u);
      MEMORY[0x261151C20](v10, -1, -1);
    }
    else
    {
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  return *(unsigned __int8 *)(v1 + 80);
}

uint64_t sub_25AB66288()
{
  swift_release();
  sub_25AB669C4(*(void *)(v0 + 24), *(void *)(v0 + 32));
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SPRAdapter()
{
  return self;
}

uint64_t sub_25AB66300()
{
  sub_25AB62A0C(v2);
  char v0 = v3;
  sub_25AB259D8((uint64_t)v2, (uint64_t)v4, &qword_26A4A0790);
  if (v5 == 1) {
    return 1;
  }
  sub_25AB6698C(v2);
  return v0 & 1;
}

uint64_t sub_25AB66368()
{
  sub_25AB62A0C(v2);
  sub_25AB259D8((uint64_t)v2, (uint64_t)v3, &qword_26A4A0790);
  if (v3[1] == 1) {
    return 0;
  }
  uint64_t v0 = v3[0];
  swift_bridgeObjectRetain();
  sub_25AB6698C(v2);
  return v0;
}

uint64_t sub_25AB663E0()
{
  sub_25AB62A0C(v2);
  sub_25AB259D8((uint64_t)v2, (uint64_t)v3, &qword_26A4A0790);
  if (v4 == 1) {
    return 0;
  }
  uint64_t v0 = v5;
  swift_bridgeObjectRetain();
  sub_25AB6698C(v2);
  return v0;
}

uint64_t sub_25AB66458(uint64_t a1, uint64_t a2)
{
  return sub_25AB6406C(a1, a2);
}

double sub_25AB6647C@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_25AB62FBC(a1, a2, (uint64_t)v6);
  long long v4 = v6[1];
  *(_OWORD *)a3 = v6[0];
  *(_OWORD *)(a3 + 16) = v4;
  double result = *(double *)&v7;
  *(_OWORD *)(a3 + 32) = v7;
  *(void *)(a3 + 48) = v8;
  return result;
}

uint64_t sub_25AB664CC()
{
  return sub_25AB6348C();
}

BOOL sub_25AB664F0(uint64_t a1, unint64_t a2)
{
  return sub_25AB639DC(a1, a2);
}

uint64_t sub_25AB66518(uint8_t *a1, uint64_t a2, char a3, int a4)
{
  uint64_t result = sub_25AB64250(a1, a2, a3, a4);
  if (v4) {
    return v6;
  }
  return result;
}

uint64_t sub_25AB6654C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_25AB66614;
  return sub_25AB647C0(a1, a2, a3, a4, a5);
}

uint64_t sub_25AB66614(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *v3;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (!v2)
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2;
  }
  return v8(v6, v7);
}

uint64_t sub_25AB66724(uint64_t a1)
{
  uint64_t v2 = sub_25AB6688C();
  long long v3 = *(_OWORD *)a1;
  long long v8 = *(_OWORD *)(a1 + 16);
  long long v9 = v3;
  uint64_t v4 = *(void **)(a1 + 40);
  swift_retain();
  sub_25AB564C8((uint64_t)&v9);
  sub_25AB564C8((uint64_t)&v8);
  id v5 = v4;
  sub_25AB53F54(0, v2, a1, v6);
  swift_release();
  return 0;
}

uint64_t sub_25AB667D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25AB65294(a1, a2, a3);
}

uint64_t sub_25AB667F4(uint64_t a1)
{
  return sub_25AB655A8(a1) & 1;
}

unint64_t sub_25AB6681C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return sub_25AB658B8(a1, a2, a3, a4);
}

uint64_t sub_25AB66840(uint64_t a1)
{
  sub_25AB6688C();
  swift_retain();
  sub_25AB51E20(a1);
  return swift_release();
}

uint64_t sub_25AB6688C()
{
  uint64_t result = *(void *)(v0 + 16);
  if (!result)
  {
    uint64_t v2 = v0;
    long long v3 = (uint64_t (*)(void))sub_25AC34000();
    char v4 = v3();
    swift_release();
    if (v4)
    {
      id v5 = objc_msgSend(self, sel_standardUserDefaults);
      uint64_t v6 = (void *)sub_25AC34E10();
      char v7 = objc_msgSend(v5, sel_BOOLForKey_, v6);
    }
    else
    {
      char v7 = 0;
    }
    type metadata accessor for SPRReaderProxy();
    swift_allocObject();
    *(void *)(v2 + 16) = sub_25AB4ECDC(v7);
    swift_release();
    uint64_t result = *(void *)(v2 + 16);
    if (!result) {
      __break(1u);
    }
  }
  return result;
}

uint64_t *sub_25AB6698C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_25AB669C4(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25AB66A18()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25AB66A50()
{
  return sub_25AB6554C();
}

unint64_t sub_25AB66A58()
{
  unint64_t result = qword_26A4A07A0;
  if (!qword_26A4A07A0)
  {
    sub_25AC325C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A07A0);
  }
  return result;
}

uint64_t sub_25AB66AB0(uint64_t a1)
{
  return a1;
}

uint64_t sub_25AB66AFC(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_25AB66B50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A07A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_25AB66BB8(uint64_t a1)
{
  v20[5] = *MEMORY[0x263EF8340];
  *(void *)&long long v17 = a1;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A07E8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A07D8);
  if (!swift_dynamicCast())
  {
    uint64_t v19 = 0;
    memset(v18, 0, sizeof(v18));
    sub_25AB18FAC((uint64_t)v18, &qword_26A4A07E0);
    *(void *)&v18[0] = sub_25AB6A3A0(*(void *)(a1 + 16));
    *((void *)&v18[0] + 1) = v1;
    MEMORY[0x270FA5388](*(void *)&v18[0]);
    uint64_t v2 = sub_25AB683C8((void *(*)(uint64_t *__return_ptr, char *, char *))sub_25AB6DEFC);
    uint64_t v5 = *((void *)&v18[0] + 1) >> 62;
    uint64_t v6 = v2;
    uint64_t v7 = v3;
    switch(*((void *)&v18[0] + 1) >> 62)
    {
      case 1:
        LODWORD(v8) = DWORD1(v18[0]) - LODWORD(v18[0]);
        if (__OFSUB__(DWORD1(v18[0]), v18[0])) {
          goto LABEL_37;
        }
        uint64_t v8 = (int)v8;
LABEL_8:
        if (v4 == v8)
        {
LABEL_14:
          memset(v20, 0, 15);
          if (!v3)
          {
LABEL_29:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return *(void *)&v18[0];
          }
          if (!__OFSUB__(v3, 1))
          {
            if (v3 - 1 < 0)
            {
LABEL_31:
              __break(1u);
            }
            else
            {
              LOBYTE(v13) = 0;
              while (1)
              {
                uint64_t v14 = v7 - 1;
                if ((unint64_t)(v7 - 1) >= *((void *)v6 + 2)) {
                  break;
                }
                *((unsigned char *)v20 + v13) = v6[v7 + 31];
                __int16 v13 = v13 + 1;
                if ((v13 & 0x100) != 0) {
                  goto LABEL_33;
                }
                if (v13 == 14)
                {
                  sub_25AC32370();
                  if (v7 == 1) {
                    goto LABEL_29;
                  }
                  LOBYTE(v13) = 0;
                }
                else if (v7 == 1)
                {
                  goto LABEL_34;
                }
                --v7;
                if (v14 < 1) {
                  goto LABEL_31;
                }
              }
            }
            __break(1u);
LABEL_33:
            __break(1u);
LABEL_34:
            sub_25AC32370();
            goto LABEL_29;
          }
        }
        else
        {
          if (v5)
          {
            if (v5 == 1) {
              uint64_t v12 = *(uint64_t *)&v18[0] >> 32;
            }
            else {
              uint64_t v12 = *(void *)(*(void *)&v18[0] + 24);
            }
          }
          else
          {
            uint64_t v12 = BYTE14(v18[0]);
          }
LABEL_27:
          if (v12 >= v4)
          {
            sub_25AC32360();
            goto LABEL_29;
          }
          __break(1u);
        }
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        return result;
      case 2:
        uint64_t v10 = *(void *)(*(void *)&v18[0] + 16);
        uint64_t v9 = *(void *)(*(void *)&v18[0] + 24);
        BOOL v11 = __OFSUB__(v9, v10);
        uint64_t v8 = v9 - v10;
        if (!v11) {
          goto LABEL_8;
        }
        goto LABEL_38;
      case 3:
        if (!v4) {
          goto LABEL_14;
        }
        uint64_t v12 = 0;
        goto LABEL_27;
      default:
        uint64_t v8 = BYTE14(v18[0]);
        goto LABEL_8;
    }
  }
  sub_25AB47E04(v18, (uint64_t)v20);
  __swift_project_boxed_opaque_existential_1(v20, v20[3]);
  sub_25AC320C0();
  swift_bridgeObjectRelease();
  v18[0] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return *(void *)&v18[0];
}

uint64_t sub_25AB66F0C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  *(void *)&long long v37 = a1;
  *((void *)&v37 + 1) = a2;
  unint64_t v38 = a3;
  unint64_t v39 = a4;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A07D8);
  if (swift_dynamicCast())
  {
    sub_25AB47E04(v35, (uint64_t)&v30);
    __swift_project_boxed_opaque_existential_1(&v30, v32);
    sub_25AC320C0();
    swift_bridgeObjectRelease();
    v35[0] = v37;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
    return *(void *)&v35[0];
  }
  uint64_t v36 = 0;
  memset(v35, 0, sizeof(v35));
  sub_25AB18FAC((uint64_t)v35, &qword_26A4A07E0);
  sub_25AB69458(a1, a2, a3, a4, &v30);
  unint64_t v4 = *((void *)&v30 + 1);
  uint64_t v5 = v30;
  if (*((void *)&v30 + 1) >> 60 != 15)
  {
    swift_bridgeObjectRelease();
    v35[0] = __PAIR128__(v4, v5);
    return *(void *)&v35[0];
  }
  unint64_t v6 = sub_25AB67920(a1, a2, a3, a4);
  *(void *)&v35[0] = sub_25AB6A3A0(v6);
  *((void *)&v35[0] + 1) = v7;
  MEMORY[0x270FA5388](*(void *)&v35[0]);
  sub_25AB686C8((void *(*)(long long *__return_ptr, char *, char *))sub_25AB6DEC0, (uint64_t)&v30);
  unint64_t v8 = *((void *)&v30 + 1);
  uint64_t v10 = v31;
  uint64_t v9 = v32;
  unint64_t v11 = v33;
  uint64_t v12 = *((void *)&v35[0] + 1) >> 62;
  switch(*((void *)&v35[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v13) = DWORD1(v35[0]) - LODWORD(v35[0]);
      if (__OFSUB__(DWORD1(v35[0]), v35[0])) {
        goto LABEL_44;
      }
      uint64_t v13 = (int)v13;
LABEL_10:
      if (v34 == v13)
      {
LABEL_16:
        uint64_t v18 = *((void *)&v30 + 1) >> 14;
        *(void *)((char *)&v30 + 7) = 0;
        *(void *)&long long v30 = 0;
        if (v8 >> 14 == v33 >> 14) {
          goto LABEL_37;
        }
        unint64_t v24 = v4;
        LOBYTE(v4) = 0;
        uint64_t v19 = (v31 >> 59) & 1;
        if ((v32 & 0x1000000000000000) == 0) {
          LOBYTE(v19) = 1;
        }
        uint64_t v20 = 4 << v19;
        unint64_t v21 = HIBYTE(v32) & 0xF;
        if ((v32 & 0x2000000000000000) == 0) {
          unint64_t v21 = v31 & 0xFFFFFFFFFFFFLL;
        }
        unint64_t v25 = v21;
        while (1)
        {
          char v22 = sub_25AC35480();
          if ((v11 & 0xC) == v20)
          {
            unint64_t v11 = sub_25AB56A7C(v11, v10, v9);
            if ((v9 & 0x1000000000000000) != 0)
            {
LABEL_27:
              if (v25 <= v11 >> 16) {
                goto LABEL_42;
              }
              unint64_t v11 = sub_25AC34F90();
              goto LABEL_29;
            }
          }
          else if ((v9 & 0x1000000000000000) != 0)
          {
            goto LABEL_27;
          }
          unint64_t v11 = (v11 & 0xFFFFFFFFFFFF0000) + 65540;
LABEL_29:
          *((unsigned char *)&v30 + v4) = v22;
          LOWORD(v4) = v4 + 1;
          if ((v4 & 0x100) != 0)
          {
            __break(1u);
LABEL_42:
            __break(1u);
LABEL_43:
            __break(1u);
LABEL_44:
            __break(1u);
LABEL_45:
            __break(1u);
          }
          if (v4 == 14)
          {
            *(void *)&long long v37 = v30;
            DWORD2(v37) = DWORD2(v30);
            WORD6(v37) = WORD6(v30);
            sub_25AC32370();
            LOBYTE(v4) = 0;
            if (v18 == v11 >> 14)
            {
              swift_bridgeObjectRelease();
              sub_25AB16944(v5, v24);
              goto LABEL_38;
            }
          }
          else if (v18 == v11 >> 14)
          {
            *(void *)&long long v37 = v30;
            DWORD2(v37) = DWORD2(v30);
            WORD6(v37) = WORD6(v30);
            sub_25AC32370();
            sub_25AB16944(v5, v24);
            goto LABEL_37;
          }
        }
      }
      if (v12)
      {
        if (v12 == 1) {
          uint64_t v17 = *(uint64_t *)&v35[0] >> 32;
        }
        else {
          uint64_t v17 = *(void *)(*(void *)&v35[0] + 24);
        }
      }
      else
      {
        uint64_t v17 = BYTE14(v35[0]);
      }
LABEL_35:
      if (v17 < v34) {
        goto LABEL_43;
      }
      sub_25AC32360();
LABEL_37:
      swift_bridgeObjectRelease();
LABEL_38:
      swift_bridgeObjectRelease();
      return *(void *)&v35[0];
    case 2:
      uint64_t v15 = *(void *)(*(void *)&v35[0] + 16);
      uint64_t v14 = *(void *)(*(void *)&v35[0] + 24);
      BOOL v16 = __OFSUB__(v14, v15);
      uint64_t v13 = v14 - v15;
      if (!v16) {
        goto LABEL_10;
      }
      goto LABEL_45;
    case 3:
      if (!v34) {
        goto LABEL_16;
      }
      uint64_t v17 = 0;
      goto LABEL_35;
    default:
      uint64_t v13 = BYTE14(v35[0]);
      goto LABEL_10;
  }
}

uint64_t sub_25AB67388(unint64_t a1, unint64_t a2)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  *(void *)&long long v40 = a1;
  *((void *)&v40 + 1) = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A07D8);
  if (swift_dynamicCast())
  {
    sub_25AB47E04(v38, (uint64_t)&v41);
    __swift_project_boxed_opaque_existential_1(&v41, v43);
    sub_25AC320C0();
    swift_bridgeObjectRelease();
    v38[0] = v40;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
    return *(void *)&v38[0];
  }
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  sub_25AB18FAC((uint64_t)v38, &qword_26A4A07E0);
  unint64_t v2 = a1;
  unint64_t v3 = a2;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = a1;
      uint64_t v42 = a2 & 0xFFFFFFFFFFFFFFLL;
      unint64_t v6 = (char *)&v41 + (HIBYTE(a2) & 0xF);
      uint64_t v7 = &v41;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_25AC355D0();
      }
      if (v4) {
        unint64_t v6 = (unsigned char *)(v4 + v5);
      }
      else {
        unint64_t v6 = 0;
      }
      uint64_t v7 = (uint64_t *)v4;
    }
    unint64_t v8 = sub_25AB6E080(v7, v6);
    unint64_t v10 = v9;
    if (v9 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v38[0] = v8;
      *((void *)&v38[0] + 1) = v10;
      return *(void *)&v38[0];
    }
    unint64_t v2 = a1;
    unint64_t v3 = a2;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_14;
    }
LABEL_70:
    uint64_t v11 = sub_25AC34F80();
    goto LABEL_17;
  }
LABEL_69:
  unint64_t v8 = 0;
  unint64_t v10 = 0xF000000000000000;
  if ((v3 & 0x1000000000000000) != 0) {
    goto LABEL_70;
  }
LABEL_14:
  if ((v3 & 0x2000000000000000) != 0) {
    uint64_t v11 = HIBYTE(v3) & 0xF;
  }
  else {
    uint64_t v11 = v2 & 0xFFFFFFFFFFFFLL;
  }
LABEL_17:
  *(void *)&v38[0] = sub_25AB6A3A0(v11);
  *((void *)&v38[0] + 1) = v12;
  MEMORY[0x270FA5388](*(void *)&v38[0]);
  unint64_t v13 = (unint64_t)sub_25AB689F8((void *(*)(uint64_t *__return_ptr, char *, char *))sub_25AB6E014);
  uint64_t v16 = *((void *)&v38[0] + 1) >> 62;
  uint64_t v17 = v13;
  uint64_t v18 = v3;
  unint64_t v19 = v14;
  switch(*((void *)&v38[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v20) = DWORD1(v38[0]) - LODWORD(v38[0]);
      if (__OFSUB__(DWORD1(v38[0]), v38[0])) {
        goto LABEL_73;
      }
      uint64_t v20 = (int)v20;
LABEL_23:
      if (v15 != v20)
      {
        if (v16)
        {
          if (v16 == 1) {
            uint64_t v24 = *(uint64_t *)&v38[0] >> 32;
          }
          else {
            uint64_t v24 = *(void *)(*(void *)&v38[0] + 24);
          }
        }
        else
        {
          uint64_t v24 = BYTE14(v38[0]);
        }
LABEL_61:
        if (v24 < v15)
        {
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
        }
        sub_25AC32360();
LABEL_63:
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
LABEL_29:
      if ((v3 & 0x2000000000000000) != 0) {
        unint64_t v25 = HIBYTE(v3) & 0xF;
      }
      else {
        unint64_t v25 = v13 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v40 + 7) = 0;
      *(void *)&long long v40 = 0;
      if (4 * v25 == v14 >> 14) {
        goto LABEL_58;
      }
      LOBYTE(v26) = 0;
      uint64_t v27 = (v13 >> 59) & 1;
      if ((v3 & 0x1000000000000000) == 0) {
        LOBYTE(v27) = 1;
      }
      uint64_t v28 = 4 << v27;
      uint64_t v35 = v3 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v33 = (uint64_t)v8;
      uint64_t v34 = (v3 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v22 = *(void *)(*(void *)&v38[0] + 16);
      uint64_t v21 = *(void *)(*(void *)&v38[0] + 24);
      BOOL v23 = __OFSUB__(v21, v22);
      uint64_t v20 = v21 - v22;
      if (!v23) {
        goto LABEL_23;
      }
      goto LABEL_74;
    case 3:
      if (!v15) {
        goto LABEL_29;
      }
      uint64_t v24 = 0;
      goto LABEL_61;
    default:
      uint64_t v20 = BYTE14(v38[0]);
      goto LABEL_23;
  }
  do
  {
    unint64_t v29 = v19 & 0xC;
    unint64_t v2 = v19;
    if (v29 == v28) {
      unint64_t v2 = sub_25AB56A7C(v19, v17, v18);
    }
    unint64_t v30 = v2 >> 16;
    if (v2 >> 16 >= v25)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if ((v18 & 0x1000000000000000) != 0)
    {
      unint64_t v2 = sub_25AC34FC0();
      char v31 = v2;
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else if ((v18 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = v17;
      uint64_t v42 = v35;
      char v31 = *((unsigned char *)&v41 + v30);
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else
    {
      unint64_t v2 = v34;
      if ((v17 & 0x1000000000000000) == 0) {
        unint64_t v2 = sub_25AC355D0();
      }
      char v31 = *(unsigned char *)(v2 + v30);
      if (v29 != v28)
      {
LABEL_47:
        if ((v18 & 0x1000000000000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_51;
      }
    }
    unint64_t v2 = sub_25AB56A7C(v19, v17, v18);
    unint64_t v19 = v2;
    if ((v18 & 0x1000000000000000) == 0)
    {
LABEL_48:
      unint64_t v19 = (v19 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_53;
    }
LABEL_51:
    if (v25 <= v19 >> 16) {
      goto LABEL_68;
    }
    unint64_t v2 = sub_25AC34F90();
    unint64_t v19 = v2;
LABEL_53:
    *((unsigned char *)&v40 + v26) = v31;
    unsigned int v26 = v26 + 1;
    if ((v26 >> 8)) {
      goto LABEL_67;
    }
    BYTE14(v40) = v26;
    if (v26 == 14)
    {
      uint64_t v41 = v40;
      LODWORD(v42) = DWORD2(v40);
      WORD2(v42) = WORD6(v40);
      sub_25AC32370();
      LOBYTE(v26) = 0;
      BYTE14(v40) = 0;
    }
  }
  while (4 * v25 != v19 >> 14);
  unint64_t v8 = (unsigned char *)v33;
  if ((_BYTE)v26)
  {
    uint64_t v41 = v40;
    LODWORD(v42) = DWORD2(v40);
    WORD2(v42) = WORD6(v40);
    sub_25AC32370();
    sub_25AB16944(v33, v10);
    goto LABEL_63;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  sub_25AB16944((uint64_t)v8, v10);
LABEL_64:
  swift_bridgeObjectRelease();
  return *(void *)&v38[0];
}

int64_t sub_25AB678B8(int64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    if ((uint64_t)v2 >= result) {
      unint64_t v3 = result;
    }
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (!result) {
      unint64_t v3 = 0;
    }
    if (v2 >= v3) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SPRUtils()
{
  return self;
}

unint64_t sub_25AB67920(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    uint64_t result = sub_25AB56A7C(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    uint64_t result = sub_25AB56A7C(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  return sub_25AC34FB0();
}

unint64_t sub_25AB67A20(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    void *v9 = a4;
    v9[1] = a5;
    id v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_25AB56A7C(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_25AC34FC0();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_25AC355D0();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_25AB56A7C(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_25AC34F90();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_25AB67C34(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25AB67DDC(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_25AB67C54(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25AB680B4(a1, a2, a3, (void *)*v3, &qword_26A4A0800, MEMORY[0x263F06EA8]);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_25AB67C90(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25AB67F48(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_25AB67CB0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25AB680B4(a1, a2, a3, (void *)*v3, &qword_26A4A0820, MEMORY[0x263F156C0]);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_25AB67CEC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25AB680B4(a1, a2, a3, (void *)*v3, &qword_26A4A0830, MEMORY[0x263F15698]);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_25AB67D28(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25AB680B4(a1, a2, a3, (void *)*v3, &qword_26A4A0810, MEMORY[0x263F156B0]);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_25AB67D64(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25AB680B4(a1, a2, a3, (void *)*v3, &qword_26A4A0818, MEMORY[0x263F156B8]);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_25AB67DA0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25AB680B4(a1, a2, a3, (void *)*v3, &qword_26A4A0828, MEMORY[0x263F15690]);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_25AB67DDC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A07D0);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25AC356E0();
  __break(1u);
  return result;
}

uint64_t sub_25AB67F48(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0808);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25AC356E0();
  __break(1u);
  return result;
}

uint64_t sub_25AB680B4(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_25AC356E0();
  __break(1u);
  return result;
}

uint64_t sub_25AB682FC@<X0>(uint64_t __src@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (!__src) {
    goto LABEL_7;
  }
  if (!a2)
  {
    __src = 0;
LABEL_7:
    unint64_t v6 = 0xC000000000000000;
    goto LABEL_10;
  }
  if (a2 <= 14)
  {
    __src = sub_25AB69E38((unsigned char *)__src, (unsigned char *)(__src + a2));
    unint64_t v6 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else
  {
    sub_25AC320B0();
    swift_allocObject();
    uint64_t v5 = sub_25AC32060();
    if ((unint64_t)a2 >= 0x7FFFFFFF)
    {
      sub_25AC32350();
      __src = swift_allocObject();
      *(void *)(__src + 16) = 0;
      *(void *)(__src + 24) = a2;
      unint64_t v6 = v5 | 0x8000000000000000;
    }
    else
    {
      __src = a2 << 32;
      unint64_t v6 = v5 | 0x4000000000000000;
    }
  }
LABEL_10:
  *a3 = __src;
  a3[1] = v6;
  return __src;
}

char *sub_25AB683C8(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  void v16[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)uint64_t v1 = xmmword_25AC37F30;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_23;
      }
      if (sub_25AC32070() && __OFSUB__((int)v4, sub_25AC320A0())) {
        goto LABEL_24;
      }
      sub_25AC320B0();
      swift_allocObject();
      uint64_t v13 = sub_25AC32050();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      uint64_t result = sub_25AB68ED8((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      if (v2)
      {
        *uint64_t v5 = v4;
        goto LABEL_19;
      }
      *uint64_t v5 = v4;
      v5[1] = v12;
      break;
    case 2uLL:
      uint64_t v14 = *v1;
      uint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_25AC32320();
      uint64_t result = sub_25AB68ED8(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = v15 | 0x8000000000000000;
      if (v2)
      {
        *uint64_t v1 = v14;
LABEL_19:
        v5[1] = v12;
      }
      else
      {
        *uint64_t v1 = v14;
        v1[1] = v12;
      }
      break;
    case 3uLL:
      memset(v16, 0, 15);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16);
      if (!v2) {
        return (char *)v14;
      }
      return result;
    default:
      v16[0] = *v1;
      LOWORD(v16[1]) = v3;
      BYTE2(v16[1]) = BYTE2(v3);
      BYTE3(v16[1]) = BYTE3(v3);
      BYTE4(v16[1]) = BYTE4(v3);
      BYTE5(v16[1]) = BYTE5(v3);
      BYTE6(v16[1]) = BYTE6(v3);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16 + BYTE6(v3));
      if (!v2) {
        uint64_t result = (char *)v14;
      }
      unint64_t v8 = LODWORD(v16[1]) | ((unint64_t)BYTE4(v16[1]) << 32) | ((unint64_t)BYTE5(v16[1]) << 40) | ((unint64_t)BYTE6(v16[1]) << 48);
      *uint64_t v1 = v16[0];
      v1[1] = v8;
      return result;
  }
  return result;
}

char *sub_25AB686C8@<X0>(void *(*a1)(long long *__return_ptr, char *, char *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  uint64_t v6 = *v2;
  unint64_t v5 = v2[1];
  switch(v5 >> 62)
  {
    case 1uLL:
      uint64_t v20 = a2;
      uint64_t v10 = v5 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)uint64_t v2 = xmmword_25AC37F30;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v12 = v6 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_15;
      }
      if (v12 < (int)v6) {
        goto LABEL_20;
      }
      if (sub_25AC32070() && __OFSUB__((int)v6, sub_25AC320A0())) {
        goto LABEL_21;
      }
      sub_25AC320B0();
      swift_allocObject();
      uint64_t v19 = sub_25AC32050();
      swift_release();
      uint64_t v10 = v19;
      uint64_t v12 = v6 >> 32;
LABEL_15:
      if (v12 < (int)v6)
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
      uint64_t result = sub_25AB68F8C((int)v6, v12, a1, (uint64_t)&v21);
      long long v14 = v21;
      uint64_t v15 = v22;
      uint64_t v16 = v23;
      long long v17 = v24;
      uint64_t *v2 = v6;
      v2[1] = v10 | 0x4000000000000000;
      a2 = v20;
      if (!v3) {
        goto LABEL_17;
      }
      return result;
    case 2uLL:
      *(void *)&long long v25 = *v2;
      *((void *)&v25 + 1) = v5 & 0x3FFFFFFFFFFFFFFFLL;
      sub_25AC32320();
      long long v13 = v25;
      uint64_t result = sub_25AB68F8C(*(void *)(v25 + 16), *(void *)(v25 + 24), a1, (uint64_t)&v21);
      long long v14 = v21;
      uint64_t v15 = v22;
      uint64_t v16 = v23;
      long long v17 = v24;
      uint64_t *v2 = v13;
      v2[1] = *((void *)&v13 + 1) | 0x8000000000000000;
      if (!v3) {
        goto LABEL_17;
      }
      return result;
    case 3uLL:
      *(void *)((char *)&v25 + 7) = 0;
      *(void *)&long long v25 = 0;
      uint64_t result = (char *)a1(&v21, (char *)&v25, (char *)&v25);
      if (v3) {
        return result;
      }
      long long v14 = v21;
      uint64_t v15 = v22;
      uint64_t v16 = v23;
      long long v17 = v24;
      goto LABEL_17;
    default:
      *(void *)&long long v25 = *v2;
      WORD4(v25) = v5;
      BYTE10(v25) = BYTE2(v5);
      BYTE11(v25) = BYTE3(v5);
      BYTE12(v25) = BYTE4(v5);
      BYTE13(v25) = BYTE5(v5);
      BYTE14(v25) = BYTE6(v5);
      uint64_t result = (char *)a1(&v21, (char *)&v25, (char *)&v25 + BYTE6(v5));
      if (v3)
      {
        unint64_t v9 = DWORD2(v25) | ((unint64_t)BYTE12(v25) << 32) | ((unint64_t)BYTE13(v25) << 40) | ((unint64_t)BYTE14(v25) << 48);
        uint64_t *v2 = v25;
        v2[1] = v9;
      }
      else
      {
        long long v14 = v21;
        uint64_t v15 = v22;
        uint64_t v16 = v23;
        long long v17 = v24;
        unint64_t v18 = DWORD2(v25) | ((unint64_t)BYTE12(v25) << 32) | ((unint64_t)BYTE13(v25) << 40) | ((unint64_t)BYTE14(v25) << 48);
        uint64_t *v2 = v25;
        v2[1] = v18;
LABEL_17:
        *(_OWORD *)a2 = v14;
        *(void *)(a2 + 16) = v15;
        *(void *)(a2 + 24) = v16;
        *(_OWORD *)(a2 + 32) = v17;
      }
      return result;
  }
}

char *sub_25AB689F8(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  void v16[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  unint64_t v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)uint64_t v1 = xmmword_25AC37F30;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_23;
      }
      if (sub_25AC32070() && __OFSUB__((int)v4, sub_25AC320A0())) {
        goto LABEL_24;
      }
      sub_25AC320B0();
      swift_allocObject();
      uint64_t v13 = sub_25AC32050();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      uint64_t result = sub_25AB69058((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      if (v2)
      {
        *unint64_t v5 = v4;
        goto LABEL_19;
      }
      *unint64_t v5 = v4;
      v5[1] = v12;
      break;
    case 2uLL:
      uint64_t v14 = *v1;
      uint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_25AC32320();
      uint64_t result = sub_25AB69058(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = v15 | 0x8000000000000000;
      if (v2)
      {
        *uint64_t v1 = v14;
LABEL_19:
        v5[1] = v12;
      }
      else
      {
        *uint64_t v1 = v14;
        v1[1] = v12;
      }
      break;
    case 3uLL:
      memset(v16, 0, 15);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16);
      if (!v2) {
        return (char *)v14;
      }
      return result;
    default:
      v16[0] = *v1;
      LOWORD(v16[1]) = v3;
      BYTE2(v16[1]) = BYTE2(v3);
      BYTE3(v16[1]) = BYTE3(v3);
      BYTE4(v16[1]) = BYTE4(v3);
      BYTE5(v16[1]) = BYTE5(v3);
      BYTE6(v16[1]) = BYTE6(v3);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16 + BYTE6(v3));
      if (!v2) {
        uint64_t result = (char *)v14;
      }
      unint64_t v8 = LODWORD(v16[1]) | ((unint64_t)BYTE4(v16[1]) << 32) | ((unint64_t)BYTE5(v16[1]) << 40) | ((unint64_t)BYTE6(v16[1]) << 48);
      *uint64_t v1 = v16[0];
      v1[1] = v8;
      return result;
  }
  return result;
}

unsigned char *sub_25AB68CFC@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_25AB69E38(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_25AB69EFC((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_25AB69F78((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

void *sub_25AB68D74(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t result = a1(&v6, a3, a4 - a3);
    if (v4) {
      return result;
    }
    return (void *)v6;
  }
  uint64_t result = a1(&v6, 0, 0);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

double sub_25AB68DE4@<D0>(void (*a1)(long long *__return_ptr, uint64_t, uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (a2)
  {
    a1(&v10, a2, a3 - a2);
    if (v4) {
      return result;
    }
LABEL_5:
    uint64_t v7 = v11;
    uint64_t v8 = v12;
    double result = *(double *)&v10;
    long long v9 = v13;
    *(_OWORD *)a4 = v10;
    *(void *)(a4 + 16) = v7;
    *(void *)(a4 + 24) = v8;
    *(_OWORD *)(a4 + 32) = v9;
    return result;
  }
  a1(&v10, 0, 0);
  if (!v4) {
    goto LABEL_5;
  }
  return result;
}

void *sub_25AB68E68(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    double result = a1(&v6, a3, a4 - a3);
    if (v4) {
      return result;
    }
    return (void *)v6;
  }
  double result = a1(&v6, 0, 0);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

char *sub_25AB68ED8(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  double result = (char *)sub_25AC32070();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v8 = result;
  double result = (char *)sub_25AC320A0();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = sub_25AC32090();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  double result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

char *sub_25AB68F8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *(*a3)(long long *__return_ptr, char *, char *)@<X2>, uint64_t a4@<X8>)
{
  double result = (char *)sub_25AC32070();
  if (!result) {
    goto LABEL_12;
  }
  BOOL v10 = result;
  double result = (char *)sub_25AC320A0();
  uint64_t v11 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v12 = __OFSUB__(a2, a1);
  uint64_t v13 = a2 - a1;
  if (v12)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v14 = sub_25AC32090();
  if (v14 >= v13) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v14;
  }
  double result = (char *)a3(&v19, &v10[v11], &v10[v11 + v15]);
  if (!v4)
  {
    uint64_t v16 = v20;
    uint64_t v17 = v21;
    long long v18 = v22;
    *(_OWORD *)a4 = v19;
    *(void *)(a4 + 16) = v16;
    *(void *)(a4 + 24) = v17;
    *(_OWORD *)(a4 + 32) = v18;
  }
  return result;
}

char *sub_25AB69058(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  double result = (char *)sub_25AC32070();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v8 = result;
  double result = (char *)sub_25AC320A0();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = sub_25AC32090();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  double result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

uint64_t sub_25AB6910C(uint64_t a1, char a2)
{
  unint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v2 = v5;
  uint64_t v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      return result;
    }
    uint64_t v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_25AC356A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t result = MEMORY[0x261151100](v7, v9, a2 & 1, v5);
  uint64_t *v2 = result;
  return result;
}

uint64_t sub_25AB691CC(uint64_t a1, unint64_t a2)
{
  sub_25AB29558(a1, a2);
  sub_25AB69814(a1, a2);
  sub_25AB16958(a1, a2);
  uint64_t v4 = sub_25AC34F00();
  swift_release();
  return v4;
}

uint64_t sub_25AB69244@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25AC34F00();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25AB69280(void *a1, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + 16);
  if (!a2)
  {
    uint64_t v5 = *(void *)(a4 + 16);
    uint64_t v4 = 0;
    goto LABEL_26;
  }
  if (!a3)
  {
    uint64_t v5 = *(void *)(a4 + 16);
    goto LABEL_18;
  }
  if (a3 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (!v4)
  {
LABEL_29:
    uint64_t v5 = 0;
    goto LABEL_26;
  }
  uint64_t v5 = v4 - 1;
  *a2 = *(unsigned char *)(a4 + v4 - 1 + 32);
  if (a3 == 1)
  {
LABEL_18:
    uint64_t v4 = a3;
    goto LABEL_26;
  }
  if (v4 != 1)
  {
    unint64_t v6 = v4 - 2;
    if (v4 - 2 >= (unint64_t)(a3 - 2)) {
      uint64_t v7 = a3 - 2;
    }
    else {
      uint64_t v7 = v4 - 2;
    }
    unint64_t v8 = v7 + 1;
    if (v8 < 0x11) {
      goto LABEL_15;
    }
    uint64_t v9 = (int8x16_t *)(a2 + 1);
    if (v6 >= a3 - 2) {
      unint64_t v6 = a3 - 2;
    }
    if ((unint64_t)v9 >= v4 + a4 + 31 || v4 - v6 + a4 + 30 >= (unint64_t)&a2[v6 + 2])
    {
      uint64_t v11 = v8 & 0xF;
      if ((v8 & 0xF) == 0) {
        uint64_t v11 = 16;
      }
      unint64_t v12 = v8 - v11;
      v5 -= v12;
      a2 += v12;
      uint64_t v10 = v12 + 2;
      uint64_t v13 = (int8x16_t *)(v4 + a4 + 15);
      do
      {
        int8x16_t v14 = *v13--;
        int8x16_t v15 = vrev64q_s8(v14);
        *v9++ = vextq_s8(v15, v15, 8uLL);
        v12 -= 16;
      }
      while (v12);
    }
    else
    {
LABEL_15:
      uint64_t v10 = 2;
    }
    uint64_t v16 = a2 + 1;
    while (1)
    {
      uint64_t v17 = v5 - 1;
      unsigned char *v16 = *(unsigned char *)(a4 + 31 + v5);
      if (a3 == v10) {
        break;
      }
      ++v10;
      ++v16;
      --v5;
      if (!v17) {
        goto LABEL_26;
      }
    }
    --v5;
    goto LABEL_18;
  }
LABEL_26:
  *a1 = a4;
  a1[1] = v5;
  return v4;
}

uint64_t sub_25AB693A8(uint64_t a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t result = sub_25AC32070();
  uint64_t v9 = result;
  if (result)
  {
    uint64_t result = sub_25AC320A0();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = sub_25AC32090();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t v14 = v9 + v13;
  if (v9) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  uint64_t result = (uint64_t)sub_25AB697C0(v9, v15, a4);
  if (v4) {
    return v16;
  }
  return result;
}

uint64_t sub_25AB69458@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, void *a5@<X8>)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    *(_OWORD *)a5 = xmmword_25AC3B300;
  }
  else
  {
    unint64_t v9 = result;
    if ((a4 & 0x2000000000000000) != 0)
    {
      v11[0] = a3;
      v11[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      BOOL v10 = v11;
    }
    else if ((a3 & 0x1000000000000000) != 0)
    {
      BOOL v10 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else
    {
      BOOL v10 = (void *)sub_25AC355D0();
    }
    return sub_25AB69514((uint64_t)v10, v9, a2, a3, a4, a5);
  }
  return result;
}

uint64_t sub_25AB69514@<X0>(uint64_t result@<X0>, unint64_t a2@<X2>, unint64_t a3@<X3>, unint64_t a4@<X4>, unint64_t a5@<X5>, void *a6@<X8>)
{
  unint64_t v9 = a2;
  uint64_t v10 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  unint64_t v15 = a2;
  if (v14 == 4 << v12)
  {
    uint64_t result = sub_25AB56A7C(a2, a4, a5);
    unint64_t v15 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v16 = v15 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v17 = HIBYTE(a5) & 0xF;
  }
  if (v17 < v15 >> 16) {
    goto LABEL_31;
  }
  uint64_t result = sub_25AC34FB0();
  int64_t v16 = result;
  if (v14 == v13)
  {
LABEL_14:
    uint64_t result = sub_25AB56A7C(v9, a4, a5);
    unint64_t v9 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    uint64_t result = sub_25AB56A7C(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    uint64_t result = (a3 >> 16) - (v9 >> 16);
    goto LABEL_21;
  }
  unint64_t v18 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v18 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v18 < v9 >> 16) {
    goto LABEL_29;
  }
  if (v18 < a3 >> 16)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    return result;
  }
  uint64_t result = sub_25AC34FB0();
LABEL_21:
  if (__OFADD__(v16, result))
  {
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v19 = result;
  if (v16 + result < v16)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v10) {
    uint64_t v20 = v10 + v16;
  }
  else {
    uint64_t v20 = 0;
  }
  return sub_25AB682FC(v20, v19, a6);
}

double sub_25AB696C8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *((void *)a3 + 2);
  uint64_t v6 = *((void *)a3 + 3);
  long long v15 = *a3;
  uint64_t v16 = v5;
  uint64_t v17 = v6;
  sub_25AB68DE4((void (*)(long long *__return_ptr, uint64_t, uint64_t))sub_25AB6DEDC, a1, a2, (uint64_t)&v11);
  uint64_t v7 = v12;
  uint64_t v8 = v13;
  double result = *(double *)&v11;
  long long v10 = v14;
  *(_OWORD *)a4 = v11;
  *(void *)(a4 + 16) = v7;
  *(void *)(a4 + 24) = v8;
  *(_OWORD *)(a4 + 32) = v10;
  return result;
}

uint64_t sub_25AB69750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v5 = sub_25AB67A20((unint64_t)v9, a1, a2, *a3, a3[1], a3[2], a3[3]);
  uint64_t v6 = v10;
  long long v7 = v9[1];
  *(_OWORD *)a4 = v9[0];
  *(_OWORD *)(a4 + 16) = v7;
  *(void *)(a4 + 32) = v6;
  *(void *)(a4 + 40) = v5;
  return swift_bridgeObjectRetain();
}

void *sub_25AB697C0(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  if (a1) {
    uint64_t v4 = a2 - a1;
  }
  else {
    uint64_t v4 = 0;
  }
  double result = a3(&v6, a1, v4);
  if (!v3) {
    return (void *)v6;
  }
  return result;
}

void *sub_25AB69814(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_25AC323B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  long long v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)MEMORY[0x263F8EE78];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v9 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v9)
      {
        if (v9 >= 1)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0450);
          uint64_t v8 = (void *)swift_allocObject();
          size_t v12 = _swift_stdlib_malloc_size(v8);
          _OWORD v8[2] = v9;
          v8[3] = 2 * v12 - 64;
        }
        sub_25AB29558(a1, a2);
        uint64_t v13 = sub_25AC32330();
        sub_25AB16958(a1, a2);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if (v13 != v9)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x25AB699C0);
        }
      }
      return v8;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return v8;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_25AB699D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25AC34F00();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25AB69A08@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_25AC35590();
    if ((v3 & 1) == 0)
    {
      uint64_t v4 = result;
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25AB69A94(unint64_t a1, unint64_t a2)
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  unint64_t v2 = a2 >> 62;
  uint64_t v3 = MEMORY[0x263F8EE78];
  unint64_t v4 = a1;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_43;
      }
      uint64_t v5 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (!v5) {
        return v3;
      }
      uint64_t v40 = MEMORY[0x263F8EE78];
      int64_t v8 = v5 & ~(v5 >> 63);
      sub_25AB67C34(0, v8, 0);
      uint64_t v3 = v40;
      uint64_t v33 = (int)v4;
      if (v2)
      {
        if (v2 == 1) {
          uint64_t v9 = (int)v4;
        }
        else {
          uint64_t v9 = *(void *)(v4 + 16);
        }
        if (v5 < 0)
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
        }
      }
      else
      {
        if (v5 < 0) {
          goto LABEL_45;
        }
        uint64_t v9 = 0;
      }
      uint64_t v32 = (uint64_t)v4 >> 32;
      unint64_t v30 = v4 >> 16;
      unint64_t v31 = v4 >> 8;
      unint64_t v28 = HIDWORD(v4);
      unint64_t v29 = v4 >> 24;
      unint64_t v26 = HIWORD(v4);
      unint64_t v27 = v4 >> 40;
      unint64_t v25 = HIBYTE(v4);
      int v35 = v2;
      unint64_t v36 = v4;
      do
      {
        if (!v8)
        {
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        if (v2)
        {
          if (v2 == 1)
          {
            if (v9 < v33 || v9 >= v32) {
              goto LABEL_36;
            }
            uint64_t v10 = sub_25AC32070();
            if (!v10) {
              goto LABEL_46;
            }
            uint64_t v11 = v10;
            uint64_t v12 = sub_25AC320A0();
            uint64_t v13 = v9 - v12;
            if (__OFSUB__(v9, v12)) {
              goto LABEL_39;
            }
          }
          else
          {
            if (v9 < *(void *)(v4 + 16)) {
              goto LABEL_38;
            }
            if (v9 >= *(void *)(v4 + 24)) {
              goto LABEL_40;
            }
            uint64_t v15 = sub_25AC32070();
            if (!v15) {
              goto LABEL_47;
            }
            uint64_t v11 = v15;
            uint64_t v16 = sub_25AC320A0();
            uint64_t v13 = v9 - v16;
            if (__OFSUB__(v9, v16)) {
              goto LABEL_41;
            }
          }
          char v14 = *(unsigned char *)(v11 + v13);
        }
        else
        {
          if (v9 >= BYTE6(a2)) {
            goto LABEL_37;
          }
          v37[0] = v4;
          v37[1] = v31;
          uint64_t v37[2] = v30;
          v37[3] = v29;
          v37[4] = v28;
          v37[5] = v27;
          v37[6] = v26;
          v37[7] = v25;
          int v38 = a2;
          __int16 v39 = WORD2(a2);
          char v14 = v37[v9];
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FDD0);
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = xmmword_25AC37D80;
        *(void *)(v17 + 56) = MEMORY[0x263F8E778];
        *(void *)(v17 + 64) = MEMORY[0x263F8E7C0];
        *(unsigned char *)(v17 + 32) = v14;
        uint64_t v18 = sub_25AC34E50();
        uint64_t v20 = v19;
        uint64_t v40 = v3;
        unint64_t v22 = *(void *)(v3 + 16);
        unint64_t v21 = *(void *)(v3 + 24);
        if (v22 >= v21 >> 1)
        {
          sub_25AB67C34(v21 > 1, v22 + 1, 1);
          uint64_t v3 = v40;
        }
        *(void *)(v3 + 16) = v22 + 1;
        uint64_t v23 = v3 + 16 * v22;
        *(void *)(v23 + 32) = v18;
        *(void *)(v23 + 40) = v20;
        ++v9;
        --v8;
        --v5;
        LODWORD(v2) = v35;
        unint64_t v4 = v36;
      }
      while (v5);
      return v3;
    case 2uLL:
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      uint64_t v5 = v6 - v7;
      if (!__OFSUB__(v6, v7)) {
        goto LABEL_6;
      }
      goto LABEL_44;
    case 3uLL:
      return v3;
    default:
      uint64_t v5 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_25AB69E38(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_25AB69EFC(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_25AC320B0();
  swift_allocObject();
  uint64_t result = sub_25AC32060();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_25AC32350();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_25AB69F78(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_25AC320B0();
  swift_allocObject();
  uint64_t result = sub_25AC32060();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_25AB69FFC(uint64_t a1)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A07F0);
  uint64_t v10 = sub_25AB6DFD0(&qword_26A4A07F8, &qword_26A4A07F0);
  v8[0] = a1;
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t v3 = (unsigned char *)(*v2 + 32);
  unint64_t v4 = &v3[*(void *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_25AB68CFC(v3, v4, &v7);
  uint64_t v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

uint64_t sub_25AB6A0BC(unint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD30);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x263F8EE78];
  if (!(a1 >> 62))
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_25AC356A0();
  uint64_t v5 = result;
  if (!result) {
    goto LABEL_17;
  }
LABEL_3:
  if (v5 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = 0;
    unint64_t v22 = a1 & 0xC000000000000001;
    unint64_t v21 = (void *)*MEMORY[0x263F77AE0];
    uint64_t v20 = (void *)*MEMORY[0x263F77AE8];
    unint64_t v8 = a1;
    do
    {
      if (v22) {
        id v9 = (id)MEMORY[0x2611510F0](v7, a1);
      }
      else {
        id v9 = *(id *)(a1 + 8 * v7 + 32);
      }
      uint64_t v10 = v9;
      char v11 = sub_25AC33080();
      uint64_t v12 = v21;
      if (v11) {
        uint64_t v12 = v20;
      }
      id v13 = v12;
      sub_25AC330A0();
      sub_25AC330B0();
      sub_25AC322E0();
      swift_bridgeObjectRelease();
      char v14 = (void *)sub_25AC34E10();
      swift_bridgeObjectRelease();
      uint64_t v15 = sub_25AC32300();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v4, 1, v15) != 1)
      {
        uint64_t v17 = (void *)sub_25AC32290();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v4, v15);
      }
      id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F77A10]), sel_initWithVasTerminalProtocol_merchantId_vasUrl_vasFilter_, v13, v14, v17, 0);

      id v19 = v18;
      MEMORY[0x261150BA0]();
      if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_25AC350B0();
      }
      ++v7;
      sub_25AC350D0();
      sub_25AC350A0();

      a1 = v8;
    }
    while (v5 != v7);
    swift_bridgeObjectRelease();
    return v23;
  }
  return result;
}

uint64_t sub_25AB6A3A0(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_25AC320B0();
      swift_allocObject();
      sub_25AC32080();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_25AC32350();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_25AB6A440(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_25AC34F40();
    return sub_25AC35010();
  }
  return result;
}

uint64_t sub_25AB6A4DC(uint64_t a1)
{
  uint64_t v155 = *MEMORY[0x263EF8340];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  v133 = (char *)v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  v145 = (char *)v121 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A07B0);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)v121 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25AC329A0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_25AB69FFC((uint64_t)&unk_270881DB0);
  unint64_t v132 = v13;
  v130 = (long long *)a1;
  char v14 = *(void **)(a1 + 40);
  uint64_t v15 = (void *)sub_25AC33040();
  uint64_t v16 = MEMORY[0x261150FA0]();
  uint64_t v18 = v17;
  unsigned int v20 = v19;

  int v150 = v16;
  LOWORD(v151) = WORD2(v16);
  WORD1(v151) = HIWORD(v16);
  HIDWORD(v151) = v18;
  LOWORD(v152) = WORD2(v18);
  unsigned int v21 = HIWORD(v20);
  WORD1(v152) = HIWORD(v18);
  WORD2(v152) = v20;
  unint64_t v22 = v14;
  HIWORD(v152) = v21;
  sub_25AC33050();
  uint64_t v23 = sub_25AC337F0();
  uint64_t v25 = v24;
  if (v23 == sub_25AC337F0() && v25 == v26)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v27 = sub_25AC35870();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0)
    {
      sub_25AC32F70();
      sub_25AC32FC0();
      sub_25AC34030();
      sub_25AC32F60();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {
        sub_25AB18FAC((uint64_t)v8, &qword_26A4A07B0);
        if (qword_26A49F808 != -1) {
          goto LABEL_82;
        }
        goto LABEL_7;
      }
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      v145 = (char *)sub_25AC32980();
      *(void *)&long long v144 = v32;
      sub_25AB16958(v131, v132);
      sub_25AC35430();
      sub_25AC32990();
      uint64_t v33 = sub_25AC32310();
      MEMORY[0x261150F90](&v150, v33, v34, v35);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v131 = (uint64_t)v145;
      unint64_t v132 = v144;
    }
  }
  uint64_t v36 = (uint64_t)v130;
  id v37 = v133;
  if (qword_26A49F808 != -1) {
    goto LABEL_77;
  }
  while (2)
  {
    uint64_t v38 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1D00);
    sub_25AB150E0(v38, (uint64_t)v37);
    uint64_t v39 = sub_25AC345E0();
    uint64_t v127 = *(void *)(v39 - 8);
    if ((*(unsigned int (**)(id, uint64_t, uint64_t))(v127 + 48))(v37, 1, v39) == 1)
    {
      sub_25AB18FAC((uint64_t)v37, &qword_26A49F9A0);
LABEL_59:
      uint64_t v83 = (char *)qword_25AC3B328[(char)sub_25AC33050()];
      unint64_t v84 = sub_25AC32FD0();
      sub_25AB6A0BC(v84);
      swift_bridgeObjectRelease();
      int v85 = v150;
      uint64_t v86 = v151;
      uint64_t v87 = v152;
      uint64_t v88 = sub_25AC32FE0();
      v145 = v83;
      LODWORD(v143) = v85;
      if (v88)
      {
        if (v88 != 1)
        {
          *(void *)v149 = v88;
          sub_25AC358A0();
          __break(1u);
          JUMPOUT(0x25AB6B674);
        }
        unint64_t v90 = 32;
        LODWORD(v144) = 32;
      }
      else
      {
        LODWORD(v144) = 0;
      }
      uint64_t v137 = sub_25AB905EC(2, *(void *)(v36 + 32), v89, v90);
      unint64_t v140 = v91;
      swift_bridgeObjectRetain();
      uint64_t v92 = sub_25AC34040();
      unint64_t v93 = sub_25AB6A440(v92);
      unint64_t v95 = v94;
      unint64_t v97 = v96;
      unint64_t v99 = v98;
      swift_bridgeObjectRelease();
      uint64_t v134 = sub_25AB66F0C(v93, v95, v97, v99);
      v133 = (char *)v100;
      uint64_t v135 = *(void *)v36;
      swift_bridgeObjectRetain();
      uint64_t v142 = sub_25AC34070();
      uint64_t v141 = sub_25AC34020();
      v130 = (long long *)sub_25AC33020();
      sub_25AC32FF0();
      uint64_t v139 = (uint64_t)objc_allocWithZone(MEMORY[0x263F77A00]);
      sub_25AB6DE80();
      uint64_t v138 = sub_25AC35070();
      swift_bridgeObjectRelease();
      uint64_t v101 = v131;
      unint64_t v102 = v132;
      uint64_t v136 = sub_25AC32380();
      unint64_t v103 = v140;
      long long v104 = (void *)sub_25AC32380();
      long long v105 = (void *)sub_25AC32380();
      uint64_t v106 = (void *)sub_25AC34E10();
      swift_bridgeObjectRelease();
      uint64_t v107 = (void *)sub_25AC34E10();
      swift_bridgeObjectRelease();
      long long v108 = (void *)sub_25AC35070();
      swift_bridgeObjectRelease();
      *(_DWORD *)v149 = v143;
      *(void *)&v149[4] = v86;
      *(void *)&v149[12] = v87;
      uint64_t v109 = (void *)v138;
      unint64_t v110 = (void *)v136;
      v145 = (char *)objc_msgSend((id)v139, sel_initWithMode_vasRequests_amount_currencyCode_transactionType_merchantCategoryCode_interfaceDeviceSerial_kernelToken_timeoutReadPay_timeoutReadVas_transactionId_preferredSchemes_, v145, v138, v149, v136, v144, v104, v105, v106, v142, v141, v107, v108);
      sub_25AB16958(v134, (unint64_t)v133);
      sub_25AB16958(v137, v103);
      sub_25AB16958(v101, v102);

      return (uint64_t)v145;
    }
    uint64_t v126 = v39;
    long long v40 = *(_OWORD *)(v36 + 16);
    long long v148 = *(_OWORD *)v36;
    long long v154 = v40;
    uint64_t v41 = v22;
    sub_25AB564C8((uint64_t)&v148);
    sub_25AB564C8((uint64_t)&v154);
    uint64_t v42 = v41;
    sub_25AB564C8((uint64_t)&v148);
    sub_25AB564C8((uint64_t)&v154);
    uint64_t v43 = sub_25AC345C0();
    int v44 = sub_25AC352D0();
    if (!os_log_type_enabled(v43, (os_log_type_t)v44))
    {

      sub_25AB56548((uint64_t)&v148);
      sub_25AB56548((uint64_t)&v154);

      sub_25AB56548((uint64_t)&v148);
      sub_25AB56548((uint64_t)&v154);

LABEL_58:
      (*(void (**)(char *, uint64_t))(v127 + 8))(v133, v126);
      goto LABEL_59;
    }
    int v123 = v44;
    os_log_t v125 = v43;
    long long v45 = (uint8_t *)swift_slowAlloc();
    uint64_t v122 = swift_slowAlloc();
    uint64_t v153 = v122;
    long long v124 = v45;
    *(_DWORD *)long long v45 = 136380675;
    uint64_t v46 = sub_25AC32FF0();
    int64_t v47 = *(void *)(v46 + 16);
    if (!v47)
    {
      swift_bridgeObjectRelease();
      uint64_t v50 = MEMORY[0x263F8EE78];
LABEL_57:
      int v77 = v124;
      uint64_t v78 = MEMORY[0x261150BD0](v50, MEMORY[0x263F8D310]);
      unint64_t v80 = v79;
      swift_bridgeObjectRelease();
      *(void *)v149 = sub_25AB56574(v78, v80, &v153);
      sub_25AC354A0();
      swift_bridgeObjectRelease();
      sub_25AB56548((uint64_t)&v148);
      sub_25AB56548((uint64_t)&v154);

      sub_25AB56548((uint64_t)&v148);
      sub_25AB56548((uint64_t)&v154);

      os_log_t v81 = v125;
      _os_log_impl(&dword_25AB11000, v125, (os_log_type_t)v123, "preferredAIDList: %{private}s", v77, 0xCu);
      uint64_t v82 = v122;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v82, -1, -1);
      MEMORY[0x261151C20](v77, -1, -1);

      goto LABEL_58;
    }
    v121[1] = v22;
    uint64_t v147 = MEMORY[0x263F8EE78];
    uint64_t v48 = v46;
    sub_25AB67C34(0, v47, 0);
    uint64_t v49 = 0;
    uint64_t v50 = v147;
    v121[0] = v48;
    uint64_t v134 = v48 + 32;
    long long v144 = xmmword_25AC37D80;
    id v129 = v42;
    int64_t v128 = v47;
LABEL_16:
    uint64_t v51 = v49;
    uint64_t v52 = v134 + 16 * v49;
    uint64_t v2 = v51 + 1;
    unint64_t v22 = *(void **)v52;
    unint64_t v53 = *(void *)(v52 + 8);
    unint64_t v140 = HIDWORD(*(void *)v52);
    uint64_t v142 = v53 >> 62;
    uint64_t v136 = v50;
    uint64_t v135 = v51 + 1;
    switch(v53 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(v140, v22)) {
          goto LABEL_79;
        }
        uint64_t v36 = (int)v140 - (int)v22;
LABEL_21:
        if (!v36)
        {
LABEL_25:
          sub_25AB29558((uint64_t)v22, v53);
          uint64_t v57 = MEMORY[0x263F8EE78];
          goto LABEL_51;
        }
        sub_25AB29558((uint64_t)v22, v53);
        uint64_t v146 = MEMORY[0x263F8EE78];
        int64_t v56 = v36 & ~(v36 >> 63);
        sub_25AB67C34(0, v56, 0);
        uint64_t v57 = v146;
        uint64_t v143 = (uint64_t)v22;
        uint64_t v139 = (int)v22;
        uint64_t v141 = v53;
        unint64_t v22 = (void *)v142;
        if (!v142)
        {
          if (v36 < 0) {
            goto LABEL_81;
          }
          uint64_t v58 = 0;
          goto LABEL_30;
        }
        if (v142 == 1) {
          uint64_t v58 = v139;
        }
        else {
          uint64_t v58 = *(void *)(v143 + 16);
        }
        if ((v36 & 0x8000000000000000) == 0)
        {
LABEL_30:
          id v37 = (id)(v141 & 0x3FFFFFFFFFFFFFFFLL);
          uint64_t v137 = v143 >> 32;
          uint64_t v138 = BYTE6(v141);
          v145 = (char *)(v141 & 0x3FFFFFFFFFFFFFFFLL);
          while (2)
          {
            if (v56)
            {
              if (v22)
              {
                if (v22 == 1)
                {
                  if (v58 < v139 || v58 >= v137) {
                    goto LABEL_73;
                  }
                  uint64_t v59 = sub_25AC32070();
                  if (!v59)
                  {
                    sub_25AB56548((uint64_t)&v148);
                    sub_25AB56548((uint64_t)&v154);

                    __break(1u);
LABEL_84:
                    sub_25AB56548((uint64_t)&v148);
                    sub_25AB56548((uint64_t)&v154);

                    __break(1u);
                  }
                  uint64_t v2 = v59;
                  uint64_t v60 = sub_25AC320A0();
                  uint64_t v61 = v58 - v60;
                  if (__OFSUB__(v58, v60)) {
                    goto LABEL_75;
                  }
                }
                else
                {
                  if (v58 < *(void *)(v143 + 16)) {
                    goto LABEL_71;
                  }
                  if (v58 >= *(void *)(v143 + 24)) {
                    goto LABEL_74;
                  }
                  uint64_t v63 = sub_25AC32070();
                  if (!v63) {
                    goto LABEL_84;
                  }
                  uint64_t v2 = v63;
                  uint64_t v64 = sub_25AC320A0();
                  uint64_t v61 = v58 - v64;
                  if (__OFSUB__(v58, v64)) {
                    goto LABEL_76;
                  }
                }
                char v62 = *(unsigned char *)(v2 + v61);
                unint64_t v22 = (void *)v142;
              }
              else
              {
                if (v58 >= v138) {
                  goto LABEL_72;
                }
                *(_DWORD *)v149 = v143;
                v149[4] = v140;
                *(_WORD *)&v149[5] = *(_WORD *)((char *)&v143 + 5);
                v149[7] = HIBYTE(v143);
                *(_DWORD *)&v149[8] = v141;
                *(_WORD *)&v149[12] = WORD2(v141);
                char v62 = v149[v58];
              }
              __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FDD0);
              uint64_t v65 = swift_allocObject();
              *(_OWORD *)(v65 + 16) = v144;
              *(void *)(v65 + 56) = MEMORY[0x263F8E778];
              *(void *)(v65 + 64) = MEMORY[0x263F8E7C0];
              *(unsigned char *)(v65 + 32) = v62;
              uint64_t v66 = sub_25AC34E50();
              uint64_t v2 = v67;
              uint64_t v146 = v57;
              unint64_t v69 = *(void *)(v57 + 16);
              unint64_t v68 = *(void *)(v57 + 24);
              if (v69 >= v68 >> 1)
              {
                sub_25AB67C34(v68 > 1, v69 + 1, 1);
                unint64_t v22 = (void *)v142;
                uint64_t v57 = v146;
              }
              *(void *)(v57 + 16) = v69 + 1;
              uint64_t v70 = v57 + 16 * v69;
              *(void *)(v70 + 32) = v66;
              *(void *)(v70 + 40) = v2;
              ++v58;
              --v56;
              --v36;
              id v37 = v145;
              if (v36) {
                continue;
              }
              uint64_t v42 = v129;
              int64_t v47 = v128;
              unint64_t v53 = v141;
              unint64_t v22 = (void *)v143;
LABEL_51:
              *(void *)v149 = v57;
              __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A07C0);
              sub_25AB6DFD0((unint64_t *)&qword_26A4A07C8, &qword_26A4A07C0);
              uint64_t v71 = sub_25AC34DE0();
              uint64_t v73 = v72;
              swift_bridgeObjectRelease();
              sub_25AB16958((uint64_t)v22, v53);
              uint64_t v50 = v136;
              uint64_t v147 = v136;
              unint64_t v75 = *(void *)(v136 + 16);
              unint64_t v74 = *(void *)(v136 + 24);
              if (v75 >= v74 >> 1)
              {
                sub_25AB67C34(v74 > 1, v75 + 1, 1);
                uint64_t v50 = v147;
              }
              *(void *)(v50 + 16) = v75 + 1;
              unint64_t v76 = v50 + 16 * v75;
              *(void *)(v76 + 32) = v71;
              *(void *)(v76 + 40) = v73;
              uint64_t v49 = v135;
              if (v135 == v47)
              {
                swift_bridgeObjectRelease();
                uint64_t v36 = (uint64_t)v130;
                goto LABEL_57;
              }
              goto LABEL_16;
            }
            break;
          }
          __break(1u);
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
LABEL_76:
          __break(1u);
LABEL_77:
          swift_once();
          continue;
        }
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        swift_once();
LABEL_7:
        uint64_t v28 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1D00);
        unint64_t v29 = v145;
        sub_25AB150E0(v28, (uint64_t)v145);
        uint64_t v30 = sub_25AC345E0();
        uint64_t v31 = *(void *)(v30 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) == 1)
        {
          sub_25AB16958(v131, v132);
          sub_25AB18FAC((uint64_t)v29, &qword_26A49F9A0);
        }
        else
        {
          long long v112 = *v130;
          long long v148 = v130[1];
          *(_OWORD *)v149 = v112;
          sub_25AB564C8((uint64_t)v149);
          sub_25AB564C8((uint64_t)&v148);
          long long v113 = v22;
          sub_25AB564C8((uint64_t)v149);
          sub_25AB564C8((uint64_t)&v148);
          long long v114 = v113;
          long long v115 = sub_25AC345C0();
          os_log_type_t v116 = sub_25AC352C0();
          if (os_log_type_enabled(v115, v116))
          {
            long long v117 = (uint8_t *)swift_slowAlloc();
            *(void *)&long long v144 = swift_slowAlloc();
            *(void *)&long long v154 = v144;
            *(_DWORD *)long long v117 = 136315138;
            uint64_t v118 = sub_25AC32FC0();
            uint64_t v153 = sub_25AB56574(v118, v119, (uint64_t *)&v154);
            sub_25AC354A0();
            swift_bridgeObjectRelease();
            sub_25AB56548((uint64_t)v149);
            sub_25AB56548((uint64_t)&v148);

            sub_25AB56548((uint64_t)v149);
            sub_25AB56548((uint64_t)&v148);

            _os_log_impl(&dword_25AB11000, v115, v116, "Invalid currency code [ %s ], could not load currency definition", v117, 0xCu);
            uint64_t v120 = v144;
            swift_arrayDestroy();
            MEMORY[0x261151C20](v120, -1, -1);
            MEMORY[0x261151C20](v117, -1, -1);
            sub_25AB16958(v131, v132);
          }
          else
          {
            sub_25AB16958(v131, v132);

            sub_25AB56548((uint64_t)v149);
            sub_25AB56548((uint64_t)&v148);

            sub_25AB56548((uint64_t)v149);
            sub_25AB56548((uint64_t)&v148);
          }
          (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v30);
        }
        return 1;
      case 2uLL:
        uint64_t v55 = v22[2];
        uint64_t v54 = v22[3];
        uint64_t v36 = v54 - v55;
        if (!__OFSUB__(v54, v55)) {
          goto LABEL_21;
        }
        goto LABEL_80;
      case 3uLL:
        goto LABEL_25;
      default:
        uint64_t v36 = BYTE6(v53);
        goto LABEL_21;
    }
  }
}

uint64_t sub_25AB6B684(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_25AC356A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v5 != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v19 = MEMORY[0x263F8EE78];
  sub_25AB6910C(v5, 0);
  sub_25AC350A0();
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_25AC356A0();
    uint64_t v6 = result;
    if (!result)
    {
LABEL_23:
      swift_bridgeObjectRelease();
      return v19;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v6) {
      goto LABEL_23;
    }
  }
  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (!v5)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v6 - 1 < v5)
  {
    uint64_t v8 = 0;
    unint64_t v17 = v3 & 0xC000000000000001;
    uint64_t v9 = a2 + 40;
    unint64_t v18 = v3;
    do
    {
      if (v17) {
        id v10 = (id)MEMORY[0x2611510F0](v8, v3);
      }
      else {
        id v10 = *(id *)(v3 + 8 * v8 + 32);
      }
      uint64_t v11 = v10;
      id v12 = objc_msgSend(v10, sel_vasData, v17);
      if (v12)
      {
        unint64_t v13 = v12;
        sub_25AC323A0();
      }
      id v14 = objc_msgSend(v11, sel_mobileToken);
      if (v14)
      {
        uint64_t v15 = v14;
        sub_25AC323A0();
      }
      swift_bridgeObjectRetain();
      objc_msgSend(v11, sel_status);
      id v16 = objc_allocWithZone((Class)sub_25AC32C80());
      sub_25AC32C60();
      MEMORY[0x261150BA0]();
      if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_25AC350B0();
      }
      ++v8;
      sub_25AC350D0();
      sub_25AC350A0();

      v9 += 16;
      unint64_t v3 = v18;
    }
    while (v6 != v8);
    goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_25AB6B91C(int a1)
{
  HIDWORD(v2) = a1;
  LODWORD(v2) = (a1 << 24) + 0x10000000;
  unsigned __int8 v1 = v2 >> 28;
  if (v1 < 9u) {
    return byte_25AC3B348[(char)v1];
  }
  type metadata accessor for SPRTransactionOutcomeStatus(0);
  uint64_t result = sub_25AC358A0();
  __break(1u);
  return result;
}

uint64_t sub_25AB6B990(char a1)
{
  LOBYTE(v1) = a1;
  unint64_t v2 = (uint64_t (*)(void))sub_25AC34000();
  char v3 = v2();
  swift_release();
  if ((v3 & 1) != 0
    && (id v4 = objc_msgSend(self, sel_standardUserDefaults),
        unint64_t v5 = (void *)sub_25AC34E10(),
        id v6 = objc_msgSend(v4, sel_stringForKey_, v5),
        v4,
        v5,
        v6))
  {
    uint64_t v7 = sub_25AC34E40();
    unint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    unint64_t v9 = 0xE000000000000000;
  }
  uint64_t v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  if (v10)
  {
    uint64_t v11 = sub_25AC33280();
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = 0;
      while (1)
      {
        uint64_t v1 = *(void *)(v11 + 8 * v13 + 32);
        if (sub_25AC33270() == v7 && v14 == v9)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          goto LABEL_27;
        }
        char v16 = sub_25AC35870();
        swift_bridgeObjectRelease();
        if (v16) {
          break;
        }
        if (v12 == ++v13)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return 0;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_27:
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    return v1;
  }
  swift_bridgeObjectRelease();
  if (v1 <= 0x1Fu)
  {
    if (!(_BYTE)v1) {
      return v1;
    }
    if (v1 == 16) {
      return 0;
    }
  }
  else
  {
    switch(v1)
    {
      case 0x20u:
        return 1;
      case 0x40u:
        return 2;
      case 0x80u:
        return 3;
    }
  }
  type metadata accessor for SPRCardEffectiveState(0);
  uint64_t result = sub_25AC358A0();
  __break(1u);
  return result;
}

uint64_t sub_25AB6BBF8(unsigned __int8 a1)
{
  unint64_t v2 = (uint64_t (*)(void))sub_25AC34000();
  char v3 = v2();
  swift_release();
  if ((v3 & 1) != 0
    && (id v4 = objc_msgSend(self, sel_standardUserDefaults),
        unint64_t v5 = (void *)sub_25AC34E10(),
        id v6 = objc_msgSend(v4, sel_stringForKey_, v5),
        v4,
        v5,
        v6))
  {
    uint64_t v7 = sub_25AC34E40();
    unint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    unint64_t v9 = 0xE000000000000000;
  }
  uint64_t v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  if (v10)
  {
    uint64_t v11 = sub_25AC332A0();
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = 0;
      while (1)
      {
        uint64_t v14 = *(void *)(v11 + 8 * v13 + 32);
        if (sub_25AC33290() == v7 && v15 == v9)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          goto LABEL_23;
        }
        char v17 = sub_25AC35870();
        swift_bridgeObjectRelease();
        if (v17) {
          break;
        }
        if (v12 == ++v13)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return 0;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_23:
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = a1;
    switch(a1)
    {
      case 0u:
        return v14;
      case 1u:
        uint64_t v14 = 0;
        break;
      case 2u:
        uint64_t v14 = 1;
        break;
      case 4u:
        uint64_t v14 = 2;
        break;
      case 8u:
        uint64_t v14 = 3;
        break;
      default:
        type metadata accessor for SPRCardExpirationState(0);
        sub_25AC358A0();
        __break(1u);
        JUMPOUT(0x25AB6BE60);
    }
  }
  return v14;
}

id sub_25AB6BE84@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v179 = a2;
  uint64_t v194 = *MEMORY[0x263EF8340];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (char *)&v145 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v10 = objc_msgSend(a1, sel_pinRequired);
  uint64_t v11 = (uint64_t (*)(void))sub_25AC34000();
  char v12 = v11();
  swift_release();
  if (v12)
  {
    id v13 = objc_msgSend(self, sel_standardUserDefaults);
    uint64_t v14 = (void *)sub_25AC34E10();
    unsigned int v15 = objc_msgSend(v13, sel_BOOLForKey_, v14);

    v10 |= v15;
  }
  unsigned int v180 = v10;
  id v16 = objc_msgSend(a1, sel_languagePreference);
  uint64_t v17 = sub_25AC323A0();
  unint64_t v19 = v18;

  uint64_t v178 = a3;
  switch(v19 >> 62)
  {
    case 1uLL:
      if (v17 >> 32 < (int)v17) {
        __break(1u);
      }
      unint64_t v22 = v9;
      swift_retain();
      uint64_t v25 = sub_25AB693A8((int)v17, v17 >> 32, v19 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_25AB699D0);
      unint64_t v21 = v27;
      uint64_t v181 = 0;
      sub_25AB16958(v17, v19);
      if (v21) {
        goto LABEL_6;
      }
      goto LABEL_10;
    case 2uLL:
      unint64_t v22 = v9;
      uint64_t v23 = *(void *)(v17 + 16);
      uint64_t v24 = *(void *)(v17 + 24);
      swift_retain();
      swift_retain();
      uint64_t v25 = sub_25AB693A8(v23, v24, v19 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_25AB699D0);
      unint64_t v21 = v26;
      uint64_t v181 = 0;
      swift_release();
      swift_release();
      if (v21)
      {
LABEL_6:
        uint64_t v177 = v25;
        sub_25AB16958(v17, v19);
        unint64_t v9 = v22;
        goto LABEL_16;
      }
LABEL_10:
      uint64_t v189 = v17;
      unint64_t v190 = v19;
      sub_25AB29558(v17, v19);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0838);
      if (swift_dynamicCast())
      {
        sub_25AB47E04(v187, (uint64_t)&v191);
        __swift_project_boxed_opaque_existential_1(&v191, v193);
        if (sub_25AC35700())
        {
          __swift_project_boxed_opaque_existential_1(&v191, v193);
          uint64_t v28 = v181;
          sub_25AC356F0();
          uint64_t v181 = v28;
          sub_25AB16958(v17, v19);
          unint64_t v21 = *((void *)&v187[0] + 1);
          uint64_t v177 = *(void *)&v187[0];
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v191);
          unint64_t v9 = v22;
          goto LABEL_16;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v191);
      }
      else
      {
        uint64_t v188 = 0;
        memset(v187, 0, sizeof(v187));
        sub_25AB18FAC((uint64_t)v187, &qword_26A4A0840);
      }
      unint64_t v9 = v22;
      uint64_t v177 = sub_25AB691CC(v17, v19);
      unint64_t v21 = v29;
      sub_25AB16958(v17, v19);
LABEL_16:
      a3 = v178;
LABEL_17:
      uint64_t v30 = (uint64_t (*)(void))sub_25AC34000();
      char v31 = v30();
      swift_release();
      if ((v31 & 1) != 0
        && (id v32 = objc_msgSend(self, sel_standardUserDefaults),
            uint64_t v33 = (void *)sub_25AC34E10(),
            id v34 = objc_msgSend(v32, sel_stringForKey_, v33),
            v32,
            v33,
            v34))
      {
        uint64_t v35 = sub_25AC34E40();
        unint64_t v37 = v36;
      }
      else
      {
        uint64_t v35 = 0;
        unint64_t v37 = 0xE000000000000000;
      }
      uint64_t v38 = HIBYTE(v37) & 0xF;
      uint64_t v171 = v35;
      if ((v37 & 0x2000000000000000) == 0) {
        uint64_t v38 = v35 & 0xFFFFFFFFFFFFLL;
      }
      uint64_t v170 = v38;
      unint64_t v176 = v21;
      swift_bridgeObjectRelease();
      if (qword_26A49F800 != -1) {
        swift_once();
      }
      uint64_t v39 = __swift_project_value_buffer(v7, (uint64_t)qword_26A4A1CE8);
      sub_25AB150E0(v39, (uint64_t)v9);
      uint64_t v40 = sub_25AC345E0();
      uint64_t v41 = *(void *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v9, 1, v40) == 1)
      {
        sub_25AB18FAC((uint64_t)v9, &qword_26A49F9A0);
      }
      else
      {
        id v42 = a1;
        uint64_t v43 = sub_25AC345C0();
        os_log_type_t v44 = sub_25AC352D0();
        int v45 = v44;
        if (os_log_type_enabled(v43, v44))
        {
          os_log_t v173 = v43;
          LODWORD(v174) = v45;
          uint64_t v46 = (uint8_t *)swift_slowAlloc();
          uint64_t v172 = swift_slowAlloc();
          uint64_t v191 = v172;
          v169 = v46;
          *(_DWORD *)uint64_t v46 = 136380675;
          v168 = v46 + 12;
          uint64_t v167 = (uint64_t)(v46 + 4);
          id v47 = objc_msgSend(v42, sel_transactionResultData);
          uint64_t v48 = sub_25AC323A0();
          uint64_t v165 = v48;
          unint64_t v50 = v49;
          unint64_t v166 = v49;

          unint64_t v51 = v48;
          uint64_t v52 = v181;
          uint64_t v53 = sub_25AB69A94(v51, v50);
          uint64_t v181 = v52;
          *(void *)&v187[0] = v53;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A07C0);
          v175 = v9;
          sub_25AB6DFD0((unint64_t *)&qword_26A4A07C8, &qword_26A4A07C0);
          uint64_t v54 = sub_25AC34DE0();
          unint64_t v56 = v55;
          swift_bridgeObjectRelease();
          sub_25AB16958(v165, v166);
          *(void *)&v187[0] = sub_25AB56574(v54, v56, &v191);
          sub_25AC354A0();

          unint64_t v9 = v175;
          swift_bridgeObjectRelease();
          uint64_t v43 = v173;
          uint64_t v57 = v169;
          _os_log_impl(&dword_25AB11000, v173, (os_log_type_t)v174, "GeneralCardData: %{private}s", v169, 0xCu);
          uint64_t v58 = v172;
          swift_arrayDestroy();
          MEMORY[0x261151C20](v58, -1, -1);
          MEMORY[0x261151C20](v57, -1, -1);
        }
        else
        {
        }
        (*(void (**)(char *, uint64_t))(v41 + 8))(v9, v40);
        a3 = v178;
      }
      id v59 = objc_msgSend(a1, sel_network);
      uint64_t v60 = sub_25AC34E40();
      unint64_t v62 = v61;

      swift_bridgeObjectRelease();
      uint64_t v63 = HIBYTE(v62) & 0xF;
      if ((v62 & 0x2000000000000000) == 0) {
        uint64_t v63 = v60 & 0xFFFFFFFFFFFFLL;
      }
      unint64_t v64 = v176;
      if (v63)
      {
        id v65 = objc_msgSend(a1, sel_network);
        uint64_t v66 = sub_25AC34E40();
        uint64_t v68 = v67;
      }
      else
      {
        uint64_t v66 = sub_25AC340A0();
        uint64_t v68 = v69;
      }
      uint64_t v70 = v177;
      id v71 = objc_msgSend(a1, sel_transactionId);
      os_log_t v173 = (os_log_t)sub_25AC34E40();
      uint64_t v172 = v72;

      int v73 = objc_msgSend(a1, sel_cvmType);
      char v74 = v73;
      v175 = (char *)v66;
      uint64_t v174 = v68;
      if (v73 > 47)
      {
        switch(v73)
        {
          case 48:
            int v75 = 2;
            goto LABEL_49;
          case 240:
            int v75 = 4;
            goto LABEL_49;
          case 255:
            int v75 = 5;
            goto LABEL_49;
        }
LABEL_57:
        type metadata accessor for SPRTransactionCVMType(0);
        LOBYTE(v191) = v74;
        sub_25AC358A0();
        __break(1u);
        JUMPOUT(0x25AB6CFC8);
      }
      if (!v73)
      {
        LODWORD(v177) = 0;
        goto LABEL_50;
      }
      if (v73 != 16)
      {
        if (v73 == 32)
        {
          int v75 = 3;
          goto LABEL_49;
        }
        goto LABEL_57;
      }
      int v75 = 1;
LABEL_49:
      LODWORD(v177) = v75;
LABEL_50:
      if (v170) {
        unint64_t v76 = v37;
      }
      else {
        unint64_t v76 = v64;
      }
      unint64_t v176 = v76;
      uint64_t v77 = v171;
      if (!v170) {
        uint64_t v77 = v70;
      }
      uint64_t v171 = v77;
      id v78 = objc_msgSend(a1, sel_cvmResult);
      uint64_t v79 = sub_25AC323A0();
      unint64_t v81 = v80;

      uint64_t v170 = sub_25AC32390();
      v169 = v82;
      sub_25AB16958(v79, v81);
      LODWORD(v168) = sub_25AB6B91C((int)objc_msgSend(a1, sel_outcomeStatus));
      id v83 = objc_msgSend(a1, sel_transactionCipherBlob);
      uint64_t v84 = sub_25AC323A0();
      unint64_t v86 = v85;

      uint64_t v167 = sub_25AC32390();
      unint64_t v166 = v87;
      sub_25AB16958(v84, v86);
      id v88 = objc_msgSend(a1, sel_transactionKeyBlob);
      uint64_t v89 = sub_25AC323A0();
      unint64_t v91 = v90;

      uint64_t v165 = sub_25AC32390();
      uint64_t v164 = v92;
      sub_25AB16958(v89, v91);
      id v93 = objc_msgSend(a1, sel_transactionResultData);
      uint64_t v94 = sub_25AC323A0();
      unint64_t v96 = v95;

      uint64_t v163 = sub_25AC32390();
      uint64_t v162 = v97;
      sub_25AB16958(v94, v96);
      id v98 = objc_msgSend(a1, sel_kernelIdentityKeyAttestation);
      uint64_t v99 = sub_25AC323A0();
      unint64_t v101 = v100;

      uint64_t v161 = sub_25AC32390();
      uint64_t v160 = v102;
      sub_25AB16958(v99, v101);
      id v103 = objc_msgSend(a1, sel_ecdsaCertificate);
      uint64_t v104 = sub_25AC323A0();
      unint64_t v106 = v105;

      uint64_t v191 = sub_25AB69A94(v104, v106);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A07C0);
      sub_25AB6DFD0((unint64_t *)&qword_26A4A07C8, &qword_26A4A07C0);
      uint64_t v181 = sub_25AC34DE0();
      uint64_t v159 = v107;
      swift_bridgeObjectRelease();
      sub_25AB16958(v104, v106);
      id v108 = objc_msgSend(a1, sel_kekId);
      uint64_t v158 = sub_25AC34E40();
      uint64_t v157 = v109;

      unint64_t v110 = (void *)sub_25AC33040();
      id v111 = objc_msgSend(v110, sel_stringValue);

      uint64_t v156 = sub_25AC34E40();
      uint64_t v155 = v112;

      uint64_t v179 = sub_25AC32FC0();
      uint64_t v154 = v113;
      unsigned int v153 = objc_msgSend(a1, sel_isPinSupported);
      unsigned int v152 = objc_msgSend(a1, sel_isPINBypassEnabled);
      unsigned int v151 = objc_msgSend(a1, sel_isPINBypassAllowed);
      unsigned int v150 = objc_msgSend(a1, sel_forFallback);
      id v114 = objc_msgSend(a1, sel_fallbackAmount);
      uint64_t v149 = sub_25AC34E40();
      uint64_t v148 = v115;

      swift_bridgeObjectRetain();
      unsigned int v147 = objc_msgSend(a1, sel_switchInterfaceOrNoCVMSuccess);
      id v116 = objc_msgSend(a1, sel_fingerprint);
      uint64_t v117 = sub_25AC323A0();
      unint64_t v119 = v118;

      uint64_t v146 = sub_25AC32390();
      uint64_t v145 = v120;
      sub_25AB16958(v117, v119);
      uint64_t v121 = sub_25AB6B990((char)objc_msgSend(a1, sel_cardEffectiveState));
      LOBYTE(v106) = v122;
      uint64_t v123 = sub_25AB6BBF8(objc_msgSend(a1, sel_cardExpirationState));
      LOBYTE(v111) = v124;
      id v125 = objc_msgSend(a1, sel_payAppType);
      uint64_t v126 = sub_25AC34E40();
      uint64_t v128 = v127;

      id result = objc_msgSend(a1, sel_isSAF);
      uint64_t v130 = v172;
      *(void *)a4 = v173;
      *(void *)(a4 + 8) = v130;
      uint64_t v131 = v174;
      *(void *)(a4 + 16) = v175;
      *(void *)(a4 + 24) = v131;
      *(unsigned char *)(a4 + 32) = v177;
      unint64_t v132 = v169;
      *(void *)(a4 + 40) = v170;
      *(void *)(a4 + 48) = v132;
      *(unsigned char *)(a4 + 56) = (_BYTE)v168;
      unint64_t v133 = v166;
      *(void *)(a4 + 64) = v167;
      *(void *)(a4 + 72) = v133;
      uint64_t v134 = v164;
      *(void *)(a4 + 80) = v165;
      *(void *)(a4 + 88) = v134;
      uint64_t v135 = v162;
      *(void *)(a4 + 96) = v163;
      *(void *)(a4 + 104) = v135;
      char v183 = v106 & 1;
      char v182 = v111 & 1;
      uint64_t v136 = v160;
      *(void *)(a4 + 112) = v161;
      *(void *)(a4 + 120) = v136;
      uint64_t v137 = v159;
      *(void *)(a4 + 128) = v181;
      *(void *)(a4 + 136) = v137;
      uint64_t v138 = v157;
      *(void *)(a4 + 144) = v158;
      *(void *)(a4 + 152) = v138;
      uint64_t v139 = v155;
      *(void *)(a4 + 160) = v156;
      *(void *)(a4 + 168) = v139;
      uint64_t v140 = v154;
      *(void *)(a4 + 176) = v179;
      *(void *)(a4 + 184) = v140;
      *(unsigned char *)(a4 + 192) = v180;
      *(unsigned char *)(a4 + 193) = v153;
      *(unsigned char *)(a4 + 194) = v152;
      *(unsigned char *)(a4 + 195) = v151;
      *(unsigned char *)(a4 + 196) = v150;
      *(unsigned char *)(a4 + 199) = v186;
      *(_WORD *)(a4 + 197) = v185;
      uint64_t v141 = v148;
      *(void *)(a4 + 200) = v149;
      *(void *)(a4 + 208) = v141;
      *(void *)(a4 + 216) = 0;
      *(void *)(a4 + 224) = 0;
      *(unsigned char *)(a4 + 232) = -4;
      *(_DWORD *)(a4 + 236) = *(_DWORD *)((char *)&v191 + 3);
      *(_DWORD *)(a4 + 233) = v191;
      uint64_t v142 = v171;
      *(void *)(a4 + 240) = a3;
      *(void *)(a4 + 248) = v142;
      *(void *)(a4 + 256) = v176;
      *(unsigned char *)(a4 + 264) = v147;
      *(_DWORD *)(a4 + 268) = *(_DWORD *)((char *)v187 + 3);
      *(_DWORD *)(a4 + 265) = v187[0];
      uint64_t v143 = v145;
      *(void *)(a4 + 272) = v146;
      *(void *)(a4 + 280) = v143;
      *(void *)(a4 + 288) = v121;
      *(unsigned char *)(a4 + 296) = v183;
      *(_DWORD *)(a4 + 300) = *(_DWORD *)((char *)&v189 + 3);
      *(_DWORD *)(a4 + 297) = v189;
      *(void *)(a4 + 304) = v123;
      *(unsigned char *)(a4 + 312) = v182;
      int v144 = *(_DWORD *)v184;
      *(_DWORD *)(a4 + 316) = *(_DWORD *)&v184[3];
      *(_DWORD *)(a4 + 313) = v144;
      *(void *)(a4 + 320) = v126;
      *(void *)(a4 + 328) = v128;
      *(unsigned char *)(a4 + 336) = (_BYTE)result;
      return result;
    case 3uLL:
      *(void *)((char *)v187 + 6) = 0;
      *(void *)&v187[0] = 0;
      sub_25AB699D0(&v191);
      uint64_t v181 = 0;
      sub_25AB16958(v17, v19);
      unint64_t v21 = v192;
      uint64_t v177 = v191;
      goto LABEL_17;
    default:
      uint64_t v191 = v17;
      LOWORD(v192) = v19;
      BYTE2(v192) = BYTE2(v19);
      BYTE3(v192) = BYTE3(v19);
      BYTE4(v192) = BYTE4(v19);
      BYTE5(v192) = BYTE5(v19);
      uint64_t v177 = sub_25AC34F00();
      unint64_t v21 = v20;
      sub_25AB16958(v17, v19);
      uint64_t v181 = 0;
      goto LABEL_17;
  }
}

uint64_t sub_25AB6CFD8(uint64_t a1)
{
  uint64_t v2 = a1 - 4000;
  uint64_t result = 1;
  switch(v2)
  {
    case 0:
    case 3:
    case 4:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 23:
    case 24:
    case 28:
    case 29:
    case 31:
    case 32:
    case 34:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
      return a1;
    case 1:
    case 33:
      return 0;
    case 2:
      return result;
    case 5:
      return 6;
    case 6:
    case 30:
    case 35:
    case 46:
      return 10;
    case 13:
      return 2;
    case 21:
      return 8;
    case 22:
      return 9;
    case 25:
      return 3;
    case 26:
      return 5;
    case 27:
      return 7;
    case 36:
      return 4;
    case 37:
    case 38:
    case 39:
      return 2;
    default:
      if (a1 == 4999) {
        return 10;
      }
      else {
        return a1;
      }
  }
}

uint64_t sub_25AB6D17C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  if (a3)
  {
    id v5 = a3;
    swift_bridgeObjectRetain();
    sub_25AC34F60();
    type metadata accessor for ConfigurationError(0);
    sub_25AB6E104(&qword_26A49FB20, type metadata accessor for ConfigurationError);
    sub_25AC32190();
    sub_25AC35850();
    sub_25AC34F60();
    swift_bridgeObjectRelease();
    sub_25AC34F60();

    uint64_t v4 = a1;
    uint64_t v3 = a2;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FF48);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25AC37D80;
  uint64_t v7 = (objc_class *)sub_25AC325C0();
  *(void *)(inited + 32) = sub_25AC32590();
  *(void *)(inited + 40) = v8;
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v4;
  *(void *)(inited + 56) = v3;
  sub_25AB714E8(inited);
  id v9 = objc_allocWithZone(v7);
  return sub_25AC325D0();
}

uint64_t sub_25AB6D2F4(void *a1)
{
  *(void *)&long long v18 = a1;
  type metadata accessor for ConfigurationError(0);
  sub_25AB6E104(&qword_26A49FB20, type metadata accessor for ConfigurationError);
  sub_25AC32190();
  switch(v20)
  {
    case 2000:
    case 2004:
    case 2019:
    case 2021:
    case 2022:
    case 2028:
    case 2035:
    case 2036:
    case 2037:
      id v10 = objc_allocWithZone((Class)sub_25AC325C0());
      return sub_25AC325D0();
    case 2007:
      uint64_t v2 = sub_25AC32AC0();
      goto LABEL_30;
    case 2008:
      uint64_t v2 = sub_25AC32B00();
      goto LABEL_30;
    case 2009:
      uint64_t v2 = sub_25AC32BC0();
      goto LABEL_30;
    case 2010:
      uint64_t v2 = sub_25AC32BD0();
      goto LABEL_30;
    case 2011:
      uint64_t v2 = sub_25AC32B70();
      goto LABEL_30;
    case 2012:
      uint64_t v2 = sub_25AC32B50();
      goto LABEL_30;
    case 2015:
      uint64_t v2 = sub_25AC32BF0();
      goto LABEL_30;
    case 2016:
      uint64_t v2 = sub_25AC32A30();
      goto LABEL_30;
    case 2017:
      uint64_t v2 = sub_25AC32B90();
      goto LABEL_30;
    case 2018:
      uint64_t v17 = a1;
      uint64_t v4 = sub_25AC321B0();
      id v5 = (objc_class *)sub_25AC325C0();
      uint64_t v6 = sub_25AC325A0();
      if (*(void *)(v4 + 16) && (unint64_t v8 = sub_25AB8D62C(v6, v7), (v9 & 1) != 0))
      {
        sub_25AB18F50(*(void *)(v4 + 56) + 32 * v8, (uint64_t)&v18);
      }
      else
      {
        long long v18 = 0u;
        long long v19 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v19 + 1))
      {
        uint64_t v13 = MEMORY[0x263F8D538];
        if (swift_dynamicCast())
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FF48);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_25AC37D80;
          *(void *)(inited + 32) = sub_25AC325A0();
          *(void *)(inited + 40) = v15;
          *(void *)(inited + 72) = v13;
          *(void *)(inited + 48) = v17;
          sub_25AB714E8(inited);
        }
      }
      else
      {
        sub_25AB18FAC((uint64_t)&v18, &qword_26A49FD00);
      }
      id v16 = objc_allocWithZone(v5);
      return sub_25AC325D0();
    case 2020:
      uint64_t v2 = sub_25AC32B20();
      goto LABEL_30;
    case 2023:
      uint64_t v2 = sub_25AC32A90();
      goto LABEL_30;
    case 2024:
      uint64_t v2 = sub_25AC32BB0();
      goto LABEL_30;
    case 2025:
      uint64_t v2 = sub_25AC32BA0();
      goto LABEL_30;
    case 2026:
      uint64_t v2 = sub_25AC32AB0();
      goto LABEL_30;
    case 2027:
      uint64_t v2 = sub_25AC32AA0();
      goto LABEL_30;
    case 2029:
      uint64_t v2 = sub_25AC32AD0();
      goto LABEL_30;
    case 2030:
      uint64_t v2 = sub_25AC32B30();
      goto LABEL_30;
    case 2031:
      uint64_t v2 = sub_25AC32B10();
      goto LABEL_30;
    case 2032:
      uint64_t v2 = sub_25AC32AF0();
      goto LABEL_30;
    case 2033:
      uint64_t v2 = sub_25AC32B60();
      goto LABEL_30;
    case 2038:
      uint64_t v2 = sub_25AC32B40();
      goto LABEL_30;
    case 2039:
      uint64_t v2 = sub_25AC32AE0();
      goto LABEL_30;
    default:
      uint64_t v2 = sub_25AC32A80();
LABEL_30:
      uint64_t v11 = sub_25AB6D17C(v2, v3, a1);
      swift_bridgeObjectRelease();
      return v11;
  }
}

uint64_t sub_25AB6D704(void *a1)
{
  id v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A00C0);
  type metadata accessor for ConfigurationError(0);
  if (swift_dynamicCast())
  {
    sub_25AB6E104(&qword_26A49FB20, type metadata accessor for ConfigurationError);
    sub_25AC32190();
    if (a1 == (void *)2031 || (sub_25AC32190(), a1 == (void *)2022) || (sub_25AC32190(), a1 == (void *)2036))
    {
      sub_25AC32F50();
      swift_allocObject();
      sub_25AC32F30();
      sub_25AC32F40();
      swift_release();
    }
    uint64_t v2 = sub_25AB6D2F4(v11);
  }
  else
  {
    uint64_t v3 = sub_25AC32B80();
    uint64_t v5 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FF48);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25AC37D80;
    uint64_t v7 = (objc_class *)sub_25AC325C0();
    swift_bridgeObjectRetain();
    *(void *)(inited + 32) = sub_25AC32590();
    *(void *)(inited + 40) = v8;
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = v3;
    *(void *)(inited + 56) = v5;
    sub_25AB714E8(inited);
    id v9 = objc_allocWithZone(v7);
    uint64_t v2 = sub_25AC325D0();
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_25AB6D8E8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v33 - v6;
  unint64_t v37 = a1;
  id v8 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A00C0);
  if (swift_dynamicCast()) {
    return v36;
  }
  uint64_t v36 = (uint64_t)a1;
  id v10 = a1;
  type metadata accessor for ReadError(0);
  if (swift_dynamicCast())
  {
    uint64_t v11 = v37;
    if (qword_26A49F808 != -1) {
      swift_once();
    }
    uint64_t v12 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1D00);
    sub_25AB150E0(v12, (uint64_t)v7);
    uint64_t v13 = sub_25AC345E0();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v7, 1, v13) == 1)
    {
      sub_25AB18FAC((uint64_t)v7, &qword_26A49F9A0);
    }
    else
    {
      id v18 = v11;
      long long v19 = sub_25AC345C0();
      os_log_type_t v20 = sub_25AC352C0();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v35 = v19;
        unint64_t v21 = (uint8_t *)swift_slowAlloc();
        id v34 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v21 = 138412290;
        uint64_t v33 = v21 + 4;
        id v22 = v18;
        uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v36 = v23;
        sub_25AC354A0();
        uint64_t v24 = v34;
        void *v34 = v23;
        long long v19 = v35;

        _os_log_impl(&dword_25AB11000, v19, v20, "Mapping SPR read error: [ %@ ]", v21, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A8);
        swift_arrayDestroy();
        MEMORY[0x261151C20](v24, -1, -1);
        MEMORY[0x261151C20](v21, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v13);
    }
    unint64_t v37 = v11;
    sub_25AB6E104(&qword_26A49FBE8, type metadata accessor for ReadError);
    sub_25AC32190();

    return sub_25AB6CFD8(v36);
  }
  else
  {
    if (qword_26A49F808 != -1) {
      swift_once();
    }
    uint64_t v15 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1D00);
    sub_25AB150E0(v15, (uint64_t)v5);
    uint64_t v16 = sub_25AC345E0();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v5, 1, v16) == 1)
    {
      sub_25AB18FAC((uint64_t)v5, &qword_26A49F9A0);
    }
    else
    {
      id v25 = a1;
      id v26 = a1;
      unint64_t v27 = sub_25AC345C0();
      os_log_type_t v28 = sub_25AC352C0();
      if (os_log_type_enabled(v27, v28))
      {
        unint64_t v29 = (uint8_t *)swift_slowAlloc();
        uint64_t v35 = swift_slowAlloc();
        *(_DWORD *)unint64_t v29 = 138412290;
        id v30 = a1;
        uint64_t v31 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v36 = v31;
        sub_25AC354A0();
        id v32 = v35;
        v35->Class isa = (Class)v31;

        _os_log_impl(&dword_25AB11000, v27, v28, "Unexpected error received from SPR : Error: [ %@ ]", v29, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A8);
        swift_arrayDestroy();
        MEMORY[0x261151C20](v32, -1, -1);
        MEMORY[0x261151C20](v29, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v16);
    }
    return 2;
  }
}

unint64_t sub_25AB6DE80()
{
  unint64_t result = qword_26A4A07B8;
  if (!qword_26A4A07B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A4A07B8);
  }
  return result;
}

double sub_25AB6DEC0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_25AB696C8(a1, a2, *(long long **)(v3 + 16), a3);
}

uint64_t sub_25AB6DEDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_25AB69750(a1, a2, *(unint64_t **)(v3 + 16), a3);
}

void *sub_25AB6DEFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v9 = **(void **)(v3 + 16);
  _OWORD v8[2] = &v9;
  unint64_t result = sub_25AB68D74((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_25AB6DF68, (uint64_t)v8, a1, a2);
  *a3 = result;
  a3[1] = v6;
  a3[2] = v7;
  return result;
}

uint64_t sub_25AB6DF68@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = sub_25AB69280(v8, a1, a2, **(void **)(v3 + 16));
  uint64_t v6 = v8[1];
  *a3 = v8[0];
  a3[1] = v6;
  a3[2] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25AB6DFD0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_25AB6E014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *(uint64_t **)(v3 + 16);
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  void v12[2] = v13;
  uint64_t result = sub_25AB68E68((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_25AB6E0E4, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

unsigned char *sub_25AB6E080(unsigned char *result, unsigned char *a2)
{
  if (result)
  {
    uint64_t v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (unsigned char *)sub_25AB69E38(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (unsigned char *)sub_25AB69EFC((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (unsigned char *)sub_25AB69F78((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_25AB6E0E4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_25AB69A08(a1, a2);
}

uint64_t sub_25AB6E104(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_25AB6E14C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,char a44)
{
  if ((a44 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v44 = a28;
  }
}

uint64_t destroy for ReaderEvent(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 337);
  if (v1 <= 1)
  {
    long long v6 = *(_OWORD *)(result + 288);
    long long v7 = *(_OWORD *)(result + 304);
    long long v4 = *(_OWORD *)(result + 256);
    long long v5 = *(_OWORD *)(result + 272);
    long long v2 = *(_OWORD *)(result + 224);
    long long v3 = *(_OWORD *)(result + 240);
    return sub_25AB6E348(*(void *)result, *(void *)(result + 8), *(void *)(result + 16), *(void *)(result + 24), *(void *)(result + 32), *(void *)(result + 40), *(void *)(result + 48), *(void *)(result + 56), *(void *)(result + 64), *(void *)(result + 72), *(void *)(result + 80), *(void *)(result + 88), *(void *)(result + 96), *(void *)(result + 104), *(void *)(result + 112), *(void *)(result + 120), *(void *)(result + 128), *(void *)(result + 136), *(void *)(result + 144),
             *(void *)(result + 152),
             *(void *)(result + 160),
             *(void *)(result + 168),
             *(void *)(result + 176),
             *(void *)(result + 184),
             *(void *)(result + 192),
             *(void *)(result + 200),
             *(void *)(result + 208),
             *(void **)(result + 216),
             v2,
             *((uint64_t *)&v2 + 1),
             v3,
             *((uint64_t *)&v3 + 1),
             v4,
             *((uint64_t *)&v4 + 1),
             v5,
             *((uint64_t *)&v5 + 1),
             v6,
             *((uint64_t *)&v6 + 1),
             v7,
             *((uint64_t *)&v7 + 1),
             *(void *)(result + 320),
             *(void *)(result + 328),
             *(unsigned char *)(result + 336),
             v1 != 0);
  }
  return result;
}

uint64_t sub_25AB6E348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,char a44)
{
  if ((a44 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *initializeWithCopy for ReaderEvent(uint64_t *__dst, char *a2)
{
  unsigned int v3 = a2[337];
  if (v3 > 1)
  {
    memcpy(__dst, a2, 0x152uLL);
  }
  else
  {
    uint64_t v35 = *((void *)a2 + 1);
    uint64_t v36 = *(void *)a2;
    uint64_t v33 = *((void *)a2 + 3);
    uint64_t v34 = *((void *)a2 + 2);
    uint64_t v31 = *((void *)a2 + 5);
    uint64_t v32 = *((void *)a2 + 4);
    uint64_t v29 = *((void *)a2 + 7);
    uint64_t v30 = *((void *)a2 + 6);
    uint64_t v47 = *((void *)a2 + 9);
    uint64_t v48 = *((void *)a2 + 8);
    uint64_t v45 = *((void *)a2 + 11);
    uint64_t v46 = *((void *)a2 + 10);
    uint64_t v43 = *((void *)a2 + 13);
    uint64_t v44 = *((void *)a2 + 12);
    uint64_t v41 = *((void *)a2 + 15);
    uint64_t v42 = *((void *)a2 + 14);
    uint64_t v6 = *((void *)a2 + 16);
    uint64_t v7 = *((void *)a2 + 17);
    uint64_t v8 = *((void *)a2 + 18);
    uint64_t v9 = *((void *)a2 + 19);
    uint64_t v10 = *((void *)a2 + 20);
    uint64_t v11 = *((void *)a2 + 21);
    uint64_t v4 = *((void *)a2 + 24);
    uint64_t v12 = *((void *)a2 + 22);
    uint64_t v13 = *((void *)a2 + 23);
    uint64_t v14 = *((void *)a2 + 25);
    uint64_t v15 = *((void *)a2 + 26);
    uint64_t v16 = (void *)*((void *)a2 + 27);
    uint64_t v17 = *((void *)a2 + 28);
    uint64_t v18 = *((void *)a2 + 29);
    uint64_t v19 = *((void *)a2 + 30);
    uint64_t v20 = *((void *)a2 + 31);
    uint64_t v21 = *((void *)a2 + 32);
    uint64_t v22 = *((void *)a2 + 33);
    uint64_t v23 = *((void *)a2 + 34);
    uint64_t v24 = *((void *)a2 + 35);
    uint64_t v25 = *((void *)a2 + 36);
    uint64_t v26 = *((void *)a2 + 37);
    uint64_t v27 = *((void *)a2 + 38);
    uint64_t v28 = *((void *)a2 + 39);
    uint64_t v37 = *((void *)a2 + 40);
    uint64_t v38 = *((void *)a2 + 41);
    char v39 = a2[336];
    BOOL v40 = v3 != 0;
    sub_25AB6E14C(*(void *)a2, v35, v34, v33, v32, v31, v30, v29, v48, v47, v46, v45, v44, v43, v42, v41, v6, v7, v8,
      v9,
      v10,
      v11,
      v12,
      v13,
      v4,
      v14,
      v15,
      v16,
      v17,
      v18,
      v19,
      v20,
      v21,
      v22,
      v23,
      v24,
      v25,
      v26,
      v27,
      v28,
      v37,
      v38,
      v39,
      v3 != 0);
    *__dst = v36;
    __dst[1] = v35;
    __dst[2] = v34;
    __dst[3] = v33;
    __dst[4] = v32;
    __dst[5] = v31;
    __dst[6] = v30;
    __dst[7] = v29;
    __dst[8] = v48;
    __dst[9] = v47;
    __dst[10] = v46;
    __dst[11] = v45;
    __dst[12] = v44;
    __dst[13] = v43;
    unsigned char __dst[14] = v42;
    __dst[15] = v41;
    __dst[16] = v6;
    __dst[17] = v7;
    __dst[18] = v8;
    __dst[19] = v9;
    __dst[20] = v10;
    __dst[21] = v11;
    __dst[22] = v12;
    __dst[23] = v13;
    __dst[24] = v4;
    __dst[25] = v14;
    __dst[26] = v15;
    __dst[27] = (uint64_t)v16;
    __dst[28] = v17;
    __dst[29] = v18;
    __dst[30] = v19;
    __dst[31] = v20;
    __dst[32] = v21;
    __dst[33] = v22;
    __dst[34] = v23;
    __dst[35] = v24;
    __dst[36] = v25;
    __dst[37] = v26;
    __dst[38] = v27;
    __dst[39] = v28;
    __dst[40] = v37;
    __dst[41] = v38;
    *((unsigned char *)__dst + 336) = v39;
    *((unsigned char *)__dst + 337) = v40;
  }
  return __dst;
}

char *assignWithCopy for ReaderEvent(char *__dst, void *__src)
{
  uint64_t v148 = __dst + 337;
  unsigned int v4 = __dst[337];
  unsigned int v5 = *((unsigned __int8 *)__src + 337);
  if (v4 <= 1)
  {
    if (v5 <= 1)
    {
      uint64_t v144 = __src[1];
      uint64_t v146 = *__src;
      uint64_t v140 = __src[3];
      uint64_t v142 = __src[2];
      uint64_t v136 = __src[5];
      uint64_t v138 = __src[4];
      uint64_t v132 = __src[7];
      uint64_t v134 = __src[6];
      uint64_t v129 = __src[9];
      uint64_t v131 = __src[8];
      uint64_t v125 = __src[11];
      uint64_t v127 = __src[10];
      uint64_t v121 = __src[13];
      uint64_t v123 = __src[12];
      uint64_t v117 = __src[15];
      uint64_t v119 = __src[14];
      uint64_t v6 = __src[17];
      uint64_t v115 = __src[16];
      uint64_t v7 = __src[18];
      uint64_t v8 = __src[19];
      uint64_t v9 = __src[20];
      uint64_t v11 = __src[22];
      uint64_t v10 = __src[23];
      uint64_t v13 = __src[24];
      uint64_t v12 = __src[25];
      uint64_t v79 = __src[21];
      uint64_t v80 = __src[26];
      uint64_t v82 = (void *)__src[27];
      uint64_t v84 = __src[28];
      uint64_t v85 = __src[29];
      uint64_t v87 = __src[30];
      uint64_t v89 = __src[31];
      uint64_t v91 = __src[32];
      uint64_t v93 = __src[33];
      uint64_t v95 = __src[34];
      uint64_t v97 = __src[35];
      uint64_t v99 = __src[36];
      uint64_t v101 = __src[37];
      uint64_t v103 = __src[38];
      uint64_t v105 = __src[39];
      uint64_t v107 = __src[40];
      uint64_t v109 = __src[41];
      char v113 = *((unsigned char *)__src + 336);
      BOOL v111 = v5 != 0;
      sub_25AB6E14C(*__src, v144, v142, v140, v138, v136, v134, v132, v131, v129, v127, v125, v123, v121, v119, v117, v115, v6, v7,
        v8,
        v9,
        v79,
        v11,
        v10,
        v13,
        v12,
        v80,
        v82,
        v84,
        v85,
        v87,
        v89,
        v91,
        v93,
        v95,
        v97,
        v99,
        v101,
        v103,
        v105,
        v107,
        v109,
        v113,
        v5 != 0);
      uint64_t v14 = *(void *)__dst;
      uint64_t v15 = *((void *)__dst + 1);
      *(void *)__dst = v146;
      *((void *)__dst + 1) = v144;
      uint64_t v16 = *((void *)__dst + 2);
      uint64_t v17 = *((void *)__dst + 3);
      *((void *)__dst + 2) = v142;
      *((void *)__dst + 3) = v140;
      uint64_t v18 = *((void *)__dst + 4);
      uint64_t v19 = *((void *)__dst + 5);
      *((void *)__dst + 4) = v138;
      *((void *)__dst + 5) = v136;
      uint64_t v20 = *((void *)__dst + 6);
      uint64_t v21 = *((void *)__dst + 7);
      *((void *)__dst + 6) = v134;
      *((void *)__dst + 7) = v132;
      long long v22 = *((_OWORD *)__dst + 4);
      long long v23 = *((_OWORD *)__dst + 5);
      *((void *)__dst + 8) = v131;
      *((void *)__dst + 9) = v129;
      *((void *)__dst + 10) = v127;
      *((void *)__dst + 11) = v125;
      long long v24 = *((_OWORD *)__dst + 6);
      long long v25 = *((_OWORD *)__dst + 7);
      *((void *)__dst + 12) = v123;
      *((void *)__dst + 13) = v121;
      *((void *)__dst + 14) = v119;
      *((void *)__dst + 15) = v117;
      long long v26 = *((_OWORD *)__dst + 8);
      long long v27 = *((_OWORD *)__dst + 9);
      *((void *)__dst + 16) = v115;
      *((void *)__dst + 17) = v6;
      *((void *)__dst + 18) = v7;
      *((void *)__dst + 19) = v8;
      long long v28 = *((_OWORD *)__dst + 10);
      long long v29 = *((_OWORD *)__dst + 11);
      *((void *)__dst + 20) = v9;
      *((void *)__dst + 21) = v79;
      *((void *)__dst + 22) = v11;
      *((void *)__dst + 23) = v10;
      long long v30 = *((_OWORD *)__dst + 12);
      long long v31 = *((_OWORD *)__dst + 13);
      *((void *)__dst + 24) = v13;
      *((void *)__dst + 25) = v12;
      *((void *)__dst + 26) = v80;
      *((void *)__dst + 27) = v82;
      long long v32 = *((_OWORD *)__dst + 14);
      long long v33 = *((_OWORD *)__dst + 15);
      *((void *)__dst + 28) = v84;
      *((void *)__dst + 29) = v85;
      *((void *)__dst + 30) = v87;
      *((void *)__dst + 31) = v89;
      long long v34 = *((_OWORD *)__dst + 16);
      long long v35 = *((_OWORD *)__dst + 17);
      *((void *)__dst + 32) = v91;
      *((void *)__dst + 33) = v93;
      *((void *)__dst + 34) = v95;
      *((void *)__dst + 35) = v97;
      long long v36 = *((_OWORD *)__dst + 18);
      long long v37 = *((_OWORD *)__dst + 19);
      *((void *)__dst + 36) = v99;
      *((void *)__dst + 37) = v101;
      *((void *)__dst + 38) = v103;
      *((void *)__dst + 39) = v105;
      char v38 = *v148;
      *uint64_t v148 = v111;
      uint64_t v39 = *((void *)__dst + 40);
      uint64_t v40 = *((void *)__dst + 41);
      *((void *)__dst + 40) = v107;
      *((void *)__dst + 41) = v109;
      char v41 = __dst[336];
      __dst[336] = v113;
      sub_25AB6E348(v14, v15, v16, v17, v18, v19, v20, v21, v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v26, *((uint64_t *)&v26 + 1), v27,
        *((uint64_t *)&v27 + 1),
        v28,
        *((uint64_t *)&v28 + 1),
        v29,
        *((uint64_t *)&v29 + 1),
        v30,
        *((uint64_t *)&v30 + 1),
        v31,
        *((void **)&v31 + 1),
        v32,
        *((uint64_t *)&v32 + 1),
        v33,
        *((uint64_t *)&v33 + 1),
        v34,
        *((uint64_t *)&v34 + 1),
        v35,
        *((uint64_t *)&v35 + 1),
        v36,
        *((uint64_t *)&v36 + 1),
        v37,
        *((uint64_t *)&v37 + 1),
        v39,
        v40,
        v41,
        v38);
      return __dst;
    }
    long long v76 = *((_OWORD *)__dst + 18);
    long long v77 = *((_OWORD *)__dst + 19);
    long long v74 = *((_OWORD *)__dst + 16);
    long long v75 = *((_OWORD *)__dst + 17);
    long long v72 = *((_OWORD *)__dst + 14);
    long long v73 = *((_OWORD *)__dst + 15);
    sub_25AB6E348(*(void *)__dst, *((void *)__dst + 1), *((void *)__dst + 2), *((void *)__dst + 3), *((void *)__dst + 4), *((void *)__dst + 5), *((void *)__dst + 6), *((void *)__dst + 7), *((void *)__dst + 8), *((void *)__dst + 9), *((void *)__dst + 10), *((void *)__dst + 11), *((void *)__dst + 12), *((void *)__dst + 13), *((void *)__dst + 14), *((void *)__dst + 15), *((void *)__dst + 16), *((void *)__dst + 17), *((void *)__dst + 18),
      *((void *)__dst + 19),
      *((void *)__dst + 20),
      *((void *)__dst + 21),
      *((void *)__dst + 22),
      *((void *)__dst + 23),
      *((void *)__dst + 24),
      *((void *)__dst + 25),
      *((void *)__dst + 26),
      *((void **)__dst + 27),
      v72,
      *((uint64_t *)&v72 + 1),
      v73,
      *((uint64_t *)&v73 + 1),
      v74,
      *((uint64_t *)&v74 + 1),
      v75,
      *((uint64_t *)&v75 + 1),
      v76,
      *((uint64_t *)&v76 + 1),
      v77,
      *((uint64_t *)&v77 + 1),
      *((void *)__dst + 40),
      *((void *)__dst + 41),
      __dst[336],
      v4 & 1);
LABEL_10:
    memcpy(__dst, __src, 0x152uLL);
    return __dst;
  }
  if (v5 > 1) {
    goto LABEL_10;
  }
  BOOL v42 = v5 == 0;
  uint64_t v124 = __src[1];
  uint64_t v126 = *__src;
  uint64_t v120 = __src[3];
  uint64_t v122 = __src[2];
  uint64_t v116 = __src[5];
  uint64_t v118 = __src[4];
  uint64_t v112 = __src[7];
  uint64_t v114 = __src[6];
  uint64_t v145 = __src[9];
  uint64_t v147 = __src[8];
  uint64_t v141 = __src[11];
  uint64_t v143 = __src[10];
  uint64_t v137 = __src[13];
  uint64_t v139 = __src[12];
  uint64_t v43 = __src[16];
  uint64_t v133 = __src[15];
  uint64_t v135 = __src[14];
  uint64_t v45 = __src[17];
  uint64_t v44 = __src[18];
  uint64_t v47 = __src[19];
  uint64_t v46 = __src[20];
  uint64_t v49 = __src[21];
  uint64_t v48 = __src[22];
  uint64_t v50 = __src[23];
  uint64_t v51 = __src[24];
  uint64_t v81 = v50;
  uint64_t v52 = __src[25];
  uint64_t v53 = __src[26];
  uint64_t v83 = v51;
  unint64_t v55 = (void *)__src[27];
  uint64_t v54 = __src[28];
  unint64_t v86 = v55;
  uint64_t v88 = v54;
  uint64_t v57 = __src[29];
  uint64_t v56 = __src[30];
  uint64_t v90 = v57;
  uint64_t v92 = v56;
  uint64_t v59 = __src[31];
  uint64_t v58 = __src[32];
  uint64_t v94 = __src[31];
  uint64_t v96 = v58;
  uint64_t v61 = __src[33];
  uint64_t v60 = __src[34];
  uint64_t v98 = v61;
  uint64_t v100 = v60;
  uint64_t v63 = __src[35];
  uint64_t v62 = __src[36];
  uint64_t v102 = v63;
  uint64_t v104 = v62;
  uint64_t v65 = __src[37];
  uint64_t v64 = __src[38];
  uint64_t v106 = v65;
  uint64_t v108 = v64;
  uint64_t v67 = __src[39];
  uint64_t v66 = __src[40];
  uint64_t v110 = v67;
  uint64_t v68 = __src[41];
  uint64_t v128 = v66;
  uint64_t v130 = v68;
  char v69 = *((unsigned char *)__src + 336);
  char v70 = !v42;
  char v78 = v70;
  sub_25AB6E14C(v126, v124, v122, v120, v118, v116, v114, v112, v147, v145, v143, v141, v139, v137, v135, v133, v43, v45, v44,
    v47,
    v46,
    v49,
    v48,
    v50,
    v51,
    v52,
    v53,
    v55,
    v54,
    v57,
    v56,
    v59,
    v58,
    v61,
    v60,
    v63,
    v62,
    v65,
    v64,
    v67,
    v66,
    v68,
    v69,
    v70);
  *uint64_t v148 = v78;
  *(void *)__dst = v126;
  *((void *)__dst + 1) = v124;
  *((void *)__dst + 2) = v122;
  *((void *)__dst + 3) = v120;
  *((void *)__dst + 4) = v118;
  *((void *)__dst + 5) = v116;
  *((void *)__dst + 6) = v114;
  *((void *)__dst + 7) = v112;
  *((void *)__dst + 8) = v147;
  *((void *)__dst + 9) = v145;
  *((void *)__dst + 10) = v143;
  *((void *)__dst + 11) = v141;
  *((void *)__dst + 12) = v139;
  *((void *)__dst + 13) = v137;
  *((void *)__dst + 14) = v135;
  *((void *)__dst + 15) = v133;
  *((void *)__dst + 16) = v43;
  *((void *)__dst + 17) = v45;
  *((void *)__dst + 18) = v44;
  *((void *)__dst + 19) = v47;
  *((void *)__dst + 20) = v46;
  *((void *)__dst + 21) = v49;
  *((void *)__dst + 22) = v48;
  *((void *)__dst + 23) = v81;
  *((void *)__dst + 24) = v83;
  *((void *)__dst + 25) = v52;
  *((void *)__dst + 26) = v53;
  *((void *)__dst + 27) = v86;
  *((void *)__dst + 28) = v88;
  *((void *)__dst + 29) = v90;
  *((void *)__dst + 30) = v92;
  *((void *)__dst + 31) = v94;
  *((void *)__dst + 32) = v96;
  *((void *)__dst + 33) = v98;
  *((void *)__dst + 34) = v100;
  *((void *)__dst + 35) = v102;
  *((void *)__dst + 36) = v104;
  *((void *)__dst + 37) = v106;
  *((void *)__dst + 38) = v108;
  *((void *)__dst + 39) = v110;
  *((void *)__dst + 40) = v128;
  *((void *)__dst + 41) = v130;
  __dst[336] = v69;
  return __dst;
}

void *__swift_memcpy338_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x152uLL);
}

unsigned __int8 *assignWithTake for ReaderEvent(unsigned __int8 *__dst, unsigned __int8 *__src)
{
  unsigned int v4 = __dst[337];
  if (v4 > 1) {
    goto LABEL_5;
  }
  unsigned int v5 = __src[337];
  if (v5 > 1)
  {
    long long v52 = *((_OWORD *)__dst + 18);
    long long v53 = *((_OWORD *)__dst + 19);
    long long v50 = *((_OWORD *)__dst + 16);
    long long v51 = *((_OWORD *)__dst + 17);
    long long v48 = *((_OWORD *)__dst + 14);
    long long v49 = *((_OWORD *)__dst + 15);
    sub_25AB6E348(*(void *)__dst, *((void *)__dst + 1), *((void *)__dst + 2), *((void *)__dst + 3), *((void *)__dst + 4), *((void *)__dst + 5), *((void *)__dst + 6), *((void *)__dst + 7), *((void *)__dst + 8), *((void *)__dst + 9), *((void *)__dst + 10), *((void *)__dst + 11), *((void *)__dst + 12), *((void *)__dst + 13), *((void *)__dst + 14), *((void *)__dst + 15), *((void *)__dst + 16), *((void *)__dst + 17), *((void *)__dst + 18),
      *((void *)__dst + 19),
      *((void *)__dst + 20),
      *((void *)__dst + 21),
      *((void *)__dst + 22),
      *((void *)__dst + 23),
      *((void *)__dst + 24),
      *((void *)__dst + 25),
      *((void *)__dst + 26),
      *((void **)__dst + 27),
      v48,
      *((uint64_t *)&v48 + 1),
      v49,
      *((uint64_t *)&v49 + 1),
      v50,
      *((uint64_t *)&v50 + 1),
      v51,
      *((uint64_t *)&v51 + 1),
      v52,
      *((uint64_t *)&v52 + 1),
      v53,
      *((uint64_t *)&v53 + 1),
      *((void *)__dst + 40),
      *((void *)__dst + 41),
      __dst[336],
      v4 & 1);
LABEL_5:
    memcpy(__dst, __src, 0x152uLL);
    return __dst;
  }
  uint64_t v6 = (char *)(__dst + 337);
  unsigned __int8 v7 = __src[336];
  uint64_t v8 = *(void *)__dst;
  uint64_t v9 = *((void *)__dst + 1);
  uint64_t v10 = *((void *)__dst + 2);
  uint64_t v11 = *((void *)__dst + 3);
  uint64_t v12 = *((void *)__dst + 4);
  uint64_t v13 = *((void *)__dst + 5);
  uint64_t v14 = *((void *)__dst + 6);
  uint64_t v15 = *((void *)__dst + 7);
  long long v16 = *((_OWORD *)__dst + 4);
  long long v17 = *((_OWORD *)__dst + 5);
  long long v18 = *((_OWORD *)__dst + 6);
  long long v19 = *((_OWORD *)__dst + 7);
  long long v20 = *((_OWORD *)__dst + 8);
  long long v21 = *((_OWORD *)__dst + 9);
  long long v22 = *((_OWORD *)__dst + 10);
  long long v23 = *((_OWORD *)__dst + 11);
  long long v24 = *((_OWORD *)__dst + 12);
  long long v25 = *((_OWORD *)__dst + 13);
  long long v26 = *((_OWORD *)__dst + 14);
  long long v27 = *((_OWORD *)__dst + 15);
  long long v28 = *((_OWORD *)__dst + 16);
  long long v29 = *((_OWORD *)__dst + 17);
  long long v30 = *((_OWORD *)__dst + 18);
  long long v31 = *((_OWORD *)__dst + 19);
  uint64_t v32 = *((void *)__dst + 40);
  uint64_t v33 = *((void *)__dst + 41);
  char v34 = __dst[336];
  char v35 = *v6;
  long long v36 = *((_OWORD *)__src + 1);
  *(_OWORD *)__dst = *(_OWORD *)__src;
  *((_OWORD *)__dst + 1) = v36;
  long long v37 = *((_OWORD *)__src + 3);
  *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
  *((_OWORD *)__dst + 3) = v37;
  long long v38 = *((_OWORD *)__src + 5);
  *((_OWORD *)__dst + 4) = *((_OWORD *)__src + 4);
  *((_OWORD *)__dst + 5) = v38;
  long long v39 = *((_OWORD *)__src + 7);
  *((_OWORD *)__dst + 6) = *((_OWORD *)__src + 6);
  *((_OWORD *)__dst + 7) = v39;
  long long v40 = *((_OWORD *)__src + 9);
  *((_OWORD *)__dst + 8) = *((_OWORD *)__src + 8);
  *((_OWORD *)__dst + 9) = v40;
  long long v41 = *((_OWORD *)__src + 11);
  *((_OWORD *)__dst + 10) = *((_OWORD *)__src + 10);
  *((_OWORD *)__dst + 11) = v41;
  long long v42 = *((_OWORD *)__src + 13);
  *((_OWORD *)__dst + 12) = *((_OWORD *)__src + 12);
  *((_OWORD *)__dst + 13) = v42;
  long long v43 = *((_OWORD *)__src + 15);
  *((_OWORD *)__dst + 14) = *((_OWORD *)__src + 14);
  *((_OWORD *)__dst + 15) = v43;
  long long v44 = *((_OWORD *)__src + 17);
  *((_OWORD *)__dst + 16) = *((_OWORD *)__src + 16);
  *((_OWORD *)__dst + 17) = v44;
  long long v45 = *((_OWORD *)__src + 19);
  long long v46 = *((_OWORD *)__src + 20);
  *((_OWORD *)__dst + 18) = *((_OWORD *)__src + 18);
  *((_OWORD *)__dst + 19) = v45;
  *((_OWORD *)__dst + 20) = v46;
  __dst[336] = v7;
  char *v6 = v5 != 0;
  sub_25AB6E348(v8, v9, v10, v11, v12, v13, v14, v15, v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), v19, *((uint64_t *)&v19 + 1), v20, *((uint64_t *)&v20 + 1), v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((void **)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    v33,
    v34,
    v35);
  return __dst;
}

uint64_t getEnumTagSinglePayload for ReaderEvent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF5 && *(unsigned char *)(a1 + 338)) {
    return (*(_DWORD *)a1 + 245);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 337);
  if (v3 > 1) {
    unsigned int v4 = (v3 ^ 0xFF) + 1;
  }
  else {
    unsigned int v4 = 0;
  }
  if (v4 >= 0xB) {
    return v4 - 10;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ReaderEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF4)
  {
    *(_WORD *)(result + 336) = 0;
    *(_OWORD *)(result + 304) = 0u;
    *(_OWORD *)(result + 320) = 0u;
    *(_OWORD *)(result + 272) = 0u;
    *(_OWORD *)(result + 288) = 0u;
    *(_OWORD *)(result + 240) = 0u;
    *(_OWORD *)(result + 256) = 0u;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 245;
    if (a3 >= 0xF5) {
      *(unsigned char *)(result + 338) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF5) {
      *(unsigned char *)(result + 338) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 337) = -10 - a2;
    }
  }
  return result;
}

uint64_t sub_25AB6F068(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 337);
  if (v1 > 1) {
    return (v1 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

double sub_25AB6F07C(uint64_t a1, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(void *)(a1 + 328) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 248) = 0u;
    *(_OWORD *)(a1 + 232) = 0u;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_WORD *)(a1 + 336) = 0;
    *(_OWORD *)(a1 + 312) = 0u;
    *(_OWORD *)(a1 + 296) = 0u;
    *(_OWORD *)(a1 + 280) = 0u;
    *(_OWORD *)(a1 + 264) = 0u;
    *(void *)a1 = a2 - 255;
  }
  else if (a2)
  {
    *(unsigned char *)(a1 + 337) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReaderEvent()
{
  return &type metadata for ReaderEvent;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)double result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for CardReaderAdapterError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3E && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 62);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 8) & 0x3C | (*(unsigned __int8 *)(a1 + 8) >> 6)) ^ 0x3F;
  if (v3 >= 0x3D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CardReaderAdapterError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3D)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)double result = a2 - 62;
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2)
    {
      *(void *)double result = 0;
      *(unsigned char *)(result + 8) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_25AB6F1C8(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 8);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_25AB6F1E8(uint64_t result)
{
  *(unsigned char *)(result + 8) &= 0x3Fu;
  return result;
}

uint64_t sub_25AB6F1F8(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(unsigned char *)(result + 8) = *(unsigned char *)(result + 8) & 3 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)double result = a2 - 2;
    *(unsigned char *)(result + 8) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for CardReaderAdapterError()
{
  return &type metadata for CardReaderAdapterError;
}

uint64_t destroy for TransactionData(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TransactionData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  uint64_t v11 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v11;
  uint64_t v12 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v12;
  uint64_t v13 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v13;
  *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
  *(unsigned char *)(a1 + 196) = *(unsigned char *)(a2 + 196);
  uint64_t v14 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v14;
  uint64_t v15 = *(void *)(a2 + 224);
  long long v23 = *(void **)(a2 + 216);
  *(void *)(a1 + 216) = v23;
  *(void *)(a1 + 224) = v15;
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  uint64_t v16 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v16;
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  uint64_t v17 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v17;
  uint64_t v18 = *(void *)(a2 + 288);
  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  *(void *)(a1 + 288) = v18;
  uint64_t v19 = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(void *)(a1 + 304) = v19;
  uint64_t v20 = *(void *)(a2 + 328);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = v20;
  *(unsigned char *)(a1 + 336) = *(unsigned char *)(a2 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v21 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TransactionData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 264;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(unsigned char *)(a1 + 193) = *(unsigned char *)(a2 + 193);
  *(unsigned char *)(a1 + 194) = *(unsigned char *)(a2 + 194);
  *(unsigned char *)(a1 + 195) = *(unsigned char *)(a2 + 195);
  *(unsigned char *)(a1 + 196) = *(unsigned char *)(a2 + 196);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 216);
  uint64_t v6 = *(void **)(a2 + 216);
  *(void *)(a1 + 216) = v6;
  id v7 = v6;

  uint64_t v8 = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 224) = v8;
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 288);
  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  *(void *)(a1 + 288) = v9;
  uint64_t v10 = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(void *)(a1 + 304) = v10;
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 336) = *(unsigned char *)(v4 + 72);
  return a1;
}

void *__swift_memcpy337_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x151uLL);
}

uint64_t assignWithTake for TransactionData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 264;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(unsigned char *)(a1 + 193) = *(unsigned char *)(a2 + 193);
  *(unsigned char *)(a1 + 194) = *(unsigned char *)(a2 + 194);
  *(unsigned char *)(a1 + 195) = *(unsigned char *)(a2 + 195);
  *(unsigned char *)(a1 + 196) = *(unsigned char *)(a2 + 196);
  uint64_t v16 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void **)(a1 + 216);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);

  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v18;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  uint64_t v19 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v19;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  uint64_t v20 = *(void *)(a2 + 328);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = v20;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 336) = *(unsigned char *)(v4 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransactionData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 337)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransactionData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 328) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 336) = 0;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 337) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 337) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransactionData()
{
  return &type metadata for TransactionData;
}

uint64_t sub_25AB6FA24()
{
  return sub_25AC359D0();
}

uint64_t sub_25AB6FB40()
{
  return sub_25AC359D0();
}

unint64_t sub_25AB6FC58(uint64_t a1, unsigned __int8 a2)
{
  if (a2 >> 6)
  {
    if (a2 >> 6 == 1)
    {
      if ((a2 & 0x3F) == 0)
      {
        sub_25AC35580();
        swift_bridgeObjectRelease();
        unint64_t v5 = 0xD000000000000023;
        goto LABEL_12;
      }
      if ((a2 & 0x3F) == 1)
      {
        sub_25AC35580();
        swift_bridgeObjectRelease();
        unint64_t v5 = 0xD000000000000010;
LABEL_12:
        sub_25AC35850();
        sub_25AC34F60();
        swift_bridgeObjectRelease();
        sub_25AC34F60();
        return v5;
      }
      unint64_t v4 = 0xD000000000000019;
      if (a1 != 1) {
        unint64_t v4 = 0x6461655264726163;
      }
      if (a1) {
        return v4;
      }
      else {
        return 0xD000000000000024;
      }
    }
    else
    {
      unint64_t result = 0x4164696C61766E69;
      switch(a1)
      {
        case 1:
          unint64_t result = 0xD000000000000013;
          break;
        case 2:
          unint64_t result = 0x654E6769666E6F63;
          break;
        case 3:
          unint64_t result = 0x626173694463666ELL;
          break;
        case 4:
          unint64_t result = 0xD000000000000012;
          break;
        case 5:
          unint64_t result = 0x4164616552797274;
          break;
        case 6:
          unint64_t result = 0x656D695464616572;
          break;
        case 7:
          unint64_t result = 0x4664616552736176;
          break;
        case 8:
          unint64_t result = 0x4E61746144736176;
          break;
        case 9:
          unint64_t result = 0xD00000000000001BLL;
          break;
        case 10:
          unint64_t result = 0xD000000000000010;
          break;
        case 11:
          unint64_t result = 0xD000000000000013;
          break;
        default:
          return result;
      }
    }
  }
  else if ((_BYTE)a1)
  {
    if (a1 == 1) {
      return sub_25AC33A00();
    }
    else {
      return sub_25AC33A10();
    }
  }
  else
  {
    return sub_25AC33A20();
  }
  return result;
}

unint64_t sub_25AB6FFB0(uint64_t a1, uint64_t a2)
{
  if (*((unsigned char *)v2 + 196))
  {
    uint64_t v5 = *((void *)v2 + 25);
    uint64_t v6 = *((void *)v2 + 26);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FF48);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25AC3B360;
  *(void *)(inited + 32) = sub_25AC34E40();
  *(void *)(inited + 40) = v8;
  uint64_t v9 = MEMORY[0x263F8D310];
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 56) = a2;
  *(void *)(inited + 80) = sub_25AC34E40();
  *(void *)(inited + 88) = v10;
  long long v34 = *v2;
  long long v11 = v34;
  *(void *)(inited + 120) = v9;
  *(_OWORD *)(inited + 96) = v11;
  *(void *)(inited + 128) = sub_25AC34E40();
  *(void *)(inited + 136) = v12;
  long long v33 = v2[8];
  long long v13 = v33;
  *(void *)(inited + 168) = v9;
  *(_OWORD *)(inited + 144) = v13;
  *(void *)(inited + 176) = sub_25AC34E40();
  *(void *)(inited + 184) = v14;
  long long v32 = v2[7];
  long long v15 = v32;
  *(void *)(inited + 216) = v9;
  *(_OWORD *)(inited + 192) = v15;
  *(void *)(inited + 224) = sub_25AC34E40();
  *(void *)(inited + 232) = v16;
  long long v31 = v2[9];
  long long v17 = v31;
  *(void *)(inited + 264) = v9;
  *(_OWORD *)(inited + 240) = v17;
  *(void *)(inited + 272) = sub_25AC34E40();
  *(void *)(inited + 280) = v18;
  long long v30 = v2[4];
  long long v19 = v30;
  *(void *)(inited + 312) = v9;
  *(_OWORD *)(inited + 288) = v19;
  *(void *)(inited + 320) = sub_25AC34E40();
  *(void *)(inited + 328) = v20;
  long long v29 = v2[5];
  long long v21 = v29;
  *(void *)(inited + 360) = v9;
  *(_OWORD *)(inited + 336) = v21;
  *(void *)(inited + 368) = sub_25AC34E40();
  *(void *)(inited + 376) = v22;
  uint64_t v23 = MEMORY[0x263F8D4F8];
  char v24 = *((unsigned char *)v2 + 193);
  *(void *)(inited + 408) = MEMORY[0x263F8D4F8];
  *(unsigned char *)(inited + 384) = v24;
  *(void *)(inited + 416) = sub_25AC34E40();
  *(void *)(inited + 424) = v25;
  *(void *)(inited + 456) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0858);
  *(void *)(inited + 432) = v5;
  *(void *)(inited + 440) = v6;
  *(void *)(inited + 464) = sub_25AC34E40();
  *(void *)(inited + 472) = v26;
  char v27 = *((unsigned char *)v2 + 194);
  *(void *)(inited + 504) = v23;
  *(unsigned char *)(inited + 480) = v27;
  swift_bridgeObjectRetain();
  sub_25AB564C8((uint64_t)&v34);
  sub_25AB564C8((uint64_t)&v33);
  sub_25AB564C8((uint64_t)&v32);
  sub_25AB564C8((uint64_t)&v31);
  sub_25AB564C8((uint64_t)&v30);
  sub_25AB564C8((uint64_t)&v29);
  return sub_25AB714E8(inited);
}

unint64_t sub_25AB701E4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AB259D8(v3 + 216, (uint64_t)&v43, &qword_26A4A0850);
  sub_25AB259D8((uint64_t)&v43, (uint64_t)&v44, &qword_26A4A0850);
  if (v44 && ((*(unsigned char *)(v3 + 192) & 1) != 0 || (a3 & 1) != 0))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FF48);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25AC3B370;
    *(void *)(inited + 32) = sub_25AC34E40();
    *(void *)(inited + 40) = v18;
    uint64_t v19 = MEMORY[0x263F8D310];
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = a1;
    *(void *)(inited + 56) = a2;
    *(void *)(inited + 80) = sub_25AC34E40();
    *(void *)(inited + 88) = v20;
    long long v42 = *(_OWORD *)v3;
    long long v21 = v42;
    *(void *)(inited + 120) = v19;
    *(_OWORD *)(inited + 96) = v21;
    *(void *)(inited + 128) = sub_25AC34E40();
    *(void *)(inited + 136) = v22;
    sub_25AB71074(&v43);
    swift_bridgeObjectRetain();
    sub_25AB564C8((uint64_t)&v42);
    uint64_t v23 = sub_25AC33760();
    *(void *)(inited + 168) = v19;
    *(void *)(inited + 144) = v23;
    *(void *)(inited + 152) = v24;
    *(void *)(inited + 176) = sub_25AC34E40();
    *(void *)(inited + 184) = v25;
    uint64_t v26 = sub_25AC33780();
    *(void *)(inited + 216) = v19;
    *(void *)(inited + 192) = v26;
    *(void *)(inited + 200) = v27;
    *(void *)(inited + 224) = sub_25AC34E40();
    *(void *)(inited + 232) = v28;
    uint64_t v29 = sub_25AC33790();
    *(void *)(inited + 264) = v19;
    *(void *)(inited + 240) = v29;
    *(void *)(inited + 248) = v30;
    *(void *)(inited + 272) = sub_25AC34E40();
    *(void *)(inited + 280) = v31;
    char v32 = sub_25AC33730();
    *(void *)(inited + 312) = MEMORY[0x263F8D4F8];
    *(unsigned char *)(inited + 288) = v32 & 1;
    *(void *)(inited + 320) = sub_25AC34E40();
    *(void *)(inited + 328) = v33;
    uint64_t v34 = sub_25AC33770();
    *(void *)(inited + 360) = v19;
    *(void *)(inited + 336) = v34;
    *(void *)(inited + 344) = v35;
    *(void *)(inited + 368) = sub_25AC34E40();
    *(void *)(inited + 376) = v36;
    uint64_t v37 = sub_25AC33750();
    *(void *)(inited + 408) = v19;
    *(void *)(inited + 384) = v37;
    *(void *)(inited + 392) = v38;
    unint64_t v39 = sub_25AB714E8(inited);
    sub_25AB710A0(&v43);
  }
  else
  {
    if (qword_26A49F800 != -1) {
      swift_once();
    }
    uint64_t v11 = __swift_project_value_buffer(v8, (uint64_t)qword_26A4A1CE8);
    sub_25AB150E0(v11, (uint64_t)v10);
    uint64_t v12 = sub_25AC345E0();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
    {
      sub_25AB15148((uint64_t)v10);
    }
    else
    {
      sub_25AB1E924(v3);
      uint64_t v14 = sub_25AC345C0();
      os_log_type_t v15 = sub_25AC352C0();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v16 = 67109120;
        LODWORD(v42) = *(unsigned char *)(v4 + 192) & 1;
        sub_25AC354A0();
        sub_25AB36048(v4);
        _os_log_impl(&dword_25AB11000, v14, v15, "txnData.pinData is nil or pinRequired %{BOOL}d", v16, 8u);
        MEMORY[0x261151C20](v16, -1, -1);
      }
      else
      {

        sub_25AB36048(v4);
      }
      (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    }
    return 0;
  }
  return v39;
}

BOOL sub_25AB705C4(uint64_t a1, uint64_t a2)
{
  return sub_25AB70DA4(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

uint64_t sub_25AB705DC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  int v4 = *((unsigned __int8 *)a2 + 8);
  if (!*((unsigned char *)a1 + 8))
  {
    if (!*((unsigned char *)a2 + 8)) {
      return v2 == v3;
    }
    return 0;
  }
  if (*((unsigned char *)a1 + 8) == 1)
  {
    if (v4 == 1) {
      return v2 == v3;
    }
    return 0;
  }
  if (v2)
  {
    if (v2 == 1)
    {
      if (v4 != 2 || v3 != 1) {
        return 0;
      }
    }
    else if (v4 != 2 || v3 != 2)
    {
      return 0;
    }
  }
  else if (v4 != 2 || v3 != 0)
  {
    return 0;
  }
  return 1;
}

uint64_t sub_25AB70664(uint64_t a1, unsigned __int8 a2)
{
  if (!(a2 >> 6)) {
    return 10;
  }
  if (a2 >> 6 == 1) {
    return 16;
  }
  return qword_25AC3B618[a1];
}

unint64_t sub_25AB70694()
{
  return sub_25AB6FC58(*(void *)v0, *(unsigned char *)(v0 + 8));
}

unint64_t sub_25AB706A0()
{
  sub_25AB70A58(v0, __src);
  int v1 = sub_25AB6F068((uint64_t)__src);
  unint64_t result = 0x7964616572;
  switch(v1)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0x6465746365746564;
      break;
    case 3:
      unint64_t result = 0x656C6C65636E6163;
      break;
    case 4:
      unint64_t result = 0x6465736F6C63;
      break;
    case 5:
      unint64_t result = 0x65766F6D6572;
      break;
    case 6:
      unint64_t result = 0x7261655464726163;
      break;
    case 7:
      unint64_t result = 0x6E69616741797274;
      break;
    case 8:
      unint64_t result = 0x726143726568746FLL;
      break;
    case 9:
      unint64_t result = 0x656E6F6850656573;
      break;
    case 10:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      memcpy(__dst, __src, 0x152uLL);
      sub_25AB259D8((uint64_t)__dst, (uint64_t)v8, &qword_26A4A0848);
      int v3 = sub_25AB70A6C((uint64_t)v8);
      uint64_t v4 = nullsub_1(v8);
      if (v3 == 1)
      {
        uint64_t v5 = *(void *)v4;
        unsigned __int8 v6 = *(unsigned char *)(v4 + 8);
        sub_25AC35580();
        swift_bridgeObjectRelease();
        sub_25AB6FC58(v5, v6);
        sub_25AC34F60();
        swift_bridgeObjectRelease();
        sub_25AC34F60();
        unint64_t result = 0xD000000000000018;
      }
      else
      {
        unint64_t result = 0xD000000000000016;
      }
      break;
  }
  return result;
}

unint64_t sub_25AB708F0(char a1)
{
  unint64_t result = 0x7974706D65;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6465766F72707061;
      break;
    case 2:
      unint64_t result = 0x64656E696C636564;
      break;
    case 3:
      unint64_t result = 0x6552656E696C6E6FLL;
      break;
    case 4:
      unint64_t result = 0x696C707041646E65;
      break;
    case 5:
      unint64_t result = 0x654E7463656C6573;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0x6E69616741797274;
      break;
    case 8:
      unint64_t result = 16718;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25AB70A20()
{
  sub_25AB70A58(v0, __dst);
  return sub_25AB706A0();
}

void *sub_25AB70A58(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x152uLL);
}

uint64_t sub_25AB70A6C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 337);
}

uint64_t sub_25AB70A74(unsigned __int8 *a1, char *a2)
{
  return sub_25AB37BBC(*a1, *a2);
}

uint64_t sub_25AB70A80()
{
  return sub_25AB6FA24();
}

uint64_t sub_25AB70A88()
{
  sub_25AC34F20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB70B8C()
{
  return sub_25AB6FB40();
}

uint64_t sub_25AB70B94@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25AB71450();
  *a1 = result;
  return result;
}

void sub_25AB70BC4(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x4D5643206F4ELL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000065;
      uint64_t v3 = 0x727574616E676953;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x4D5643444FLL;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    case 3:
      *(void *)a1 = 0x5020656E696C6E4FLL;
      *(void *)(a1 + 8) = 0xEA00000000004E49;
      break;
    case 4:
      strcpy((char *)a1, "Not Applicable");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 5:
      *(void *)a1 = 0x7974706D45;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_25AB70CA8(unsigned __int8 *a1, char *a2)
{
  return sub_25AB37DD8(*a1, *a2);
}

uint64_t sub_25AB70CB4()
{
  return sub_25AC359D0();
}

uint64_t sub_25AB70CFC()
{
  return sub_25AB3851C();
}

uint64_t sub_25AB70D04()
{
  return sub_25AC359D0();
}

uint64_t sub_25AB70D48@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25AB7149C();
  *a1 = result;
  return result;
}

unint64_t sub_25AB70D78@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_25AB708F0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

BOOL sub_25AB70DA4(uint64_t a1, unsigned __int8 a2, uint64_t a3, unsigned __int8 a4)
{
  if (!(a2 >> 6))
  {
    if (a4 < 0x40u) {
      return a3 == a1;
    }
    return 0;
  }
  if (a2 >> 6 == 1)
  {
    if ((a4 & 0xC0) == 0x40)
    {
      int v4 = a4 & 0x3F;
      if ((a2 & 0x3F) != 0)
      {
        if ((a2 & 0x3F) == 1)
        {
          if (v4 == 1 && a1 == a3) {
            return 1;
          }
        }
        else if (a1)
        {
          if (a1 == 1)
          {
            if (v4 == 2 && a3 == 1) {
              return 1;
            }
          }
          else if (v4 == 2 && a3 == 2)
          {
            return 1;
          }
        }
        else if (v4 == 2 && !a3)
        {
          return 1;
        }
      }
      else if ((a4 & 0x3F) == 0 && a1 == a3)
      {
        return 1;
      }
    }
    return 0;
  }
  switch(a1)
  {
    case 1:
      if ((a4 & 0xC0) != 0x80 || a3 != 1 || a4 != 128) {
        return 0;
      }
      BOOL result = 1;
      break;
    case 2:
      if ((a4 & 0xC0) != 0x80 || a3 != 2 || a4 != 128) {
        return 0;
      }
      BOOL result = 1;
      break;
    case 3:
      if ((a4 & 0xC0) != 0x80 || a3 != 3 || a4 != 128) {
        return 0;
      }
      BOOL result = 1;
      break;
    case 4:
      if ((a4 & 0xC0) != 0x80 || a3 != 4 || a4 != 128) {
        return 0;
      }
      BOOL result = 1;
      break;
    case 5:
      if ((a4 & 0xC0) != 0x80 || a3 != 5 || a4 != 128) {
        return 0;
      }
      BOOL result = 1;
      break;
    case 6:
      if ((a4 & 0xC0) != 0x80 || a3 != 6 || a4 != 128) {
        return 0;
      }
      BOOL result = 1;
      break;
    case 7:
      if ((a4 & 0xC0) != 0x80 || a3 != 7 || a4 != 128) {
        return 0;
      }
      BOOL result = 1;
      break;
    case 8:
      if ((a4 & 0xC0) != 0x80 || a3 != 8 || a4 != 128) {
        return 0;
      }
      BOOL result = 1;
      break;
    case 9:
      if ((a4 & 0xC0) != 0x80 || a3 != 9 || a4 != 128) {
        return 0;
      }
      BOOL result = 1;
      break;
    case 10:
      if ((a4 & 0xC0) != 0x80 || a3 != 10 || a4 != 128) {
        return 0;
      }
      BOOL result = 1;
      break;
    case 11:
      if ((a4 & 0xC0) != 0x80 || a3 != 11 || a4 != 128) {
        return 0;
      }
      BOOL result = 1;
      break;
    default:
      if ((a4 & 0xC0) != 0x80 || a3 || a4 != 128) {
        return 0;
      }
      BOOL result = 1;
      break;
  }
  return result;
}

id *sub_25AB71074(id *a1)
{
  id v2 = *a1;
  return a1;
}

id *sub_25AB710A0(id *a1)
{
  return a1;
}

uint64_t getEnumTagSinglePayload for CardReadFailedReason(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CardReadFailedReason(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)BOOL result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_25AB71158(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_25AB71170(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)BOOL result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CardReadFailedReason()
{
  return &type metadata for CardReadFailedReason;
}

unsigned char *storeEnumTagSinglePayload for TransactionData.OutcomeStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *BOOL result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB71264);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *BOOL result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransactionData.OutcomeStatus()
{
  return &type metadata for TransactionData.OutcomeStatus;
}

unsigned char *storeEnumTagSinglePayload for TransactionData.CvmType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *BOOL result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB71368);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *BOOL result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransactionData.CvmType()
{
  return &type metadata for TransactionData.CvmType;
}

unint64_t sub_25AB713A4()
{
  unint64_t result = qword_26A4A0860;
  if (!qword_26A4A0860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0860);
  }
  return result;
}

unint64_t sub_25AB713FC()
{
  unint64_t result = qword_26A4A0868;
  if (!qword_26A4A0868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0868);
  }
  return result;
}

uint64_t sub_25AB71450()
{
  unint64_t v0 = sub_25AC35720();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t sub_25AB7149C()
{
  unint64_t v0 = sub_25AC35720();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

unint64_t sub_25AB714E8(uint64_t a1)
{
  return sub_25AB71654(a1, (uint64_t *)&unk_26A4A0F80, &qword_26A4A08C8, (uint64_t (*)(uint64_t *, unint64_t))sub_25AB1DDC8);
}

unint64_t sub_25AB71510(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A08D0);
  id v2 = (void *)sub_25AC356D0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unsigned int v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    unint64_t result = sub_25AB8D62C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_25AB7162C(uint64_t a1)
{
  return sub_25AB71654(a1, (uint64_t *)&unk_26A4A0F70, &qword_26A4A08A0, (uint64_t (*)(uint64_t *, unint64_t))sub_25AB1DDC8);
}

unint64_t sub_25AB71654(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t *, unint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = sub_25AC356D0();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_25AB4C944(v11, (uint64_t)&v20, a3);
    uint64_t v12 = v20;
    uint64_t v13 = v21;
    unint64_t result = sub_25AB8D62C(v20, v21);
    if (v15) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v16 = (uint64_t *)(v8[6] + 16 * result);
    uint64_t *v16 = v12;
    v16[1] = v13;
    unint64_t result = a4(&v22, v8[7] + 32 * result);
    uint64_t v17 = v8[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18) {
      goto LABEL_11;
    }
    void v8[2] = v19;
    v11 += 48;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_25AB71794(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0898);
  id v2 = (void *)sub_25AC356D0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unsigned int v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_25AB8D62C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_25AB718B8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0918);
  uint64_t v2 = sub_25AC356D0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v21 = v2 + 64;
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 136);
  while (1)
  {
    uint64_t v22 = v4;
    uint64_t v6 = *(v5 - 13);
    uint64_t v7 = *(v5 - 12);
    uint64_t v8 = *(v5 - 10);
    uint64_t v9 = *(v5 - 8);
    uint64_t v27 = *(v5 - 9);
    uint64_t v28 = *(v5 - 11);
    uint64_t v10 = *(v5 - 6);
    uint64_t v11 = *(v5 - 4);
    uint64_t v25 = *(v5 - 5);
    uint64_t v26 = *(v5 - 7);
    uint64_t v12 = *(v5 - 2);
    uint64_t v13 = *v5;
    uint64_t v23 = *(v5 - 1);
    uint64_t v24 = *(v5 - 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_25AB8D62C(v6, v7);
    if (v15) {
      break;
    }
    *(void *)(v21 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v16 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v16 = v6;
    v16[1] = v7;
    uint64_t v17 = (void *)(v3[7] + 96 * result);
    *uint64_t v17 = v28;
    v17[1] = v8;
    v17[2] = v27;
    v17[3] = v9;
    v17[4] = v26;
    v17[5] = v10;
    v17[6] = v25;
    v17[7] = v11;
    v17[8] = v24;
    v17[9] = v12;
    v17[10] = v23;
    v17[11] = v13;
    uint64_t v18 = v3[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_11;
    }
    v5 += 14;
    v3[2] = v20;
    uint64_t v4 = v22 - 1;
    if (v22 == 1)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_25AB71A70(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A08D8);
  uint64_t v2 = sub_25AC356D0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_25AB4C944(v6, (uint64_t)v15, &qword_26A4A08E0);
    unint64_t result = sub_25AB8D6A4((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_25AB1DDC8(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_25AB71BB4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0910);
  uint64_t v2 = (void *)sub_25AC356D0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_25AB8D62C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v10 = (uint64_t *)(v2[6] + 16 * result);
    *long long v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_25AB71CC8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A08C0);
  uint64_t v2 = (void *)sub_25AC356D0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_25AB8D62C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v10 = (uint64_t *)(v2[6] + 16 * result);
    *long long v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_25AB71DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25AC35140();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_25AC35130();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_25AB18FAC(a1, &qword_26A4A0070);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25AC350E0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_25AB71F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25AB71FD8(a1, a2, a3, (uint64_t)&unk_270885B40, &qword_26A4A08B8);
}

uint64_t sub_25AB71FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25AB71FD8(a1, a2, a3, (uint64_t)&unk_270885B68, &qword_26A4A08F8);
}

uint64_t sub_25AB71FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = sub_25AC35140();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) != 1)
  {
    sub_25AC35130();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_25AB18FAC(a1, &qword_26A4A0070);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25AC350E0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(a5);
  return swift_task_create();
}

uint64_t sub_25AB72188(uint64_t a1)
{
  int v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_25AB721CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a4;
  v5[10] = a5;
  uint64_t v6 = sub_25AC34C60();
  v5[11] = v6;
  v5[12] = *(void *)(v6 - 8);
  v5[13] = swift_task_alloc();
  uint64_t v7 = sub_25AC34CA0();
  v5[14] = v7;
  v5[15] = *(void *)(v7 - 8);
  v5[16] = swift_task_alloc();
  uint64_t v8 = sub_25AC34C50();
  v5[17] = v8;
  v5[18] = *(void *)(v8 - 8);
  v5[19] = swift_task_alloc();
  uint64_t v9 = sub_25AC34CC0();
  v5[20] = v9;
  v5[21] = *(void *)(v9 - 8);
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  uint64_t v10 = sub_25AC34C70();
  v5[24] = v10;
  v5[25] = *(void *)(v10 - 8);
  v5[26] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB7240C);
}

uint64_t sub_25AB7240C()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[12];
  sub_25AB4A328();
  unsigned int v25 = *MEMORY[0x263F8F080];
  uint64_t v23 = (void (**)(uint64_t, uint64_t))(v1 + 8);
  uint64_t v24 = *(void (**)(uint64_t, void, uint64_t))(v1 + 104);
  unsigned int v22 = *MEMORY[0x263F8F018];
  uint64_t v20 = (void (**)(void *, uint64_t))(v3 + 8);
  uint64_t v21 = (void (**)(void *, void, uint64_t))(v3 + 104);
  BOOL v19 = (void (**)(uint64_t, uint64_t))(v2 + 8);
  long long v17 = (void (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t v18 = (void (**)(uint64_t, uint64_t))(v5 + 8);
  for (uint64_t i = 1; i != 11; ++i)
  {
    uint64_t v7 = v0[26];
    uint64_t v8 = v0[24];
    uint64_t v9 = v0[22];
    uint64_t v10 = (void *)v0[19];
    uint64_t v26 = v0[20];
    uint64_t v11 = v0[17];
    uint64_t v28 = v0[23];
    uint64_t v29 = v0[16];
    uint64_t v32 = v0[13];
    uint64_t v12 = v0[10];
    uint64_t v33 = v0[11];
    uint64_t v34 = v0[14];
    uint64_t v27 = v0[9];
    v24(v7, v25, v8);
    uint64_t v31 = (void *)sub_25AC35350();
    (*v23)(v7, v8);
    sub_25AC34CB0();
    *uint64_t v10 = 1;
    (*v21)(v10, v22, v11);
    MEMORY[0x261150850](v9, v10);
    (*v20)(v10, v11);
    uint64_t v30 = *v19;
    (*v19)(v9, v26);
    uint64_t v13 = (void *)swift_allocObject();
    void v13[2] = v27;
    void v13[3] = v12;
    v13[4] = i;
    v0[6] = sub_25AB74C5C;
    v0[7] = v13;
    v0[2] = MEMORY[0x263EF8330];
    v0[3] = 1107296256;
    v0[4] = sub_25AB72188;
    v0[5] = &block_descriptor_2;
    uint64_t v14 = _Block_copy(v0 + 2);
    swift_retain();
    sub_25AC34C80();
    v0[8] = MEMORY[0x263F8EE78];
    sub_25AB74CC0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0460);
    sub_25AB6DFD0((unint64_t *)&qword_26A4A13B0, &qword_26A4A0460);
    sub_25AC35510();
    MEMORY[0x261150E40](v28, v29, v32, v14);
    _Block_release(v14);

    (*v18)(v32, v33);
    (*v17)(v29, v34);
    v30(v28, v26);
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_25AB727E4(uint64_t a1, unsigned int a2)
{
  switch((a2 >> 4) & 3)
  {
    case 1u:
      LOBYTE(a2) = a2 & 0xCF;
      uint64_t v2 = 0x20706154657270;
      goto LABEL_14;
    case 2u:
      LOBYTE(a2) = a2 & 0xCF;
      uint64_t v2 = 0x2070615474736F70;
LABEL_14:
      uint64_t v6 = v2;
      goto LABEL_15;
    case 3u:
      BOOL v3 = a2 == 48 && a1 == 1;
      uint64_t v4 = 0x73736563637573;
      if (!v3) {
        uint64_t v4 = 0x4870757472617473;
      }
      if (a1 | a2 ^ 0x30) {
        return v4;
      }
      else {
        return 0x7061546F6ELL;
      }
    default:
      uint64_t v6 = 0x6E6964616F4C6E6FLL;
LABEL_15:
      sub_25AB6FC58(a1, a2);
      sub_25AC34F60();
      swift_bridgeObjectRelease();
      return v6;
  }
}

uint64_t sub_25AB7291C(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0070);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v3 + 16);
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = a3;
  swift_retain();
  sub_25AB74948(v10);
  uint64_t v11 = sub_25AC35140();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = 0;
  *(void *)(v12 + 32) = v3;
  long long v13 = *a1;
  long long v14 = a1[1];
  *(_OWORD *)(v12 + 40) = *a1;
  *(_OWORD *)(v12 + 56) = v14;
  *(_OWORD *)(v12 + 72) = a1[2];
  *(void *)(v12 + 88) = a2;
  *(void *)(v12 + 96) = a3;
  long long v18 = v14;
  long long v19 = v13;
  char v15 = (void *)*((void *)a1 + 5);
  swift_retain();
  swift_retain();
  sub_25AB564C8((uint64_t)&v19);
  sub_25AB564C8((uint64_t)&v18);
  id v16 = v15;
  sub_25AC15E44((uint64_t)v9, (uint64_t)&unk_26A4A0908, v12);
  return swift_release();
}

uint64_t sub_25AB72A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[1770] = a7;
  v7[1769] = a6;
  v7[1768] = a5;
  v7[1767] = a4;
  uint64_t v8 = sub_25AC35640();
  v7[1771] = v8;
  v7[1772] = *(void *)(v8 - 8);
  v7[1773] = swift_task_alloc();
  v7[1774] = swift_task_alloc();
  v7[1775] = swift_task_alloc();
  v7[1776] = swift_task_alloc();
  v7[1777] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  v7[1778] = swift_task_alloc();
  v7[1779] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB72BC8);
}

uint64_t sub_25AB72BC8()
{
  uint64_t v23 = v0;
  *(void *)(v0 + 14240) = *(void *)(*(void *)(v0 + 14144) + 40);
  uint64_t v1 = (void *)sub_25AC33040();
  uint64_t v2 = sub_25AB751B4((uint64_t)v1);
  unsigned int v4 = v3;

  *(void *)(v0 + 14248) = v2;
  *(unsigned char *)(v0 + 354) = v4;
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 14232);
  uint64_t v6 = __swift_project_value_buffer(*(void *)(v0 + 14216), (uint64_t)qword_26A4A1CE8);
  *(void *)(v0 + 14256) = v6;
  sub_25AB4C944(v6, v5, &qword_26A49F9A0);
  uint64_t v7 = sub_25AC345E0();
  *(void *)(v0 + 14264) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)(v0 + 14272) = v8;
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  *(void *)(v0 + 14280) = v9;
  *(void *)(v0 + 14288) = (v8 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v9(v5, 1, v7) == 1)
  {
    sub_25AB18FAC(*(void *)(v0 + 14232), &qword_26A49F9A0);
  }
  else
  {
    uint64_t v10 = sub_25AC345C0();
    os_log_type_t v11 = sub_25AC352D0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v22 = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      uint64_t v14 = sub_25AB727E4(v2, v4);
      *(void *)(v0 + 14128) = sub_25AB56574(v14, v15, &v22);
      sub_25AC354A0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25AB11000, v10, v11, "mockAction - %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261151C20](v13, -1, -1);
      MEMORY[0x261151C20](v12, -1, -1);
    }

    (*(void (**)(void, uint64_t))(v8 + 8))(*(void *)(v0 + 14232), v7);
  }
  uint64_t v16 = sub_25AC35A10();
  uint64_t v18 = v17;
  sub_25AC35630();
  uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_26A4A1970 + dword_26A4A1970);
  long long v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 14296) = v19;
  *long long v19 = v0;
  v19[1] = sub_25AB72EF0;
  return v21(v16, v18, 0, 0, 1);
}

uint64_t sub_25AB72EF0()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 14208);
  uint64_t v4 = *(void *)(*(void *)v1 + 14176);
  uint64_t v5 = *(void *)(*(void *)v1 + 14168);
  v2[1788] = v0;
  swift_task_dealloc();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v2[1789] = v6;
  v2[1790] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v3, v5);
  if (v0) {
    uint64_t v7 = sub_25AB737E8;
  }
  else {
    uint64_t v7 = sub_25AB73078;
  }
  return MEMORY[0x270FA2498](v7);
}

uint64_t sub_25AB73078()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 354);
  unsigned int v2 = (v1 >> 4) & 3;
  if (v2 - 1 < 2)
  {
LABEL_5:
    uint64_t v7 = *(void (**)(uint64_t))(v0 + 14152);
    sub_25AB755BC(v0 + 4144);
    sub_25AB70A58((void *)(v0 + 4144), (void *)(v0 + 1736));
    v7(v0 + 1736);
    uint64_t v8 = (uint64_t (*)(void))sub_25AC34000();
    char v9 = v8();
    swift_release();
    if (v9)
    {
      id v10 = objc_msgSend(self, sel_standardUserDefaults);
      os_log_type_t v11 = (void *)sub_25AC34E10();
      uint64_t v12 = (uint64_t)objc_msgSend(v10, sel_integerForKey_, v11);
    }
    else
    {
      uint64_t v12 = 0;
    }
    uint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 14280);
    uint64_t v14 = *(void *)(v0 + 14264);
    uint64_t v15 = *(void *)(v0 + 14224);
    sub_25AB4C944(*(void *)(v0 + 14256), v15, &qword_26A49F9A0);
    if (v13(v15, 1, v14) == 1)
    {
      sub_25AB18FAC(*(void *)(v0 + 14224), &qword_26A49F9A0);
    }
    else
    {
      uint64_t v16 = sub_25AC345C0();
      os_log_type_t v17 = sub_25AC352D0();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v18 = 134217984;
        *(void *)(v0 + 14120) = v12;
        sub_25AC354A0();
        _os_log_impl(&dword_25AB11000, v16, v17, "mockTapDelay %ld", v18, 0xCu);
        MEMORY[0x261151C20](v18, -1, -1);
      }
      uint64_t v19 = *(void *)(v0 + 14272);
      uint64_t v20 = *(void *)(v0 + 14264);
      uint64_t v21 = *(void *)(v0 + 14224);

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
    }
    sub_25AC35630();
    uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_26A4A1970 + dword_26A4A1970);
    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 14328) = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_25AB73898;
    return v36(1000000000000000000 * v12, ((v12 >> 63) & 0xF21F494C589C0000)+ (((unint64_t)v12 * (unsigned __int128)0xDE0B6B3A7640000uLL) >> 64), 0, 0, 1);
  }
  if (v2)
  {
    if (*(void *)(v0 + 14248) & 0xFFFFFFFFFFFFFFFELL | v1 ^ 0x30)
    {
      uint64_t v24 = *(void **)(v0 + 14136);
      switch(v24[4])
      {
        case 0:
          unsigned int v25 = *(void (**)(uint64_t))(v0 + 14152);
          uint64_t v26 = v24[2];
          void v24[2] = 0;
          v24[3] = 0;
          v24[4] = 1;
          sub_25AB74948(v26);
          *(void *)(v0 + 13088) = 0;
          *(unsigned char *)(v0 + 13096) = 66;
          sub_25AB748D4(v0 + 13088);
          sub_25AB748E0(v0 + 13088, v0 + 12744);
          memcpy((void *)(v0 + 12400), (const void *)(v0 + 12744), 0x152uLL);
          nullsub_1(v0 + 12400);
          sub_25AB70A58((void *)(v0 + 12400), (void *)(v0 + 1392));
          v25(v0 + 1392);
          goto LABEL_24;
        case 1:
          uint64_t v27 = *(void (**)(uint64_t))(v0 + 14152);
          uint64_t v28 = v24[2];
          void v24[2] = 0;
          v24[3] = 0;
          v24[4] = 2;
          sub_25AB74948(v28);
          *(void *)(v0 + 12056) = 4;
          *(unsigned char *)(v0 + 12064) = 0x80;
          sub_25AB748D4(v0 + 12056);
          sub_25AB748E0(v0 + 12056, v0 + 11712);
          memcpy((void *)(v0 + 11368), (const void *)(v0 + 11712), 0x152uLL);
          nullsub_1(v0 + 11368);
          sub_25AB70A58((void *)(v0 + 11368), (void *)(v0 + 1048));
          v27(v0 + 1048);
          goto LABEL_24;
        case 2:
          uint64_t v29 = *(void (**)(uint64_t))(v0 + 14152);
          uint64_t v30 = v24[2];
          void v24[2] = 0;
          v24[3] = 0;
          v24[4] = 3;
          sub_25AB74948(v30);
          *(void *)(v0 + 11024) = 4;
          *(unsigned char *)(v0 + 11032) = 0x80;
          sub_25AB748D4(v0 + 11024);
          sub_25AB748E0(v0 + 11024, v0 + 10680);
          memcpy((void *)(v0 + 10336), (const void *)(v0 + 10680), 0x152uLL);
          nullsub_1(v0 + 10336);
          sub_25AB70A58((void *)(v0 + 10336), (void *)(v0 + 704));
          v29(v0 + 704);
          goto LABEL_24;
        case 3:
          uint64_t v31 = *(void (**)(uint64_t))(v0 + 14152);
          uint64_t v32 = v24[2];
          void v24[2] = 0;
          v24[3] = 0;
          v24[4] = 4;
          sub_25AB74948(v32);
          *(void *)(v0 + 9992) = 4;
          *(unsigned char *)(v0 + 10000) = 0x80;
          sub_25AB748D4(v0 + 9992);
          sub_25AB748E0(v0 + 9992, v0 + 9648);
          memcpy((void *)(v0 + 9304), (const void *)(v0 + 9648), 0x152uLL);
          nullsub_1(v0 + 9304);
          sub_25AB70A58((void *)(v0 + 9304), (void *)(v0 + 360));
          v31(v0 + 360);
          goto LABEL_24;
        case 4:
          uint64_t v33 = *(void (**)(uint64_t))(v0 + 14152);
          uint64_t v34 = v24[2];
          void v24[2] = 0;
          v24[3] = 0;
          v24[4] = 5;
          sub_25AB74948(v34);
          *(void *)(v0 + 8960) = 666;
          *(unsigned char *)(v0 + 8968) = 64;
          sub_25AB748D4(v0 + 8960);
          sub_25AB748E0(v0 + 8960, v0 + 8616);
          memcpy((void *)(v0 + 8272), (const void *)(v0 + 8616), 0x152uLL);
          nullsub_1(v0 + 8272);
          sub_25AB70A58((void *)(v0 + 8272), (void *)(v0 + 16));
          v33(v0 + 16);
          goto LABEL_24;
        default:
          v24[4] = 0;
          goto LABEL_5;
      }
    }
    goto LABEL_5;
  }
  uint64_t v3 = *(void *)(v0 + 14248);
  uint64_t v4 = *(void (**)(uint64_t))(v0 + 14152);
  uint64_t v5 = *(void *)(v0 + 14136);
  uint64_t v6 = *(void *)(v5 + 16);
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  sub_25AB74948(v6);
  *(void *)(v0 + 3800) = v3;
  *(unsigned char *)(v0 + 3808) = v1;
  sub_25AB748D4(v0 + 3800);
  sub_25AB748E0(v0 + 3800, v0 + 7928);
  memcpy((void *)(v0 + 13432), (const void *)(v0 + 7928), 0x152uLL);
  nullsub_1(v0 + 13432);
  sub_25AB70A58((void *)(v0 + 13432), (void *)(v0 + 3456));
  v4(v0 + 3456);
LABEL_24:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = *(uint64_t (**)(void))(v0 + 8);
  return v35();
}

uint64_t sub_25AB737E8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB73898()
{
  unsigned int v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 14312);
  uint64_t v3 = *(void *)(*(void *)v1 + 14200);
  uint64_t v4 = *(void *)(*(void *)v1 + 14168);
  *(void *)(*(void *)v1 + 14336) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0) {
    uint64_t v5 = sub_25AB73CF8;
  }
  else {
    uint64_t v5 = sub_25AB73A18;
  }
  return MEMORY[0x270FA2498](v5);
}

uint64_t sub_25AB73A18()
{
  unsigned int v1 = *(char *)(v0 + 354);
  int v2 = (v1 >> 4) & 3;
  if (v2 == 1)
  {
    char v7 = v1 & 0xCF;
    uint64_t v8 = *(void *)(v0 + 14248);
    if ((v1 & 0x80000000) != 0 && (v1 & 0xCF) == 0x80 && v8 == 6)
    {
      sub_25AC35630();
      uint64_t v15 = (char *)&dword_26A4A1970 + dword_26A4A1970;
      id v10 = (void *)swift_task_alloc();
      *(void *)(v0 + 14360) = v10;
      *id v10 = v0;
      v10[1] = sub_25AB741D0;
      uint64_t v5 = 5000000000000000000;
      goto LABEL_5;
    }
    os_log_type_t v11 = *(void (**)(uint64_t))(v0 + 14152);
    uint64_t v12 = *(void *)(v0 + 14136);
    uint64_t v13 = *(void *)(v12 + 16);
    *(void *)(v12 + 16) = 0;
    *(void *)(v12 + 24) = 0;
    sub_25AB74948(v13);
    *(void *)(v0 + 7584) = v8;
    *(unsigned char *)(v0 + 7592) = v7;
    sub_25AB748D4(v0 + 7584);
    sub_25AB748E0(v0 + 7584, v0 + 7240);
    memcpy((void *)(v0 + 6896), (const void *)(v0 + 7240), 0x152uLL);
    nullsub_1(v0 + 6896);
    sub_25AB70A58((void *)(v0 + 6896), (void *)(v0 + 2080));
    v11(v0 + 2080);
  }
  else if (v2 == 2 || *(void *)(v0 + 14248) | *(unsigned __int8 *)(v0 + 354) ^ 0x30)
  {
    uint64_t v3 = *(void (**)(uint64_t))(v0 + 14152);
    sub_25AB755F8(v0 + 4488);
    sub_25AB70A58((void *)(v0 + 4488), (void *)(v0 + 2424));
    v3(v0 + 2424);
    sub_25AC35630();
    uint64_t v15 = (char *)&dword_26A4A1970 + dword_26A4A1970;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 14344) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_25AB73DA8;
    uint64_t v5 = 2000000000000000000;
LABEL_5:
    return ((uint64_t (*)(uint64_t, void, void, void, uint64_t))v15)(v5, 0, 0, 0, 1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_25AB73CF8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unsigned int v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB73DA8()
{
  int v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 14312);
  uint64_t v3 = *(void *)(*(void *)v1 + 14192);
  uint64_t v4 = *(void *)(*(void *)v1 + 14168);
  *(void *)(*(void *)v1 + 14352) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0) {
    uint64_t v5 = sub_25AB74120;
  }
  else {
    uint64_t v5 = sub_25AB73F28;
  }
  return MEMORY[0x270FA2498](v5);
}

uint64_t sub_25AB73F28()
{
  char v1 = *(unsigned char *)(v0 + 354);
  int v2 = *(void (**)(uint64_t))(v0 + 14152);
  uint64_t v3 = *(void *)(v0 + 14136);
  if ((v1 & 0x30) == 0x20)
  {
    uint64_t v4 = *(void *)(v0 + 14248);
    uint64_t v5 = *(void *)(v3 + 16);
    char v6 = v1 & 0xCF;
    *(void *)(v3 + 16) = 0;
    *(void *)(v3 + 24) = 0;
    sub_25AB74948(v5);
    *(void *)(v0 + 6552) = v4;
    *(unsigned char *)(v0 + 6560) = v6;
    sub_25AB748D4(v0 + 6552);
    sub_25AB748E0(v0 + 6552, v0 + 6208);
    memcpy((void *)(v0 + 5864), (const void *)(v0 + 6208), 0x152uLL);
    nullsub_1(v0 + 5864);
    sub_25AB70A58((void *)(v0 + 5864), (void *)(v0 + 3112));
    v2(v0 + 3112);
  }
  else
  {
    sub_25AB75634(v0 + 13776);
    memcpy((void *)(v0 + 5520), (const void *)(v0 + 13776), 0x151uLL);
    sub_25AB75B30(v0 + 5520);
    sub_25AB748E0(v0 + 5520, v0 + 5176);
    memcpy((void *)(v0 + 4832), (const void *)(v0 + 5176), 0x152uLL);
    nullsub_1(v0 + 4832);
    sub_25AB70A58((void *)(v0 + 4832), (void *)(v0 + 2768));
    v2(v0 + 2768);
    sub_25AB36048(v0 + 13776);
    uint64_t v7 = *(void *)(v3 + 16);
    *(void *)(v3 + 16) = 0;
    *(void *)(v3 + 24) = 0;
    sub_25AB74948(v7);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_25AB74120()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB741D0()
{
  int v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 14312);
  uint64_t v3 = *(void *)(*(void *)v1 + 14184);
  uint64_t v4 = *(void *)(*(void *)v1 + 14168);
  *(void *)(*(void *)v1 + 14368) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0) {
    uint64_t v5 = sub_25AB74498;
  }
  else {
    uint64_t v5 = sub_25AB74350;
  }
  return MEMORY[0x270FA2498](v5);
}

uint64_t sub_25AB74350()
{
  uint64_t v1 = *(void *)(v0 + 14248);
  int v2 = *(void (**)(uint64_t))(v0 + 14152);
  uint64_t v3 = *(void *)(v0 + 14136);
  char v4 = *(unsigned char *)(v0 + 354) & 0xCF;
  uint64_t v5 = *(void *)(v3 + 16);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  sub_25AB74948(v5);
  *(void *)(v0 + 7584) = v1;
  *(unsigned char *)(v0 + 7592) = v4;
  sub_25AB748D4(v0 + 7584);
  sub_25AB748E0(v0 + 7584, v0 + 7240);
  memcpy((void *)(v0 + 6896), (const void *)(v0 + 7240), 0x152uLL);
  nullsub_1(v0 + 6896);
  sub_25AB70A58((void *)(v0 + 6896), (void *)(v0 + 2080));
  v2(v0 + 2080);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_25AB74498()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB74548()
{
  sub_25AB74948(*(void *)(v0 + 16));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SimulatedCardReader()
{
  return self;
}

uint64_t sub_25AB745A4()
{
  return 0x302E31206D6973;
}

uint64_t sub_25AB745BC()
{
  return 0x65732D6D6973;
}

double sub_25AB745D0@<D0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_25AC3B680;
  *(_OWORD *)(a1 + 16) = xmmword_25AC3B690;
  *(_WORD *)(a1 + 32) = 257;
  *(unsigned char *)(a1 + 34) = 1;
  *(_DWORD *)(a1 + 35) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 40) = xmmword_25AC37A40;
  return result;
}

uint64_t sub_25AB74608()
{
  unint64_t v0 = sub_25AB71794(MEMORY[0x263F8EE78]);
  return sub_25AB8DA34(v0);
}

uint64_t sub_25AB7463C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v6[2] = a4;
  v6[3] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0070);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = *v5;
  v6[4] = v7;
  v6[5] = v8;
  return MEMORY[0x270FA2498](sub_25AB746D4);
}

uint64_t sub_25AB746D4()
{
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  *(void *)(v0[5] + 32) = 0;
  uint64_t v4 = sub_25AC35140();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 1, 1, v4);
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = 0;
  v5[3] = 0;
  v5[4] = v3;
  v5[5] = v2;
  swift_retain();
  sub_25AB71DDC(v1, (uint64_t)&unk_26A4A0880, (uint64_t)v5);
  swift_release();
  swift_task_dealloc();
  char v6 = (uint64_t (*)(void, unint64_t))v0[1];
  return v6(0, 0xE000000000000000);
}

uint64_t sub_25AB747E0()
{
  return 0;
}

uint64_t sub_25AB747EC(long long *a1, uint64_t a2, uint64_t a3)
{
  return sub_25AB7291C(a1, a2, a3);
}

BOOL sub_25AB74810(unsigned __int8 a1)
{
  uint64_t v2 = *(void (**)(unsigned char *))(*(void *)v1 + 16);
  if (v2)
  {
    uint64_t v4 = a1;
    char v5 = 0;
    sub_25AB748D4((uint64_t)&v4);
    sub_25AB748E0((uint64_t)&v4, (uint64_t)__src);
    memcpy(__dst, __src, 0x152uLL);
    nullsub_1(__dst);
    sub_25AB70A58(__dst, v8);
    swift_retain();
    v2(v8);
    sub_25AB74948((uint64_t)v2);
  }
  return v2 != 0;
}

unint64_t sub_25AB748B8()
{
  return 0xD000000000000013;
}

uint64_t sub_25AB748D4(uint64_t result)
{
  *(unsigned char *)(result + 337) = 1;
  return result;
}

uint64_t sub_25AB748E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0848);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25AB74948(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_25AB74958()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25AB74998(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_25AB24B20;
  return sub_25AB721CC(a1, v4, v5, v7, v6);
}

uint64_t sub_25AB74A58(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25AB75B40;
  return v6(a1);
}

uint64_t sub_25AB74B34()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25AB74B6C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25AB25F50;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26A4A0888 + dword_26A4A0888);
  return v6(a1, v4);
}

uint64_t sub_25AB74C24()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25AB74C5C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t result = 10 * v1;
  if ((unsigned __int128)(v1 * (__int128)10) >> 64 == (10 * v1) >> 63) {
    return (*(uint64_t (**)(void))(v0 + 16))();
  }
  __break(1u);
  return result;
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

unint64_t sub_25AB74CC0()
{
  unint64_t result = qword_26A4A13A0;
  if (!qword_26A4A13A0)
  {
    sub_25AC34C60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A13A0);
  }
  return result;
}

uint64_t sub_25AB74D18(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_25AB74DF8;
  return v5(v2 + 32);
}

uint64_t sub_25AB74DF8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  unsigned char *v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_25AB74F0C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25AB25F50;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26A4A08A8 + dword_26A4A08A8);
  return v6(a1, v4);
}

uint64_t sub_25AB74FC4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25AB25F50;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26A4A08E8 + dword_26A4A08E8);
  return v6(a1, v4);
}

uint64_t sub_25AB7507C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return MEMORY[0x270FA0238](v0, 104, 7);
}

uint64_t sub_25AB750DC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (uint64_t)(v1 + 5);
  uint64_t v9 = v1[11];
  uint64_t v8 = v1[12];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_25AB24B20;
  return sub_25AB72A90(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_25AB751B4(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
  objc_msgSend(v2, sel_setGeneratesDecimalNumbers_, 1);
  objc_msgSend(v2, sel_setMinimumFractionDigits_, 2);
  objc_msgSend(v2, sel_setMaximumFractionDigits_, 2);
  id v3 = objc_msgSend(v2, sel_stringFromNumber_, a1);
  if (!v3)
  {

    return 1;
  }
  uint64_t v4 = v3;
  uint64_t v5 = sub_25AC34E40();
  uint64_t v7 = v6;

  BOOL v8 = v5 == 0x31302E3833 && v7 == 0xE500000000000000;
  if (v8 || (sub_25AC35870() & 1) != 0)
  {

    swift_bridgeObjectRelease();
    return 0;
  }
  BOOL v10 = v5 == 0x32302E3833 && v7 == 0xE500000000000000;
  if (v10 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    return 2;
  }
  if (v5 == 0x33302E3833 && v7 == 0xE500000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    return 10;
  }
  if (v5 == 0x35302E3833 && v7 == 0xE500000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    return 3;
  }
  if (v5 == 0x36302E3833 && v7 == 0xE500000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    return 6;
  }
  if (v5 == 0x34302E3733 && v7 == 0xE500000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    return 8;
  }
  if (v5 == 0x35302E3733 && v7 == 0xE500000000000000 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    return 7;
  }
  os_log_type_t v11 = (uint64_t (*)(void))sub_25AC34000();
  char v12 = v11();
  swift_release();
  if ((v12 & 1) == 0)
  {

    swift_bridgeObjectRelease();
    return 1;
  }
  if (v5 == 0x31302E3633 && v7 == 0xE500000000000000)
  {

    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v13 = sub_25AC35870();

    swift_bridgeObjectRelease();
    if (v13) {
      return 2;
    }
    else {
      return 1;
    }
  }
}

double sub_25AB755BC(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 336) = -256;
  return result;
}

double sub_25AB755F8(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 336) = -512;
  return result;
}

uint64_t sub_25AB75634@<X0>(uint64_t a1@<X8>)
{
  id v2 = (uint64_t (*)(void))sub_25AC34000();
  char v3 = v2();
  swift_release();
  if (v3)
  {
    id v4 = objc_msgSend(self, sel_standardUserDefaults);
    uint64_t v5 = (void *)sub_25AC34E10();
    unsigned __int8 v6 = objc_msgSend(v4, sel_BOOLForKey_, v5);
  }
  else
  {
    unsigned __int8 v6 = 0;
  }
  uint64_t v7 = (uint64_t (*)(void))sub_25AC34000();
  char v8 = v7();
  swift_release();
  if ((v8 & 1) != 0
    && (id v9 = objc_msgSend(self, sel_standardUserDefaults),
        BOOL v10 = (void *)sub_25AC34E10(),
        id v11 = objc_msgSend(v9, sel_stringForKey_, v10),
        v9,
        v10,
        v11))
  {
    uint64_t v12 = sub_25AC34E40();
    unint64_t v14 = v13;
  }
  else
  {
    uint64_t v12 = 0;
    unint64_t v14 = 0xE000000000000000;
  }
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = v12 & 0xFFFFFFFFFFFFLL;
  }
  unsigned __int8 v62 = v6;
  if (v15)
  {
    uint64_t v51 = v12;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v51 = 0;
    unint64_t v14 = 0xE000000000000000;
  }
  uint64_t v16 = sub_25AC33020();
  uint64_t v60 = v17;
  uint64_t v61 = v16;
  uint64_t v18 = sub_25AB69FFC((uint64_t)&unk_270881FF0);
  unint64_t v20 = v19;
  uint64_t v21 = sub_25AC32390();
  uint64_t v58 = v22;
  uint64_t v59 = v21;
  sub_25AB16958(v18, v20);
  uint64_t v23 = sub_25AB67388(0x617461642D6D6973uLL, 0xE800000000000000);
  unint64_t v25 = v24;
  uint64_t v26 = sub_25AC32390();
  uint64_t v56 = v27;
  uint64_t v57 = v26;
  sub_25AB16958(v23, v25);
  uint64_t v28 = sub_25AB67388(0x617461642D6D6973uLL, 0xE800000000000000);
  unint64_t v30 = v29;
  uint64_t v31 = sub_25AC32390();
  uint64_t v54 = v32;
  uint64_t v55 = v31;
  sub_25AB16958(v28, v30);
  uint64_t v33 = sub_25AB67388(0x6463672D6D6973uLL, 0xE700000000000000);
  unint64_t v35 = v34;
  uint64_t v36 = sub_25AC32390();
  uint64_t v52 = v37;
  uint64_t v53 = v36;
  sub_25AB16958(v33, v35);
  uint64_t v38 = sub_25AB67388(0x657474612D6D6973uLL, 0xEA00000000007473);
  unint64_t v40 = v39;
  uint64_t v41 = sub_25AC32390();
  uint64_t v43 = v42;
  sub_25AB16958(v38, v40);
  uint64_t v44 = sub_25AB67388(0x647361632D6D6973uLL, 0xE800000000000000);
  unint64_t v46 = v45;
  sub_25AB69A94(v44, v45);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A07C0);
  sub_25AB6DFD0((unint64_t *)&qword_26A4A07C8, &qword_26A4A07C0);
  uint64_t v47 = sub_25AC34DE0();
  uint64_t v49 = v48;
  swift_bridgeObjectRelease();
  uint64_t result = sub_25AB16958(v44, v46);
  *(void *)a1 = v61;
  *(void *)(a1 + 8) = v60;
  *(void *)(a1 + 16) = 1634953558;
  *(void *)(a1 + 24) = 0xE400000000000000;
  *(unsigned char *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = v59;
  *(void *)(a1 + 48) = v58;
  *(unsigned char *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = v57;
  *(void *)(a1 + 72) = v56;
  *(void *)(a1 + 80) = v55;
  *(void *)(a1 + 88) = v54;
  *(void *)(a1 + 96) = v53;
  *(void *)(a1 + 104) = v52;
  *(void *)(a1 + 112) = v41;
  *(void *)(a1 + 120) = v43;
  *(void *)(a1 + 128) = v47;
  *(void *)(a1 + 136) = v49;
  *(void *)(a1 + 144) = 0x6B656B2D6D6973;
  *(void *)(a1 + 152) = 0xE700000000000000;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0xE000000000000000;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0xE000000000000000;
  *(unsigned char *)(a1 + 192) = v62;
  *(_DWORD *)(a1 + 193) = 65793;
  strcpy((char *)(a1 + 200), "000000000000");
  *(unsigned char *)(a1 + 213) = 0;
  *(_WORD *)(a1 + 214) = -5120;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  *(unsigned char *)(a1 + 232) = -4;
  *(void *)(a1 + 240) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 248) = v51;
  *(void *)(a1 + 256) = v14;
  *(unsigned char *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0x676E69662D6D6973;
  *(void *)(a1 + 280) = 0xEF746E6972707265;
  *(void *)(a1 + 288) = 0;
  *(unsigned char *)(a1 + 296) = 1;
  *(void *)(a1 + 304) = 0;
  *(unsigned char *)(a1 + 312) = 1;
  *(void *)(a1 + 320) = 0x417961702D6D6973;
  *(void *)(a1 + 328) = 0xEA00000000007070;
  *(unsigned char *)(a1 + 336) = 0;
  return result;
}

uint64_t sub_25AB75B30(uint64_t result)
{
  *(unsigned char *)(result + 337) = 0;
  return result;
}

uint64_t sub_25AB75B44(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 56) = a5;
  *(void *)(v6 + 64) = v5;
  *(void *)(v6 + 40) = a2;
  *(void *)(v6 + 48) = a4;
  *(unsigned char *)(v6 + 120) = a3;
  *(void *)(v6 + 32) = a1;
  uint64_t v7 = sub_25AC328E0();
  *(void *)(v6 + 72) = v7;
  *(void *)(v6 + 80) = *(void *)(v7 - 8);
  *(void *)(v6 + 88) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB75C10);
}

uint64_t sub_25AB75C10()
{
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  char v5 = *(unsigned char *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);
  long long v12 = *(_OWORD *)(v0 + 48);
  sub_25AC326F0();
  sub_25AC32870();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v0 + 96) = v8;
  *(_OWORD *)(v8 + 16) = v12;
  *(void *)(v8 + 32) = v4;
  *(void *)(v8 + 40) = v7;
  *(void *)(v8 + 48) = v6;
  *(unsigned char *)(v8 + 56) = v5;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0858);
  void *v9 = v0;
  v9[1] = sub_25AB75D78;
  return MEMORY[0x270FA2360](v0 + 16, 0, 0, 0xD00000000000002BLL, 0x800000025AC3EE00, sub_25AB76F9C, v8, v10);
}

uint64_t sub_25AB75D78()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_25AB75F04;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_25AB75E94;
  }
  return MEMORY[0x270FA2498](v2);
}

uint64_t sub_25AB75E94()
{
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v2, v1);
}

uint64_t sub_25AB75F04()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB75F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v21 = a7;
  uint64_t v19 = a5;
  uint64_t v20 = a6;
  uint64_t v10 = sub_25AC328E0();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A09A8);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v18 = a1;
  v15(v14, a1, v11);
  type metadata accessor for SPRInstallDelegate();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v16 + OBJC_IVAR____TtC21ProximityReaderDaemon18SPRInstallDelegate_continuation, v14, v11);
  swift_retain();
  sub_25AB4FE00(v19, v20, v21, v16);
  return swift_release();
}

uint64_t type metadata accessor for SPRConfigTask()
{
  return self;
}

uint64_t sub_25AB76264(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25AC328E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AC326F0();
  sub_25AC32850();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v4, (uint64_t)qword_26A4A1CE8);
  sub_25AB150E0(v11, (uint64_t)v6);
  uint64_t v12 = sub_25AC345E0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v6, 1, v12) == 1)
  {
    sub_25AB15148((uint64_t)v6);
  }
  else
  {
    unint64_t v14 = sub_25AC345C0();
    os_log_type_t v15 = sub_25AC352D0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_25AB11000, v14, v15, "Kernel installed successfully", v16, 2u);
      MEMORY[0x261151C20](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v12);
  }
  v18[0] = a1;
  v18[1] = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A09A8);
  return sub_25AC35100();
}

uint64_t sub_25AB7650C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_project_value_buffer(v4, (uint64_t)qword_26A4A1CE8);
  sub_25AB150E0(v7, (uint64_t)v6);
  uint64_t v8 = sub_25AC345E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = &off_265482000;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_25AB15148((uint64_t)v6);
  }
  else
  {
    id v11 = a1;
    uint64_t v12 = sub_25AC345C0();
    int v13 = sub_25AC352D0();
    if (os_log_type_enabled(v12, (os_log_type_t)v13))
    {
      int v34 = v13;
      unint64_t v35 = a1;
      uint64_t v36 = v2;
      uint64_t v14 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v38 = v33;
      *(_DWORD *)uint64_t v14 = 136315394;
      id v15 = objc_msgSend(v11, sel_kernelsInstalled);
      uint64_t v16 = MEMORY[0x263F8D310];
      uint64_t v17 = sub_25AC35080();

      uint64_t v18 = MEMORY[0x261150BD0](v17, v16);
      unint64_t v20 = v19;
      swift_bridgeObjectRelease();
      uint64_t v37 = sub_25AB56574(v18, v20, &v38);
      sub_25AC354A0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      id v21 = objc_msgSend(v11, sel_countryCode);
      if (v21)
      {
        uint64_t v22 = v21;
        uint64_t v23 = sub_25AC34E40();
        unint64_t v25 = v24;
      }
      else
      {
        unint64_t v25 = 0xE500000000000000;
        uint64_t v23 = 0x7974706D65;
      }
      uint64_t v37 = sub_25AB56574(v23, v25, &v38);
      sub_25AC354A0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25AB11000, v12, (os_log_type_t)v34, "installData - kernelsInstalled: %s, countryCode: %s", (uint8_t *)v14, 0x16u);
      uint64_t v26 = v33;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v26, -1, -1);
      MEMORY[0x261151C20](v14, -1, -1);

      a1 = v35;
      uint64_t v10 = &off_265482000;
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  id v27 = [a1 (SEL)v10[189]];
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v29 = sub_25AC34E40();
    uint64_t v31 = v30;
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v31 = 0;
  }
  sub_25AB76264(v29, v31);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB76928(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25AC328E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AC326F0();
  sub_25AC32850();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v4, (uint64_t)qword_26A4A1CE8);
  sub_25AB150E0(v11, (uint64_t)v6);
  uint64_t v12 = sub_25AC345E0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v6, 1, v12) == 1)
  {
    sub_25AB15148((uint64_t)v6);
  }
  else
  {
    id v14 = a1;
    id v15 = a1;
    uint64_t v16 = sub_25AC345C0();
    os_log_type_t v17 = sub_25AC352C0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      id v27 = (void *)swift_slowAlloc();
      uint64_t v28 = v2;
      *(_DWORD *)uint64_t v18 = 138543362;
      id v19 = a1;
      uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v29 = v20;
      sub_25AC354A0();
      id v21 = v27;
      *id v27 = v20;

      _os_log_impl(&dword_25AB11000, v16, v17, "Kernel install failed with error: [ %{public}@ ]", v18, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A8);
      swift_arrayDestroy();
      MEMORY[0x261151C20](v21, -1, -1);
      MEMORY[0x261151C20](v18, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v12);
  }
  uint64_t v22 = sub_25AB6D704(a1);
  sub_25AC325C0();
  sub_25AB66A58();
  uint64_t v23 = swift_allocError();
  *unint64_t v24 = v22;
  uint64_t v29 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A09A8);
  return sub_25AC350F0();
}

uint64_t sub_25AB76D84()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21ProximityReaderDaemon18SPRInstallDelegate_continuation;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A09A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_25AB76E30()
{
  return type metadata accessor for SPRInstallDelegate();
}

uint64_t type metadata accessor for SPRInstallDelegate()
{
  uint64_t result = qword_26A4A0990;
  if (!qword_26A4A0990) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_25AB76E84()
{
  sub_25AB76F24();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_25AB76F24()
{
  if (!qword_26A4A09A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A4A0858);
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26A4A00C0);
    unint64_t v0 = sub_25AC35110();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A4A09A0);
    }
  }
}

uint64_t sub_25AB76F9C(uint64_t a1)
{
  return sub_25AB75F70(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56));
}

uint64_t sub_25AB76FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = sub_25AC35640();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  v4[6] = swift_task_alloc();
  v4[7] = swift_task_alloc();
  unsigned char v4[8] = swift_task_alloc();
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB770E0);
}

uint64_t sub_25AB770E0()
{
  sub_25AC35630();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_26A4A1970 + dword_26A4A1970);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25AB771A8;
  return v3(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_25AB771A8()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 112);
  uint64_t v4 = *(void *)(*(void *)v1 + 32);
  uint64_t v5 = *(void *)(*(void *)v1 + 24);
  v2[16] = v0;
  swift_task_dealloc();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v2[17] = v6;
  v2[18] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v3, v5);
  if (v0) {
    uint64_t v7 = sub_25AB7759C;
  }
  else {
    uint64_t v7 = sub_25AB7732C;
  }
  return MEMORY[0x270FA2498](v7);
}

uint64_t sub_25AB7732C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void (**)(uint64_t))(v1 + 16);
  v0[19] = v2;
  v0[20] = *(void *)(v1 + 24);
  v2(10);
  sub_25AC35630();
  uint64_t v5 = (char *)&dword_26A4A1970 + dword_26A4A1970;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[21] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_25AB7741C;
  return ((uint64_t (*)(uint64_t, void, void, void, uint64_t))v5)(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_25AB7741C()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 136);
  uint64_t v3 = *(void *)(*(void *)v1 + 104);
  uint64_t v4 = *(void *)(*(void *)v1 + 24);
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0) {
    uint64_t v5 = sub_25AB778E0;
  }
  else {
    uint64_t v5 = sub_25AB77680;
  }
  return MEMORY[0x270FA2498](v5);
}

uint64_t sub_25AB7759C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB77680()
{
  (*(void (**)(uint64_t))(v0 + 152))(20);
  sub_25AC35630();
  uint64_t v3 = (char *)&dword_26A4A1970 + dword_26A4A1970;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25AB77760;
  return ((uint64_t (*)(uint64_t, void, void, void, uint64_t))v3)(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_25AB77760()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 136);
  uint64_t v3 = *(void *)(*(void *)v1 + 96);
  uint64_t v4 = *(void *)(*(void *)v1 + 24);
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0) {
    uint64_t v5 = sub_25AB77C24;
  }
  else {
    uint64_t v5 = sub_25AB779C4;
  }
  return MEMORY[0x270FA2498](v5);
}

uint64_t sub_25AB778E0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB779C4()
{
  (*(void (**)(uint64_t))(v0 + 152))(30);
  sub_25AC35630();
  uint64_t v3 = (char *)&dword_26A4A1970 + dword_26A4A1970;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25AB77AA4;
  return ((uint64_t (*)(uint64_t, void, void, void, uint64_t))v3)(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_25AB77AA4()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 136);
  uint64_t v3 = *(void *)(*(void *)v1 + 88);
  uint64_t v4 = *(void *)(*(void *)v1 + 24);
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0) {
    uint64_t v5 = sub_25AB77F68;
  }
  else {
    uint64_t v5 = sub_25AB77D08;
  }
  return MEMORY[0x270FA2498](v5);
}

uint64_t sub_25AB77C24()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB77D08()
{
  (*(void (**)(uint64_t))(v0 + 152))(40);
  sub_25AC35630();
  uint64_t v3 = (char *)&dword_26A4A1970 + dword_26A4A1970;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25AB77DE8;
  return ((uint64_t (*)(uint64_t, void, void, void, uint64_t))v3)(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_25AB77DE8()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 136);
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(*(void *)v1 + 24);
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0) {
    uint64_t v5 = sub_25AB782AC;
  }
  else {
    uint64_t v5 = sub_25AB7804C;
  }
  return MEMORY[0x270FA2498](v5);
}

uint64_t sub_25AB77F68()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB7804C()
{
  (*(void (**)(uint64_t))(v0 + 152))(50);
  sub_25AC35630();
  uint64_t v3 = (char *)&dword_26A4A1970 + dword_26A4A1970;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25AB7812C;
  return ((uint64_t (*)(uint64_t, void, void, void, uint64_t))v3)(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_25AB7812C()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 136);
  uint64_t v3 = *(void *)(*(void *)v1 + 72);
  uint64_t v4 = *(void *)(*(void *)v1 + 24);
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0) {
    uint64_t v5 = sub_25AB785F0;
  }
  else {
    uint64_t v5 = sub_25AB78390;
  }
  return MEMORY[0x270FA2498](v5);
}

uint64_t sub_25AB782AC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB78390()
{
  (*(void (**)(uint64_t))(v0 + 152))(60);
  sub_25AC35630();
  uint64_t v3 = (char *)&dword_26A4A1970 + dword_26A4A1970;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25AB78470;
  return ((uint64_t (*)(uint64_t, void, void, void, uint64_t))v3)(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_25AB78470()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 136);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = *(void *)(*(void *)v1 + 24);
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0) {
    uint64_t v5 = sub_25AB78934;
  }
  else {
    uint64_t v5 = sub_25AB786D4;
  }
  return MEMORY[0x270FA2498](v5);
}

uint64_t sub_25AB785F0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB786D4()
{
  (*(void (**)(uint64_t))(v0 + 152))(70);
  sub_25AC35630();
  uint64_t v3 = (char *)&dword_26A4A1970 + dword_26A4A1970;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25AB787B4;
  return ((uint64_t (*)(uint64_t, void, void, void, uint64_t))v3)(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_25AB787B4()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 136);
  uint64_t v3 = *(void *)(*(void *)v1 + 56);
  uint64_t v4 = *(void *)(*(void *)v1 + 24);
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0) {
    uint64_t v5 = sub_25AB78C78;
  }
  else {
    uint64_t v5 = sub_25AB78A18;
  }
  return MEMORY[0x270FA2498](v5);
}

uint64_t sub_25AB78934()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB78A18()
{
  (*(void (**)(uint64_t))(v0 + 152))(80);
  sub_25AC35630();
  uint64_t v3 = (char *)&dword_26A4A1970 + dword_26A4A1970;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25AB78AF8;
  return ((uint64_t (*)(uint64_t, void, void, void, uint64_t))v3)(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_25AB78AF8()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 136);
  uint64_t v3 = *(void *)(*(void *)v1 + 48);
  uint64_t v4 = *(void *)(*(void *)v1 + 24);
  *(void *)(*(void *)v1 + 288) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0) {
    uint64_t v5 = sub_25AB78FBC;
  }
  else {
    uint64_t v5 = sub_25AB78D5C;
  }
  return MEMORY[0x270FA2498](v5);
}

uint64_t sub_25AB78C78()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB78D5C()
{
  (*(void (**)(uint64_t))(v0 + 152))(90);
  sub_25AC35630();
  uint64_t v3 = (char *)&dword_26A4A1970 + dword_26A4A1970;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25AB78E3C;
  return ((uint64_t (*)(uint64_t, void, void, void, uint64_t))v3)(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_25AB78E3C()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 136);
  uint64_t v3 = *(void *)(*(void *)v1 + 40);
  uint64_t v4 = *(void *)(*(void *)v1 + 24);
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0) {
    uint64_t v5 = sub_25AB791B0;
  }
  else {
    uint64_t v5 = sub_25AB790A0;
  }
  return MEMORY[0x270FA2498](v5);
}

uint64_t sub_25AB78FBC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB790A0()
{
  (*(void (**)(uint64_t))(v0 + 152))(100);
  sub_25AB76264(0, 0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB791B0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB79294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[219] = a6;
  v6[218] = a5;
  v6[217] = a4;
  uint64_t v7 = sub_25AC35640();
  v6[220] = v7;
  v6[221] = *(void *)(v7 - 8);
  v6[222] = swift_task_alloc();
  v6[223] = swift_task_alloc();
  v6[224] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB79378);
}

uint64_t sub_25AB79378()
{
  sub_25AC35630();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_26A4A1970 + dword_26A4A1970);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 1800) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25AB79440;
  return v3(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_25AB79440()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 1792);
  uint64_t v4 = *(void *)(*(void *)v1 + 1768);
  uint64_t v5 = *(void *)(*(void *)v1 + 1760);
  v2[226] = v0;
  swift_task_dealloc();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v2[227] = v6;
  v2[228] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v3, v5);
  if (v0) {
    uint64_t v7 = sub_25AB79758;
  }
  else {
    uint64_t v7 = sub_25AB795C8;
  }
  return MEMORY[0x270FA2498](v7);
}

uint64_t sub_25AB795C8()
{
  uint64_t v1 = (void *)v0[218];
  objc_msgSend(v1, sel_mode);
  sub_25AB87930(0);
  objc_msgSend(v1, sel_amount);
  uint64_t v2 = sub_25AC35430();
  if (MEMORY[0x261150F80](v9, v10, v11, v2, v3, v4))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    sub_25AC35630();
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_26A4A1970 + dword_26A4A1970);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[229] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_25AB797DC;
    return v8(1000000000000000000, 0, 0, 0, 1);
  }
}

uint64_t sub_25AB79758()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB797DC()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 1816);
  uint64_t v3 = *(void *)(*(void *)v1 + 1784);
  uint64_t v4 = *(void *)(*(void *)v1 + 1760);
  *(void *)(*(void *)v1 + 1840) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0) {
    uint64_t v5 = sub_25AB79B84;
  }
  else {
    uint64_t v5 = sub_25AB7995C;
  }
  return MEMORY[0x270FA2498](v5);
}

uint64_t sub_25AB7995C()
{
  objc_msgSend(*(id *)(v0 + 1744), sel_mode);
  sub_25AB87930(1);
  sub_25AC35630();
  uint64_t v3 = (char *)&dword_26A4A1970 + dword_26A4A1970;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 1848) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25AB79A48;
  return ((uint64_t (*)(uint64_t, void, void, void, uint64_t))v3)(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_25AB79A48()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1856) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2 + 1816))(*(void *)(v2 + 1776), *(void *)(v2 + 1760));
  if (v0) {
    uint64_t v3 = sub_25AB79D1C;
  }
  else {
    uint64_t v3 = sub_25AB79C08;
  }
  return MEMORY[0x270FA2498](v3);
}

uint64_t sub_25AB79B84()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB79C08()
{
  sub_25AB79DA0((uint64_t)(v0 + 174));
  memcpy(v0 + 131, v0 + 174, 0x151uLL);
  sub_25AB75B30((uint64_t)(v0 + 131));
  sub_25AB748E0((uint64_t)(v0 + 131), (uint64_t)(v0 + 88));
  memcpy(v0 + 45, v0 + 88, 0x152uLL);
  nullsub_1(v0 + 45);
  sub_25AB70A58(v0 + 45, v0 + 2);
  sub_25AB858EC((uint64_t)(v0 + 2));
  sub_25AB36048((uint64_t)(v0 + 174));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_25AB79D1C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB79DA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F7D8 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v3, (uint64_t)qword_26A4A1C70);
  sub_25AB150E0(v6, (uint64_t)v5);
  uint64_t v7 = sub_25AC345E0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
  {
    sub_25AB18FAC((uint64_t)v5, &qword_26A49F9A0);
  }
  else
  {
    sub_25AB464DC(v1, 0xD00000000000001ALL, 0x800000025AC3F2A0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
  }
  uint64_t v9 = (uint64_t (*)(void))sub_25AC34000();
  char v10 = v9();
  swift_release();
  if (v10)
  {
    id v11 = objc_msgSend(self, sel_standardUserDefaults);
    uint64_t v12 = (void *)sub_25AC34E10();
    unsigned int v71 = objc_msgSend(v11, sel_BOOLForKey_, v12);
  }
  else
  {
    unsigned int v71 = 0;
  }
  uint64_t v13 = (uint64_t (*)(void))sub_25AC34000();
  char v14 = v13();
  swift_release();
  if ((v14 & 1) != 0
    && (id v15 = objc_msgSend(self, sel_standardUserDefaults),
        uint64_t v16 = (void *)sub_25AC34E10(),
        id v17 = objc_msgSend(v15, sel_stringForKey_, v16),
        v15,
        v16,
        v17))
  {
    uint64_t v18 = sub_25AC34E40();
    unint64_t v20 = v19;
  }
  else
  {
    uint64_t v18 = 0;
    unint64_t v20 = 0xE000000000000000;
  }
  uint64_t v21 = HIBYTE(v20) & 0xF;
  if ((v20 & 0x2000000000000000) == 0) {
    uint64_t v21 = v18 & 0xFFFFFFFFFFFFLL;
  }
  if (v21)
  {
    uint64_t v69 = v18;
    unint64_t v70 = v20;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v69 = 0;
    unint64_t v70 = 0xE000000000000000;
  }
  uint64_t v22 = sub_25AB69FFC((uint64_t)&unk_270882018);
  unint64_t v24 = v23;
  uint64_t v25 = sub_25AC32390();
  uint64_t v67 = v26;
  uint64_t v68 = v25;
  sub_25AB16958(v22, v24);
  uint64_t v27 = sub_25AB67388(0x687069632D6D6973uLL, 0xEA00000000007265);
  unint64_t v29 = v28;
  uint64_t v30 = sub_25AC32390();
  uint64_t v65 = v31;
  uint64_t v66 = v30;
  sub_25AB16958(v27, v29);
  uint64_t v32 = sub_25AB67388(0x79656B2D6D6973uLL, 0xE700000000000000);
  unint64_t v34 = v33;
  uint64_t v35 = sub_25AC32390();
  uint64_t v63 = v36;
  uint64_t v64 = v35;
  sub_25AB16958(v32, v34);
  uint64_t v37 = sub_25AB67388(0x6463672D6D6973uLL, 0xE700000000000000);
  unint64_t v39 = v38;
  uint64_t v40 = sub_25AC32390();
  uint64_t v61 = v41;
  uint64_t v62 = v40;
  sub_25AB16958(v37, v39);
  uint64_t v42 = sub_25AB67388(0x657474612D6D6973uLL, 0xEA00000000007473);
  unint64_t v44 = v43;
  uint64_t v45 = sub_25AC32390();
  uint64_t v47 = v46;
  sub_25AB16958(v42, v44);
  uint64_t v48 = sub_25AB67388(0x647361632D6D6973uLL, 0xE800000000000000);
  unint64_t v50 = v49;
  uint64_t v72 = sub_25AB69A94(v48, v49);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A07C0);
  sub_25AB7AD44();
  uint64_t v51 = sub_25AC34DE0();
  uint64_t v53 = v52;
  swift_bridgeObjectRelease();
  uint64_t result = sub_25AB16958(v48, v50);
  LOBYTE(v72) = 1;
  char v73 = 1;
  *(void *)a1 = 808464432;
  *(void *)(a1 + 8) = 0xE400000000000000;
  *(void *)(a1 + 16) = 1634953558;
  *(void *)(a1 + 24) = 0xE400000000000000;
  *(unsigned char *)(a1 + 32) = 0;
  uint64_t v55 = v67;
  *(void *)(a1 + 40) = v68;
  *(void *)(a1 + 48) = v55;
  *(unsigned char *)(a1 + 56) = 1;
  uint64_t v56 = v65;
  *(void *)(a1 + 64) = v66;
  *(void *)(a1 + 72) = v56;
  uint64_t v57 = v63;
  *(void *)(a1 + 80) = v64;
  *(void *)(a1 + 88) = v57;
  uint64_t v58 = v61;
  *(void *)(a1 + 96) = v62;
  *(void *)(a1 + 104) = v58;
  *(void *)(a1 + 112) = v45;
  *(void *)(a1 + 120) = v47;
  *(void *)(a1 + 128) = v51;
  *(void *)(a1 + 136) = v53;
  *(void *)(a1 + 144) = 0x6B656B2D6D6973;
  *(void *)(a1 + 152) = 0xE700000000000000;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0xE000000000000000;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0xE000000000000000;
  LOBYTE(v58) = v71;
  *(unsigned char *)(a1 + 192) = v71;
  *(unsigned char *)(a1 + 193) = v58;
  *(_WORD *)(a1 + 194) = 257;
  *(unsigned char *)(a1 + 196) = 0;
  strcpy((char *)(a1 + 200), "000000000000");
  *(unsigned char *)(a1 + 213) = 0;
  *(_WORD *)(a1 + 214) = -5120;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  *(unsigned char *)(a1 + 232) = -4;
  uint64_t v59 = v69;
  *(void *)(a1 + 240) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 248) = v59;
  *(void *)(a1 + 256) = v70;
  *(unsigned char *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0x676E69662D6D6973;
  *(void *)(a1 + 280) = 0xEF746E6972707265;
  *(void *)(a1 + 288) = 0;
  *(unsigned char *)(a1 + 296) = v72;
  *(void *)(a1 + 304) = 0;
  *(unsigned char *)(a1 + 312) = v73;
  *(void *)(a1 + 320) = 0x417961702D6D6973;
  *(void *)(a1 + 328) = 0xEA00000000007070;
  *(unsigned char *)(a1 + 336) = 0;
  return result;
}

uint64_t sub_25AB7A3B8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t v51 = *MEMORY[0x263EF8340];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  unint64_t v11 = a1[1];
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v7, (uint64_t)qword_26A4A1CE8);
  sub_25AB150E0(v12, (uint64_t)v9);
  uint64_t v13 = sub_25AC345E0();
  uint64_t v14 = *(void *)(v13 - 8);
  int v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13);
  int v16 = v15;
  if (v15 == 1)
  {
    uint64_t result = sub_25AB18FAC((uint64_t)v9, &qword_26A49F9A0);
  }
  else
  {
    int v42 = v15;
    sub_25AB58024(a2, (uint64_t)v50);
    sub_25AB29558(v10, v11);
    sub_25AB29558(v10, v11);
    uint64_t v18 = sub_25AC345C0();
    int v19 = sub_25AC352D0();
    if (os_log_type_enabled(v18, (os_log_type_t)v19))
    {
      int v38 = v19;
      os_log_t v39 = v18;
      uint64_t v41 = v3;
      uint64_t v40 = a3;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v49 = v37;
      *(_DWORD *)uint64_t v20 = 33554946;
      __int16 v21 = v50[0] + 1200;
      sub_25AB581A4((uint64_t)v50);
      LOWORD(v47[0]) = v21;
      sub_25AC354A0();
      *(_WORD *)(v20 + 6) = 2080;
      switch(v11 >> 62)
      {
        case 1uLL:
          if (v10 >> 32 < (int)v10) {
            __break(1u);
          }
          sub_25AB29558(v10, v11);
          uint64_t v31 = v41;
          uint64_t v32 = sub_25AB693A8((int)v10, v10 >> 32, v11 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_25AB699D0);
          uint64_t v41 = v31;
          if (v31) {
            goto LABEL_30;
          }
          uint64_t v27 = v32;
          unint64_t v28 = v33;
          if (!v33) {
            goto LABEL_17;
          }
          goto LABEL_24;
        case 2uLL:
          uint64_t v22 = *(void *)(v10 + 16);
          uint64_t v23 = *(void *)(v10 + 24);
          sub_25AB29558(v10, v11);
          swift_retain();
          swift_retain();
          uint64_t v24 = v41;
          uint64_t v25 = sub_25AB693A8(v22, v23, v11 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_25AB699D0);
          uint64_t v41 = v24;
          if (v24)
          {
            sub_25AB16958(v10, v11);
            swift_release();
            swift_release();
            __break(1u);
LABEL_30:
            sub_25AB16958(v10, v11);
            __break(1u);
            JUMPOUT(0x25AB7AA4CLL);
          }
          uint64_t v27 = v25;
          unint64_t v28 = v26;
          swift_release();
          swift_release();
          if (v28) {
            goto LABEL_24;
          }
LABEL_17:
          uint64_t v45 = v10;
          unint64_t v46 = v11;
          sub_25AB29558(v10, v11);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0838);
          if (swift_dynamicCast())
          {
            sub_25AB47E04(v43, (uint64_t)v47);
            __swift_project_boxed_opaque_existential_1(v47, v48);
            if (sub_25AC35700())
            {
              __swift_project_boxed_opaque_existential_1(v47, v48);
              uint64_t v34 = v41;
              sub_25AC356F0();
              uint64_t v41 = v34;
              sub_25AB16958(v10, v11);
              unint64_t v28 = *((void *)&v43[0] + 1);
              uint64_t v27 = *(void *)&v43[0];
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
              goto LABEL_25;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
          }
          else
          {
            uint64_t v44 = 0;
            memset(v43, 0, sizeof(v43));
            sub_25AB18FAC((uint64_t)v43, &qword_26A4A0840);
          }
          uint64_t v29 = sub_25AB691CC(v10, v11);
LABEL_23:
          uint64_t v27 = v29;
          unint64_t v28 = v30;
LABEL_24:
          sub_25AB16958(v10, v11);
LABEL_25:
          v47[0] = sub_25AB56574(v27, v28, &v49);
          sub_25AC354A0();
          swift_bridgeObjectRelease();
          sub_25AB16958(v10, v11);
          sub_25AB16958(v10, v11);
          os_log_t v35 = v39;
          _os_log_impl(&dword_25AB11000, v39, (os_log_type_t)v38, "Monitor Event Type: [%hu] Data: [%s]", (uint8_t *)v20, 0x10u);
          uint64_t v36 = v37;
          swift_arrayDestroy();
          MEMORY[0x261151C20](v36, -1, -1);
          MEMORY[0x261151C20](v20, -1, -1);

          a3 = v40;
          break;
        case 3uLL:
          memset(v47, 0, 14);
          goto LABEL_13;
        default:
          v47[0] = v10;
          LOWORD(v47[1]) = v11;
          BYTE2(v47[1]) = BYTE2(v11);
          BYTE3(v47[1]) = BYTE3(v11);
          BYTE4(v47[1]) = BYTE4(v11);
          BYTE5(v47[1]) = BYTE5(v11);
LABEL_13:
          uint64_t v29 = sub_25AC34F00();
          goto LABEL_23;
      }
    }
    else
    {
      sub_25AB581A4((uint64_t)v50);

      sub_25AB16958(v10, v11);
      sub_25AB16958(v10, v11);
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v9, v13);
    int v16 = v42;
  }
  *a3 = v16 == 1;
  return result;
}

uint64_t type metadata accessor for MockSPRReader()
{
  return self;
}

uint64_t sub_25AB7AA80()
{
  uint64_t v0 = sub_25AC34E40();
  uint64_t v2 = v1;
  uint64_t v3 = MEMORY[0x263F8D310];
  uint64_t v30 = MEMORY[0x263F8D310];
  *(void *)&long long v29 = 1801678701;
  *((void *)&v29 + 1) = 0xE400000000000000;
  sub_25AB1DDC8(&v29, v28);
  uint64_t v4 = MEMORY[0x263F8EE80];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_25ABAE96C(v28, v0, v2, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_25AC34E40();
  uint64_t v8 = v7;
  uint64_t v30 = v3;
  *(void *)&long long v29 = 0x343332314553;
  *((void *)&v29 + 1) = 0xE600000000000000;
  sub_25AB1DDC8(&v29, v28);
  char v9 = swift_isUniquelyReferenced_nonNull_native();
  sub_25ABAE96C(v28, v6, v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_25AC34E40();
  uint64_t v12 = v11;
  uint64_t v13 = MEMORY[0x263F8D4F8];
  uint64_t v30 = MEMORY[0x263F8D4F8];
  LOBYTE(v29) = 0;
  sub_25AB1DDC8(&v29, v28);
  char v14 = swift_isUniquelyReferenced_nonNull_native();
  sub_25ABAE96C(v28, v10, v12, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_25AC34E40();
  uint64_t v17 = v16;
  uint64_t v30 = v13;
  LOBYTE(v29) = 0;
  sub_25AB1DDC8(&v29, v28);
  char v18 = swift_isUniquelyReferenced_nonNull_native();
  sub_25ABAE96C(v28, v15, v17, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_25AC34E40();
  uint64_t v21 = v20;
  uint64_t v30 = v13;
  LOBYTE(v29) = 0;
  sub_25AB1DDC8(&v29, v28);
  char v22 = swift_isUniquelyReferenced_nonNull_native();
  sub_25ABAE96C(v28, v19, v21, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = sub_25AC34E40();
  uint64_t v25 = v24;
  uint64_t v30 = v13;
  LOBYTE(v29) = 0;
  sub_25AB1DDC8(&v29, v28);
  char v26 = swift_isUniquelyReferenced_nonNull_native();
  sub_25ABAE96C(v28, v23, v25, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_25AB7AD44()
{
  unint64_t result = qword_26A4A07C8;
  if (!qword_26A4A07C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A4A07C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A07C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityTerminalContext()
{
  return &type metadata for IdentityTerminalContext;
}

uint64_t sub_25AB7ADB0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0070);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A08F8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v40 - v8;
  uint64_t State = type metadata accessor for IdentityAnalyticsManager.LoadState(0);
  uint64_t v49 = *(void *)(State - 8);
  uint64_t v11 = MEMORY[0x270FA5388](State);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v48 = (uint64_t)&v40 - v14;
  swift_beginAccess();
  uint64_t v40 = v0;
  uint64_t v15 = *(void *)(v0 + 112);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v46 = v15 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(v15 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v47 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v50 = v15;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v21 = 0;
  uint64_t v43 = v4;
  uint64_t v44 = MEMORY[0x263F8EE60] + 8;
  uint64_t v41 = v9;
  int v42 = v7;
  uint64_t v45 = State;
  while (v19)
  {
    unint64_t v22 = __clz(__rbit64(v19));
    v19 &= v19 - 1;
    unint64_t v23 = v22 | (v21 << 6);
LABEL_23:
    uint64_t v27 = v48;
    sub_25AB846DC(*(void *)(v50 + 56) + *(void *)(v49 + 72) * v23, v48, type metadata accessor for IdentityAnalyticsManager.LoadState);
    sub_25AB84BD4(v27, (uint64_t)v13, type metadata accessor for IdentityAnalyticsManager.LoadState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_25AB84C3C((uint64_t)v13, (uint64_t)v9);
      sub_25AB4C944((uint64_t)v9, (uint64_t)v7, &qword_26A4A08F8);
      uint64_t v28 = type metadata accessor for IdentityAnalyticsReporter(0);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v7, 1, v28) == 1)
      {
        sub_25AB18FAC((uint64_t)v7, &qword_26A4A08F8);
        uint64_t result = sub_25AB18FAC((uint64_t)v9, &qword_26A4A08F8);
      }
      else
      {
        uint64_t v29 = *v7;
        uint64_t v30 = v7[1];
        swift_bridgeObjectRetain();
        sub_25AB84744((uint64_t)v7, type metadata accessor for IdentityAnalyticsReporter);
        uint64_t v31 = sub_25AC35140();
        uint64_t v32 = *(void *)(v31 - 8);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v3, 1, 1, v31);
        unint64_t v33 = (void *)swift_allocObject();
        id v33[2] = 0;
        uint64_t v34 = v33 + 2;
        v33[3] = 0;
        v33[4] = v29;
        v33[5] = v30;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v3, 1, v31) == 1)
        {
          sub_25AB18FAC((uint64_t)v3, &qword_26A4A0070);
          if (*v34) {
            goto LABEL_28;
          }
        }
        else
        {
          sub_25AC35130();
          (*(void (**)(char *, uint64_t))(v32 + 8))(v3, v31);
          if (*v34)
          {
LABEL_28:
            swift_getObjectType();
            swift_unknownObjectRetain();
            uint64_t v35 = sub_25AC350E0();
            uint64_t v37 = v36;
            swift_unknownObjectRelease();
            goto LABEL_31;
          }
        }
        uint64_t v35 = 0;
        uint64_t v37 = 0;
LABEL_31:
        uint64_t v38 = swift_allocObject();
        *(void *)(v38 + 16) = &unk_26A4A0A78;
        *(void *)(v38 + 24) = v33;
        if (v37 | v35)
        {
          uint64_t v51 = 0;
          uint64_t v52 = 0;
          uint64_t v53 = v35;
          uint64_t v54 = v37;
        }
        uint64_t v7 = v42;
        char v9 = v41;
        swift_task_create();
        swift_release();
        uint64_t result = sub_25AB18FAC((uint64_t)v9, &qword_26A4A08F8);
      }
    }
    else
    {
      sub_25AC351C0();
      uint64_t result = swift_release();
    }
  }
  int64_t v24 = v21 + 1;
  if (__OFADD__(v21, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v24 >= v47) {
    goto LABEL_34;
  }
  unint64_t v25 = *(void *)(v46 + 8 * v24);
  ++v21;
  if (v25) {
    goto LABEL_22;
  }
  int64_t v21 = v24 + 1;
  if (v24 + 1 >= v47) {
    goto LABEL_34;
  }
  unint64_t v25 = *(void *)(v46 + 8 * v21);
  if (v25) {
    goto LABEL_22;
  }
  int64_t v21 = v24 + 2;
  if (v24 + 2 >= v47) {
    goto LABEL_34;
  }
  unint64_t v25 = *(void *)(v46 + 8 * v21);
  if (v25) {
    goto LABEL_22;
  }
  int64_t v21 = v24 + 3;
  if (v24 + 3 >= v47) {
    goto LABEL_34;
  }
  unint64_t v25 = *(void *)(v46 + 8 * v21);
  if (v25)
  {
LABEL_22:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v21 << 6);
    goto LABEL_23;
  }
  int64_t v26 = v24 + 4;
  if (v26 >= v47)
  {
LABEL_34:
    swift_release();
    uint64_t v39 = v40;
    swift_bridgeObjectRelease();
    swift_defaultActor_destroy();
    return v39;
  }
  unint64_t v25 = *(void *)(v46 + 8 * v26);
  if (v25)
  {
    int64_t v21 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v21 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v21 >= v47) {
      goto LABEL_34;
    }
    unint64_t v25 = *(void *)(v46 + 8 * v21);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_25AB7B3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = sub_25AC32E50();
  v5[4] = v6;
  v5[5] = *(void *)(v6 - 8);
  v5[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB7B498);
}

uint64_t sub_25AB7B498()
{
  sub_25AC32E40();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25AB7B53C;
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  return MEMORY[0x270EFAA20](v3, v2);
}

uint64_t sub_25AB7B53C()
{
  uint64_t v1 = *(void *)(*v0 + 48);
  uint64_t v2 = *(void *)(*v0 + 40);
  uint64_t v3 = *(void *)(*v0 + 32);
  uint64_t v6 = *v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t sub_25AB7B694()
{
  sub_25AB7ADB0();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for IdentityAnalyticsManager()
{
  return self;
}

uint64_t sub_25AB7B6E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[13] = a3;
  v4[14] = v3;
  v4[11] = a1;
  v4[12] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0070);
  v4[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0A58);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  uint64_t State = type metadata accessor for IdentityAnalyticsManager.LoadState(0);
  v4[18] = State;
  v4[19] = *(void *)(State - 8);
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB7B828);
}

uint64_t sub_25AB7B828()
{
  uint64_t v1 = v0[14] + 112;
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  if (!*(void *)(*(void *)v1 + 16))
  {
    uint64_t v10 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v0[19] + 56);
    v10((uint64_t *)v0[17], 1, 1, v0[18]);
LABEL_7:
    v0[24] = v10;
    uint64_t v14 = v0[18];
    uint64_t v34 = v0[19];
    uint64_t v15 = (uint64_t *)v0[16];
    uint64_t v16 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v17 = v0[13];
    sub_25AB18FAC(v0[17], &qword_26A4A0A58);
    uint64_t v19 = sub_25AC35140();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v16, 1, 1, v19);
    uint64_t v20 = (void *)swift_allocObject();
    id v20[2] = 0;
    v20[3] = 0;
    v20[4] = v18;
    v20[5] = v17;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_25AB71FB0(v16, (uint64_t)&unk_26A4A0A68, (uint64_t)v20);
    v0[25] = v21;
    uint64_t *v15 = v21;
    swift_storeEnumTagMultiPayload();
    v0[26] = (v34 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v10(v15, 0, 1, v14);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_25ABAAAE8((uint64_t)v15, v18, v17);
    swift_endAccess();
    unint64_t v22 = (void *)swift_task_alloc();
    v0[27] = v22;
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A08F8);
    *unint64_t v22 = v0;
    v22[1] = sub_25AB7BE6C;
    uint64_t v24 = v0[11];
    uint64_t v25 = v21;
LABEL_8:
    return MEMORY[0x270FA1FD0](v24, v25, v23);
  }
  uint64_t v4 = v0[12];
  uint64_t v3 = v0[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_25AB8D62C(v4, v3);
  uint64_t v7 = v0[18];
  uint64_t v6 = v0[19];
  uint64_t v8 = (uint64_t *)v0[17];
  if (v9)
  {
    sub_25AB846DC(*(void *)(v2 + 56) + *(void *)(v6 + 72) * v5, v0[17], type metadata accessor for IdentityAnalyticsManager.LoadState);
    uint64_t v10 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v10(v8, 0, 1, v7);
  }
  else
  {
    uint64_t v10 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v10((uint64_t *)v0[17], 1, 1, v7);
  }
  uint64_t v12 = v0[18];
  uint64_t v11 = v0[19];
  uint64_t v13 = v0[17];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v12) == 1) {
    goto LABEL_7;
  }
  uint64_t v26 = v0[20];
  uint64_t v27 = v0[21];
  sub_25AB84BD4(v0[17], v27, type metadata accessor for IdentityAnalyticsManager.LoadState);
  sub_25AB846DC(v27, v26, type metadata accessor for IdentityAnalyticsManager.LoadState);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v31 = *(void *)v0[20];
    v0[22] = v31;
    uint64_t v32 = (void *)swift_task_alloc();
    v0[23] = v32;
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A08F8);
    void *v32 = v0;
    v32[1] = sub_25AB7BCA8;
    uint64_t v24 = v0[11];
    uint64_t v25 = v31;
    goto LABEL_8;
  }
  uint64_t v28 = v0[20];
  uint64_t v29 = v0[11];
  sub_25AB84744(v0[21], type metadata accessor for IdentityAnalyticsManager.LoadState);
  sub_25AB84C3C(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(void))v0[1];
  return v30();
}

uint64_t sub_25AB7BCA8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25AB7BDB8);
}

uint64_t sub_25AB7BDB8()
{
  uint64_t v1 = *(void *)(v0 + 168);
  swift_release();
  sub_25AB84744(v1, type metadata accessor for IdentityAnalyticsManager.LoadState);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_25AB7BE6C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25AB7BF7C);
}

uint64_t sub_25AB7BF7C()
{
  uint64_t v1 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[24];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[12];
  sub_25AB4C944(v0[11], v3, &qword_26A4A08F8);
  swift_storeEnumTagMultiPayload();
  v1(v3, 0, 1, v2);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_25ABAAAE8(v3, v5, v4);
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

void *initializeWithCopy for IdentityAnalyticsSession(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for IdentityAnalyticsSession(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

void *assignWithTake for IdentityAnalyticsSession(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IdentityAnalyticsSession(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentityAnalyticsSession(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityAnalyticsSession()
{
  return &type metadata for IdentityAnalyticsSession;
}

void *sub_25AB7C38C(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v46 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v46 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = *(void *)((char *)a2 + v10 + 8);
    *uint64_t v11 = *(void *)((char *)a2 + v10);
    v11[1] = v13;
    uint64_t v14 = *(void *)((char *)a2 + v10 + 24);
    void v11[2] = *(void *)((char *)a2 + v10 + 16);
    uint64_t v11[3] = v14;
    uint64_t v15 = type metadata accessor for IdentityAnalyticsReporter(0);
    uint64_t v16 = *(int *)(v15 + 24);
    uint64_t v49 = &v12[v16];
    uint64_t v50 = (char *)v11 + v16;
    uint64_t v17 = sub_25AC32E50();
    uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v48(v50, v49, v17);
    *(void *)((char *)v11 + *(int *)(v15 + 28)) = *(void *)&v12[*(int *)(v15 + 28)];
    uint64_t v18 = a3[6];
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    *uint64_t v19 = *((unsigned char *)a2 + v18);
    uint64_t v21 = *(void *)((char *)a2 + v18 + 16);
    *((void *)v19 + 1) = *(void *)((char *)a2 + v18 + 8);
    *((void *)v19 + 2) = v21;
    uint64_t v22 = type metadata accessor for IdentityAnalyticsRequestInformation(0);
    uint64_t v23 = *(int *)(v22 + 28);
    uint64_t v52 = &v20[v23];
    uint64_t v53 = &v19[v23];
    uint64_t v24 = sub_25AC33350();
    uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v51(v53, v52, v24);
    uint64_t v25 = *(int *)(v22 + 32);
    uint64_t v26 = &v19[v25];
    uint64_t v27 = &v20[v25];
    uint64_t v28 = sub_25AC330C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    uint64_t v29 = a3[7];
    uint64_t v30 = a3[8];
    uint64_t v31 = (void *)((char *)v4 + v29);
    uint64_t v32 = (void *)((char *)a2 + v29);
    uint64_t v33 = v32[1];
    void *v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = v32[3];
    v31[2] = v32[2];
    v31[3] = v34;
    uint64_t v35 = (void *)((char *)v4 + v30);
    uint64_t v36 = (void *)((char *)a2 + v30);
    uint64_t v37 = v36[1];
    *uint64_t v35 = *v36;
    v35[1] = v37;
    uint64_t v38 = a3[9];
    uint64_t v39 = a3[10];
    uint64_t v40 = (void *)((char *)v4 + v38);
    uint64_t v41 = (void *)((char *)a2 + v38);
    uint64_t v42 = v41[1];
    *uint64_t v40 = *v41;
    v40[1] = v42;
    uint64_t v43 = (void *)((char *)v4 + v39);
    uint64_t v44 = (void *)((char *)a2 + v39);
    uint64_t v45 = v44[1];
    *uint64_t v43 = *v44;
    v43[1] = v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t type metadata accessor for IdentityAnalyticsReporter(uint64_t a1)
{
  return sub_25AB4BEEC(a1, (uint64_t *)&unk_26A4A09E8);
}

uint64_t type metadata accessor for IdentityAnalyticsRequestInformation(uint64_t a1)
{
  return sub_25AB4BEEC(a1, (uint64_t *)&unk_26A4A09D8);
}

uint64_t sub_25AB7C688(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for IdentityAnalyticsReporter(0) + 24);
  uint64_t v6 = sub_25AC32E50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for IdentityAnalyticsRequestInformation(0);
  uint64_t v9 = v7 + *(int *)(v8 + 28);
  uint64_t v10 = sub_25AC33350();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v7 + *(int *)(v8 + 32);
  uint64_t v12 = sub_25AC330C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_25AB7C83C(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = *(void *)((char *)a2 + v8 + 8);
  void *v9 = *(void *)((char *)a2 + v8);
  v9[1] = v11;
  uint64_t v12 = *(void *)((char *)a2 + v8 + 24);
  _OWORD v9[2] = *(void *)((char *)a2 + v8 + 16);
  v9[3] = v12;
  uint64_t v13 = type metadata accessor for IdentityAnalyticsReporter(0);
  uint64_t v14 = *(int *)(v13 + 24);
  uint64_t v46 = &v10[v14];
  uint64_t v48 = (char *)v9 + v14;
  uint64_t v15 = sub_25AC32E50();
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v45(v48, v46, v15);
  *(void *)((char *)v9 + *(int *)(v13 + 28)) = *(void *)&v10[*(int *)(v13 + 28)];
  uint64_t v16 = a3[6];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *uint64_t v17 = *((unsigned char *)a2 + v16);
  uint64_t v19 = *(void *)((char *)a2 + v16 + 16);
  *((void *)v17 + 1) = *(void *)((char *)a2 + v16 + 8);
  *((void *)v17 + 2) = v19;
  uint64_t v20 = type metadata accessor for IdentityAnalyticsRequestInformation(0);
  uint64_t v21 = *(int *)(v20 + 28);
  uint64_t v49 = &v18[v21];
  uint64_t v50 = &v17[v21];
  uint64_t v22 = sub_25AC33350();
  int64_t v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v47(v50, v49, v22);
  uint64_t v23 = *(int *)(v20 + 32);
  uint64_t v24 = &v17[v23];
  uint64_t v25 = &v18[v23];
  uint64_t v26 = sub_25AC330C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[7];
  uint64_t v28 = a3[8];
  uint64_t v29 = (void *)((char *)a1 + v27);
  uint64_t v30 = (void *)((char *)a2 + v27);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  uint64_t v32 = v30[3];
  v29[2] = v30[2];
  void v29[3] = v32;
  uint64_t v33 = (void *)((char *)a1 + v28);
  uint64_t v34 = (void *)((char *)a2 + v28);
  uint64_t v35 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v35;
  uint64_t v36 = a3[9];
  uint64_t v37 = a3[10];
  uint64_t v38 = (void *)((char *)a1 + v36);
  uint64_t v39 = (void *)((char *)a2 + v36);
  uint64_t v40 = v39[1];
  *uint64_t v38 = *v39;
  v38[1] = v40;
  uint64_t v41 = (void *)((char *)a1 + v37);
  uint64_t v42 = (void *)((char *)a2 + v37);
  uint64_t v43 = v42[1];
  *uint64_t v41 = *v42;
  v41[1] = v43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_25AB7CAAC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  *uint64_t v7 = *(void *)((char *)a2 + v6);
  v7[1] = *(void *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v7[2] = *((void *)v8 + 2);
  v7[3] = *((void *)v8 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = type metadata accessor for IdentityAnalyticsReporter(0);
  uint64_t v10 = *(int *)(v9 + 24);
  uint64_t v11 = (char *)v7 + v10;
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_25AC32E50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *(void *)((char *)v7 + *(int *)(v9 + 28)) = *(void *)&v8[*(int *)(v9 + 28)];
  swift_retain();
  swift_release();
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  char *v15 = *((unsigned char *)a2 + v14);
  *((void *)v15 + 1) = *(void *)((char *)a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v15 + 2) = *((void *)v16 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = type metadata accessor for IdentityAnalyticsRequestInformation(0);
  uint64_t v18 = *(int *)(v17 + 28);
  uint64_t v19 = &v15[v18];
  uint64_t v20 = &v16[v18];
  uint64_t v21 = sub_25AC33350();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  uint64_t v22 = *(int *)(v17 + 32);
  uint64_t v23 = &v15[v22];
  uint64_t v24 = &v16[v22];
  uint64_t v25 = sub_25AC330C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
  uint64_t v26 = a3[7];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (char *)a2 + v26;
  *uint64_t v27 = *(void *)((char *)a2 + v26);
  v27[1] = *(void *)((char *)a2 + v26 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v27[2] = *((void *)v28 + 2);
  v27[3] = *((void *)v28 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[8];
  uint64_t v30 = (void *)((char *)a1 + v29);
  uint64_t v31 = (void *)((char *)a2 + v29);
  void *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[9];
  uint64_t v33 = (void *)((char *)a1 + v32);
  uint64_t v34 = (void *)((char *)a2 + v32);
  *uint64_t v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[10];
  uint64_t v36 = (void *)((char *)a1 + v35);
  uint64_t v37 = (void *)((char *)a2 + v35);
  void *v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_25AB7CDBC(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[5];
  uint64_t v8 = (_OWORD *)((char *)a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  long long v10 = *(_OWORD *)((char *)a2 + v7 + 16);
  *uint64_t v8 = *(_OWORD *)((char *)a2 + v7);
  v8[1] = v10;
  uint64_t v11 = type metadata accessor for IdentityAnalyticsReporter(0);
  uint64_t v12 = *(int *)(v11 + 24);
  uint64_t v13 = (char *)v8 + v12;
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_25AC32E50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  *(void *)((char *)v8 + *(int *)(v11 + 28)) = *(void *)&v9[*(int *)(v11 + 28)];
  uint64_t v16 = a3[6];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *uint64_t v17 = *((unsigned char *)a2 + v16);
  *(_OWORD *)(v17 + 8) = *(_OWORD *)((char *)a2 + v16 + 8);
  uint64_t v19 = type metadata accessor for IdentityAnalyticsRequestInformation(0);
  uint64_t v20 = *(int *)(v19 + 28);
  uint64_t v21 = &v17[v20];
  uint64_t v22 = &v18[v20];
  uint64_t v23 = sub_25AC33350();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  uint64_t v24 = *(int *)(v19 + 32);
  uint64_t v25 = &v17[v24];
  uint64_t v26 = &v18[v24];
  uint64_t v27 = sub_25AC330C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  uint64_t v28 = a3[7];
  uint64_t v29 = a3[8];
  long long v30 = *(_OWORD *)((char *)a2 + v28);
  long long v31 = *(_OWORD *)((char *)a2 + v28 + 16);
  uint64_t v32 = (_OWORD *)((char *)a1 + v28);
  _OWORD *v32 = v30;
  v32[1] = v31;
  *(_OWORD *)((char *)a1 + v29) = *(_OWORD *)((char *)a2 + v29);
  uint64_t v33 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v33) = *(_OWORD *)((char *)a2 + v33);
  return a1;
}

void *sub_25AB7CF6C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[5];
  long long v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = *(void *)((char *)a2 + v9 + 8);
  *long long v10 = *(void *)((char *)a2 + v9);
  v10[1] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *((void *)v11 + 3);
  void v10[2] = *((void *)v11 + 2);
  v10[3] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = type metadata accessor for IdentityAnalyticsReporter(0);
  uint64_t v15 = *(int *)(v14 + 24);
  uint64_t v16 = (char *)v10 + v15;
  uint64_t v17 = &v11[v15];
  uint64_t v18 = sub_25AC32E50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  *(void *)((char *)v10 + *(int *)(v14 + 28)) = *(void *)&v11[*(int *)(v14 + 28)];
  swift_release();
  uint64_t v19 = a3[6];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  char *v20 = *((unsigned char *)a2 + v19);
  *((void *)v20 + 1) = *(void *)((char *)a2 + v19 + 8);
  swift_bridgeObjectRelease();
  *((void *)v20 + 2) = *((void *)v21 + 2);
  swift_bridgeObjectRelease();
  uint64_t v22 = type metadata accessor for IdentityAnalyticsRequestInformation(0);
  uint64_t v23 = *(int *)(v22 + 28);
  uint64_t v24 = &v20[v23];
  uint64_t v25 = &v21[v23];
  uint64_t v26 = sub_25AC33350();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = *(int *)(v22 + 32);
  uint64_t v28 = &v20[v27];
  uint64_t v29 = &v21[v27];
  uint64_t v30 = sub_25AC330C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[7];
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = *(void *)((char *)a2 + v31 + 8);
  void *v32 = *(void *)((char *)a2 + v31);
  v32[1] = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = *((void *)v33 + 3);
  id v32[2] = *((void *)v33 + 2);
  v32[3] = v35;
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[8];
  uint64_t v37 = (void *)((char *)a1 + v36);
  uint64_t v38 = (void *)((char *)a2 + v36);
  uint64_t v40 = *v38;
  uint64_t v39 = v38[1];
  *uint64_t v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  uint64_t v41 = a3[9];
  uint64_t v42 = (void *)((char *)a1 + v41);
  uint64_t v43 = (void *)((char *)a2 + v41);
  uint64_t v45 = *v43;
  uint64_t v44 = v43[1];
  void *v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  uint64_t v46 = a3[10];
  int64_t v47 = (void *)((char *)a1 + v46);
  uint64_t v48 = (void *)((char *)a2 + v46);
  uint64_t v50 = *v48;
  uint64_t v49 = v48[1];
  *int64_t v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25AB7D1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25AB7D1D8);
}

uint64_t sub_25AB7D1D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for IdentityAnalyticsReporter(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for IdentityAnalyticsRequestInformation(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_25AB7D304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25AB7D318);
}

uint64_t sub_25AB7D318(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for IdentityAnalyticsReporter(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for IdentityAnalyticsRequestInformation(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for IdentityAnalyticsTransaction(uint64_t a1)
{
  return sub_25AB4BEEC(a1, (uint64_t *)&unk_26A4A09C8);
}

uint64_t sub_25AB7D464()
{
  uint64_t result = type metadata accessor for IdentityAnalyticsReporter(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for IdentityAnalyticsRequestInformation(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_25AB7D550(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_25AC33350();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 32);
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_25AC330C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v4;
}

uint64_t sub_25AB7D6A0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_25AC33350();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_25AC330C0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  return v8(v6, v7);
}

uint64_t sub_25AB7D768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25AC33350();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_25AC330C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

uint64_t sub_25AB7D868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_25AC33350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_25AC330C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_25AB7D96C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_25AC33350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_25AC330C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t sub_25AB7DA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_25AC33350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_25AC330C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t sub_25AB7DB3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25AB7DB50);
}

uint64_t sub_25AB7DB50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_25AC33350();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_25AC330C0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_25AB7DC7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25AB7DC90);
}

uint64_t sub_25AB7DC90(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_25AC33350();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_25AC330C0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_25AB7DDBC()
{
  uint64_t result = sub_25AC33350();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25AC330C0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_25AB7DEA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_25AC32E50();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
  }
  swift_retain();
  return v4;
}

uint64_t sub_25AB7DFB4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_25AC32E50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_release();
}

void *sub_25AB7E048(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_25AC32E50();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_retain();
  return a1;
}

void *sub_25AB7E110(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25AC32E50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_25AB7E1F0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_25AC32E50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *sub_25AB7E288(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_25AC32E50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_release();
  return a1;
}

uint64_t sub_25AB7E340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25AB7E354);
}

uint64_t sub_25AB7E354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_25AC32E50();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_25AB7E404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25AB7E418);
}

uint64_t sub_25AB7E418(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_25AC32E50();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25AB7E4C0()
{
  uint64_t result = sub_25AC32E50();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25AB7E564(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for IdentityAnalyticsReporter(0);
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A08F8);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        uint64_t v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        uint64_t v11 = a2[3];
        a1[2] = a2[2];
        a1[3] = v11;
        uint64_t v12 = *(int *)(v6 + 24);
        uint64_t v17 = (char *)a2 + v12;
        uint64_t v18 = (char *)a1 + v12;
        uint64_t v13 = sub_25AC32E50();
        uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v14(v18, v17, v13);
        *(uint64_t *)((char *)a1 + *(int *)(v6 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 28));
        uint64_t v15 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(v7 + 56);
        swift_retain();
        v15(a1, 0, 1, v6);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_25AB7E784(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for IdentityAnalyticsReporter(0);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
    if (result) {
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + *(int *)(v2 + 24);
    uint64_t v5 = sub_25AC32E50();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  return swift_release();
}

void *sub_25AB7E878(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for IdentityAnalyticsReporter(0);
    uint64_t v5 = *(void *)(v4 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
    {
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A08F8);
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      uint64_t v9 = *(int *)(v4 + 24);
      uint64_t v14 = (char *)a2 + v9;
      uint64_t v15 = (char *)a1 + v9;
      uint64_t v10 = sub_25AC32E50();
      uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11(v15, v14, v10);
      *(void *)((char *)a1 + *(int *)(v4 + 28)) = *(void *)((char *)a2 + *(int *)(v4 + 28));
      uint64_t v12 = *(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56);
      swift_retain();
      v12(a1, 0, 1, v4);
    }
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_25AB7EA48(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_25AB84744((uint64_t)a1, type metadata accessor for IdentityAnalyticsManager.LoadState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for IdentityAnalyticsReporter(0);
      uint64_t v5 = *(void *)(v4 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
      {
        uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A08F8);
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        uint64_t v7 = *(int *)(v4 + 24);
        uint64_t v12 = (char *)a2 + v7;
        uint64_t v13 = (char *)a1 + v7;
        uint64_t v8 = sub_25AC32E50();
        uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v9(v13, v12, v8);
        *(void *)((char *)a1 + *(int *)(v4 + 28)) = *(void *)((char *)a2 + *(int *)(v4 + 28));
        uint64_t v10 = *(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56);
        swift_retain();
        v10(a1, 0, 1, v4);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for IdentityAnalyticsManager.LoadState(uint64_t a1)
{
  return sub_25AB4BEEC(a1, (uint64_t *)&unk_26A4A09F8);
}

_OWORD *sub_25AB7EC6C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for IdentityAnalyticsReporter(0);
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A08F8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      long long v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = *(int *)(v6 + 24);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_25AC32E50();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      *(void *)((char *)a1 + *(int *)(v6 + 28)) = *(void *)((char *)a2 + *(int *)(v6 + 28));
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_25AB7EE14(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25AB84744((uint64_t)a1, type metadata accessor for IdentityAnalyticsManager.LoadState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for IdentityAnalyticsReporter(0);
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A08F8);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        long long v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        uint64_t v10 = *(int *)(v6 + 24);
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = sub_25AC32E50();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
        *(void *)((char *)a1 + *(int *)(v6 + 28)) = *(void *)((char *)a2 + *(int *)(v6 + 28));
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_25AB7EFE0()
{
  sub_25AB7F078();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataMultiPayload();
  }
}

void sub_25AB7F078()
{
  if (!qword_26A4A0A08)
  {
    type metadata accessor for IdentityAnalyticsReporter(255);
    unint64_t v0 = sub_25AC35470();
    if (!v1) {
      atomic_store(v0, &qword_26A4A0A08);
    }
  }
}

uint64_t sub_25AB7F0D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  uint64_t v6 = sub_25AC32E50();
  v5[8] = v6;
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  v5[11] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  v5[12] = swift_task_alloc();
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB7F1E4);
}

uint64_t sub_25AB7F1E4()
{
  uint64_t v18 = v0;
  if (qword_26A49F818 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[14];
  uint64_t v2 = __swift_project_value_buffer(v0[11], (uint64_t)qword_26A4A1D30);
  v0[15] = v2;
  sub_25AB4C944(v2, v1, &qword_26A49F9A0);
  uint64_t v3 = sub_25AC345E0();
  v0[16] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v0[17] = v4;
  uint64_t v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v0[18] = v5;
  v0[19] = (v4 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v5(v1, 1, v3) == 1)
  {
    sub_25AB18FAC(v0[14], &qword_26A49F9A0);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    uint64_t v6 = sub_25AC345C0();
    os_log_type_t v7 = sub_25AC352D0();
    BOOL v8 = os_log_type_enabled(v6, v7);
    unint64_t v9 = v0[7];
    if (v8)
    {
      uint64_t v16 = v0[6];
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v17 = v11;
      *(_DWORD *)uint64_t v10 = 136315138;
      swift_bridgeObjectRetain();
      v0[4] = sub_25AB56574(v16, v9, &v17);
      sub_25AC354A0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25AB11000, v6, v7, "Creating identity analytics reporter for [%s]", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261151C20](v11, -1, -1);
      MEMORY[0x261151C20](v10, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(void, uint64_t))(v4 + 8))(v0[14], v3);
  }
  sub_25AC32E40();
  uint64_t v12 = (void *)swift_task_alloc();
  v0[20] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_25AB7F4D4;
  uint64_t v14 = v0[6];
  uint64_t v13 = v0[7];
  return MEMORY[0x270EFAA10](v14, v13, 0, 0);
}

uint64_t sub_25AB7F4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 168) = a1;
  *(void *)(v3 + 176) = a2;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25AB7F5D4);
}

uint64_t sub_25AB7F5D4()
{
  uint64_t v44 = v0;
  uint64_t v1 = v0[22];
  if (v1)
  {
    uint64_t v2 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[18];
    uint64_t v3 = v0[16];
    uint64_t v4 = v0[12];
    sub_25AB4C944(v0[15], v4, &qword_26A49F9A0);
    uint64_t v41 = v1;
    if (v2(v4, 1, v3) == 1)
    {
      sub_25AB18FAC(v0[12], &qword_26A49F9A0);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      uint64_t v10 = sub_25AC345C0();
      os_log_type_t v11 = sub_25AC352B0();
      BOOL v12 = os_log_type_enabled(v10, v11);
      unint64_t v13 = v0[7];
      if (v12)
      {
        uint64_t v14 = v0[6];
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        uint64_t v16 = swift_slowAlloc();
        uint64_t v43 = v16;
        *(_DWORD *)uint64_t v15 = 136315138;
        swift_bridgeObjectRetain();
        v0[3] = sub_25AB56574(v14, v13, &v43);
        sub_25AC354A0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_25AB11000, v10, v11, "Returning identity analytics reporter for [%s]", v15, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x261151C20](v16, -1, -1);
        MEMORY[0x261151C20](v15, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(void, void))(v0[17] + 8))(v0[12], v0[16]);
    }
    uint64_t v40 = v0[21];
    uint64_t v27 = v0[9];
    uint64_t v26 = v0[10];
    uint64_t v29 = v0[7];
    uint64_t v28 = v0[8];
    uint64_t v30 = (char *)v0[5];
    uint64_t v31 = v0[6];
    uint64_t v32 = type metadata accessor for IdentityAnalyticsReporter(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(&v30[*(int *)(v32 + 24)], v26, v28);
    uint64_t v33 = *(int *)(v32 + 28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FF38);
    swift_bridgeObjectRetain();
    *(void *)&v30[v33] = sub_25AC32D10();
    *((void *)v30 + 2) = v31;
    *((void *)v30 + 3) = v29;
    *(void *)uint64_t v30 = v40;
    *((void *)v30 + 1) = v41;
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v30, 0, 1, v32);
  }
  else
  {
    uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[18];
    uint64_t v6 = v0[16];
    uint64_t v7 = v0[13];
    sub_25AB4C944(v0[15], v7, &qword_26A49F9A0);
    int v8 = v5(v7, 1, v6);
    uint64_t v9 = v0[13];
    if (v8 == 1)
    {
      (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
      sub_25AB18FAC(v9, &qword_26A49F9A0);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      uint64_t v17 = sub_25AC345C0();
      os_log_type_t v18 = sub_25AC352C0();
      BOOL v19 = os_log_type_enabled(v17, v18);
      uint64_t v21 = v0[9];
      uint64_t v20 = v0[10];
      unint64_t v23 = v0[7];
      uint64_t v22 = v0[8];
      if (v19)
      {
        uint64_t v38 = v0[6];
        uint64_t v42 = v0[8];
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        uint64_t v39 = v20;
        uint64_t v25 = swift_slowAlloc();
        uint64_t v43 = v25;
        *(_DWORD *)uint64_t v24 = 136315138;
        swift_bridgeObjectRetain();
        v0[2] = sub_25AB56574(v38, v23, &v43);
        sub_25AC354A0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_25AB11000, v17, v18, "Could not create identity analytics reporter for [%s]", v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x261151C20](v25, -1, -1);
        MEMORY[0x261151C20](v24, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v39, v42);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
      }
      (*(void (**)(void, void))(v0[17] + 8))(v0[13], v0[16]);
    }
    uint64_t v34 = v0[5];
    uint64_t v35 = type metadata accessor for IdentityAnalyticsReporter(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 1, 1, v35);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = (uint64_t (*)(void))v0[1];
  return v36();
}

uint64_t sub_25AB7FADC(uint64_t a1)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  uint64_t v3 = type metadata accessor for IdentityAnalyticsReporter(0);
  uint64_t v44 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v44 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0070);
  MEMORY[0x270FA5388](v6 - 8);
  int v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v9);
  os_log_type_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25AC33CB0();
  if (!*(void *)(a1 + 16) || (unint64_t v14 = sub_25AB8D62C(v12, v13), (v15 & 1) == 0))
  {
    long long v49 = 0u;
    long long v50 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_25AB18F50(*(void *)(a1 + 56) + 32 * v14, (uint64_t)&v49);
  swift_bridgeObjectRelease();
  if (!*((void *)&v50 + 1))
  {
LABEL_7:
    sub_25AB18FAC((uint64_t)&v49, &qword_26A4A0040);
    goto LABEL_8;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0048);
  if (!swift_dynamicCast())
  {
LABEL_8:
    unint64_t v17 = 0xE700000000000000;
    uint64_t v16 = 0x6E776F6E6B6E75;
    goto LABEL_9;
  }
  uint64_t v16 = v47;
  unint64_t v17 = v48;
LABEL_9:
  uint64_t v42 = (char *)v16;
  uint64_t v18 = sub_25AC33AD0();
  if (*(void *)(a1 + 16) && (unint64_t v20 = sub_25AB8D62C(v18, v19), (v21 & 1) != 0))
  {
    sub_25AB18F50(*(void *)(a1 + 56) + 32 * v20, (uint64_t)&v49);
  }
  else
  {
    long long v49 = 0u;
    long long v50 = 0u;
  }
  swift_bridgeObjectRelease();
  uint64_t v45 = v4;
  if (*((void *)&v50 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0048);
    if (swift_dynamicCast())
    {
      uint64_t v2 = v47;
      unint64_t v22 = v48;
      goto LABEL_18;
    }
  }
  else
  {
    sub_25AB18FAC((uint64_t)&v49, &qword_26A4A0040);
  }
  unint64_t v22 = 0xE700000000000000;
LABEL_18:
  uint64_t v43 = v2;
  if (qword_26A49F818 != -1) {
    swift_once();
  }
  uint64_t v23 = __swift_project_value_buffer(v9, (uint64_t)qword_26A4A1D30);
  sub_25AB4C944(v23, (uint64_t)v11, &qword_26A49F9A0);
  uint64_t v24 = sub_25AC345E0();
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v11, 1, v24) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25AB18FAC((uint64_t)v11, &qword_26A49F9A0);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v26 = v17;
    uint64_t v27 = sub_25AC345C0();
    os_log_type_t v28 = sub_25AC352D0();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      os_log_t v39 = v27;
      uint64_t v30 = v29;
      uint64_t v40 = swift_slowAlloc();
      *(void *)&long long v49 = v40;
      *(_DWORD *)uint64_t v30 = 136315394;
      uint64_t v41 = v8;
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_25AB56574((uint64_t)v42, v26, (uint64_t *)&v49);
      uint64_t v42 = v5;
      sub_25AC354A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_25AB56574(v43, v22, (uint64_t *)&v49);
      int v8 = v41;
      uint64_t v5 = v42;
      sub_25AC354A0();
      swift_bridgeObjectRelease_n();
      os_log_t v31 = v39;
      _os_log_impl(&dword_25AB11000, v39, v28, "Sending identity analytics event [ %s ] with hierarchyToken [ %s ]", (uint8_t *)v30, 0x16u);
      uint64_t v32 = v40;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v32, -1, -1);
      MEMORY[0x261151C20](v30, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v24);
  }
  uint64_t v33 = v45;
  uint64_t v34 = sub_25AC35140();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v8, 1, 1, v34);
  sub_25AB846DC(v46, (uint64_t)v5, type metadata accessor for IdentityAnalyticsReporter);
  unint64_t v35 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  unint64_t v36 = (v33 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = 0;
  *(void *)(v37 + 24) = 0;
  sub_25AB84BD4((uint64_t)v5, v37 + v35, type metadata accessor for IdentityAnalyticsReporter);
  *(void *)(v37 + v36) = a1;
  swift_bridgeObjectRetain();
  sub_25AB71DDC((uint64_t)v8, (uint64_t)&unk_26A4A0A18, v37);
  return swift_release();
}

uint64_t sub_25AB800F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = type metadata accessor for IdentityAnalyticsReporter(0);
  v5[4] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[5] = v7;
  v5[6] = *(void *)(v7 + 64);
  v5[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB801B8);
}

uint64_t sub_25AB801B8()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[2];
  uint64_t v5 = v0[3];
  v0[8] = *(void *)(v4 + *(int *)(v0[4] + 28));
  sub_25AB846DC(v4, v1, type metadata accessor for IdentityAnalyticsReporter);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v7 = (v2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = swift_allocObject();
  v0[9] = v8;
  sub_25AB84BD4(v1, v8 + v6, type metadata accessor for IdentityAnalyticsReporter);
  *(void *)(v8 + v7) = v5;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FF38);
  sub_25AB6DFD0((unint64_t *)&qword_26A4A0038, &qword_26A49FF38);
  sub_25AC350E0();
  return MEMORY[0x270FA2498](sub_25AB80308);
}

uint64_t sub_25AB80308()
{
  sub_25AC32D00();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25AB8039C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = a3;
  return MEMORY[0x270FA2498](sub_25AB803BC);
}

uint64_t sub_25AB803BC()
{
  uint64_t v1 = (uint64_t *)v0[2];
  type metadata accessor for IdentityAnalyticsReporter(0);
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[4] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_25AB8047C;
  uint64_t v5 = v0[3];
  return MEMORY[0x270EFAA38](v2, v3, v5, 0);
}

uint64_t sub_25AB8047C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_25AB80574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0A50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25AC38270;
  *(void *)(inited + 32) = sub_25AC33CB0();
  *(void *)(inited + 40) = v7;
  *(void *)(inited + 48) = sub_25AC33E50();
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 64) = sub_25AC33C60();
  *(void *)(inited + 72) = v9;
  *(void *)(inited + 80) = sub_25AC33CF0();
  *(void *)(inited + 88) = v10;
  *(void *)(inited + 96) = sub_25AC33CA0();
  *(void *)(inited + 104) = v11;
  *(void *)(inited + 112) = a2;
  *(void *)(inited + 120) = a3;
  swift_bridgeObjectRetain();
  *(void *)(inited + 128) = sub_25AC33A70();
  *(void *)(inited + 136) = v12;
  *(void *)(inited + 144) = sub_25AC33820();
  *(void *)(inited + 152) = v13;
  *(void *)(inited + 160) = sub_25AC33AD0();
  *(void *)(inited + 168) = v14;
  uint64_t v15 = v3[9];
  *(void *)(inited + 176) = v3[8];
  *(void *)(inited + 184) = v15;
  swift_bridgeObjectRetain();
  *(void *)(inited + 192) = sub_25AC33C20();
  *(void *)(inited + 200) = v16;
  uint64_t v17 = v3[11];
  *(void *)(inited + 208) = v3[10];
  *(void *)(inited + 216) = v17;
  swift_bridgeObjectRetain();
  unint64_t v18 = sub_25AB71794(inited);
  unint64_t v19 = sub_25AB80674(v18);
  swift_bridgeObjectRelease();
  sub_25AB7FADC(v19);
  return swift_bridgeObjectRelease();
}

unint64_t sub_25AB80674(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A0F70);
    uint64_t v2 = (void *)sub_25AC356D0();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v31 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v30 = (unint64_t)(63 - v3) >> 6;
  unint64_t v6 = &v35;
  uint64_t v7 = &v37;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = MEMORY[0x263F8D310];
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v19 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v19 >= v30) {
    goto LABEL_32;
  }
  unint64_t v20 = *(void *)(v31 + 8 * v19);
  int64_t v21 = i + 1;
  if (!v20)
  {
    int64_t v21 = i + 2;
    if (i + 2 >= v30) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v21);
    if (!v20)
    {
      int64_t v21 = i + 3;
      if (i + 3 >= v30) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v31 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = i + 4;
        if (i + 4 >= v30) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v31 + 8 * v21);
        if (!v20)
        {
          int64_t v22 = i + 5;
          if (i + 5 < v30)
          {
            unint64_t v20 = *(void *)(v31 + 8 * v22);
            if (v20)
            {
              int64_t v21 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v21 = v22 + 1;
              if (__OFADD__(v22, 1)) {
                goto LABEL_36;
              }
              if (v21 >= v30) {
                break;
              }
              unint64_t v20 = *(void *)(v31 + 8 * v21);
              ++v22;
              if (v20) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_25AB84B08();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v32 = (v20 - 1) & v20;
  unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
  for (i = v21; ; unint64_t v18 = __clz(__rbit64(v5)) | (i << 6))
  {
    uint64_t v23 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v18);
    uint64_t v33 = *v23;
    uint64_t v34 = v23[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0048);
    swift_dynamicCast();
    sub_25AB1DDC8(v6, v7);
    sub_25AB1DDC8(v7, v38);
    sub_25AB1DDC8(v38, &v36);
    unint64_t result = sub_25AB8D62C(v33, v34);
    unint64_t v24 = result;
    if (v25)
    {
      uint64_t v11 = v7;
      uint64_t v12 = v6;
      uint64_t v13 = v1;
      int64_t v14 = i;
      uint64_t v15 = v10;
      uint64_t v16 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      uint64_t *v16 = v33;
      v16[1] = v34;
      uint64_t v10 = v15;
      int64_t i = v14;
      uint64_t v1 = v13;
      unint64_t v6 = v12;
      uint64_t v7 = v11;
      uint64_t v17 = (_OWORD *)(v2[7] + 32 * v24);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      unint64_t result = (unint64_t)sub_25AB1DDC8(&v36, v17);
      unint64_t v5 = v32;
      if (!v32) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v26 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v26 = v33;
    v26[1] = v34;
    unint64_t result = (unint64_t)sub_25AB1DDC8(&v36, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v27 = v2[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_34;
    }
    v2[2] = v29;
    unint64_t v5 = v32;
    if (!v32) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v32 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_25AB809E4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A08D8);
    uint64_t v2 = sub_25AC356D0();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_25AB18F50(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    uint64_t v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_25AB1DDC8(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_25AB1DDC8(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_25AB1DDC8(v36, v37);
    sub_25AB1DDC8(v37, &v33);
    uint64_t result = sub_25AC35530();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_25AB1DDC8(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_25AB84B08();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_25AB80DAC@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v41 = a8;
  uint64_t v42 = a2;
  uint64_t v43 = a13;
  uint64_t v44 = a14;
  uint64_t v39 = a7;
  uint64_t v40 = a12;
  uint64_t v37 = a10;
  uint64_t v38 = a11;
  uint64_t v21 = sub_25AC32450();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  unint64_t v24 = (char *)&v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v25 = a1[1];
  *a9 = *a1;
  a9[1] = v25;
  a9[2] = a1[2];
  uint64_t v26 = (int *)type metadata accessor for IdentityAnalyticsTransaction(0);
  sub_25AB846DC(a2, (uint64_t)a9 + v26[5], type metadata accessor for IdentityAnalyticsReporter);
  int64_t v27 = (void *)((char *)a9 + v26[7]);
  *int64_t v27 = a3;
  v27[1] = a4;
  id v27[2] = a5;
  v27[3] = a6;
  uint64_t v28 = v39;
  sub_25AB846DC(v39, (uint64_t)a9 + v26[6], type metadata accessor for IdentityAnalyticsRequestInformation);
  long long v29 = (void *)((char *)a9 + v26[8]);
  uint64_t v30 = v37;
  *long long v29 = v41;
  v29[1] = v30;
  uint64_t v45 = v38;
  uint64_t v46 = v40;
  sub_25AC34F60();
  sub_25AC32440();
  sub_25AC32430();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  sub_25AC34F60();
  swift_bridgeObjectRelease();
  uint64_t v31 = v45;
  uint64_t v32 = v46;
  sub_25AB84744(v28, type metadata accessor for IdentityAnalyticsRequestInformation);
  uint64_t result = sub_25AB84744(v42, type metadata accessor for IdentityAnalyticsReporter);
  long long v34 = (void *)((char *)a9 + v26[9]);
  void *v34 = v31;
  v34[1] = v32;
  uint64_t v35 = (void *)((char *)a9 + v26[10]);
  uint64_t v36 = v44;
  *uint64_t v35 = v43;
  v35[1] = v36;
  return result;
}

uint64_t sub_25AB80FF4(uint64_t a1)
{
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_25AC33AD0();
  uint64_t v5 = v4;
  uint64_t v6 = (uint64_t *)(v1 + *(int *)(type metadata accessor for IdentityAnalyticsTransaction(0) + 36));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  uint64_t v20 = MEMORY[0x263F8D310];
  *(void *)&long long v19 = v7;
  *((void *)&v19 + 1) = v8;
  sub_25AB1DDC8(&v19, &v17);
  swift_bridgeObjectRetain();
  LOBYTE(v8) = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = a1;
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v17, v18);
  MEMORY[0x270FA5388](v9);
  unint64_t v11 = (uint64_t *)((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v12 + 16))(v11);
  sub_25AB83AF8(*v11, v11[1], v3, v5, v8, &v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  uint64_t v13 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25AB7FADC(v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB81174()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v116 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25AC33350();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v116 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  unint64_t v11 = (char *)&v116 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v116 - v12;
  unint64_t v14 = (unsigned char *)(v0 + *(int *)(type metadata accessor for IdentityAnalyticsTransaction(0) + 24));
  uint64_t v15 = *(int *)(type metadata accessor for IdentityAnalyticsRequestInformation(0) + 28);
  uint64_t v122 = v14;
  uint64_t v16 = &v14[v15];
  long long v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v17(v13, v16, v4);
  v17(v11, v13, v4);
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v11, v4);
  if (v18 == *MEMORY[0x263F155D8])
  {
    uint64_t v19 = sub_25AC33B40();
    uint64_t v21 = v20;
    uint64_t v22 = sub_25AC339B0();
    uint64_t v23 = MEMORY[0x263F8D310];
    uint64_t v127 = MEMORY[0x263F8D310];
    *(void *)&long long v126 = v22;
    *((void *)&v126 + 1) = v24;
    sub_25AB1DDC8(&v126, &v124);
    uint64_t v25 = MEMORY[0x263F8EE80];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v123 = v25;
    uint64_t v27 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v124, v125);
    MEMORY[0x270FA5388](v27);
    long long v29 = (uint64_t *)((char *)&v116 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v30 + 16))(v29);
    sub_25AB83AF8(*v29, v29[1], v19, v21, isUniquelyReferenced_nonNull_native, &v123);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v124);
    uint64_t v31 = v123;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v32 = sub_25AC33BB0();
    uint64_t v34 = v33;
    uint64_t v127 = v23;
    *(void *)&long long v126 = 0;
    *((void *)&v126 + 1) = 0xE000000000000000;
    sub_25AB1DDC8(&v126, &v124);
    char v35 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v123 = v31;
    uint64_t v36 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v124, v125);
    MEMORY[0x270FA5388](v36);
    uint64_t v38 = (uint64_t *)((char *)&v116 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v39 + 16))(v38);
    sub_25AB83AF8(*v38, v38[1], v32, v34, v35, &v123);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v124);
    uint64_t v40 = v123;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v41 = sub_25AC33A30();
    uint64_t v43 = v42;
    char v44 = *v122;
    uint64_t v127 = MEMORY[0x263F8D4F8];
    LOBYTE(v126) = v44;
    sub_25AB1DDC8(&v126, &v124);
    char v45 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v123 = v40;
    uint64_t v46 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v124, v125);
    MEMORY[0x270FA5388](v46);
    unint64_t v48 = (char *)&v116 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v49 + 16))(v48);
    sub_25AB84160(*v48, v41, v43, v45, &v123);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v124);
    uint64_t v50 = v123;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    return v50;
  }
  uint64_t v120 = v4;
  uint64_t v121 = v13;
  uint64_t v51 = v5;
  uint64_t v52 = v122;
  if (v18 == *MEMORY[0x263F155E8])
  {
    uint64_t v53 = sub_25AC33B40();
    uint64_t v55 = v54;
    uint64_t v56 = sub_25AC33990();
    uint64_t v57 = MEMORY[0x263F8D310];
    uint64_t v127 = MEMORY[0x263F8D310];
    *(void *)&long long v126 = v56;
    *((void *)&v126 + 1) = v58;
    sub_25AB1DDC8(&v126, &v124);
    uint64_t v59 = MEMORY[0x263F8EE80];
    char v60 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v123 = v59;
    uint64_t v61 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v124, v125);
    MEMORY[0x270FA5388](v61);
    uint64_t v63 = (uint64_t *)((char *)&v116 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v64 + 16))(v63);
    sub_25AB83AF8(*v63, v63[1], v53, v55, v60, &v123);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v124);
    uint64_t v65 = v123;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v66 = sub_25AC33BB0();
    uint64_t v68 = v67;
    uint64_t v69 = sub_25AC33980();
LABEL_7:
    uint64_t v127 = v57;
    *(void *)&long long v126 = v69;
    *((void *)&v126 + 1) = v70;
    sub_25AB1DDC8(&v126, &v124);
    char v83 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v123 = v65;
    uint64_t v84 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v124, v125);
    MEMORY[0x270FA5388](v84);
    unint64_t v86 = (uint64_t *)((char *)&v116 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v87 + 16))(v86);
    sub_25AB83AF8(*v86, v86[1], v66, v68, v83, &v123);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v124);
    uint64_t v88 = v123;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v89 = sub_25AC33A90();
    uint64_t v91 = v90;
    uint64_t v92 = sub_25AB81DE8(*((void *)v52 + 2));
    uint64_t v127 = v57;
    *(void *)&long long v126 = v92;
    *((void *)&v126 + 1) = v93;
    sub_25AB1DDC8(&v126, &v124);
    char v94 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v123 = v88;
    uint64_t v95 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v124, v125);
    MEMORY[0x270FA5388](v95);
    uint64_t v97 = (uint64_t *)((char *)&v116 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v98 + 16))(v97);
    sub_25AB83AF8(*v97, v97[1], v89, v91, v94, &v123);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v124);
    uint64_t v50 = v123;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v121, v120);
    return v50;
  }
  if (v18 == *MEMORY[0x263F155E0])
  {
    uint64_t v71 = sub_25AC33B40();
    uint64_t v73 = v72;
    uint64_t v74 = sub_25AC33990();
    uint64_t v57 = MEMORY[0x263F8D310];
    uint64_t v127 = MEMORY[0x263F8D310];
    *(void *)&long long v126 = v74;
    *((void *)&v126 + 1) = v75;
    sub_25AB1DDC8(&v126, &v124);
    uint64_t v76 = MEMORY[0x263F8EE80];
    char v77 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v123 = v76;
    uint64_t v78 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v124, v125);
    MEMORY[0x270FA5388](v78);
    uint64_t v80 = (uint64_t *)((char *)&v116 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v81 + 16))(v80);
    sub_25AB83AF8(*v80, v80[1], v71, v73, v77, &v123);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v124);
    uint64_t v65 = v123;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v66 = sub_25AC33BB0();
    uint64_t v68 = v82;
    uint64_t v69 = sub_25AC339A0();
    goto LABEL_7;
  }
  if (qword_26A49F818 != -1) {
    swift_once();
  }
  uint64_t v99 = __swift_project_value_buffer(v1, (uint64_t)qword_26A4A1D30);
  sub_25AB4C944(v99, (uint64_t)v3, &qword_26A49F9A0);
  uint64_t v100 = sub_25AC345E0();
  uint64_t v101 = *(void *)(v100 - 8);
  int v102 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v101 + 48))(v3, 1, v100);
  uint64_t v103 = v120;
  uint64_t v104 = v121;
  if (v102 == 1)
  {
    uint64_t v105 = *(void (**)(char *, uint64_t))(v51 + 8);
    v105(v121, v120);
    sub_25AB18FAC((uint64_t)v3, &qword_26A49F9A0);
  }
  else
  {
    uint64_t v122 = (unsigned char *)v100;
    v17(v8, v121, v120);
    uint64_t v106 = sub_25AC345C0();
    os_log_type_t v107 = sub_25AC352C0();
    int v108 = v107;
    if (os_log_type_enabled(v106, v107))
    {
      int v119 = v108;
      uint64_t v109 = (uint8_t *)swift_slowAlloc();
      uint64_t v118 = swift_slowAlloc();
      *(void *)&long long v126 = v118;
      *(_DWORD *)uint64_t v109 = 136315138;
      uint64_t v116 = v109 + 4;
      os_log_t v117 = v106;
      sub_25AB84684();
      uint64_t v110 = sub_25AC35850();
      *(void *)&long long v124 = sub_25AB56574(v110, v111, (uint64_t *)&v126);
      sub_25AC354A0();
      swift_bridgeObjectRelease();
      uint64_t v105 = *(void (**)(char *, uint64_t))(v51 + 8);
      v105(v8, v103);
      os_log_t v112 = v117;
      _os_log_impl(&dword_25AB11000, v117, (os_log_type_t)v119, "Unknown Identity analytics data transfer type: [ %s ]", v109, 0xCu);
      uint64_t v113 = v118;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v113, -1, -1);
      MEMORY[0x261151C20](v109, -1, -1);

      uint64_t v114 = v121;
    }
    else
    {
      uint64_t v105 = *(void (**)(char *, uint64_t))(v51 + 8);
      v105(v8, v103);

      uint64_t v114 = v104;
    }
    v105(v114, v103);
    (*(void (**)(char *, unsigned char *))(v101 + 8))(v3, v122);
  }
  v105(v11, v103);
  return MEMORY[0x263F8EE80];
}

uint64_t sub_25AB81DE8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v23 = MEMORY[0x263F8EE78];
    sub_25AB67C90(0, v1, 0);
    uint64_t v3 = 0;
    uint64_t v22 = a1 + 32;
    do
    {
      uint64_t v4 = (void *)(v22 + 16 * v3);
      unint64_t v5 = v4[1];
      if ((v5 & 0x2000000000000000) != 0) {
        uint64_t v6 = HIBYTE(v5) & 0xF;
      }
      else {
        uint64_t v6 = *v4 & 0xFFFFFFFFFFFFLL;
      }
      swift_bridgeObjectRetain_n();
      if (v6)
      {
        while (1)
        {
          swift_bridgeObjectRetain();
          uint64_t v7 = sub_25AC34FF0();
          uint64_t v9 = v8;
          swift_bridgeObjectRelease();
          if (v7 == 40 && v9 == 0xE100000000000000) {
            break;
          }
          char v10 = sub_25AC35870();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0 || 4 * v6 == (unint64_t)sub_25AC34F30() >> 14) {
            goto LABEL_14;
          }
        }
        swift_bridgeObjectRelease();
      }
LABEL_14:
      uint64_t v11 = sub_25AC35010();
      uint64_t v13 = v12;
      uint64_t v15 = v14;
      uint64_t v17 = v16;
      swift_bridgeObjectRelease_n();
      unint64_t v19 = *(void *)(v23 + 16);
      unint64_t v18 = *(void *)(v23 + 24);
      if (v19 >= v18 >> 1) {
        sub_25AB67C90(v18 > 1, v19 + 1, 1);
      }
      ++v3;
      *(void *)(v23 + 16) = v19 + 1;
      uint64_t v20 = (void *)(v23 + 32 * v19);
      v20[4] = v11;
      v20[5] = v13;
      void v20[6] = v15;
      v20[7] = v17;
    }
    while (v3 != v1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0A30);
  sub_25AB6DFD0(&qword_26A4A0A38, &qword_26A4A0A30);
  sub_25AB84630();
  sub_25AC35030();
  swift_bridgeObjectRelease();
  sub_25AC34F60();
  swift_bridgeObjectRelease();
  sub_25AC34F60();
  return 123;
}

uint64_t sub_25AB8205C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25AC330C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + *(int *)(type metadata accessor for IdentityAnalyticsTransaction(0) + 24);
  uint64_t v9 = type metadata accessor for IdentityAnalyticsRequestInformation(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8 + *(int *)(v9 + 32), v4);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v10 == *MEMORY[0x263F154A0])
  {
    uint64_t v11 = sub_25AC33870();
LABEL_13:
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v12;
  }
  if (v10 != *MEMORY[0x263F15498])
  {
    if (qword_26A49F818 != -1) {
      swift_once();
    }
    uint64_t v13 = __swift_project_value_buffer(v1, (uint64_t)qword_26A4A1D30);
    sub_25AB4C944(v13, (uint64_t)v3, &qword_26A49F9A0);
    uint64_t v14 = sub_25AC345E0();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v3, 1, v14) == 1)
    {
      sub_25AB18FAC((uint64_t)v3, &qword_26A49F9A0);
    }
    else
    {
      uint64_t v16 = sub_25AC345C0();
      os_log_type_t v17 = sub_25AC352C0();
      if (os_log_type_enabled(v16, v17))
      {
        unint64_t v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v18 = 0;
        _os_log_impl(&dword_25AB11000, v16, v17, "Unknown Identity analytics documentSubType", v18, 2u);
        MEMORY[0x261151C20](v18, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v15 + 8))(v3, v14);
    }
    uint64_t v11 = sub_25AC33880();
    goto LABEL_13;
  }
  return sub_25AC33880();
}

uint64_t sub_25AB82374()
{
  uint64_t v1 = sub_25AB81174();
  uint64_t v2 = sub_25AC33A70();
  uint64_t v4 = v3;
  uint64_t v5 = sub_25AC33820();
  uint64_t v6 = MEMORY[0x263F8D310];
  uint64_t v105 = MEMORY[0x263F8D310];
  *(void *)&long long v104 = v5;
  *((void *)&v104 + 1) = v7;
  sub_25AB1DDC8(&v104, &v102);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v101 = v1;
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v102, v103);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t *)((char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v12 + 16))(v11);
  sub_25AB83AF8(*v11, v11[1], v2, v4, isUniquelyReferenced_nonNull_native, &v101);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v102);
  uint64_t v13 = v101;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_25AC33AF0();
  uint64_t v16 = v15;
  uint64_t v17 = sub_25AB8205C();
  uint64_t v105 = v6;
  *(void *)&long long v104 = v17;
  *((void *)&v104 + 1) = v18;
  sub_25AB1DDC8(&v104, &v102);
  char v19 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v101 = v13;
  uint64_t v20 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v102, v103);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (uint64_t *)((char *)&v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v23 + 16))(v22);
  sub_25AB83AF8(*v22, v22[1], v14, v16, v19, &v101);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v102);
  uint64_t v24 = v101;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_25AC33B00();
  uint64_t v27 = v26;
  uint64_t v28 = (int *)type metadata accessor for IdentityAnalyticsTransaction(0);
  long long v29 = (void *)((char *)v0 + v28[7]);
  uint64_t v30 = *v29;
  uint64_t v31 = v29[1];
  uint64_t v105 = v6;
  *(void *)&long long v104 = v30;
  *((void *)&v104 + 1) = v31;
  sub_25AB1DDC8(&v104, &v102);
  swift_bridgeObjectRetain();
  LOBYTE(v31) = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v101 = v24;
  uint64_t v32 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v102, v103);
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (uint64_t *)((char *)&v100 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v35 + 16))(v34);
  sub_25AB83AF8(*v34, v34[1], v25, v27, v31, &v101);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v102);
  uint64_t v36 = v101;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = sub_25AC33B60();
  uint64_t v39 = v38;
  uint64_t v40 = v29[2];
  uint64_t v41 = v29[3];
  uint64_t v105 = v6;
  *(void *)&long long v104 = v40;
  *((void *)&v104 + 1) = v41;
  sub_25AB1DDC8(&v104, &v102);
  swift_bridgeObjectRetain();
  LOBYTE(v41) = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v101 = v36;
  uint64_t v42 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v102, v103);
  MEMORY[0x270FA5388](v42);
  char v44 = (uint64_t *)((char *)&v100 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v45 + 16))(v44);
  sub_25AB83AF8(*v44, v44[1], v37, v39, v41, &v101);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v102);
  uint64_t v46 = v101;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v47 = sub_25AC33BF0();
  uint64_t v49 = v48;
  uint64_t v50 = v0[4];
  uint64_t v51 = v0[5];
  uint64_t v105 = v6;
  *(void *)&long long v104 = v50;
  *((void *)&v104 + 1) = v51;
  sub_25AB1DDC8(&v104, &v102);
  swift_bridgeObjectRetain();
  LOBYTE(v51) = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v101 = v46;
  uint64_t v52 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v102, v103);
  MEMORY[0x270FA5388](v52);
  uint64_t v54 = (uint64_t *)((char *)&v100 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v55 + 16))(v54);
  sub_25AB83AF8(*v54, v54[1], v47, v49, v51, &v101);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v102);
  uint64_t v56 = v101;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v57 = sub_25AC33C40();
  uint64_t v59 = v58;
  char v60 = (void *)((char *)v0 + v28[8]);
  uint64_t v61 = *v60;
  uint64_t v62 = v60[1];
  uint64_t v105 = v6;
  *(void *)&long long v104 = v61;
  *((void *)&v104 + 1) = v62;
  sub_25AB1DDC8(&v104, &v102);
  swift_bridgeObjectRetain();
  LOBYTE(v62) = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v101 = v56;
  uint64_t v63 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v102, v103);
  MEMORY[0x270FA5388](v63);
  uint64_t v65 = (uint64_t *)((char *)&v100 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v66 + 16))(v65);
  sub_25AB83AF8(*v65, v65[1], v57, v59, v62, &v101);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v102);
  uint64_t v67 = v101;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v68 = sub_25AC33C30();
  uint64_t v70 = v69;
  uint64_t v71 = v0[2];
  uint64_t v72 = v0[3];
  uint64_t v105 = v6;
  *(void *)&long long v104 = v71;
  *((void *)&v104 + 1) = v72;
  sub_25AB1DDC8(&v104, &v102);
  swift_bridgeObjectRetain();
  LOBYTE(v72) = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v101 = v67;
  uint64_t v73 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v102, v103);
  MEMORY[0x270FA5388](v73);
  uint64_t v75 = (uint64_t *)((char *)&v100 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v76 + 16))(v75);
  sub_25AB83AF8(*v75, v75[1], v68, v70, v72, &v101);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v102);
  uint64_t v77 = v101;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v78 = sub_25AC33B10();
  uint64_t v80 = v79;
  uint64_t v81 = sub_25AB81DE8(*(void *)((char *)v0 + v28[6] + 8));
  uint64_t v105 = v6;
  *(void *)&long long v104 = v81;
  *((void *)&v104 + 1) = v82;
  sub_25AB1DDC8(&v104, &v102);
  LOBYTE(v72) = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v101 = v77;
  uint64_t v83 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v102, v103);
  MEMORY[0x270FA5388](v83);
  uint64_t v85 = (uint64_t *)((char *)&v100 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v86 + 16))(v85);
  sub_25AB83AF8(*v85, v85[1], v78, v80, v72, &v101);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v102);
  uint64_t v87 = v101;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v88 = sub_25AC33C20();
  uint64_t v90 = v89;
  uint64_t v91 = (void *)((char *)v0 + v28[10]);
  uint64_t v92 = *v91;
  uint64_t v93 = v91[1];
  uint64_t v105 = v6;
  *(void *)&long long v104 = v92;
  *((void *)&v104 + 1) = v93;
  sub_25AB1DDC8(&v104, &v102);
  swift_bridgeObjectRetain();
  LOBYTE(v93) = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v101 = v87;
  uint64_t v94 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v102, v103);
  MEMORY[0x270FA5388](v94);
  uint64_t v96 = (uint64_t *)((char *)&v100 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v97 + 16))(v96);
  sub_25AB83AF8(*v96, v96[1], v88, v90, v93, &v101);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v102);
  uint64_t v98 = v101;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v98;
}

uint64_t sub_25AB82D2C@<X0>(_OWORD *a1@<X8>)
{
  char v44 = a1;
  uint64_t v2 = type metadata accessor for IdentityAnalyticsRequestInformation(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for IdentityAnalyticsReporter(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = v1[1];
  v45[0] = *v1;
  v45[1] = v8;
  long long v46 = v1[2];
  long long v47 = v45[0];
  long long v48 = v8;
  long long v49 = v46;
  uint64_t v9 = (int *)type metadata accessor for IdentityAnalyticsTransaction(0);
  sub_25AB846DC((uint64_t)v1 + v9[5], (uint64_t)v7, type metadata accessor for IdentityAnalyticsReporter);
  uint64_t v10 = v9[6];
  uint64_t v11 = (uint64_t *)((char *)v1 + v9[7]);
  uint64_t v12 = v11[1];
  uint64_t v42 = *v11;
  uint64_t v43 = v4;
  uint64_t v13 = v11[3];
  uint64_t v40 = v11[2];
  sub_25AB846DC((uint64_t)v1 + v10, (uint64_t)v4, type metadata accessor for IdentityAnalyticsRequestInformation);
  uint64_t v14 = v9[9];
  uint64_t v15 = (uint64_t *)((char *)v1 + v9[8]);
  uint64_t v16 = v15[1];
  uint64_t v38 = *v15;
  uint64_t v18 = *(void *)((char *)v1 + v14);
  unint64_t v17 = *(void *)((char *)v1 + v14 + 8);
  sub_25AB564C8((uint64_t)&v47);
  sub_25AB564C8((uint64_t)&v48);
  sub_25AB564C8((uint64_t)&v49);
  if ((v17 & 0x2000000000000000) != 0) {
    uint64_t v19 = HIBYTE(v17) & 0xF;
  }
  else {
    uint64_t v19 = v18 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v41 = v12;
  swift_bridgeObjectRetain();
  uint64_t v39 = v13;
  swift_bridgeObjectRetain();
  uint64_t v37 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19)
  {
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_25AC34FF0();
      uint64_t v22 = v21;
      swift_bridgeObjectRelease();
      if (v20 == 46 && v22 == 0xE100000000000000) {
        break;
      }
      char v23 = sub_25AC35870();
      swift_bridgeObjectRelease();
      if ((v23 & 1) != 0 || 4 * v19 == (unint64_t)sub_25AC34F30() >> 14) {
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
  }
LABEL_12:
  uint64_t v24 = sub_25AC35010();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = MEMORY[0x261150A30](v24, v26, v28, v30);
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void *)((char *)v1 + v9[10]);
  uint64_t v35 = swift_bridgeObjectRetain();
  return sub_25AB80DAC(v45, (uint64_t)v7, v42, v41, v40, v39, (uint64_t)v43, v38, v44, v37, v31, v33, v34, v35);
}

uint64_t sub_25AB83018(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25AB82374();
  uint64_t v5 = sub_25AC33CB0();
  uint64_t v7 = v6;
  uint64_t v8 = sub_25AC33E50();
  uint64_t v9 = MEMORY[0x263F8D310];
  uint64_t v42 = MEMORY[0x263F8D310];
  *(void *)&long long v41 = v8;
  *((void *)&v41 + 1) = v10;
  sub_25AB1DDC8(&v41, &v39);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v38 = v4;
  uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v39, v40);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (uint64_t *)((char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v15 + 16))(v14);
  sub_25AB83AF8(*v14, v14[1], v5, v7, isUniquelyReferenced_nonNull_native, &v38);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v39);
  uint64_t v16 = v38;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_25AC33C60();
  uint64_t v19 = v18;
  uint64_t v20 = sub_25AC33CF0();
  uint64_t v42 = v9;
  *(void *)&long long v41 = v20;
  *((void *)&v41 + 1) = v21;
  sub_25AB1DDC8(&v41, &v39);
  char v22 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v38 = v16;
  uint64_t v23 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v39, v40);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (uint64_t *)((char *)&v37 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v26 + 16))(v25);
  sub_25AB83AF8(*v25, v25[1], v17, v19, v22, &v38);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v39);
  uint64_t v27 = v38;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_25AC33CA0();
  uint64_t v30 = v29;
  uint64_t v42 = v9;
  *(void *)&long long v41 = a1;
  *((void *)&v41 + 1) = a2;
  sub_25AB1DDC8(&v41, &v39);
  swift_bridgeObjectRetain();
  LOBYTE(a2) = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v38 = v27;
  uint64_t v31 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v39, v40);
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (uint64_t *)((char *)&v37 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v34 + 16))(v33);
  sub_25AB83AF8(*v33, v33[1], v28, v30, a2, &v38);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v39);
  uint64_t v35 = v38;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25AB80FF4(v35);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB83388()
{
  uint64_t v0 = sub_25AB82374();
  uint64_t v1 = sub_25AC33CB0();
  uint64_t v3 = v2;
  uint64_t v4 = sub_25AC33EA0();
  uint64_t v5 = MEMORY[0x263F8D310];
  uint64_t v30 = MEMORY[0x263F8D310];
  *(void *)&long long v29 = v4;
  *((void *)&v29 + 1) = v6;
  sub_25AB1DDC8(&v29, &v27);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v26 = v0;
  uint64_t v8 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v27, v28);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (uint64_t *)((char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v11 + 16))(v10);
  sub_25AB83AF8(*v10, v10[1], v1, v3, isUniquelyReferenced_nonNull_native, &v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
  uint64_t v12 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_25AC33C60();
  uint64_t v15 = v14;
  uint64_t v16 = sub_25AC33CD0();
  uint64_t v30 = v5;
  *(void *)&long long v29 = v16;
  *((void *)&v29 + 1) = v17;
  sub_25AB1DDC8(&v29, &v27);
  char v18 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v26 = v12;
  uint64_t v19 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v27, v28);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (uint64_t *)((char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v22 + 16))(v21);
  sub_25AB83AF8(*v21, v21[1], v13, v15, v18, &v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
  uint64_t v23 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25AB80FF4(v23);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB835E4(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0010);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25AC3B770;
  *(void *)(inited + 32) = sub_25AC33CB0();
  *(void *)(inited + 40) = v5;
  uint64_t v6 = sub_25AC33EA0();
  uint64_t v7 = MEMORY[0x263F8D310];
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 80) = sub_25AC33A70();
  *(void *)(inited + 88) = v9;
  uint64_t v10 = sub_25AC33820();
  *(void *)(inited + 120) = v7;
  *(void *)(inited + 96) = v10;
  *(void *)(inited + 104) = v11;
  *(void *)(inited + 128) = sub_25AC33C60();
  *(void *)(inited + 136) = v12;
  uint64_t v13 = sub_25AC33CE0();
  *(void *)(inited + 168) = v7;
  *(void *)(inited + 144) = v13;
  *(void *)(inited + 152) = v14;
  *(void *)(inited + 176) = sub_25AC33C10();
  *(void *)(inited + 184) = v15;
  *(void *)(inited + 216) = v7;
  *(void *)(inited + 192) = a1;
  *(void *)(inited + 200) = a2;
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_25AB7162C(inited);
  sub_25AB80FF4(v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB836B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0010);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25AC3B780;
  *(void *)(inited + 32) = sub_25AC33CB0();
  *(void *)(inited + 40) = v9;
  uint64_t v10 = sub_25AC33F80();
  uint64_t v11 = MEMORY[0x263F8D310];
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v10;
  *(void *)(inited + 56) = v12;
  *(void *)(inited + 80) = sub_25AC33C60();
  *(void *)(inited + 88) = v13;
  *(void *)(inited + 120) = v11;
  *(void *)(inited + 96) = a3;
  *(void *)(inited + 104) = a4;
  swift_bridgeObjectRetain();
  *(void *)(inited + 128) = sub_25AC33C80();
  *(void *)(inited + 136) = v14;
  *(void *)(inited + 168) = v11;
  *(void *)(inited + 144) = a1;
  *(void *)(inited + 152) = a2;
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_25AB7162C(inited);
  sub_25AB80FF4(v15);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB8378C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0010);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25AC3B780;
  *(void *)(inited + 32) = sub_25AC33CB0();
  *(void *)(inited + 40) = v9;
  uint64_t v10 = MEMORY[0x263F8D310];
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 56) = a2;
  swift_bridgeObjectRetain();
  *(void *)(inited + 80) = sub_25AC33C60();
  *(void *)(inited + 88) = v11;
  uint64_t v12 = sub_25AC33CD0();
  *(void *)(inited + 120) = v10;
  *(void *)(inited + 96) = v12;
  *(void *)(inited + 104) = v13;
  *(void *)(inited + 128) = sub_25AC33CA0();
  *(void *)(inited + 136) = v14;
  *(void *)(inited + 168) = v10;
  *(void *)(inited + 144) = a3;
  *(void *)(inited + 152) = a4;
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_25AB7162C(inited);
  sub_25AB80FF4(v15);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB83860(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0010);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25AC3B780;
  *(void *)(inited + 32) = sub_25AC33CB0();
  *(void *)(inited + 40) = v5;
  uint64_t v6 = sub_25AC33E60();
  uint64_t v7 = MEMORY[0x263F8D310];
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 80) = sub_25AC33C60();
  *(void *)(inited + 88) = v9;
  uint64_t v10 = sub_25AC33CD0();
  *(void *)(inited + 120) = v7;
  *(void *)(inited + 96) = v10;
  *(void *)(inited + 104) = v11;
  *(void *)(inited + 128) = sub_25AC33C10();
  *(void *)(inited + 136) = v12;
  *(void *)(inited + 168) = v7;
  *(void *)(inited + 144) = a1;
  *(void *)(inited + 152) = a2;
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_25AB7162C(inited);
  sub_25AB80FF4(v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB83920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0010);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25AC3B790;
  *(void *)(inited + 32) = sub_25AC33CB0();
  *(void *)(inited + 40) = v9;
  uint64_t v10 = MEMORY[0x263F8D310];
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 56) = a2;
  swift_bridgeObjectRetain();
  *(void *)(inited + 80) = sub_25AC33C60();
  *(void *)(inited + 88) = v11;
  uint64_t v12 = sub_25AC33CE0();
  *(void *)(inited + 120) = v10;
  *(void *)(inited + 96) = v12;
  *(void *)(inited + 104) = v13;
  unint64_t v14 = sub_25AB7162C(inited);
  if (a4)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_25AC33C80();
    uint64_t v17 = v16;
    uint64_t v29 = v10;
    *(void *)&long long v28 = a3;
    *((void *)&v28 + 1) = a4;
    sub_25AB1DDC8(&v28, &v26);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v25 = v14;
    uint64_t v19 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v26, v27);
    MEMORY[0x270FA5388](v19);
    uint64_t v21 = (uint64_t *)((char *)&v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v22 + 16))(v21);
    sub_25AB83AF8(*v21, v21[1], v15, v17, isUniquelyReferenced_nonNull_native, &v25);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
    unint64_t v14 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_25AB80FF4(v14);
  return swift_bridgeObjectRelease();
}

_OWORD *sub_25AB83AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  uint64_t v10 = MEMORY[0x263F8D310];
  uint64_t v29 = MEMORY[0x263F8D310];
  *(void *)&long long v28 = a1;
  *((void *)&v28 + 1) = a2;
  uint64_t v11 = (void *)*a6;
  unint64_t v13 = sub_25AB8D62C(a3, a4);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a5 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = (void *)*a6;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = (_OWORD *)(v19[7] + 32 * v13);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return sub_25AB1DDC8(&v28, v20);
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a5 & 1) == 0)
  {
    sub_25ABAFA40();
    goto LABEL_7;
  }
  sub_25ABABC90(v16, a5 & 1);
  unint64_t v22 = sub_25AB8D62C(a3, a4);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    uint64_t result = (_OWORD *)sub_25AC358B0();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  uint64_t v19 = (void *)*a6;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v24 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v28, v10);
  MEMORY[0x270FA5388](v24);
  long long v26 = (uint64_t *)((char *)&v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v27 + 16))(v26);
  sub_25AB845AC(v13, a3, a4, *v26, v26[1], v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_25AB83CDC()
{
  uint64_t v1 = (int *)(type metadata accessor for IdentityAnalyticsReporter(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[8];
  uint64_t v7 = sub_25AC32E50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_25AB83E08(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for IdentityAnalyticsReporter(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_25AB25F50;
  return sub_25AB800F0(a1, v6, v7, v8, v9);
}

uint64_t sub_25AB83F2C()
{
  uint64_t v1 = (int *)(type metadata accessor for IdentityAnalyticsReporter(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + v1[8];
  uint64_t v8 = sub_25AC32E50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_25AB84050()
{
  uint64_t v2 = *(void *)(type metadata accessor for IdentityAnalyticsReporter(0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  void *v6 = v1;
  _OWORD v6[2] = v4;
  v6[3] = v5;
  v6[1] = sub_25AB24B20;
  return MEMORY[0x270FA2498](sub_25AB803BC);
}

_OWORD *sub_25AB84160(char a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  LOBYTE(v27) = a1;
  uint64_t v9 = MEMORY[0x263F8D4F8];
  uint64_t v28 = MEMORY[0x263F8D4F8];
  uint64_t v10 = (void *)*a5;
  unint64_t v12 = sub_25AB8D62C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = (void *)*a5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      return sub_25AB1DDC8(&v27, v19);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_25ABAFA40();
    goto LABEL_7;
  }
  sub_25ABABC90(v15, a4 & 1);
  unint64_t v21 = sub_25AB8D62C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_14:
    uint64_t result = (_OWORD *)sub_25AC358B0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*a5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v23 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v27, v9);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v27 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v26 + 16))(v25);
  sub_25AB84528(v12, a2, a3, *v25, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_25AB84344(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  *(void *)&long long v27 = a1;
  uint64_t v9 = MEMORY[0x263F8D6C8];
  uint64_t v28 = MEMORY[0x263F8D6C8];
  uint64_t v10 = (void *)*a5;
  unint64_t v12 = sub_25AB8D62C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = (void *)*a5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      return sub_25AB1DDC8(&v27, v19);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_25ABAFA40();
    goto LABEL_7;
  }
  sub_25ABABC90(v15, a4 & 1);
  unint64_t v21 = sub_25AB8D62C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_14:
    uint64_t result = (_OWORD *)sub_25AC358B0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*a5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v23 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v27, v9);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (uint64_t *)((char *)&v27 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v26 + 16))(v25);
  sub_25AB847A4(v12, a2, a3, *v25, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_25AB84528(unint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  LOBYTE(v11) = a4;
  uint64_t v12 = MEMORY[0x263F8D4F8];
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  void *v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_25AB1DDC8(&v11, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

_OWORD *sub_25AB845AC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v13 = MEMORY[0x263F8D310];
  *(void *)&long long v12 = a4;
  *((void *)&v12 + 1) = a5;
  a6[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v7 = (void *)(a6[6] + 16 * a1);
  *uint64_t v7 = a2;
  v7[1] = a3;
  uint64_t result = sub_25AB1DDC8(&v12, (_OWORD *)(a6[7] + 32 * a1));
  uint64_t v9 = a6[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a6[2] = v11;
  }
  return result;
}

unint64_t sub_25AB84630()
{
  unint64_t result = qword_26A4A0A40;
  if (!qword_26A4A0A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0A40);
  }
  return result;
}

unint64_t sub_25AB84684()
{
  unint64_t result = qword_26A4A0A48;
  if (!qword_26A4A0A48)
  {
    sub_25AC33350();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0A48);
  }
  return result;
}

uint64_t sub_25AB846DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25AB84744(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_25AB847A4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  *(void *)&long long v11 = a4;
  uint64_t v12 = MEMORY[0x263F8D6C8];
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  void *v6 = a2;
  v6[1] = a3;
  unint64_t result = sub_25AB1DDC8(&v11, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_25AB84828@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  uint64_t v6 = sub_25AC324C0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  BOOL v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FEB8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_25AC32450();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  char v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a1;
  uint64_t v37 = a1[1];
  uint64_t v38 = v17;
  uint64_t v18 = a1[2];
  uint64_t v35 = a1[3];
  uint64_t v36 = v18;
  uint64_t v19 = a1[4];
  uint64_t v33 = a1[5];
  uint64_t v34 = v19;
  sub_25AC32440();
  uint64_t v20 = sub_25AC32430();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_25AC324B0();
  sub_25AC324A0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v23 = sub_25AC32490();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v12, 1, v23) == 1)
  {
    uint64_t result = sub_25AB18FAC((uint64_t)v12, &qword_26A49FEB8);
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
  }
  else
  {
    uint64_t v26 = sub_25AC32480();
    unint64_t v27 = v28;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v12, v23);
  }
  uint64_t v29 = v37;
  *a4 = v38;
  a4[1] = v29;
  uint64_t v30 = v35;
  a4[2] = v36;
  a4[3] = v30;
  uint64_t v31 = v33;
  a4[4] = v34;
  a4[5] = v31;
  uint64_t v32 = v40;
  a4[6] = v39;
  a4[7] = v32;
  a4[8] = v20;
  a4[9] = v22;
  a4[10] = v26;
  a4[11] = v27;
  return result;
}

uint64_t sub_25AB84B08()
{
  return swift_release();
}

uint64_t sub_25AB84B14(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_25AB24B20;
  return sub_25AB7F0D0(a1, v4, v5, v7, v6);
}

uint64_t sub_25AB84BD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25AB84C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A08F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroy_20Tm()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25AB84CE8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_25AB25F50;
  return sub_25AB7B3D8(a1, v4, v5, v7, v6);
}

uint64_t sub_25AB84DA8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

ValueMetadata *type metadata accessor for IdentityAnalyticsMerchantInformation()
{
  return &type metadata for IdentityAnalyticsMerchantInformation;
}

void sub_25AB84DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_25AC328E0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  BOOL v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AC326B0();
  sub_25AC32870();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v10 = *(void *)(v3 + 48);
  uint64_t v11 = *(void *)(v3 + 56);
  uint64_t v12 = *(void *)(v3 + 64);
  uint64_t v13 = *(void **)(v3 + 72);
  v27[0] = a1;
  v27[1] = a2;
  id v27[2] = v10;
  v27[3] = v11;
  v27[4] = v12;
  v27[5] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v14 = v13;
  uint64_t v15 = (void *)sub_25AB6A4DC((uint64_t)v27);
  uint64_t v17 = v16;
  if ((v16 & 0x100) != 0)
  {
    (*(void (**)(void))(v3 + 24))();
    uint64_t v18 = *(void (**)(unsigned char *))(v3 + 80);
    uint64_t v22 = v15;
    char v23 = v17;
    sub_25AB748D4((uint64_t)&v22);
    sub_25AB259D8((uint64_t)&v22, (uint64_t)v24, &qword_26A4A0848);
    memcpy(v25, v24, 0x152uLL);
    nullsub_1(v25);
    sub_25AB70A58(v25, v26);
    v18(v26);
  }
  else
  {
    type metadata accessor for SPRReaderDelegate();
    uint64_t v19 = swift_allocObject();
    *(unsigned char *)(v19 + 48) = 0;
    *(void *)(v19 + 56) = v14;
    *(void *)(v19 + 16) = sub_25AB88604;
    *(void *)(v19 + 24) = v3;
    *(void *)(v19 + 32) = sub_25AB88608;
    *(void *)(v19 + 40) = v3;
    swift_retain_n();
    id v20 = v14;
    sub_25AB50A68(v15, v19);
    swift_release();
    id v21 = v15;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_25AB57F38(v15, v17, BYTE1(v17) & 1);
  sub_25AB57F38(v15, v17, BYTE1(v17) & 1);
}

uint64_t sub_25AB85030(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  BOOL v9 = (char *)&v22 - v8;
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v10 = __swift_project_value_buffer(v4, (uint64_t)qword_26A4A1CE8);
  sub_25AB4C944(v10, (uint64_t)v9, &qword_26A49F9A0);
  uint64_t v11 = sub_25AC345E0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v9, 1, v11) == 1)
  {
    sub_25AB15148((uint64_t)v9);
    if ((*(unsigned char *)(v2 + 16) & 1) == 0)
    {
LABEL_5:
      sub_25AB4C944(v10, (uint64_t)v7, &qword_26A49F9A0);
      if (v13(v7, 1, v11) == 1)
      {
        sub_25AB15148((uint64_t)v7);
      }
      else
      {
        sub_25AB881BC((uint64_t)a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25AB6E14C);
        sub_25AB881BC((uint64_t)a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25AB6E14C);
        uint64_t v15 = sub_25AC345C0();
        os_log_type_t v16 = sub_25AC352B0();
        if (os_log_type_enabled(v15, v16))
        {
          uint64_t v17 = (uint8_t *)swift_slowAlloc();
          uint64_t v24 = swift_slowAlloc();
          v26[0] = v24;
          char v23 = v17;
          *(_DWORD *)uint64_t v17 = 136315138;
          uint64_t v22 = v17 + 4;
          unint64_t v18 = sub_25AB706A0();
          uint64_t v25 = sub_25AB56574(v18, v19, v26);
          sub_25AC354A0();
          swift_bridgeObjectRelease();
          sub_25AB881BC((uint64_t)a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25AB6E348);
          sub_25AB881BC((uint64_t)a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25AB6E348);
          id v20 = v23;
          _os_log_impl(&dword_25AB11000, v15, v16, "%s", v23, 0xCu);
          uint64_t v21 = v24;
          swift_arrayDestroy();
          MEMORY[0x261151C20](v21, -1, -1);
          MEMORY[0x261151C20](v20, -1, -1);
        }
        else
        {

          sub_25AB881BC((uint64_t)a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25AB6E348);
          sub_25AB881BC((uint64_t)a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25AB6E348);
        }
        (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v11);
      }
      return (*(uint64_t (**)(void *))(v2 + 80))(a1);
    }
  }
  else
  {
    sub_25AB464DC(v2, 0xD000000000000015, 0x800000025AC3F460, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    if ((*(unsigned char *)(v2 + 16) & 1) == 0) {
      goto LABEL_5;
    }
  }
  sub_25AB70A58(a1, v26);
  uint64_t result = sub_25AB6F068((uint64_t)v26);
  if (result == 1)
  {
    *(unsigned char *)(v2 + 16) = 0;
    return sub_25AB8542C(2);
  }
  return result;
}

uint64_t sub_25AB8542C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v29 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  BOOL v9 = (char *)&v27 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v27 - v10;
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v3, (uint64_t)qword_26A4A1CE8);
  sub_25AB4C944(v12, (uint64_t)v11, &qword_26A49F9A0);
  uint64_t v13 = sub_25AC345E0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v11, 1, v13) == 1)
  {
    sub_25AB15148((uint64_t)v11);
    int v16 = *(unsigned __int8 *)(v2 + 16);
    if ((v16 & 1) == 0)
    {
LABEL_5:
      int v28 = v16;
      uint64_t v27 = v14;
      *(unsigned char *)(v2 + 16) = 1;
      uint64_t v17 = *(void (**)(unsigned char *))(v2 + 80);
      sub_25AB8858C((uint64_t)v30);
      sub_25AB70A58(v30, v36);
      v17(v36);
      sub_25AB511F8();
      uint64_t v31 = v29;
      char v32 = 0;
      sub_25AB748D4((uint64_t)&v31);
      sub_25AB259D8((uint64_t)&v31, (uint64_t)v33, &qword_26A4A0848);
      memcpy(v34, v33, 0x152uLL);
      nullsub_1(v34);
      sub_25AB70A58(v34, v35);
      uint64_t v18 = ((uint64_t (*)(unsigned char *))v17)(v35);
      (*(void (**)(uint64_t))(v2 + 24))(v18);
      sub_25AB4C944(v12, (uint64_t)v9, &qword_26A49F9A0);
      if (v15(v9, 1, v13) == 1)
      {
        sub_25AB15148((uint64_t)v9);
      }
      else
      {
        unint64_t v19 = sub_25AC345C0();
        os_log_type_t v20 = sub_25AC352D0();
        if (os_log_type_enabled(v19, v20))
        {
          uint64_t v21 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v21 = 0;
          _os_log_impl(&dword_25AB11000, v19, v20, "readTask cancelled", v21, 2u);
          MEMORY[0x261151C20](v21, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v13);
      }
      int v16 = v28;
      return v16 ^ 1u;
    }
  }
  else
  {
    sub_25AB464DC(v2, 0xD000000000000014, 0x800000025AC3F440, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    int v16 = *(unsigned __int8 *)(v2 + 16);
    if ((v16 & 1) == 0) {
      goto LABEL_5;
    }
  }
  sub_25AB4C944(v12, (uint64_t)v6, &qword_26A49F9A0);
  if (v15(v6, 1, v13) == 1)
  {
    sub_25AB15148((uint64_t)v6);
  }
  else
  {
    int v22 = v16;
    char v23 = sub_25AC345C0();
    os_log_type_t v24 = sub_25AC352C0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_25AB11000, v23, v24, "readTask already cancelled", v25, 2u);
      MEMORY[0x261151C20](v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v13);
    int v16 = v22;
  }
  return v16 ^ 1u;
}

uint64_t sub_25AB85870()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SPRReadTask()
{
  return self;
}

uint64_t sub_25AB858EC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v2 + 48) == 1)
  {
    if (qword_26A49F800 != -1) {
      swift_once();
    }
    uint64_t v8 = __swift_project_value_buffer(v4, (uint64_t)qword_26A4A1CE8);
    sub_25AB4C944(v8, (uint64_t)v7, &qword_26A49F9A0);
    uint64_t v9 = sub_25AC345E0();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) == 1)
    {
      return sub_25AB15148((uint64_t)v7);
    }
    else
    {
      uint64_t v12 = sub_25AC345C0();
      os_log_type_t v13 = sub_25AC352D0();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl(&dword_25AB11000, v12, v13, "Abort returning result, read has already completed", v14, 2u);
        MEMORY[0x261151C20](v14, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    }
  }
  else
  {
    *(unsigned char *)(v2 + 48) = 1;
    (*(void (**)(uint64_t))(v2 + 32))(v5);
    return (*(uint64_t (**)(uint64_t))(v2 + 16))(a1);
  }
}

uint64_t sub_25AB85AE8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25AC328E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_25AC328D0();
  sub_25AC32850();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  id v8 = objc_msgSend(a1, sel_vasResponses);
  sub_25AB885C8(0, &qword_26A4A0AE0);
  unint64_t v9 = sub_25AC35080();

  uint64_t v10 = *(void *)(v2 + 56);
  uint64_t v11 = sub_25AC33070();
  uint64_t v12 = sub_25AB6B684(v9, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25AB6BE84(a1, v10, v12, (uint64_t)v21);
  memcpy(v23, v21, sizeof(v23));
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_25AB85D4C(a1);
  if (v14 <= 0xFBu)
  {
    uint64_t v15 = v13;
    char v16 = v14;
    memcpy(v20, v23, 0x151uLL);
    nullsub_1(v20);
    sub_25AB259D8((uint64_t)v20, (uint64_t)v22, &qword_26A49FDF8);
    sub_25AB1E924((uint64_t)v21);
    sub_25AB86ED4(v15, v16, (uint64_t)v22);
  }
  else
  {
    memcpy(v18, v23, 0x151uLL);
    sub_25AB75B30((uint64_t)v18);
    sub_25AB259D8((uint64_t)v18, (uint64_t)v19, &qword_26A4A0848);
    memcpy(v20, v19, 0x152uLL);
    nullsub_1(v20);
    sub_25AB70A58(v20, v22);
    sub_25AB1E924((uint64_t)v21);
    sub_25AB858EC((uint64_t)v22);
  }
  sub_25AB36048((uint64_t)v21);
  return sub_25AB36048((uint64_t)v21);
}

uint64_t sub_25AB85D4C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v72 = (uint64_t)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v74 = (uint8_t *)&v71 - v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v73 = (uint64_t)&v71 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v75 = (uint64_t)&v71 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v71 - v11;
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1CE8);
  sub_25AB4C944(v13, (uint64_t)v12, &qword_26A49F9A0);
  uint64_t v14 = sub_25AC345E0();
  uint64_t v76 = *(void *)(v14 - 8);
  uint64_t v15 = v76 + 48;
  char v16 = *(unsigned int (**)(void, void, void))(v76 + 48);
  if (v16(v12, 1, v14) == 1)
  {
    sub_25AB15148((uint64_t)v12);
  }
  else
  {
    uint64_t v71 = v15;
    uint64_t v17 = v13;
    uint64_t v18 = a1;
    unint64_t v19 = v16;
    uint64_t v20 = v14;
    uint64_t v21 = sub_25AC345C0();
    os_log_type_t v22 = sub_25AC352B0();
    if (os_log_type_enabled(v21, v22))
    {
      char v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v23 = 0;
      _os_log_impl(&dword_25AB11000, v21, v22, "checkSuccessExceptions", v23, 2u);
      MEMORY[0x261151C20](v23, -1, -1);
    }

    uint64_t v14 = v20;
    (*(void (**)(char *, uint64_t))(v76 + 8))(v12, v20);
    char v16 = v19;
    a1 = v18;
    uint64_t v13 = v17;
  }
  if (objc_msgSend(a1, sel_payAppletFinalStatus) == 7)
  {
    type metadata accessor for ReadError(0);
    os_log_type_t v24 = &off_265482000;
    id v77 = objc_msgSend(a1, sel_readError);
    sub_25AB875F0(MEMORY[0x263F8EE78]);
    sub_25AB878E8(&qword_26A49FBE8, type metadata accessor for ReadError);
    sub_25AC321D0();
    uint64_t v25 = v78;
    uint64_t v26 = v75;
    sub_25AB4C944(v13, v75, &qword_26A49F9A0);
    if (v16(v26, 1, v14) == 1)
    {
      sub_25AB15148(v26);
    }
    else
    {
      id v47 = v25;
      long long v48 = sub_25AC345C0();
      os_log_type_t v49 = sub_25AC352B0();
      if (os_log_type_enabled(v48, v49))
      {
        uint64_t v50 = (uint8_t *)swift_slowAlloc();
        uint64_t v51 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v50 = 138412290;
        uint64_t v74 = v50 + 4;
        id v52 = v47;
        uint64_t v53 = v14;
        uint64_t v54 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v78 = (void *)v54;
        uint64_t v26 = v75;
        sub_25AC354A0();
        *uint64_t v51 = v54;
        uint64_t v14 = v53;

        _os_log_impl(&dword_25AB11000, v48, v49, "Applet has error: %@", v50, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A8);
        swift_arrayDestroy();
        MEMORY[0x261151C20](v51, -1, -1);
        uint64_t v55 = v50;
        os_log_type_t v24 = &off_265482000;
        MEMORY[0x261151C20](v55, -1, -1);
      }
      else
      {
      }
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v26, v14);
    }
    id v56 = [a1 (SEL)v24[195]];

    return sub_25AB6CFD8((uint64_t)v56);
  }
  uint64_t v75 = v14;
  unsigned int v27 = objc_msgSend(a1, sel_outcomeStatus);
  sub_25AC32FE0();
  uint64_t v28 = sub_25AC33260();
  if (v28 == sub_25AC33260())
  {
    uint64_t v29 = (void *)sub_25AC33040();
    sub_25AB885C8(0, (unint64_t *)&qword_26A4A0AE8);
    uint64_t v30 = (void *)sub_25AC35400();
    char v31 = sub_25AC35410();

    if ((v31 & 1) == 0 && v27 == 32 && objc_msgSend(a1, sel_forFallback))
    {
      uint64_t v32 = v13;
      uint64_t v33 = v73;
      sub_25AB4C944(v32, v73, &qword_26A49F9A0);
      uint64_t v34 = v75;
      if (v16(v33, 1, v75) == 1)
      {
        sub_25AB15148(v33);
      }
      else
      {
        uint64_t v61 = sub_25AC345C0();
        os_log_type_t v62 = sub_25AC352B0();
        if (os_log_type_enabled(v61, v62))
        {
          uint64_t v63 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v63 = 0;
          _os_log_impl(&dword_25AB11000, v61, v62, "Fallback and outcome is decline, ignore decline", v63, 2u);
          MEMORY[0x261151C20](v63, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v33, v34);
      }
      return 0;
    }
  }
  uint64_t v35 = v16;
  unsigned int v36 = objc_msgSend(a1, sel_outcomeStatus);
  sub_25AC32FE0();
  uint64_t v37 = sub_25AC33260();
  if (v37 == sub_25AC33260()
    && (uint64_t v38 = (void *)sub_25AC33040(),
        sub_25AB885C8(0, (unint64_t *)&qword_26A4A0AE8),
        uint64_t v39 = (void *)sub_25AC35400(),
        char v40 = sub_25AC35410(),
        v38,
        v39,
        (v40 & 1) == 0)
    && v36 == 32)
  {
    uint64_t v41 = v13;
    uint64_t v42 = (uint64_t)v74;
    sub_25AB4C944(v41, (uint64_t)v74, &qword_26A49F9A0);
    uint64_t v43 = v75;
    if (v35(v42, 1, v75) == 1)
    {
      sub_25AB15148(v42);
    }
    else
    {
      uint64_t v58 = sub_25AC345C0();
      os_log_type_t v59 = sub_25AC352B0();
      if (os_log_type_enabled(v58, v59))
      {
        char v60 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v60 = 0;
        _os_log_impl(&dword_25AB11000, v58, v59, "Outcome is declined for purchase", v60, 2u);
        MEMORY[0x261151C20](v60, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v42, v43);
    }
    return 11;
  }
  else
  {
    sub_25AC32FE0();
    uint64_t v44 = sub_25AC33260();
    if (v44 != sub_25AC33260()) {
      return 0;
    }
    unsigned int v45 = objc_msgSend(a1, sel_outcomeStatus);
    if (v45 <= 0x30 && ((1 << v45) & 0x1000000010001) != 0) {
      return 0;
    }
    uint64_t v46 = v72;
    sub_25AB4C944(v13, v72, &qword_26A49F9A0);
    if (v35(v46, 1, v75) == 1)
    {
      sub_25AB15148(v46);
    }
    else
    {
      id v64 = a1;
      uint64_t v65 = sub_25AC345C0();
      os_log_type_t v66 = sub_25AC352B0();
      if (os_log_type_enabled(v65, v66))
      {
        uint64_t v67 = (uint8_t *)swift_slowAlloc();
        uint64_t v68 = swift_slowAlloc();
        uint64_t v78 = (void *)v68;
        *(_DWORD *)uint64_t v67 = 136315138;
        objc_msgSend(v64, sel_outcomeStatus);
        uint64_t v69 = sub_25AC353F0();
        id v77 = (id)sub_25AB56574(v69, v70, (uint64_t *)&v78);
        sub_25AC354A0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25AB11000, v65, v66, "Outcome has exceptions %s", v67, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x261151C20](v68, -1, -1);
        MEMORY[0x261151C20](v67, -1, -1);
      }
      else
      {
      }
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v46, v75);
    }
    return 10;
  }
}

void sub_25AB866EC(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v46 - v10;
  uint64_t v12 = sub_25AC328E0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AC328D0();
  sub_25AC32850();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  _s3__C4CodeOMa_1(0);
  v54[0] = 14001;
  sub_25AB878E8(&qword_26A49FB98, _s3__C4CodeOMa_1);
  if (sub_25AC32100())
  {
    if (qword_26A49F800 != -1) {
      swift_once();
    }
    uint64_t v16 = __swift_project_value_buffer(v6, (uint64_t)qword_26A4A1CE8);
    sub_25AB4C944(v16, (uint64_t)v11, &qword_26A49F9A0);
    uint64_t v17 = sub_25AC345E0();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v11, 1, v17) == 1)
    {
      sub_25AB15148((uint64_t)v11);
    }
    else
    {
      uint64_t v28 = sub_25AC345C0();
      os_log_type_t v29 = sub_25AC352C0();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v30 = 0;
        _os_log_impl(&dword_25AB11000, v28, v29, "Read Error: [ service disconnected ]", v30, 2u);
        MEMORY[0x261151C20](v30, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v17);
    }
    sub_25AB1E86C((uint64_t)v53);
    sub_25AB259D8((uint64_t)v53, (uint64_t)v54, &qword_26A49FDF8);
    uint64_t v31 = 0;
LABEL_28:
    sub_25AB86ED4(v31, 66, (uint64_t)v54);
    return;
  }
  v52[48] = a1;
  id v19 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A00C0);
  type metadata accessor for ReadError(0);
  if (!swift_dynamicCast())
  {
    if (qword_26A49F800 != -1) {
      swift_once();
    }
    uint64_t v32 = __swift_project_value_buffer(v6, (uint64_t)qword_26A4A1CE8);
    sub_25AB4C944(v32, (uint64_t)v9, &qword_26A49F9A0);
    uint64_t v33 = sub_25AC345E0();
    uint64_t v34 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v9, 1, v33) == 1)
    {
      sub_25AB15148((uint64_t)v9);
    }
    else
    {
      id v35 = a1;
      id v36 = a1;
      uint64_t v37 = sub_25AC345C0();
      os_log_type_t v38 = sub_25AC352C0();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        uint64_t v48 = swift_slowAlloc();
        v54[0] = v48;
        id v47 = v39;
        *(_DWORD *)uint64_t v39 = 136446210;
        v46[1] = v39 + 4;
        swift_getErrorValue();
        uint64_t v40 = sub_25AC35900();
        v53[0] = sub_25AB56574(v40, v41, v54);
        sub_25AC354A0();
        swift_bridgeObjectRelease();

        uint64_t v42 = v47;
        _os_log_impl(&dword_25AB11000, v37, v38, "Unknown readCard error. Error: [%{public}s]", v47, 0xCu);
        uint64_t v43 = v48;
        swift_arrayDestroy();
        MEMORY[0x261151C20](v43, -1, -1);
        MEMORY[0x261151C20](v42, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v33);
    }
    sub_25AB1E86C((uint64_t)v53);
    sub_25AB259D8((uint64_t)v53, (uint64_t)v54, &qword_26A49FDF8);
    uint64_t v31 = 2;
    goto LABEL_28;
  }
  uint64_t v20 = (void *)v52[47];
  sub_25AB1E86C((uint64_t)v52);
  sub_25AB259D8((uint64_t)v52, (uint64_t)v53, &qword_26A49FDF8);
  if (a2)
  {
    id v21 = a2;
    id v22 = objc_msgSend(v21, sel_vasResponses);
    sub_25AB885C8(0, &qword_26A4A0AE0);
    unint64_t v23 = sub_25AC35080();

    uint64_t v24 = *(void *)(v3 + 56);
    uint64_t v25 = sub_25AC33070();
    uint64_t v26 = sub_25AB6B684(v23, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25AB6BE84(v21, v24, v26, (uint64_t)v49);

    swift_bridgeObjectRelease();
    memcpy(v54, v49, 0x151uLL);
    nullsub_1(v54);
    unsigned int v27 = v54;
  }
  else
  {
    unsigned int v27 = v52;
  }
  sub_25AB259D8((uint64_t)v27, (uint64_t)v51, &qword_26A49FDF8);
  sub_25AB259D8((uint64_t)v51, (uint64_t)v54, &qword_26A49FDF8);
  uint64_t v50 = (uint64_t)v20;
  sub_25AB878E8(&qword_26A49FBE8, type metadata accessor for ReadError);
  sub_25AC32190();
  if (v49[0] == 4020 || v49[0] == 4042)
  {
LABEL_24:
    sub_25AB86ED4(1, 66, (uint64_t)v53);
    sub_25AB880E4((uint64_t)v51, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_25AB1EADC);

    return;
  }
  if (v49[0] == 4029)
  {
    sub_25AB87930(5);
    goto LABEL_24;
  }
  v49[43] = v20;
  sub_25AC32190();
  uint64_t v44 = sub_25AB6CFD8(v50);
  sub_25AB86ED4(v44, v45, (uint64_t)v54);

  sub_25AB880E4((uint64_t)v51, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_25AB1EADC);
}

uint64_t sub_25AB86ED4(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F800 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v8, (uint64_t)qword_26A4A1CE8);
  sub_25AB4C944(v11, (uint64_t)v10, &qword_26A49F9A0);
  uint64_t v12 = sub_25AC345E0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
  {
    sub_25AB15148((uint64_t)v10);
  }
  else
  {
    uint64_t v28 = a1;
    uint64_t v14 = sub_25AC345C0();
    os_log_type_t v15 = sub_25AC352C0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v27 = v4;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v26 = a3;
      uint64_t v17 = (uint8_t *)v16;
      uint64_t v25 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 138543362;
      v24[1] = v17 + 4;
      sub_25AB57F44();
      swift_allocError();
      *(void *)uint64_t v18 = v28;
      *(unsigned char *)(v18 + 8) = a2;
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)&long long v63 = v19;
      sub_25AC354A0();
      uint64_t v20 = v25;
      *uint64_t v25 = v19;
      _os_log_impl(&dword_25AB11000, v14, v15, "Read Error: [ %{public}@ ]", v17, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A8);
      swift_arrayDestroy();
      MEMORY[0x261151C20](v20, -1, -1);
      id v21 = v17;
      a3 = v26;
      MEMORY[0x261151C20](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    a1 = v28;
  }
  sub_25AB259D8(a3, (uint64_t)&v32, &qword_26A49FDF8);
  if (sub_25AB1E90C((uint64_t)&v32) == 1)
  {
    *(void *)&long long v63 = a1;
    BYTE8(v63) = a2;
    sub_25AB748D4((uint64_t)&v63);
  }
  else
  {
    v30[0] = v57 & 1;
    v29[0] = v59 & 1;
    long long v63 = v32;
    uint64_t v64 = v33;
    uint64_t v65 = v34;
    char v66 = v35;
    uint64_t v67 = v36;
    uint64_t v68 = v37;
    char v69 = v38;
    long long v70 = v39;
    long long v71 = v40;
    long long v72 = v41;
    long long v73 = v42;
    long long v74 = v43;
    long long v75 = v44;
    long long v76 = v45;
    uint64_t v77 = v46;
    uint64_t v78 = v47;
    int16x8_t v22 = (int16x8_t)vmovl_u8((uint8x8_t)__PAIR64__(DWORD1(v32), v48));
    v22.i64[0] &= 0xFF01FF01FF01FF01;
    unsigned __int32 v79 = vmovn_s16(v22).u32[0];
    char v80 = v49 & 1;
    long long v81 = v50;
    uint64_t v82 = v51;
    uint64_t v83 = a1;
    char v84 = a2;
    long long v85 = v52;
    uint64_t v86 = v53;
    char v87 = v54 & 1;
    long long v88 = v55;
    uint64_t v89 = v56;
    char v90 = v57 & 1;
    uint64_t v91 = v58;
    char v92 = v59 & 1;
    uint64_t v93 = v60;
    uint64_t v94 = v61;
    char v95 = v62 & 1;
    sub_25AB75B30((uint64_t)&v63);
  }
  sub_25AB259D8((uint64_t)&v63, (uint64_t)v31, &qword_26A4A0848);
  sub_25AB259D8((uint64_t)v31, (uint64_t)v29, &qword_26A4A0848);
  memcpy(v30, v29, 0x152uLL);
  nullsub_1(v30);
  sub_25AB70A58(v30, &v63);
  sub_25AB880E4(a3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_25AB8741C);
  sub_25AB858EC((uint64_t)&v63);
  return sub_25AB87554((uint64_t)v31);
}

uint64_t sub_25AB873B0()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SPRReaderDelegate()
{
  return self;
}

void sub_25AB8741C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v28 = a28;
  }
}

uint64_t sub_25AB87554(uint64_t a1)
{
  long long v7 = *(_OWORD *)(a1 + 288);
  long long v8 = *(_OWORD *)(a1 + 304);
  long long v5 = *(_OWORD *)(a1 + 256);
  long long v6 = *(_OWORD *)(a1 + 272);
  long long v3 = *(_OWORD *)(a1 + 224);
  long long v4 = *(_OWORD *)(a1 + 240);
  sub_25AB6E348(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void **)(a1 + 216),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    *(void *)(a1 + 320),
    *(void *)(a1 + 328),
    *(unsigned char *)(a1 + 336),
    *(unsigned char *)(a1 + 337));
  return a1;
}

unint64_t sub_25AB875F0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    long long v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A0F80);
  uint64_t v2 = sub_25AC356D0();
  long long v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_25AB4C944(v6, (uint64_t)&v15, &qword_26A4A08C8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_25AB87728(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_25AB1DDC8(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_25AB87728(uint64_t a1, uint64_t a2)
{
  sub_25AC35970();
  sub_25AC34F20();
  uint64_t v4 = sub_25AC359D0();
  return sub_25AB877A0(a1, a2, v4);
}

unint64_t sub_25AB877A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_25AC35870() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_25AC35870() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_25AC35870()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_25AB878E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25AB87930(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25AC328E0();
  long long v45 = *(uint8_t **)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  char v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v8);
  BOOL v13 = (char *)v38 - v12;
  if ((*(unsigned char *)(v2 + 48) & 1) == 0)
  {
    switch(a1)
    {
      case 0:
        sub_25AB755BC((uint64_t)v49);
        goto LABEL_17;
      case 1:
        sub_25AB755F8((uint64_t)v49);
        goto LABEL_17;
      case 2:
        sub_25AB8858C((uint64_t)v49);
        goto LABEL_17;
      case 3:
        sub_25AB88550((uint64_t)v49);
        goto LABEL_17;
      case 4:
        sub_25AB88514((uint64_t)v49);
        goto LABEL_17;
      case 5:
        sub_25AB884D8((uint64_t)v49);
        goto LABEL_17;
      case 6:
        sub_25AB8849C((uint64_t)v49);
        goto LABEL_17;
      case 7:
        sub_25AB88460((uint64_t)v49);
        goto LABEL_17;
      case 8:
        sub_25AB88424((uint64_t)v49);
        goto LABEL_17;
      case 9:
        sub_25AB88180((uint64_t)v49);
LABEL_17:
        sub_25AB70A58(v49, v48);
        sub_25AB70A58(v48, v49);
        if (qword_26A49F800 != -1) {
          swift_once();
        }
        uint64_t v17 = __swift_project_value_buffer(v7, (uint64_t)qword_26A4A1CE8);
        sub_25AB4C944(v17, (uint64_t)v13, &qword_26A49F9A0);
        uint64_t v18 = sub_25AC345E0();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v18) == 1)
        {
          sub_25AB15148((uint64_t)v13);
        }
        else
        {
          sub_25AB881BC((uint64_t)v48, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25AB6E14C);
          sub_25AB881BC((uint64_t)v48, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25AB6E14C);
          uint64_t v20 = sub_25AC345C0();
          os_log_type_t v21 = sub_25AC352D0();
          LODWORD(v44) = v21;
          if (os_log_type_enabled(v20, v21))
          {
            os_log_t v41 = v20;
            int16x8_t v22 = (uint8_t *)swift_slowAlloc();
            uint64_t v40 = swift_slowAlloc();
            uint64_t v47 = v40;
            *(_DWORD *)int16x8_t v22 = 136446210;
            v38[1] = v22 + 4;
            long long v39 = v22;
            sub_25AB881BC((uint64_t)v48, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25AB6E14C);
            unint64_t v23 = sub_25AB706A0();
            uint64_t v42 = v4;
            uint64_t v43 = a1;
            unint64_t v25 = v24;
            sub_25AB881BC((uint64_t)v48, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25AB6E348);
            uint64_t v46 = sub_25AB56574(v23, v25, &v47);
            sub_25AC354A0();
            a1 = v43;
            swift_bridgeObjectRelease();
            sub_25AB881BC((uint64_t)v48, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25AB6E348);
            uint64_t v4 = v42;
            sub_25AB881BC((uint64_t)v48, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25AB6E348);
            os_log_t v26 = v41;
            os_log_type_t v27 = v44;
            uint64_t v44 = v2;
            id v28 = v39;
            _os_log_impl(&dword_25AB11000, v41, v27, "onUpdate: [ %{public}s ]", v39, 0xCu);
            uint64_t v29 = v40;
            swift_arrayDestroy();
            MEMORY[0x261151C20](v29, -1, -1);
            uint64_t v30 = v28;
            uint64_t v2 = v44;
            MEMORY[0x261151C20](v30, -1, -1);
          }
          else
          {

            sub_25AB881BC((uint64_t)v48, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25AB6E348);
            sub_25AB881BC((uint64_t)v48, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25AB6E348);
          }
          (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v18);
        }
        switch(a1)
        {
          case 0:
            sub_25AC326B0();
            goto LABEL_28;
          case 1:
            sub_25AC328C0();
            sub_25AC32850();
            uint64_t v31 = (void (*)(char *, uint64_t))*((void *)v45 + 1);
            v31(v6, v4);
            sub_25AC328D0();
            goto LABEL_29;
          case 5:
          case 6:
          case 8:
            sub_25AC328D0();
LABEL_28:
            sub_25AC32850();
            uint64_t v31 = (void (*)(char *, uint64_t))*((void *)v45 + 1);
            v31(v6, v4);
            sub_25AC328C0();
LABEL_29:
            sub_25AC32870();
            v31(v6, v4);
            break;
          default:
            break;
        }
        (*(void (**)(uint64_t *))(v2 + 16))(v49);
        uint64_t result = sub_25AB881BC((uint64_t)v48, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25AB6E348);
        break;
      default:
        if (qword_26A49F800 != -1) {
          swift_once();
        }
        uint64_t v14 = __swift_project_value_buffer(v7, (uint64_t)qword_26A4A1CE8);
        sub_25AB4C944(v14, (uint64_t)v10, &qword_26A49F9A0);
        uint64_t v15 = sub_25AC345E0();
        uint64_t v16 = *(void *)(v15 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v15) == 1)
        {
          uint64_t result = sub_25AB15148((uint64_t)v10);
        }
        else
        {
          long long v32 = sub_25AC345C0();
          os_log_type_t v33 = sub_25AC352C0();
          if (os_log_type_enabled(v32, v33))
          {
            uint64_t v34 = (uint8_t *)swift_slowAlloc();
            uint64_t v35 = swift_slowAlloc();
            v49[0] = v35;
            *(_DWORD *)uint64_t v34 = 136446210;
            long long v45 = v34 + 4;
            uint64_t v36 = sub_25AC35290();
            uint64_t v47 = sub_25AB56574(v36, v37, v49);
            sub_25AC354A0();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_25AB11000, v32, v33, "onUpdate: failed to parse [ %{public}s ]", v34, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x261151C20](v35, -1, -1);
            MEMORY[0x261151C20](v34, -1, -1);
          }

          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v10, v15);
        }
        break;
    }
  }
  return result;
}

uint64_t sub_25AB880E4(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v10 = *(unsigned char *)(a1 + 336);
  long long v8 = *(_OWORD *)(a1 + 288);
  long long v9 = *(_OWORD *)(a1 + 304);
  long long v6 = *(_OWORD *)(a1 + 256);
  long long v7 = *(_OWORD *)(a1 + 272);
  long long v4 = *(_OWORD *)(a1 + 224);
  long long v5 = *(_OWORD *)(a1 + 240);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((void *)&v4 + 1),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    v7,
    *((void *)&v7 + 1),
    v8,
    *((void *)&v8 + 1),
    v9,
    *((void *)&v9 + 1),
    *(void *)(a1 + 320),
    *(void *)(a1 + 328),
    v10);
  return a1;
}

double sub_25AB88180(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 336) = -2560;
  return result;
}

uint64_t sub_25AB881BC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  long long v8 = *(_OWORD *)(a1 + 288);
  long long v9 = *(_OWORD *)(a1 + 304);
  long long v6 = *(_OWORD *)(a1 + 256);
  long long v7 = *(_OWORD *)(a1 + 272);
  long long v4 = *(_OWORD *)(a1 + 224);
  long long v5 = *(_OWORD *)(a1 + 240);
  sub_25AB88258(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    *(void *)(a1 + 320),
    *(void *)(a1 + 328),
    *(_WORD *)(a1 + 336),
    a2);
  return a1;
}

uint64_t sub_25AB88258(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,unsigned __int16 a43,uint64_t (*a44)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  int v44 = a43 & 0xFE00;
  if (v44 != 62976 && (a43 & 0xFC00) != 0xF800 && v44 != 64512 && HIBYTE(a43) <= 0xFEu && (a43 & 0xFF00) != 0xFE00)
  {
    return a44(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34);
  }
  return result;
}

double sub_25AB88424(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 336) = -2304;
  return result;
}

double sub_25AB88460(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 336) = -2048;
  return result;
}

double sub_25AB8849C(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 336) = -1792;
  return result;
}

double sub_25AB884D8(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 336) = -1536;
  return result;
}

double sub_25AB88514(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 336) = -1280;
  return result;
}

double sub_25AB88550(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 336) = -1024;
  return result;
}

double sub_25AB8858C(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 336) = -768;
  return result;
}

uint64_t sub_25AB885C8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_25AB88608()
{
  if ((*(unsigned char *)(v0 + 16) & 1) == 0) {
    return (*(uint64_t (**)(void))(v0 + 24))();
  }
  return result;
}

uint64_t sub_25AB88638@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = sub_25AC31FB0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AC31FF0();
  swift_allocObject();
  sub_25AC31FE0();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F060E0], v3);
  sub_25AC31FC0();
  sub_25AB8DDD0();
  sub_25AC31FD0();
  uint64_t result = swift_release();
  long long v8 = v10[4];
  long long v9 = v10[5];
  *a1 = v10[3];
  a1[1] = v8;
  a1[2] = v9;
  return result;
}

uint64_t sub_25AB88A70()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v0);
  uint64_t v1 = sub_25AC31FB0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AC31FF0();
  swift_allocObject();
  sub_25AC31FE0();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F060E0], v1);
  sub_25AC31FC0();
  sub_25AB8DD28();
  sub_25AC31FD0();
  swift_release();
  return v6[4];
}

uint64_t sub_25AB88E94()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v0);
  uint64_t v1 = sub_25AC31FB0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SessionStore();
  sub_25AC31FF0();
  swift_allocObject();
  sub_25AC31FE0();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F060E0], v1);
  sub_25AC31FC0();
  sub_25AB8E070(&qword_26A4A0B18, (void (*)(uint64_t))type metadata accessor for SessionStore);
  sub_25AC31FD0();
  swift_release();
  return v6[5];
}

uint64_t sub_25AB892E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = sub_25AC31FB0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DiscoveryCacheContent(0);
  sub_25AC31FF0();
  swift_allocObject();
  sub_25AC31FE0();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F060E0], v3);
  sub_25AC31FC0();
  sub_25AB8E070(&qword_26A4A0B50, (void (*)(uint64_t))type metadata accessor for DiscoveryCacheContent);
  sub_25AC31FD0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, 0, 1, v7);
  return swift_release();
}

uint64_t sub_25AB897A8@<X0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388]();
  uint64_t v2 = sub_25AC31FB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25AC331D0();
  sub_25AC31FF0();
  swift_allocObject();
  sub_25AC31FE0();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F060E0], v2);
  sub_25AC31FC0();
  sub_25AB8E070(&qword_26A4A0B60, MEMORY[0x263F15500]);
  sub_25AC31FD0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, 0, 1, v6);
  return swift_release();
}

uint64_t sub_25AB89C6C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v0);
  uint64_t v1 = sub_25AC31FB0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AC31FF0();
  swift_allocObject();
  sub_25AC31FE0();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F060E0], v1);
  sub_25AC31FC0();
  sub_25AB8DE24();
  sub_25AC31FD0();
  return swift_release();
}

uint64_t sub_25AB8A098@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = sub_25AC31FB0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AC31FF0();
  swift_allocObject();
  sub_25AC31FE0();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F060E0], v3);
  sub_25AC31FC0();
  sub_25AB8E01C();
  sub_25AC31FD0();
  nullsub_1(a1);
  return swift_release();
}

uint64_t sub_25AB8A4DC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v0);
  uint64_t v1 = sub_25AC31FB0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AC31FF0();
  swift_allocObject();
  sub_25AC31FE0();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F060E0], v1);
  sub_25AC31FC0();
  sub_25AB8DE78();
  sub_25AC31FD0();
  swift_release();
  return v6[5];
}

uint64_t sub_25AB8A8FC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v0);
  uint64_t v1 = sub_25AC31FB0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AC31FF0();
  swift_allocObject();
  sub_25AC31FE0();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F060E0], v1);
  sub_25AC31FC0();
  sub_25AB8DF74();
  sub_25AC31FD0();
  swift_release();
  return v6[4];
}

uint64_t sub_25AB8AD14()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v0);
  uint64_t v1 = sub_25AC31FB0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AC31FF0();
  swift_allocObject();
  sub_25AC31FE0();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F060E0], v1);
  sub_25AC31FC0();
  sub_25AB8DF20();
  sub_25AC31FD0();
  swift_release();
  return v6[4];
}

uint64_t sub_25AB8B12C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v0);
  uint64_t v1 = sub_25AC31FB0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AC31FF0();
  swift_allocObject();
  sub_25AC31FE0();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F060E0], v1);
  sub_25AC31FC0();
  sub_25AB8DD7C();
  sub_25AC31FD0();
  swift_release();
  return v6[4];
}

uint64_t sub_25AB8B544@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = sub_25AC31FB0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AC31FF0();
  swift_allocObject();
  sub_25AC31FE0();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F060E0], v3);
  sub_25AC31FC0();
  sub_25AB8DCD4();
  sub_25AC31FD0();
  uint64_t result = swift_release();
  long long v8 = v10[4];
  long long v9 = v10[5];
  *a1 = v10[3];
  a1[1] = v8;
  a1[2] = v9;
  return result;
}

uint64_t sub_25AB8B974@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = sub_25AC31FB0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25AC33360();
  sub_25AC31FF0();
  swift_allocObject();
  sub_25AC31FE0();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F060E0], v3);
  sub_25AC31FC0();
  sub_25AB8E070(&qword_26A4A0B10, MEMORY[0x263F15630]);
  sub_25AC31FD0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, 0, 1, v7);
  return swift_release();
}

uint64_t sub_25AB8BE38()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v0);
  uint64_t v1 = sub_25AC31FB0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AC31FF0();
  swift_allocObject();
  sub_25AC31FE0();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F060E0], v1);
  sub_25AC31FC0();
  sub_25AB2B554();
  sub_25AC31FD0();
  char v7 = 0;
  swift_release();
  return v6[5];
}

uint64_t sub_25AB8C264()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v0);
  uint64_t v1 = sub_25AC31FB0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AC31FF0();
  swift_allocObject();
  sub_25AC31FE0();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F060E0], v1);
  sub_25AC31FC0();
  sub_25AB8DFC8();
  sub_25AC31FD0();
  swift_release();
  return v6[5];
}

uint64_t sub_25AB8C678()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v0);
  uint64_t v1 = sub_25AC31FB0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AC31FF0();
  swift_allocObject();
  sub_25AC31FE0();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F060E0], v1);
  sub_25AC31FC0();
  sub_25AB4C664();
  sub_25AC31FD0();
  swift_release();
  return v6[4];
}

uint64_t sub_25AB8CA90()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  sub_25AC35970();
  sub_25AC35990();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_25AC34F20();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_25AB8D894((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  return sub_25AC359D0();
}

uint64_t sub_25AB8CB30(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  if (*(void *)(v1 + 8))
  {
    sub_25AC35990();
    swift_bridgeObjectRetain();
    sub_25AC34F20();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25AC35990();
  }
  swift_bridgeObjectRetain();
  sub_25AB8D894(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB8CBD0()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  sub_25AC35970();
  sub_25AC35990();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_25AC34F20();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_25AB8D894((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  return sub_25AC359D0();
}

uint64_t sub_25AB8CC6C(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  if (v3)
  {
    if (v5)
    {
      BOOL v7 = *a1 == *a2 && v3 == v5;
      if (v7 || (sub_25AC35870() & 1) != 0) {
        goto LABEL_8;
      }
    }
    return 0;
  }
  if (v5) {
    return 0;
  }
LABEL_8:
  return sub_25AB8D518(v4, v6);
}

uint64_t sub_25AB8CCE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    sub_25AC34310();
  }
  sub_25AC34F60();
  swift_bridgeObjectRelease();
  sub_25AC34F60();
  sub_25AB8CDD0(a3);
  sub_25AC34F60();
  swift_bridgeObjectRelease();
  return 0x205B203A747441;
}

uint64_t sub_25AB8CDD0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    sub_25AB67C34(0, v1, 0);
    uint64_t v3 = a1 + 72;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25AC35580();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_25AC34F60();
      swift_bridgeObjectRelease();
      sub_25AC34F60();
      swift_bridgeObjectRetain();
      sub_25AC34F60();
      swift_bridgeObjectRelease();
      sub_25AC34F60();
      swift_bridgeObjectRetain();
      sub_25AC34F60();
      swift_bridgeObjectRelease();
      sub_25AC34F60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v5 = *(void *)(v8 + 16);
      unint64_t v4 = *(void *)(v8 + 24);
      if (v5 >= v4 >> 1) {
        sub_25AB67C34(v4 > 1, v5 + 1, 1);
      }
      v3 += 48;
      *(void *)(v8 + 16) = v5 + 1;
      uint64_t v6 = v8 + 16 * v5;
      *(void *)(v6 + 32) = 0x205B203A65707974;
      *(void *)(v6 + 40) = 0xE800000000000000;
      --v1;
    }
    while (v1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A07C0);
    sub_25AB7AD44();
    sub_25AC34DE0();
    swift_release();
  }
  sub_25AC34F60();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_25AB8D03C()
{
  return sub_25AB8CCE8(*v0, v0[1], v0[2]);
}

uint64_t sub_25AB8D048()
{
  uint64_t v1 = 0x65756C6176;
  if (*v0 == 1) {
    uint64_t v1 = 0x7461636572706564;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7461636572706564;
  }
}

uint64_t sub_25AB8D0A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25AB8E354(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25AB8D0D0(uint64_t a1)
{
  unint64_t v2 = sub_25AB8E77C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25AB8D10C(uint64_t a1)
{
  unint64_t v2 = sub_25AB8E77C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25AB8D148()
{
  return sub_25AC359D0();
}

uint64_t sub_25AB8D1FC()
{
  swift_bridgeObjectRetain();
  sub_25AC34F20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25AC34F20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25AC34F20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB8D2AC()
{
  return sub_25AC359D0();
}

double sub_25AB8D35C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_25AB8E4E4(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_25AB8D3A0(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  id v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  void v8[2] = v5;
  return sub_25AB8D980(v7, v8) & 1;
}

uint64_t sub_25AB8D3E8()
{
  return 0x205B203A65707974;
}

uint64_t sub_25AB8D518(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2)
  {
    uint64_t v3 = a2;
    if (a1 != a2)
    {
      uint64_t v4 = 0;
      uint64_t v17 = a1;
      while (1)
      {
        uint64_t v5 = *(void *)(a1 + v4 + 48);
        uint64_t v6 = *(void *)(a1 + v4 + 56);
        uint64_t v7 = *(void *)(a1 + v4 + 64);
        uint64_t v8 = *(void *)(a1 + v4 + 72);
        uint64_t v9 = *(void *)(v3 + v4 + 48);
        uint64_t v10 = *(void *)(v3 + v4 + 56);
        uint64_t v11 = *(void *)(v3 + v4 + 64);
        uint64_t v12 = *(void *)(v3 + v4 + 72);
        BOOL v13 = *(void *)(a1 + v4 + 32) == *(void *)(v3 + v4 + 32)
           && *(void *)(a1 + v4 + 40) == *(void *)(v3 + v4 + 40);
        if (!v13 && (sub_25AC35870() & 1) == 0) {
          break;
        }
        BOOL v14 = v5 == v9 && v6 == v10;
        if (!v14 && (sub_25AC35870() & 1) == 0) {
          break;
        }
        BOOL v15 = v7 == v11 && v8 == v12;
        if (!v15 && (sub_25AC35870() & 1) == 0) {
          break;
        }
        v4 += 48;
        --v2;
        a1 = v17;
        uint64_t v3 = a2;
        if (!v2) {
          return 1;
        }
      }
      return 0;
    }
  }
  return 1;
}

unint64_t sub_25AB8D62C(uint64_t a1, uint64_t a2)
{
  sub_25AC35970();
  sub_25AC34F20();
  uint64_t v4 = sub_25AC359D0();
  return sub_25AB8D6E8(a1, a2, v4);
}

unint64_t sub_25AB8D6A4(uint64_t a1)
{
  uint64_t v2 = sub_25AC35530();
  return sub_25AB8D7CC(a1, v2);
}

unint64_t sub_25AB8D6E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_25AC35870() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        BOOL v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_25AC35870() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_25AB8D7CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_25AB3C4CC(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x261151080](v9, a1);
      sub_25AB8DECC((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_25AB8D894(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_25AC35980();
  if (v3)
  {
    uint64_t v5 = a2 + 72;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25AC34F20();
      swift_bridgeObjectRetain();
      sub_25AC34F20();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_25AC34F20();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease_n();
      v5 += 48;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_25AB8D980(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_25AC35870(), result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (char v8 = sub_25AC35870(), result = 0, (v8 & 1) != 0))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5])
      {
        return 1;
      }
      else
      {
        return sub_25AC35870();
      }
    }
  }
  return result;
}

uint64_t sub_25AB8DA34(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v4 = 0;
    goto LABEL_19;
  }
  unint64_t v2 = sub_25AB8D62C(0x6E656B6F74, 0xE500000000000000);
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if (*(void *)(a1 + 16)) {
      goto LABEL_7;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    return v4;
  }
  uint64_t v4 = *(void *)(*(void *)(a1 + 56) + 16 * v2);
  swift_bridgeObjectRetain();
  if (!*(void *)(a1 + 16)) {
    goto LABEL_19;
  }
LABEL_7:
  unint64_t v5 = sub_25AB8D62C(0xD000000000000013, 0x800000025AC3F480);
  if ((v6 & 1) == 0) {
    goto LABEL_19;
  }
  BOOL v7 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v5);
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = v8;
  uint64_t v35 = v9;
  *(void *)&long long v29 = 44;
  *((void *)&v29 + 1) = 0xE100000000000000;
  sub_25AB25ABC();
  uint64_t v10 = sub_25AC354C0();
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11)
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v25 = v4;
  swift_bridgeObjectRetain();
  uint64_t v12 = v10 + 40;
  BOOL v13 = (void *)MEMORY[0x263F8EE78];
  do
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_25AC32340();
    if (v15 >> 60 == 15)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v16 = v14;
      unint64_t v17 = v15;
      sub_25AB8B544(&v29);
      uint64_t v18 = *((void *)&v29 + 1);
      uint64_t v19 = v30;
      uint64_t v20 = v31;
      uint64_t v27 = v32;
      uint64_t v28 = v29;
      uint64_t v26 = v33;
      sub_25AB16944(v16, v17);
      swift_bridgeObjectRelease();
      sub_25AB259D8((uint64_t)&v29, (uint64_t)&v34, &qword_26A4A0AF0);
      if (v35)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          BOOL v13 = sub_25AB90E84(0, v13[2] + 1, 1, v13);
        }
        unint64_t v22 = v13[2];
        unint64_t v21 = v13[3];
        if (v22 >= v21 >> 1) {
          BOOL v13 = sub_25AB90E84((void *)(v21 > 1), v22 + 1, 1, v13);
        }
        void v13[2] = v22 + 1;
        unint64_t v23 = &v13[6 * v22];
        void v23[4] = v28;
        v23[5] = v18;
        v23[6] = v19;
        v23[7] = v20;
        v23[8] = v27;
        v23[9] = v26;
      }
    }
    v12 += 16;
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v25;
}

unint64_t sub_25AB8DCD4()
{
  unint64_t result = qword_26A4A0AF8;
  if (!qword_26A4A0AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0AF8);
  }
  return result;
}

unint64_t sub_25AB8DD28()
{
  unint64_t result = qword_26A4A0B00;
  if (!qword_26A4A0B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0B00);
  }
  return result;
}

unint64_t sub_25AB8DD7C()
{
  unint64_t result = qword_26A4A0B08;
  if (!qword_26A4A0B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0B08);
  }
  return result;
}

unint64_t sub_25AB8DDD0()
{
  unint64_t result = qword_26A4A0B20;
  if (!qword_26A4A0B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0B20);
  }
  return result;
}

unint64_t sub_25AB8DE24()
{
  unint64_t result = qword_26A4A0B28;
  if (!qword_26A4A0B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0B28);
  }
  return result;
}

unint64_t sub_25AB8DE78()
{
  unint64_t result = qword_26A4A0B30;
  if (!qword_26A4A0B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0B30);
  }
  return result;
}

uint64_t sub_25AB8DECC(uint64_t a1)
{
  return a1;
}

unint64_t sub_25AB8DF20()
{
  unint64_t result = qword_26A4A0B38;
  if (!qword_26A4A0B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0B38);
  }
  return result;
}

unint64_t sub_25AB8DF74()
{
  unint64_t result = qword_26A4A0B40;
  if (!qword_26A4A0B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0B40);
  }
  return result;
}

unint64_t sub_25AB8DFC8()
{
  unint64_t result = qword_26A4A0B48;
  if (!qword_26A4A0B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0B48);
  }
  return result;
}

unint64_t sub_25AB8E01C()
{
  unint64_t result = qword_26A4A0B58;
  if (!qword_26A4A0B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0B58);
  }
  return result;
}

uint64_t sub_25AB8E070(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for PrepareResult()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s21ProximityReaderDaemon13PrepareResultVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PrepareResult(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PrepareResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrepareResult(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrepareResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrepareResult()
{
  return &type metadata for PrepareResult;
}

ValueMetadata *type metadata accessor for DeprecationWarning()
{
  return &type metadata for DeprecationWarning;
}

unint64_t sub_25AB8E2A8()
{
  unint64_t result = qword_26A4A0B68;
  if (!qword_26A4A0B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0B68);
  }
  return result;
}

unint64_t sub_25AB8E300()
{
  unint64_t result = qword_26A4A0B70;
  if (!qword_26A4A0B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0B70);
  }
  return result;
}

uint64_t sub_25AB8E354(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461636572706564 && a2 == 0xEF657079546E6F69;
  if (v2 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461636572706564 && a2 == 0xEF657461446E6F69 || (sub_25AC35870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_25AC35870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_25AB8E4E4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0B78);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB8E77C();
  sub_25AC359F0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v27 = 0;
  uint64_t v9 = sub_25AC35760();
  uint64_t v11 = v10;
  uint64_t v24 = v9;
  char v26 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_25AC35760();
  uint64_t v14 = v13;
  uint64_t v22 = v12;
  char v25 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = v14;
  uint64_t v15 = sub_25AC35760();
  uint64_t v17 = v16;
  uint64_t v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v19 = v23;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  return result;
}

unint64_t sub_25AB8E77C()
{
  unint64_t result = qword_26A4A0B80;
  if (!qword_26A4A0B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0B80);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DeprecationWarning.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB8E89CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeprecationWarning.CodingKeys()
{
  return &type metadata for DeprecationWarning.CodingKeys;
}

unint64_t sub_25AB8E8D8()
{
  unint64_t result = qword_26A4A0B88;
  if (!qword_26A4A0B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0B88);
  }
  return result;
}

unint64_t sub_25AB8E930()
{
  unint64_t result = qword_26A4A0B90;
  if (!qword_26A4A0B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0B90);
  }
  return result;
}

unint64_t sub_25AB8E988()
{
  unint64_t result = qword_26A4A0B98;
  if (!qword_26A4A0B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0B98);
  }
  return result;
}

uint64_t sub_25AB8E9DC(void *a1)
{
  v45[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = sub_25AC32300();
  uint64_t v41 = *(void *)(v2 - 8);
  uint64_t v3 = v41;
  MEMORY[0x270FA5388](v2);
  uint64_t v43 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CoreDataStoreConfiguration();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v9 = (void *)sub_25AB8EECC((uint64_t)v8);
  uint64_t v10 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB1DD08((uint64_t)v10, (uint64_t)v7);
  swift_bridgeObjectRelease();
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FDC0);
  uint64_t v11 = &v7[*(int *)(v40 + 64)];
  uint64_t v12 = &v7[*(int *)(v40 + 80)];
  uint64_t v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v42 = v13;
  v13(v12, v2);
  v13(v11, v2);
  id v14 = objc_allocWithZone(MEMORY[0x263EFF2E8]);
  id v15 = v9;
  uint64_t v16 = (void *)sub_25AC34E10();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v14, sel_initWithName_managedObjectModel_, v16, v15);

  id v44 = v15;
  uint64_t v18 = a1;
  uint64_t v19 = v39;
  *(void *)(v39 + 16) = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0BA0);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_25AC3BC50;
  uint64_t v21 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  id v22 = v17;
  *(void *)(v20 + 32) = sub_25AB8F108((uint64_t)v21);
  v45[0] = (id)v20;
  sub_25AC350A0();
  sub_25AB8F3EC();
  uint64_t v23 = (void *)sub_25AC35070();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setPersistentStoreDescriptions_, v23);

  id v24 = objc_msgSend(self, sel_defaultManager);
  char v25 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB1DD08((uint64_t)v25, (uint64_t)v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v26 = &v7[*(int *)(v40 + 64)];
  char v27 = &v7[*(int *)(v40 + 80)];
  uint64_t v28 = v43;
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v43, v26, v2);
  long long v29 = v42;
  v42(v27, v2);
  sub_25AC32240();
  v29(v28, v2);
  uint64_t v30 = (void *)sub_25AC34E10();
  swift_bridgeObjectRelease();
  unsigned __int8 v31 = objc_msgSend(v24, sel_fileExistsAtPath_, v30);

  uint64_t v32 = *(void **)(v19 + 16);
  v45[0] = 0;
  if (objc_msgSend(v32, sel_load_, v45))
  {
    id v33 = v44;
    id v34 = v45[0];
    if (v31)
    {
    }
    else
    {
      uint64_t v36 = v38[1];
      sub_25AB8F42C(v18);

      if (v36) {
        swift_release();
      }
    }
  }
  else
  {
    id v35 = v45[0];
    swift_release();
    sub_25AC321F0();

    swift_willThrow();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return v19;
}

uint64_t sub_25AB8EE24()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CoreDataStore()
{
  return self;
}

uint64_t type metadata accessor for CoreDataStoreConfiguration()
{
  uint64_t result = qword_26A4A0BB0;
  if (!qword_26A4A0BB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25AB8EECC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CoreDataStoreConfiguration();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v19[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25AC32300();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v21 = &off_270885FB8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v19);
  sub_25AB1DD08(a1, (uint64_t)boxed_opaque_existential_1);
  uint64_t v10 = __swift_project_boxed_opaque_existential_1(v19, v20);
  sub_25AB1DD08((uint64_t)v10, (uint64_t)v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FDC0);
  uint64_t v12 = &v4[*(int *)(v11 + 64)];
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, &v4[*(int *)(v11 + 80)], v5);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v12, v5);
  id v14 = objc_allocWithZone(MEMORY[0x263EFF298]);
  id v15 = (void *)sub_25AC32290();
  id v16 = objc_msgSend(v14, sel_initWithContentsOfURL_, v15);

  v13(v8, v5);
  if (v16)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    return (uint64_t)v16;
  }
  else
  {
    uint64_t result = sub_25AC35680();
    __break(1u);
  }
  return result;
}

id sub_25AB8F108(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CoreDataStoreConfiguration();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v23[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25AC32300();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v23[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = v2;
  char v25 = &off_270885FB8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v23);
  sub_25AB1DD08(a1, (uint64_t)boxed_opaque_existential_1);
  uint64_t v10 = __swift_project_boxed_opaque_existential_1(v23, v24);
  sub_25AB1DD08((uint64_t)v10, (uint64_t)v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FDC0);
  uint64_t v12 = &v4[*(int *)(v11 + 80)];
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, &v4[*(int *)(v11 + 64)], v5);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v12, v5);
  id v14 = objc_allocWithZone(MEMORY[0x263EFF328]);
  id v15 = (void *)sub_25AC32290();
  id v16 = objc_msgSend(v14, sel_initWithURL_, v15);

  v13(v8, v5);
  id v17 = __swift_project_boxed_opaque_existential_1(v23, v24);
  sub_25AB1DD08((uint64_t)v17, (uint64_t)v4);
  uint64_t v18 = *((void *)v4 + 1);
  swift_bridgeObjectRelease();
  uint64_t v19 = &v4[*(int *)(v11 + 64)];
  v13(&v4[*(int *)(v11 + 80)], v5);
  v13(v19, v5);
  if (v18)
  {
    uint64_t v20 = (void *)sub_25AC34E10();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = 0;
  }
  objc_msgSend(v16, sel_setConfiguration_, v20);

  objc_msgSend(v16, sel_setType_, *MEMORY[0x263EFF168]);
  objc_msgSend(v16, sel_setShouldInferMappingModelAutomatically_, 1);
  objc_msgSend(v16, sel_setShouldMigrateStoreAutomatically_, 1);
  objc_msgSend(v16, sel_setTimeout_, 10.0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return v16;
}

unint64_t sub_25AB8F3EC()
{
  unint64_t result = qword_26A4A0BA8;
  if (!qword_26A4A0BA8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A4A0BA8);
  }
  return result;
}

uint64_t sub_25AB8F42C(void *a1)
{
  v33[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v32 = sub_25AC320F0();
  uint64_t v2 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CoreDataStoreConfiguration();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25AC32300();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25AB1DD08((uint64_t)v12, (uint64_t)v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FDC0);
  id v14 = &v7[*(int *)(v13 + 80)];
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, &v7[*(int *)(v13 + 64)], v8);
  unsigned __int8 v31 = *(void (**)(char *, uint64_t))(v9 + 8);
  v31(v14, v8);
  sub_25AC320E0();
  sub_25AC320D0();
  uint64_t v15 = v30;
  sub_25AC32280();
  uint64_t v16 = v32;
  if (!v15)
  {
    uint64_t v30 = 0;
    id v17 = (void *)sub_25AC32290();
    uint64_t v18 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_25AB1DD08((uint64_t)v18, (uint64_t)v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v19 = &v7[*(int *)(v13 + 64)];
    uint64_t v20 = &v7[*(int *)(v13 + 80)];
    id v21 = (id)*MEMORY[0x263EFF638];
    id v22 = v20;
    uint64_t v23 = v31;
    v31(v22, v8);
    v23(v19, v8);
    sub_25AC34E40();
    uint64_t v24 = (void *)sub_25AC34E10();

    swift_bridgeObjectRelease();
    uint64_t v25 = *MEMORY[0x263EFF650];
    v33[0] = 0;
    LOBYTE(v19) = objc_msgSend(v17, sel_setResourceValue_forKey_error_, v24, v25, v33);

    id v26 = v33[0];
    if (v19)
    {
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v32);
      return ((uint64_t (*)(char *, uint64_t))v31)(v11, v8);
    }
    uint64_t v28 = v26;
    sub_25AC321F0();

    swift_willThrow();
    uint64_t v16 = v32;
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v16);
  return ((uint64_t (*)(char *, uint64_t))v31)(v11, v8);
}

char *sub_25AB8F7F0(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *((void *)a1 + 1) = v6;
    uint64_t v7 = a2[3];
    *((void *)a1 + 2) = a2[2];
    *((void *)a1 + 3) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FDC0);
    uint64_t v9 = *(int *)(v8 + 64);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_25AC32300();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v13(&a1[*(int *)(v8 + 80)], (char *)a2 + *(int *)(v8 + 80), v12);
  }
  return a1;
}

uint64_t sub_25AB8F910(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FDC0);
  uint64_t v3 = a1 + *(int *)(v2 + 64);
  uint64_t v4 = sub_25AC32300();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), v3, v4);
  uint64_t v5 = a1 + *(int *)(v2 + 80);
  return v7(v5, v4);
}

char *sub_25AB8F9D4(char *a1, char *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v4;
  uint64_t v5 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FDC0);
  uint64_t v7 = *(int *)(v6 + 64);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_25AC32300();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(&a1[*(int *)(v6 + 80)], &a2[*(int *)(v6 + 80)], v10);
  return a1;
}

char *sub_25AB8FAA8(char *a1, char *a2)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FDC0);
  uint64_t v5 = *(int *)(v4 + 64);
  uint64_t v6 = &a1[v5];
  uint64_t v7 = &a2[v5];
  uint64_t v8 = sub_25AC32300();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 24);
  v9(v6, v7, v8);
  v9(&a1[*(int *)(v4 + 80)], &a2[*(int *)(v4 + 80)], v8);
  return a1;
}

char *sub_25AB8FBA0(char *a1, char *a2)
{
  long long v4 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FDC0);
  uint64_t v6 = *(int *)(v5 + 64);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_25AC32300();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(v5 + 80)], &a2[*(int *)(v5 + 80)], v9);
  return a1;
}

char *sub_25AB8FC60(char *a1, char *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FDC0);
  uint64_t v7 = *(int *)(v6 + 64);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_25AC32300();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[*(int *)(v6 + 80)], &a2[*(int *)(v6 + 80)], v10);
  return a1;
}

uint64_t sub_25AB8FD38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FDC0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_25AB8FDA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FDC0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, a2, a3, v6);
}

uint64_t sub_25AB8FE28(uint64_t a1)
{
  uint64_t result = sub_25AC32300();
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout();
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = v4;
  }
  return result;
}

uint64_t type metadata accessor for MockUtils()
{
  return self;
}

uint64_t sub_25AB8FF24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0BC0);
  MEMORY[0x270FA5388](v4 - 8);
  id v35 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_25AC32450();
  uint64_t v6 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FF48);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25AC3B780;
  uint64_t v10 = MEMORY[0x263F8D310];
  *(void *)(inited + 32) = 7371124;
  *(void *)(inited + 40) = 0xE300000000000000;
  *(void *)(inited + 48) = 5527370;
  *(void *)(inited + 56) = 0xE300000000000000;
  *(void *)(inited + 72) = v10;
  *(void *)(inited + 80) = 6580587;
  *(void *)(inited + 88) = 0xE300000000000000;
  *(void *)(inited + 96) = 0xD000000000000024;
  unint64_t v31 = 0x800000025AC3F730;
  *(void *)(inited + 104) = 0x800000025AC3F730;
  *(void *)(inited + 120) = v10;
  *(void *)(inited + 128) = 6777953;
  *(void *)(inited + 168) = v10;
  *(void *)(inited + 136) = 0xE300000000000000;
  *(void *)(inited + 144) = 0x3635325345;
  *(void *)(inited + 152) = 0xE500000000000000;
  unint64_t v32 = sub_25AB714E8(inited);
  uint64_t v11 = swift_initStackObject();
  *(_OWORD *)(v11 + 16) = xmmword_25AC3BD10;
  *(void *)(v11 + 32) = 7566185;
  *(void *)(v11 + 40) = 0xE300000000000000;
  strcpy((char *)(v11 + 48), "authorization");
  *(_WORD *)(v11 + 62) = -4864;
  *(void *)(v11 + 72) = v10;
  *(void *)(v11 + 80) = 6583649;
  *(void *)(v11 + 88) = 0xE300000000000000;
  *(void *)(v11 + 96) = 0x746361736E617274;
  *(void *)(v11 + 104) = 0xEB000000006E6F69;
  *(void *)(v11 + 120) = v10;
  *(void *)(v11 + 128) = 1684628851;
  *(void *)(v11 + 136) = 0xE400000000000000;
  uint64_t v29 = a1;
  uint64_t v12 = *(void *)(a1 + 56);
  *(void *)(v11 + 144) = *(void *)(a1 + 48);
  *(void *)(v11 + 152) = v12;
  *(void *)(v11 + 168) = v10;
  *(void *)(v11 + 176) = 6911082;
  *(void *)(v11 + 184) = 0xE300000000000000;
  swift_bridgeObjectRetain();
  sub_25AC32440();
  sub_25AC32430();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v28[1] = v6 + 8;
  uint64_t v14 = v30;
  v13(v8, v30);
  uint64_t v15 = sub_25AC34EC0();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  *(void *)(v11 + 192) = v15;
  *(void *)(v11 + 200) = v17;
  *(void *)(v11 + 216) = v10;
  *(void *)(v11 + 224) = 7234157;
  *(void *)(v11 + 232) = 0xE300000000000000;
  *(void *)(v11 + 240) = 0xD000000000000010;
  *(void *)(v11 + 248) = 0x800000025AC3F760;
  *(void *)(v11 + 264) = v10;
  *(void *)(v11 + 272) = 6513517;
  *(void *)(v11 + 280) = 0xE300000000000000;
  *(void *)(v11 + 288) = 825308213;
  *(void *)(v11 + 296) = 0xE400000000000000;
  *(void *)(v11 + 312) = v10;
  *(void *)(v11 + 320) = 6580589;
  *(void *)(v11 + 328) = 0xE300000000000000;
  *(void *)(v11 + 336) = 808464432;
  *(void *)(v11 + 344) = 0xE400000000000000;
  *(void *)(v11 + 360) = v10;
  *(void *)(v11 + 368) = 6580592;
  *(void *)(v11 + 376) = 0xE300000000000000;
  sub_25AC32440();
  sub_25AC32430();
  v13(v8, v14);
  uint64_t v18 = sub_25AC34EC0();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  *(void *)(v11 + 384) = v18;
  *(void *)(v11 + 392) = v20;
  *(void *)(v11 + 408) = v10;
  *(void *)(v11 + 416) = 1684631668;
  *(void *)(v11 + 424) = 0xE400000000000000;
  *(void *)(v11 + 432) = 0xD000000000000024;
  *(void *)(v11 + 440) = v31;
  *(void *)(v11 + 456) = v10;
  *(void *)(v11 + 464) = 1684632694;
  *(void *)(v11 + 472) = 0xE400000000000000;
  uint64_t v21 = *(void *)(v29 + 72);
  *(void *)(v11 + 480) = *(void *)(v29 + 64);
  *(void *)(v11 + 488) = v21;
  *(void *)(v11 + 504) = v10;
  *(void *)(v11 + 512) = 1953526640;
  *(void *)(v11 + 520) = 0xE400000000000000;
  *(void *)(v11 + 552) = v10;
  uint64_t v22 = v34;
  *(void *)(v11 + 528) = v33;
  *(void *)(v11 + 536) = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v23 = sub_25AB714E8(v11);
  uint64_t v24 = sub_25AC34D70();
  uint64_t v25 = (uint64_t)v35;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v35, 1, 1, v24);
  uint64_t v26 = MEMORY[0x26114FEB0](v32, v23, 1, 900, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25AB9058C(v25);
  return v26;
}

uint64_t sub_25AB903A8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0BC0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FF48);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25AC3B780;
  uint64_t v4 = MEMORY[0x263F8D310];
  *(void *)(inited + 32) = 7371124;
  *(void *)(inited + 40) = 0xE300000000000000;
  *(void *)(inited + 48) = 5527370;
  *(void *)(inited + 56) = 0xE300000000000000;
  *(void *)(inited + 72) = v4;
  *(void *)(inited + 80) = 6580587;
  *(void *)(inited + 88) = 0xE300000000000000;
  *(void *)(inited + 96) = 0xD000000000000024;
  *(void *)(inited + 104) = 0x800000025AC3F730;
  *(void *)(inited + 120) = v4;
  *(void *)(inited + 128) = 6777953;
  *(void *)(inited + 168) = v4;
  *(void *)(inited + 136) = 0xE300000000000000;
  *(void *)(inited + 144) = 0x3635325345;
  *(void *)(inited + 152) = 0xE500000000000000;
  unint64_t v5 = sub_25AB714E8(inited);
  uint64_t v6 = swift_initStackObject();
  *(_OWORD *)(v6 + 16) = xmmword_25AC37D80;
  *(void *)(v6 + 32) = 1684631668;
  *(void *)(v6 + 40) = 0xE400000000000000;
  *(void *)(v6 + 72) = v4;
  *(void *)(v6 + 48) = 0xD000000000000024;
  *(void *)(v6 + 56) = 0x800000025AC3F730;
  unint64_t v7 = sub_25AB714E8(v6);
  uint64_t v8 = sub_25AC34D70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 1, 1, v8);
  uint64_t v9 = MEMORY[0x26114FEB0](v5, v7, 1, 900, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25AB9058C((uint64_t)v2);
  return v9;
}

uint64_t sub_25AB9058C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0BC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25AB905EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X3>, unint64_t a4@<X8>)
{
  if (a1 < 1) {
    goto LABEL_18;
  }
  uint64_t v6 = a2;
  unint64_t v8 = (a2 % 10) | (16 * (a2 / 10 % 10));
  if ((v8 & 0x8000000000000000) != 0 || v8 > 0xFF)
  {
LABEL_20:
    uint64_t result = sub_25AC35670();
    __break(1u);
  }
  else
  {
    uint64_t v4 = a1;
    a3 = sub_25AB90FAC(0, 1, 1, MEMORY[0x263F8EE78], &qword_26A4A0450);
    unint64_t v7 = *((void *)a3 + 2);
    a4 = *((void *)a3 + 3);
    int64_t v5 = v7 + 1;
    if (v7 >= a4 >> 1) {
      goto LABEL_19;
    }
    while (1)
    {
      *((void *)a3 + 2) = v5;
      a3[v7 + 32] = v8;
      if (v4 == 1) {
        break;
      }
      unint64_t v8 = 0;
      while (1)
      {
        a4 = v8 + 1;
        unint64_t v10 = v8 + 2;
        if (__OFADD__(v8 + 1, 1)) {
          break;
        }
        int64_t v5 = v6 / 100;
        unint64_t v11 = (v6 / 100 % 10) | (16 * (v6 / 1000 % 10));
        if ((v11 & 0x8000000000000000) != 0 || v11 > 0xFF) {
          goto LABEL_20;
        }
        unint64_t v12 = a4 + v7;
        unint64_t v13 = *((void *)a3 + 3);
        if (v12 >= v13 >> 1) {
          a3 = sub_25AB90FAC((char *)(v13 > 1), v7 + v8 + 2, 1, a3, &qword_26A4A0450);
        }
        *((void *)a3 + 2) = v7 + v8 + 2;
        a3[v7 + 33 + v8++] = v11;
        v6 /= 100;
        if (v10 == v4) {
          goto LABEL_6;
        }
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      a3 = sub_25AB90FAC((char *)(a4 > 1), v5, 1, a3, &qword_26A4A0450);
    }
LABEL_6:
    return sub_25AB66BB8((uint64_t)a3);
  }
  return result;
}

void *sub_25AB90880(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0BF0);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x263F8EE78];
      unint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25AB91200(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_25AB90990(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25AB90AF4(a1, a2, a3, a4, &qword_26A4A0BE8, MEMORY[0x263F153B0], MEMORY[0x263F153B0]);
}

char *sub_25AB909C4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0BE0);
      unint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_25AB912F8(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_25AB90AC0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25AB90AF4(a1, a2, a3, a4, &qword_26A4A0800, MEMORY[0x263F06EA8], MEMORY[0x263F06EA8]);
}

uint64_t sub_25AB90AF4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_25AC35670();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25AB914D4(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_25AB90D74(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A07D0);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25AB913E0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_25AB90E84(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0BC8);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_25AB91630(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_25AB90FAC(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = *((void *)a4 + 3);
  int64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v8 = a2;
    }
LABEL_8:
    int64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      int64_t v10 = *((void *)a4 + 2);
    }
    else {
      int64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      size_t v11 = (char *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      *((void *)v11 + 2) = v9;
      *((void *)v11 + 3) = 2 * v12 - 64;
      uint64_t v13 = v11 + 32;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32]) {
          memmove(v13, a4 + 32, v9);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      size_t v11 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_25AB912F8(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_25AB910A4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0BD8);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      size_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      size_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_25AB91728(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_25AB911CC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25AB90AF4(a1, a2, a3, a4, &qword_26A4A0BD0, MEMORY[0x263F35D08], MEMORY[0x263F35D08]);
}

uint64_t sub_25AB91200(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25AC356E0();
  __break(1u);
  return result;
}

char *sub_25AB912F8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_25AC356E0();
  __break(1u);
  return result;
}

uint64_t sub_25AB913E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25AC356E0();
  __break(1u);
  return result;
}

uint64_t sub_25AB914D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_25AC356E0();
  __break(1u);
  return result;
}

uint64_t sub_25AB91630(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25AC356E0();
  __break(1u);
  return result;
}

uint64_t sub_25AB91728(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25AC356E0();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ContentEnvironmentManager()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for ContentEnvironment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25AB91910);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentEnvironment()
{
  return &type metadata for ContentEnvironment;
}

unint64_t sub_25AB9194C()
{
  unint64_t result = qword_26A4A0BF8;
  if (!qword_26A4A0BF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A4A0C00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0BF8);
  }
  return result;
}

uint64_t sub_25AB919A8(char a1)
{
  switch(a1)
  {
    case 3:
      uint64_t v2 = 0x74666172642FLL;
      swift_bridgeObjectRelease();
      break;
    default:
      char v3 = sub_25AC35870();
      swift_bridgeObjectRelease();
      if (v3)
      {
        uint64_t v2 = 0x74666172642FLL;
      }
      else
      {
        switch(a1)
        {
          case 0:
          case 1:
          case 3:
          case 4:
            char v4 = sub_25AC35870();
            swift_bridgeObjectRelease();
            if (v4) {
              uint64_t v2 = 0x6974656B72616D2FLL;
            }
            else {
              uint64_t v2 = 0;
            }
            break;
          case 2:
            uint64_t v2 = 0x6974656B72616D2FLL;
            swift_bridgeObjectRelease();
            break;
          default:
            JUMPOUT(0);
        }
      }
      break;
  }
  return v2;
}

uint64_t sub_25AB91BAC(unsigned __int8 *a1, char *a2)
{
  return sub_25AB37A20(*a1, *a2);
}

uint64_t sub_25AB91BB8()
{
  return sub_25AC359D0();
}

uint64_t sub_25AB91C98()
{
  sub_25AC34F20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB91D60()
{
  return sub_25AC359D0();
}

uint64_t sub_25AB91E3C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25AB91F78();
  *a1 = result;
  return result;
}

void sub_25AB91E6C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 7759204;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE200000000000000;
      uint64_t v3 = 24945;
      goto LABEL_3;
    case 2:
      *a1 = 0x74656B72616D6171;
      a1[1] = 0xEB00000000676E69;
      break;
    case 3:
      *a1 = 0x7466617264;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 1685025392;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_25AB91F10(void *a1@<X8>)
{
  *a1 = &unk_270882040;
}

unint64_t sub_25AB91F24()
{
  unint64_t result = qword_26A4A0C08;
  if (!qword_26A4A0C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0C08);
  }
  return result;
}

uint64_t sub_25AB91F78()
{
  unint64_t v0 = sub_25AC35720();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

id sub_25AB91FC4()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for Daemon()), sel_init);
  qword_26A4A0C10 = (uint64_t)result;
  return result;
}

id static Daemon.shared.getter()
{
  if (qword_26A49F878 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26A4A0C10;
  return v0;
}

Swift::Void __swiftcall Daemon.registerServiceListeners()()
{
  uint64_t v0 = sub_25AC32A20();
  sub_25AB92124(v0, v1);
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_25AC32A10();
  sub_25AB92124(v2, v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_25AC329F0();
  sub_25AB92124(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_25AC32A00();
  sub_25AB92124(v6, v7);
  swift_bridgeObjectRelease();
}

void sub_25AB92124(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F7C8 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v6, (uint64_t)qword_26A4A1C40);
  sub_25AB150E0(v9, (uint64_t)v8);
  uint64_t v10 = sub_25AC345E0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_25AB15148((uint64_t)v8);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    unint64_t v12 = sub_25AC345C0();
    os_log_type_t v13 = sub_25AC352D0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v22 = v3;
      uint64_t v15 = (uint8_t *)v14;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v23 = a1;
      uint64_t v17 = v16;
      uint64_t v25 = v16;
      *(_DWORD *)uint64_t v15 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_25AB56574(v23, a2, &v25);
      sub_25AC354A0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25AB11000, v12, v13, "Registering service: [ %s ]", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261151C20](v17, -1, -1);
      uint64_t v18 = v15;
      uint64_t v3 = v22;
      MEMORY[0x261151C20](v18, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
  id v19 = objc_allocWithZone(MEMORY[0x263F08D88]);
  swift_bridgeObjectRetain();
  BOOL v20 = (void *)sub_25AC34E10();
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(v19, sel_initWithMachServiceName_, v20);

  objc_msgSend(v21, sel_setDelegate_, v3);
  objc_msgSend(v21, sel_resume);
}

Swift::Bool __swiftcall Daemon.listener(_:shouldAcceptNewConnection:)(NSXPCListener _, NSXPCConnection shouldAcceptNewConnection)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [(objc_class *)shouldAcceptNewConnection.super.isa serviceName];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = sub_25AC34E40();
    uint64_t v12 = v11;

    v57[0] = v10;
    v57[1] = v12;
    sub_25AB929C8(v57, &v56);
    swift_bridgeObjectRelease();
  }
  id v13 = [(objc_class *)shouldAcceptNewConnection.super.isa serviceName];
  if (!v13)
  {
    sub_25AC32A20();
    goto LABEL_12;
  }
  uint64_t v14 = v13;
  uint64_t v15 = sub_25AC34E40();
  uint64_t v17 = v16;

  uint64_t v18 = sub_25AC32A20();
  if (!v17)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (v15 == v18 && v17 == v19)
  {
    swift_bridgeObjectRelease_n();
LABEL_26:
    return sub_25AB93D3C(shouldAcceptNewConnection.super.isa);
  }
  char v21 = sub_25AC35870();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v21) {
    goto LABEL_26;
  }
LABEL_13:
  id v22 = [(objc_class *)shouldAcceptNewConnection.super.isa serviceName];
  if (!v22)
  {
    sub_25AC329F0();
    goto LABEL_19;
  }
  uint64_t v23 = v22;
  uint64_t v24 = sub_25AC34E40();
  uint64_t v26 = v25;

  uint64_t v27 = sub_25AC329F0();
  if (!v26)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  if (v24 == v27 && v26 == v28)
  {
    swift_bridgeObjectRelease_n();
LABEL_39:
    return sub_25AB94534(shouldAcceptNewConnection.super.isa);
  }
  char v50 = sub_25AC35870();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v50) {
    goto LABEL_39;
  }
LABEL_20:
  id v29 = [(objc_class *)shouldAcceptNewConnection.super.isa serviceName];
  if (!v29)
  {
    sub_25AC32A00();
    goto LABEL_30;
  }
  uint64_t v30 = v29;
  uint64_t v31 = sub_25AC34E40();
  uint64_t v33 = v32;

  uint64_t v34 = sub_25AC32A00();
  if (!v33)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  if (v31 == v34 && v33 == v35)
  {
    swift_bridgeObjectRelease_n();
LABEL_43:
    return sub_25AB94B68(shouldAcceptNewConnection.super.isa);
  }
  char v51 = sub_25AC35870();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v51) {
    goto LABEL_43;
  }
LABEL_31:
  uint64_t v37 = v2 + OBJC_IVAR____TtC21ProximityReaderDaemon6Daemon_temporaryListeners;
  swift_beginAccess();
  char v38 = _.super.isa;
  uint64_t v39 = swift_bridgeObjectRetain();
  unint64_t v40 = sub_25AB94FF0(v39);
  char v42 = v41;
  swift_bridgeObjectRelease();

  if ((v42 & 1) == 0)
  {
    if ((v40 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v40 < *(void *)(*(void *)v37 + 16))
    {
      uint64_t v43 = *(void *)v37 + 24 * v40;
      id v44 = *(void (**)(Class))(v43 + 40);
      id v45 = *(id *)(v43 + 32);
      swift_retain();
      v44(shouldAcceptNewConnection.super.isa);
      [(objc_class *)v38 suspend];
      [(objc_class *)v38 setDelegate:0];
      swift_beginAccess();
      uint64_t v46 = (void *)sub_25AB92C80(v40);
      swift_endAccess();
      swift_release();

      swift_release();
      return 1;
    }
    __break(1u);
    goto LABEL_52;
  }
  if (qword_26A49F7C8 != -1) {
LABEL_52:
  }
    swift_once();
  uint64_t v47 = __swift_project_value_buffer(v5, (uint64_t)qword_26A4A1C40);
  sub_25AB150E0(v47, (uint64_t)v7);
  uint64_t v48 = sub_25AC345E0();
  uint64_t v49 = *(void *)(v48 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v7, 1, v48) == 1)
  {
    sub_25AB15148((uint64_t)v7);
  }
  else
  {
    long long v52 = sub_25AC345C0();
    os_log_type_t v53 = sub_25AC352C0();
    if (os_log_type_enabled(v52, v53))
    {
      char v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v54 = 0;
      _os_log_impl(&dword_25AB11000, v52, v53, "Service not found", v54, 2u);
      MEMORY[0x261151C20](v54, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v49 + 8))(v7, v48);
  }
  return 0;
}

uint64_t sub_25AB929C8@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  unint64_t v8 = a1[1];
  if (qword_26A49F7C8 != -1) {
    swift_once();
  }
  uint64_t v10 = __swift_project_value_buffer(v5, (uint64_t)qword_26A4A1C40);
  sub_25AB150E0(v10, (uint64_t)v7);
  uint64_t v11 = sub_25AC345E0();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11);
  if (v13 == 1)
  {
    uint64_t result = sub_25AB15148((uint64_t)v7);
  }
  else
  {
    uint64_t v24 = v9;
    swift_bridgeObjectRetain_n();
    uint64_t v15 = sub_25AC345C0();
    os_log_type_t v16 = sub_25AC352B0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v23 = v2;
      uint64_t v18 = (uint8_t *)v17;
      uint64_t v21 = swift_slowAlloc();
      uint64_t v26 = v21;
      id v22 = a2;
      *(_DWORD *)uint64_t v18 = 136315138;
      BOOL v20 = v18 + 4;
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_25AB56574(v24, v8, &v26);
      a2 = v22;
      sub_25AC354A0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25AB11000, v15, v16, "Connecting to: [ %s ]", v18, 0xCu);
      uint64_t v19 = v21;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v19, -1, -1);
      MEMORY[0x261151C20](v18, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v7, v11);
  }
  *a2 = v13 == 1;
  return result;
}

uint64_t sub_25AB92C80(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_25AB93AC4(v3);
  }
  unint64_t v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      uint64_t v7 = &v3[3 * a1];
      uint64_t v8 = v7[4];
      memmove(v7 + 4, v7 + 7, 24 * v6);
      v3[2] = v5;
      *unint64_t v1 = v3;
      return v8;
    }
  }
  uint64_t result = sub_25AC356E0();
  __break(1u);
  return result;
}

uint64_t sub_25AB92DD4(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v2);
  unint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F7D8 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1C70);
  sub_25AB150E0(v5, (uint64_t)v4);
  uint64_t v6 = sub_25AC345E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1) {
    return sub_25AB15148((uint64_t)v4);
  }
  id v9 = a1;
  id v10 = a1;
  uint64_t v11 = sub_25AC345C0();
  os_log_type_t v12 = sub_25AC352B0();
  if (os_log_type_enabled(v11, v12))
  {
    int v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v18 = v14;
    *(_DWORD *)int v13 = 136446210;
    v17[1] = v13 + 4;
    swift_getErrorValue();
    uint64_t v15 = sub_25AC35900();
    v17[2] = sub_25AB56574(v15, v16, &v18);
    sub_25AC354A0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_25AB11000, v11, v12, "client creation error: %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261151C20](v14, -1, -1);
    MEMORY[0x261151C20](v13, -1, -1);
  }
  else
  {
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v4, v6);
}

id sub_25AB93080(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v2);
  unint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F7C8 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1C40);
  sub_25AB150E0(v5, (uint64_t)v4);
  uint64_t v6 = sub_25AC345E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_25AB15148((uint64_t)v4);
  }
  else
  {
    uint64_t v8 = sub_25AC345C0();
    os_log_type_t v9 = sub_25AC352D0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      v16[1] = a1;
      uint64_t v11 = (uint8_t *)v10;
      uint64_t v12 = swift_slowAlloc();
      uint64_t v17 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v13 = sub_25AC32A20();
      void v16[2] = sub_25AB56574(v13, v14, &v17);
      sub_25AC354A0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25AB11000, v8, v9, "[%s] Connection was interrupted", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261151C20](v12, -1, -1);
      MEMORY[0x261151C20](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  return sub_25ABBD928();
}

id sub_25AB932E4(uint64_t a1, void *a2, uint64_t (*a3)(void), void (*a4)(void))
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F7C8 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v8, (uint64_t)qword_26A4A1C40);
  sub_25AB150E0(v11, (uint64_t)v10);
  uint64_t v12 = sub_25AC345E0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
  {
    uint64_t v14 = sub_25AB15148((uint64_t)v10);
  }
  else
  {
    uint64_t v15 = sub_25AC345C0();
    os_log_type_t v16 = sub_25AC352D0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v25 = a4;
      uint64_t v17 = swift_slowAlloc();
      uint64_t v26 = a2;
      uint64_t v18 = (uint8_t *)v17;
      uint64_t v19 = swift_slowAlloc();
      uint64_t v28 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      v24[1] = a1;
      uint64_t v20 = a3();
      uint64_t v27 = sub_25AB56574(v20, v21, &v28);
      sub_25AC354A0();
      a4 = v25;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25AB11000, v15, v16, "[%s] Connection was invalidated", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261151C20](v19, -1, -1);
      id v22 = v18;
      a2 = v26;
      MEMORY[0x261151C20](v22, -1, -1);
    }

    uint64_t v14 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  a4(v14);
  return objc_msgSend(a2, sel_setExportedObject_, 0);
}

uint64_t sub_25AB93584()
{
  return sub_25AB93824(MEMORY[0x263F15338]);
}

id sub_25AB9359C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v2);
  unint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F7C8 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1C40);
  sub_25AB150E0(v5, (uint64_t)v4);
  uint64_t v6 = sub_25AC345E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_25AB15148((uint64_t)v4);
  }
  else
  {
    uint64_t v8 = sub_25AC345C0();
    os_log_type_t v9 = sub_25AC352D0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v18 = a1;
      uint64_t v11 = (uint8_t *)v10;
      uint64_t v12 = swift_slowAlloc();
      uint64_t v20 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v13 = sub_25AC32A00();
      uint64_t v19 = sub_25AB56574(v13, v14, &v20);
      sub_25AC354A0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25AB11000, v8, v9, "[%s] Connection was invalidated", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261151C20](v12, -1, -1);
      uint64_t v15 = v11;
      a1 = v18;
      MEMORY[0x261151C20](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  return objc_msgSend(a1, sel_setExportedObject_, 0);
}

uint64_t sub_25AB9380C()
{
  return sub_25AB93824(MEMORY[0x263F15340]);
}

uint64_t sub_25AB93824(uint64_t (*a1)(void))
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v2);
  unint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F7C8 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1C40);
  sub_25AB150E0(v5, (uint64_t)v4);
  uint64_t v6 = sub_25AC345E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1) {
    return sub_25AB15148((uint64_t)v4);
  }
  os_log_type_t v9 = sub_25AC345C0();
  os_log_type_t v10 = sub_25AC352D0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v16 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = a1();
    uint64_t v15 = sub_25AB56574(v13, v14, &v16);
    sub_25AC354A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25AB11000, v9, v10, "[%s] Connection was interrupted", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261151C20](v12, -1, -1);
    MEMORY[0x261151C20](v11, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v4, v6);
}

id Daemon.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *sub_25AB93AC4(void *a1)
{
  return sub_25AB910A4(0, a1[2], 0, a1);
}

void sub_25AB93AD8()
{
  v11[1] = *(id *)MEMORY[0x263EF8340];
  if (!_set_user_dir_suffix()) {
    goto LABEL_11;
  }
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_defaultManager);
  if (qword_26A49F7A0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25AC32300();
  __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1B78);
  sub_25AC322D0();
  uint64_t v3 = (void *)sub_25AC34E10();
  swift_bridgeObjectRelease();
  unsigned __int8 v4 = objc_msgSend(v1, sel_fileExistsAtPath_, v3);

  if ((v4 & 1) == 0)
  {
    id v5 = objc_msgSend(v0, sel_defaultManager);
    uint64_t v6 = (void *)sub_25AC32290();
    v11[0] = 0;
    unsigned int v7 = objc_msgSend(v5, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v6, 1, 0, v11);

    id v8 = v11[0];
    if (v7)
    {
      id v9 = v8;
      return;
    }
    id v10 = v11[0];
    sub_25AC321F0();

    swift_willThrow();
LABEL_11:
    sub_25AC35680();
    __break(1u);
  }
}

uint64_t sub_25AB93D3C(void *a1)
{
  uint64_t v62 = *MEMORY[0x263EF8340];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  id v5 = (char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  unsigned int v7 = (char *)v52 - v6;
  objc_msgSend(a1, sel_auditToken);
  long long v55 = v59;
  long long v56 = aBlock;
  id v8 = self;
  id v57 = 0;
  long long aBlock = v56;
  long long v59 = v55;
  id v9 = objc_msgSend(v8, sel_bundleRecordForAuditToken_error_, &aBlock, &v57);
  if (!v9)
  {
    id v28 = v57;
    id v29 = (void *)sub_25AC321F0();

    swift_willThrow();
LABEL_10:
    if (qword_26A49F7C8 != -1) {
      swift_once();
    }
    uint64_t v30 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1C40);
    sub_25AB150E0(v30, (uint64_t)v5);
    uint64_t v31 = sub_25AC345E0();
    uint64_t v32 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v5, 1, v31) == 1)
    {
      sub_25AB15148((uint64_t)v5);
    }
    else
    {
      uint64_t v33 = sub_25AC345C0();
      os_log_type_t v34 = sub_25AC352C0();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v35 = 0;
        _os_log_impl(&dword_25AB11000, v33, v34, "Unable to get bundle ID", v35, 2u);
        MEMORY[0x261151C20](v35, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v31);
    }
    return 0;
  }
  id v10 = v9;
  id v11 = v57;
  id v12 = objc_msgSend(v10, sel_bundleIdentifier);
  if (!v12)
  {

    goto LABEL_10;
  }
  uint64_t v13 = v12;
  uint64_t v14 = sub_25AC34E40();
  uint64_t v16 = v15;

  uint64_t v17 = self;
  id v18 = objc_msgSend(v17, sel_interfaceWithProtocol_, &unk_270891DB0);
  objc_msgSend(a1, sel_setRemoteObjectInterface_, v18);

  uint64_t v60 = sub_25AB92DD4;
  uint64_t v61 = 0;
  *(void *)&long long aBlock = MEMORY[0x263EF8330];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v59 = sub_25AB9E088;
  *((void *)&v59 + 1) = &block_descriptor_3;
  uint64_t v19 = _Block_copy(&aBlock);
  id v20 = objc_msgSend(a1, sel_remoteObjectProxyWithErrorHandler_, v19);
  _Block_release(v19);
  sub_25AC35500();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0C90);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    return 0;
  }
  uint64_t v21 = (uint64_t)v57;
  objc_allocWithZone((Class)type metadata accessor for PaymentTerminalService());
  id v22 = a1;
  swift_unknownObjectRetain();
  *(void *)&long long v56 = v21;
  id v23 = sub_25ABBCF58(v22, v21, v14, v16);
  if (qword_26A49F7C8 != -1) {
    swift_once();
  }
  uint64_t v24 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1C40);
  sub_25AB150E0(v24, (uint64_t)v7);
  uint64_t v25 = sub_25AC345E0();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v7, 1, v25) == 1)
  {
    sub_25AB15148((uint64_t)v7);
    uint64_t v27 = &off_265482000;
  }
  else
  {
    uint64_t v37 = sub_25AC345C0();
    os_log_type_t v38 = sub_25AC352D0();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      *(void *)&long long aBlock = v54;
      *(void *)&long long v55 = v23;
      *(_DWORD *)uint64_t v39 = 136315138;
      v52[1] = v39 + 4;
      os_log_type_t v53 = v39;
      uint64_t v40 = sub_25AC32A20();
      id v57 = (id)sub_25AB56574(v40, v41, (uint64_t *)&aBlock);
      id v23 = (id)v55;
      sub_25AC354A0();
      swift_bridgeObjectRelease();
      char v42 = v53;
      _os_log_impl(&dword_25AB11000, v37, v38, "Connecting to: [%s]", v53, 0xCu);
      uint64_t v43 = v54;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v43, -1, -1);
      MEMORY[0x261151C20](v42, -1, -1);
    }

    uint64_t v27 = &off_265482000;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v25);
  }
  id v44 = objc_msgSend(v17, (SEL)v27[214], &unk_2708902B0);
  objc_msgSend(v22, sel_setExportedInterface_, v44);

  objc_msgSend(v22, sel_setExportedObject_, v23);
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = v23;
  *(void *)(v45 + 24) = v22;
  uint64_t v60 = sub_25AB952F4;
  uint64_t v61 = v45;
  *(void *)&long long aBlock = MEMORY[0x263EF8330];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v59 = sub_25AB72188;
  *((void *)&v59 + 1) = &block_descriptor_5;
  uint64_t v46 = _Block_copy(&aBlock);
  id v47 = v22;
  id v48 = v23;
  swift_release();
  objc_msgSend(v47, sel_setInvalidationHandler_, v46);
  _Block_release(v46);
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v48;
  uint64_t v60 = sub_25AB95338;
  uint64_t v61 = v49;
  *(void *)&long long aBlock = MEMORY[0x263EF8330];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v59 = sub_25AB72188;
  *((void *)&v59 + 1) = &block_descriptor_11;
  char v50 = _Block_copy(&aBlock);
  id v51 = v48;
  swift_release();
  objc_msgSend(v47, sel_setInterruptionHandler_, v50);
  _Block_release(v50);
  objc_msgSend(v47, sel_resume);

  swift_unknownObjectRelease();
  return 1;
}

uint64_t sub_25AB94534(void *a1)
{
  v52[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  unsigned int v7 = (char *)&v46 - v6;
  objc_msgSend(a1, sel_auditToken);
  long long v46 = v49;
  long long v47 = aBlock;
  id v8 = self;
  v52[0] = 0;
  long long aBlock = v47;
  long long v49 = v46;
  id v9 = objc_msgSend(v8, sel_bundleRecordForAuditToken_error_, &aBlock, v52);
  if (!v9)
  {
    id v31 = v52[0];
    uint64_t v32 = (void *)sub_25AC321F0();

    swift_willThrow();
LABEL_7:
    if (qword_26A49F7C8 != -1) {
      swift_once();
    }
    uint64_t v33 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1C40);
    sub_25AB150E0(v33, (uint64_t)v5);
    uint64_t v34 = sub_25AC345E0();
    uint64_t v35 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v5, 1, v34) != 1)
    {
      uint64_t v37 = sub_25AC345C0();
      os_log_type_t v38 = sub_25AC352C0();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v39 = 0;
        _os_log_impl(&dword_25AB11000, v37, v38, "Unable to get bundle ID", v39, 2u);
        MEMORY[0x261151C20](v39, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v35 + 8))(v5, v34);
      return 0;
    }
    uint64_t v36 = (uint64_t)v5;
    goto LABEL_11;
  }
  id v10 = v9;
  id v11 = v52[0];
  id v12 = objc_msgSend(v10, sel_bundleIdentifier);
  if (!v12)
  {

    goto LABEL_7;
  }
  uint64_t v13 = v12;
  uint64_t v14 = sub_25AC34E40();
  uint64_t v16 = v15;

  id v17 = objc_msgSend(v10, sel_teamIdentifier);
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = sub_25AC34E40();
    uint64_t v21 = v20;

    objc_allocWithZone((Class)type metadata accessor for IdentityReaderService());
    id v22 = a1;
    id v23 = sub_25ABFB750(v22, v14, v16, v19, v21);
    id v24 = objc_msgSend(self, sel_interfaceWithProtocol_, &unk_270890508);
    objc_msgSend(v22, sel_setExportedInterface_, v24);

    objc_msgSend(v22, sel_setExportedObject_, v23);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v23;
    *(void *)(v25 + 24) = v22;
    char v50 = sub_25AB95340;
    uint64_t v51 = v25;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v49 = sub_25AB72188;
    *((void *)&v49 + 1) = &block_descriptor_17;
    uint64_t v26 = _Block_copy(&aBlock);
    id v27 = v22;
    id v28 = v23;
    swift_release();
    objc_msgSend(v27, sel_setInvalidationHandler_, v26);
    _Block_release(v26);
    char v50 = sub_25AB93584;
    uint64_t v51 = 0;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v49 = sub_25AB72188;
    *((void *)&v49 + 1) = &block_descriptor_20;
    id v29 = _Block_copy(&aBlock);
    objc_msgSend(v27, sel_setInterruptionHandler_, v29);
    _Block_release(v29);
    objc_msgSend(v27, sel_resume);

    return 1;
  }
  swift_bridgeObjectRelease();
  if (qword_26A49F7C8 != -1) {
    swift_once();
  }
  uint64_t v40 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1C40);
  sub_25AB150E0(v40, (uint64_t)v7);
  uint64_t v41 = sub_25AC345E0();
  uint64_t v42 = *(void *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v7, 1, v41) != 1)
  {
    uint64_t v43 = sub_25AC345C0();
    os_log_type_t v44 = sub_25AC352C0();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v45 = 0;
      _os_log_impl(&dword_25AB11000, v43, v44, "Unable to read team identifier", v45, 2u);
      MEMORY[0x261151C20](v45, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v41);
    return 0;
  }

  uint64_t v36 = (uint64_t)v7;
LABEL_11:
  sub_25AB15148(v36);
  return 0;
}

uint64_t sub_25AB94B68(void *a1)
{
  v36[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_auditToken);
  long long v30 = v33;
  long long v31 = aBlock;
  id v5 = self;
  v36[0] = 0;
  long long aBlock = v31;
  long long v33 = v30;
  id v6 = objc_msgSend(v5, sel_bundleRecordForAuditToken_error_, &aBlock, v36);
  if (v6)
  {
    unsigned int v7 = v6;
    id v8 = v36[0];
    id v9 = objc_msgSend(v7, sel_bundleIdentifier);
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = sub_25AC34E40();
      uint64_t v13 = v12;

      objc_allocWithZone((Class)type metadata accessor for DiscoveryService());
      id v14 = a1;
      id v15 = sub_25AB1EC74(v14, v11, v13);
      id v16 = objc_msgSend(self, sel_interfaceWithProtocol_, &unk_27088E7C8);
      objc_msgSend(v14, sel_setExportedInterface_, v16);

      objc_msgSend(v14, sel_setExportedObject_, v15);
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v14;
      uint64_t v34 = sub_25AB953BC;
      uint64_t v35 = v17;
      *(void *)&long long aBlock = MEMORY[0x263EF8330];
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v33 = sub_25AB72188;
      *((void *)&v33 + 1) = &block_descriptor_26;
      id v18 = _Block_copy(&aBlock);
      id v19 = v14;
      swift_release();
      objc_msgSend(v19, sel_setInvalidationHandler_, v18);
      _Block_release(v18);
      uint64_t v34 = sub_25AB9380C;
      uint64_t v35 = 0;
      *(void *)&long long aBlock = MEMORY[0x263EF8330];
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v33 = sub_25AB72188;
      *((void *)&v33 + 1) = &block_descriptor_29;
      uint64_t v20 = _Block_copy(&aBlock);
      objc_msgSend(v19, sel_setInterruptionHandler_, v20);
      _Block_release(v20);
      objc_msgSend(v19, sel_resume);

      return 1;
    }
  }
  else
  {
    id v22 = v36[0];
    id v23 = (void *)sub_25AC321F0();

    swift_willThrow();
  }
  if (qword_26A49F7C8 != -1) {
    swift_once();
  }
  uint64_t v24 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1C40);
  sub_25AB150E0(v24, (uint64_t)v4);
  uint64_t v25 = sub_25AC345E0();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v4, 1, v25) == 1)
  {
    sub_25AB15148((uint64_t)v4);
  }
  else
  {
    id v27 = sub_25AC345C0();
    os_log_type_t v28 = sub_25AC352C0();
    if (os_log_type_enabled(v27, v28))
    {
      id v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v29 = 0;
      _os_log_impl(&dword_25AB11000, v27, v28, "Unable to get bundle ID", v29, 2u);
      MEMORY[0x261151C20](v29, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v25);
  }
  return 0;
}

uint64_t sub_25AB94FF0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  sub_25AB953C4();
  uint64_t v3 = 0;
  for (uint64_t i = a1 + 48; ; i += 24)
  {
    id v5 = *(id *)(i - 16);
    swift_retain();
    char v6 = sub_25AC35410();
    swift_release();

    if (v6) {
      break;
    }
    if (v1 == ++v3) {
      return 0;
    }
  }
  return v3;
}

uint64_t type metadata accessor for Daemon()
{
  return self;
}

uint64_t initializeBufferWithCopyOfBuffer for ListenerWrapper(uint64_t a1, long long *a2)
{
  uint64_t v3 = *((void *)a2 + 2);
  long long v4 = *a2;
  *(_OWORD *)a1 = *a2;
  *(void *)(a1 + 16) = v3;
  id v5 = (id)v4;
  swift_retain();
  return a1;
}

uint64_t destroy for ListenerWrapper(id *a1)
{
  return swift_release();
}

uint64_t assignWithCopy for ListenerWrapper(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ListenerWrapper(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ListenerWrapper(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ListenerWrapper(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListenerWrapper()
{
  return &type metadata for ListenerWrapper;
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_25AB952B4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

id sub_25AB952F4()
{
  return sub_25AB932E4(*(void *)(v0 + 16), *(void **)(v0 + 24), MEMORY[0x263F15348], (void (*)(void))sub_25ABBD928);
}

id sub_25AB95338()
{
  return sub_25AB93080(*(void *)(v0 + 16));
}

id sub_25AB95340()
{
  return sub_25AB932E4(*(void *)(v0 + 16), *(void **)(v0 + 24), MEMORY[0x263F15338], (void (*)(void))sub_25ABF8558);
}

uint64_t sub_25AB95384()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_25AB953BC()
{
  return sub_25AB9359C(*(void **)(v0 + 16));
}

unint64_t sub_25AB953C4()
{
  unint64_t result = qword_26A4A0C98;
  if (!qword_26A4A0C98)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_26A4A0C98);
  }
  return result;
}

void static ServiceCleanupSystemTask.register()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v29 - v6;
  if (qword_26A49F808 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1D00);
  sub_25AB150E0(v8, (uint64_t)v7);
  uint64_t v9 = sub_25AC345E0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(void, void, void))(v10 + 48);
  if (v11(v7, 1, v9) == 1)
  {
    sub_25AB15148((uint64_t)v7);
  }
  else
  {
    uint64_t v12 = sub_25AC345C0();
    os_log_type_t v13 = sub_25AC352D0();
    if (os_log_type_enabled(v12, v13))
    {
      id v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = v10;
      id v15 = v11;
      id v16 = v5;
      uint64_t v17 = v1;
      uint64_t v18 = v8;
      id v19 = v14;
      *(_WORD *)id v14 = 0;
      _os_log_impl(&dword_25AB11000, v12, v13, "[cleanup] Registering service", v14, 2u);
      uint64_t v20 = v19;
      uint64_t v8 = v18;
      uint64_t v1 = v17;
      id v5 = v16;
      uint64_t v11 = v15;
      uint64_t v10 = v30;
      MEMORY[0x261151C20](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  id v21 = objc_msgSend(self, sel_sharedScheduler);
  id v22 = (void *)sub_25AC34E10();
  if (qword_26A49F860 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_26A4A0390;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v1;
  aBlock[4] = sub_25AB95BB4;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25AB9613C;
  aBlock[3] = &block_descriptor_4;
  uint64_t v25 = _Block_copy(aBlock);
  swift_release();
  LOBYTE(v23) = objc_msgSend(v21, sel_registerForTaskWithIdentifier_usingQueue_launchHandler_, v22, v23, v25);
  _Block_release(v25);

  if (v23)
  {
  }
  else
  {
    sub_25AB150E0(v8, (uint64_t)v5);
    if (v11(v5, 1, v9) == 1)
    {

      sub_25AB15148((uint64_t)v5);
    }
    else
    {
      uint64_t v26 = sub_25AC345C0();
      os_log_type_t v27 = sub_25AC352D0();
      if (os_log_type_enabled(v26, v27))
      {
        os_log_type_t v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v28 = 0;
        _os_log_impl(&dword_25AB11000, v26, v27, "[cleanup] Cleanup service is already registered", v28, 2u);
        MEMORY[0x261151C20](v28, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v9);
    }
  }
}

uint64_t sub_25AB95860(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0070);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F808 != -1) {
    swift_once();
  }
  uint64_t v10 = __swift_project_value_buffer(v7, (uint64_t)qword_26A4A1D00);
  sub_25AB150E0(v10, (uint64_t)v9);
  uint64_t v11 = sub_25AC345E0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
  {
    sub_25AB15148((uint64_t)v9);
  }
  else
  {
    os_log_type_t v13 = sub_25AC345C0();
    os_log_type_t v14 = sub_25AC352D0();
    if (os_log_type_enabled(v13, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v15 = 0;
      _os_log_impl(&dword_25AB11000, v13, v14, "[cleanup] Executing cleanup", v15, 2u);
      MEMORY[0x261151C20](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
  }
  uint64_t v16 = sub_25AC35140();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = 0;
  void v17[3] = 0;
  v17[4] = a2;
  v17[5] = a1;
  id v18 = a1;
  uint64_t v19 = sub_25AB71DDC((uint64_t)v6, (uint64_t)&unk_26A4A0CA8, (uint64_t)v17);
  aBlock[4] = sub_25AB967E8;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25AB72188;
  aBlock[3] = &block_descriptor_9;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v18, sel_setExpirationHandler_, v20);
  _Block_release(v20);
  return swift_release();
}

uint64_t sub_25AB95BA4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25AB95BB4(void *a1)
{
  return sub_25AB95860(a1, *(void *)(v1 + 16));
}

uint64_t sub_25AB95BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a5;
  v5[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  v5[4] = swift_task_alloc();
  uint64_t v6 = (void *)swift_task_alloc();
  v5[5] = v6;
  void *v6 = v5;
  v6[1] = sub_25AB95C80;
  return sub_25AB969EC();
}

uint64_t sub_25AB95C80()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25AB95D7C);
}

uint64_t sub_25AB95D7C()
{
  if (sub_25AC351F0())
  {
    sub_25AB97298(*(void **)(v0 + 16));
  }
  else
  {
    if (qword_26A49F808 != -1) {
      swift_once();
    }
    uint64_t v1 = *(void *)(v0 + 32);
    uint64_t v2 = __swift_project_value_buffer(*(void *)(v0 + 24), (uint64_t)qword_26A4A1D00);
    sub_25AB150E0(v2, v1);
    uint64_t v3 = sub_25AC345E0();
    uint64_t v4 = *(void *)(v3 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) == 1)
    {
      sub_25AB15148(*(void *)(v0 + 32));
    }
    else
    {
      uint64_t v5 = sub_25AC345C0();
      os_log_type_t v6 = sub_25AC352D0();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v7 = 0;
        _os_log_impl(&dword_25AB11000, v5, v6, "[cleanup] BG task successfully completed", v7, 2u);
        MEMORY[0x261151C20](v7, -1, -1);
      }
      uint64_t v8 = *(void *)(v0 + 32);

      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v3);
    }
    objc_msgSend(*(id *)(v0 + 16), sel_setTaskCompleted);
  }
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_25AB95F54()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F808 != -1) {
    swift_once();
  }
  uint64_t v3 = __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1D00);
  sub_25AB150E0(v3, (uint64_t)v2);
  uint64_t v4 = sub_25AC345E0();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) == 1)
  {
    sub_25AB15148((uint64_t)v2);
  }
  else
  {
    os_log_type_t v6 = sub_25AC345C0();
    os_log_type_t v7 = sub_25AC352D0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_25AB11000, v6, v7, "[cleanup] Terminating cleanup service on expirationHandler", v8, 2u);
      MEMORY[0x261151C20](v8, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v2, v4);
  }
  return sub_25AC351C0();
}

void sub_25AB9613C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_25AB961BC(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  os_log_type_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v17 = v7(*a1, v6);
  uint64_t v9 = v8;
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *a2;
  *a2 = 0x8000000000000000;
  sub_25ABAF230(v10, v17, v9, isUniquelyReferenced_nonNull_native);
  *a2 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v7(v5, v6);
  uint64_t v14 = v13;
  char v15 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v19 = *a3;
  *a3 = 0x8000000000000000;
  sub_25ABAF0B0(v5, v6, v12, v14, v15);
  *a3 = v19;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB96310(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_25AC35200();
  if (!v5)
  {
    uint64_t v40 = a3;
    uint64_t v41 = a4;
    if (qword_26A49F808 != -1) {
      swift_once();
    }
    uint64_t v15 = __swift_project_value_buffer(v11, (uint64_t)qword_26A4A1D00);
    sub_25AB150E0(v15, (uint64_t)v13);
    uint64_t v16 = sub_25AC345E0();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16) == 1)
    {
      uint64_t result = sub_25AB15148((uint64_t)v13);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      uint64_t v18 = sub_25AC345C0();
      os_log_type_t v19 = sub_25AC352D0();
      int v20 = v19;
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v21 = swift_slowAlloc();
        uint64_t v39 = v18;
        uint64_t v22 = v21;
        uint64_t v38 = swift_slowAlloc();
        uint64_t v43 = v38;
        *(_DWORD *)uint64_t v22 = 136315650;
        v36[1] = v22 + 4;
        swift_bridgeObjectRetain();
        uint64_t v42 = sub_25AB56574(a1, a2, &v43);
        int v37 = v20;
        sub_25AC354A0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v22 + 12) = 2048;
        uint64_t v42 = v40;
        sub_25AC354A0();
        *(_WORD *)(v22 + 22) = 2048;
        uint64_t v42 = v41;
        sub_25AC354A0();
        _os_log_impl(&dword_25AB11000, v39, (os_log_type_t)v37, "[cleanup] Performing service [ %s ] cleanup, counter previous: [ %lu ] current: [ %lu ]", (uint8_t *)v22, 0x20u);
        uint64_t v23 = a5;
        uint64_t v24 = a1;
        uint64_t v25 = v38;
        swift_arrayDestroy();
        uint64_t v26 = v25;
        a1 = v24;
        a5 = v23;
        MEMORY[0x261151C20](v26, -1, -1);
        MEMORY[0x261151C20](v22, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v13, v16);
    }
    uint64_t v27 = *a5;
    uint64_t v28 = *(void *)(*a5 + 16);
    uint64_t v30 = v40;
    uint64_t v29 = v41;
    if (v28)
    {
      swift_bridgeObjectRetain();
      unint64_t v31 = sub_25AB8D62C(a1, a2);
      if (v32)
      {
        long long v33 = (uint64_t *)(*(void *)(v27 + 56) + 16 * v31);
        uint64_t v35 = *v33;
        uint64_t v34 = v33[1];
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 24))(v30, v29, v35, v34);
      }
      else
      {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t ServiceCleanupSystemTask.deinit()
{
  return v0;
}

uint64_t ServiceCleanupSystemTask.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ServiceCleanupSystemTask()
{
  return self;
}

uint64_t method lookup function for ServiceCleanupSystemTask(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ServiceCleanupSystemTask);
}

uint64_t sub_25AB966E8()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25AB96728(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_25AB24B20;
  return sub_25AB95BBC(a1, v4, v5, v7, v6);
}

uint64_t sub_25AB967E8()
{
  return sub_25AB95F54();
}

uint64_t sub_25AB967F0(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = v2;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v25 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = 16 * i;
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + v16);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    int v20 = (uint64_t *)(*(void *)(a1 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    swift_bridgeObjectRetain();
    a2(v18, v19, v21, v22);
    if (v3)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v10++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v10 >= v25) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v24 + 8 * v10);
    if (!v14)
    {
      int64_t v15 = v10 + 1;
      if (v10 + 1 >= v25) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v24 + 8 * v15);
      if (v14) {
        goto LABEL_14;
      }
      int64_t v15 = v10 + 2;
      if (v10 + 2 >= v25) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v24 + 8 * v15);
      if (v14) {
        goto LABEL_14;
      }
      int64_t v15 = v10 + 3;
      if (v10 + 3 >= v25) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v24 + 8 * v15);
      if (v14)
      {
LABEL_14:
        int64_t v10 = v15;
        goto LABEL_15;
      }
      int64_t v23 = v10 + 4;
      if (v10 + 4 >= v25) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v24 + 8 * v23);
      v10 += 4;
      if (!v14) {
        break;
      }
    }
LABEL_15:
    unint64_t v8 = (v14 - 1) & v14;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v25) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v24 + 8 * v10);
    ++v23;
    if (v14) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_25AB969EC()
{
  uint64_t v1 = sub_25AC35120();
  v0[5] = v1;
  v0[6] = *(void *)(v1 - 8);
  v0[7] = swift_task_alloc();
  v0[8] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  v0[9] = swift_task_alloc();
  v0[10] = swift_task_alloc();
  v0[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB96AF8);
}

uint64_t sub_25AB96AF8()
{
  int64_t v23 = v0;
  if (qword_26A49F8C0 != -1) {
    swift_once();
  }
  id v1 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v2 = (void *)sub_25AC34E10();
  unsigned int v3 = objc_msgSend(v1, sel_BOOLForKey_, v2);

  if (v3)
  {
    uint64_t v4 = type metadata accessor for PaymentTerminalService();
    uint64_t v21 = MEMORY[0x263F8EE80];
    v0[2] = MEMORY[0x263F8EE80];
    v22[0] = v4;
    v22[1] = (uint64_t)&off_270887678;
    sub_25AB961BC(v22, &v21, v0 + 2);
    uint64_t v5 = qword_26A4A1E08;
    uint64_t v6 = v21;
    uint64_t v7 = *(os_unfair_lock_s **)(qword_26A4A1E08 + 16);
    uint64_t v8 = swift_task_alloc();
    *(void *)(v8 + 16) = v5;
    *(void *)(v8 + 24) = v6;
    uint64_t v9 = swift_task_alloc();
    *(void *)(v9 + 16) = sub_25AB97710;
    *(void *)(v9 + 24) = v8;
    v7 += 4;
    swift_bridgeObjectRetain();
    os_unfair_lock_lock(v7);
    sub_25AB9772C(v22);
    os_unfair_lock_unlock(v7);
    uint64_t v18 = v22[0];
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    *(void *)(swift_task_alloc() + 16) = v0 + 2;
    sub_25AB967F0(v18, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25AB97770);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_26A49F808 != -1) {
      swift_once();
    }
    uint64_t v10 = v0[11];
    uint64_t v11 = __swift_project_value_buffer(v0[8], (uint64_t)qword_26A4A1D00);
    sub_25AB150E0(v11, v10);
    uint64_t v12 = sub_25AC345E0();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
    {
      sub_25AB15148(v0[11]);
    }
    else
    {
      unint64_t v14 = sub_25AC345C0();
      os_log_type_t v15 = sub_25AC352D0();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_25AB11000, v14, v15, "[cleanup] Not needed", v16, 2u);
        MEMORY[0x261151C20](v16, -1, -1);
      }
      uint64_t v17 = v0[11];

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v17, v12);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

void sub_25AB97298(void *a1)
{
  v32[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v30 - v6;
  if (qword_26A49F808 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1D00);
  sub_25AB150E0(v8, (uint64_t)v7);
  uint64_t v9 = sub_25AC345E0();
  uint64_t v10 = *(void **)(v9 - 8);
  uint64_t v11 = (unsigned int (*)(char *, uint64_t, uint64_t))v10[6];
  if (v11(v7, 1, v9) == 1)
  {
    sub_25AB15148((uint64_t)v7);
  }
  else
  {
    uint64_t v12 = sub_25AC345C0();
    os_log_type_t v13 = sub_25AC352D0();
    if (os_log_type_enabled(v12, v13))
    {
      unint64_t v14 = (uint8_t *)swift_slowAlloc();
      unint64_t v31 = v10;
      os_log_type_t v15 = v5;
      uint64_t v16 = a1;
      uint64_t v17 = v14;
      *(_WORD *)unint64_t v14 = 0;
      _os_log_impl(&dword_25AB11000, v12, v13, "[cleanup] Re-scheduled task", v14, 2u);
      uint64_t v18 = v17;
      a1 = v16;
      uint64_t v5 = v15;
      uint64_t v10 = v31;
      MEMORY[0x261151C20](v18, -1, -1);
    }

    ((void (*)(char *, uint64_t))v10[1])(v7, v9);
  }
  sub_25AC35230();
  v32[0] = 0;
  if (objc_msgSend(a1, sel_setTaskExpiredWithRetryAfter_error_, v32))
  {
    MEMORY[0x270F9A8A0]();
  }
  else
  {
    unint64_t v31 = v32[0];
    id v19 = v32[0];
    int v20 = (void *)sub_25AC321F0();

    swift_willThrow();
    sub_25AB150E0(v8, (uint64_t)v5);
    if (v11(v5, 1, v9) == 1)
    {
      sub_25AB15148((uint64_t)v5);
    }
    else
    {
      id v21 = v20;
      id v22 = v20;
      int64_t v23 = sub_25AC345C0();
      os_log_type_t v24 = sub_25AC352C0();
      if (os_log_type_enabled(v23, v24))
      {
        int64_t v25 = (uint8_t *)swift_slowAlloc();
        unint64_t v31 = (void *)swift_slowAlloc();
        *(_DWORD *)int64_t v25 = 138412290;
        v30[1] = v25 + 4;
        id v26 = v20;
        uint64_t v27 = a1;
        uint64_t v28 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v32[0] = v28;
        sub_25AC354A0();
        uint64_t v29 = v31;
        void *v31 = v28;
        a1 = v27;

        _os_log_impl(&dword_25AB11000, v23, v24, "[cleanup] Completing task due to re-schedule error [%@]", v25, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A8);
        swift_arrayDestroy();
        MEMORY[0x261151C20](v29, -1, -1);
        MEMORY[0x261151C20](v25, -1, -1);
      }
      else
      {
      }
      ((void (*)(char *, uint64_t))v10[1])(v5, v9);
    }
    objc_msgSend(a1, sel_setTaskCompleted);
  }
}

uint64_t sub_25AB97710@<X0>(void *a1@<X8>)
{
  return sub_25ABB2DF4(*(void *)(v1 + 24), a1);
}

void *sub_25AB9772C@<X0>(void *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_25AB97770(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25AB96310(a1, a2, a3, a4, *(uint64_t **)(v4 + 16));
}

uint64_t sub_25AB97794(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 57) = a2;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = v2;
  uint64_t v4 = sub_25AC31FA0();
  *(void *)(v3 + 80) = v4;
  *(void *)(v3 + 88) = *(void *)(v4 - 8);
  *(void *)(v3 + 96) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD30);
  *(void *)(v3 + 104) = swift_task_alloc();
  uint64_t v5 = sub_25AC32300();
  *(void *)(v3 + 112) = v5;
  *(void *)(v3 + 120) = *(void *)(v5 - 8);
  *(void *)(v3 + 128) = swift_task_alloc();
  *(void *)(v3 + 136) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB978F4);
}

uint64_t sub_25AB978F4()
{
  char v1 = *(unsigned char *)(v0 + 57);
  sub_25AC35580();
  sub_25AC33700();
  sub_25AC34F60();
  swift_bridgeObjectRelease();
  sub_25AB919A8(v1);
  sub_25AC34F60();
  swift_bridgeObjectRelease();
  sub_25AC34F60();
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 96);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v8 = *(void *)(v0 + 72);
  sub_25AC322E0();
  swift_bridgeObjectRelease();
  sub_25AC32250();
  swift_bridgeObjectRelease();
  sub_25AB18FAC(v7, &qword_26A49FD30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2, v5);
  sub_25AC31F60();
  sub_25AC31F20();
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v9;
  _OWORD v9[2] = v8;
  v9[3] = v6;
  v9[4] = v2;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FED8);
  *uint64_t v10 = v0;
  v10[1] = sub_25AB97BAC;
  return MEMORY[0x270FA2318](v0 + 16, 0, 0, 0xD000000000000017, 0x800000025AC401C0, sub_25AB9B0BC, v9, v11);
}

uint64_t sub_25AB97BAC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25AB97CC4);
}

uint64_t sub_25AB97CC4()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 64);
  (*(void (**)(void, void))(*(void *)(v0 + 120) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 112));
  long long v9 = *(_OWORD *)(v0 + 32);
  long long v10 = *(_OWORD *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 48);
  char v6 = *(unsigned char *)(v0 + 56);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)uint64_t v4 = v10;
  *(_OWORD *)(v4 + 16) = v9;
  *(void *)(v4 + 32) = v5;
  *(unsigned char *)(v4 + 40) = v6;
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_25AB97DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25AC32300();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  long long v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  os_log_type_t v15 = (char *)v39 - v14;
  uint64_t v16 = *(void *)a1;
  uint64_t v17 = *(void *)(a1 + 8);
  unint64_t v19 = *(void *)(a1 + 16);
  uint64_t v18 = *(void *)(a1 + 24);
  unint64_t v20 = *(void *)(a1 + 32);
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v49 = *(void *)(a1 + 8);
    uint64_t v50 = v18;
    uint64_t v47 = v16;
    uint64_t v48 = a2;
    uint64_t v21 = qword_26A49F830;
    unint64_t v22 = v20;
    swift_bridgeObjectRetain();
    unint64_t v51 = v22;
    swift_bridgeObjectRetain();
    if (v21 != -1) {
      swift_once();
    }
    uint64_t v45 = __swift_project_value_buffer(v10, (uint64_t)qword_26A4A1D78);
    sub_25AB150E0(v45, (uint64_t)v15);
    uint64_t v23 = sub_25AC345E0();
    uint64_t v46 = *(void *)(v23 - 8);
    os_log_type_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
    if (v24(v15, 1, v23) == 1)
    {
      sub_25AB18FAC((uint64_t)v15, &qword_26A49F9A0);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
      int64_t v25 = sub_25AC345C0();
      os_log_type_t v26 = sub_25AC352C0();
      int v43 = v26;
      if (os_log_type_enabled(v25, v26))
      {
        os_log_t v42 = v25;
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        uint64_t v53 = v41;
        uint64_t v44 = v23;
        *(_DWORD *)uint64_t v27 = 136315138;
        v39[1] = v27 + 4;
        uint64_t v40 = v27;
        uint64_t v28 = sub_25AC32240();
        uint64_t v52 = sub_25AB56574(v28, v29, &v53);
        uint64_t v23 = v44;
        sub_25AC354A0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        os_log_t v30 = v42;
        unint64_t v31 = v40;
        _os_log_impl(&dword_25AB11000, v42, (os_log_type_t)v43, "Issue with request: %s", v40, 0xCu);
        uint64_t v32 = v41;
        swift_arrayDestroy();
        MEMORY[0x261151C20](v32, -1, -1);
        MEMORY[0x261151C20](v31, -1, -1);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      }
      (*(void (**)(char *, uint64_t))(v46 + 8))(v15, v23);
    }
    sub_25AB150E0(v45, (uint64_t)v13);
    if (v24(v13, 1, v23) == 1)
    {
      sub_25AB18FAC((uint64_t)v13, &qword_26A49F9A0);
    }
    else
    {
      uint64_t v44 = v23;
      swift_bridgeObjectRetain_n();
      unint64_t v33 = v51;
      swift_bridgeObjectRetain_n();
      uint64_t v34 = sub_25AC345C0();
      os_log_type_t v35 = sub_25AC352C0();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        uint64_t v53 = v37;
        *(_DWORD *)uint64_t v36 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v52 = sub_25AB56574(v49, v19, &v53);
        sub_25AC354A0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v36 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v52 = sub_25AB56574(v50, v33, &v53);
        sub_25AC354A0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_25AB11000, v34, v35, "Error downloading configuration: %s - %s", (uint8_t *)v36, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x261151C20](v37, -1, -1);
        MEMORY[0x261151C20](v36, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v44);
    }
    uint64_t v53 = v47;
    uint64_t v54 = v49;
    unint64_t v55 = v19;
    uint64_t v56 = v50;
    unint64_t v57 = v51;
    char v58 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0CC0);
  }
  else
  {
    uint64_t v53 = *(void *)a1;
    uint64_t v54 = v17;
    unint64_t v55 = v19;
    uint64_t v56 = v18;
    unint64_t v57 = v20;
    char v58 = 0;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0CC0);
  }
  return sub_25AC35100();
}

uint64_t sub_25AB983E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, void (*a8)(char *, uint64_t, uint64_t))
{
  uint64_t v31 = a7;
  uint64_t v32 = a8;
  uint64_t v28 = a4;
  uint64_t v29 = a6;
  uint64_t v26 = a3;
  uint64_t v27 = a1;
  uint64_t v30 = a2;
  uint64_t v9 = sub_25AC32300();
  uint64_t v23 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  os_log_type_t v24 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  os_log_type_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_25AC31FA0();
  uint64_t v16 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v16 + 16))(v18, v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v27, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v9);
  unint64_t v19 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v20 = (v14 + *(unsigned __int8 *)(v10 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v21 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v21 + v19, v15, v12);
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v21 + v20, v24, v23);
  v32(v18, v31, v21);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v25);
}

uint64_t sub_25AB986AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25AC32300();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  os_log_type_t v15 = (char *)v38 - v14;
  uint64_t v16 = *(void *)(a1 + 8);
  unint64_t v18 = *(void *)(a1 + 16);
  uint64_t v17 = *(void *)(a1 + 24);
  unint64_t v19 = *(void *)(a1 + 32);
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v46 = *(void *)a1;
    uint64_t v47 = a2;
    uint64_t v48 = v17;
    uint64_t v49 = v16;
    uint64_t v20 = qword_26A49F830;
    unint64_t v21 = v19;
    swift_bridgeObjectRetain();
    unint64_t v50 = v21;
    swift_bridgeObjectRetain();
    if (v20 != -1) {
      swift_once();
    }
    uint64_t v44 = __swift_project_value_buffer(v10, (uint64_t)qword_26A4A1D78);
    sub_25AB150E0(v44, (uint64_t)v15);
    uint64_t v22 = sub_25AC345E0();
    uint64_t v45 = *(void *)(v22 - 8);
    uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
    if (v23(v15, 1, v22) == 1)
    {
      sub_25AB18FAC((uint64_t)v15, &qword_26A49F9A0);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
      os_log_type_t v24 = sub_25AC345C0();
      os_log_type_t v25 = sub_25AC352C0();
      int v42 = v25;
      if (os_log_type_enabled(v24, v25))
      {
        os_log_t v41 = v24;
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        uint64_t v40 = swift_slowAlloc();
        uint64_t v52 = v40;
        uint64_t v43 = v22;
        *(_DWORD *)uint64_t v26 = 136315138;
        v38[1] = v26 + 4;
        uint64_t v39 = v26;
        uint64_t v27 = sub_25AC32240();
        uint64_t v51 = sub_25AB56574(v27, v28, &v52);
        uint64_t v22 = v43;
        sub_25AC354A0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        os_log_t v29 = v41;
        uint64_t v30 = v39;
        _os_log_impl(&dword_25AB11000, v41, (os_log_type_t)v42, "Issue with request: %s", v39, 0xCu);
        uint64_t v31 = v40;
        swift_arrayDestroy();
        MEMORY[0x261151C20](v31, -1, -1);
        MEMORY[0x261151C20](v30, -1, -1);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      }
      (*(void (**)(char *, uint64_t))(v45 + 8))(v15, v22);
    }
    sub_25AB150E0(v44, (uint64_t)v13);
    if (v23(v13, 1, v22) == 1)
    {
      sub_25AB18FAC((uint64_t)v13, &qword_26A49F9A0);
    }
    else
    {
      uint64_t v43 = v22;
      swift_bridgeObjectRetain_n();
      unint64_t v32 = v50;
      swift_bridgeObjectRetain_n();
      unint64_t v33 = sub_25AC345C0();
      os_log_type_t v34 = sub_25AC352C0();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = swift_slowAlloc();
        uint64_t v36 = swift_slowAlloc();
        uint64_t v52 = v36;
        *(_DWORD *)uint64_t v35 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v51 = sub_25AB56574(v49, v18, &v52);
        sub_25AC354A0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v35 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v51 = sub_25AB56574(v48, v32, &v52);
        sub_25AC354A0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_25AB11000, v33, v34, "Error downloading manifest: %s - %s", (uint8_t *)v35, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x261151C20](v36, -1, -1);
        MEMORY[0x261151C20](v35, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v43);
    }
    uint64_t v52 = v46;
    uint64_t v53 = v49;
    unint64_t v54 = v18;
    uint64_t v55 = v48;
    unint64_t v56 = v50;
    char v57 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0CE8);
  }
  else
  {
    uint64_t v52 = *(void *)a1;
    uint64_t v53 = v16;
    unint64_t v54 = v18;
    uint64_t v55 = v17;
    unint64_t v56 = v19;
    char v57 = 0;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0CE8);
  }
  return sub_25AC35100();
}

void sub_25AB98CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v6 = sub_25AC31FA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(self, sel_sharedSession);
  uint64_t v11 = (void *)sub_25AC31F30();
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = (char *)swift_allocObject();
  uint64_t v15 = v21;
  uint64_t v16 = v22;
  *((void *)v14 + 2) = v12;
  *((void *)v14 + 3) = v15;
  *((void *)v14 + 4) = v16;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v14[v13], v9, v6);
  aBlock[4] = sub_25AB9B17C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25AB41338;
  aBlock[3] = &block_descriptor_5;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v18 = objc_msgSend(v10, sel_dataTaskWithRequest_completionHandler_, v11, v17);
  _Block_release(v17);

  unint64_t v19 = *(void **)(v4 + 16);
  *(void *)(v4 + 16) = v18;
  id v20 = v18;

  objc_msgSend(v20, sel_resume);
}

void sub_25AB98F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v6 = sub_25AC31FA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(self, sel_sharedSession);
  uint64_t v11 = (void *)sub_25AC31F30();
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = (char *)swift_allocObject();
  uint64_t v15 = v21;
  uint64_t v16 = v22;
  *((void *)v14 + 2) = v12;
  *((void *)v14 + 3) = v15;
  *((void *)v14 + 4) = v16;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v14[v13], v9, v6);
  aBlock[4] = sub_25AB9BB58;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25AB41338;
  aBlock[3] = &block_descriptor_24;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v18 = objc_msgSend(v10, sel_dataTaskWithRequest_completionHandler_, v11, v17);
  _Block_release(v17);

  unint64_t v19 = *(void **)(v4 + 16);
  *(void *)(v4 + 16) = v18;
  id v20 = v18;

  objc_msgSend(v20, sel_resume);
}

void sub_25AB99184(uint64_t a1, char *a2, void *a3, void *a4, uint64_t a5, void (*a6)(unsigned char *), uint64_t a7, uint64_t a8)
{
  uint64_t v111 = a8;
  uint64_t v112 = a1;
  uint64_t v119 = a7;
  uint64_t v120 = a6;
  id v121 = a4;
  uint64_t v114 = a3;
  uint64_t v115 = a2;
  uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v8 = MEMORY[0x270FA5388](v118);
  id v10 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v109 = (uint64_t)&v109 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v110 = (uint64_t)&v109 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v116 = (uint64_t)&v109 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  unint64_t v19 = (char *)&v109 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v113 = (uint64_t)&v109 - v20;
  uint64_t v21 = sub_25AC32540();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  os_log_type_t v25 = (char *)&v109 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v109 - v26;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0CC8);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v30 = (char *)&v109 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_25AC32560();
  uint64_t v117 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  unint64_t v33 = (char *)&v109 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v35 = *(void **)(Strong + 16);
    *(void *)(Strong + 16) = 0;
    swift_release();
  }
  id v36 = v121;
  if (!v121)
  {
    uint64_t v53 = v114;
    unint64_t v54 = (unint64_t)v115;
    if (!v114 || (self, (uint64_t v55 = swift_dynamicCastObjCClass()) == 0) || v54 >> 60 == 15)
    {
      if (qword_26A49F830 != -1) {
        swift_once();
      }
      uint64_t v64 = __swift_project_value_buffer(v118, (uint64_t)qword_26A4A1D78);
      sub_25AB150E0(v64, (uint64_t)v10);
      uint64_t v65 = sub_25AC345E0();
      uint64_t v66 = *(void *)(v65 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v10, 1, v65) == 1)
      {
        sub_25AB18FAC((uint64_t)v10, &qword_26A49F9A0);
      }
      else
      {
        uint64_t v86 = sub_25AC345C0();
        os_log_type_t v87 = sub_25AC352C0();
        if (os_log_type_enabled(v86, v87))
        {
          long long v88 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)long long v88 = 0;
          _os_log_impl(&dword_25AB11000, v86, v87, "Execute download file - internalError - Channel failure, nil api service", v88, 2u);
          MEMORY[0x261151C20](v88, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v66 + 8))(v10, v65);
      }
      *(_OWORD *)uint64_t v123 = xmmword_25AC38B70;
      *(_OWORD *)&v123[16] = xmmword_25AC38B80;
      *(void *)&v123[32] = 0x800000025AC3E430;
      char v124 = 1;
      v120(v123);
      return;
    }
    unint64_t v56 = (void *)v55;
    id v57 = v53;
    uint64_t v58 = v112;
    sub_25AB29544(v112, v54);
    sub_25AB3BE90(v111, v58, v54, v56);
    if ((char *)objc_msgSend(v56, sel_statusCode) - 300 >= (char *)0xFFFFFFFFFFFFFF9CLL)
    {
      uint64_t v92 = sub_25AB8C264();
      if (v92)
      {
        *(void *)uint64_t v123 = v92;
        memset(&v123[8], 0, 32);
        char v124 = 0;
        v120(v123);
        sub_25AB16944(v58, v54);
LABEL_58:
        swift_bridgeObjectRelease();
LABEL_63:

        return;
      }
      if (qword_26A49F830 != -1) {
        swift_once();
      }
      uint64_t v98 = __swift_project_value_buffer(v118, (uint64_t)qword_26A4A1D78);
      uint64_t v99 = v109;
      sub_25AB150E0(v98, v109);
      uint64_t v100 = sub_25AC345E0();
      uint64_t v101 = *(void *)(v100 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100) == 1)
      {
        sub_25AB18FAC(v99, &qword_26A49F9A0);
      }
      else
      {
        uint64_t v106 = sub_25AC345C0();
        os_log_type_t v107 = sub_25AC352C0();
        if (os_log_type_enabled(v106, v107))
        {
          int v108 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)int v108 = 0;
          _os_log_impl(&dword_25AB11000, v106, v107, "Execute download file - internalError - no available content", v108, 2u);
          MEMORY[0x261151C20](v108, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v99, v100);
      }
    }
    else
    {
      if (qword_26A49F830 != -1) {
        swift_once();
      }
      uint64_t v59 = __swift_project_value_buffer(v118, (uint64_t)qword_26A4A1D78);
      uint64_t v60 = v110;
      sub_25AB150E0(v59, v110);
      uint64_t v61 = sub_25AC345E0();
      uint64_t v62 = *(void *)(v61 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61) == 1)
      {
        sub_25AB18FAC(v60, &qword_26A49F9A0);
      }
      else
      {
        id v93 = v57;
        uint64_t v94 = sub_25AC345C0();
        os_log_type_t v95 = sub_25AC352C0();
        if (os_log_type_enabled(v94, v95))
        {
          id v121 = v57;
          uint64_t v96 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v96 = 134217984;
          *(void *)uint64_t v123 = objc_msgSend(v56, sel_statusCode);
          id v57 = v121;
          uint64_t v58 = v112;
          sub_25AC354A0();

          _os_log_impl(&dword_25AB11000, v94, v95, "Execute download file - serverError - Invalid status from server: %ld", v96, 0xCu);
          uint64_t v97 = v96;
          unint64_t v54 = (unint64_t)v115;
          MEMORY[0x261151C20](v97, -1, -1);
        }
        else
        {
        }
        (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v110, v61);
      }
      uint64_t v102 = sub_25AB88A70();
      if (v103)
      {
        *(void *)uint64_t v123 = 4;
        *(void *)&v123[8] = v102;
        *(void *)&v123[16] = v103;
        *(void *)&v123[24] = v104;
        *(void *)&v123[32] = v105;
        char v124 = 1;
        v120(v123);
        sub_25AB16944(v58, v54);
        swift_bridgeObjectRelease();
        goto LABEL_58;
      }
    }
    *(_OWORD *)uint64_t v123 = xmmword_25AC38BD0;
    *(_OWORD *)&v123[16] = xmmword_25AC38BE0;
    *(void *)&v123[32] = 0x800000025AC3E4D0;
    char v124 = 1;
    v120(v123);
    sub_25AB16944(v58, v54);
    goto LABEL_63;
  }
  *(void *)uint64_t v123 = v121;
  id v37 = v121;
  id v38 = v36;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A00C0);
  char v39 = swift_dynamicCast();
  uint64_t v40 = v117;
  os_log_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v117 + 56);
  if (v39)
  {
    uint64_t v115 = v19;
    v41(v30, 0, 1, v31);
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v33, v30, v31);
    sub_25AB9B780(&qword_26A4A0CD0, MEMORY[0x263F07A20]);
    uint64_t v42 = v40;
    sub_25AC32190();
    sub_25AC32550();
    sub_25AB9B780(&qword_26A4A0CD8, MEMORY[0x263F07A00]);
    sub_25AC35040();
    sub_25AC35040();
    uint64_t v44 = v122;
    uint64_t v43 = *(void *)v123;
    uint64_t v45 = *(void (**)(char *, uint64_t))(v22 + 8);
    v45(v25, v21);
    v45(v27, v21);
    if (v43 == v44)
    {
      uint64_t v46 = v118;
      if (qword_26A49F830 != -1) {
        swift_once();
      }
      uint64_t v47 = __swift_project_value_buffer(v46, (uint64_t)qword_26A4A1D78);
      uint64_t v48 = v113;
      sub_25AB150E0(v47, v113);
      uint64_t v49 = sub_25AC345E0();
      uint64_t v50 = *(void *)(v49 - 8);
      int v51 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49);
      id v52 = v121;
      if (v51 == 1)
      {
        sub_25AB18FAC(v48, &qword_26A49F9A0);
      }
      else
      {
        uint64_t v89 = sub_25AC345C0();
        os_log_type_t v90 = sub_25AC352C0();
        if (os_log_type_enabled(v89, v90))
        {
          uint64_t v91 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v91 = 0;
          _os_log_impl(&dword_25AB11000, v89, v90, "Execute download file - request cancelled", v91, 2u);
          MEMORY[0x261151C20](v91, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
      }
      *(_OWORD *)uint64_t v123 = xmmword_25AC3BEB0;
      *(_OWORD *)&v123[16] = xmmword_25AC3BEC0;
      *(void *)&v123[32] = 0xEE0064656C6C6563;
      char v124 = 1;
      v120(v123);

      (*(void (**)(char *, uint64_t))(v117 + 8))(v33, v31);
      return;
    }
    (*(void (**)(char *, uint64_t))(v42 + 8))(v33, v31);
    uint64_t v63 = v118;
    unint64_t v19 = v115;
  }
  else
  {
    v41(v30, 1, 1, v31);
    sub_25AB18FAC((uint64_t)v30, &qword_26A4A0CC8);
    uint64_t v63 = v118;
  }
  if (qword_26A49F830 != -1) {
    swift_once();
  }
  uint64_t v67 = __swift_project_value_buffer(v63, (uint64_t)qword_26A4A1D78);
  sub_25AB150E0(v67, (uint64_t)v19);
  uint64_t v68 = sub_25AC345E0();
  uint64_t v69 = *(void *)(v68 - 8);
  long long v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
  if (v70(v19, 1, v68) == 1)
  {
    sub_25AB18FAC((uint64_t)v19, &qword_26A49F9A0);
  }
  else
  {
    long long v71 = sub_25AC345C0();
    os_log_type_t v72 = sub_25AC352C0();
    if (os_log_type_enabled(v71, v72))
    {
      long long v73 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v73 = 0;
      _os_log_impl(&dword_25AB11000, v71, v72, "Execute download file - networkError - Server not reachable", v73, 2u);
      MEMORY[0x261151C20](v73, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v69 + 8))(v19, v68);
  }
  uint64_t v74 = v67;
  uint64_t v75 = v116;
  sub_25AB150E0(v74, v116);
  if (v70((char *)v75, 1, v68) == 1)
  {
    sub_25AB18FAC(v75, &qword_26A49F9A0);
  }
  else
  {
    id v76 = v121;
    id v77 = v121;
    id v78 = v76;
    unsigned __int32 v79 = sub_25AC345C0();
    os_log_type_t v80 = sub_25AC352C0();
    if (os_log_type_enabled(v79, v80))
    {
      long long v81 = (uint8_t *)swift_slowAlloc();
      uint64_t v82 = (void *)swift_slowAlloc();
      *(_DWORD *)long long v81 = 138412290;
      id v83 = v76;
      uint64_t v84 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)uint64_t v123 = v84;
      sub_25AC354A0();
      *uint64_t v82 = v84;

      _os_log_impl(&dword_25AB11000, v79, v80, "Error processing request: %@", v81, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A8);
      swift_arrayDestroy();
      MEMORY[0x261151C20](v82, -1, -1);
      long long v85 = v81;
      uint64_t v75 = v116;
      MEMORY[0x261151C20](v85, -1, -1);
    }
    else
    {
    }
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v75, v68);
  }
  *(_OWORD *)uint64_t v123 = xmmword_25AC38BB0;
  *(_OWORD *)&v123[16] = xmmword_25AC38BC0;
  *(void *)&v123[32] = 0x800000025AC3E480;
  char v124 = 1;
  v120(v123);
}

void sub_25AB9A110(uint64_t a1, char *a2, void *a3, void *a4, uint64_t a5, void (*a6)(long long *), uint64_t a7, uint64_t a8)
{
  uint64_t v112 = a8;
  uint64_t v113 = a1;
  uint64_t v120 = a7;
  id v121 = a6;
  id v122 = a4;
  uint64_t v115 = a3;
  uint64_t v116 = a2;
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v8 = MEMORY[0x270FA5388](v119);
  id v10 = (char *)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v110 = (uint64_t)&v110 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v111 = (uint64_t)&v110 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v117 = (uint64_t)&v110 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  unint64_t v19 = (char *)&v110 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v114 = (uint64_t)&v110 - v20;
  uint64_t v21 = sub_25AC32540();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  os_log_type_t v25 = (char *)&v110 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v110 - v26;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0CC8);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v30 = (char *)&v110 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_25AC32560();
  uint64_t v118 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  unint64_t v33 = (char *)&v110 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v35 = *(void **)(Strong + 16);
    *(void *)(Strong + 16) = 0;
    swift_release();
  }
  id v36 = v122;
  if (!v122)
  {
    uint64_t v53 = v115;
    unint64_t v54 = (unint64_t)v116;
    if (!v115 || (self, (uint64_t v55 = swift_dynamicCastObjCClass()) == 0) || v54 >> 60 == 15)
    {
      if (qword_26A49F830 != -1) {
        swift_once();
      }
      uint64_t v64 = __swift_project_value_buffer(v119, (uint64_t)qword_26A4A1D78);
      sub_25AB150E0(v64, (uint64_t)v10);
      uint64_t v65 = sub_25AC345E0();
      uint64_t v66 = *(void *)(v65 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v10, 1, v65) == 1)
      {
        sub_25AB18FAC((uint64_t)v10, &qword_26A49F9A0);
      }
      else
      {
        uint64_t v86 = sub_25AC345C0();
        os_log_type_t v87 = sub_25AC352C0();
        if (os_log_type_enabled(v86, v87))
        {
          long long v88 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)long long v88 = 0;
          _os_log_impl(&dword_25AB11000, v86, v87, "Execute download file - internalError - Channel failure, nil api service", v88, 2u);
          MEMORY[0x261151C20](v88, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v66 + 8))(v10, v65);
      }
      long long v124 = xmmword_25AC38B70;
      long long v125 = xmmword_25AC38B80;
      unint64_t v126 = 0x800000025AC3E430;
      char v127 = 1;
      v121(&v124);
      return;
    }
    unint64_t v56 = (void *)v55;
    id v57 = v53;
    uint64_t v58 = v113;
    sub_25AB29544(v113, v54);
    sub_25AB3BE90(v112, v58, v54, v56);
    if ((char *)objc_msgSend(v56, sel_statusCode) - 300 >= (char *)0xFFFFFFFFFFFFFF9CLL)
    {
      uint64_t v92 = sub_25AB8C678();
      if (v93)
      {
        *(void *)&long long v124 = v92;
        *((void *)&v124 + 1) = v93;
        unint64_t v126 = 0;
        long long v125 = 0uLL;
        char v127 = 0;
        v121(&v124);
        sub_25AB16944(v58, v54);
LABEL_58:
        swift_bridgeObjectRelease();
LABEL_63:

        return;
      }
      if (qword_26A49F830 != -1) {
        swift_once();
      }
      uint64_t v99 = __swift_project_value_buffer(v119, (uint64_t)qword_26A4A1D78);
      uint64_t v100 = v110;
      sub_25AB150E0(v99, v110);
      uint64_t v101 = sub_25AC345E0();
      uint64_t v102 = *(void *)(v101 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48))(v100, 1, v101) == 1)
      {
        sub_25AB18FAC(v100, &qword_26A49F9A0);
      }
      else
      {
        os_log_type_t v107 = sub_25AC345C0();
        os_log_type_t v108 = sub_25AC352C0();
        if (os_log_type_enabled(v107, v108))
        {
          uint64_t v109 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v109 = 0;
          _os_log_impl(&dword_25AB11000, v107, v108, "Execute download file - internalError - no available content", v109, 2u);
          MEMORY[0x261151C20](v109, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v100, v101);
      }
    }
    else
    {
      if (qword_26A49F830 != -1) {
        swift_once();
      }
      uint64_t v59 = __swift_project_value_buffer(v119, (uint64_t)qword_26A4A1D78);
      uint64_t v60 = v111;
      sub_25AB150E0(v59, v111);
      uint64_t v61 = sub_25AC345E0();
      uint64_t v62 = *(void *)(v61 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61) == 1)
      {
        sub_25AB18FAC(v60, &qword_26A49F9A0);
      }
      else
      {
        id v94 = v57;
        os_log_type_t v95 = sub_25AC345C0();
        os_log_type_t v96 = sub_25AC352C0();
        if (os_log_type_enabled(v95, v96))
        {
          id v122 = v57;
          uint64_t v97 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v97 = 134217984;
          *(void *)&long long v124 = objc_msgSend(v56, sel_statusCode);
          id v57 = v122;
          uint64_t v58 = v113;
          sub_25AC354A0();

          _os_log_impl(&dword_25AB11000, v95, v96, "Execute download file - serverError - Invalid status from server: %ld", v97, 0xCu);
          uint64_t v98 = v97;
          unint64_t v54 = (unint64_t)v116;
          MEMORY[0x261151C20](v98, -1, -1);
        }
        else
        {
        }
        (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v111, v61);
      }
      uint64_t v103 = sub_25AB88A70();
      if (v104)
      {
        *(void *)&long long v124 = 4;
        *((void *)&v124 + 1) = v103;
        *(void *)&long long v125 = v104;
        *((void *)&v125 + 1) = v105;
        unint64_t v126 = v106;
        char v127 = 1;
        v121(&v124);
        sub_25AB16944(v58, v54);
        swift_bridgeObjectRelease();
        goto LABEL_58;
      }
    }
    long long v124 = xmmword_25AC38BD0;
    long long v125 = xmmword_25AC38BE0;
    unint64_t v126 = 0x800000025AC3E4D0;
    char v127 = 1;
    v121(&v124);
    sub_25AB16944(v58, v54);
    goto LABEL_63;
  }
  *(void *)&long long v124 = v122;
  id v37 = v122;
  id v38 = v36;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A00C0);
  char v39 = swift_dynamicCast();
  uint64_t v40 = v118;
  os_log_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v118 + 56);
  if (v39)
  {
    uint64_t v116 = v19;
    v41(v30, 0, 1, v31);
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v33, v30, v31);
    sub_25AB9B780(&qword_26A4A0CD0, MEMORY[0x263F07A20]);
    uint64_t v42 = v40;
    sub_25AC32190();
    sub_25AC32550();
    sub_25AB9B780(&qword_26A4A0CD8, MEMORY[0x263F07A00]);
    sub_25AC35040();
    sub_25AC35040();
    uint64_t v44 = v123;
    uint64_t v43 = v124;
    uint64_t v45 = *(void (**)(char *, uint64_t))(v22 + 8);
    v45(v25, v21);
    v45(v27, v21);
    if (v43 == v44)
    {
      uint64_t v46 = v119;
      if (qword_26A49F830 != -1) {
        swift_once();
      }
      uint64_t v47 = __swift_project_value_buffer(v46, (uint64_t)qword_26A4A1D78);
      uint64_t v48 = v114;
      sub_25AB150E0(v47, v114);
      uint64_t v49 = sub_25AC345E0();
      uint64_t v50 = *(void *)(v49 - 8);
      int v51 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49);
      id v52 = v122;
      if (v51 == 1)
      {
        sub_25AB18FAC(v48, &qword_26A49F9A0);
      }
      else
      {
        uint64_t v89 = sub_25AC345C0();
        os_log_type_t v90 = sub_25AC352C0();
        if (os_log_type_enabled(v89, v90))
        {
          uint64_t v91 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v91 = 0;
          _os_log_impl(&dword_25AB11000, v89, v90, "Execute download file - request cancelled", v91, 2u);
          MEMORY[0x261151C20](v91, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
      }
      long long v124 = xmmword_25AC3BEB0;
      long long v125 = xmmword_25AC3BEC0;
      unint64_t v126 = 0xEE0064656C6C6563;
      char v127 = 1;
      v121(&v124);

      (*(void (**)(char *, uint64_t))(v118 + 8))(v33, v31);
      return;
    }
    (*(void (**)(char *, uint64_t))(v42 + 8))(v33, v31);
    uint64_t v63 = v119;
    unint64_t v19 = v116;
  }
  else
  {
    v41(v30, 1, 1, v31);
    sub_25AB18FAC((uint64_t)v30, &qword_26A4A0CC8);
    uint64_t v63 = v119;
  }
  if (qword_26A49F830 != -1) {
    swift_once();
  }
  uint64_t v67 = __swift_project_value_buffer(v63, (uint64_t)qword_26A4A1D78);
  sub_25AB150E0(v67, (uint64_t)v19);
  uint64_t v68 = sub_25AC345E0();
  uint64_t v69 = *(void *)(v68 - 8);
  long long v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
  if (v70(v19, 1, v68) == 1)
  {
    sub_25AB18FAC((uint64_t)v19, &qword_26A49F9A0);
  }
  else
  {
    long long v71 = sub_25AC345C0();
    os_log_type_t v72 = sub_25AC352C0();
    if (os_log_type_enabled(v71, v72))
    {
      long long v73 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v73 = 0;
      _os_log_impl(&dword_25AB11000, v71, v72, "Execute download file - networkError - Server not reachable", v73, 2u);
      MEMORY[0x261151C20](v73, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v69 + 8))(v19, v68);
  }
  uint64_t v74 = v67;
  uint64_t v75 = v117;
  sub_25AB150E0(v74, v117);
  if (v70((char *)v75, 1, v68) == 1)
  {
    sub_25AB18FAC(v75, &qword_26A49F9A0);
  }
  else
  {
    id v76 = v122;
    id v77 = v122;
    id v78 = v76;
    unsigned __int32 v79 = sub_25AC345C0();
    os_log_type_t v80 = sub_25AC352C0();
    if (os_log_type_enabled(v79, v80))
    {
      long long v81 = (uint8_t *)swift_slowAlloc();
      uint64_t v82 = (void *)swift_slowAlloc();
      *(_DWORD *)long long v81 = 138412290;
      id v83 = v76;
      uint64_t v84 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)&long long v124 = v84;
      sub_25AC354A0();
      *uint64_t v82 = v84;

      _os_log_impl(&dword_25AB11000, v79, v80, "Error processing request: %@", v81, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A8);
      swift_arrayDestroy();
      MEMORY[0x261151C20](v82, -1, -1);
      long long v85 = v81;
      uint64_t v75 = v117;
      MEMORY[0x261151C20](v85, -1, -1);
    }
    else
    {
    }
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v75, v68);
  }
  long long v124 = xmmword_25AC38BB0;
  long long v125 = xmmword_25AC38BC0;
  unint64_t v126 = 0x800000025AC3E480;
  char v127 = 1;
  v121(&v124);
}

uint64_t type metadata accessor for ContentWebService()
{
  return self;
}

uint64_t sub_25AB9B0BC(uint64_t a1)
{
  return sub_25AB983E4(a1, v1[2], v1[3], v1[4], &qword_26A4A0CC0, (uint64_t)&unk_270886360, (uint64_t)sub_25AB9B120, (void (*)(char *, uint64_t, uint64_t))sub_25AB98CCC);
}

uint64_t sub_25AB9B114()
{
  return objectdestroyTm_1(&qword_26A4A0CC0);
}

uint64_t sub_25AB9B120(uint64_t a1)
{
  return sub_25AB9B998(a1, &qword_26A4A0CC0, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_25AB97DC4);
}

uint64_t sub_25AB9B140()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25AB9B17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25AB9BB70(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))sub_25AB99184);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_25AB9B1AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[10] = a3;
  v4[11] = v3;
  unsigned char v4[8] = a1;
  v4[9] = a2;
  uint64_t v5 = sub_25AC31FA0();
  v4[12] = v5;
  v4[13] = *(void *)(v5 - 8);
  v4[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD30);
  v4[15] = swift_task_alloc();
  uint64_t v6 = sub_25AC32300();
  v4[16] = v6;
  v4[17] = *(void *)(v6 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25AB9B30C);
}

uint64_t sub_25AB9B30C()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[15];
  sub_25AC322E0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_25AB18FAC(v0[15], &qword_26A49FD30);
    uint64_t v4 = v0[8];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    *(_OWORD *)uint64_t v4 = xmmword_25AC38BD0;
    *(_OWORD *)(v4 + 16) = xmmword_25AC38BE0;
    *(void *)(v4 + 32) = 0x800000025AC3E4D0;
    *(unsigned char *)(v4 + 40) = 1;
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    uint64_t v7 = v0[18];
    uint64_t v8 = v0[19];
    uint64_t v9 = v0[16];
    uint64_t v10 = v0[17];
    uint64_t v11 = v0[14];
    uint64_t v12 = v0[11];
    (*(void (**)(uint64_t, void, uint64_t))(v10 + 32))(v8, v0[15], v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v7, v8, v9);
    sub_25AC31F60();
    sub_25AC31F20();
    uint64_t v13 = (void *)swift_task_alloc();
    v0[20] = v13;
    void v13[2] = v12;
    void v13[3] = v11;
    v13[4] = v8;
    uint64_t v14 = (void *)swift_task_alloc();
    v0[21] = v14;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FED0);
    *uint64_t v14 = v0;
    v14[1] = sub_25AB9B570;
    return MEMORY[0x270FA2318](v0 + 2, 0, 0, 0xD000000000000016, 0x800000025AC40240, sub_25AB9B7C8, v13, v15);
  }
}

uint64_t sub_25AB9B570()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25AB9B688);
}

uint64_t sub_25AB9B688()
{
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  (*(void (**)(void, void))(*(void *)(v0 + 136) + 8))(*(void *)(v0 + 152), *(void *)(v0 + 128));
  long long v9 = *(_OWORD *)(v0 + 32);
  long long v10 = *(_OWORD *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 48);
  char v5 = *(unsigned char *)(v0 + 56);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v6 = *(void *)(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)uint64_t v6 = v10;
  *(_OWORD *)(v6 + 16) = v9;
  *(void *)(v6 + 32) = v4;
  *(unsigned char *)(v6 + 40) = v5;
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_25AB9B780(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25AB9B7C8(uint64_t a1)
{
  return sub_25AB983E4(a1, v1[2], v1[3], v1[4], &qword_26A4A0CE8, (uint64_t)&unk_270886400, (uint64_t)sub_25AB9B978, (void (*)(char *, uint64_t, uint64_t))sub_25AB98F28);
}

uint64_t sub_25AB9B820()
{
  return objectdestroyTm_1(&qword_26A4A0CE8);
}

uint64_t objectdestroyTm_1(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = *(void *)(v3 + 64);
  uint64_t v7 = sub_25AC32300();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v5 + v6 + v9) & ~v9;
  uint64_t v11 = v10 + *(void *)(v8 + 64);
  uint64_t v12 = v4 | v9 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1 + v10, v7);
  return MEMORY[0x270FA0238](v1, v11, v12);
}

uint64_t sub_25AB9B978(uint64_t a1)
{
  return sub_25AB9B998(a1, &qword_26A4A0CE8, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_25AB986AC);
}

uint64_t sub_25AB9B998(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_25AC32300() - 8);
  uint64_t v9 = v3 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a3(a1, v3 + v6, v9);
}

uint64_t objectdestroy_12Tm()
{
  uint64_t v1 = sub_25AC31FA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_25AB9BB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25AB9BB70(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))sub_25AB9A110);
}

uint64_t sub_25AB9BB70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))
{
  uint64_t v10 = *(void *)(sub_25AC31FA0() - 8);
  uint64_t v11 = v5[2];
  uint64_t v12 = v5[3];
  uint64_t v13 = v5[4];
  uint64_t v14 = (char *)v5 + ((*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return a5(a1, a2, a3, a4, v11, v12, v13, v14);
}

uint64_t sub_25AB9BC2C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v69 = a3;
  id v66 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v64 = (char *)v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v63 = (char *)v62 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v62 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)v62 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v62 - v17;
  v4[2] = 0;
  v4[3] = 0;
  unint64_t v19 = (void **)(v4 + 2);
  v4[4] = 0;
  if (qword_26A49F820 != -1) {
    swift_once();
  }
  uint64_t v68 = __swift_project_value_buffer(v6, (uint64_t)qword_26A4A1D48);
  sub_25AB150E0(v68, (uint64_t)v18);
  uint64_t v20 = sub_25AC345E0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  unsigned int v22 = v67(v18, 1, v20);
  uint64_t v65 = v21;
  if (v22 == 1)
  {
    sub_25AB18FAC((uint64_t)v18, &qword_26A49F9A0);
  }
  else
  {
    uint64_t v23 = swift_retain();
    sub_25AB464DC(v23, 0xD000000000000020, 0x800000025AC40320, 0, 0xE000000000000000);
    swift_release();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
  }
  uint64_t v24 = v4[3];
  uint64_t v25 = v69;
  v4[3] = a2;
  v4[4] = v25;
  swift_retain();
  sub_25AB74948(v24);
  uint64_t v26 = (void *)sub_25AC34E10();
  uint64_t v27 = (void *)sub_25AC34E10();
  id v28 = objc_msgSend(self, sel_endpointForMachName_service_instance_, v26, v27, 0);

  if (v28)
  {
    id v29 = objc_msgSend(self, sel_connectionWithEndpoint_, v28);
    if (v29)
    {
      uint64_t v30 = v29;
      uint64_t v31 = swift_allocObject();
      id v32 = v66;
      *(void *)(v31 + 16) = v4;
      *(void *)(v31 + 24) = v32;
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = sub_25AB9DFC8;
      *(void *)(v33 + 24) = v31;
      v62[1] = v31;
      aBlock[4] = sub_25AB9DFE0;
      aBlock[5] = v33;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_25AB9CD5C;
      aBlock[3] = &block_descriptor_6;
      os_log_type_t v34 = _Block_copy(aBlock);
      swift_retain();
      id v35 = v32;
      swift_retain();
      swift_release();
      objc_msgSend(v30, sel_configureConnection_, v34);
      _Block_release(v34);
      LOBYTE(v34) = swift_isEscapingClosureAtFileLocation();
      uint64_t result = swift_release();
      if ((v34 & 1) == 0)
      {
        id v66 = v35;
        long long v70 = &unk_270891CC8;
        uint64_t v37 = swift_dynamicCastObjCProtocolConditional();
        if (v37) {
          id v38 = v30;
        }
        uint64_t v40 = (uint64_t)v63;
        uint64_t v39 = (uint64_t)v64;
        os_log_t v41 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v67;
        uint64_t v42 = *v19;
        *unint64_t v19 = (void *)v37;

        sub_25AB150E0(v68, v40);
        if (v41(v40, 1, v20) == 1)
        {
          sub_25AB18FAC(v40, &qword_26A49F9A0);
          uint64_t v43 = v65;
          uint64_t v44 = *v19;
          if (!*v19) {
            goto LABEL_22;
          }
        }
        else
        {
          uint64_t v45 = sub_25AC345C0();
          os_log_type_t v46 = sub_25AC352D0();
          if (os_log_type_enabled(v45, v46))
          {
            uint64_t v47 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v47 = 0;
            _os_log_impl(&dword_25AB11000, v45, v46, "Connection created, activate now", v47, 2u);
            uint64_t v48 = v47;
            uint64_t v40 = (uint64_t)v63;
            MEMORY[0x261151C20](v48, -1, -1);
          }

          uint64_t v43 = v65;
          (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v40, v20);
          os_log_t v41 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v67;
          uint64_t v44 = *v19;
          if (!*v19) {
            goto LABEL_22;
          }
        }
        objc_msgSend(v44, sel_activate);
LABEL_22:
        sub_25AB150E0(v68, v39);
        if (v41(v39, 1, v20) == 1)
        {

          swift_release();
          sub_25AB18FAC(v39, &qword_26A49F9A0);
        }
        else
        {
          uint64_t v49 = v43;
          uint64_t v50 = sub_25AC345C0();
          os_log_type_t v51 = sub_25AC352D0();
          if (os_log_type_enabled(v50, v51))
          {
            id v52 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v52 = 0;
            _os_log_impl(&dword_25AB11000, v50, v51, "Connection created, activated", v52, 2u);
            uint64_t v53 = v52;
            uint64_t v39 = (uint64_t)v64;
            MEMORY[0x261151C20](v53, -1, -1);
          }

          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v39, v20);
        }
        swift_release();
        return (uint64_t)v4;
      }
      __break(1u);
      goto LABEL_41;
    }
    sub_25AB150E0(v68, (uint64_t)v13);
    if (v67(v13, 1, v20) == 1)
    {
      uint64_t result = sub_25AB18FAC((uint64_t)v13, &qword_26A49F9A0);
    }
    else
    {
      uint64_t v58 = sub_25AC345C0();
      os_log_type_t v59 = sub_25AC352C0();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v60 = 0;
        _os_log_impl(&dword_25AB11000, v58, v59, "Failed to create connection", v60, 2u);
        MEMORY[0x261151C20](v60, -1, -1);
      }

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v13, v20);
    }
    uint64_t v61 = (void (*)(uint64_t))v4[3];
    if (!v61) {
      goto LABEL_42;
    }
    swift_retain();
    v61(1);

    swift_release();
    sub_25AB74948((uint64_t)v61);

LABEL_38:
    swift_release();
    return 0;
  }
  sub_25AB150E0(v68, (uint64_t)v16);
  if (v67(v16, 1, v20) == 1)
  {
    uint64_t result = sub_25AB18FAC((uint64_t)v16, &qword_26A49F9A0);
  }
  else
  {
    unint64_t v54 = sub_25AC345C0();
    os_log_type_t v55 = sub_25AC352C0();
    if (os_log_type_enabled(v54, v55))
    {
      unint64_t v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v56 = 0;
      _os_log_impl(&dword_25AB11000, v54, v55, "Failed to create end point", v56, 2u);
      MEMORY[0x261151C20](v56, -1, -1);
    }

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v16, v20);
  }
  id v57 = (void (*)(uint64_t))v4[3];
  if (v57)
  {
    swift_retain();
    v57(1);

    swift_release();
    sub_25AB74948((uint64_t)v57);
    goto LABEL_38;
  }
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void sub_25AB9C4E4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)sub_25AC34E10();
  id v7 = objc_msgSend(self, sel_interfaceWithIdentifier_, v6);

  uint64_t v8 = self;
  id v9 = objc_msgSend(v8, sel_protocolForProtocol_, &unk_270891EB0);
  objc_msgSend(v7, sel_setServer_, v9);

  id v10 = objc_msgSend(v8, sel_protocolForProtocol_, &unk_270892090);
  objc_msgSend(v7, sel_setClient_, v10);

  objc_msgSend(v7, sel_setClientMessagingExpectation_, 0);
  id v11 = objc_msgSend(self, sel_userInitiated);
  objc_msgSend(a1, sel_setServiceQuality_, v11);

  objc_msgSend(a1, sel_setInterface_, v7);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  objc_msgSend(a1, sel_setTargetQueue_, a3);
  unint64_t v19 = sub_25AB9C7F4;
  uint64_t v20 = 0;
  uint64_t v15 = MEMORY[0x263EF8330];
  uint64_t v16 = 1107296256;
  uint64_t v17 = sub_25AB9613C;
  uint64_t v18 = &block_descriptor_13;
  uint64_t v12 = _Block_copy(&v15);
  objc_msgSend(a1, sel_setActivationHandler_, v12);
  _Block_release(v12);
  unint64_t v19 = sub_25AB9C814;
  uint64_t v20 = 0;
  uint64_t v15 = MEMORY[0x263EF8330];
  uint64_t v16 = 1107296256;
  uint64_t v17 = sub_25AB9613C;
  uint64_t v18 = &block_descriptor_16;
  uint64_t v13 = _Block_copy(&v15);
  objc_msgSend(a1, sel_setInterruptionHandler_, v13);
  _Block_release(v13);
  unint64_t v19 = sub_25AB9CAB0;
  uint64_t v20 = 0;
  uint64_t v15 = MEMORY[0x263EF8330];
  uint64_t v16 = 1107296256;
  uint64_t v17 = sub_25AB9613C;
  uint64_t v18 = &block_descriptor_19;
  uint64_t v14 = _Block_copy(&v15);
  objc_msgSend(a1, sel_setInvalidationHandler_, v14);
  _Block_release(v14);
}

uint64_t sub_25AB9C7F4(void *a1)
{
  return sub_25AB9CAD0(a1, MEMORY[0x263F90290], "UIScene connection activated %@");
}

id sub_25AB9C814(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F820 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1D48);
  sub_25AB150E0(v5, (uint64_t)v4);
  uint64_t v6 = sub_25AC345E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_25AB18FAC((uint64_t)v4, &qword_26A49F9A0);
  }
  else
  {
    id v8 = a1;
    id v9 = sub_25AC345C0();
    os_log_type_t v10 = sub_25AC352C0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v18 = a1;
      id v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = (void *)swift_slowAlloc();
      *(_DWORD *)id v11 = 138412290;
      id v19 = v8;
      id v12 = v8;
      os_log_t v17 = v9;
      id v13 = v12;
      a1 = v18;
      sub_25AC354A0();
      uint64_t v14 = v16;
      void *v16 = v8;

      id v9 = v17;
      _os_log_impl(&dword_25AB11000, v17, v10, "UIScene connection interrupted %@", v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A8);
      swift_arrayDestroy();
      MEMORY[0x261151C20](v14, -1, -1);
      MEMORY[0x261151C20](v11, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  return objc_msgSend(a1, sel_invalidate);
}

uint64_t sub_25AB9CAB0(void *a1)
{
  return sub_25AB9CAD0(a1, MEMORY[0x263F90280], "UIScene connection invalidated %@");
}

uint64_t sub_25AB9CAD0(void *a1, uint64_t (*a2)(void), const char *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v6);
  id v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F820 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v6, (uint64_t)qword_26A4A1D48);
  sub_25AB150E0(v9, (uint64_t)v8);
  uint64_t v10 = sub_25AC345E0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1) {
    return sub_25AB18FAC((uint64_t)v8, &qword_26A49F9A0);
  }
  id v13 = a1;
  uint64_t v14 = sub_25AC345C0();
  os_log_type_t v15 = a2();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    os_log_t v17 = (void *)swift_slowAlloc();
    uint64_t v23 = v16;
    uint64_t v24 = v14;
    *(_DWORD *)uint64_t v16 = 138412290;
    id v25 = v13;
    id v18 = v13;
    unsigned int v22 = a3;
    id v19 = v18;
    uint64_t v14 = v24;
    sub_25AC354A0();
    *os_log_t v17 = v13;
    uint64_t v20 = v17;

    uint64_t v21 = v23;
    _os_log_impl(&dword_25AB11000, v14, v15, v22, v23, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A8);
    swift_arrayDestroy();
    MEMORY[0x261151C20](v20, -1, -1);
    MEMORY[0x261151C20](v21, -1, -1);
  }
  else
  {
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v8, v10);
}

uint64_t sub_25AB9CD5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);
  return swift_unknownObjectRelease();
}

void sub_25AB9CDB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  v23[1] = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  id v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v23 - v9;
  if (qword_26A49F820 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v5, (uint64_t)qword_26A4A1D48);
  sub_25AB150E0(v11, (uint64_t)v10);
  uint64_t v12 = sub_25AC345E0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v10, 1, v12) == 1)
  {
    sub_25AB18FAC((uint64_t)v10, &qword_26A49F9A0);
  }
  else
  {
    sub_25AB464DC(v3, 0xD00000000000001CLL, 0x800000025AC403B0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  uint64_t v15 = sub_25AB9D964();
  if (v15)
  {
    uint64_t v16 = (void *)v15;
    sub_25AB150E0(v11, (uint64_t)v8);
    if (v14(v8, 1, v12) == 1)
    {
      sub_25AB18FAC((uint64_t)v8, &qword_26A49F9A0);
      uint64_t v17 = a2;
    }
    else
    {
      id v18 = sub_25AC345C0();
      os_log_type_t v19 = sub_25AC352D0();
      uint64_t v17 = a2;
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v20 = 0;
        _os_log_impl(&dword_25AB11000, v18, v19, "Sending activateRemoteUI message", v20, 2u);
        MEMORY[0x261151C20](v20, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
    }
    uint64_t v21 = (void *)sub_25AC34D90();
    aBlock[4] = sub_25AB9D11C;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_25AB9D17C;
    aBlock[3] = &block_descriptor_25;
    unsigned int v22 = _Block_copy(aBlock);
    objc_msgSend(v16, sel_activateRemoteUI_internalEndpoint_reply_, v21, v17, v22);
    _Block_release(v22);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_25AB9D1E8();
  }
}

uint64_t sub_25AB9D11C(void *a1)
{
  return sub_25AB9D680(a1, "activateRemoteUI has %@");
}

void sub_25AB9D17C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_25AB9D1E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  id v8 = (char *)aBlock - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)aBlock - v9;
  if (qword_26A49F820 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1D48);
  sub_25AB150E0(v11, (uint64_t)v10);
  uint64_t v12 = sub_25AC345E0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v10, 1, v12) == 1)
  {
    sub_25AB18FAC((uint64_t)v10, &qword_26A49F9A0);
  }
  else
  {
    sub_25AB464DC(v1, 0x6164696C61766E69, 0xEC00000029286574, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  uint64_t v15 = sub_25AB9D964();
  if (v15)
  {
    uint64_t v16 = (void *)v15;
    sub_25AB150E0(v11, (uint64_t)v8);
    if (v14(v8, 1, v12) == 1)
    {
      sub_25AB18FAC((uint64_t)v8, &qword_26A49F9A0);
    }
    else
    {
      uint64_t v17 = sub_25AC345C0();
      os_log_type_t v18 = sub_25AC352D0();
      if (os_log_type_enabled(v17, v18))
      {
        os_log_type_t v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v19 = 0;
        _os_log_impl(&dword_25AB11000, v17, v18, "Sending invalidateRemoteUI message", v19, 2u);
        MEMORY[0x261151C20](v19, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
    }
    aBlock[4] = sub_25AB9D620;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_25AB9D17C;
    aBlock[3] = &block_descriptor_22;
    uint64_t v20 = _Block_copy(aBlock);
    objc_msgSend(v16, sel_invalidateRemoteUI_, v20);
    _Block_release(v20);
    uint64_t v21 = *(void **)(v1 + 16);
    if (v21)
    {
      id v22 = v21;
      objc_msgSend(v22, sel_invalidate);
    }
    swift_unknownObjectRelease();
    uint64_t v23 = *(void **)(v1 + 16);
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    sub_25AB150E0(v11, (uint64_t)v5);
    if (v14(v5, 1, v12) == 1)
    {
      sub_25AB18FAC((uint64_t)v5, &qword_26A49F9A0);
    }
    else
    {
      uint64_t v24 = sub_25AC345C0();
      os_log_type_t v25 = sub_25AC352D0();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v26 = 0;
        _os_log_impl(&dword_25AB11000, v24, v25, "invalidate but remoteTarget is already nil", v26, 2u);
        MEMORY[0x261151C20](v26, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v13 + 8))(v5, v12);
    }
  }
}

uint64_t sub_25AB9D620(void *a1)
{
  return sub_25AB9D680(a1, "invalidate has %@");
}

uint64_t sub_25AB9D680(void *a1, const char *a2)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F820 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_project_value_buffer(v4, (uint64_t)qword_26A4A1D48);
  sub_25AB150E0(v7, (uint64_t)v6);
  uint64_t v8 = sub_25AC345E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1) {
    return sub_25AB18FAC((uint64_t)v6, &qword_26A49F9A0);
  }
  id v11 = a1;
  id v12 = a1;
  uint64_t v13 = sub_25AC345C0();
  os_log_type_t v14 = sub_25AC352C0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v20 = a2;
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 138412290;
    if (a1)
    {
      id v17 = a1;
      uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v21 = v18;
      sub_25AC354A0();
    }
    else
    {
      uint64_t v21 = 0;
      sub_25AC354A0();
      uint64_t v18 = 0;
    }
    void *v16 = v18;

    _os_log_impl(&dword_25AB11000, v13, v14, v20, v15, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A8);
    swift_arrayDestroy();
    MEMORY[0x261151C20](v16, -1, -1);
    MEMORY[0x261151C20](v15, -1, -1);
  }
  else
  {
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v8);
}

uint64_t sub_25AB9D964()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v34 = (uint64_t)&v34 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v34 - v8;
  if (qword_26A49F820 != -1) {
    swift_once();
  }
  uint64_t v10 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1D48);
  sub_25AB150E0(v10, (uint64_t)v9);
  uint64_t v11 = sub_25AC345E0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  uint64_t v35 = v12;
  if (v14 == 1)
  {
    sub_25AB18FAC((uint64_t)v9, &qword_26A49F9A0);
  }
  else
  {
    sub_25AB464DC(v1, 0x615465746F6D6572, 0xEC00000074656772, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0BA0);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_25AC3BC50;
  uint64_t v16 = (void *)sub_25AC34E10();
  id v17 = (void *)sub_25AC34E10();
  id v18 = objc_msgSend(self, sel_attributeWithDomain_name_, v16, v17);

  *(void *)(v15 + 32) = v18;
  *(void *)&v39[0] = v15;
  sub_25AC350A0();
  uint64_t v19 = *(void **)(v1 + 16);
  if (v19)
  {
    if (*(void *)&v39[0] >> 62)
    {
      sub_25AB9E020();
      id v20 = v19;
      swift_bridgeObjectRetain();
      sub_25AC35690();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v20 = v19;
      swift_bridgeObjectRetain();
      sub_25AC35880();
      sub_25AB9E020();
    }
    swift_bridgeObjectRelease();
    sub_25AB9E020();
    uint64_t v21 = (void *)sub_25AC35070();
    swift_bridgeObjectRelease();
    id v22 = objc_msgSend(v20, sel_remoteTargetWithLaunchingAssertionAttributes_, v21);

    if (v22)
    {
      sub_25AC35500();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v36, 0, sizeof(v36));
    }
    uint64_t v23 = v35;
    sub_25AB3783C((uint64_t)v36, (uint64_t)&v37);
    if (*((void *)&v38 + 1))
    {
      sub_25AB1DDC8(&v37, v39);
      uint64_t v24 = v10;
      uint64_t v25 = v34;
      sub_25AB150E0(v24, v34);
      if (v13((char *)v25, 1, v11) == 1)
      {
        sub_25AB18FAC(v25, &qword_26A49F9A0);
      }
      else
      {
        uint64_t v30 = sub_25AC345C0();
        os_log_type_t v31 = sub_25AC352D0();
        if (os_log_type_enabled(v30, v31))
        {
          id v32 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v32 = 0;
          _os_log_impl(&dword_25AB11000, v30, v31, "Got remote server target", v32, 2u);
          uint64_t v33 = v32;
          uint64_t v25 = v34;
          MEMORY[0x261151C20](v33, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v11);
      }
      sub_25AB1DDC8(v39, &v37);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0DB8);
      if (swift_dynamicCast()) {
        return *(void *)&v36[0];
      }
      else {
        return 0;
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    long long v37 = 0u;
    long long v38 = 0u;
    uint64_t v23 = v35;
  }
  sub_25AB18FAC((uint64_t)&v37, &qword_26A49FD00);
  sub_25AB150E0(v10, (uint64_t)v5);
  if (v13(v5, 1, v11) == 1)
  {
    sub_25AB18FAC((uint64_t)v5, &qword_26A49F9A0);
  }
  else
  {
    uint64_t v26 = sub_25AC345C0();
    os_log_type_t v27 = sub_25AC352C0();
    if (os_log_type_enabled(v26, v27))
    {
      id v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v28 = 0;
      _os_log_impl(&dword_25AB11000, v26, v27, "No remote server target", v28, 2u);
      MEMORY[0x261151C20](v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v11);
  }
  return 0;
}

uint64_t sub_25AB9DF24()
{
  sub_25AB74948(*(void *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RemoteSceneUIHandle()
{
  return self;
}

uint64_t sub_25AB9DF88()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_25AB9DFC8(void *a1)
{
  sub_25AB9C4E4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_25AB9DFD0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25AB9DFE0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

unint64_t sub_25AB9E020()
{
  unint64_t result = qword_26A4A0DB0;
  if (!qword_26A4A0DB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A4A0DB0);
  }
  return result;
}

void sub_25AB9E088(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_25AB9E0F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25AB383F8(*a1, *a2);
}

uint64_t sub_25AB9E0FC()
{
  return sub_25AC359D0();
}

uint64_t sub_25AB9E1AC()
{
  sub_25AC34F20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25AB9E248()
{
  return sub_25AC359D0();
}

uint64_t sub_25AB9E2F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25ABA67E4();
  *a1 = result;
  return result;
}

void sub_25AB9E324(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEB00000000646574;
  unint64_t v4 = 0x800000025AC3D240;
  unint64_t v5 = 0xD000000000000018;
  if (v2 != 1)
  {
    unint64_t v5 = 0x6E776F6E6B6E75;
    unint64_t v4 = 0xE700000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6164696C61766E69;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

id sub_25AB9E390()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for UIManager()), sel_init);
  qword_26A4A1DE0 = (uint64_t)result;
  return result;
}

void sub_25AB9E3C0(int a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v4);
  BOOL v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a2 + 16;
  if (qword_26A49F7E8 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_project_value_buffer(v4, (uint64_t)qword_26A4A1CA0);
  sub_25AB150E0(v8, (uint64_t)v6);
  uint64_t v9 = sub_25AC345E0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) == 1)
  {
    sub_25AB15148((uint64_t)v6);
  }
  else
  {
    uint64_t v11 = sub_25AC345C0();
    os_log_type_t v12 = sub_25AC352C0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      v30[0] = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      int v28 = a1;
      if ((_BYTE)a1)
      {
        if (a1 == 1) {
          uint64_t v15 = 0xD000000000000018;
        }
        else {
          uint64_t v15 = 0x6E776F6E6B6E75;
        }
        if (a1 == 1) {
          unint64_t v16 = 0x800000025AC3D240;
        }
        else {
          unint64_t v16 = 0xE700000000000000;
        }
      }
      else
      {
        unint64_t v16 = 0xEB00000000646574;
        uint64_t v15 = 0x6164696C61766E69;
      }
      uint64_t v29 = sub_25AB56574(v15, v16, v30);
      sub_25AC354A0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25AB11000, v11, v12, "invalidationHandler - errorCode = %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261151C20](v14, -1, -1);
      MEMORY[0x261151C20](v13, -1, -1);

      a1 = v28;
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v9);
  }
  swift_beginAccess();
  uint64_t v17 = MEMORY[0x261151D10](v7);
  if (v17)
  {
    id v18 = (void *)v17;
    uint64_t v19 = sub_25AC34180();
    sub_25AB9F3B0(v19, v20, a1);

    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v21 = (unsigned char *)MEMORY[0x261151D10](v7);
  if (v21)
  {
    v21[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isTapUIVisible] = 0;
  }
  swift_beginAccess();
  id v22 = (unsigned char *)MEMORY[0x261151D10](v7);
  if (v22)
  {
    v22[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_substatePINLoaded] = 0;
  }
  swift_beginAccess();
  uint64_t v23 = MEMORY[0x261151D10](v7);
  if (v23)
  {
    uint64_t v24 = (void *)v23;
    uint64_t v25 = (void *)(v23 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_invalidationHandler);
    uint64_t v26 = *(void *)(v23 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_invalidationHandler);
    *uint64_t v25 = 0;
    v25[1] = 0;
    sub_25AB74948(v26);
  }
}

void sub_25AB9E760(int a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x261151D10](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    uint64_t v6 = sub_25AC34160();
    sub_25AB9F3B0(v6, v7, a1);

    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v8 = (unsigned char *)MEMORY[0x261151D10](v3);
  if (v8)
  {
    v8[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isPINUIVisible] = 0;
  }
  swift_beginAccess();
  uint64_t v9 = MEMORY[0x261151D10](v3);
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    uint64_t v11 = (void *)(v9 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_invalidationHandler);
    uint64_t v12 = *(void *)(v9 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_invalidationHandler);
    *uint64_t v11 = 0;
    v11[1] = 0;
    sub_25AB74948(v12);
  }
}

id sub_25AB9E848()
{
  id v1 = objc_msgSend(self, sel_anonymousListener);
  if (qword_26A49F878 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_26A4A0C10;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v0;
  id v4 = v1;
  id v5 = v0;
  objc_msgSend(v4, sel_setDelegate_, v2);
  objc_msgSend(v4, sel_resume);
  uint64_t v6 = (void **)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon6Daemon_temporaryListeners);
  swift_beginAccess();
  uint64_t v7 = *v6;
  id v8 = v4;
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  char *v6 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v7 = sub_25AB910A4(0, v7[2] + 1, 1, v7);
    char *v6 = v7;
  }
  unint64_t v11 = v7[2];
  unint64_t v10 = v7[3];
  if (v11 >= v10 >> 1)
  {
    uint64_t v7 = sub_25AB910A4((void *)(v10 > 1), v11 + 1, 1, v7);
    char *v6 = v7;
  }
  id v7[2] = v11 + 1;
  uint64_t v12 = &v7[3 * v11];
  void v12[4] = v8;
  v12[5] = sub_25ABA6AB8;
  v12[6] = v3;
  swift_endAccess();
  swift_release();

  id v13 = objc_msgSend(v8, sel_endpoint);
  return v13;
}

void sub_25AB9EA1C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F7E8 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_project_value_buffer(v4, (uint64_t)qword_26A4A1CA0);
  sub_25AB150E0(v7, (uint64_t)v6);
  uint64_t v8 = sub_25AC345E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_25AB15148((uint64_t)v6);
  }
  else
  {
    unint64_t v10 = sub_25AC345C0();
    os_log_type_t v11 = sub_25AC352B0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_25AB11000, v10, v11, "daemon | configureConnection", v12, 2u);
      MEMORY[0x261151C20](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  id v13 = self;
  id v14 = objc_msgSend(v13, sel_interfaceWithProtocol_, &unk_27088F970);
  objc_msgSend(a1, sel_setExportedInterface_, v14);

  objc_msgSend(a1, sel_setExportedObject_, v2);
  id v15 = objc_msgSend(v13, sel_interfaceWithProtocol_, &unk_27088FCE0);
  objc_msgSend(a1, sel_setRemoteObjectInterface_, v15);

  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v30 = sub_25ABA6A98;
  uint64_t v31 = v16;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v27 = 1107296256;
  int v28 = sub_25AB9E088;
  uint64_t v29 = &block_descriptor_87;
  uint64_t v17 = _Block_copy(&aBlock);
  swift_release();
  id v18 = objc_msgSend(a1, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);
  sub_25AC35500();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A0E50);
  int v19 = swift_dynamicCast();
  uint64_t v20 = v25[1];
  if (!v19) {
    uint64_t v20 = 0;
  }
  *(void *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_transactionUI) = v20;
  swift_unknownObjectRelease();
  uint64_t v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v30 = sub_25ABA6AA0;
  uint64_t v31 = v21;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v27 = 1107296256;
  int v28 = sub_25AB72188;
  uint64_t v29 = &block_descriptor_91;
  id v22 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(a1, sel_setInvalidationHandler_, v22);
  _Block_release(v22);
  objc_msgSend(a1, sel_resume);
  uint64_t v23 = *(void **)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection);
  *(void *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection) = a1;
  id v24 = a1;
}

void sub_25AB9EE6C(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a2 + 16;
  if (qword_26A49F7E8 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_project_value_buffer(v4, (uint64_t)qword_26A4A1CA0);
  sub_25AB150E0(v8, (uint64_t)v6);
  uint64_t v9 = sub_25AC345E0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) == 1)
  {
    sub_25AB15148((uint64_t)v6);
  }
  else
  {
    id v11 = a1;
    id v12 = a1;
    id v13 = sub_25AC345C0();
    os_log_type_t v14 = sub_25AC352C0();
    if (os_log_type_enabled(v13, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      v25[0] = v23;
      *(_DWORD *)id v15 = 136446210;
      id v22 = v15 + 4;
      swift_getErrorValue();
      uint64_t v16 = sub_25AC35900();
      uint64_t v24 = sub_25AB56574(v16, v17, v25);
      sub_25AC354A0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_25AB11000, v13, v14, "UI XPC proxy error: %{public}s", v15, 0xCu);
      uint64_t v18 = v23;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v18, -1, -1);
      MEMORY[0x261151C20](v15, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v9);
  }
  swift_beginAccess();
  uint64_t v19 = MEMORY[0x261151D10](v7);
  if (v19)
  {
    uint64_t v20 = (void *)v19;
    uint64_t v21 = *(void (**)(void))(v19 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_invalidationHandler);
    sub_25ABA6AA8((uint64_t)v21);

    if (v21)
    {
      v21(0);
      sub_25AB74948((uint64_t)v21);
    }
  }
}

void sub_25AB9F184(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = a1 + 16;
  if (qword_26A49F7D0 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1C58);
  sub_25AB150E0(v6, (uint64_t)v4);
  uint64_t v7 = sub_25AC345E0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
  {
    sub_25AB15148((uint64_t)v4);
  }
  else
  {
    uint64_t v9 = sub_25AC345C0();
    os_log_type_t v10 = sub_25AC352D0();
    if (os_log_type_enabled(v9, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v11 = 0;
      _os_log_impl(&dword_25AB11000, v9, v10, "TransactionUI connection interrupted, nullifying connection", v11, 2u);
      MEMORY[0x261151C20](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v4, v7);
  }
  swift_beginAccess();
  uint64_t v12 = MEMORY[0x261151D10](v5);
  if (v12)
  {
    id v13 = (void *)v12;
    os_log_type_t v14 = *(void (**)(void))(v12 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_invalidationHandler);
    sub_25ABA6AA8((uint64_t)v14);

    if (v14)
    {
      v14(0);
      sub_25AB74948((uint64_t)v14);
    }
  }
}

void sub_25AB9F3B0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  int v106 = a3;
  uint64_t v104 = a1;
  uint64_t v105 = a2;
  uint64_t v95 = sub_25AC34CC0();
  uint64_t v94 = *(void *)(v95 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v95);
  uint64_t v92 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v93 = (char *)&v90 - v7;
  uint64_t v91 = sub_25AC34C70();
  uint64_t v97 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  os_log_type_t v96 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_25AC34C60();
  MEMORY[0x270FA5388](v102);
  uint64_t v103 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v99 = (uint64_t)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v100 = (uint64_t)&v90 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v98 = (uint64_t)&v90 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v90 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v101 = (uint64_t)&v90 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v90 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v90 - v25;
  if (qword_26A49F7E8 != -1) {
    swift_once();
  }
  uint64_t v27 = __swift_project_value_buffer(v10, (uint64_t)qword_26A4A1CA0);
  sub_25AB150E0(v27, (uint64_t)v26);
  uint64_t v28 = sub_25AC345E0();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v109 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  if (v109(v26, 1, v28) == 1)
  {
    uint64_t v30 = v28;
    sub_25AB15148((uint64_t)v26);
  }
  else
  {
    sub_25AB464DC(v4, 0xD000000000000024, 0x800000025AC406B0, 0, 0xE000000000000000);
    uint64_t v30 = v28;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
  }
  char v31 = v106;
  uint64_t v107 = v4;
  uint64_t v108 = v29;
  if ((_BYTE)v106 && v106 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v32 = sub_25AC35870();
    swift_bridgeObjectRelease();
    if ((v32 & 1) == 0)
    {
      if (v31)
      {
        uint64_t v36 = v108;
        char v37 = sub_25AC35870();
        swift_bridgeObjectRelease();
        uint64_t v38 = v30;
        if ((v37 & 1) == 0)
        {
          if (qword_26A49F7D8 != -1) {
            swift_once();
          }
          uint64_t v39 = __swift_project_value_buffer(v10, (uint64_t)qword_26A4A1C70);
          uint64_t v40 = v101;
          sub_25AB150E0(v39, v101);
          if (v109((char *)v40, 1, v38) == 1)
          {
            sub_25AB15148(v40);
          }
          else
          {
            uint64_t v62 = sub_25AC345C0();
            os_log_type_t v63 = sub_25AC352C0();
            if (os_log_type_enabled(v62, v63))
            {
              uint64_t v64 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v64 = 0;
              _os_log_impl(&dword_25AB11000, v62, v63, "ui invalidated with non-handleRequested unexpected SB error", v64, 2u);
              MEMORY[0x261151C20](v64, -1, -1);
            }

            (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v40, v38);
          }
          uint64_t v65 = v107;
          sub_25ABA0374();
          uint64_t v44 = MEMORY[0x261151D10](v65 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate);
          if (v44) {
            goto LABEL_24;
          }
          return;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v36 = v108;
        uint64_t v38 = v30;
      }
      if (qword_26A49F7D8 != -1) {
        swift_once();
      }
      uint64_t v46 = __swift_project_value_buffer(v10, (uint64_t)qword_26A4A1C70);
      sub_25AB150E0(v46, (uint64_t)v19);
      if (v109(v19, 1, v38) == 1)
      {
        sub_25AB15148((uint64_t)v19);
      }
      else
      {
        uint64_t v47 = sub_25AC345C0();
        os_log_type_t v48 = sub_25AC352C0();
        if (os_log_type_enabled(v47, v48))
        {
          uint64_t v49 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v49 = 0;
          _os_log_impl(&dword_25AB11000, v47, v48, "ui invalidated normally with .handleRequested event", v49, 2u);
          MEMORY[0x261151C20](v49, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v38);
      }
      uint64_t v50 = OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isTapUIVisible;
      uint64_t v51 = v107;
      if ((*(unsigned char *)(v107 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isTapUIVisible) & 1) != 0
        || *(unsigned char *)(v107 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isPINUIVisible) == 1)
      {
        uint64_t v52 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v53 = (void *)swift_allocObject();
        uint64_t v54 = v104;
        uint64_t v55 = v105;
        v53[2] = v52;
        v53[3] = v54;
        v53[4] = v55;
        aBlock[4] = sub_25ABA6A8C;
        aBlock[5] = v53;
        aBlock[0] = MEMORY[0x263EF8330];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_25AB72188;
        aBlock[3] = &block_descriptor_83;
        _Block_copy(aBlock);
        uint64_t v110 = MEMORY[0x263F8EE78];
        sub_25AB74CC0();
        swift_retain();
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0460);
        sub_25ABA6944();
        sub_25AC35510();
        sub_25AC34D00();
        swift_allocObject();
        uint64_t v56 = sub_25AC34CE0();
        swift_release();
        swift_release();
        uint64_t v57 = OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_deferredWork;
        *(void *)(v51 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_deferredWork) = v56;
        swift_release();
        if (!*(void *)(v51 + v57)) {
          return;
        }
        swift_retain();
        if ((sub_25AC34CD0() & 1) == 0
          && ((*(unsigned char *)(v51 + v50) & 1) != 0
           || *(unsigned char *)(v51 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isPINUIVisible) == 1))
        {
          uint64_t v67 = v98;
          sub_25AB150E0(v46, v98);
          unsigned int v68 = v109((char *)v67, 1, v38);
          uint64_t v69 = v108;
          if (v68 == 1)
          {
            sub_25AB15148(v67);
            uint64_t v70 = v95;
            uint64_t v71 = v94;
            os_log_type_t v72 = v93;
            long long v73 = v92;
            uint64_t v74 = v91;
          }
          else
          {
            long long v81 = sub_25AC345C0();
            os_log_type_t v82 = sub_25AC352D0();
            BOOL v83 = os_log_type_enabled(v81, v82);
            os_log_type_t v72 = v93;
            long long v73 = v92;
            uint64_t v74 = v91;
            if (v83)
            {
              uint64_t v84 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v84 = 0;
              _os_log_impl(&dword_25AB11000, v81, v82, "Deferred - queued", v84, 2u);
              long long v85 = v84;
              uint64_t v67 = v98;
              MEMORY[0x261151C20](v85, -1, -1);
            }

            (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v67, v38);
            uint64_t v70 = v95;
            uint64_t v71 = v94;
          }
          sub_25AB4A328();
          os_log_type_t v87 = v96;
          uint64_t v86 = v97;
          (*(void (**)(char *, void, uint64_t))(v97 + 104))(v96, *MEMORY[0x263F8F080], v74);
          long long v88 = (void *)sub_25AC35350();
          (*(void (**)(char *, uint64_t))(v86 + 8))(v87, v74);
          sub_25AC34CB0();
          MEMORY[0x261150860](v73, 0.5);
          uint64_t v89 = *(void (**)(char *, uint64_t))(v71 + 8);
          v89(v73, v70);
          sub_25AC35310();
          swift_release();

          v89(v72, v70);
          return;
        }
        uint64_t v58 = v100;
        sub_25AB150E0(v46, v100);
        unsigned int v59 = v109((char *)v58, 1, v38);
        uint64_t v60 = v108;
        if (v59 != 1)
        {
          uint64_t v75 = sub_25AC345C0();
          os_log_type_t v76 = sub_25AC352D0();
          if (os_log_type_enabled(v75, v76))
          {
            id v77 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v77 = 0;
            _os_log_impl(&dword_25AB11000, v75, v76, "Deferred - was not queued since already cancelled or ui is not visible", v77, 2u);
            MEMORY[0x261151C20](v77, -1, -1);
          }

          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v58, v38);
          return;
        }
        swift_release();
        uint64_t v61 = v58;
      }
      else
      {
        uint64_t v66 = v99;
        sub_25AB150E0(v46, v99);
        if (v109((char *)v66, 1, v38) != 1)
        {
          id v78 = sub_25AC345C0();
          os_log_type_t v79 = sub_25AC352C0();
          if (os_log_type_enabled(v78, v79))
          {
            os_log_type_t v80 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)os_log_type_t v80 = 0;
            _os_log_impl(&dword_25AB11000, v78, v79, "ui already closed, no deferred clean up needed", v80, 2u);
            MEMORY[0x261151C20](v80, -1, -1);
          }

          (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v66, v38);
          return;
        }
        uint64_t v61 = v66;
      }
      sub_25AB15148(v61);
      return;
    }
  }
  uint64_t v33 = v108;
  if (qword_26A49F7D8 != -1) {
    swift_once();
  }
  uint64_t v34 = __swift_project_value_buffer(v10, (uint64_t)qword_26A4A1C70);
  sub_25AB150E0(v34, (uint64_t)v24);
  uint64_t v35 = v30;
  if (v109(v24, 1, v30) == 1)
  {
    sub_25AB15148((uint64_t)v24);
  }
  else
  {
    os_log_t v41 = sub_25AC345C0();
    os_log_type_t v42 = sub_25AC352C0();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl(&dword_25AB11000, v41, v42, "ui invalidated and cannot be presented, cleaning up transaction.", v43, 2u);
      MEMORY[0x261151C20](v43, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v35);
  }
  uint64_t v44 = MEMORY[0x261151D10](v107 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate);
  if (v44)
  {
LABEL_24:
    uint64_t v45 = (void *)v44;
    sub_25ABBBF8C(v104, v105);
  }
}

void sub_25ABA0148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1 + 16;
  if (qword_26A49F7D8 != -1) {
    swift_once();
  }
  uint64_t v10 = __swift_project_value_buffer(v6, (uint64_t)qword_26A4A1C70);
  sub_25AB150E0(v10, (uint64_t)v8);
  uint64_t v11 = sub_25AC345E0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11) == 1)
  {
    sub_25AB15148((uint64_t)v8);
  }
  else
  {
    uint64_t v13 = sub_25AC345C0();
    os_log_type_t v14 = sub_25AC352C0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_25AB11000, v13, v14, "Deferred - triggered - tap ui ended abruptly with no finish", v15, 2u);
      MEMORY[0x261151C20](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v11);
  }
  swift_beginAccess();
  uint64_t v16 = MEMORY[0x261151D10](v9);
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    uint64_t v18 = (void *)MEMORY[0x261151D10](v16 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate);

    if (v18)
    {
      sub_25ABBBF8C(a2, a3);
    }
  }
}

uint64_t sub_25ABA0374()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F7D8 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1C70);
  sub_25AB150E0(v5, (uint64_t)v4);
  uint64_t v6 = sub_25AC345E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = &unk_26A4A0000;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_25AB15148((uint64_t)v4);
  }
  else
  {
    uint64_t v9 = v1;
    uint64_t v10 = sub_25AC345C0();
    os_log_type_t v11 = sub_25AC352D0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v23 = v13;
      uint64_t v22 = v12;
      *(_DWORD *)uint64_t v12 = 136315138;
      uint64_t v14 = *(void *)&v9[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_deferredWork];
      uint64_t v25 = v13;
      if (v14) {
        uint64_t v15 = 0x29286C65636E6163;
      }
      else {
        uint64_t v15 = 7104878;
      }
      if (v14) {
        unint64_t v16 = 0xE800000000000000;
      }
      else {
        unint64_t v16 = 0xE300000000000000;
      }
      uint64_t v24 = sub_25AB56574(v15, v16, &v25);
      sub_25AC354A0();

      uint64_t v8 = (void *)&unk_26A4A0000;
      swift_bridgeObjectRelease();
      os_log_type_t v17 = v11;
      uint64_t v18 = v22;
      _os_log_impl(&dword_25AB11000, v10, v17, "DeferredCleanup - %s", v22, 0xCu);
      uint64_t v19 = v23;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v19, -1, -1);
      MEMORY[0x261151C20](v18, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  uint64_t v20 = v8[452];
  if (*(void *)&v1[v20])
  {
    swift_retain();
    sub_25AC34CF0();
    swift_release();
  }
  *(void *)&v1[v20] = 0;
  return swift_release();
}

id sub_25ABA0660()
{
  *(void *)&v0[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection] = 0;
  *(void *)&v0[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_transactionUI] = 0;
  *(void *)&v0[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_regUI] = 0;
  *(void *)&v0[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_identityUI] = 0;
  *(void *)&v0[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_identityRegistrationUI] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isTapUIVisible] = 0;
  v0[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_substatePINLoaded] = 0;
  v0[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isPINUIVisible] = 0;
  v0[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isRegUIVisible] = 0;
  v0[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isIdentityUIVisible] = 0;
  *(void *)&v0[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_deferredWork] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_invalidationHandler];
  uint64_t v2 = (objc_class *)type metadata accessor for UIManager();
  *uint64_t v1 = 0;
  v1[1] = 0;
  v4.receiver = v0;
  v4.super_class = v2;
  return objc_msgSendSuper2(&v4, sel_init);
}

id sub_25ABA077C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UIManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for UIManager()
{
  return self;
}

id sub_25ABA099C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F7E8 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_project_value_buffer(v4, (uint64_t)qword_26A4A1CA0);
  sub_25AB150E0(v7, (uint64_t)v6);
  uint64_t v8 = sub_25AC345E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_25AB15148((uint64_t)v6);
  }
  else
  {
    uint64_t v10 = sub_25AC345C0();
    os_log_type_t v11 = sub_25AC352D0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_25AB11000, v10, v11, "UI Manager - requiresCardPIN requested", v12, 2u);
      MEMORY[0x261151C20](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  id result = *(id *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_transactionUI);
  if (result) {
    return objc_msgSend(result, sel_requiresCardPIN_, a1);
  }
  return result;
}

void sub_25ABA0C3C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v32 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v32 - v9;
  if (qword_26A49F7E8 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1CA0);
  sub_25AB150E0(v11, (uint64_t)v10);
  uint64_t v12 = sub_25AC345E0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(void, void, void))(v13 + 48);
  if (v14(v10, 1, v12) == 1)
  {
    sub_25AB15148((uint64_t)v10);
  }
  else
  {
    uint64_t v33 = v11;
    uint64_t v34 = v14;
    uint64_t v15 = sub_25AC345C0();
    os_log_type_t v16 = sub_25AC352D0();
    if (os_log_type_enabled(v15, v16))
    {
      os_log_type_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = v13;
      uint64_t v18 = v5;
      uint64_t v19 = v17;
      *(_WORD *)os_log_type_t v17 = 0;
      _os_log_impl(&dword_25AB11000, v15, v16, "TapUI has presented successfully", v17, 2u);
      uint64_t v20 = v19;
      uint64_t v5 = v18;
      uint64_t v13 = v32;
      MEMORY[0x261151C20](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    uint64_t v11 = v33;
    uint64_t v14 = v34;
  }
  if (*(void *)&v1[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_deferredWork])
  {
    if (qword_26A49F820 != -1) {
      swift_once();
    }
    uint64_t v21 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1D48);
    sub_25AB150E0(v21, (uint64_t)v8);
    if (v14(v8, 1, v12) == 1)
    {
      sub_25AB15148((uint64_t)v8);
    }
    else
    {
      uint64_t v22 = sub_25AC345C0();
      os_log_type_t v23 = sub_25AC352D0();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        uint64_t v34 = v14;
        uint64_t v25 = v24;
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl(&dword_25AB11000, v22, v23, "Scene request deferred work canceled", v24, 2u);
        uint64_t v26 = v25;
        uint64_t v14 = v34;
        MEMORY[0x261151C20](v26, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
    }
    sub_25ABA0374();
  }
  v1[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isTapUIVisible] = 1;
  uint64_t v27 = *(void **)&v1[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection];
  if (!v27) {
    goto LABEL_22;
  }
  id v28 = v27;
  sub_25AB37354(v28, (uint64_t)v35);
  sub_25ABA69E0((uint64_t)v35);
  if (v35[83])
  {

LABEL_22:
    id v28 = (id)MEMORY[0x261151D10](&v1[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate]);
    objc_msgSend(v28, sel_tapUIDidLoad);
    goto LABEL_27;
  }
  sub_25AB150E0(v11, (uint64_t)v5);
  if (v14(v5, 1, v12) == 1)
  {
    sub_25AB15148((uint64_t)v5);
  }
  else
  {
    uint64_t v29 = sub_25AC345C0();
    os_log_type_t v30 = sub_25AC352C0();
    if (os_log_type_enabled(v29, v30))
    {
      char v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v31 = 0;
      _os_log_impl(&dword_25AB11000, v29, v30, "daemon | Invalid entitlement, closing UI", v31, 2u);
      MEMORY[0x261151C20](v31, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v5, v12);
  }
  objc_msgSend(v1, sel_closeUIImmediate);
LABEL_27:
}

void sub_25ABA116C(const char *a1, SEL *a2)
{
  uint64_t v5 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F7E8 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v6, (uint64_t)qword_26A4A1CA0);
  sub_25AB150E0(v9, (uint64_t)v8);
  uint64_t v10 = sub_25AC345E0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_25AB15148((uint64_t)v8);
  }
  else
  {
    uint64_t v12 = sub_25AC345C0();
    os_log_type_t v13 = sub_25AC352D0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_25AB11000, v12, v13, a1, v14, 2u);
      MEMORY[0x261151C20](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
  uint64_t v15 = (void *)MEMORY[0x261151D10](v5 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate);
  [v15 *a2];
}

uint64_t sub_25ABA13B8(char a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F7E8 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v6, (uint64_t)qword_26A4A1CA0);
  sub_25AB150E0(v9, (uint64_t)v8);
  uint64_t v10 = sub_25AC345E0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_25AB15148((uint64_t)v8);
  }
  else
  {
    uint64_t v12 = sub_25AC345C0();
    os_log_type_t v13 = sub_25AC352D0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_25AB11000, v12, v13, "daemon | tapUIFinished", v14, 2u);
      MEMORY[0x261151C20](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
  uint64_t v15 = (void *)MEMORY[0x261151D10](v3 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate);
  if (v15)
  {
    uint64_t v16 = v15;
    objc_msgSend(v15, sel_tapUIFinishedWithExpected_issuerPIN_, a1 & 1, a2 & 1);
  }
  uint64_t v17 = OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection;
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection), sel_invalidate);
  uint64_t v18 = *(void **)(v3 + v17);
  *(void *)(v3 + v17) = 0;

  *(unsigned char *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isTapUIVisible) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isPINUIVisible) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_substatePINLoaded) = 0;
  return sub_25ABA0374();
}

uint64_t sub_25ABA17D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F7F0 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1CB8);
  sub_25AB150E0(v5, (uint64_t)v4);
  uint64_t v6 = sub_25AC345E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    uint64_t result = sub_25AB15148((uint64_t)v4);
  }
  else
  {
    uint64_t v9 = sub_25AC345C0();
    os_log_type_t v10 = sub_25AC352D0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_25AB11000, v9, v10, "daemon | pinUIDidLoad", v11, 2u);
      MEMORY[0x261151C20](v11, -1, -1);
    }

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  *(unsigned char *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_substatePINLoaded) = 1;
  return result;
}

void sub_25ABA1A9C(uint64_t a1, int a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v29 = a5;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F7F0 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v10, (uint64_t)qword_26A4A1CB8);
  sub_25AB150E0(v13, (uint64_t)v12);
  uint64_t v14 = sub_25AC345E0();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) == 1)
  {
    sub_25AB15148((uint64_t)v12);
  }
  else
  {
    uint64_t v28 = v5;
    uint64_t v16 = sub_25AC345C0();
    os_log_type_t v17 = sub_25AC352D0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      int v27 = a2;
      char v19 = a3;
      uint64_t v20 = a1;
      uint64_t v21 = a4;
      uint64_t v22 = v18;
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_25AB11000, v16, v17, "daemon | reportPINError", v18, 2u);
      os_log_type_t v23 = v22;
      a4 = v21;
      a1 = v20;
      a3 = v19;
      LOBYTE(a2) = v27;
      MEMORY[0x261151C20](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    uint64_t v5 = v28;
  }
  uint64_t v24 = (void *)MEMORY[0x261151D10](v5 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate);
  if (v24)
  {
    uint64_t v25 = v24;
    objc_msgSend(v24, sel_reportPINErrorWithError_isCardRequest_isAccessibilityEnabled_accessibilityEntryType_drawNumberFailures_, a1, a2 & 1, a3 & 1, a4, v29);
  }
}

void sub_25ABA1D80(char *a1, uint64_t a2, SEL *a3)
{
  id v6 = (id)MEMORY[0x261151D10](&a1[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate]);
  uint64_t v5 = a1;
  [v6 *a3];
}

uint64_t sub_25ABA1F60(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  int v30 = a3;
  uint64_t v31 = a2;
  uint64_t v29 = a1;
  uint64_t v5 = sub_25AC32E80();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25AC328E0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AC327A0();
  sub_25AC32870();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v4[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isRegUIVisible] = 1;
  id v13 = objc_msgSend(self, sel_anonymousListener);
  if (qword_26A49F878 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_26A4A0C10;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v4;
  id v16 = v13;
  os_log_type_t v17 = v4;
  objc_msgSend(v16, sel_setDelegate_, v14);
  objc_msgSend(v16, sel_resume);
  uint64_t v18 = (void **)(v14 + OBJC_IVAR____TtC21ProximityReaderDaemon6Daemon_temporaryListeners);
  swift_beginAccess();
  char v19 = *v18;
  id v20 = v16;
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v18 = v19;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    char v19 = sub_25AB910A4(0, v19[2] + 1, 1, v19);
    *uint64_t v18 = v19;
  }
  unint64_t v23 = v19[2];
  unint64_t v22 = v19[3];
  if (v23 >= v22 >> 1)
  {
    char v19 = sub_25AB910A4((void *)(v22 > 1), v23 + 1, 1, v19);
    *uint64_t v18 = v19;
  }
  void v19[2] = v23 + 1;
  uint64_t v24 = &v19[3 * v23];
  v24[4] = v20;
  void v24[5] = sub_25ABA6910;
  v24[6] = v15;
  swift_endAccess();
  swift_release();

  id v25 = objc_msgSend(v20, sel_endpoint);
  uint64_t v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  if (qword_26A49F888 != -1) {
    swift_once();
  }
  uint64_t v27 = v31;
  *(void *)uint64_t v8 = v29;
  *((void *)v8 + 1) = v27;
  unsigned char v8[16] = v30 & 1;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F15438], v5);
  swift_bridgeObjectRetain();
  sub_25ABA754C((uint64_t)v8, v25, (uint64_t)sub_25ABA6934, v26);

  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_25ABA2364(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F7F8 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_project_value_buffer(v4, (uint64_t)qword_26A4A1CD0);
  sub_25AB150E0(v7, (uint64_t)v6);
  uint64_t v8 = sub_25AC345E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_25AB15148((uint64_t)v6);
  }
  else
  {
    uint64_t v10 = sub_25AC345C0();
    os_log_type_t v11 = sub_25AC352B0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_25AB11000, v10, v11, "daemon | configureConnection", v12, 2u);
      MEMORY[0x261151C20](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  id v13 = self;
  id v14 = objc_msgSend(v13, sel_interfaceWithProtocol_, &unk_27088F2E0);
  objc_msgSend(a1, sel_setExportedInterface_, v14);

  objc_msgSend(a1, sel_setExportedObject_, v2);
  id v15 = objc_msgSend(v13, sel_interfaceWithProtocol_, &unk_27088F3F8);
  objc_msgSend(a1, sel_setRemoteObjectInterface_, v15);

  aBlock[4] = sub_25ABA3464;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25AB9E088;
  aBlock[3] = &block_descriptor_73;
  id v16 = _Block_copy(aBlock);
  id v17 = objc_msgSend(a1, sel_remoteObjectProxyWithErrorHandler_, v16);
  _Block_release(v16);
  sub_25AC35500();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0E48);
  int v18 = swift_dynamicCast();
  uint64_t v19 = v22[1];
  if (!v18) {
    uint64_t v19 = 0;
  }
  *(void *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_regUI) = v19;
  swift_unknownObjectRelease();
  objc_msgSend(a1, sel_resume);
  id v20 = *(void **)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection);
  *(void *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection) = a1;
  id v21 = a1;
}

void sub_25ABA26DC(int a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x261151D10](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    sub_25ABA2774(a1);
  }
  swift_beginAccess();
  uint64_t v6 = (unsigned char *)MEMORY[0x261151D10](v3);
  if (v6)
  {
    v6[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isRegUIVisible] = 0;
  }
}

void sub_25ABA2774(int a1)
{
  uint64_t v2 = v1;
  int v94 = a1;
  uint64_t v3 = sub_25AC34CC0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  long long v81 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  os_log_type_t v82 = (char *)&v79 - v7;
  uint64_t v8 = sub_25AC34C70();
  uint64_t v85 = *(void *)(v8 - 8);
  uint64_t v86 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v84 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_25AC34C60();
  MEMORY[0x270FA5388](v90);
  uint64_t v91 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v89 = (uint64_t)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v87 = (uint64_t)&v79 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v92 = (uint64_t)&v79 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v83 = (uint64_t)&v79 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v88 = (uint64_t)&v79 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v79 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v27 = (char *)&v79 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v79 - v28;
  if (qword_26A49F7D8 != -1) {
    swift_once();
  }
  uint64_t v95 = __swift_project_value_buffer(v11, (uint64_t)qword_26A4A1C70);
  sub_25AB150E0(v95, (uint64_t)v29);
  uint64_t v30 = sub_25AC345E0();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  uint64_t v93 = v31 + 48;
  os_log_type_t v96 = v32;
  if (v32(v29, 1, v30) == 1)
  {
    sub_25AB15148((uint64_t)v29);
  }
  else
  {
    sub_25AB464DC(v2, 0xD00000000000001ALL, 0x800000025AC40670, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v30);
  }
  if ((_BYTE)v94)
  {
    uint64_t v33 = v2;
    if (v94 == 1)
    {
      uint64_t v34 = v31;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    uint64_t v80 = v4;
    uint64_t v35 = v3;
    uint64_t v34 = v31;
    uint64_t v36 = v30;
  }
  else
  {
    uint64_t v80 = v4;
    uint64_t v35 = v3;
    uint64_t v33 = v2;
    uint64_t v34 = v31;
    uint64_t v36 = v30;
  }
  char v37 = sub_25AC35870();
  swift_bridgeObjectRelease();
  uint64_t v30 = v36;
  if (v37)
  {
LABEL_12:
    sub_25AB150E0(v95, (uint64_t)v27);
    if (v96(v27, 1, v30) == 1)
    {
      sub_25AB15148((uint64_t)v27);
    }
    else
    {
      uint64_t v43 = sub_25AC345C0();
      os_log_type_t v44 = sub_25AC352C0();
      if (os_log_type_enabled(v43, v44))
      {
        uint64_t v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v45 = 0;
        _os_log_impl(&dword_25AB11000, v43, v44, "reg ui invalidated and cannot be presented, cleaning up transaction.", v45, 2u);
        MEMORY[0x261151C20](v45, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v30);
    }
    uint64_t v46 = MEMORY[0x261151D10](v33 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate);
    if (v46)
    {
      uint64_t v47 = (void *)v46;
      sub_25AB150E0(v95, (uint64_t)v24);
      if (v96(v24, 1, v30) != 1)
      {
        sub_25AB464DC((uint64_t)v47, 0xD000000000000012, 0x800000025AC40650, 0, 0xE000000000000000);
        (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v30);
        goto LABEL_26;
      }
      uint64_t v48 = (uint64_t)v24;
LABEL_24:
      sub_25AB15148(v48);
LABEL_26:
      sub_25ABBEDB4(2u, 0);

      return;
    }
    return;
  }
  if (!(_BYTE)v94)
  {
    swift_bridgeObjectRelease();
    uint64_t v38 = v34;
    uint64_t v40 = v33;
    uint64_t v41 = v35;
    goto LABEL_29;
  }
  uint64_t v38 = v34;
  char v39 = sub_25AC35870();
  swift_bridgeObjectRelease();
  uint64_t v40 = v33;
  uint64_t v41 = v35;
  if (v39)
  {
LABEL_29:
    uint64_t v49 = v92;
    sub_25AB150E0(v95, v92);
    if (v96((char *)v49, 1, v30) == 1)
    {
      sub_25AB15148(v49);
    }
    else
    {
      uint64_t v50 = sub_25AC345C0();
      os_log_type_t v51 = sub_25AC352C0();
      if (os_log_type_enabled(v50, v51))
      {
        uint64_t v52 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v52 = 0;
        _os_log_impl(&dword_25AB11000, v50, v51, "reg ui invalidated normally with .handleRequested event", v52, 2u);
        MEMORY[0x261151C20](v52, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v49, v30);
    }
    if (*(unsigned char *)(v40 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isRegUIVisible) == 1)
    {
      uint64_t v53 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_25ABA693C;
      aBlock[5] = v53;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_25AB72188;
      aBlock[3] = &block_descriptor_70;
      _Block_copy(aBlock);
      uint64_t v97 = MEMORY[0x263F8EE78];
      sub_25AB74CC0();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0460);
      sub_25ABA6944();
      sub_25AC35510();
      sub_25AC34D00();
      swift_allocObject();
      uint64_t v54 = sub_25AC34CE0();
      swift_release();
      swift_release();
      uint64_t v55 = OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_deferredWork;
      *(void *)(v40 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_deferredWork) = v54;
      swift_release();
      if (*(void *)(v40 + v55))
      {
        uint64_t v56 = v87;
        sub_25AB150E0(v95, v87);
        unsigned int v57 = v96((char *)v56, 1, v30);
        swift_retain();
        if (v57 == 1)
        {
          sub_25AB15148(v56);
          uint64_t v58 = v82;
          unsigned int v59 = v81;
        }
        else
        {
          uint64_t v69 = sub_25AC345C0();
          os_log_type_t v70 = sub_25AC352D0();
          BOOL v71 = os_log_type_enabled(v69, v70);
          unsigned int v59 = v81;
          if (v71)
          {
            os_log_type_t v72 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)os_log_type_t v72 = 0;
            _os_log_impl(&dword_25AB11000, v69, v70, "Deferred - queued", v72, 2u);
            long long v73 = v72;
            uint64_t v56 = v87;
            MEMORY[0x261151C20](v73, -1, -1);
          }

          (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v56, v30);
          uint64_t v58 = v82;
        }
        sub_25AB4A328();
        uint64_t v75 = v84;
        uint64_t v74 = v85;
        uint64_t v76 = v86;
        (*(void (**)(char *, void, uint64_t))(v85 + 104))(v84, *MEMORY[0x263F8F080], v86);
        id v77 = (void *)sub_25AC35350();
        (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v76);
        sub_25AC34CB0();
        MEMORY[0x261150860](v59, 0.5);
        id v78 = *(void (**)(char *, uint64_t))(v80 + 8);
        v78(v59, v41);
        sub_25AC35310();
        swift_release();

        v78(v58, v41);
      }
    }
    else
    {
      uint64_t v60 = v89;
      sub_25AB150E0(v95, v89);
      if (v96((char *)v60, 1, v30) == 1)
      {
        sub_25AB15148(v60);
      }
      else
      {
        uint64_t v66 = sub_25AC345C0();
        os_log_type_t v67 = sub_25AC352C0();
        if (os_log_type_enabled(v66, v67))
        {
          unsigned int v68 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unsigned int v68 = 0;
          _os_log_impl(&dword_25AB11000, v66, v67, "reg ui already closed, no deferred clean up needed", v68, 2u);
          MEMORY[0x261151C20](v68, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v60, v30);
      }
    }
    return;
  }
  uint64_t v42 = v88;
  sub_25AB150E0(v95, v88);
  if (v96((char *)v42, 1, v30) == 1)
  {
    sub_25AB15148(v42);
  }
  else
  {
    uint64_t v61 = sub_25AC345C0();
    os_log_type_t v62 = sub_25AC352C0();
    if (os_log_type_enabled(v61, v62))
    {
      os_log_type_t v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v63 = 0;
      _os_log_impl(&dword_25AB11000, v61, v62, "reg ui invalidated with non-handleRequested unexpected SB error", v63, 2u);
      MEMORY[0x261151C20](v63, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v42, v30);
  }
  sub_25ABA0374();
  uint64_t v64 = MEMORY[0x261151D10](v40 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate);
  if (v64)
  {
    uint64_t v47 = (void *)v64;
    uint64_t v65 = v83;
    sub_25AB150E0(v95, v83);
    if (v96((char *)v65, 1, v30) != 1)
    {
      sub_25AB464DC((uint64_t)v47, 0xD000000000000012, 0x800000025AC40650, 0, 0xE000000000000000);
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v65, v30);
      goto LABEL_26;
    }
    uint64_t v48 = v65;
    goto LABEL_24;
  }
}

uint64_t sub_25ABA3464(void *a1)
{
  return sub_25ABA5D4C(a1, &qword_26A49F7F8, (uint64_t)qword_26A4A1CD0, "Connection with RegUI invalidated with error: %{public}s");
}

void sub_25ABA3490(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = a1 + 16;
  if (qword_26A49F7D8 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1C70);
  sub_25AB150E0(v9, (uint64_t)v7);
  uint64_t v10 = sub_25AC345E0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v7, 1, v10) == 1)
  {
    sub_25AB15148((uint64_t)v7);
  }
  else
  {
    uint64_t v13 = sub_25AC345C0();
    os_log_type_t v14 = sub_25AC352C0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = v5;
      uint64_t v16 = v15;
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_25AB11000, v13, v14, "Deferred - triggered - reg ui ended abruptly with no finish", v15, 2u);
      uint64_t v17 = v16;
      uint64_t v5 = v21;
      MEMORY[0x261151C20](v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
  }
  swift_beginAccess();
  uint64_t v18 = MEMORY[0x261151D10](v8);
  if (v18)
  {
    uint64_t v19 = (void *)v18;
    uint64_t v20 = (void *)MEMORY[0x261151D10](v18 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate);

    if (v20)
    {
      sub_25AB150E0(v9, (uint64_t)v5);
      if (v12(v5, 1, v10) == 1)
      {
        sub_25AB15148((uint64_t)v5);
      }
      else
      {
        sub_25AB464DC((uint64_t)v20, 0xD000000000000012, 0x800000025AC40650, 0, 0xE000000000000000);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v5, v10);
      }
      sub_25ABBEDB4(2u, 0);
    }
  }
}

void sub_25ABA3764(uint64_t a1, unint64_t a2)
{
  uint64_t v45 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v43 = (uint64_t)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v44 = (uint64_t)v39 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v39 - v9;
  if (qword_26A49F7F8 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v4, (uint64_t)qword_26A4A1CD0);
  sub_25AB150E0(v11, (uint64_t)v10);
  uint64_t v12 = sub_25AC345E0();
  uint64_t v13 = *(void *)(v12 - 8);
  os_log_type_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v10, 1, v12) == 1)
  {
    sub_25AB15148((uint64_t)v10);
  }
  else
  {
    uint64_t v42 = v2;
    swift_bridgeObjectRetain_n();
    uint64_t v15 = sub_25AC345C0();
    os_log_type_t v16 = sub_25AC352D0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v41 = v13;
      uint64_t v18 = (uint8_t *)v17;
      uint64_t v40 = swift_slowAlloc();
      uint64_t v47 = v40;
      *(_DWORD *)uint64_t v18 = 136315138;
      v39[1] = v18 + 4;
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_25AB56574(v45, a2, &v47);
      sub_25AC354A0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25AB11000, v15, v16, "daemon | notifyRegUIResult - %s", v18, 0xCu);
      uint64_t v19 = v40;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v19, -1, -1);
      uint64_t v20 = v18;
      uint64_t v13 = v41;
      MEMORY[0x261151C20](v20, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v2 = v42;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  uint64_t v21 = OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_regUI;
  uint64_t v22 = *(void **)&v2[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_regUI];
  if (v22)
  {
    uint64_t v23 = v44;
    sub_25AB150E0(v11, v44);
    unsigned int v24 = v14((char *)v23, 1, v12);
    swift_unknownObjectRetain();
    if (v24 == 1)
    {
      sub_25AB15148(v23);
    }
    else
    {
      uint64_t v28 = sub_25AC345C0();
      os_log_type_t v29 = sub_25AC352D0();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = v13;
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v31 = 0;
        _os_log_impl(&dword_25AB11000, v28, v29, "daemon | regui.notifyRegUIResult", v31, 2u);
        uint64_t v32 = v31;
        uint64_t v13 = v30;
        MEMORY[0x261151C20](v32, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v23, v12);
    }
    uint64_t v33 = (void *)sub_25AC34E10();
    objc_msgSend(v22, sel_notifyRegUIResultWithResult_, v33);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v25 = v2;
    uint64_t v26 = v11;
    uint64_t v27 = v43;
    sub_25AB150E0(v26, v43);
    if (v14((char *)v27, 1, v12) == 1)
    {
      sub_25AB15148(v27);
    }
    else
    {
      uint64_t v34 = v13;
      uint64_t v35 = v2;
      uint64_t v36 = sub_25AC345C0();
      os_log_type_t v37 = sub_25AC352D0();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v38 = 67109120;
        LODWORD(v47) = *(void *)&v25[v21] != 0;
        sub_25AC354A0();

        _os_log_impl(&dword_25AB11000, v36, v37, "daemon | optional failed - %{BOOL}d", v38, 8u);
        MEMORY[0x261151C20](v38, -1, -1);
      }
      else
      {
      }
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v27, v12);
    }
  }
}

uint64_t sub_25ABA3D5C(uint64_t a1, unint64_t a2, SEL *a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t result = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void **)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_regUI);
  if (v11)
  {
    uint64_t v12 = qword_26A49F7F8;
    swift_unknownObjectRetain();
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v13 = __swift_project_value_buffer(v7, (uint64_t)qword_26A4A1CD0);
    sub_25AB150E0(v13, (uint64_t)v10);
    uint64_t v14 = sub_25AC345E0();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14) == 1)
    {
      sub_25AB15148((uint64_t)v10);
    }
    else
    {
      uint64_t v21 = a1;
      os_log_type_t v16 = sub_25AC345C0();
      os_log_type_t v17 = sub_25AC352D0();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v20 = a3;
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        uint64_t v19 = swift_slowAlloc();
        uint64_t v23 = v19;
        *(_DWORD *)uint64_t v18 = 136315138;
        uint64_t v22 = sub_25AB56574(v21, a2, &v23);
        a3 = v20;
        sub_25AC354A0();
        _os_log_impl(&dword_25AB11000, v16, v17, "daemon - %s", v18, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x261151C20](v19, -1, -1);
        MEMORY[0x261151C20](v18, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v14);
    }
    [v11 *a3];
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_25ABA4054()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v38 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v38 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v38 - v12;
  if (qword_26A49F7F8 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1CD0);
  sub_25AB150E0(v14, (uint64_t)v13);
  uint64_t v15 = sub_25AC345E0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v40(v13, 1, v15) == 1)
  {
    sub_25AB15148((uint64_t)v13);
  }
  else
  {
    char v39 = v5;
    uint64_t v17 = v16;
    uint64_t v18 = sub_25AC345C0();
    os_log_type_t v19 = sub_25AC352D0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = v15;
      uint64_t v21 = v11;
      uint64_t v22 = v1;
      uint64_t v23 = v20;
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_25AB11000, v18, v19, "daemon | regUIDidLoad", v20, 2u);
      unsigned int v24 = v23;
      uint64_t v1 = v22;
      uint64_t v11 = v21;
      uint64_t v15 = v38;
      MEMORY[0x261151C20](v24, -1, -1);
    }

    uint64_t v16 = v17;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v13, v15);
    uint64_t v5 = v39;
  }
  v1[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isRegUIVisible] = 1;
  uint64_t v25 = *(void **)&v1[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection];
  if (v25)
  {
    id v26 = v25;
    sub_25AB37354(v26, (uint64_t)v41);
    sub_25ABA69E0((uint64_t)v41);
    if ((v41[84] & 1) == 0)
    {
      if (qword_26A49F7C8 != -1) {
        swift_once();
      }
      uint64_t v27 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1C40);
      sub_25AB150E0(v27, (uint64_t)v11);
      if (v40(v11, 1, v15) == 1)
      {
        sub_25AB15148((uint64_t)v11);
      }
      else
      {
        uint64_t v32 = sub_25AC345C0();
        os_log_type_t v33 = sub_25AC352D0();
        if (os_log_type_enabled(v32, v33))
        {
          uint64_t v34 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v34 = 0;
          _os_log_impl(&dword_25AB11000, v32, v33, "Invalid entitlement, closing UI", v34, 2u);
          MEMORY[0x261151C20](v34, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v15);
      }
      objc_msgSend(v1, sel_closeUIImmediate);

      return;
    }
  }
  uint64_t v28 = MEMORY[0x261151D10](&v1[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate]);
  if (v28)
  {
    os_log_type_t v29 = (void *)v28;
    if (qword_26A49F7D8 != -1) {
      swift_once();
    }
    uint64_t v30 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1C70);
    sub_25AB150E0(v30, (uint64_t)v8);
    if (v40(v8, 1, v15) == 1)
    {
      sub_25AB15148((uint64_t)v8);
    }
    else
    {
      sub_25AB464DC((uint64_t)v29, 0x6469444955676572, 0xEE00292864616F4CLL, 0, 0xE000000000000000);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v15);
    }
  }
  else
  {
    if (qword_26A49F7C8 != -1) {
      swift_once();
    }
    uint64_t v31 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1C40);
    sub_25AB150E0(v31, (uint64_t)v5);
    if (v40(v5, 1, v15) == 1)
    {
      sub_25AB15148((uint64_t)v5);
    }
    else
    {
      uint64_t v35 = sub_25AC345C0();
      os_log_type_t v36 = sub_25AC352D0();
      if (os_log_type_enabled(v35, v36))
      {
        os_log_type_t v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v37 = 0;
        _os_log_impl(&dword_25AB11000, v35, v36, "No delegate to notify about RegUI load, closing UI", v37, 2u);
        MEMORY[0x261151C20](v37, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v15);
    }
    objc_msgSend(v1, sel_closeUIImmediate);
  }
}

void sub_25ABA4650(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F7F8 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_project_value_buffer(v4, (uint64_t)qword_26A4A1CD0);
  sub_25AB150E0(v7, (uint64_t)v6);
  uint64_t v8 = sub_25AC345E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_25AB15148((uint64_t)v6);
  }
  else
  {
    uint64_t v10 = sub_25AC345C0();
    os_log_type_t v11 = sub_25AC352D0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_25AB11000, v10, v11, "daemon | regUIAccount", v12, 2u);
      MEMORY[0x261151C20](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  uint64_t v13 = MEMORY[0x261151D10](v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate);
  if (v13)
  {
    uint64_t v14 = (void *)v13;
    sub_25ABBC58C(a1);
  }
}

void sub_25ABA48A4(char a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F7F8 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v6, (uint64_t)qword_26A4A1CD0);
  sub_25AB150E0(v9, (uint64_t)v8);
  uint64_t v10 = sub_25AC345E0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_25AB15148((uint64_t)v8);
  }
  else
  {
    uint64_t v12 = sub_25AC345C0();
    os_log_type_t v13 = sub_25AC352D0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_25AB11000, v12, v13, "daemon | regUIFinished", v14, 2u);
      MEMORY[0x261151C20](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
  *(unsigned char *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isRegUIVisible) = 0;
  sub_25ABA0374();
  uint64_t v15 = MEMORY[0x261151D10](v3 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate);
  if (v15)
  {
    uint64_t v16 = (void *)v15;
    sub_25ABBC964(a1 & 1, a2 & 1);
  }
  uint64_t v17 = OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection;
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection), sel_invalidate);
  uint64_t v18 = *(void **)(v3 + v17);
  *(void *)(v3 + v17) = 0;
}

void sub_25ABA4B34()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F7F8 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1CD0);
  sub_25AB150E0(v5, (uint64_t)v4);
  uint64_t v6 = sub_25AC345E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_25AB15148((uint64_t)v4);
  }
  else
  {
    uint64_t v8 = sub_25AC345C0();
    os_log_type_t v9 = sub_25AC352D0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_25AB11000, v8, v9, "daemon | updateAccountSubscription", v10, 2u);
      MEMORY[0x261151C20](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  uint64_t v11 = MEMORY[0x261151D10](v1 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate);
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    sub_25ABBCBFC();
  }
}

uint64_t sub_25ABA4D60(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F840 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_project_value_buffer(v4, (uint64_t)qword_26A4A1DA8);
  sub_25AB150E0(v7, (uint64_t)v6);
  uint64_t v8 = sub_25AC345E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_25AB15148((uint64_t)v6);
  }
  else
  {
    uint64_t v10 = sub_25AC345C0();
    os_log_type_t v11 = sub_25AC352B0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_25AB11000, v10, v11, "Asking to present Identity UI", v12, 2u);
      MEMORY[0x261151C20](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  v2[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isIdentityUIVisible] = 1;
  id v13 = objc_msgSend(self, sel_anonymousListener);
  if (qword_26A49F878 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_26A4A0C10;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v2;
  id v16 = v13;
  uint64_t v17 = v2;
  objc_msgSend(v16, sel_setDelegate_, v14);
  objc_msgSend(v16, sel_resume);
  uint64_t v18 = (void **)(v14 + OBJC_IVAR____TtC21ProximityReaderDaemon6Daemon_temporaryListeners);
  swift_beginAccess();
  uint64_t v19 = *v18;
  id v20 = v16;
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v18 = v19;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v19 = sub_25AB910A4(0, v19[2] + 1, 1, v19);
    *uint64_t v18 = v19;
  }
  unint64_t v23 = v19[2];
  unint64_t v22 = v19[3];
  if (v23 >= v22 >> 1)
  {
    uint64_t v19 = sub_25AB910A4((void *)(v22 > 1), v23 + 1, 1, v19);
    *uint64_t v18 = v19;
  }
  void v19[2] = v23 + 1;
  unsigned int v24 = &v19[3 * v23];
  v24[4] = v20;
  void v24[5] = sub_25ABA6868;
  v24[6] = v15;
  swift_endAccess();
  swift_release();

  id v25 = objc_msgSend(v20, sel_endpoint);
  uint64_t v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  if (qword_26A49F888 != -1) {
    swift_once();
  }
  sub_25ABA7A6C(a1, v25, (uint64_t)sub_25ABA68C4, v26);

  return swift_release();
}

void sub_25ABA5168(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F840 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_project_value_buffer(v4, (uint64_t)qword_26A4A1DA8);
  sub_25AB150E0(v7, (uint64_t)v6);
  uint64_t v8 = sub_25AC345E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_25AB15148((uint64_t)v6);
  }
  else
  {
    uint64_t v10 = sub_25AC345C0();
    os_log_type_t v11 = sub_25AC352B0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_25AB11000, v10, v11, "daemon | configureConnection", v12, 2u);
      MEMORY[0x261151C20](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  id v13 = self;
  id v14 = objc_msgSend(v13, sel_interfaceWithProtocol_, &unk_27088F070);
  objc_msgSend(a1, sel_setExportedInterface_, v14);

  objc_msgSend(a1, sel_setExportedObject_, v2);
  id v15 = objc_msgSend(v13, sel_interfaceWithProtocol_, &unk_27088F160);
  objc_msgSend(a1, sel_setRemoteObjectInterface_, v15);

  aBlock[4] = sub_25ABA5590;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25AB9E088;
  aBlock[3] = &block_descriptor_7;
  id v16 = _Block_copy(aBlock);
  id v17 = objc_msgSend(a1, sel_remoteObjectProxyWithErrorHandler_, v16);
  _Block_release(v16);
  sub_25AC35500();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0E38);
  int v18 = swift_dynamicCast();
  uint64_t v19 = v22[1];
  if (!v18) {
    uint64_t v19 = 0;
  }
  *(void *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_identityUI) = v19;
  swift_unknownObjectRelease();
  objc_msgSend(a1, sel_resume);
  id v20 = *(void **)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection);
  *(void *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection) = a1;
  id v21 = a1;
}

void sub_25ABA54E0(int a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = (unsigned char *)MEMORY[0x261151D10](v3);
  if (v4)
  {
    v4[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isIdentityUIVisible] = 0;
  }
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x261151D10](v3);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    uint64_t v7 = (void *)MEMORY[0x261151D10](v5 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_identityDelegate);

    if (v7)
    {
      sub_25ABF8860(a1);
    }
  }
}

uint64_t sub_25ABA5590(void *a1)
{
  return sub_25ABA5D4C(a1, &qword_26A49F840, (uint64_t)qword_26A4A1DA8, "Connection with IdentityUI invalidated with error: %{public}s");
}

uint64_t sub_25ABA55BC(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v3 = sub_25AC32E80();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (uint64_t *)((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v2[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isIdentityUIVisible] = 1;
  id v7 = objc_msgSend(self, sel_anonymousListener);
  if (qword_26A49F878 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_26A4A0C10;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v2;
  id v10 = v7;
  os_log_type_t v11 = v2;
  objc_msgSend(v10, sel_setDelegate_, v8);
  objc_msgSend(v10, sel_resume);
  uint64_t v12 = (void **)(v8 + OBJC_IVAR____TtC21ProximityReaderDaemon6Daemon_temporaryListeners);
  swift_beginAccess();
  id v13 = *v12;
  id v14 = v10;
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v12 = v13;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    id v13 = sub_25AB910A4(0, v13[2] + 1, 1, v13);
    *uint64_t v12 = v13;
  }
  unint64_t v17 = v13[2];
  unint64_t v16 = v13[3];
  if (v17 >= v16 >> 1)
  {
    id v13 = sub_25AB910A4((void *)(v16 > 1), v17 + 1, 1, v13);
    *uint64_t v12 = v13;
  }
  void v13[2] = v17 + 1;
  int v18 = &v13[3 * v17];
  v18[4] = v14;
  v18[5] = sub_25ABA68E4;
  v18[6] = v9;
  swift_endAccess();
  swift_release();

  id v19 = objc_msgSend(v14, sel_endpoint);
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  if (qword_26A49F888 != -1) {
    swift_once();
  }
  uint64_t v21 = v25;
  void *v6 = v24;
  v6[1] = v21;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F15430], v3);
  swift_bridgeObjectRetain();
  sub_25ABA754C((uint64_t)v6, v19, (uint64_t)sub_25ABA6908, v20);

  swift_release();
  return (*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_25ABA5908(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F840 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_project_value_buffer(v4, (uint64_t)qword_26A4A1DA8);
  sub_25AB150E0(v7, (uint64_t)v6);
  uint64_t v8 = sub_25AC345E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_25AB15148((uint64_t)v6);
  }
  else
  {
    id v10 = sub_25AC345C0();
    os_log_type_t v11 = sub_25AC352B0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_25AB11000, v10, v11, "daemon | configureConnection", v12, 2u);
      MEMORY[0x261151C20](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  id v13 = self;
  id v14 = objc_msgSend(v13, sel_interfaceWithProtocol_, &unk_27088ED18);
  objc_msgSend(a1, sel_setExportedInterface_, v14);

  objc_msgSend(a1, sel_setExportedObject_, v2);
  id v15 = objc_msgSend(v13, sel_interfaceWithProtocol_, &unk_27088EDE0);
  objc_msgSend(a1, sel_setRemoteObjectInterface_, v15);

  aBlock[4] = sub_25ABA5D20;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25AB9E088;
  aBlock[3] = &block_descriptor_62_0;
  unint64_t v16 = _Block_copy(aBlock);
  id v17 = objc_msgSend(a1, sel_remoteObjectProxyWithErrorHandler_, v16);
  _Block_release(v16);
  sub_25AC35500();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0E40);
  int v18 = swift_dynamicCast();
  uint64_t v19 = v22[1];
  if (!v18) {
    uint64_t v19 = 0;
  }
  *(void *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_identityRegistrationUI) = v19;
  swift_unknownObjectRelease();
  objc_msgSend(a1, sel_resume);
  uint64_t v20 = *(void **)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection);
  *(void *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection) = a1;
  id v21 = a1;
}

void sub_25ABA5C80(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = (unsigned char *)MEMORY[0x261151D10](v2);
  if (v3)
  {
    v3[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isIdentityUIVisible] = 0;
  }
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x261151D10](v2);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    uint64_t v6 = (void *)MEMORY[0x261151D10](v4 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_identityDelegate);

    if (v6)
    {
      sub_25ABF8D98();
    }
  }
}

uint64_t sub_25ABA5D20(void *a1)
{
  return sub_25ABA5D4C(a1, &qword_26A49F840, (uint64_t)qword_26A4A1DA8, "Connection with IdentityRegistrationUI invalidated with error: %{public}s");
}

uint64_t sub_25ABA5D4C(void *a1, void *a2, uint64_t a3, const char *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v8);
  id v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v8, a3);
  sub_25AB150E0(v11, (uint64_t)v10);
  uint64_t v12 = sub_25AC345E0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1) {
    return sub_25AB15148((uint64_t)v10);
  }
  id v15 = a1;
  id v16 = a1;
  id v17 = sub_25AC345C0();
  os_log_type_t v18 = sub_25AC352C0();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v25 = a4;
    uint64_t v21 = v20;
    uint64_t v27 = v20;
    *(_DWORD *)uint64_t v19 = 136446210;
    uint64_t v24 = v19 + 4;
    swift_getErrorValue();
    uint64_t v22 = sub_25AC35900();
    uint64_t v26 = sub_25AB56574(v22, v23, &v27);
    sub_25AC354A0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_25AB11000, v17, v18, v25, v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261151C20](v21, -1, -1);
    MEMORY[0x261151C20](v19, -1, -1);
  }
  else
  {
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v10, v12);
}

id sub_25ABA6018(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5)
{
  id result = *(id *)(a1 + *a4);
  if (result) {
    return [result *a5];
  }
  return result;
}

void sub_25ABA617C(char *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v7 = MEMORY[0x261151D10](&a1[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_identityDelegate]);
  if (v7)
  {
    id v9 = (id)v7;
    uint64_t v8 = a1;
    a4(a3);
  }
}

id sub_25ABA6380(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  id result = *(id *)(a1 + *a3);
  if (result) {
    return [result *a4];
  }
  return result;
}

void sub_25ABA6490(char *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = MEMORY[0x261151D10](&a1[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_identityDelegate]);
  if (v5)
  {
    id v7 = (id)v5;
    uint64_t v6 = a1;
    a3();
  }
}

void sub_25ABA6590(void (*a1)(void))
{
  uint64_t v2 = v1;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isIdentityUIVisible) == 1)
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isIdentityUIVisible) = 0;
    uint64_t v4 = MEMORY[0x261151D10](v1 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_identityDelegate);
    if (v4)
    {
      uint64_t v5 = (void *)v4;
      a1();
    }
  }
  uint64_t v6 = OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection;
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection), sel_invalidate);
  id v7 = *(void **)(v2 + v6);
  *(void *)(v2 + v6) = 0;
}

unsigned char *storeEnumTagSinglePayload for RemoteUIError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *id result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25ABA6754);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteUIError()
{
  return &type metadata for RemoteUIError;
}

unint64_t sub_25ABA6790()
{
  unint64_t result = qword_26A4A0E30;
  if (!qword_26A4A0E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A0E30);
  }
  return result;
}

uint64_t sub_25ABA67E4()
{
  unint64_t v0 = sub_25AC35720();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_25ABA6830()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_25ABA6868(void *a1)
{
}

uint64_t sub_25ABA688C()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_25ABA68C4(int a1)
{
  sub_25ABA54E0(a1, v1);
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

void sub_25ABA68E4(void *a1)
{
}

void sub_25ABA6908(uint64_t a1)
{
  sub_25ABA5C80(a1, v1);
}

void sub_25ABA6910(void *a1)
{
}

void sub_25ABA6934(int a1)
{
  sub_25ABA26DC(a1, v1);
}

void sub_25ABA693C()
{
  sub_25ABA3490(v0);
}

unint64_t sub_25ABA6944()
{
  unint64_t result = qword_26A4A13B0;
  if (!qword_26A4A13B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A4A0460);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4A13B0);
  }
  return result;
}

uint64_t sub_25ABA69A0()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25ABA69D8(char a1)
{
  return sub_25ABFB35C(a1, *(void *)(v1 + 16));
}

uint64_t sub_25ABA69E0(uint64_t a1)
{
  return a1;
}

uint64_t sub_25ABA6A4C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_25ABA6A8C()
{
  sub_25ABA0148(v0[2], v0[3], v0[4]);
}

void sub_25ABA6A98(void *a1)
{
  sub_25AB9EE6C(a1, v1);
}

void sub_25ABA6AA0()
{
  sub_25AB9F184(v0);
}

uint64_t sub_25ABA6AA8(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

void sub_25ABA6AB8(void *a1)
{
}

uint64_t sub_25ABA6B18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v4);
  unsigned int v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25AC32E80();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08910]), sel_initRequiringSecureCoding_, 1);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v2, v7);
  v16[1] = v6;
  if (!a2)
  {
    void v16[3] = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0F00);
    sub_25AC34EB0();
  }
  uint64_t v12 = *(void (**)(char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  v12(v10, v7);
  sub_25ABA8B28(&qword_26A4A0F08, MEMORY[0x263F15440]);
  sub_25AC352E0();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_finishEncoding);
  id v13 = objc_msgSend(v11, sel_encodedData);
  uint64_t v14 = sub_25AC323A0();

  return v14;
}

uint64_t sub_25ABA6FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v4);
  unsigned int v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25AC331F0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08910]), sel_initRequiringSecureCoding_, 1);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v2, v7);
  v16[1] = v6;
  if (!a2)
  {
    void v16[3] = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0EE8);
    sub_25AC34EB0();
  }
  uint64_t v12 = *(void (**)(char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  v12(v10, v7);
  sub_25ABA8B28((unint64_t *)&unk_26A4A0EF0, MEMORY[0x263F15520]);
  sub_25AC352E0();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_finishEncoding);
  id v13 = objc_msgSend(v11, sel_encodedData);
  uint64_t v14 = sub_25AC323A0();

  return v14;
}

id sub_25ABA7430()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RemoteInterfacePresenter()), sel_init);
  qword_26A4A1DE8 = (uint64_t)result;
  return result;
}

void sub_25ABA7460(uint64_t a1)
{
}

void sub_25ABA7484(uint64_t a1)
{
}

void sub_25ABA74A8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_25AC34120();
  id v5 = objc_allocWithZone(MEMORY[0x263F79410]);
  unsigned int v6 = (void *)sub_25AC34E10();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)sub_25AC34E10();
  id v8 = objc_msgSend(v5, sel_initWithServiceName_viewControllerClassName_, v6, v7);

  *a4 = v8;
}

void sub_25ABA754C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v45 = a3;
  uint64_t v46 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v6);
  id v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25AC32D30();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F79408]), sel_init);
  objc_msgSend(v13, sel_setXpcEndpoint_, objc_msgSend(a2, sel__endpoint));
  swift_unknownObjectRelease();
  uint64_t v14 = sub_25ABA6B18(0, 0);
  if (v15 >> 60 == 15)
  {
    if (qword_26A49F7F8 != -1) {
      swift_once();
    }
    uint64_t v16 = __swift_project_value_buffer(v6, (uint64_t)qword_26A4A1CD0);
    sub_25AB150E0(v16, (uint64_t)v8);
    uint64_t v17 = sub_25AC345E0();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v8, 1, v17) == 1)
    {

      sub_25AB15148((uint64_t)v8);
    }
    else
    {
      uint64_t v40 = sub_25AC345C0();
      os_log_type_t v41 = sub_25AC352C0();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v42 = 0;
        _os_log_impl(&dword_25AB11000, v40, v41, "Unable to encode registration request", v42, 2u);
        MEMORY[0x261151C20](v42, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v17);
    }
  }
  else
  {
    uint64_t v19 = v14;
    unint64_t v20 = v15;
    uint64_t v44 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0EE0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25AC37D80;
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F15368], v9);
    uint64_t v22 = sub_25AC32D20();
    uint64_t v24 = v23;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t v48 = v22;
    uint64_t v49 = v24;
    sub_25AC35550();
    *(void *)(inited + 96) = MEMORY[0x263F06F78];
    *(void *)(inited + 72) = v19;
    *(void *)(inited + 80) = v20;
    sub_25AB29558(v19, v20);
    sub_25AB71A70(inited);
    uint64_t v25 = (void *)sub_25AC34D90();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setUserInfo_, v25);

    uint64_t v26 = self;
    if (qword_26A49F890 != -1) {
      swift_once();
    }
    id v27 = objc_msgSend(v26, sel_newHandleWithDefinition_configurationContext_, qword_26A4A1DF0, v13);
    uint64_t v28 = sub_25AC34170();
    uint64_t v30 = v29;
    uint64_t v31 = (objc_class *)type metadata accessor for RemoteAlertInvalidationHandler();
    uint64_t v32 = (char *)objc_allocWithZone(v31);
    os_log_type_t v33 = (uint64_t *)&v32[OBJC_IVAR____TtC21ProximityReaderDaemon30RemoteAlertInvalidationHandler_handleName];
    *os_log_type_t v33 = v28;
    v33[1] = v30;
    uint64_t v34 = &v32[OBJC_IVAR____TtC21ProximityReaderDaemon30RemoteAlertInvalidationHandler_completion];
    uint64_t v35 = v46;
    *(void *)uint64_t v34 = v45;
    *((void *)v34 + 1) = v35;
    v47.receiver = v32;
    v47.super_class = v31;
    swift_retain();
    id v36 = objc_msgSendSuper2(&v47, sel_init);
    objc_msgSend(v27, sel_registerObserver_, v36);
    os_log_type_t v37 = *(void **)(v44 + OBJC_IVAR____TtC21ProximityReaderDaemon24RemoteInterfacePresenter_invalidationHandler);
    *(void *)(v44 + OBJC_IVAR____TtC21ProximityReaderDaemon24RemoteInterfacePresenter_invalidationHandler) = v36;
    id v38 = v36;

    id v39 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F793F8]), sel_init);
    objc_msgSend(v27, sel_activateWithContext_, v39);

    sub_25AB16944(v19, v20);
  }
}

uint64_t sub_25ABA7A6C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25AC32D30();
  long long v81 = *(void (**)(char *, uint64_t))(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v84 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v83 = (char *)&v73 - v16;
  MEMORY[0x270FA5388](v15);
  os_log_type_t v82 = (char *)&v73 - v17;
  uint64_t v18 = sub_25ABA6FA4(0, 0);
  if (v19 >> 60 == 15)
  {
    if (qword_26A49F840 != -1) {
      swift_once();
    }
    uint64_t v20 = __swift_project_value_buffer(v9, (uint64_t)qword_26A4A1DA8);
    sub_25AB150E0(v20, (uint64_t)v11);
    uint64_t v21 = sub_25AC345E0();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v11, 1, v21) == 1)
    {
      return sub_25AB15148((uint64_t)v11);
    }
    else
    {
      uint64_t v28 = sub_25AC345C0();
      os_log_type_t v29 = sub_25AC352C0();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v30 = 0;
        _os_log_impl(&dword_25AB11000, v28, v29, "Unable to encode identity request", v30, 2u);
        MEMORY[0x261151C20](v30, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v11, v21);
    }
  }
  else
  {
    id v74 = a2;
    uint64_t v79 = a4;
    unint64_t v85 = v19;
    uint64_t v86 = v18;
    uint64_t v24 = (uint64_t (*)(void))sub_25AC34000();
    char v25 = v24();
    swift_release();
    if (v25)
    {
      id v26 = objc_msgSend(self, sel_standardUserDefaults);
      id v27 = (void *)sub_25AC34E10();
      unsigned int v77 = objc_msgSend(v26, sel_BOOLForKey_, v27);
    }
    else
    {
      unsigned int v77 = 0;
    }
    uint64_t v31 = (uint64_t (*)(void))sub_25AC34000();
    char v32 = v31();
    swift_release();
    uint64_t v80 = v5;
    uint64_t v78 = a3;
    if ((v32 & 1) != 0
      && (id v33 = [self (SEL)0x265482EC5],
          uint64_t v34 = (void *)sub_25AC34E10(),
          unsigned __int8 v35 = objc_msgSend(v33, (SEL)&selRef_initWithString_, v34),
          v33,
          v34,
          (v35 & 1) != 0))
    {
      uint64_t v36 = v12;
      uint64_t v76 = 60;
    }
    else
    {
      uint64_t v36 = v12;
      uint64_t v76 = sub_25AC340B0();
    }
    id v75 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F79408]), sel_init);
    objc_msgSend(v75, sel_setXpcEndpoint_, objc_msgSend(v74, sel__endpoint));
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0EE0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25AC3B780;
    id v74 = (id)(inited + 32);
    id v38 = v81;
    id v39 = v82;
    uint64_t v40 = (void (*)(char *, void, uint64_t))*((void *)v81 + 13);
    uint64_t v41 = v36;
    v40(v82, *MEMORY[0x263F15390], v36);
    uint64_t v42 = sub_25AC32D20();
    uint64_t v44 = v43;
    uint64_t v45 = (void (*)(char *, uint64_t))*((void *)v38 + 1);
    v45(v39, v41);
    long long v81 = v45;
    uint64_t v88 = v42;
    uint64_t v89 = v44;
    sub_25AC35550();
    *(void *)(inited + 96) = MEMORY[0x263F06F78];
    unint64_t v47 = v85;
    uint64_t v46 = v86;
    *(void *)(inited + 72) = v86;
    *(void *)(inited + 80) = v47;
    os_log_type_t v82 = (char *)(inited + 104);
    uint64_t v48 = v83;
    v40(v83, *MEMORY[0x263F15378], v41);
    sub_25AB29558(v46, v47);
    uint64_t v49 = sub_25AC32D20();
    uint64_t v51 = v50;
    v45(v48, v41);
    uint64_t v88 = v49;
    uint64_t v89 = v51;
    sub_25AC35550();
    *(void *)(inited + 168) = MEMORY[0x263F8D4F8];
    *(unsigned char *)(inited + 144) = v77;
    uint64_t v52 = v84;
    v40(v84, *MEMORY[0x263F15380], v41);
    uint64_t v53 = sub_25AC32D20();
    uint64_t v55 = v54;
    v81(v52, v41);
    uint64_t v88 = v53;
    uint64_t v89 = v55;
    sub_25AC35550();
    *(void *)(inited + 240) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 216) = v76;
    uint64_t v56 = inited;
    id v57 = v75;
    sub_25AB71A70(v56);
    uint64_t v58 = (void *)sub_25AC34D90();
    swift_bridgeObjectRelease();
    objc_msgSend(v57, sel_setUserInfo_, v58);

    unsigned int v59 = self;
    if (qword_26A49F898 != -1) {
      swift_once();
    }
    id v60 = objc_msgSend(v59, sel_newHandleWithDefinition_configurationContext_, qword_26A4A1DF8, v57);
    uint64_t v61 = sub_25AC33FD0();
    uint64_t v63 = v62;
    uint64_t v64 = (objc_class *)type metadata accessor for RemoteAlertInvalidationHandler();
    uint64_t v65 = (char *)objc_allocWithZone(v64);
    uint64_t v66 = (uint64_t *)&v65[OBJC_IVAR____TtC21ProximityReaderDaemon30RemoteAlertInvalidationHandler_handleName];
    *uint64_t v66 = v61;
    v66[1] = v63;
    os_log_type_t v67 = &v65[OBJC_IVAR____TtC21ProximityReaderDaemon30RemoteAlertInvalidationHandler_completion];
    uint64_t v68 = v79;
    *(void *)os_log_type_t v67 = v78;
    *((void *)v67 + 1) = v68;
    v87.receiver = v65;
    v87.super_class = v64;
    swift_retain();
    id v69 = objc_msgSendSuper2(&v87, sel_init);
    objc_msgSend(v60, sel_registerObserver_, v69);
    os_log_type_t v70 = *(void **)(v80 + OBJC_IVAR____TtC21ProximityReaderDaemon24RemoteInterfacePresenter_invalidationHandler);
    *(void *)(v80 + OBJC_IVAR____TtC21ProximityReaderDaemon24RemoteInterfacePresenter_invalidationHandler) = v69;
    id v71 = v69;

    id v72 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F793F8]), sel_init);
    objc_msgSend(v72, sel_setShouldDismissPresentedBanners_, 1);
    objc_msgSend(v60, sel_activateWithContext_, v72);

    return sub_25AB16944(v86, v85);
  }
}

id sub_25ABA8298()
{
  return sub_25ABA8A78(type metadata accessor for RemoteInterfacePresenter);
}

uint64_t type metadata accessor for RemoteInterfacePresenter()
{
  return self;
}

uint64_t sub_25ABA82E4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F810 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_project_value_buffer(v4, (uint64_t)qword_26A4A1D18);
  sub_25AB150E0(v7, (uint64_t)v6);
  uint64_t v8 = sub_25AC345E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_25AB15148((uint64_t)v6);
  }
  else
  {
    uint64_t v10 = v2;
    uint64_t v11 = sub_25AC345C0();
    os_log_type_t v12 = sub_25AC352D0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v23 = a1;
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v25 = v22;
      *(_DWORD *)uint64_t v13 = 136446210;
      uint64_t v20 = v13 + 4;
      uint64_t v21 = v13;
      uint64_t v14 = *(void *)&v10[OBJC_IVAR____TtC21ProximityReaderDaemon30RemoteAlertInvalidationHandler_handleName];
      unint64_t v15 = *(void *)&v10[OBJC_IVAR____TtC21ProximityReaderDaemon30RemoteAlertInvalidationHandler_handleName + 8];
      swift_bridgeObjectRetain();
      uint64_t v16 = v14;
      a1 = v23;
      uint64_t v24 = sub_25AB56574(v16, v15, &v25);
      sub_25AC354A0();

      swift_bridgeObjectRelease();
      uint64_t v17 = v21;
      _os_log_impl(&dword_25AB11000, v11, v12, "%{public}s remote alert did deactivate", v21, 0xCu);
      uint64_t v18 = v22;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v18, -1, -1);
      MEMORY[0x261151C20](v17, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(a1, sel_unregisterObserver_, v2);
  return (*(uint64_t (**)(void))&v2[OBJC_IVAR____TtC21ProximityReaderDaemon30RemoteAlertInvalidationHandler_completion])(0);
}

void sub_25ABA8620(void *a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v9 = (void *)sub_25AC321E0();
    objc_msgSend(a1, sel_unregisterObserver_, v3);
    if (qword_26A49F810 != -1) {
      swift_once();
    }
    uint64_t v10 = __swift_project_value_buffer(v6, (uint64_t)qword_26A4A1D18);
    sub_25AB150E0(v10, (uint64_t)v8);
    uint64_t v11 = sub_25AC345E0();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11) == 1)
    {
      sub_25AB15148((uint64_t)v8);
    }
    else
    {
      uint64_t v13 = v3;
      id v14 = v9;
      unint64_t v15 = v13;
      id v16 = v14;
      uint64_t v17 = sub_25AC345C0();
      os_log_type_t v18 = sub_25AC352D0();
      int v19 = v18;
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v20 = swift_slowAlloc();
        os_log_type_t v37 = v9;
        uint64_t v21 = v20;
        uint64_t v36 = swift_slowAlloc();
        uint64_t v39 = v36;
        *(_DWORD *)uint64_t v21 = 136446466;
        int v35 = v19;
        os_log_t v34 = v17;
        uint64_t v23 = *(void *)&v15[OBJC_IVAR____TtC21ProximityReaderDaemon30RemoteAlertInvalidationHandler_handleName];
        unint64_t v22 = *(void *)&v15[OBJC_IVAR____TtC21ProximityReaderDaemon30RemoteAlertInvalidationHandler_handleName + 8];
        swift_bridgeObjectRetain();
        uint64_t v38 = sub_25AB56574(v23, v22, &v39);
        sub_25AC354A0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v21 + 12) = 2082;
        v33[1] = v21 + 14;
        id v24 = objc_msgSend(v16, sel_localizedDescription);
        uint64_t v25 = sub_25AC34E40();
        unint64_t v27 = v26;

        uint64_t v38 = sub_25AB56574(v25, v27, &v39);
        sub_25AC354A0();

        swift_bridgeObjectRelease();
        uint64_t v17 = v34;
        _os_log_impl(&dword_25AB11000, v34, (os_log_type_t)v35, "%{public}s remote handle invalidated with error: %{public}s", (uint8_t *)v21, 0x16u);
        uint64_t v28 = v36;
        swift_arrayDestroy();
        MEMORY[0x261151C20](v28, -1, -1);
        uint64_t v29 = v21;
        uint64_t v9 = v37;
        MEMORY[0x261151C20](v29, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v11);
    }
    id v30 = objc_msgSend(v9, sel_code);
    if (v30 == (id)6) {
      unsigned int v31 = 1;
    }
    else {
      unsigned int v31 = 2;
    }
    if (v30 == (id)4) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = v31;
    }
    (*(void (**)(uint64_t))&v3[OBJC_IVAR____TtC21ProximityReaderDaemon30RemoteAlertInvalidationHandler_completion])(v32);
  }
}

id sub_25ABA8A60()
{
  return sub_25ABA8A78(type metadata accessor for RemoteAlertInvalidationHandler);
}

id sub_25ABA8A78(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for RemoteAlertInvalidationHandler()
{
  return self;
}

uint64_t sub_25ABA8B28(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25ABA8B70()
{
  type metadata accessor for RemoteScenePresenter();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_25ABAA140();
  qword_26A4A1E00 = v0;
  return result;
}

uint64_t sub_25ABA8BAC(uint64_t a1, unint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v122 = a2;
  uint64_t v119 = a5;
  uint64_t v120 = a6;
  uint64_t v113 = a4;
  int v117 = a3;
  v127[35] = *(id *)MEMORY[0x263EF8340];
  uint64_t v118 = sub_25AC32D30();
  uint64_t v7 = *(void *)(v118 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v118);
  uint64_t v116 = (char *)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v115 = (char *)&v103 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v114 = (char *)&v103 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  id v16 = (char *)&v103 - v15;
  MEMORY[0x270FA5388](v14);
  os_log_type_t v18 = (char *)&v103 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  unint64_t v22 = (char *)&v103 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v111 = (uint64_t)&v103 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v112 = (uint64_t)&v103 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v103 - v28;
  if (qword_26A49F820 != -1) {
    swift_once();
  }
  uint64_t v124 = __swift_project_value_buffer(v19, (uint64_t)qword_26A4A1D48);
  sub_25AB150E0(v124, (uint64_t)v29);
  uint64_t v30 = sub_25AC345E0();
  uint64_t v31 = *(void *)(v30 - 8);
  long long v125 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  uint64_t v126 = v31 + 48;
  if (v125(v29, 1, v30) == 1)
  {
    sub_25AB15148((uint64_t)v29);
  }
  else
  {
    sub_25AB464DC(v123, 0xD00000000000006BLL, 0x800000025AC40B20, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v30);
  }
  uint64_t v32 = self;
  v127[0] = 0;
  id v33 = objc_msgSend(v32, sel_archivedDataWithRootObject_requiringSecureCoding_error_, a1, 1, v127);
  id v34 = v127[0];
  if (v33)
  {
    uint64_t v121 = sub_25AC323A0();
    unint64_t v36 = v35;

    sub_25AC32040();
    swift_allocObject();
    sub_25AC32030();
    sub_25AC32DB0();
    sub_25ABAA378((unint64_t *)&unk_26A4A0F10, MEMORY[0x263F153D0]);
    uint64_t v109 = sub_25AC32020();
    unint64_t v122 = v41;
    swift_release();
    uint64_t v42 = (unsigned __int8 (*)(void))sub_25AC34000();
    uint64_t v43 = v42();
    swift_release();
    unint64_t v110 = v36;
    uint64_t v106 = v31;
    uint64_t v107 = v30;
    uint64_t v104 = v16;
    if (v43)
    {
      id v44 = objc_msgSend(self, sel_standardUserDefaults);
      uint64_t v45 = (void *)sub_25AC34E10();
      unsigned int v105 = objc_msgSend(v44, sel_BOOLForKey_, v45);
    }
    else
    {
      unsigned int v105 = 0;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FF48);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25AC3C080;
    uint64_t v50 = v7;
    uint64_t v51 = *(void (**)(char *, void, uint64_t))(v7 + 104);
    uint64_t v52 = v118;
    v51(v18, *MEMORY[0x263F15388], v118);
    uint64_t v53 = sub_25AC32D20();
    uint64_t v55 = v54;
    uint64_t v108 = *(void (**)(char *, uint64_t))(v50 + 8);
    v108(v18, v52);
    *(void *)(inited + 32) = v53;
    *(void *)(inited + 40) = v55;
    uint64_t v56 = sub_25AC33720();
    *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 48) = v56;
    id v57 = v104;
    v51(v104, *MEMORY[0x263F15360], v52);
    uint64_t v103 = v51;
    uint64_t v58 = sub_25AC32D20();
    uint64_t v60 = v59;
    v108(v57, v52);
    *(void *)(inited + 80) = v58;
    *(void *)(inited + 88) = v60;
    uint64_t v61 = MEMORY[0x263F06F78];
    *(void *)(inited + 120) = MEMORY[0x263F06F78];
    uint64_t v62 = v121;
    unint64_t v63 = v110;
    *(void *)(inited + 96) = v121;
    *(void *)(inited + 104) = v63;
    uint64_t v64 = v114;
    v51(v114, *MEMORY[0x263F15398], v52);
    sub_25AB29558(v62, v63);
    uint64_t v65 = sub_25AC32D20();
    uint64_t v67 = v66;
    uint64_t v68 = v108;
    v108(v64, v52);
    *(void *)(inited + 128) = v65;
    *(void *)(inited + 136) = v67;
    *(void *)(inited + 168) = v61;
    uint64_t v69 = v109;
    unint64_t v70 = v122;
    *(void *)(inited + 144) = v109;
    *(void *)(inited + 152) = v70;
    id v71 = v115;
    id v72 = v103;
    v103(v115, *MEMORY[0x263F15370], v52);
    sub_25AB29558(v69, v70);
    uint64_t v73 = sub_25AC32D20();
    uint64_t v75 = v74;
    v68(v71, v52);
    *(void *)(inited + 176) = v73;
    *(void *)(inited + 184) = v75;
    uint64_t v76 = MEMORY[0x263F8D4F8];
    *(void *)(inited + 216) = MEMORY[0x263F8D4F8];
    *(unsigned char *)(inited + 192) = v117 & 1;
    unsigned int v77 = v116;
    v72(v116, *MEMORY[0x263F15378], v52);
    uint64_t v78 = sub_25AC32D20();
    uint64_t v80 = v79;
    v68(v77, v52);
    *(void *)(inited + 224) = v78;
    *(void *)(inited + 232) = v80;
    *(void *)(inited + 264) = v76;
    *(unsigned char *)(inited + 240) = v105;
    unint64_t v81 = sub_25AB714E8(inited);
    os_log_type_t v82 = *(void **)(v123 + 24);
    type metadata accessor for RemoteSceneUIHandle();
    swift_allocObject();
    id v83 = v82;
    uint64_t v84 = v120;
    swift_retain();
    uint64_t v85 = sub_25AB9BC2C(v83, v119, v84);
    if (v85)
    {
      uint64_t v86 = v85;
      uint64_t v87 = v112;
      sub_25AB150E0(v124, v112);
      uint64_t v88 = v107;
      unsigned int v89 = v125((char *)v87, 1, v107);
      uint64_t v90 = v106;
      if (v89 == 1)
      {
        sub_25AB15148(v87);
      }
      else
      {
        os_log_type_t v96 = sub_25AC345C0();
        os_log_type_t v97 = sub_25AC352C0();
        if (os_log_type_enabled(v96, v97))
        {
          uint64_t v98 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v98 = 0;
          _os_log_impl(&dword_25AB11000, v96, v97, "opening remote scene UI", v98, 2u);
          MEMORY[0x261151C20](v98, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v87, v88);
      }
      uint64_t v99 = sub_25AB809E4(v81);
      swift_bridgeObjectRelease();
      sub_25AB9CDB0(v99, v113);
      sub_25AB16958(v121, v110);
      sub_25AB16958(v109, v122);
      swift_bridgeObjectRelease();
      *(void *)(v123 + 16) = v86;
      return swift_release();
    }
    unint64_t v91 = v110;
    swift_bridgeObjectRelease();
    uint64_t v92 = v111;
    sub_25AB150E0(v124, v111);
    uint64_t v93 = v107;
    unsigned int v94 = v125((char *)v92, 1, v107);
    uint64_t v95 = v106;
    if (v94 == 1)
    {
      sub_25AB16958(v121, v91);
      sub_25AB16958(v109, v122);
      uint64_t v39 = v92;
      return sub_25AB15148(v39);
    }
    uint64_t v100 = sub_25AC345C0();
    os_log_type_t v101 = sub_25AC352C0();
    if (os_log_type_enabled(v100, v101))
    {
      uint64_t v102 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v102 = 0;
      _os_log_impl(&dword_25AB11000, v100, v101, "Unable to create ui service", v102, 2u);
      MEMORY[0x261151C20](v102, -1, -1);
    }
    sub_25AB16958(v121, v91);
    sub_25AB16958(v109, v122);

    return (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 8))(v92, v93);
  }
  else
  {
    os_log_type_t v37 = v34;
    uint64_t v38 = (void *)sub_25AC321F0();

    swift_willThrow();
    sub_25AB150E0(v124, (uint64_t)v22);
    if (v125(v22, 1, v30) == 1)
    {
      uint64_t v39 = (uint64_t)v22;
      return sub_25AB15148(v39);
    }
    uint64_t v46 = sub_25AC345C0();
    os_log_type_t v47 = sub_25AC352C0();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v48 = 0;
      _os_log_impl(&dword_25AB11000, v46, v47, "Unable to encode transaction request", v48, 2u);
      MEMORY[0x261151C20](v48, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v22, v30);
  }
}

uint64_t sub_25ABA970C(uint64_t a1, uint64_t a2, unint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v115 = a6;
  uint64_t v116 = a7;
  uint64_t v106 = a5;
  int v114 = a4;
  unint64_t v119 = a3;
  uint64_t v109 = a1;
  uint64_t v110 = a2;
  v122[35] = *(id *)MEMORY[0x263EF8340];
  uint64_t v8 = sub_25AC32D30();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v113 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v112 = (char *)&v100 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v108 = (char *)&v100 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v107 = (char *)&v100 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v100 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v118 = (uint64_t)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v101 = (uint64_t)&v100 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v105 = (uint64_t)&v100 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v100 - v27;
  if (qword_26A49F820 != -1) {
    swift_once();
  }
  uint64_t v111 = __swift_project_value_buffer(v20, (uint64_t)qword_26A4A1D48);
  sub_25AB150E0(v111, (uint64_t)v28);
  uint64_t v29 = sub_25AC345E0();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v120 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  uint64_t v121 = v30 + 48;
  int v31 = v120(v28, 1, v29);
  uint64_t v117 = v7;
  if (v31 == 1)
  {
    sub_25AB15148((uint64_t)v28);
  }
  else
  {
    sub_25AB464DC(v7, 0xD000000000000069, 0x800000025AC40AB0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v29);
  }
  uint64_t v32 = (uint64_t (*)(void))sub_25AC34000();
  char v33 = v32();
  swift_release();
  if (v33)
  {
    id v34 = objc_msgSend(self, sel_standardUserDefaults);
    unint64_t v35 = (void *)sub_25AC34E10();
    unsigned int v36 = objc_msgSend(v34, sel_BOOLForKey_, v35);
  }
  else
  {
    unsigned int v36 = 0;
  }
  os_log_type_t v37 = self;
  v122[0] = 0;
  id v38 = objc_msgSend(v37, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v119, 1, v122);
  id v39 = v122[0];
  if (v38)
  {
    uint64_t v103 = v30;
    uint64_t v104 = v29;
    uint64_t v118 = sub_25AC323A0();
    unint64_t v119 = v40;

    __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FF48);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25AC3C080;
    uint64_t v42 = *MEMORY[0x263F15388];
    unsigned int v102 = v36;
    uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
    v43(v19, v42, v8);
    uint64_t v44 = sub_25AC32D20();
    uint64_t v46 = v45;
    os_log_type_t v47 = *(void (**)(char *, uint64_t))(v9 + 8);
    v47(v19, v8);
    *(void *)(inited + 32) = v44;
    *(void *)(inited + 40) = v46;
    uint64_t v48 = sub_25AC33720();
    *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 48) = v48;
    uint64_t v49 = v107;
    v43(v107, *MEMORY[0x263F153A0], v8);
    uint64_t v50 = sub_25AC32D20();
    uint64_t v52 = v51;
    v47(v49, v8);
    *(void *)(inited + 80) = v50;
    *(void *)(inited + 88) = v52;
    *(void *)(inited + 120) = MEMORY[0x263F8D310];
    uint64_t v53 = v110;
    *(void *)(inited + 96) = v109;
    *(void *)(inited + 104) = v53;
    uint64_t v54 = v108;
    v43(v108, *MEMORY[0x263F153A8], v8);
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_25AC32D20();
    uint64_t v57 = v56;
    v47(v54, v8);
    *(void *)(inited + 128) = v55;
    *(void *)(inited + 136) = v57;
    *(void *)(inited + 168) = MEMORY[0x263F06F78];
    uint64_t v59 = v118;
    unint64_t v58 = v119;
    *(void *)(inited + 144) = v118;
    *(void *)(inited + 152) = v58;
    uint64_t v60 = v112;
    v43(v112, *MEMORY[0x263F15370], v8);
    sub_25AB29558(v59, v58);
    uint64_t v61 = sub_25AC32D20();
    uint64_t v63 = v62;
    v47(v60, v8);
    *(void *)(inited + 176) = v61;
    *(void *)(inited + 184) = v63;
    uint64_t v64 = MEMORY[0x263F8D4F8];
    *(void *)(inited + 216) = MEMORY[0x263F8D4F8];
    *(unsigned char *)(inited + 192) = v114 & 1;
    uint64_t v65 = v113;
    v43(v113, *MEMORY[0x263F15378], v8);
    uint64_t v66 = sub_25AC32D20();
    uint64_t v68 = v67;
    v47(v65, v8);
    *(void *)(inited + 224) = v66;
    *(void *)(inited + 232) = v68;
    *(void *)(inited + 264) = v64;
    *(unsigned char *)(inited + 240) = v102;
    unint64_t v69 = sub_25AB714E8(inited);
    uint64_t v70 = v117;
    id v71 = *(void **)(v117 + 24);
    type metadata accessor for RemoteSceneUIHandle();
    swift_allocObject();
    id v72 = v71;
    uint64_t v73 = v116;
    swift_retain();
    uint64_t v74 = sub_25AB9BC2C(v72, v115, v73);
    if (v74)
    {
      uint64_t v75 = v74;
      uint64_t v76 = v105;
      sub_25AB150E0(v111, v105);
      uint64_t v77 = v104;
      int v78 = v120((char *)v76, 1, v104);
      uint64_t v79 = v103;
      if (v78 == 1)
      {
        sub_25AB15148(v76);
      }
      else
      {
        uint64_t v90 = sub_25AC345C0();
        os_log_type_t v91 = sub_25AC352C0();
        if (os_log_type_enabled(v90, v91))
        {
          uint64_t v92 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v92 = 0;
          _os_log_impl(&dword_25AB11000, v90, v91, "opening remote scene UI", v92, 2u);
          MEMORY[0x261151C20](v92, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v76, v77);
      }
      uint64_t v93 = sub_25AB809E4(v69);
      swift_bridgeObjectRelease();
      sub_25AB9CDB0(v93, v106);
      sub_25AB16958(v118, v119);
      swift_bridgeObjectRelease();
      *(void *)(v70 + 16) = v75;
      return swift_release();
    }
    swift_bridgeObjectRelease();
    uint64_t v85 = v101;
    sub_25AB150E0(v111, v101);
    uint64_t v86 = v104;
    int v87 = v120((char *)v85, 1, v104);
    uint64_t v88 = v103;
    if (v87 == 1)
    {
      sub_25AB16958(v118, v119);
      uint64_t v84 = v85;
      return sub_25AB15148(v84);
    }
    os_log_type_t v97 = sub_25AC345C0();
    os_log_type_t v98 = sub_25AC352C0();
    if (os_log_type_enabled(v97, v98))
    {
      uint64_t v99 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v99 = 0;
      _os_log_impl(&dword_25AB11000, v97, v98, "Unable to create ui service", v99, 2u);
      MEMORY[0x261151C20](v99, -1, -1);
    }
    sub_25AB16958(v118, v119);

    return (*(uint64_t (**)(uint64_t, uint64_t))(v88 + 8))(v85, v86);
  }
  else
  {
    uint64_t v80 = v39;
    unint64_t v81 = (void *)sub_25AC321F0();

    swift_willThrow();
    if (qword_26A49F7E8 != -1) {
      swift_once();
    }
    uint64_t v82 = __swift_project_value_buffer(v20, (uint64_t)qword_26A4A1CA0);
    uint64_t v83 = v118;
    sub_25AB150E0(v82, v118);
    if (v120((char *)v83, 1, v29) == 1)
    {
      uint64_t v84 = v83;
      return sub_25AB15148(v84);
    }
    unsigned int v94 = sub_25AC345C0();
    os_log_type_t v95 = sub_25AC352C0();
    if (os_log_type_enabled(v94, v95))
    {
      os_log_type_t v96 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v96 = 0;
      _os_log_impl(&dword_25AB11000, v94, v95, "Unable to encode pin configuration", v96, 2u);
      MEMORY[0x261151C20](v96, -1, -1);
    }

    return (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v83, v29);
  }
}

uint64_t sub_25ABAA0DC()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RemoteScenePresenter()
{
  return self;
}

uint64_t sub_25ABAA140()
{
  uint64_t v1 = sub_25AC35320();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25AC352F0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_25AC34CA0();
  MEMORY[0x270FA5388](v6 - 8);
  *(void *)(v0 + 16) = 0;
  sub_25AB4A328();
  sub_25AC34C90();
  v8[1] = MEMORY[0x263F8EE78];
  sub_25ABAA378((unint64_t *)&qword_26A4A03A0, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A03A8);
  sub_25AB4A3C0();
  sub_25AC35510();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F8F138], v1);
  *(void *)(v0 + 24) = sub_25AC35340();
  return v0;
}

uint64_t sub_25ABAA378(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_25ABAA3C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v26 - v8;
  sub_25ABAA724(a1, a2, 0x64697074666173, 0xE700000000000000, "Could not retrieve SAF tpid from token: [ %s ]");
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  if (v11)
  {
    if (qword_26A49F828 != -1) {
      swift_once();
    }
    uint64_t v12 = __swift_project_value_buffer(v4, (uint64_t)qword_26A4A1D60);
    sub_25AB150E0(v12, (uint64_t)v9);
    uint64_t v13 = sub_25AC345E0();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) == 1)
    {
      uint64_t v15 = (uint64_t)v9;
LABEL_10:
      sub_25AB15148(v15);
      return v11 != 0;
    }
    uint64_t v19 = sub_25AC345C0();
    os_log_type_t v20 = sub_25AC352D0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_25AB11000, v19, v20, "Store and forward is supported", v21, 2u);
      MEMORY[0x261151C20](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v13);
  }
  else
  {
    if (qword_26A49F828 != -1) {
      swift_once();
    }
    uint64_t v16 = __swift_project_value_buffer(v4, (uint64_t)qword_26A4A1D60);
    sub_25AB150E0(v16, (uint64_t)v7);
    uint64_t v17 = sub_25AC345E0();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v7, 1, v17) == 1)
    {
      uint64_t v15 = (uint64_t)v7;
      goto LABEL_10;
    }
    uint64_t v22 = sub_25AC345C0();
    os_log_type_t v23 = sub_25AC352C0();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_25AB11000, v22, v23, "Store and forward is not supported in the provided token", v24, 2u);
      MEMORY[0x261151C20](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v17);
  }
  return v11 != 0;
}

uint64_t sub_25ABAA70C(uint64_t a1, uint64_t a2)
{
  return sub_25ABAA724(a1, a2, 6580589, 0xE300000000000000, "Could not retrieve merchant ID from token: [ %s ]");
}

uint64_t sub_25ABAA724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25AC34330();
  if (!v25) {
    goto LABEL_6;
  }
  uint64_t result = v24;
  uint64_t v10 = HIBYTE(v25) & 0xF;
  if ((v25 & 0x2000000000000000) == 0) {
    uint64_t v10 = v24 & 0xFFFFFFFFFFFFLL;
  }
  if (!v10)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    if (qword_26A49F828 != -1) {
      swift_once();
    }
    uint64_t v11 = __swift_project_value_buffer(v6, (uint64_t)qword_26A4A1D60);
    sub_25AB150E0(v11, (uint64_t)v8);
    uint64_t v12 = sub_25AC345E0();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1)
    {
      sub_25AB15148((uint64_t)v8);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      uint64_t v14 = sub_25AC345C0();
      os_log_type_t v15 = sub_25AC352C0();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        uint64_t v17 = swift_slowAlloc();
        uint64_t v22 = a5;
        uint64_t v18 = v17;
        uint64_t v24 = v17;
        *(_DWORD *)uint64_t v16 = 136315138;
        v21[1] = v16 + 4;
        uint64_t v19 = sub_25AC34310();
        uint64_t v23 = sub_25AB56574(v19, v20, &v24);
        sub_25AC354A0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25AB11000, v14, v15, v22, v16, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x261151C20](v18, -1, -1);
        MEMORY[0x261151C20](v16, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
    }
    return 0;
  }
  return result;
}

uint64_t sub_25ABAAA10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_25ABB1C94((long long *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_25ABAEAF8(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_25AB18FAC(a1, &qword_26A4A0F58);
    sub_25ABAB3F4(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_25AB18FAC((uint64_t)v9, &qword_26A4A0F58);
  }
}

uint64_t sub_25ABAAAE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0A58);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for IdentityAnalyticsManager.LoadState(0);
  MEMORY[0x270FA5388](State);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_25AB18FAC(a1, &qword_26A4A0A58);
    sub_25ABAB6D0(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_25AB18FAC((uint64_t)v10, &qword_26A4A0A58);
  }
  else
  {
    sub_25ABB2178(a1, (uint64_t)v13);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_25ABAEF4C((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_25ABAACA4(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD30);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25AC32300();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  os_log_type_t v37 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v11);
  uint64_t v45 = (char *)&v30 - v14;
  uint64_t v46 = MEMORY[0x263F8EE78];
  uint64_t v38 = *(void *)(a3 + 16);
  if (v38)
  {
    unint64_t v15 = 0;
    uint64_t v39 = v10 + 48;
    uint64_t v44 = (void (**)(char *))(v10 + 32);
    uint64_t v40 = v10 + 56;
    uint64_t v41 = v10 + 16;
    unint64_t v32 = (v10 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    char v33 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v36 = v10;
    while (v15 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v17 = *(void *)(v10 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v8, a3 + v16 + v17 * v15, v9);
      uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v18(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
        goto LABEL_17;
      }
      unint64_t v35 = v18;
      uint64_t v19 = a3;
      unint64_t v20 = v8;
      uint64_t v21 = v45;
      uint64_t v22 = *v44;
      uint64_t v23 = v20;
      (*v44)(v45);
      char v24 = v42(v21);
      if (v4)
      {
        (*v33)(v45, v9);
        swift_bridgeObjectRelease();
        return swift_release();
      }
      if (v24)
      {
        ((void (*)(char *, char *, uint64_t))v22)(v37, v45, v9);
        uint64_t v25 = v46;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v34 = 0;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_25AB67C54(0, *(void *)(v25 + 16) + 1, 1);
          uint64_t v25 = v46;
        }
        unint64_t v28 = *(void *)(v25 + 16);
        unint64_t v27 = *(void *)(v25 + 24);
        unint64_t v29 = v28 + 1;
        if (v28 >= v27 >> 1)
        {
          unint64_t v31 = v28 + 1;
          sub_25AB67C54(v27 > 1, v28 + 1, 1);
          unint64_t v29 = v31;
          uint64_t v25 = v46;
        }
        *(void *)(v25 + 16) = v29;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v22)(v25 + v16 + v28 * v17, v37, v9);
        uint64_t v46 = v25;
        uint64_t v4 = v34;
      }
      else
      {
        uint64_t result = ((uint64_t (*)(char *, uint64_t))*v33)(v45, v9);
      }
      a3 = v19;
      ++v15;
      uint64_t v8 = v23;
      uint64_t v10 = v36;
      if (v38 == v15)
      {
        v35(v23, 1, 1, v9);
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_17:
    swift_bridgeObjectRelease();
    sub_25AB18FAC((uint64_t)v8, &qword_26A49FD30);
    return v46;
  }
  return result;
}

uint64_t sub_25ABAB064()
{
  qword_26A4A0F38 = sub_25AC32CF0();
  unk_26A4A0F40 = MEMORY[0x263F15350];
  __swift_allocate_boxed_opaque_existential_1(qword_26A4A0F20);
  return sub_25AC32CE0();
}

void sub_25ABAB0A4()
{
  off_26A4A0F48 = (_UNKNOWN *)MEMORY[0x263F8EE80];
}

uint64_t sub_25ABAB0B8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0F68);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 16) = 0;
  qword_26A4A0F50 = result;
  return result;
}

BOOL sub_25ABAB0F0(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v38 = a1;
  uint64_t v39 = sub_25AC32300();
  uint64_t v6 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD30);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a3 + 16);
  if (v12)
  {
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v13 = v6 + 16;
    os_log_type_t v37 = v14;
    uint64_t v15 = a3 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
    uint64_t v16 = *(void *)(v13 + 56);
    uint64_t v34 = v8;
    unint64_t v35 = (uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 32);
    uint64_t v31 = v16;
    unint64_t v32 = (void (**)(char *))(v13 + 16);
    char v33 = (void (**)(char *, uint64_t))(v13 - 8);
    v29[2] = a3;
    swift_bridgeObjectRetain();
    uint64_t v36 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 40);
    v29[1] = (v13 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      uint64_t v17 = v39;
      uint64_t v18 = v13;
      v37(v11, v15, v39);
      uint64_t v19 = *v36;
      (*v36)(v11, 0, 1, v17);
      int v20 = (*v35)(v11, 1, v17);
      BOOL v21 = v20 != 1;
      if (v20 == 1) {
        break;
      }
      uint64_t v30 = v19;
      uint64_t v22 = v11;
      uint64_t v23 = v34;
      char v24 = v22;
      (*v32)(v34);
      char v25 = v38(v23);
      if (v4)
      {
        (*v33)(v23, v17);
        swift_bridgeObjectRelease();
        return v21;
      }
      char v26 = v25;
      (*v33)(v23, v17);
      if (v26) {
        break;
      }
      v15 += v31;
      --v12;
      uint64_t v4 = 0;
      uint64_t v13 = v18;
      uint64_t v11 = v24;
      if (!v12)
      {
        v30(v24, 1, 1, v39);
        goto LABEL_9;
      }
    }
  }
  else
  {
    unint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    v27(v11, 1, 1, v39);
LABEL_9:
    BOOL v21 = 0;
  }
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t type metadata accessor for SessionManager()
{
  return self;
}

double sub_25ABAB3F4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_25AB8D62C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_25ABAF854();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_25ABB1C94((long long *)(*(void *)(v11 + 56) + 48 * v8), a3);
    sub_25ABADFDC(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    a3[1] = 0u;
    a3[2] = 0u;
    *a3 = 0u;
  }
  return result;
}

uint64_t sub_25ABAB500(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_25AB8D62C(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_25ABAFC50();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_25ABAE1C8(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_25ABAB5D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_25AB8D62C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    v13[0] = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_25ABAFE08();
      uint64_t v11 = v13[0];
    }
    swift_bridgeObjectRelease();
    memmove(a3, (const void *)(*(void *)(v11 + 56) + 296 * v8), 0x128uLL);
    sub_25ABAE3A0(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
    return nullsub_1(a3);
  }
  else
  {
    sub_25AB36168((uint64_t)v13);
    return sub_25AB36198((uint64_t)v13, (uint64_t)a3);
  }
}

uint64_t sub_25ABAB6D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_25AB8D62C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_25ABB0004();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t State = type metadata accessor for IdentityAnalyticsManager.LoadState(0);
    uint64_t v20 = *(void *)(State - 8);
    sub_25ABB2178(v12 + *(void *)(v20 + 72) * v8, a3);
    sub_25ABAE584(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = State;
  }
  else
  {
    uint64_t v18 = type metadata accessor for IdentityAnalyticsManager.LoadState(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_25ABAB860(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_25AB8D62C(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_25ABB0930();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 16 * v6);
  sub_25ABAE794(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_25ABAB948(uint64_t a1, char a2)
{
  return sub_25ABABCB0(a1, a2, (uint64_t *)&unk_26A4A0F80, (void (*)(uint64_t, unsigned char *))sub_25AB1DDC8);
}

uint64_t sub_25ABAB968(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0F60);
  char v37 = a2;
  uint64_t v6 = sub_25AC356C0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35) {
      break;
    }
    uint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v35) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v36 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v35) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v36 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    uint64_t v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    char v25 = (long long *)(*(void *)(v5 + 56) + 48 * v17);
    if (v37)
    {
      sub_25ABB1C94(v25, v38);
    }
    else
    {
      sub_25ABB1CAC((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_25AC35970();
    sub_25AC34F20();
    uint64_t result = sub_25AC359D0();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    void *v15 = v24;
    v15[1] = v23;
    uint64_t result = (uint64_t)sub_25ABB1C94(v38, (_OWORD *)(*(void *)(v7 + 56) + 48 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v19 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v19 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25ABABC90(uint64_t a1, char a2)
{
  return sub_25ABABCB0(a1, a2, (uint64_t *)&unk_26A4A0F70, (void (*)(uint64_t, unsigned char *))sub_25AB1DDC8);
}

uint64_t sub_25ABABCB0(uint64_t a1, char a2, uint64_t *a3, void (*a4)(uint64_t, unsigned char *))
{
  uint64_t v6 = v4;
  uint64_t v8 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v39 = a2;
  uint64_t v9 = sub_25AC356C0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v38 = v8 + 64;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v8 + 64);
  int64_t v37 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v14 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v16 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v37) {
      break;
    }
    uint64_t v22 = (void *)(v8 + 64);
    unint64_t v23 = *(void *)(v38 + 8 * v21);
    ++v16;
    if (!v23)
    {
      int64_t v16 = v21 + 1;
      if (v21 + 1 >= v37) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v38 + 8 * v16);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_34:
          swift_release();
          if ((v39 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v38 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v16 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v16 >= v37) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v38 + 8 * v16);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v16 = v24;
      }
    }
LABEL_21:
    unint64_t v13 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_22:
    char v25 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v20);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v28 = *(void *)(v8 + 56) + 32 * v20;
    if (v39)
    {
      a4(v28, v40);
    }
    else
    {
      sub_25AB18F50(v28, (uint64_t)v40);
      swift_bridgeObjectRetain();
    }
    sub_25AC35970();
    sub_25AC34F20();
    uint64_t result = sub_25AC359D0();
    uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v30 = result & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v14 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v30) & ~*(void *)(v14 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v34 = v31 == v33;
        if (v31 == v33) {
          unint64_t v31 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v14 + 8 * v31);
      }
      while (v35 == -1);
      unint64_t v17 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v10 + 48) + 16 * v17);
    *int64_t v18 = v27;
    v18[1] = v26;
    uint64_t result = ((uint64_t (*)(unsigned char *, unint64_t))a4)(v40, *(void *)(v10 + 56) + 32 * v17);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v8 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
  if (v36 >= 64) {
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v36;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v6 = v10;
  return result;
}

uint64_t sub_25ABABFE0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0FA8);
  char v36 = a2;
  uint64_t v6 = sub_25AC356C0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_25AC35970();
    sub_25AC34F20();
    uint64_t result = sub_25AC359D0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *int64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25ABAC2F8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A0FB0);
  char v44 = a2;
  uint64_t v6 = sub_25AC356C0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v42 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v40 = v2;
  int64_t v41 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      if (v44) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
    int64_t v27 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v27 >= v41) {
      break;
    }
    uint64_t v28 = v42;
    unint64_t v29 = v42[v27];
    ++v13;
    if (!v29)
    {
      int64_t v13 = v27 + 1;
      if (v27 + 1 >= v41) {
        goto LABEL_33;
      }
      unint64_t v29 = v42[v13];
      if (!v29)
      {
        int64_t v30 = v27 + 2;
        if (v30 >= v41)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v40;
          if ((v44 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v29 = v42[v30];
        if (!v29)
        {
          while (1)
          {
            int64_t v13 = v30 + 1;
            if (__OFADD__(v30, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v41) {
              goto LABEL_33;
            }
            unint64_t v29 = v42[v13];
            ++v30;
            if (v29) {
              goto LABEL_22;
            }
          }
        }
        int64_t v13 = v30;
      }
    }
LABEL_22:
    unint64_t v10 = (v29 - 1) & v29;
    unint64_t v18 = __clz(__rbit64(v29)) + (v13 << 6);
    if (v44)
    {
LABEL_10:
      unint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v22 = *(void *)(v5 + 56) + 296 * v18;
      uint64_t v24 = *(void *)v22;
      uint64_t v23 = *(void *)(v22 + 8);
      uint64_t v25 = *(void *)(v22 + 24);
      uint64_t v45 = *(void *)(v22 + 40);
      uint64_t v46 = *(void *)(v22 + 16);
      uint64_t v47 = *(void *)(v22 + 56);
      uint64_t v48 = *(void *)(v22 + 32);
      uint64_t v49 = *(void *)(v22 + 72);
      uint64_t v50 = *(void *)(v22 + 48);
      uint64_t v51 = *(void *)(v22 + 88);
      uint64_t v52 = *(void *)(v22 + 64);
      uint64_t v53 = *(void *)(v22 + 104);
      uint64_t v54 = *(void *)(v22 + 80);
      uint64_t v55 = *(void *)(v22 + 120);
      uint64_t v56 = *(void *)(v22 + 96);
      uint64_t v57 = *(void *)(v22 + 136);
      uint64_t v58 = *(void *)(v22 + 112);
      uint64_t v59 = *(void *)(v22 + 152);
      uint64_t v60 = *(void *)(v22 + 128);
      char v62 = *(unsigned char *)(v22 + 160);
      uint64_t v63 = *(void *)(v22 + 144);
      uint64_t v64 = *(void *)(v22 + 168);
      uint64_t v61 = *(void *)(v22 + 176);
      uint64_t v26 = *(void *)(v22 + 184);
      char v65 = *(unsigned char *)(v22 + 192);
      char v66 = *(unsigned char *)(v22 + 193);
      char v68 = *(unsigned char *)(v22 + 194);
      uint64_t v67 = *(void *)(v22 + 208);
      uint64_t v69 = *(void *)(v22 + 224);
      uint64_t v70 = *(void *)(v22 + 200);
      uint64_t v71 = *(void *)(v22 + 240);
      uint64_t v72 = *(void *)(v22 + 216);
      uint64_t v73 = *(void *)(v22 + 256);
      uint64_t v74 = *(void *)(v22 + 232);
      uint64_t v75 = *(void *)(v22 + 272);
      uint64_t v76 = *(void *)(v22 + 248);
      uint64_t v78 = *(void *)(v22 + 264);
      uint64_t v79 = *(void *)(v22 + 280);
      uint64_t v77 = *(void *)(v22 + 288);
      goto LABEL_24;
    }
LABEL_23:
    uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
    uint64_t v20 = *v31;
    uint64_t v21 = v31[1];
    memcpy(__dst, (const void *)(*(void *)(v5 + 56) + 296 * v18), 0x128uLL);
    uint64_t v78 = __dst[33];
    uint64_t v79 = __dst[35];
    uint64_t v76 = __dst[31];
    uint64_t v77 = __dst[36];
    uint64_t v74 = __dst[29];
    uint64_t v75 = __dst[34];
    uint64_t v72 = __dst[27];
    uint64_t v73 = __dst[32];
    uint64_t v69 = __dst[28];
    uint64_t v70 = __dst[25];
    uint64_t v71 = __dst[30];
    uint64_t v67 = __dst[26];
    char v68 = BYTE2(__dst[24]);
    char v65 = __dst[24];
    char v66 = BYTE1(__dst[24]);
    uint64_t v26 = __dst[23];
    char v62 = __dst[20];
    uint64_t v63 = __dst[18];
    uint64_t v64 = __dst[21];
    uint64_t v60 = __dst[16];
    uint64_t v61 = __dst[22];
    uint64_t v58 = __dst[14];
    uint64_t v59 = __dst[19];
    uint64_t v56 = __dst[12];
    uint64_t v57 = __dst[17];
    uint64_t v54 = __dst[10];
    uint64_t v55 = __dst[15];
    uint64_t v52 = __dst[8];
    uint64_t v53 = __dst[13];
    uint64_t v50 = __dst[6];
    uint64_t v51 = __dst[11];
    uint64_t v25 = __dst[3];
    uint64_t v48 = __dst[4];
    uint64_t v49 = __dst[9];
    uint64_t v45 = __dst[5];
    uint64_t v23 = __dst[1];
    uint64_t v46 = __dst[2];
    uint64_t v47 = __dst[7];
    uint64_t v24 = __dst[0];
    swift_bridgeObjectRetain();
    sub_25AB35A24((uint64_t)__dst);
LABEL_24:
    sub_25AC35970();
    sub_25AC34F20();
    uint64_t result = sub_25AC359D0();
    uint64_t v32 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v33 = result & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v11 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v33) & ~*(void *)(v11 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v37 = v34 == v36;
        if (v34 == v36) {
          unint64_t v34 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v11 + 8 * v34);
      }
      while (v38 == -1);
      unint64_t v14 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    void *v15 = v20;
    v15[1] = v21;
    uint64_t v16 = *(void *)(v7 + 56) + 296 * v14;
    *(void *)uint64_t v16 = v24;
    *(void *)(v16 + 8) = v23;
    *(void *)(v16 + 16) = v46;
    *(void *)(v16 + 24) = v25;
    *(void *)(v16 + 32) = v48;
    *(void *)(v16 + 40) = v45;
    *(void *)(v16 + 48) = v50;
    *(void *)(v16 + 56) = v47;
    *(void *)(v16 + 64) = v52;
    *(void *)(v16 + 72) = v49;
    *(void *)(v16 + 80) = v54;
    *(void *)(v16 + 88) = v51;
    *(void *)(v16 + 96) = v56;
    *(void *)(v16 + 104) = v53;
    *(void *)(v16 + 112) = v58;
    *(void *)(v16 + 120) = v55;
    *(void *)(v16 + 128) = v60;
    *(void *)(v16 + 136) = v57;
    *(void *)(v16 + 144) = v63;
    *(void *)(v16 + 152) = v59;
    *(unsigned char *)(v16 + 160) = v62;
    *(void *)(v16 + 168) = v64;
    *(void *)(v16 + 176) = v61;
    *(unsigned char *)(v16 + 192) = v65;
    *(unsigned char *)(v16 + 193) = v66;
    *(unsigned char *)(v16 + 194) = v68;
    *(void *)(v16 + 200) = v70;
    *(void *)(v16 + 208) = v67;
    *(void *)(v16 + 216) = v72;
    *(void *)(v16 + 224) = v69;
    *(void *)(v16 + 232) = v74;
    *(void *)(v16 + 240) = v71;
    *(void *)(v16 + 248) = v76;
    *(void *)(v16 + 256) = v73;
    *(void *)(v16 + 264) = v78;
    *(void *)(v16 + 272) = v75;
    *(void *)(v16 + 280) = v79;
    *(void *)(v16 + 288) = v77;
    *(void *)(v16 + 184) = v26;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  uint64_t v28 = v42;
  if ((v44 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v39 = 1 << *(unsigned char *)(v5 + 32);
  if (v39 >= 64) {
    bzero(v28, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v28 = -1 << v39;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25ABAC8F0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t State = type metadata accessor for IdentityAnalyticsManager.LoadState(0);
  uint64_t v42 = *(void *)(State - 8);
  MEMORY[0x270FA5388](State - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0FA0);
  int v43 = a2;
  uint64_t v9 = sub_25AC356C0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  int64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    uint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_25ABB2178(v30, (uint64_t)v7);
    }
    else
    {
      sub_25ABB2240(v30, (uint64_t)v7);
      swift_bridgeObjectRetain();
    }
    sub_25AC35970();
    sub_25AC34F20();
    uint64_t result = sub_25AC359D0();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *unint64_t v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_25ABB2178((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_25ABACC94(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0FD0);
  char v38 = a2;
  uint64_t v6 = sub_25AC356C0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  BOOL v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v11) {
      break;
    }
    unint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v37 + 8 * v14);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v14 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v37 + 8 * v14);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    unint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    long long v39 = *(_OWORD *)(*(void *)(v5 + 56) + v31);
    if ((v38 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_25AC35970();
    sub_25AC34F20();
    uint64_t result = sub_25AC359D0();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v17 == v28;
        if (v17 == v28) {
          unint64_t v17 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      unint64_t v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 16 * v18;
    unint64_t v20 = (void *)(*(void *)(v7 + 48) + v19);
    void *v20 = v34;
    v20[1] = v33;
    *(_OWORD *)(*(void *)(v7 + 56) + v19) = v39;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v24 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25ABACFA4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0FD8);
  char v36 = a2;
  uint64_t v6 = sub_25AC356C0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_25AC35970();
    sub_25AC34F20();
    uint64_t result = sub_25AC359D0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25ABAD2BC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0910);
  char v37 = a2;
  uint64_t v6 = sub_25AC356C0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_25AC35970();
    sub_25AC34F20();
    uint64_t result = sub_25AC359D0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25ABAD5C8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A0FC0);
  char v38 = a2;
  uint64_t v6 = sub_25AC356C0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v11) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v37 + 8 * v14);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v14 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v37 + 8 * v14);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    long long v39 = *(_OWORD *)(*(void *)(v5 + 56) + v31);
    if ((v38 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_25AC35970();
    sub_25AC34F20();
    uint64_t result = sub_25AC359D0();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v17 == v28;
        if (v17 == v28) {
          unint64_t v17 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      unint64_t v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 16 * v18;
    unint64_t v20 = (void *)(*(void *)(v7 + 48) + v19);
    void *v20 = v34;
    v20[1] = v33;
    *(_OWORD *)(*(void *)(v7 + 56) + v19) = v39;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  int64_t v24 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25ABAD8D8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0898);
  char v42 = a2;
  uint64_t v6 = sub_25AC356C0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_25AC35970();
    sub_25AC34F20();
    uint64_t result = sub_25AC359D0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *uint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    void *v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25ABADC00(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0918);
  char v45 = a2;
  uint64_t v54 = sub_25AC356C0();
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v6 = 1 << *(unsigned char *)(v5 + 32);
  int v43 = (void *)(v5 + 64);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v5 + 64);
  uint64_t v41 = v2;
  int64_t v42 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = v54 + 64;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  uint64_t v44 = v5;
  while (1)
  {
    if (v8)
    {
      uint64_t v46 = (v8 - 1) & v8;
      int64_t v47 = v11;
      unint64_t v20 = __clz(__rbit64(v8)) | (v11 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v42) {
      break;
    }
    unint64_t v22 = v43;
    unint64_t v23 = v43[v21];
    int64_t v24 = v11 + 1;
    if (!v23)
    {
      int64_t v24 = v11 + 2;
      if (v11 + 2 >= v42) {
        goto LABEL_33;
      }
      unint64_t v23 = v43[v24];
      if (!v23)
      {
        uint64_t v25 = v11 + 3;
        if (v11 + 3 >= v42)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v41;
          if ((v45 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = v43[v25];
        if (!v23)
        {
          while (1)
          {
            int64_t v24 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v24 >= v42) {
              goto LABEL_33;
            }
            unint64_t v23 = v43[v24];
            ++v25;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v24 = v11 + 3;
      }
    }
LABEL_30:
    uint64_t v46 = (v23 - 1) & v23;
    int64_t v47 = v24;
    unint64_t v20 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v30;
    uint64_t v32 = v30[1];
    uint64_t v33 = (uint64_t *)(*(void *)(v5 + 56) + 96 * v20);
    uint64_t v34 = v33[1];
    uint64_t v35 = v33[3];
    uint64_t v36 = v33[5];
    uint64_t v52 = v33[4];
    uint64_t v53 = v33[2];
    uint64_t v37 = v33[7];
    uint64_t v38 = v33[9];
    uint64_t v50 = v33[8];
    uint64_t v51 = v33[6];
    uint64_t v39 = v33[11];
    uint64_t v48 = *v33;
    uint64_t v49 = v33[10];
    if ((v45 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_25AC35970();
    sub_25AC34F20();
    uint64_t result = sub_25AC359D0();
    uint64_t v12 = -1 << *(unsigned char *)(v54 + 32);
    unint64_t v13 = result & ~v12;
    unint64_t v14 = v13 >> 6;
    if (((-1 << v13) & ~*(void *)(v9 + 8 * (v13 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v13) & ~*(void *)(v9 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v16 = v36;
      uint64_t v17 = v39;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v12) >> 6;
      uint64_t v16 = v36;
      uint64_t v17 = v39;
      do
      {
        if (++v14 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v14 == v27;
        if (v14 == v27) {
          unint64_t v14 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v9 + 8 * v14);
      }
      while (v29 == -1);
      unint64_t v15 = __clz(__rbit64(~v29)) + (v14 << 6);
    }
    *(void *)(v9 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v18 = (void *)(*(void *)(v54 + 48) + 16 * v15);
    *uint64_t v18 = v31;
    v18[1] = v32;
    uint64_t v19 = (void *)(*(void *)(v54 + 56) + 96 * v15);
    *uint64_t v19 = v48;
    v19[1] = v34;
    void v19[2] = v53;
    uint64_t v19[3] = v35;
    v19[4] = v52;
    v19[5] = v16;
    v19[6] = v51;
    v19[7] = v37;
    v19[8] = v50;
    v19[9] = v38;
    v19[10] = v49;
    v19[11] = v17;
    ++*(void *)(v54 + 16);
    uint64_t v5 = v44;
    unint64_t v8 = v46;
    int64_t v11 = v47;
  }
  swift_release();
  uint64_t v3 = v41;
  unint64_t v22 = v43;
  if ((v45 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v40 = 1 << *(unsigned char *)(v5 + 32);
  if (v40 >= 64) {
    bzero(v22, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v40;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v54;
  return result;
}

unint64_t sub_25ABADFDC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_25AC35520();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_25AC35970();
        swift_bridgeObjectRetain();
        sub_25AC34F20();
        uint64_t v11 = sub_25AC359D0();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          unint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          unint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            *unint64_t v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          uint64_t v17 = (long long *)(v16 + 48 * v3);
          uint64_t v18 = (long long *)(v16 + 48 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= v18 + 3))
          {
            long long v9 = *v18;
            long long v10 = v18[2];
            v17[1] = v18[1];
            v17[2] = v10;
            *uint64_t v17 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_25ABAE1C8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_25AC35520();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_25AC35970();
        swift_bridgeObjectRetain();
        sub_25AC34F20();
        uint64_t v9 = sub_25AC359D0();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          unint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            void *v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_25ABAE3A0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_25AC35520();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_25AC35970();
        swift_bridgeObjectRetain();
        sub_25AC34F20();
        uint64_t v9 = sub_25AC359D0();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t result = v14 + 296 * v3;
          unint64_t v15 = (const void *)(v14 + 296 * v6);
          if (v3 != v6 || (int64_t v3 = v6, result >= (unint64_t)v15 + 296))
          {
            uint64_t result = (unint64_t)memmove((void *)result, v15, 0x128uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  uint64_t *v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_25ABAE584(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_25AC35520();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_25AC35970();
        swift_bridgeObjectRetain();
        sub_25AC34F20();
        uint64_t v9 = sub_25AC359D0();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *unint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(type metadata accessor for IdentityAnalyticsManager.LoadState(0) - 8) + 72);
        int64_t v16 = v15 * v3;
        uint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    BOOL v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  uint64_t *v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_25ABAE794(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_25AC35520();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_25AC35970();
        swift_bridgeObjectRetain();
        sub_25AC34F20();
        uint64_t v9 = sub_25AC359D0();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          int64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            _OWORD *v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *int64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_25ABAE96C(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_25AB8D62C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_25ABAFA60((uint64_t *)&unk_26A4A0F80, (void (*)(unsigned char *, uint64_t))sub_25AB1DDC8);
      goto LABEL_7;
    }
    sub_25ABABCB0(v15, a4 & 1, (uint64_t *)&unk_26A4A0F80, (void (*)(uint64_t, unsigned char *))sub_25AB1DDC8);
    unint64_t v21 = sub_25AB8D62C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_25AC358B0();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    return sub_25AB1DDC8(a1, v19);
  }
LABEL_13:
  sub_25ABAF6C0(v12, a2, a3, a1, v18);
  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_25ABAEAF8(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_25AB8D62C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_25ABAF854();
      goto LABEL_7;
    }
    sub_25ABAB968(v15, a4 & 1);
    unint64_t v21 = sub_25AB8D62C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_25AC358B0();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 48 * v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    return sub_25ABB1C94(a1, v19);
  }
LABEL_13:
  sub_25ABAF72C(v12, a2, a3, a1, v18);
  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_25ABAEC50(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_25AB8D62C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_25ABAFC50();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_unknownObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_25ABABFE0(v15, a4 & 1);
  unint64_t v21 = sub_25AB8D62C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_25AC358B0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v26;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25ABAEDC0(const void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_25AB8D62C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_25ABAFE08();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 296 * v12;
      return sub_25ABB22A4((uint64_t)a1, v19);
    }
    goto LABEL_13;
  }
  sub_25ABAC2F8(v15, a4 & 1);
  unint64_t v21 = sub_25AB8D62C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = sub_25AC358B0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  memcpy((void *)(v18[7] + 296 * v12), a1, 0x128uLL);
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  void v18[2] = v26;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25ABAEF4C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_25AB8D62C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_25ABB0004();
      goto LABEL_7;
    }
    sub_25ABAC8F0(v15, a4 & 1);
    unint64_t v22 = sub_25AB8D62C(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      unint64_t v12 = v22;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_25AC358B0();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = v19
        + *(void *)(*(void *)(type metadata accessor for IdentityAnalyticsManager.LoadState(0) - 8) + 72) * v12;
    return sub_25ABB21DC(a1, v20);
  }
LABEL_13:
  sub_25ABAF79C(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_25ABAF0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_25AB8D62C(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= result && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= result && (a5 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_25ABB0270();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      unint64_t v21 = (void *)(v20[7] + 16 * v14);
      *unint64_t v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_25ABACC94(result, a5 & 1);
  uint64_t result = sub_25AB8D62C(a3, a4);
  if ((v18 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_25AC358B0();
    __break(1u);
    return result;
  }
  unint64_t v14 = result;
  uint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  char v23 = (uint64_t *)(v20[6] + 16 * v14);
  *char v23 = a3;
  v23[1] = a4;
  uint64_t v24 = (void *)(v20[7] + 16 * v14);
  *uint64_t v24 = a1;
  v24[1] = a2;
  uint64_t v25 = v20[2];
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v20[2] = v27;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25ABAF230(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_25AB8D62C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_25ABB041C();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_25ABACFA4(v15, a4 & 1);
  unint64_t v21 = sub_25AB8D62C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_25AC358B0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v23 = (uint64_t *)(v18[6] + 16 * v12);
  *char v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v26;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25ABAF3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_25AB8D62C(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_25ABB0930();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      unint64_t v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *unint64_t v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_25ABAD8D8(v17, a5 & 1);
  unint64_t v23 = sub_25AB8D62C(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_25AC358B0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  BOOL v25 = (uint64_t *)(v20[6] + 16 * v14);
  *BOOL v25 = a3;
  v25[1] = a4;
  uint64_t v26 = (void *)(v20[7] + 16 * v14);
  *uint64_t v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v20[2] = v29;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25ABAF528(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_25AB8D62C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_25ABB0AEC();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 96 * v12;
      return sub_25ABB211C((uint64_t)a1, v19);
    }
    goto LABEL_13;
  }
  sub_25ABADC00(v15, a4 & 1);
  unint64_t v21 = sub_25AB8D62C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = sub_25AC358B0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v23 = a2;
  v23[1] = a3;
  char v24 = (_OWORD *)(v18[7] + 96 * v12);
  long long v25 = a1[1];
  *char v24 = *a1;
  v24[1] = v25;
  long long v26 = a1[2];
  long long v27 = a1[3];
  long long v28 = a1[5];
  v24[4] = a1[4];
  void v24[5] = v28;
  void v24[2] = v26;
  v24[3] = v27;
  uint64_t v29 = v18[2];
  BOOL v30 = __OFADD__(v29, 1);
  uint64_t v31 = v29 + 1;
  if (v30)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  void v18[2] = v31;
  return swift_bridgeObjectRetain();
}

_OWORD *sub_25ABAF6C0(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v6 = (void *)(a5[6] + 16 * a1);
  void *v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_25AB1DDC8(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

_OWORD *sub_25ABAF72C(unint64_t a1, uint64_t a2, uint64_t a3, long long *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v6 = (void *)(a5[6] + 16 * a1);
  void *v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_25ABB1C94(a4, (_OWORD *)(a5[7] + 48 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_25ABAF79C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t State = type metadata accessor for IdentityAnalyticsManager.LoadState(0);
  uint64_t result = sub_25ABB2178(a4, v9 + *(void *)(*(void *)(State - 8) + 72) * a1);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

void *sub_25ABAF834()
{
  return sub_25ABAFA60((uint64_t *)&unk_26A4A0F80, (void (*)(unsigned char *, uint64_t))sub_25AB1DDC8);
}

void *sub_25ABAF854()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0F60);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25AC356B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  long long v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 48 * v15;
    sub_25ABB1CAC(*(void *)(v2 + 56) + 48 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    sub_25ABB1C94(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_25ABAFA40()
{
  return sub_25ABAFA60((uint64_t *)&unk_26A4A0F70, (void (*)(unsigned char *, uint64_t))sub_25AB1DDC8);
}

void *sub_25ABAFA60(uint64_t *a1, void (*a2)(unsigned char *, uint64_t))
{
  uint64_t v4 = v2;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v5 = *v2;
  uint64_t v6 = sub_25AC356B0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v4 = v7;
    return result;
  }
  long long v27 = v4;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v24);
    ++v11;
    if (!v25)
    {
      int64_t v11 = v24 + 1;
      if (v24 + 1 >= v15) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v28 + 8 * v11);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = 32 * v17;
    sub_25AB18F50(*(void *)(v5 + 56) + 32 * v17, (uint64_t)v29);
    unint64_t v23 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v23 = v20;
    v23[1] = v21;
    a2(v29, *(void *)(v7 + 56) + v22);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v4 = v27;
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v28 + 8 * v26);
  if (v25)
  {
    int64_t v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v11);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_25ABAFC50()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0FA8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25AC356B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_unknownObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25ABAFE08()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A0FB0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25AC356B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 296 * v15;
    memcpy(__dst, (const void *)(*(void *)(v2 + 56) + 296 * v15), 0x128uLL);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v18;
    v21[1] = v19;
    memcpy((void *)(*(void *)(v4 + 56) + v20), __dst, 0x128uLL);
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_25AB35A24((uint64_t)__dst);
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_25ABB0004()
{
  uint64_t v1 = v0;
  uint64_t State = type metadata accessor for IdentityAnalyticsManager.LoadState(0);
  uint64_t v29 = *(void *)(State - 8);
  MEMORY[0x270FA5388](State - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0FA0);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_25AC356B0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  long long v27 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_25ABB2240(*(void *)(v5 + 56) + v21, (uint64_t)v4);
    int64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    *int64_t v22 = v19;
    v22[1] = v20;
    sub_25ABB2178((uint64_t)v4, *(void *)(v7 + 56) + v21);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_25ABB0270()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0FD0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25AC356B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25ABB041C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0FD8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25AC356B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25ABB05D4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0910);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25AC356B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25ABB0784()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4A0FC0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25AC356B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25ABB0930()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0898);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25AC356B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *int64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25ABB0AEC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0918);
  uint64_t v36 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_25AC356B0();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v36 = v3;
    return result;
  }
  uint64_t result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5) {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  }
  uint64_t v38 = v1 + 64;
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      goto LABEL_12;
    }
    int64_t v33 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v33 >= v37) {
      goto LABEL_26;
    }
    unint64_t v34 = *(void *)(v38 + 8 * v33);
    ++v7;
    if (!v34)
    {
      int64_t v7 = v33 + 1;
      if (v33 + 1 >= v37) {
        goto LABEL_26;
      }
      unint64_t v34 = *(void *)(v38 + 8 * v7);
      if (!v34) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v34 - 1) & v34;
    unint64_t v12 = __clz(__rbit64(v34)) + (v7 << 6);
LABEL_12:
    uint64_t v13 = 16 * v12;
    unint64_t v14 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v12);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    uint64_t v17 = 96 * v12;
    uint64_t v18 = (uint64_t *)(*(void *)(v1 + 56) + v17);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    uint64_t v21 = v18[2];
    uint64_t v22 = v18[3];
    uint64_t v23 = v18[4];
    uint64_t v24 = v18[5];
    uint64_t v25 = v18[6];
    uint64_t v26 = v18[7];
    uint64_t v27 = v18[8];
    uint64_t v28 = v18[9];
    uint64_t v29 = v18[10];
    uint64_t v30 = v18[11];
    uint64_t v31 = (void *)(*(void *)(v3 + 48) + v13);
    void *v31 = v16;
    v31[1] = v15;
    uint64_t v32 = (void *)(*(void *)(v3 + 56) + v17);
    void *v32 = v19;
    v32[1] = v20;
    id v32[2] = v21;
    v32[3] = v22;
    v32[4] = v23;
    v32[5] = v24;
    v32[6] = v25;
    v32[7] = v26;
    v32[8] = v27;
    v32[9] = v28;
    v32[10] = v29;
    v32[11] = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v35 = v33 + 2;
  if (v35 >= v37) {
    goto LABEL_26;
  }
  unint64_t v34 = *(void *)(v38 + 8 * v35);
  if (v34)
  {
    int64_t v7 = v35;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    if (v7 >= v37) {
      goto LABEL_26;
    }
    unint64_t v34 = *(void *)(v38 + 8 * v7);
    ++v35;
    if (v34) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_25ABB0D24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v4);
  uint64_t v16 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v6 = sub_25AC32220();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v10 = sub_25AC32300();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  if (qword_26A49F8B8 != -1) {
    swift_once();
  }
  os_unfair_lock_lock((os_unfair_lock_t)(qword_26A4A0F50 + 16));
  if (qword_26A49F7B0 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v10, (uint64_t)qword_26A4A1BA8);
  *(void *)&v17[0] = a1;
  *((void *)&v17[0] + 1) = a2;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F06E50], v6);
  sub_25AB25ABC();
  sub_25AC322F0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (qword_26A49F8A8 != -1) {
    swift_once();
  }
  __swift_project_boxed_opaque_existential_1(qword_26A4A0F20, qword_26A4A0F38);
  if (sub_25AC337E0())
  {
    __swift_project_boxed_opaque_existential_1(qword_26A4A0F20, qword_26A4A0F38);
    char v14 = sub_25AC337D0();
    if (qword_26A49F8B0 != -1) {
      swift_once();
    }
    memset(v17, 0, 48);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_25ABAAA10((uint64_t)v17, a1, a2);
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    char v14 = 0;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(qword_26A4A0F50 + 16));
  return v14 & 1;
}

void sub_25ABB1340(uint64_t (*a1)(char *), uint64_t a2)
{
  uint64_t v48 = sub_25AC32300();
  uint64_t v4 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v49 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v6 = MEMORY[0x270FA5388](v40);
  uint64_t v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v38 = (uint64_t)v37 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49FD30);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A49F8B8 != -1) {
    swift_once();
  }
  int64_t v47 = v12;
  os_unfair_lock_lock((os_unfair_lock_t)(qword_26A4A0F50 + 16));
  if (qword_26A49F8A8 != -1) {
    swift_once();
  }
  sub_25AB59818((uint64_t)qword_26A4A0F20, (uint64_t)&v51);
  __swift_project_boxed_opaque_existential_1(&v51, *((uint64_t *)&v52 + 1));
  if (qword_26A49F7B0 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v48, (uint64_t)qword_26A4A1BA8);
  uint64_t v13 = sub_25AC337A0();
  v37[1] = v8;
  uint64_t v14 = sub_25ABAACA4(a1, a2, v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t v37[2] = v14;
  if (v15)
  {
    uint64_t v46 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    unint64_t v16 = v14 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v17 = *(void *)(v4 + 72);
    int v43 = (void (**)(char *, char *, uint64_t))(v4 + 32);
    uint64_t v44 = (unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
    uint64_t v41 = v17;
    int64_t v42 = (void (**)(char *, uint64_t))(v4 + 8);
    swift_bridgeObjectRetain();
    char v45 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v37[0] = (v4 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = v47;
    uint64_t v19 = v48;
    uint64_t v39 = v4 + 16;
    uint64_t v20 = v49;
    while (1)
    {
      v46(v18, v16, v19);
      uint64_t v21 = *v45;
      (*v45)(v18, 0, 1, v19);
      if ((*v44)(v18, 1, v19) == 1) {
        break;
      }
      (*v43)(v20, v18, v19);
      __swift_project_boxed_opaque_existential_1(qword_26A4A0F20, qword_26A4A0F38);
      if (sub_25AC337D0())
      {
        if (qword_26A49F8B0 != -1) {
          swift_once();
        }
        uint64_t v22 = sub_25AC32270();
        uint64_t v24 = v23;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        unint64_t v25 = sub_25AB8D62C(v22, v24);
        LOBYTE(v22) = v26;
        swift_bridgeObjectRelease();
        if (v22)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v28 = off_26A4A0F48;
          uint64_t v50 = off_26A4A0F48;
          off_26A4A0F48 = (_UNKNOWN *)0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_25ABAF854();
            uint64_t v28 = v50;
          }
          swift_bridgeObjectRelease();
          sub_25ABB1C94((long long *)(v28[7] + 48 * v25), &v51);
          sub_25ABADFDC(v25, (uint64_t)v28);
          off_26A4A0F48 = v28;
          swift_bridgeObjectRelease();
        }
        else
        {
          long long v52 = 0u;
          long long v53 = 0u;
          long long v51 = 0u;
        }
        swift_bridgeObjectRelease();
        sub_25AB18FAC((uint64_t)&v51, &qword_26A4A0F58);
        swift_endAccess();
      }
      uint64_t v19 = v48;
      (*v42)(v49, v48);
      v16 += v41;
      --v15;
      uint64_t v18 = v47;
      if (!v15)
      {
        v21(v47, 1, 1, v48);
        break;
      }
    }
  }
  else
  {
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    swift_bridgeObjectRetain();
    v29(v47, 1, 1, v48);
  }
  swift_bridgeObjectRelease_n();
  if (qword_26A49F7E0 != -1) {
    swift_once();
  }
  uint64_t v30 = __swift_project_value_buffer(v40, (uint64_t)qword_26A4A1C88);
  uint64_t v31 = v38;
  sub_25AB150E0(v30, v38);
  uint64_t v32 = sub_25AC345E0();
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
  {
    sub_25AB18FAC(v31, &qword_26A49F9A0);
  }
  else
  {
    unint64_t v34 = sub_25AC345C0();
    os_log_type_t v35 = sub_25AC352D0();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl(&dword_25AB11000, v34, v35, "All sessions were deleted", v36, 2u);
      MEMORY[0x261151C20](v36, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(qword_26A4A0F50 + 16));
}

_OWORD *sub_25ABB1C94(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_25ABB1CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

BOOL sub_25ABB1D10(uint64_t (*a1)(char *), uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v4);
  if (qword_26A49F8B8 != -1) {
    swift_once();
  }
  os_unfair_lock_lock((os_unfair_lock_t)(qword_26A4A0F50 + 16));
  if (qword_26A49F8A8 != -1) {
    swift_once();
  }
  sub_25AB59818((uint64_t)qword_26A4A0F20, (uint64_t)v9);
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  if (qword_26A49F7B0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_25AC32300();
  __swift_project_value_buffer(v5, (uint64_t)qword_26A4A1BA8);
  uint64_t v6 = sub_25AC337A0();
  BOOL v7 = sub_25ABAB0F0(a1, a2, v6);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  os_unfair_lock_unlock((os_unfair_lock_t)(qword_26A4A0F50 + 16));
  return v7;
}

uint64_t sub_25ABB211C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_25ABB2178(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for IdentityAnalyticsManager.LoadState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 32))(a2, a1, State);
  return a2;
}

uint64_t sub_25ABB21DC(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for IdentityAnalyticsManager.LoadState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 40))(a2, a1, State);
  return a2;
}

uint64_t sub_25ABB2240(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for IdentityAnalyticsManager.LoadState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 16))(a2, a1, State);
  return a2;
}

uint64_t sub_25ABB22A4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_25ABB2300()
{
  type metadata accessor for GlobalState();
  uint64_t v0 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0F68);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  v0[2] = v1;
  uint64_t result = sub_25ABB26C8();
  v0[3] = result;
  v0[4] = v3;
  qword_26A4A1E08 = (uint64_t)v0;
  return result;
}

unint64_t sub_25ABB2360(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0910);
    long long v2 = (void *)sub_25AC356D0();
  }
  else
  {
    long long v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v31 = v1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(v1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(v1 + 64);
  uint64_t v6 = &v37;
  int64_t v30 = (unint64_t)(63 - v4) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = &qword_26A4A0140;
  uint64_t v10 = MEMORY[0x263F8EE58] + 8;
  while (1)
  {
    if (v5)
    {
      uint64_t v32 = (v5 - 1) & v5;
      int64_t v33 = v8;
      unint64_t v16 = __clz(__rbit64(v5)) | (v8 << 6);
    }
    else
    {
      int64_t v17 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        goto LABEL_37;
      }
      if (v17 >= v30)
      {
LABEL_33:
        sub_25AB84B08();
        return (unint64_t)v2;
      }
      unint64_t v18 = *(void *)(v31 + 8 * v17);
      int64_t v19 = v8 + 1;
      if (!v18)
      {
        int64_t v19 = v8 + 2;
        if (v8 + 2 >= v30) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v31 + 8 * v19);
        if (!v18)
        {
          int64_t v19 = v8 + 3;
          if (v8 + 3 >= v30) {
            goto LABEL_33;
          }
          unint64_t v18 = *(void *)(v31 + 8 * v19);
          if (!v18)
          {
            int64_t v19 = v8 + 4;
            if (v8 + 4 >= v30) {
              goto LABEL_33;
            }
            unint64_t v18 = *(void *)(v31 + 8 * v19);
            if (!v18)
            {
              uint64_t v20 = v8 + 5;
              if (v8 + 5 >= v30) {
                goto LABEL_33;
              }
              unint64_t v18 = *(void *)(v31 + 8 * v20);
              if (!v18)
              {
                while (1)
                {
                  int64_t v19 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_38;
                  }
                  if (v19 >= v30) {
                    goto LABEL_33;
                  }
                  unint64_t v18 = *(void *)(v31 + 8 * v19);
                  ++v20;
                  if (v18) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v19 = v8 + 5;
            }
          }
        }
      }
LABEL_26:
      uint64_t v32 = (v18 - 1) & v18;
      int64_t v33 = v19;
      unint64_t v16 = __clz(__rbit64(v18)) + (v19 << 6);
    }
    uint64_t v21 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v16);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    sub_25AB18F50(*(void *)(v1 + 56) + 32 * v16, (uint64_t)v6);
    v36[0] = v23;
    v36[1] = v22;
    sub_25AB18F50((uint64_t)v6, (uint64_t)v35);
    swift_bridgeObjectRetain_n();
    sub_25AB18FAC((uint64_t)v36, v9);
    if (!swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      sub_25AB84B08();
      swift_release();
      return 0;
    }
    unint64_t result = sub_25AB8D62C(v23, v22);
    unint64_t v24 = result;
    if (v25)
    {
      uint64_t v11 = v10;
      uint64_t v12 = v6;
      uint64_t v13 = v1;
      uint64_t v14 = v9;
      uint64_t v15 = (uint64_t *)(v2[6] + 16 * result);
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t *v15 = v23;
      v15[1] = v22;
      uint64_t v9 = v14;
      uint64_t v1 = v13;
      uint64_t v6 = v12;
      uint64_t v10 = v11;
      *(void *)(v2[7] + 8 * v24) = v34;
      goto LABEL_8;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v26 = (uint64_t *)(v2[6] + 16 * result);
    *char v26 = v23;
    v26[1] = v22;
    *(void *)(v2[7] + 8 * result) = v34;
    uint64_t v27 = v2[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_36;
    }
    v2[2] = v29;
LABEL_8:
    unint64_t v5 = v32;
    int64_t v8 = v33;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_25ABB26C8()
{
  v24[1] = *MEMORY[0x263EF8340];
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  uint64_t v1 = MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  unint64_t v5 = (char *)v24 - v4;
  uint64_t v6 = sub_25AC34EA0();
  MEMORY[0x270FA5388](v6 - 8);
  int64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[0] = 37;
  uint64_t v9 = sub_25AC350C0();
  *(void *)(v9 + 16) = 37;
  *(_OWORD *)(v9 + 48) = 0u;
  *(void *)(v9 + 61) = 0;
  *(_OWORD *)(v9 + 32) = 0u;
  if (sysctlbyname("kern.bootsessionuuid", (void *)(v9 + 32), v24, 0, 0))
  {
    swift_bridgeObjectRelease();
    if (qword_26A49F808 != -1) {
      swift_once();
    }
    uint64_t v10 = __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1D00);
    sub_25AB150E0(v10, (uint64_t)v3);
    uint64_t v11 = sub_25AC345E0();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v3, 1, v11) == 1)
    {
      sub_25AB18FAC((uint64_t)v3, &qword_26A49F9A0);
    }
    else
    {
      unint64_t v18 = sub_25AC345C0();
      os_log_type_t v19 = sub_25AC352C0();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v20 = 0;
        _os_log_impl(&dword_25AB11000, v18, v19, "Could not retrieve boot session UUID", v20, 2u);
        MEMORY[0x261151C20](v20, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v12 + 8))(v3, v11);
    }
  }
  else
  {
    sub_25AC34E80();
    uint64_t result = sub_25ABB2AD0(v9, v8);
    if (v14) {
      return result;
    }
    if (qword_26A49F808 != -1) {
      swift_once();
    }
    uint64_t v15 = __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1D00);
    sub_25AB150E0(v15, (uint64_t)v5);
    uint64_t v16 = sub_25AC345E0();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v5, 1, v16) == 1)
    {
      sub_25AB18FAC((uint64_t)v5, &qword_26A49F9A0);
    }
    else
    {
      uint64_t v21 = sub_25AC345C0();
      os_log_type_t v22 = sub_25AC352C0();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl(&dword_25AB11000, v21, v22, "Could not create string from boot session UUID", v23, 2u);
        MEMORY[0x261151C20](v23, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v16);
    }
  }
  return 0;
}

uint64_t sub_25ABB2AD0(uint64_t a1, char *a2)
{
  uint64_t v4 = sub_25AC34EA0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  int64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v24 - v9;
  sub_25AC34E70();
  char v11 = sub_25AC34E60();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v10, v4);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, a2, v4);
  if (v11)
  {
    v12(v8, v4);
    goto LABEL_4;
  }
  sub_25AC34E80();
  char v13 = sub_25AC34E60();
  v12(v10, v4);
  v12(v8, v4);
  if (v13)
  {
LABEL_4:
    uint64_t v14 = sub_25ABB32F4(0, a1);
    if ((v15 & 1) == 0)
    {
      if ((v14 & 0x8000000000000000) == 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = sub_25AC34EE0();
        uint64_t v18 = v17;
        swift_unknownObjectRelease();
        if (v18)
        {
          sub_25AC34E70();
          char v19 = sub_25AC34E60();
          v12(v10, v4);
          if (v19 & 1) != 0 || (sub_25AC35570())
          {
            swift_bridgeObjectRelease();
LABEL_15:
            v12(a2, v4);
            return v16;
          }
          swift_bridgeObjectRelease();
        }
        goto LABEL_11;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_18;
  }
LABEL_11:
  uint64_t v20 = sub_25ABB32F4(0, a1);
  if ((v21 & 1) == 0)
  {
    id v22 = objc_msgSend(objc_allocWithZone(NSString), sel_initWithBytes_length_encoding_, a1 + 32, v20, sub_25AC34E90());
    swift_bridgeObjectRelease();
    if (v22)
    {
      uint64_t v16 = sub_25AC34E40();
    }
    else
    {
      uint64_t v16 = 0;
    }
    goto LABEL_15;
  }
LABEL_18:
  uint64_t result = sub_25AC35680();
  __break(1u);
  return result;
}

uint64_t sub_25ABB2DF4@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t result = sub_25AC35200();
  if (v2) {
    return result;
  }
  unint64_t v6 = sub_25ABB39BC();
  uint64_t v7 = sub_25ABB4048(a1);
  uint64_t v50 = a2;
  int64_t v8 = self;
  swift_bridgeObjectRetain();
  id v9 = objc_msgSend(v8, sel_standardUserDefaults);
  uint64_t v10 = sub_25AC34D90();
  uint64_t v11 = v7;
  uint64_t v12 = (void *)v10;
  uint64_t v55 = v11;
  swift_bridgeObjectRelease();
  char v13 = (void *)sub_25AC34E10();
  objc_msgSend(v9, sel_setValue_forKey_, v12, v13);

  uint64_t v51 = a1 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(a1 + 64);
  int64_t v52 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v17 = 0;
  uint64_t v18 = (void *)MEMORY[0x263F8EE80];
  unint64_t v53 = v6;
  uint64_t v54 = a1;
  while (1)
  {
    if (v16)
    {
      unint64_t v20 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      int64_t v56 = v17;
      unint64_t v21 = v20 | (v17 << 6);
      uint64_t v22 = v55;
    }
    else
    {
      int64_t v23 = v17 + 1;
      uint64_t v22 = v55;
      if (__OFADD__(v17, 1)) {
        goto LABEL_51;
      }
      if (v23 >= v52)
      {
LABEL_47:
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t result = swift_bridgeObjectRelease();
        *uint64_t v50 = v18;
        return result;
      }
      unint64_t v24 = *(void *)(v51 + 8 * v23);
      int64_t v25 = v17 + 1;
      if (!v24)
      {
        int64_t v25 = v17 + 2;
        if (v17 + 2 >= v52) {
          goto LABEL_47;
        }
        unint64_t v24 = *(void *)(v51 + 8 * v25);
        if (!v24)
        {
          int64_t v25 = v17 + 3;
          if (v17 + 3 >= v52) {
            goto LABEL_47;
          }
          unint64_t v24 = *(void *)(v51 + 8 * v25);
          if (!v24)
          {
            int64_t v25 = v17 + 4;
            if (v17 + 4 >= v52) {
              goto LABEL_47;
            }
            unint64_t v24 = *(void *)(v51 + 8 * v25);
            if (!v24)
            {
              int64_t v25 = v17 + 5;
              if (v17 + 5 >= v52) {
                goto LABEL_47;
              }
              unint64_t v24 = *(void *)(v51 + 8 * v25);
              if (!v24)
              {
                uint64_t v26 = v17 + 6;
                if (v17 + 6 >= v52) {
                  goto LABEL_47;
                }
                unint64_t v24 = *(void *)(v51 + 8 * v26);
                if (!v24)
                {
                  while (1)
                  {
                    int64_t v25 = v26 + 1;
                    if (__OFADD__(v26, 1)) {
                      goto LABEL_52;
                    }
                    if (v25 >= v52) {
                      goto LABEL_47;
                    }
                    unint64_t v24 = *(void *)(v51 + 8 * v25);
                    ++v26;
                    if (v24) {
                      goto LABEL_26;
                    }
                  }
                }
                int64_t v25 = v17 + 6;
              }
            }
          }
        }
      }
LABEL_26:
      unint64_t v16 = (v24 - 1) & v24;
      int64_t v56 = v25;
      unint64_t v21 = __clz(__rbit64(v24)) + (v25 << 6);
    }
    uint64_t v27 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v21);
    uint64_t v29 = *v27;
    uint64_t v28 = v27[1];
    uint64_t v30 = *(void *)(v6 + 16);
    swift_bridgeObjectRetain();
    if (v30 && (unint64_t v31 = sub_25AB8D62C(v29, v28), (v32 & 1) != 0))
    {
      uint64_t v57 = *(void *)(*(void *)(v6 + 56) + 8 * v31);
      if (!*(void *)(v22 + 16)) {
        goto LABEL_30;
      }
    }
    else
    {
      uint64_t v57 = 0;
      if (!*(void *)(v22 + 16))
      {
LABEL_30:
        uint64_t v33 = 0;
        goto LABEL_36;
      }
    }
    swift_bridgeObjectRetain();
    unint64_t v34 = sub_25AB8D62C(v29, v28);
    uint64_t v33 = (v35 & 1) != 0 ? *(void *)(*(void *)(v22 + 56) + 8 * v34) : 0;
    swift_bridgeObjectRelease();
LABEL_36:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v38 = sub_25AB8D62C(v29, v28);
    uint64_t v39 = v18[2];
    BOOL v40 = (v37 & 1) == 0;
    uint64_t v41 = v39 + v40;
    if (__OFADD__(v39, v40)) {
      break;
    }
    char v42 = v37;
    if (v18[3] >= v41)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v37) {
          goto LABEL_5;
        }
      }
      else
      {
        sub_25ABB0784();
        if (v42) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      sub_25ABAD5C8(v41, isUniquelyReferenced_nonNull_native);
      unint64_t v43 = sub_25AB8D62C(v29, v28);
      if ((v42 & 1) != (v44 & 1)) {
        goto LABEL_53;
      }
      unint64_t v38 = v43;
      if (v42)
      {
LABEL_5:
        char v19 = (void *)(v18[7] + 16 * v38);
        *char v19 = v57;
        v19[1] = v33;
        goto LABEL_6;
      }
    }
    v18[(v38 >> 6) + 8] |= 1 << v38;
    char v45 = (uint64_t *)(v18[6] + 16 * v38);
    *char v45 = v29;
    v45[1] = v28;
    uint64_t v46 = (void *)(v18[7] + 16 * v38);
    *uint64_t v46 = v57;
    v46[1] = v33;
    uint64_t v47 = v18[2];
    BOOL v48 = __OFADD__(v47, 1);
    uint64_t v49 = v47 + 1;
    if (v48) {
      goto LABEL_50;
    }
    void v18[2] = v49;
    swift_bridgeObjectRetain();
LABEL_6:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v6 = v53;
    a1 = v54;
    int64_t v17 = v56;
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  uint64_t result = sub_25AC358B0();
  __break(1u);
  return result;
}

void sub_25ABB3288(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_25ABB3290()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GlobalState()
{
  return self;
}

uint64_t sub_25ABB32F4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(unsigned __int8 *)(a2 + 32) == a1) {
    return 0;
  }
  if (v2 == 1) {
    return 0;
  }
  if (*(unsigned __int8 *)(a2 + 33) == a1) {
    return 1;
  }
  uint64_t v4 = 0;
  uint64_t v5 = v2 - 2;
  while (v5 != v4)
  {
    int v6 = *(unsigned __int8 *)(a2 + 34 + v4++);
    if (v6 == a1) {
      return v4 + 1;
    }
  }
  return 0;
}

uint64_t sub_25ABB337C()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v1 = (void *)sub_25AC34E10();
  id v2 = objc_msgSend(v0, sel_objectForKey_, v1);

  if (v2)
  {
    sub_25AC35500();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_25AB259D8((uint64_t)v5, (uint64_t)v6, &qword_26A49FD00);
  if (v7)
  {
    uint64_t result = swift_dynamicCast();
    if (result) {
      return v4;
    }
  }
  else
  {
    sub_25AB18FAC((uint64_t)v6, &qword_26A49FD00);
    return 0;
  }
  return result;
}

id sub_25ABB3498()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v0);
  id v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0320);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  int v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  int64_t v8 = (char *)&v20 - v7;
  id result = objc_msgSend(self, sel_sharedConnection);
  if (result)
  {
    uint64_t v10 = result;
    id v11 = objc_msgSend(result, sel_passcodeCreationDate);

    if (v11)
    {
      sub_25AC323F0();

      uint64_t v12 = sub_25AC32420();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 0, 1, v12);
    }
    else
    {
      uint64_t v12 = sub_25AC32420();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    }
    sub_25AB259D8((uint64_t)v6, (uint64_t)v8, &qword_26A4A0320);
    sub_25AC32420();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1)
    {
      sub_25AB18FAC((uint64_t)v8, &qword_26A4A0320);
      if (qword_26A49F808 != -1) {
        swift_once();
      }
      uint64_t v14 = __swift_project_value_buffer(v0, (uint64_t)qword_26A4A1D00);
      sub_25AB150E0(v14, (uint64_t)v2);
      uint64_t v15 = sub_25AC345E0();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v2, 1, v15) == 1)
      {
        return (id)sub_25AB18FAC((uint64_t)v2, &qword_26A49F9A0);
      }
      else
      {
        int64_t v17 = sub_25AC345C0();
        os_log_type_t v18 = sub_25AC352C0();
        if (os_log_type_enabled(v17, v18))
        {
          char v19 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)char v19 = 0;
          _os_log_impl(&dword_25AB11000, v17, v18, "Could not fetch passcode last creation date", v19, 2u);
          MEMORY[0x261151C20](v19, -1, -1);
        }

        return (id)(*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v2, v15);
      }
    }
    else
    {
      sub_25AC323E0();
      return (id)(*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v8, v12);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25ABB3848()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v1 = (void *)sub_25AC34E10();
  id v2 = objc_msgSend(v0, sel_objectForKey_, v1);

  if (v2)
  {
    sub_25AC35500();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_25AB259D8((uint64_t)v7, (uint64_t)v8, &qword_26A49FD00);
  if (!v9)
  {
    sub_25AB18FAC((uint64_t)v8, &qword_26A49FD00);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  sub_25AB29558(v5, v6);
  uint64_t v3 = sub_25AB8BE38();
  sub_25AB16958(v5, v6);
  sub_25AB16958(v5, v6);
  return v3;
}

unint64_t sub_25ABB39BC()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v1 = (void *)sub_25AC34E10();
  id v2 = objc_msgSend(v0, sel_dictionaryForKey_, v1);

  if (!v2 || (uint64_t v3 = sub_25AC34DA0(), v2, v4 = sub_25ABB2360(v3), swift_bridgeObjectRelease(), !v4))
  {
    unint64_t v4 = sub_25AB71BB4(MEMORY[0x263F8EE78]);
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_25ABB3AB0(void *a1, uint64_t a2)
{
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v37);
  uint64_t v38 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a2 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a2 + 56);
  uint64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v41 = a2;
  swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  uint64_t v39 = MEMORY[0x263F8EE58] + 8;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v11 << 6);
    }
    else
    {
      uint64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1))
      {
        __break(1u);
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
      if (v14 >= v40) {
        goto LABEL_31;
      }
      unint64_t v15 = *(void *)(v7 + 8 * v14);
      ++v11;
      if (!v15)
      {
        uint64_t v11 = v14 + 1;
        if (v14 + 1 >= v40) {
          goto LABEL_31;
        }
        unint64_t v15 = *(void *)(v7 + 8 * v11);
        if (!v15)
        {
          uint64_t v11 = v14 + 2;
          if (v14 + 2 >= v40) {
            goto LABEL_31;
          }
          unint64_t v15 = *(void *)(v7 + 8 * v11);
          if (!v15)
          {
            uint64_t v16 = v14 + 3;
            if (v16 >= v40)
            {
LABEL_31:
              swift_release();
              return 0;
            }
            unint64_t v15 = *(void *)(v7 + 8 * v16);
            if (!v15)
            {
              while (1)
              {
                uint64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= v40) {
                  goto LABEL_31;
                }
                unint64_t v15 = *(void *)(v7 + 8 * v11);
                ++v16;
                if (v15) {
                  goto LABEL_21;
                }
              }
            }
            uint64_t v11 = v16;
          }
        }
      }
LABEL_21:
      unint64_t v10 = (v15 - 1) & v15;
      unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
    }
    int64_t v17 = (uint64_t *)(*(void *)(v41 + 48) + 16 * v13);
    uint64_t v2 = *v17;
    unint64_t v3 = v17[1];
    swift_bridgeObjectRetain();
    id v18 = objc_msgSend(a1, sel_entitlements, v37);
    char v19 = (void *)sub_25AC34E10();
    sub_25AB885C8(0, &qword_26A4A0C98);
    id v20 = objc_msgSend(v18, sel_objectForKey_ofClass_, v19, swift_getObjCClassFromMetadata());

    if (v20)
    {
      sub_25AC35500();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v43, 0, sizeof(v43));
    }
    sub_25AB259D8((uint64_t)v43, (uint64_t)v44, &qword_26A49FD00);
    if (!v44[3])
    {
      sub_25AB18FAC((uint64_t)v44, &qword_26A49FD00);
      goto LABEL_5;
    }
    if (swift_dynamicCast() & 1) != 0 && (v42) {
      break;
    }
LABEL_5:
    swift_bridgeObjectRelease();
  }
  if (qword_26A49F808 == -1) {
    goto LABEL_29;
  }
LABEL_42:
  swift_once();
LABEL_29:
  uint64_t v21 = __swift_project_value_buffer(v37, (uint64_t)qword_26A4A1D00);
  uint64_t v22 = v38;
  sub_25AB150E0(v21, v38);
  uint64_t v23 = sub_25AC345E0();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_25AB18FAC(v22, &qword_26A49F9A0);
  }
  else
  {
    id v26 = a1;
    swift_bridgeObjectRetain();
    id v27 = v26;
    uint64_t v28 = sub_25AC345C0();
    os_log_type_t v29 = sub_25AC352D0();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      v44[0] = v40;
      *(_DWORD *)uint64_t v30 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)&v43[0] = sub_25AB56574(v2, v3, v44);
      sub_25AC354A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2080;
      id v31 = objc_msgSend(v27, sel_bundleIdentifier);
      if (v31)
      {
        char v32 = v31;
        uint64_t v33 = sub_25AC34E40();
        unint64_t v35 = v34;
      }
      else
      {
        unint64_t v35 = 0xE700000000000000;
        uint64_t v33 = 0x6E776F6E6B6E55;
      }
      *(void *)&v43[0] = sub_25AB56574(v33, v35, v44);
      sub_25AC354A0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25AB11000, v28, v29, "[cleanup] Entitlement [ %s ] found for: [ %s ]", (uint8_t *)v30, 0x16u);
      uint64_t v36 = v40;
      swift_arrayDestroy();
      MEMORY[0x261151C20](v36, -1, -1);
      MEMORY[0x261151C20](v30, -1, -1);
      swift_release();

      uint64_t v22 = v38;
    }
    else
    {
      swift_release();

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  }
  return 1;
}

uint64_t sub_25ABB4048(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25AC32210();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(self, sel_enumeratorWithOptions_, 0);
  sub_25AC35280();

  sub_25AC32200();
  if (!v59)
  {
    unint64_t v55 = 0;
    unint64_t v10 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_47;
  }
  uint64_t v9 = sub_25AB885C8(0, &qword_26A4A0FE0);
  unint64_t v55 = 0;
  uint64_t v57 = a1 + 64;
  uint64_t v58 = a1;
  unint64_t v10 = (void *)MEMORY[0x263F8EE80];
  while (1)
  {
LABEL_5:
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_4;
    }
    uint64_t v11 = v60;
    sub_25AC35200();
    if (v2)
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_bridgeObjectRelease();
      goto LABEL_49;
    }
    if (objc_msgSend(v11, sel_isDeletable)) {
      break;
    }

LABEL_4:
    sub_25AC32200();
    if (!v59) {
      goto LABEL_47;
    }
  }
  uint64_t v48 = v9;
  uint64_t v49 = v7;
  uint64_t v54 = v10;
  uint64_t v50 = v5;
  uint64_t v51 = v4;
  uint64_t v12 = v58;
  uint64_t v13 = 1 << *(unsigned char *)(v58 + 32);
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & *(void *)(v58 + 64);
  int64_t v56 = (unint64_t)(v13 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v16 = 0;
  if (v15)
  {
LABEL_12:
    unint64_t v17 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v18 = v17 | (v16 << 6);
    goto LABEL_13;
  }
  while (2)
  {
    int64_t v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_51;
    }
    if (v24 >= v56) {
      goto LABEL_44;
    }
    unint64_t v25 = *(void *)(v57 + 8 * v24);
    ++v16;
    if (v25) {
      goto LABEL_28;
    }
    int64_t v16 = v24 + 1;
    if (v24 + 1 >= v56) {
      goto LABEL_44;
    }
    unint64_t v25 = *(void *)(v57 + 8 * v16);
    if (v25) {
      goto LABEL_28;
    }
    int64_t v16 = v24 + 2;
    if (v24 + 2 >= v56) {
      goto LABEL_44;
    }
    unint64_t v25 = *(void *)(v57 + 8 * v16);
    if (v25)
    {
LABEL_28:
      unint64_t v15 = (v25 - 1) & v25;
      unint64_t v18 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_13:
      char v19 = (uint64_t *)(*(void *)(v12 + 48) + 16 * v18);
      uint64_t v21 = *v19;
      uint64_t v20 = v19[1];
      uint64_t v22 = *(void *)(*(void *)(v12 + 56) + 8 * v18);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v23 = sub_25ABB3AB0(v11, v22);
      swift_bridgeObjectRelease();
      if (v23)
      {
        sub_25AB74948(v55);
        id v27 = v54;
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v60 = v27;
        unint64_t v29 = sub_25AB8D62C(v21, v20);
        uint64_t v30 = v27[2];
        BOOL v31 = (v28 & 1) == 0;
        uint64_t v32 = v30 + v31;
        if (__OFADD__(v30, v31)) {
          goto LABEL_52;
        }
        char v33 = v28;
        uint64_t v34 = v27[3];
        int v52 = v28;
        if (v34 >= v32)
        {
          unint64_t v55 = v29;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_25ABB05D4();
          }
        }
        else
        {
          sub_25ABAD2BC(v32, isUniquelyReferenced_nonNull_native);
          unint64_t v35 = sub_25AB8D62C(v21, v20);
          if ((v33 & 1) != (v36 & 1)) {
            goto LABEL_55;
          }
          unint64_t v55 = v35;
        }
        uint64_t v37 = v60;
        swift_bridgeObjectRelease();
        if ((v52 & 1) == 0)
        {
          unint64_t v38 = v55;
          v37[(v55 >> 6) + 8] |= 1 << v55;
          uint64_t v39 = (uint64_t *)(v37[6] + 16 * v38);
          *uint64_t v39 = v21;
          v39[1] = v20;
          *(void *)(v37[7] + 8 * v38) = 0;
          uint64_t v40 = v37[2];
          uint64_t v41 = v40 + 1;
          BOOL v42 = __OFADD__(v40, 1);
          swift_bridgeObjectRetain();
          if (v42) {
            goto LABEL_54;
          }
          uint64_t v37[2] = v41;
        }
        swift_bridgeObjectRetain();
        uint64_t v43 = v37[7];
        uint64_t v54 = v37;
        swift_bridgeObjectRelease();
        uint64_t v44 = *(void *)(v43 + 8 * v55);
        BOOL v45 = __CFADD__(v44, 1);
        uint64_t v46 = v44 + 1;
        if (v45) {
          goto LABEL_53;
        }
        *(void *)(v43 + 8 * v55) = v46;
        swift_bridgeObjectRelease();
        unint64_t v55 = (unint64_t)sub_25ABB3288;
        uint64_t v12 = v58;
        if (v15) {
          goto LABEL_12;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = v58;
        if (v15) {
          goto LABEL_12;
        }
      }
      continue;
    }
    break;
  }
  int64_t v26 = v24 + 3;
  if (v26 < v56)
  {
    unint64_t v25 = *(void *)(v57 + 8 * v26);
    if (!v25)
    {
      while (1)
      {
        int64_t v16 = v26 + 1;
        if (__OFADD__(v26, 1)) {
          break;
        }
        if (v16 >= v56) {
          goto LABEL_44;
        }
        unint64_t v25 = *(void *)(v57 + 8 * v16);
        ++v26;
        if (v25) {
          goto LABEL_28;
        }
      }
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      uint64_t result = sub_25AC358B0();
      __break(1u);
      return result;
    }
    int64_t v16 = v26;
    goto LABEL_28;
  }
LABEL_44:

  swift_release();
  uint64_t v7 = v49;
  sub_25AC32200();
  uint64_t v5 = v50;
  uint64_t v4 = v51;
  unint64_t v10 = v54;
  uint64_t v9 = v48;
  if (v59) {
    goto LABEL_5;
  }
LABEL_47:
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
LABEL_49:
  sub_25AB74948(v55);
  return (uint64_t)v10;
}

void sub_25ABB4574(id *a1@<X0>, BOOL *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_currentLayout);
  id v4 = v3;
  if (v3) {

  }
  *a2 = v4 != 0;
}

uint64_t sub_25ABB45D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v2);
  id v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(self, sel_configurationForContinuityDisplay);
  objc_msgSend(v5, sel_setNeedsUserInteractivePriority_, 1);
  id v6 = objc_msgSend(self, sel_monitorWithConfiguration_, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4A0FE8);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 24) = 0;
  *(void *)(v7 + 16) = v6;
  *(void *)(v1 + 16) = v7;
  if (qword_26A49F7D0 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1C58);
  sub_25AB150E0(v8, (uint64_t)v4);
  uint64_t v9 = sub_25AC345E0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9) == 1)
  {

    sub_25AB15148((uint64_t)v4);
  }
  else
  {
    uint64_t v11 = sub_25AC345C0();
    os_log_type_t v12 = sub_25AC352B0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_25AB11000, v11, v12, "ContinuityDisplayMonitor started monitoring", v13, 2u);
      MEMORY[0x261151C20](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v4, v9);
  }
  return v1;
}

uint64_t sub_25ABB4824()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A49F9A0);
  MEMORY[0x270FA5388](v2);
  id v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = *(os_unfair_lock_s **)(v0 + 16);
  id v6 = (id *)&v5[4];
  uint64_t v7 = v5 + 6;
  os_unfair_lock_lock(v5 + 6);
  sub_25ABB4A28(v6);
  os_unfair_lock_unlock(v7);
  if (qword_26A49F7D0 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_project_value_buffer(v2, (uint64_t)qword_26A4A1C58);
  sub_25AB150E0(v8, (uint64_t)v4);
  uint64_t v9 = sub_25AC345E0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9) == 1)
  {
    sub_25AB15148((uint64_t)v4);
  }
  else
  {
    uint64_t v11 = sub_25AC345C0();
    os_log_type_t v12 = sub_25AC352B0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_25AB11000, v11, v12, "ContinuityDisplayMonitor finished monitoring", v13, 2u);
      MEMORY[0x261151C20](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v4, v9);
  }
  swift_release();
  return v1;
}