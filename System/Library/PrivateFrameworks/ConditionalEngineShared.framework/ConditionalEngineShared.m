uint64_t sub_24A6FDBEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;

  *(void *)(v8 + 80) = a7;
  *(void *)(v8 + 88) = a8;
  *(void *)(v8 + 64) = a4;
  *(void *)(v8 + 72) = a6;
  *(unsigned char *)(v8 + 152) = a5;
  *(void *)(v8 + 48) = a2;
  *(void *)(v8 + 56) = a3;
  *(void *)(v8 + 40) = a1;
  return MEMORY[0x270FA2498](sub_24A6FDC8C, 0, 0);
}

uint64_t sub_24A6FDC8C()
{
  v1 = *(void **)(v0 + 72);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_24A705BC4(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  if (!v4)
  {
    if (!*((void *)&xmmword_2697B98F8 + 1)) {
      return sub_24A763418();
    }
    swift_bridgeObjectRetain();
  }
  v5 = *(void **)(v0 + 64);
  id v6 = v5;
  if (v5)
  {
LABEL_7:
    id v12 = *(id *)(v0 + 88);
    v13 = *(void **)(v0 + 56);
    v14 = self;
    id v15 = v5;
    v16 = (void *)sub_24A6FEE50(v13);
    id v17 = objc_msgSend(v14, sel_policyWithActionMetadata_signals_, v6, v16);

    if (!v12)
    {
LABEL_9:
      id v20 = v17;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 32) = 0;
      id v21 = objc_msgSend(v20, sel_connectionWithUserIdentity_error_, v12, v0 + 32);
      v22 = *(void **)(v0 + 32);
      if (v21)
      {
        id v23 = v21;
        id v24 = v22;

LABEL_21:
        *(void *)(v0 + 112) = v17;
        *(void *)(v0 + 120) = v6;
        *(void *)(v0 + 96) = v23;
        *(void *)(v0 + 104) = v12;
        uint64_t v38 = dword_2697B3048;
        v39 = (void *)swift_task_alloc();
        *(void *)(v0 + 128) = v39;
        void *v39 = v0;
        v39[1] = sub_24A6FE30C;
        uint64_t v40 = *(void *)(v0 + 72);
        uint64_t v41 = *(void *)(v0 + 48);
        uint64_t v42 = *(void *)(v0 + 56);
        uint64_t v43 = *(void *)(v0 + 40);
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2697B3048 + v38))(v43, v41, v42, (uint64_t)v6, (uint64_t)v23, v40, (uint64_t)v17);
      }
      id v25 = v22;
      sub_24A7623F8();

      swift_willThrow();
      goto LABEL_25;
    }
    goto LABEL_8;
  }
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F520A8]), sel_init);
  v8 = (void *)sub_24A762DF8();
  v9 = (void *)sub_24A762DF8();
  *(void *)(v0 + 16) = 0;
  id v6 = objc_msgSend(v7, sel_actionForBundleIdentifier_andActionIdentifier_error_, v8, v9, v0 + 16);

  id v10 = *(id *)(v0 + 16);
  if (v6)
  {
    id v11 = v6;
    v5 = *(void **)(v0 + 64);
    goto LABEL_7;
  }
  v27 = v10;
  int v28 = *(unsigned __int8 *)(v0 + 152);
  v29 = (void *)sub_24A7623F8();

  swift_willThrow();
  if (!v28)
  {
    swift_bridgeObjectRelease();
    swift_willThrow();
    goto LABEL_25;
  }
  if (v28 == 1)
  {
    uint64_t v30 = *(void *)(v0 + 88);
    sub_24A763338();
    sub_24A762E68();
    sub_24A762E68();
    sub_24A762E68();
    sub_24A762E68();
    sub_24A762E68();
    sub_24A704710((uint64_t *)&unk_2697B32D0);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_24A763FD0;
    sub_24A762E68();
    sub_24A762E68();
    *(void *)(v31 + 56) = MEMORY[0x263F8D310];
    *(void *)(v31 + 32) = 0x6D33333B305B1BLL;
    *(void *)(v31 + 40) = 0xE700000000000000;
    sub_24A763678();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    id v17 = 0;
    id v6 = 0;
    id v12 = 0;
    if (!v30) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v32 = *(void *)(v0 + 88);

    id v17 = 0;
    id v6 = 0;
    id v12 = 0;
    if (!v32) {
      goto LABEL_19;
    }
  }
LABEL_8:
  id v18 = objc_allocWithZone(MEMORY[0x263F521A0]);
  swift_bridgeObjectRetain();
  v19 = (void *)sub_24A762DF8();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v18, sel_initWithPersonaUniqueIdentifier_, v19);

  if (v17) {
    goto LABEL_9;
  }
LABEL_19:
  v33 = self;
  v34 = (void *)sub_24A762DF8();
  swift_bridgeObjectRelease();
  id v35 = objc_msgSend(v33, sel_policyWithBundleIdentifier_, v34);

  *(void *)(v0 + 24) = 0;
  id v23 = objc_msgSend(v35, sel_connectionWithUserIdentity_error_, v12, v0 + 24);

  v36 = *(void **)(v0 + 24);
  if (v23)
  {
    id v37 = v36;
    id v17 = 0;
    goto LABEL_21;
  }
  id v44 = v36;
  sub_24A7623F8();

  swift_willThrow();
LABEL_25:
  v45 = *(uint64_t (**)(void))(v0 + 8);
  return v45();
}

uint64_t sub_24A6FE30C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    v5 = sub_24A6FE508;
  }
  else
  {
    *(void *)(v4 + 144) = a1;
    v5 = sub_24A6FE45C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24A6FE45C()
{
  uint64_t v1 = *(void **)(v0 + 112);
  uint64_t v2 = *(void **)(v0 + 120);
  uint64_t v3 = *(void **)(v0 + 104);

  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v5 = *(void *)(v0 + 144);
  return v4(v5);
}

uint64_t sub_24A6FE508()
{
  uint64_t v1 = *(void **)(v0 + 112);
  uint64_t v2 = *(void **)(v0 + 120);
  uint64_t v3 = *(void **)(v0 + 104);

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_24A6FE5B0(uint64_t a1, void *a2)
{
  id v5 = objc_msgSend(v2, sel_domain);
  uint64_t v6 = sub_24A762E08();
  uint64_t v8 = v7;

  if (v6 == sub_24A762E08() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v11 = sub_24A7635B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0) {
      return 0;
    }
  }
  if (objc_msgSend(v2, sel_code) != (id)2008) {
    return 0;
  }
  id v12 = objc_msgSend(v2, sel_userInfo);
  uint64_t v13 = sub_24A762DB8();

  uint64_t v14 = sub_24A762E08();
  if (!*(void *)(v13 + 16) || (unint64_t v16 = sub_24A729D3C(v14, v15), (v17 & 1) == 0))
  {
    long long v49 = 0u;
    long long v50 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  sub_24A705CAC(*(void *)(v13 + 56) + 32 * v16, (uint64_t)&v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v50 + 1))
  {
LABEL_23:
    sub_24A705C4C((uint64_t)&v49);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v18 = *(void *)(a1 + 16);
  if (!v18) {
    goto LABEL_54;
  }
  v19 = (void **)(a1 + 48);
  while (1)
  {
    id v20 = *v19;
    BOOL v21 = *(v19 - 2) == (void *)v47 && *(v19 - 1) == *((void **)&v47 + 1);
    if (v21 || (sub_24A7635B8() & 1) != 0) {
      break;
    }
    v19 += 3;
    if (!--v18) {
      goto LABEL_54;
    }
  }
  swift_bridgeObjectRetain();
  id v44 = v20;
  id v23 = objc_msgSend(a2, sel_parameters);
  sub_24A705D7C(0, &qword_2697B3028);
  unint64_t v24 = sub_24A762F38();

  swift_bridgeObjectRetain();
  id v25 = sub_24A704BB8(v24, v47, *((uint64_t *)&v47 + 1));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v25)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return 0;
  }
  id v26 = objc_msgSend(v44, sel_value);
  sub_24A7631F8();
  swift_unknownObjectRelease();
  sub_24A704710(&qword_2697B3030);
  if ((swift_dynamicCast() & 1) == 0)
  {
    long long v47 = 0u;
    long long v48 = 0u;
LABEL_35:
    sub_24A705C4C((uint64_t)&v47);
    goto LABEL_36;
  }
  if (*(void *)(v45 + 16))
  {
    sub_24A705CAC(v45 + 32, (uint64_t)&v47);
  }
  else
  {
    long long v47 = 0u;
    long long v48 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v48 + 1)) {
    goto LABEL_35;
  }
  sub_24A705D7C(0, &qword_2697B3040);
  if (swift_dynamicCast())
  {
    id v27 = objc_msgSend(v46, sel_value);

    sub_24A7631F8();
    swift_unknownObjectRelease();
    swift_dynamicCast();
  }
LABEL_36:
  id v28 = objc_msgSend(v25, sel_valueType);
  self;
  uint64_t v29 = swift_dynamicCastObjCClass();

  if (!v29)
  {
    id v33 = objc_msgSend(v25, sel_valueType);
    self;
    v34 = (void *)swift_dynamicCastObjCClass();
    if (!v34)
    {
LABEL_47:

      goto LABEL_48;
    }
    id v35 = objc_msgSend(v34, sel_memberValueType);

    if (!v35) {
      goto LABEL_48;
    }
    self;
    uint64_t v36 = swift_dynamicCastObjCClass();

    if (!v36) {
      goto LABEL_48;
    }
  }
  id v30 = objc_msgSend(v44, sel_valueType);
  self;
  uint64_t v31 = (void *)swift_dynamicCastObjCClass();
  if (v31)
  {
    id v32 = objc_msgSend(v31, sel_memberValueType);
  }
  else
  {

    id v32 = 0;
  }
  id v33 = objc_msgSend(self, sel_stringValueType);
  if (!v32) {
    goto LABEL_47;
  }
  sub_24A705D7C(0, &qword_2697B3038);
  id v37 = v32;
  char v38 = sub_24A763158();

  if ((v38 & 1) == 0)
  {
LABEL_48:
    id v39 = objc_msgSend(v25, sel_valueType);
    self;
    uint64_t v40 = (void *)swift_dynamicCastObjCClass();
    if (v40)
    {
      id v41 = objc_msgSend(v40, sel_memberValueType);

      if (v41)
      {
        id v42 = objc_msgSend(v44, sel_valueType);
        self;
        if (!swift_dynamicCastObjCClass())
        {

          *(void *)&long long v49 = 0;
          *((void *)&v49 + 1) = 0xE000000000000000;
          sub_24A763338();
          sub_24A762E68();
          sub_24A762E68();
          sub_24A762E68();
          id v43 = objc_msgSend(v41, sel_description);
          sub_24A762E08();

          sub_24A762E68();
          swift_bridgeObjectRelease();
          sub_24A762E68();
          sub_24A762E68();
          swift_bridgeObjectRelease();
          sub_24A762E68();
          sub_24A762E68();
          swift_bridgeObjectRelease();
          sub_24A762E68();

          swift_bridgeObjectRelease();
          return v49;
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return 0;
      }
    }
    else
    {
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
LABEL_54:
    swift_bridgeObjectRelease();
    return 0;
  }
  *(void *)&long long v49 = 0;
  *((void *)&v49 + 1) = 0xE000000000000000;
  sub_24A763338();
  sub_24A762E68();
  sub_24A762E68();
  sub_24A762E68();
  sub_24A762E68();
  swift_bridgeObjectRelease();
  sub_24A762E68();
  sub_24A762E68();
  swift_bridgeObjectRelease();
  sub_24A762E68();

  swift_bridgeObjectRelease();
  return v49;
}

uint64_t sub_24A6FEE50(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(v2, sel_effectiveBundleIdentifiers);
  id v5 = objc_msgSend(v4, sel_count);

  if (v5 != (id)1) {
    return 0;
  }
  id v6 = objc_msgSend(v2, sel_effectiveBundleIdentifiers);
  id v7 = objc_msgSend(v6, sel_firstObject);

  if (v7)
  {
    sub_24A7631F8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v21, 0, sizeof(v21));
  }
  sub_24A705D08((uint64_t)v21, (uint64_t)v22);
  if (!v23)
  {
    sub_24A705C4C((uint64_t)v22);
    return 0;
  }
  sub_24A705D7C(0, &qword_2697B3050);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (objc_msgSend(v20, sel_type) != (id)3) {
    goto LABEL_26;
  }
  uint64_t v8 = a1[2];
  if (!v8) {
    goto LABEL_26;
  }
  uint64_t v9 = (void *)a1[6];
  if (a1[4] == 7368801 && a1[5] == 0xE300000000000000 || (uint64_t result = sub_24A7635B8(), (result & 1) != 0))
  {
LABEL_12:
    id v11 = v9;
    if (v11)
    {
      id v12 = v11;
      id v13 = objc_msgSend(v11, sel_value);
      sub_24A7631F8();
      swift_unknownObjectRelease();
      if (swift_dynamicCast())
      {
        id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F51FC0]), sel_init);
        uint64_t v15 = (void *)sub_24A762DF8();
        swift_bridgeObjectRelease();
        objc_msgSend(v14, sel_setPreferredBundleIdentifier_, v15);

        return (uint64_t)v14;
      }
    }
    goto LABEL_26;
  }
  if (v8 == 1)
  {
LABEL_26:

    return 0;
  }
  unint64_t v16 = (void **)(a1 + 9);
  uint64_t v17 = 1;
  while (1)
  {
    uint64_t v18 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    uint64_t v9 = *v16;
    if (*(v16 - 2) == (void *)7368801 && *(v16 - 1) == (void *)0xE300000000000000) {
      goto LABEL_12;
    }
    uint64_t result = sub_24A7635B8();
    if (result) {
      goto LABEL_12;
    }
    v16 += 3;
    ++v17;
    if (v18 == v8) {
      goto LABEL_26;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24A6FF108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[8] = a6;
  v7[9] = a7;
  v7[6] = a4;
  v7[7] = a5;
  v7[4] = a2;
  v7[5] = a3;
  v7[3] = a1;
  uint64_t v8 = sub_24A762528();
  v7[10] = v8;
  v7[11] = *(void *)(v8 - 8);
  v7[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A6FF1D4, 0, 0);
}

uint64_t sub_24A6FF1D4()
{
  v96 = v0;
  uint64_t v1 = (void *)v0[6];
  uint64_t v2 = MEMORY[0x263F8EE78];
  v88 = v1;
  if (!v1) {
    goto LABEL_16;
  }
  id v3 = objc_msgSend(v1, sel_parameters);
  sub_24A705D7C(0, &qword_2697B3028);
  unint64_t v4 = sub_24A762F38();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_24A763428();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_4;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    if (*(void *)(v2 + 16)) {
      goto LABEL_17;
    }
LABEL_20:
    uint64_t v23 = MEMORY[0x263F8EE80];
    goto LABEL_21;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5) {
    goto LABEL_19;
  }
LABEL_4:
  uint64_t v95 = v2;
  uint64_t v6 = sub_24A75346C(0, v5 & ~(v5 >> 63), 0);
  if (v5 < 0)
  {
    __break(1u);
    return MEMORY[0x270FA0588](v6, v7, v8, v9, v10);
  }
  uint64_t v11 = 0;
  uint64_t v2 = v95;
  v89 = v0;
  unint64_t v91 = v4 & 0xC000000000000001;
  unint64_t v12 = v4;
  do
  {
    if (v91) {
      id v13 = (id)MEMORY[0x24C5CE400](v11, v4);
    }
    else {
      id v13 = *(id *)(v4 + 8 * v11 + 32);
    }
    id v14 = v13;
    id v15 = objc_msgSend(v13, sel_name);
    if (v15)
    {
      unint64_t v16 = v15;
      uint64_t v17 = sub_24A762E08();
      uint64_t v19 = v18;
    }
    else
    {
      uint64_t v17 = 0;
      uint64_t v19 = 0;
    }
    uint64_t v95 = v2;
    unint64_t v21 = *(void *)(v2 + 16);
    unint64_t v20 = *(void *)(v2 + 24);
    if (v21 >= v20 >> 1)
    {
      sub_24A75346C(v20 > 1, v21 + 1, 1);
      uint64_t v2 = v95;
    }
    ++v11;
    *(void *)(v2 + 16) = v21 + 1;
    v22 = (void *)(v2 + 24 * v21);
    v22[4] = v17;
    v22[5] = v19;
    v22[6] = v14;
    unint64_t v4 = v12;
  }
  while (v5 != v11);
  swift_bridgeObjectRelease();
  uint64_t v0 = v89;
LABEL_16:
  if (!*(void *)(v2 + 16)) {
    goto LABEL_20;
  }
LABEL_17:
  sub_24A704710(&qword_2697B3058);
  uint64_t v23 = sub_24A763458();
LABEL_21:
  uint64_t v95 = v23;
  unint64_t v24 = (void *)swift_bridgeObjectRetain();
  sub_24A703420(v24, 1, &v95);
  uint64_t v92 = v0[9];
  uint64_t v26 = v0[5];
  id v25 = (void *)v0[6];
  id v27 = v0;
  swift_bridgeObjectRelease();
  uint64_t v28 = v95;
  id v29 = v25;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_24A7047A4(v26, (uint64_t)v25, v28);
  swift_bridgeObjectRelease();
  swift_release_n();

  if (v92)
  {
    uint64_t v31 = (void *)v0[9];
    sub_24A705D7C(0, &qword_2697B2FD8);
    id v32 = v31;
    id v33 = (void *)sub_24A762F28();
    swift_bridgeObjectRelease();
    id v34 = objc_msgSend(v32, sel_actionWithParameters_, v33);

    uint64_t v0 = v27;
  }
  else
  {
    id v35 = v88;
    if (v88)
    {
      uint64_t v36 = (void *)v0[8];
      uint64_t v37 = v36[3];
      uint64_t v38 = v36[4];
      sub_24A705BC4(v36, v37);
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
      if (!v39)
      {
        if (!*((void *)&xmmword_2697B98F8 + 1)) {
          return sub_24A763418();
        }
        swift_bridgeObjectRetain();
      }
      id v43 = (void *)sub_24A762DF8();
      swift_bridgeObjectRelease();
      id v44 = objc_msgSend(v29, sel_mangledTypeNameForBundleIdentifier_, v43);

      uint64_t v93 = sub_24A762E08();
      uint64_t v41 = v45;

      char v42 = objc_msgSend(v29, sel_openAppWhenRun);
      id v46 = objc_msgSend(v29, sel_outputFlags);
      id v40 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, v46);
      id v35 = v88;
    }
    else
    {
      id v40 = 0;
      uint64_t v93 = 0;
      uint64_t v41 = 0;
      char v42 = 0;
    }
    id v47 = objc_msgSend(v29, sel_outputType);
    if (v35)
    {
      id v48 = objc_msgSend(v29, sel_systemProtocols);
      sub_24A705D7C(0, &qword_2697B3068);
      sub_24A762F38();
    }
    uint64_t v50 = v0[3];
    uint64_t v49 = v0[4];
    id v51 = objc_allocWithZone(MEMORY[0x263F51AF8]);
    swift_bridgeObjectRetain();
    uint64_t v87 = v30;
    id v34 = sub_24A702F00(v50, v49, v93, v41, v42, v40, v47);
  }
  v90 = v0;
  v52 = (void *)v0[8];
  uint64_t v53 = v52[3];
  uint64_t v54 = v52[4];
  sub_24A705BC4(v52, v53);
  v55 = *(uint64_t (**)(uint64_t, uint64_t))(v54 + 24);
  id v56 = v34;
  char v57 = v55(v53, v54);
  id v58 = v56;
  if (v57 != 2)
  {
    id v58 = objc_msgSend(v56, sel_actionWithOpenWhenRun_, v57 & 1);
  }
  v0[13] = v58;
  v59 = (void *)v0[8];

  id v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F51EB8]), sel_init);
  v0[14] = v60;
  objc_msgSend(v60, sel_setSource_, 2);
  uint64_t v61 = v52[3];
  uint64_t v62 = v52[4];
  sub_24A705BC4(v59, v61);
  unsigned __int8 v63 = (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 16))(v61, v62);
  v64 = (void *)v0[8];
  objc_msgSend(v60, sel_setInteractionMode_, v63);
  v65 = (void *)sub_24A762DF8();
  objc_msgSend(v60, sel_setClientLabel_, v65);

  uint64_t v66 = v52[3];
  uint64_t v67 = v52[4];
  sub_24A705BC4(v64, v66);
  (*(void (**)(uint64_t, uint64_t))(v67 + 32))(v66, v67);
  if (v68) {
    v69 = 0;
  }
  else {
    v69 = (void *)sub_24A763058();
  }
  uint64_t v70 = v0[11];
  uint64_t v71 = v90[12];
  uint64_t v72 = v90[10];
  v73 = (void *)v90[8];
  objc_msgSend(v60, sel_setViewActionIdentifier_, v69, v87);

  id v74 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F52168]), sel_init);
  v90[15] = v74;
  sub_24A762518();
  v75 = (void *)sub_24A7624A8();
  (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v71, v72);
  objc_msgSend(v74, sel_setPreciseTimestamp_, v75);

  objc_msgSend(v60, sel_setSystemContext_, v74);
  uint64_t v77 = v52[3];
  uint64_t v76 = v52[4];
  sub_24A705BC4(v73, v77);
  (*(void (**)(uint64_t, uint64_t))(v76 + 40))(v77, v76);
  if (v78)
  {
    id v79 = objc_allocWithZone(MEMORY[0x263F51B90]);
    v80 = (void *)sub_24A762DF8();
    swift_bridgeObjectRelease();
    id v81 = objc_msgSend(v79, sel_initWithContentType_, v80);

    id v82 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F52058]), sel_initWithContentType_preferredExtractionType_, v81, 0);
    objc_msgSend(v60, sel_setExportedContentConfiguration_, v82);
  }
  v94 = (uint64_t (*)(id, uint64_t, uint64_t, id))((char *)&dword_2697B3060 + dword_2697B3060);
  v83 = (void *)swift_task_alloc();
  v90[16] = v83;
  void *v83 = v90;
  v83[1] = sub_24A6FFAD8;
  uint64_t v84 = v90[6];
  uint64_t v85 = v90[7];
  return v94(v58, v84, v85, v60);
}

uint64_t sub_24A6FFAD8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_24A6FFC84;
  }
  else
  {
    *(void *)(v4 + 144) = a1;
    uint64_t v5 = sub_24A6FFC00;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24A6FFC00()
{
  uint64_t v2 = *(void **)(v0 + 112);
  uint64_t v1 = *(void **)(v0 + 120);

  swift_task_dealloc();
  id v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v4 = *(void *)(v0 + 144);
  return v3(v4);
}

uint64_t sub_24A6FFC84()
{
  uint64_t v2 = *(void **)(v0 + 112);
  uint64_t v1 = *(void **)(v0 + 120);

  swift_task_dealloc();
  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_24A6FFD04(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = (void *)a1[2];
  if (a2)
  {
    if (!*(void *)(a3 + 16)
      || (swift_bridgeObjectRetain(), sub_24A729C98(v6, v5), char v9 = v8, swift_bridgeObjectRelease(), (v9 & 1) == 0))
    {
      sub_24A763338();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24A762E68();
      swift_bridgeObjectRelease();
      sub_24A762E68();
      sub_24A762E68();
      sub_24A762E68();
      sub_24A704710((uint64_t *)&unk_2697B32D0);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_24A763FD0;
      sub_24A762E68();
      sub_24A762E68();
      *(void *)(v10 + 56) = MEMORY[0x263F8D310];
      *(void *)(v10 + 32) = 0x6D33333B305B1BLL;
      *(void *)(v10 + 40) = 0xE700000000000000;
      sub_24A763678();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  id v11 = objc_allocWithZone(MEMORY[0x263F51CA0]);
  swift_bridgeObjectRetain();
  id v12 = v7;
  id v13 = (void *)sub_24A762DF8();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v11, sel_initWithIdentifier_value_, v13, v12);

  *a4 = v14;
}

uint64_t sub_24A6FFF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  return MEMORY[0x270FA2498](sub_24A6FFF70, 0, 0);
}

uint64_t sub_24A6FFF70()
{
  uint64_t v1 = (void *)v0[10];
  uint64_t v2 = v0[11];
  id v3 = (void *)v0[8];
  sub_24A763338();
  sub_24A762E68();
  id v4 = objc_msgSend(v1, sel_bundleIdentifier);
  sub_24A762E08();

  sub_24A762E68();
  swift_bridgeObjectRelease();
  sub_24A762E68();
  id v5 = objc_msgSend(v3, sel_identifier);
  sub_24A762E08();

  sub_24A762E68();
  swift_bridgeObjectRelease();
  sub_24A762E68();
  v0[12] = sub_24A704710((uint64_t *)&unk_2697B32D0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24A763FD0;
  sub_24A762E68();
  sub_24A762E68();
  *(void *)(v6 + 56) = MEMORY[0x263F8D310];
  *(void *)(v6 + 32) = 0x6D303B305B1BLL;
  *(void *)(v6 + 40) = 0xE600000000000000;
  sub_24A763678();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[2] = 0;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[13] = v7;
  v7[2] = v0 + 2;
  v7[3] = v1;
  v7[4] = v3;
  v7[5] = v2;
  char v8 = (void *)swift_task_alloc();
  v0[14] = v8;
  uint64_t v9 = sub_24A705D7C(0, &qword_2697B3070);
  void *v8 = v0;
  v8[1] = sub_24A700254;
  return MEMORY[0x270FA2360](v0 + 3, 0, 0, 0xD00000000000003BLL, 0x800000024A7677E0, sub_24A705D70, v7, v9);
}

uint64_t sub_24A700254()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24A70056C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_24A700370;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24A700370()
{
  uint64_t v1 = *(void **)(v0 + 24);
  *(void *)(v0 + 128) = v1;
  id v2 = v1;
  id v3 = objc_msgSend(v2, sel_output);
  unsigned int v4 = objc_msgSend(v3, sel_isDeferred);

  if (v4)
  {
    uint64_t v5 = *(void *)(v0 + 80);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_24A763FD0;
    *(void *)(v6 + 56) = MEMORY[0x263F8D310];
    *(void *)(v6 + 32) = 0xD000000000000035;
    *(void *)(v6 + 40) = 0x800000024A767820;
    sub_24A763678();
    swift_bridgeObjectRelease();
    uint64_t v7 = swift_task_alloc();
    *(void *)(v0 + 136) = v7;
    *(void *)(v7 + 16) = v5;
    *(void *)(v7 + 24) = v2;
    char v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v8;
    uint64_t v9 = sub_24A704710(&qword_2697B3080);
    *(void *)(v0 + 152) = v9;
    void *v8 = v0;
    v8[1] = sub_24A700724;
    return MEMORY[0x270FA2360](v0 + 48, 0, 0, 0xD00000000000003BLL, 0x800000024A7677E0, sub_24A705E0C, v7, v9);
  }
  else
  {

    uint64_t v10 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v11 = *(void *)(v0 + 128);
    return v10(v11);
  }
}

uint64_t sub_24A70056C()
{
  uint64_t v1 = *(void **)(v0 + 120);
  swift_task_dealloc();
  *(void *)(v0 + 32) = v1;
  id v2 = (id *)(v0 + 40);
  id v3 = v1;
  sub_24A704710(&qword_2697B3008);
  sub_24A705D7C(0, &qword_2697B3010);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_8;
  }
  id v4 = *v2;
  id v5 = objc_msgSend(*v2, sel_domain);
  uint64_t v6 = sub_24A762E08();
  uint64_t v8 = v7;

  if (v6 == sub_24A762E08() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v11 = sub_24A7635B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {

LABEL_8:
      goto LABEL_11;
    }
  }
  id v12 = *(void **)(v0 + 72);

  sub_24A705DB8();
  swift_allocError();
  void *v13 = v12;
  v13[1] = v4;
  id v14 = v12;
  swift_willThrow();

LABEL_11:
  id v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_24A700724()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();

  swift_task_dealloc();
  if (v0) {
    id v3 = sub_24A700A04;
  }
  else {
    id v3 = sub_24A700874;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24A700874()
{
  uint64_t v1 = *(void **)(v0 + 48);
  sub_24A763338();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 56) = v1;
  id v2 = v1;
  sub_24A762E18();
  sub_24A762E68();
  swift_bridgeObjectRelease();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_24A763FD0;
  sub_24A762E68();
  sub_24A762E68();
  *(void *)(v3 + 56) = MEMORY[0x263F8D310];
  *(void *)(v3 + 32) = 0x6D32333B305B1BLL;
  *(void *)(v3 + 40) = 0xE700000000000000;
  sub_24A763678();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  id v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v5 = *(void *)(v0 + 128);
  return v4(v5);
}

uint64_t sub_24A700A04()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_24A700A70(uint64_t a1, id *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v21 = a5;
  uint64_t v9 = sub_24A704710(&qword_2697B3090);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388]();
  id v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v13(v12, a1, v9);
  id v14 = (objc_class *)type metadata accessor for PerformActionExecutorDelegate();
  id v15 = (char *)objc_allocWithZone(v14);
  v13(&v15[OBJC_IVAR____TtC23ConditionalEngineShared29PerformActionExecutorDelegate_continuation], (uint64_t)v12, v9);
  v22.receiver = v15;
  v22.super_class = v14;
  id v16 = objc_msgSendSuper2(&v22, sel_init);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  id v17 = *a2;
  *a2 = v16;

  if (*a2)
  {
    id v18 = *a2;
    id v19 = objc_msgSend(a3, sel_executorForAction_options_delegate_, a4, v21, v18);
    objc_msgSend(v19, sel_perform);
  }
  else
  {
    sub_24A763418();
    __break(1u);
  }
}

void sub_24A700C78(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = sub_24A704710(&qword_2697B3088);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388]();
  id v9 = objc_msgSend(a3, sel_output);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_24A705EA8;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24A700EBC;
  aBlock[3] = &unk_26FE3A3A8;
  id v12 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_fetchActionOutputValue_completionHandler_, v9, v12);
  _Block_release(v12);
}

uint64_t sub_24A700E48(void *a1, id a2)
{
  if (a2)
  {
    id v2 = a2;
    sub_24A704710(&qword_2697B3088);
    return sub_24A762F98();
  }
  else
  {
    id v4 = a1;
    sub_24A704710(&qword_2697B3088);
    return sub_24A762FA8();
  }
}

void sub_24A700EBC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_24A700F58(unint64_t a1)
{
  unint64_t v6 = a1;
  uint64_t v7 = MEMORY[0x24C5CDF90](32, 0xE100000000000000, a1);
  uint64_t v49 = v6 + 2;
  if (__OFADD__(v6, 2))
  {
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v9 = v7;
  uint64_t v10 = v8;
  id v11 = objc_msgSend(v1, sel_value);
  sub_24A7631F8();
  swift_unknownObjectRelease();
  sub_24A704710(&qword_2697B2FC0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = v51;
    uint64_t v50 = (void *)MEMORY[0x263F8EE78];
    sub_24A75348C(0, 0, 0);
    id v2 = v50;
    if (!(v51 >> 62))
    {
      uint64_t v12 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v12)
      {
LABEL_5:
        if (v12 >= 1)
        {
          uint64_t v13 = 0;
          do
          {
            if ((v3 & 0xC000000000000001) != 0) {
              id v14 = (id)MEMORY[0x24C5CE400](v13, v3);
            }
            else {
              id v14 = *(id *)(v3 + 8 * v13 + 32);
            }
            id v15 = v14;
            sub_24A763598();
            sub_24A762E68();
            swift_bridgeObjectRelease();
            sub_24A762E68();
            sub_24A700F58(v49);
            sub_24A762E68();

            swift_bridgeObjectRelease();
            unint64_t v17 = v2[2];
            unint64_t v16 = v2[3];
            if (v17 >= v16 >> 1) {
              sub_24A75348C(v16 > 1, v17 + 1, 1);
            }
            ++v13;
            v2[2] = v17 + 1;
            id v18 = &v2[2 * v17];
            v18[4] = 91;
            v18[5] = 0xE100000000000000;
          }
          while (v12 != v13);
          goto LABEL_35;
        }
        __break(1u);
LABEL_38:
        swift_bridgeObjectRetain();
        uint64_t v37 = sub_24A763428();
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
LABEL_35:
      swift_bridgeObjectRelease_n();
      sub_24A762E68();
      swift_bridgeObjectRelease();
      sub_24A704710((uint64_t *)&unk_2697B2FE0);
      sub_24A704B10();
      uint64_t v34 = sub_24A762DD8();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
LABEL_34:
    swift_bridgeObjectRetain_n();
    uint64_t v12 = sub_24A763428();
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_5;
    }
    goto LABEL_35;
  }
  sub_24A705D7C(0, &qword_2697B2FC8);
  if (!swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    id v31 = objc_msgSend(v1, sel_displayRepresentation);
    if (v31)
    {
      id v32 = v31;
      uint64_t v33 = sub_24A70164C();
    }
    else
    {
      id v32 = objc_msgSend(v1, sel_description);
      uint64_t v33 = sub_24A762E08();
    }
    uint64_t v34 = v33;

    goto LABEL_36;
  }
  id v2 = (void *)v51;
  id v19 = objc_msgSend(v1, sel_valueType);
  self;
  if (!swift_dynamicCastObjCClass())
  {

    swift_bridgeObjectRelease();
    uint64_t v34 = 0x726F727265;
    goto LABEL_36;
  }
  uint64_t v5 = v9;
  uint64_t v20 = v10;

  sub_24A704710(&qword_2697B2FD0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_24A763FD0;
  id v21 = objc_msgSend((id)v51, sel_identifier);
  id v22 = objc_msgSend(v21, sel_description);
  uint64_t v23 = sub_24A762E08();
  uint64_t v25 = v24;

  *(void *)(v3 + 32) = v23;
  *(void *)(v3 + 40) = v25;
  id v26 = objc_msgSend(v1, sel_displayRepresentation);
  if (v26)
  {
    id v27 = v26;
    sub_24A70164C();

    uint64_t v4 = v20;
    swift_bridgeObjectRetain();
    sub_24A762E68();
    sub_24A762E68();
    swift_bridgeObjectRelease();
    unint64_t v29 = *(void *)(v3 + 16);
    unint64_t v28 = *(void *)(v3 + 24);
    if (v29 >= v28 >> 1) {
      uint64_t v3 = (uint64_t)sub_24A703048((void *)(v28 > 1), v29 + 1, 1, (void *)v3);
    }
    *(void *)(v3 + 16) = v29 + 1;
    uint64_t v30 = v3 + 16 * v29;
    *(void *)(v30 + 32) = v5;
    *(void *)(v30 + 40) = v20;
  }
  else
  {
    uint64_t v4 = v20;
  }
  unint64_t v6 = 0x26528D000uLL;
  id v35 = objc_msgSend((id)v51, sel_properties);
  sub_24A705D7C(0, &qword_2697B2FD8);
  unint64_t v36 = sub_24A762F38();

  if (v36 >> 62) {
    goto LABEL_38;
  }
  uint64_t v37 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_28:
  swift_bridgeObjectRelease();
  if (v37)
  {
    sub_24A762E68();
    uint64_t v38 = v4;
    unint64_t v40 = *(void *)(v3 + 16);
    unint64_t v39 = *(void *)(v3 + 24);
    if (v40 >= v39 >> 1) {
      uint64_t v3 = (uint64_t)sub_24A703048((void *)(v39 > 1), v40 + 1, 1, (void *)v3);
    }
    *(void *)(v3 + 16) = v40 + 1;
    uint64_t v41 = v3 + 16 * v40;
    *(void *)(v41 + 32) = v5;
    *(void *)(v41 + 40) = v38;
    uint64_t v42 = MEMORY[0x24C5CDF90](32, 0xE100000000000000, v49);
    uint64_t v44 = v43;
    id v45 = [v2 *(SEL *)(v6 + 2920)];
    unint64_t v46 = sub_24A762F38();

    swift_bridgeObjectRetain();
    id v47 = (void *)swift_bridgeObjectRetain();
    sub_24A7049C8(v47, v46, v42, v44, v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_24A704710((uint64_t *)&unk_2697B2FE0);
  sub_24A704B10();
  uint64_t v34 = sub_24A762DD8();
  swift_bridgeObjectRelease();

LABEL_36:
  sub_24A704754((uint64_t)v52);
  return v34;
}

uint64_t sub_24A70164C()
{
  id v1 = objc_msgSend(v0, sel_title);
  id v2 = objc_msgSend(v1, sel_localizedStringForLocaleIdentifier_, 0);

  uint64_t v3 = sub_24A762E08();
  uint64_t v8 = v3;
  id v4 = objc_msgSend(v0, sel_subtitle);
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = objc_msgSend(v4, sel_localizedStringForLocaleIdentifier_, 0);

    sub_24A762E08();
    sub_24A762E68();
    swift_bridgeObjectRelease();
    sub_24A762E68();
    sub_24A762E68();
    swift_bridgeObjectRelease();
    return v8;
  }
  return v3;
}

uint64_t sub_24A701780(void **a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *a2;
  swift_bridgeObjectRetain();
  sub_24A762E68();
  id v8 = objc_msgSend(v7, sel_identifier);
  sub_24A762E08();

  sub_24A762E68();
  swift_bridgeObjectRelease();
  sub_24A762E68();
  id v9 = objc_msgSend(v7, sel_value);
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t result = a5 + 2;
    if (__OFADD__(a5, 2))
    {
      __break(1u);
      return result;
    }
    sub_24A700F58(result);
  }
  sub_24A762E68();
  swift_bridgeObjectRelease();
  uint64_t v12 = *a1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_24A703048(0, v12[2] + 1, 1, v12);
    uint64_t v12 = (void *)result;
  }
  unint64_t v14 = v12[2];
  unint64_t v13 = v12[3];
  if (v14 >= v13 >> 1)
  {
    uint64_t result = (uint64_t)sub_24A703048((void *)(v13 > 1), v14 + 1, 1, v12);
    uint64_t v12 = (void *)result;
  }
  v12[2] = v14 + 1;
  id v15 = &v12[2 * v14];
  v15[4] = a3;
  v15[5] = a4;
  *a1 = v12;
  return result;
}

uint64_t sub_24A701918()
{
  *(void *)(v1 + 128) = v0;
  return MEMORY[0x270FA2498](sub_24A701938, 0, 0);
}

uint64_t sub_24A701938()
{
  uint64_t v42 = v0;
  id v1 = objc_msgSend(*(id *)(v0 + 128), sel_dialog);
  *(void *)(v0 + 136) = v1;
  if (v1)
  {
    id v2 = v1;
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v0 + 120;
    *(void *)(v0 + 24) = sub_24A701F78;
    uint64_t v3 = swift_continuation_init();
    *(void *)(v0 + 80) = MEMORY[0x263EF8330];
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_24A7065C4;
    *(void *)(v0 + 104) = &unk_26528D9B0;
    *(void *)(v0 + 112) = v3;
    objc_msgSend(v2, sel_getResultWithCompletionHandler_, v0 + 80);
    return MEMORY[0x270FA23F0](v0 + 16);
  }
  else
  {
    id v4 = objc_msgSend(*(id *)(v0 + 128), sel_viewSnippet);

    uint64_t v5 = MEMORY[0x263F8EE78];
    if (v4)
    {
      id v6 = (void *)MEMORY[0x263F8EE78];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v6 = sub_24A703048(0, v6[2] + 1, 1, v6);
      }
      unint64_t v8 = v6[2];
      unint64_t v7 = v6[3];
      if (v8 >= v7 >> 1) {
        id v6 = sub_24A703048((void *)(v7 > 1), v8 + 1, 1, v6);
      }
      v6[2] = v8 + 1;
      id v9 = &v6[2 * v8];
      v9[4] = 0xD000000000000010;
      v9[5] = 0x800000024A767510;
    }
    else
    {
      id v6 = (void *)MEMORY[0x263F8EE78];
    }
    id v10 = objc_msgSend(*(id *)(v0 + 128), sel_value);
    if (v10)
    {
      id v11 = v10;
      sub_24A763338();
      swift_bridgeObjectRelease();
      strcpy((char *)v41, "Result Value: ");
      HIBYTE(v41[1]) = -18;
      sub_24A700F58(0);
      sub_24A762E68();
      swift_bridgeObjectRelease();
      uint64_t v12 = v41[0];
      uint64_t v13 = v41[1];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v6 = sub_24A703048(0, v6[2] + 1, 1, v6);
      }
      unint64_t v15 = v6[2];
      unint64_t v14 = v6[3];
      if (v15 >= v14 >> 1) {
        id v6 = sub_24A703048((void *)(v14 > 1), v15 + 1, 1, v6);
      }
      v6[2] = v15 + 1;
      unint64_t v16 = &v6[2 * v15];
      v16[4] = v12;
      v16[5] = v13;
    }
    id v17 = objc_msgSend(*(id *)(v0 + 128), sel_confirmationActionName);
    if (v17)
    {
      id v18 = v17;
      sub_24A763338();
      swift_bridgeObjectRelease();
      v41[0] = 0xD000000000000013;
      v41[1] = 0x800000024A7674F0;
      sub_24A702CD0();
      sub_24A762E68();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v6 = sub_24A703048(0, v6[2] + 1, 1, v6);
      }
      unint64_t v20 = v6[2];
      unint64_t v19 = v6[3];
      if (v20 >= v19 >> 1) {
        id v6 = sub_24A703048((void *)(v19 > 1), v20 + 1, 1, v6);
      }
      v6[2] = v20 + 1;
      id v21 = &v6[2 * v20];
      v21[4] = 0xD000000000000013;
      v21[5] = 0x800000024A7674F0;
    }
    id v22 = objc_msgSend(*(id *)(v0 + 128), sel_undoContext);
    if (v22)
    {
      uint64_t v23 = v22;
      sub_24A763338();
      swift_bridgeObjectRelease();
      strcpy((char *)v41, "Undo Context: ");
      HIBYTE(v41[1]) = -18;
      id v24 = objc_msgSend(v23, sel_description);
      sub_24A762E08();

      sub_24A762E68();
      swift_bridgeObjectRelease();
      uint64_t v25 = v41[0];
      uint64_t v26 = v41[1];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v6 = sub_24A703048(0, v6[2] + 1, 1, v6);
      }
      unint64_t v28 = v6[2];
      unint64_t v27 = v6[3];
      if (v28 >= v27 >> 1) {
        id v6 = sub_24A703048((void *)(v27 > 1), v28 + 1, 1, v6);
      }
      v6[2] = v28 + 1;
      unint64_t v29 = &v6[2 * v28];
      v29[4] = v25;
      v29[5] = v26;
    }
    int64_t v30 = v6[2];
    if (v30)
    {
      swift_bridgeObjectRetain();
      sub_24A75348C(0, v30, 0);
      uint64_t v31 = v5;
      id v32 = v6 + 5;
      do
      {
        v41[0] = 2108704;
        v41[1] = 0xE300000000000000;
        swift_bridgeObjectRetain();
        sub_24A762E68();
        swift_bridgeObjectRelease();
        unint64_t v34 = *(void *)(v5 + 16);
        unint64_t v33 = *(void *)(v5 + 24);
        if (v34 >= v33 >> 1) {
          sub_24A75348C(v33 > 1, v34 + 1, 1);
        }
        *(void *)(v5 + 16) = v34 + 1;
        uint64_t v35 = v5 + 16 * v34;
        *(void *)(v35 + 32) = 2108704;
        *(void *)(v35 + 40) = 0xE300000000000000;
        v32 += 2;
        --v30;
      }
      while (v30);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v31 = MEMORY[0x263F8EE78];
    }
    *(void *)(v0 + 80) = v31;
    sub_24A704710((uint64_t *)&unk_2697B2FE0);
    sub_24A704B10();
    uint64_t v36 = sub_24A762DD8();
    uint64_t v38 = v37;
    swift_bridgeObjectRelease();
    unint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v39(v36, v38);
  }
}

uint64_t sub_24A701F78()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    id v2 = sub_24A7026A4;
  }
  else {
    id v2 = sub_24A702088;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24A702088()
{
  uint64_t v47 = v0;
  strcpy((char *)v46, "Dialog: ");
  BYTE1(v46[1]) = 0;
  WORD1(v46[1]) = 0;
  HIDWORD(v46[1]) = -402653184;
  id v1 = objc_msgSend(*(id *)(v0 + 120), sel_print);
  uint64_t v2 = sub_24A762F38();

  if (*(void *)(v2 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_24A762E68();
    swift_bridgeObjectRelease();
    uint64_t v3 = v46[0];
    uint64_t v4 = v46[1];
    uint64_t v5 = MEMORY[0x263F8EE78];
    id v6 = sub_24A703048(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v8 = v6[2];
    unint64_t v7 = v6[3];
    if (v8 >= v7 >> 1) {
      id v6 = sub_24A703048((void *)(v7 > 1), v8 + 1, 1, v6);
    }
    id v9 = *(void **)(v0 + 136);
    v6[2] = v8 + 1;
    id v10 = &v6[2 * v8];
    v10[4] = v3;
    v10[5] = v4;

    swift_unknownObjectRelease();
    id v11 = objc_msgSend(*(id *)(v0 + 128), sel_viewSnippet);

    if (v11)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v6 = sub_24A703048(0, v6[2] + 1, 1, v6);
      }
      unint64_t v13 = v6[2];
      unint64_t v12 = v6[3];
      if (v13 >= v12 >> 1) {
        id v6 = sub_24A703048((void *)(v12 > 1), v13 + 1, 1, v6);
      }
      v6[2] = v13 + 1;
      unint64_t v14 = &v6[2 * v13];
      v14[4] = 0xD000000000000010;
      v14[5] = 0x800000024A767510;
    }
    id v15 = objc_msgSend(*(id *)(v0 + 128), sel_value);
    if (v15)
    {
      unint64_t v16 = v15;
      sub_24A763338();
      swift_bridgeObjectRelease();
      strcpy((char *)v46, "Result Value: ");
      HIBYTE(v46[1]) = -18;
      sub_24A700F58(0);
      sub_24A762E68();
      swift_bridgeObjectRelease();
      uint64_t v17 = v46[0];
      uint64_t v18 = v46[1];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v6 = sub_24A703048(0, v6[2] + 1, 1, v6);
      }
      unint64_t v20 = v6[2];
      unint64_t v19 = v6[3];
      if (v20 >= v19 >> 1) {
        id v6 = sub_24A703048((void *)(v19 > 1), v20 + 1, 1, v6);
      }
      v6[2] = v20 + 1;
      id v21 = &v6[2 * v20];
      v21[4] = v17;
      v21[5] = v18;
    }
    id v22 = objc_msgSend(*(id *)(v0 + 128), sel_confirmationActionName);
    if (v22)
    {
      uint64_t v23 = v22;
      sub_24A763338();
      swift_bridgeObjectRelease();
      v46[0] = 0xD000000000000013;
      v46[1] = 0x800000024A7674F0;
      sub_24A702CD0();
      sub_24A762E68();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v6 = sub_24A703048(0, v6[2] + 1, 1, v6);
      }
      unint64_t v25 = v6[2];
      unint64_t v24 = v6[3];
      if (v25 >= v24 >> 1) {
        id v6 = sub_24A703048((void *)(v24 > 1), v25 + 1, 1, v6);
      }
      v6[2] = v25 + 1;
      uint64_t v26 = &v6[2 * v25];
      v26[4] = 0xD000000000000013;
      v26[5] = 0x800000024A7674F0;
    }
    id v27 = objc_msgSend(*(id *)(v0 + 128), sel_undoContext);
    if (v27)
    {
      unint64_t v28 = v27;
      sub_24A763338();
      swift_bridgeObjectRelease();
      strcpy((char *)v46, "Undo Context: ");
      HIBYTE(v46[1]) = -18;
      id v29 = objc_msgSend(v28, sel_description);
      sub_24A762E08();

      sub_24A762E68();
      swift_bridgeObjectRelease();
      uint64_t v30 = v46[0];
      uint64_t v31 = v46[1];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v6 = sub_24A703048(0, v6[2] + 1, 1, v6);
      }
      unint64_t v33 = v6[2];
      unint64_t v32 = v6[3];
      if (v33 >= v32 >> 1) {
        id v6 = sub_24A703048((void *)(v32 > 1), v33 + 1, 1, v6);
      }
      v6[2] = v33 + 1;
      unint64_t v34 = &v6[2 * v33];
      v34[4] = v30;
      v34[5] = v31;
    }
    int64_t v35 = v6[2];
    if (v35)
    {
      uint64_t v45 = v0;
      swift_bridgeObjectRetain();
      sub_24A75348C(0, v35, 0);
      uint64_t v36 = v6 + 5;
      do
      {
        v46[0] = 2108704;
        v46[1] = 0xE300000000000000;
        swift_bridgeObjectRetain();
        sub_24A762E68();
        swift_bridgeObjectRelease();
        unint64_t v38 = *(void *)(v5 + 16);
        unint64_t v37 = *(void *)(v5 + 24);
        if (v38 >= v37 >> 1) {
          sub_24A75348C(v37 > 1, v38 + 1, 1);
        }
        *(void *)(v5 + 16) = v38 + 1;
        uint64_t v39 = v5 + 16 * v38;
        *(void *)(v39 + 32) = 2108704;
        *(void *)(v39 + 40) = 0xE300000000000000;
        v36 += 2;
        --v35;
      }
      while (v35);
      swift_bridgeObjectRelease_n();
      uint64_t v0 = v45;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    *(void *)(v0 + 80) = v5;
    sub_24A704710((uint64_t *)&unk_2697B2FE0);
    sub_24A704B10();
    uint64_t v40 = sub_24A762DD8();
    uint64_t v42 = v41;
    swift_bridgeObjectRelease();
    uint64_t v43 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v43(v40, v42);
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t sub_24A7026A4()
{
  uint64_t v49 = v0;
  uint64_t v1 = *(void *)(v0 + 144);
  swift_willThrow();
  v48[0] = 0;
  v48[1] = 0xE000000000000000;
  sub_24A763338();
  *(void *)(v0 + 80) = 0;
  *(void *)(v0 + 88) = v48[1];
  sub_24A762E68();
  *(void *)(v0 + 120) = v1;
  sub_24A704710(&qword_2697B3008);
  sub_24A7633F8();
  sub_24A762E68();
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = MEMORY[0x263F8EE78];
  uint64_t v5 = sub_24A703048(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v7 = v5[2];
  unint64_t v6 = v5[3];
  unint64_t v8 = v5;
  if (v7 >= v6 >> 1) {
    unint64_t v8 = sub_24A703048((void *)(v6 > 1), v7 + 1, 1, v5);
  }
  id v9 = *(void **)(v0 + 136);
  id v10 = *(void **)(v0 + 144);
  v8[2] = v7 + 1;
  id v11 = &v8[2 * v7];
  unint64_t v12 = v8;
  v11[4] = v2;
  v11[5] = v3;

  id v13 = objc_msgSend(*(id *)(v0 + 128), sel_viewSnippet);
  if (v13)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v12 = sub_24A703048(0, v12[2] + 1, 1, v12);
    }
    unint64_t v15 = v12[2];
    unint64_t v14 = v12[3];
    if (v15 >= v14 >> 1) {
      unint64_t v12 = sub_24A703048((void *)(v14 > 1), v15 + 1, 1, v12);
    }
    v12[2] = v15 + 1;
    unint64_t v16 = &v12[2 * v15];
    v16[4] = 0xD000000000000010;
    v16[5] = 0x800000024A767510;
  }
  id v17 = objc_msgSend(*(id *)(v0 + 128), sel_value);
  if (v17)
  {
    uint64_t v18 = v17;
    sub_24A763338();
    swift_bridgeObjectRelease();
    strcpy((char *)v48, "Result Value: ");
    HIBYTE(v48[1]) = -18;
    sub_24A700F58(0);
    sub_24A762E68();
    swift_bridgeObjectRelease();
    uint64_t v19 = v48[0];
    uint64_t v20 = v48[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v12 = sub_24A703048(0, v12[2] + 1, 1, v12);
    }
    unint64_t v22 = v12[2];
    unint64_t v21 = v12[3];
    if (v22 >= v21 >> 1) {
      unint64_t v12 = sub_24A703048((void *)(v21 > 1), v22 + 1, 1, v12);
    }
    v12[2] = v22 + 1;
    uint64_t v23 = &v12[2 * v22];
    v23[4] = v19;
    v23[5] = v20;
  }
  id v24 = objc_msgSend(*(id *)(v0 + 128), sel_confirmationActionName);
  if (v24)
  {
    unint64_t v25 = v24;
    sub_24A763338();
    swift_bridgeObjectRelease();
    v48[0] = 0xD000000000000013;
    v48[1] = 0x800000024A7674F0;
    sub_24A702CD0();
    sub_24A762E68();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v12 = sub_24A703048(0, v12[2] + 1, 1, v12);
    }
    unint64_t v27 = v12[2];
    unint64_t v26 = v12[3];
    if (v27 >= v26 >> 1) {
      unint64_t v12 = sub_24A703048((void *)(v26 > 1), v27 + 1, 1, v12);
    }
    v12[2] = v27 + 1;
    unint64_t v28 = &v12[2 * v27];
    v28[4] = 0xD000000000000013;
    v28[5] = 0x800000024A7674F0;
  }
  id v29 = objc_msgSend(*(id *)(v0 + 128), sel_undoContext);
  if (v29)
  {
    uint64_t v30 = v29;
    sub_24A763338();
    swift_bridgeObjectRelease();
    strcpy((char *)v48, "Undo Context: ");
    HIBYTE(v48[1]) = -18;
    id v31 = objc_msgSend(v30, sel_description);
    sub_24A762E08();

    sub_24A762E68();
    swift_bridgeObjectRelease();
    uint64_t v32 = v48[0];
    uint64_t v33 = v48[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v12 = sub_24A703048(0, v12[2] + 1, 1, v12);
    }
    unint64_t v35 = v12[2];
    unint64_t v34 = v12[3];
    if (v35 >= v34 >> 1) {
      unint64_t v12 = sub_24A703048((void *)(v34 > 1), v35 + 1, 1, v12);
    }
    v12[2] = v35 + 1;
    uint64_t v36 = &v12[2 * v35];
    v36[4] = v32;
    v36[5] = v33;
  }
  int64_t v37 = v12[2];
  if (v37)
  {
    uint64_t v47 = v0;
    swift_bridgeObjectRetain();
    sub_24A75348C(0, v37, 0);
    unint64_t v38 = v12 + 5;
    do
    {
      v48[0] = 2108704;
      v48[1] = 0xE300000000000000;
      swift_bridgeObjectRetain();
      sub_24A762E68();
      swift_bridgeObjectRelease();
      unint64_t v40 = *(void *)(v4 + 16);
      unint64_t v39 = *(void *)(v4 + 24);
      if (v40 >= v39 >> 1) {
        sub_24A75348C(v39 > 1, v40 + 1, 1);
      }
      *(void *)(v4 + 16) = v40 + 1;
      uint64_t v41 = v4 + 16 * v40;
      *(void *)(v41 + 32) = 2108704;
      *(void *)(v41 + 40) = 0xE300000000000000;
      v38 += 2;
      --v37;
    }
    while (v37);
    swift_bridgeObjectRelease_n();
    uint64_t v0 = v47;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *(void *)(v0 + 80) = v4;
  sub_24A704710((uint64_t *)&unk_2697B2FE0);
  sub_24A704B10();
  uint64_t v42 = sub_24A762DD8();
  uint64_t v44 = v43;
  swift_bridgeObjectRelease();
  uint64_t v45 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v45(v42, v44);
}

uint64_t sub_24A702CD0()
{
  uint64_t v1 = v0;
  if (objc_msgSend(v0, sel_type) != (id)2) {
    goto LABEL_6;
  }
  id v2 = objc_msgSend(v0, sel_acceptLabel);
  if (!v2) {
    goto LABEL_6;
  }
  uint64_t v3 = v2;
  id v4 = objc_msgSend(v0, sel_denyLabel);
  if (!v4)
  {

LABEL_6:
    objc_msgSend(v0, sel_destructive, 0, 0xE000000000000000);
    sub_24A762E68();
    swift_bridgeObjectRelease();
    objc_msgSend(v0, sel_type);
    id v8 = (id)LNConfirmationActionNameEnumAsString();
    sub_24A762E08();

    sub_24A762E68();
    goto LABEL_7;
  }
  uint64_t v5 = v4;
  id v6 = objc_msgSend(v3, sel_localizedStringForLocaleIdentifier_, 0);
  sub_24A762E08();

  id v7 = objc_msgSend(v5, sel_localizedStringForLocaleIdentifier_, 0);
  sub_24A762E08();

  uint64_t v10 = 0;
  objc_msgSend(v1, sel_destructive);
  sub_24A762E68();
  swift_bridgeObjectRelease();
  sub_24A762E68();
  swift_bridgeObjectRelease();
  sub_24A762E68();
  sub_24A762E68();

LABEL_7:
  swift_bridgeObjectRelease();
  return v10;
}

id sub_24A702F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, void *a7)
{
  id v8 = v7;
  id v13 = (void *)sub_24A762DF8();
  swift_bridgeObjectRelease();
  if (a4)
  {
    unint64_t v14 = (void *)sub_24A762DF8();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v14 = 0;
  }
  sub_24A705D7C(0, &qword_2697B3068);
  unint64_t v15 = (void *)sub_24A762F28();
  swift_bridgeObjectRelease();
  sub_24A705D7C(0, &qword_2697B2FD8);
  unint64_t v16 = (void *)sub_24A762F28();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v8, sel_initWithIdentifier_mangledTypeName_openAppWhenRun_outputFlags_outputType_systemProtocols_parameters_, v13, v14, a5 & 1, a6, a7, v15, v16);

  return v17;
}

void *sub_24A703048(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_24A704710(&qword_2697B2FD0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      id v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24A7048D4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A703158(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24A7031A0(a1, a2, a3, a4, &qword_2697B30A0, (uint64_t (*)(void))type metadata accessor for ScheduledQueryHistory.Event, (uint64_t (*)(void))type metadata accessor for ScheduledQueryHistory.Event);
}

uint64_t sub_24A70317C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24A7031A0(a1, a2, a3, a4, &qword_2697B30A8, (uint64_t (*)(void))type metadata accessor for ScheduledQuery, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
}

uint64_t sub_24A7031A0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_24A704710(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_24A763408();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24A705F44(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void sub_24A703420(void *a1, char a2, void *a3)
{
  if (!a1[2])
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v43 = a1[2];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v8 = (void *)a1[6];
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)*a3;
  swift_bridgeObjectRetain();
  id v10 = v8;
  unint64_t v12 = sub_24A729C98(v7, v6);
  uint64_t v13 = v9[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14)) {
    goto LABEL_23;
  }
  char v16 = v11;
  if (v9[3] >= v15)
  {
    if (a2)
    {
      if (v11) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_24A7037BC();
      if (v16) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v21 = (void *)*a3;
    *(void *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    unint64_t v22 = (uint64_t *)(v21[6] + 16 * v12);
    uint64_t *v22 = v7;
    v22[1] = v6;
    *(void *)(v21[7] + 8 * v12) = v10;
    uint64_t v23 = v21[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    _OWORD v21[2] = v25;
    uint64_t v26 = v43 - 1;
    if (v43 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    unint64_t v27 = (void **)(a1 + 9);
    while (1)
    {
      uint64_t v29 = (uint64_t)*(v27 - 2);
      uint64_t v28 = (uint64_t)*(v27 - 1);
      uint64_t v30 = *v27;
      id v31 = (void *)*a3;
      swift_bridgeObjectRetain();
      id v10 = v30;
      unint64_t v32 = sub_24A729C98(v29, v28);
      uint64_t v34 = v31[2];
      BOOL v35 = (v33 & 1) == 0;
      BOOL v24 = __OFADD__(v34, v35);
      uint64_t v36 = v34 + v35;
      if (v24) {
        break;
      }
      char v37 = v33;
      if (v31[3] < v36)
      {
        sub_24A703D40(v36, 1);
        unint64_t v32 = sub_24A729C98(v29, v28);
        if ((v37 & 1) != (v38 & 1)) {
          goto LABEL_25;
        }
      }
      if (v37) {
        goto LABEL_10;
      }
      unint64_t v39 = (void *)*a3;
      *(void *)(*a3 + 8 * (v32 >> 6) + 64) |= 1 << v32;
      unint64_t v40 = (uint64_t *)(v39[6] + 16 * v32);
      *unint64_t v40 = v29;
      v40[1] = v28;
      *(void *)(v39[7] + 8 * v32) = v10;
      uint64_t v41 = v39[2];
      BOOL v24 = __OFADD__(v41, 1);
      uint64_t v42 = v41 + 1;
      if (v24) {
        goto LABEL_24;
      }
      v39[2] = v42;
      v27 += 3;
      if (!--v26) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_24A703D40(v15, a2 & 1);
  unint64_t v17 = sub_24A729C98(v7, v6);
  if ((v16 & 1) == (v18 & 1))
  {
    unint64_t v12 = v17;
    if ((v16 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    size_t v19 = (void *)swift_allocError();
    swift_willThrow();
    id v20 = v19;
    sub_24A704710(&qword_2697B3008);
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_24A704710(&qword_2697B3098);
  sub_24A7635F8();
  __break(1u);
LABEL_26:
  sub_24A763338();
  sub_24A762E68();
  sub_24A704710(&qword_2697B3098);
  sub_24A7633F8();
  sub_24A762E68();
  sub_24A763418();
  __break(1u);
}

id sub_24A7037BC()
{
  uint64_t v1 = v0;
  sub_24A704710(&qword_2697B3058);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24A763438();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    char v16 = *(void **)(*(void *)(v2 + 56) + 8 * v15);
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    swift_bridgeObjectRetain();
    id result = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24A70396C()
{
  uint64_t v1 = v0;
  sub_24A704710(&qword_2697B30B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24A763438();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 48 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 24);
    BOOL v24 = (void *)(*(void *)(v4 + 48) + v16);
    long long v25 = *(_OWORD *)(v21 + 32);
    long long v26 = *(_OWORD *)(v21 + 8);
    *BOOL v24 = v18;
    v24[1] = v19;
    uint64_t v27 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v27 = v22;
    *(_OWORD *)(v27 + 8) = v26;
    *(void *)(v27 + 24) = v23;
    *(_OWORD *)(v27 + 32) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v13) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v6 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24A703B5C()
{
  uint64_t v1 = v0;
  sub_24A704710(&qword_2697B30B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24A763438();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      int64_t v9 = v29 + 1;
      if (v29 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v6 + 8 * v9);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v30 - 1) & v30;
    unint64_t v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 48 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    uint64_t v25 = *(void *)(v21 + 24);
    long long v26 = (void *)(*(void *)(v4 + 48) + v16);
    long long v27 = *(_OWORD *)(v21 + 32);
    *long long v26 = v19;
    v26[1] = v18;
    uint64_t v28 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v28 = v22;
    *(void *)(v28 + 8) = v23;
    *(void *)(v28 + 16) = v24;
    *(void *)(v28 + 24) = v25;
    *(_OWORD *)(v28 + 32) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v13) {
    goto LABEL_26;
  }
  unint64_t v30 = *(void *)(v6 + 8 * v31);
  if (v30)
  {
    int64_t v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v9);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24A703D40(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_24A704710(&qword_2697B3058);
  uint64_t v6 = sub_24A763448();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_42;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v32 = v2;
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    uint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_35;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_35:
          swift_release();
          uint64_t v3 = v32;
          if ((a2 & 1) == 0) {
            goto LABEL_42;
          }
          goto LABEL_38;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_44;
            }
            if (v13 >= v33) {
              goto LABEL_35;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    uint64_t v21 = *(void **)(*(void *)(v5 + 56) + 8 * v16);
    long long v35 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v22 = *(void *)(*(void *)(v5 + 48) + 16 * v16 + 8);
    if ((a2 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v23 = v21;
    }
    sub_24A763688();
    sub_24A7636A8();
    if (v22)
    {
      swift_bridgeObjectRetain();
      sub_24A762E58();
      swift_bridgeObjectRelease();
    }
    uint64_t result = sub_24A7636B8();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v14 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v14) = v35;
    *(void *)(*(void *)(v7 + 56) + 8 * v14) = v21;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v32;
  uint64_t v18 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_42;
  }
LABEL_38:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v18, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v18 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_42:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_24A704070(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_24A704710(&qword_2697B30B8);
  char v38 = a2;
  uint64_t v6 = sub_24A763448();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v37 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v36 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v36) {
          goto LABEL_33;
        }
        unint64_t v23 = v37[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v23 = v37[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v36)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v38)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
                if (v35 >= 64) {
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v37 = -1 << v35;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v37[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v23 = v37[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 48 * v21;
      uint64_t v33 = *(void *)v32;
      uint64_t v34 = *(void *)(v32 + 24);
      long long v39 = *(_OWORD *)(v32 + 32);
      long long v40 = *(_OWORD *)(v32 + 8);
      if ((v38 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_24A763688();
      sub_24A762E58();
      uint64_t result = sub_24A7636B8();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *uint64_t v18 = v31;
      v18[1] = v30;
      uint64_t v19 = *(void *)(v7 + 56) + 48 * v17;
      *(void *)uint64_t v19 = v33;
      *(_OWORD *)(v19 + 8) = v40;
      *(void *)(v19 + 24) = v34;
      *(_OWORD *)(v19 + 32) = v39;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_24A7043B8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_24A704710(&qword_2697B30B0);
  char v42 = a2;
  uint64_t v6 = sub_24A763448();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  long long v40 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v38 = v2;
  int64_t v39 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v39) {
      break;
    }
    unint64_t v23 = v40;
    unint64_t v24 = v40[v22];
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v39) {
        goto LABEL_33;
      }
      unint64_t v24 = v40[v13];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v38;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v39) {
              goto LABEL_33;
            }
            unint64_t v24 = v40[v13];
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(v5 + 56) + 48 * v21;
    uint64_t v34 = *(void *)v33;
    uint64_t v35 = *(void *)(v33 + 8);
    uint64_t v36 = *(void *)(v33 + 24);
    uint64_t v43 = *(void *)(v33 + 16);
    long long v44 = *(_OWORD *)(v33 + 32);
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_24A763688();
    sub_24A762E58();
    uint64_t result = sub_24A7636B8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v32;
    v18[1] = v31;
    uint64_t v19 = *(void *)(v7 + 56) + 48 * v17;
    *(void *)uint64_t v19 = v34;
    *(void *)(v19 + 8) = v35;
    *(void *)(v19 + 16) = v43;
    *(void *)(v19 + 24) = v36;
    *(_OWORD *)(v19 + 32) = v44;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v38;
  unint64_t v23 = v40;
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
  if (v37 >= 64) {
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v37;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_24A704710(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_24A704754(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_24A7047A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_24A7633C8();
    for (uint64_t i = (void **)(a1 + 48); ; i += 3)
    {
      uint64_t v11 = (uint64_t)*(i - 1);
      unint64_t v12 = *i;
      v14[0] = (uint64_t)*(i - 2);
      v14[1] = v11;
      v14[2] = (uint64_t)v12;
      swift_bridgeObjectRetain();
      id v13 = v12;
      sub_24A6FFD04(v14, a2, a3, &v15);

      swift_bridgeObjectRelease();
      if (v4) {
        break;
      }
      sub_24A7633A8();
      sub_24A7633D8();
      sub_24A7633E8();
      sub_24A7633B8();
      if (!--v6) {
        return v16;
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_24A7048D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24A763468();
  __break(1u);
  return result;
}

void *sub_24A7049C8(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v17 = a1;
  uint64_t v9 = a1;
  if (a2 >> 62) {
    goto LABEL_13;
  }
  uint64_t v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; uint64_t v10 = sub_24A763428())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v12 = (a2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24C5CE400](i - 4, a2) : *(id *)(a2 + 8 * i);
      uint64_t v9 = v12;
      uint64_t v13 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      uint64_t v16 = v12;
      sub_24A701780(&v17, &v16, a3, a4, a5);
      if (v5)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return v9;
      }

      if (v13 == v10)
      {
        swift_bridgeObjectRelease();
        return v17;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v9;
}

unint64_t sub_24A704B10()
{
  unint64_t result = qword_2697B3820;
  if (!qword_2697B3820)
  {
    sub_24A704B6C((uint64_t *)&unk_2697B2FE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3820);
  }
  return result;
}

uint64_t sub_24A704B6C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

void *sub_24A704BB8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_24A763428())
  {
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24C5CE400](v6 - 4, a1) : *(id *)(a1 + 8 * v6);
      uint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      id v10 = objc_msgSend(v7, sel_name);
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = sub_24A762E08();
        uint64_t v14 = v13;

        if (v12 == a2 && v14 == a3)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v8;
        }
        char v16 = sub_24A7635B8();
        swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_18;
        }
      }

      ++v6;
      if (v9 == v5) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_21:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24A704D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 120) = a7;
  *(void *)(v8 + 128) = a8;
  *(void *)(v8 + 104) = a4;
  *(void *)(v8 + 112) = a6;
  *(unsigned char *)(v8 + 200) = a5;
  *(void *)(v8 + 88) = a2;
  *(void *)(v8 + 96) = a3;
  *(void *)(v8 + 80) = a1;
  return MEMORY[0x270FA2498](sub_24A704D7C, 0, 0);
}

uint64_t sub_24A704D7C()
{
  uint64_t v1 = *(void **)(v0 + 112);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_24A705BC4(v1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  if (v5)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v5;
  }
  else
  {
    uint64_t v7 = *((void *)&xmmword_2697B98F8 + 1);
    if (!*((void *)&xmmword_2697B98F8 + 1)) {
      return sub_24A763418();
    }
    uint64_t v6 = xmmword_2697B98F8;
    swift_bridgeObjectRetain();
  }
  *(void *)(v0 + 136) = v6;
  *(void *)(v0 + 144) = v7;
  uint64_t v8 = *(void **)(v0 + 112);
  sub_24A763338();
  sub_24A762E68();
  sub_24A762E68();
  swift_bridgeObjectRelease();
  sub_24A762E68();
  sub_24A762E68();
  sub_24A762E68();
  uint64_t v10 = v1[3];
  uint64_t v9 = v1[4];
  sub_24A705BC4(v8, v10);
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v10, v9);
  uint64_t v11 = *(void *)(v0 + 96);
  sub_24A762E68();
  swift_bridgeObjectRelease();
  sub_24A762E68();
  *(void *)(v0 + 152) = sub_24A704710((uint64_t *)&unk_2697B32D0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_24A763FD0;
  uint64_t v13 = MEMORY[0x263F8D310];
  *(void *)(v12 + 56) = MEMORY[0x263F8D310];
  *(void *)(v12 + 32) = 1831951131;
  *(void *)(v12 + 40) = 0xE400000000000000;
  swift_bridgeObjectRetain();
  sub_24A763678();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v11 + 16);
  if (v14)
  {
    uint64_t v15 = (void **)(swift_bridgeObjectRetain() + 48);
    do
    {
      char v16 = *v15;
      v15 += 3;
      swift_bridgeObjectRetain_n();
      id v17 = v16;
      sub_24A762E68();
      swift_bridgeObjectRelease();
      sub_24A762E68();
      id v18 = v17;
      id v19 = objc_msgSend(v18, sel_description);
      sub_24A762E08();

      sub_24A762E68();
      swift_bridgeObjectRelease();

      uint64_t v20 = swift_allocObject();
      uint64_t v21 = sub_24A73704C(v20, 1);
      v22[3] = v13;
      void *v22 = 8237;
      v22[1] = 0xE200000000000000;
      nullsub_1(v21);
      swift_bridgeObjectRetain();
      sub_24A763678();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_2697B3000 + dword_2697B3000);
  unint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v23;
  *unint64_t v23 = v0;
  v23[1] = sub_24A705208;
  uint64_t v24 = *(void *)(v0 + 120);
  uint64_t v25 = *(void *)(v0 + 128);
  uint64_t v26 = *(void *)(v0 + 104);
  uint64_t v27 = *(void *)(v0 + 112);
  uint64_t v28 = *(void *)(v0 + 88);
  uint64_t v29 = *(void *)(v0 + 96);
  char v30 = *(unsigned char *)(v0 + 200);
  uint64_t v31 = *(void *)(v0 + 80);
  return v33(v31, v28, v29, v26, v30, v27, v24, v25);
}

uint64_t sub_24A705208(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 168) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_24A7056EC;
  }
  else
  {
    *(void *)(v4 + 176) = a1;
    uint64_t v5 = sub_24A705330;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24A705330()
{
  id v1 = objc_msgSend(*(id *)(v0 + 176), sel_output);
  *(void *)(v0 + 184) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24A7053F8;
  v2[16] = v1;
  return MEMORY[0x270FA2498](sub_24A701938, 0, 0);
}

uint64_t sub_24A7053F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[2] = v2;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = (void *)v3[23];
  swift_task_dealloc();

  return MEMORY[0x270FA2498](sub_24A705514, 0, 0);
}

uint64_t sub_24A705514()
{
  id v1 = *(void **)(v0 + 176);
  sub_24A763338();
  swift_bridgeObjectRelease();
  sub_24A762E68();
  sub_24A762E68();
  sub_24A762E68();
  swift_bridgeObjectRelease();
  sub_24A762E68();
  sub_24A762E68();
  swift_bridgeObjectRelease();
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = sub_24A73704C(v2, 1);
  uint64_t v5 = v4;
  sub_24A762E68();
  sub_24A762E68();
  v5[3] = MEMORY[0x263F8D310];
  void *v5 = 0x6D32333B305B1BLL;
  v5[1] = 0xE700000000000000;
  nullsub_1(v3);
  sub_24A763678();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_24A7056EC()
{
  id v1 = *(void **)(v0 + 168);
  *(void *)(v0 + 56) = v1;
  id v2 = v1;
  sub_24A704710(&qword_2697B3008);
  if (swift_dynamicCast())
  {
    uint64_t v4 = *(void **)(v0 + 40);
    uint64_t v3 = *(void **)(v0 + 48);
    if ((unint64_t)v3 >= 3)
    {

      swift_bridgeObjectRelease();
      if (v4)
      {
        uint64_t v15 = *(void *)(v0 + 96);
        id v16 = v4;
        sub_24A6FE5B0(v15, v16);
        if (v17)
        {
          uint64_t v18 = swift_allocObject();
          uint64_t v19 = sub_24A73704C(v18, 1);
          uint64_t v21 = v20;
          sub_24A762E68();
          sub_24A762E68();
          v21[3] = MEMORY[0x263F8D310];
          *uint64_t v21 = 0x6D33333B305B1BLL;
          v21[1] = 0xE700000000000000;
          nullsub_1(v19);
          sub_24A763678();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          int64_t v22 = *(uint64_t (**)(void))(v0 + 8);
          goto LABEL_21;
        }
      }
      swift_willThrow();

      goto LABEL_20;
    }
    sub_24A705C08(*(void **)(v0 + 40), *(void **)(v0 + 48));
  }
  uint64_t v5 = *(void **)(v0 + 168);

  *(void *)(v0 + 64) = v5;
  id v6 = v5;
  sub_24A705D7C(0, &qword_2697B3010);
  if (!swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
LABEL_19:

    goto LABEL_20;
  }
  uint64_t v7 = *(void **)(v0 + 72);
  id v8 = objc_msgSend(v7, sel_domain);
  uint64_t v9 = sub_24A762E08();
  uint64_t v11 = v10;

  if (v9 == sub_24A762E08() && v11 == v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v14 = sub_24A7635B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      goto LABEL_18;
    }
  }
  if (objc_msgSend(v7, sel_code) != (id)9004)
  {
LABEL_18:
    swift_bridgeObjectRelease();

    goto LABEL_19;
  }

  sub_24A763338();
  sub_24A762E68();
  sub_24A762E68();
  sub_24A762E68();
  sub_24A762E68();
  sub_24A762E68();
  sub_24A762E68();
  sub_24A762E68();
  sub_24A762E68();
  swift_bridgeObjectRelease();
  sub_24A762E68();
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = sub_24A73704C(v23, 1);
  uint64_t v26 = v25;
  sub_24A762E68();
  sub_24A762E68();
  v26[3] = MEMORY[0x263F8D310];
  *uint64_t v26 = 0x6D31333B305B1BLL;
  v26[1] = 0xE700000000000000;
  nullsub_1(v24);
  sub_24A763678();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_willThrow();

LABEL_20:
  int64_t v22 = *(uint64_t (**)(void))(v0 + 8);
LABEL_21:
  return v22();
}

void *sub_24A705BC4(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

void sub_24A705C08(void *a1, void *a2)
{
  if ((unint64_t)a2 >= 3)
  {
  }
}

uint64_t sub_24A705C4C(uint64_t a1)
{
  uint64_t v2 = sub_24A704710(&qword_2697B3020);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24A705CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_24A705D08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A704710(&qword_2697B3020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_24A705D70(uint64_t a1)
{
  sub_24A700A70(a1, *(id **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_24A705D7C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_24A705DB8()
{
  unint64_t result = qword_2697B3078;
  if (!qword_2697B3078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3078);
  }
  return result;
}

void sub_24A705E0C(uint64_t a1)
{
  sub_24A700C78(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_24A705E14()
{
  uint64_t v1 = sub_24A704710(&qword_2697B3088);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24A705EA8(void *a1, void *a2)
{
  sub_24A704710(&qword_2697B3088);

  return sub_24A700E48(a1, a2);
}

uint64_t sub_24A705F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24A705F3C()
{
  return swift_release();
}

uint64_t sub_24A705F44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_24A763468();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for ActionExecutor()
{
  return &type metadata for ActionExecutor;
}

void destroy for ActionExecutor.ExecutionError(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 8);
  if ((unint64_t)v1 >= 0xFFFFFFFF)
  {
    id v2 = *(id *)a1;
  }
}

uint64_t _s23ConditionalEngineShared14ActionExecutorO14ExecutionErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 8);
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v4 = *(void **)a2;
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    id v5 = v4;
    id v6 = v3;
  }
  return a1;
}

uint64_t assignWithCopy for ActionExecutor.ExecutionError(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      uint64_t v11 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      unint64_t v12 = *(void **)(a2 + 8);
      *(void *)(a1 + 8) = v12;
      id v13 = v11;
      id v14 = v12;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  id v5 = *(void **)a1;
  if (v4 < 0xFFFFFFFF)
  {

    goto LABEL_7;
  }
  id v6 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v7 = v6;

  id v8 = *(void **)(a2 + 8);
  uint64_t v9 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v8;
  id v10 = v8;

  return a1;
}

__n128 initializeWithTake for ActionExecutor.ExecutionError(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t assignWithTake for ActionExecutor.ExecutionError(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)(a1 + 8);
  if ((unint64_t)v4 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  unint64_t v5 = *(void *)(a2 + 8);
  if (v5 < 0xFFFFFFFF)
  {
    id v7 = *(void **)a1;

LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  id v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionExecutor.ExecutionError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ActionExecutor.ExecutionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_24A70634C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_24A706368(void *result, int a2)
{
  if (a2 < 0)
  {
    *__n128 result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionExecutor.ExecutionError()
{
  return &type metadata for ActionExecutor.ExecutionError;
}

void type metadata accessor for RTLocationOfInterestType()
{
  if (!qword_2697B30C0)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_2697B30C0);
    }
  }
}

void destroy for ActionExecutor.Parameter(uint64_t a1)
{
  swift_bridgeObjectRelease();
  id v2 = *(void **)(a1 + 16);
}

void *_s23ConditionalEngineShared14ActionExecutorO9ParameterVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  unsigned int v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for ActionExecutor.Parameter(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unsigned int v4 = (void *)a2[2];
  id v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  return a1;
}

__n128 initializeWithTake for ActionExecutor.Parameter(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ActionExecutor.Parameter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  unsigned int v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for ActionExecutor.Parameter(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionExecutor.Parameter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionExecutor.Parameter()
{
  return &type metadata for ActionExecutor.Parameter;
}

uint64_t sub_24A7065C4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_24A704710(&qword_2697B3008);
    uint64_t v5 = swift_allocError();
    *id v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    if (a2)
    {
      **(void **)(*(void *)(v3 + 64) + 40) = a2;
      swift_unknownObjectRetain();
      a1 = v3;
    }
    else
    {
      __break(1u);
    }
    return MEMORY[0x270FA2408](a1);
  }
}

uint64_t sub_24A706718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 32) = a4;
  *(void *)(v5 + 40) = a5;
  return MEMORY[0x270FA2498](sub_24A706738, 0, 0);
}

uint64_t sub_24A706738()
{
  id v1 = objc_msgSend(*(id *)(v0 + 40), sel_dialog);
  *(void *)(v0 + 48) = v1;
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  *unint64_t v2 = v0;
  v2[1] = sub_24A706800;
  v2[16] = v1;
  return MEMORY[0x270FA2498](sub_24A708740, 0, 0);
}

uint64_t sub_24A706800()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_24A706B80;
  }
  else
  {

    uint64_t v3 = sub_24A70691C;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24A70691C()
{
  id v1 = objc_msgSend(*(id *)(v0 + 40), sel_providedValues);
  sub_24A705D7C(0, &qword_2697B3040);
  unint64_t v2 = sub_24A762F38();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v3 = sub_24A763428();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v3) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v3) {
      goto LABEL_10;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v5 = 0;
  do
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v6 = (id)MEMORY[0x24C5CE400](v5, v2);
    }
    else {
      id v6 = *(id *)(v2 + 8 * v5 + 32);
    }
    id v7 = v6;
    *(void *)(v10 + 24) = v5;
    sub_24A763598();
    sub_24A762E68();
    swift_bridgeObjectRelease();
    sub_24A762E68();
    sub_24A700F58(0);
    sub_24A762E68();
    swift_bridgeObjectRelease();
    sub_24A704710((uint64_t *)&unk_2697B32D0);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_24A763FD0;
    *(void *)(v8 + 56) = MEMORY[0x263F8D310];
    *(void *)(v8 + 32) = 9;
    *(void *)(v8 + 40) = 0xE100000000000000;
    ++v5;
    swift_bridgeObjectRetain();
    sub_24A763678();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  while (v3 != v5);
LABEL_10:
  swift_bridgeObjectRelease_n();
  sub_24A706C2C(*(void **)(v10 + 40));
  uint64_t v9 = *(uint64_t (**)(void))(v10 + 8);
  return v9();
}

uint64_t sub_24A706B80()
{
  id v1 = *(void **)(v0 + 64);

  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  sub_24A704710(&qword_2697B3090);
  sub_24A762F98();

  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

id sub_24A706C2C(void *a1)
{
  sub_24A708088((uint64_t)&v31);
  if (!v33)
  {
    sub_24A705C4C((uint64_t)&v31);
    goto LABEL_56;
  }
  uint64_t v2 = MEMORY[0x263F8D310];
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_56:
    uint64_t v26 = MEMORY[0x263F8D310];
    sub_24A704710((uint64_t *)&unk_2697B32D0);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_24A763FD0;
    *(void *)(v27 + 56) = v26;
    *(void *)(v27 + 32) = 0xD000000000000035;
    *(void *)(v27 + 40) = 0x800000024A767B00;
    sub_24A763678();
    swift_bridgeObjectRelease();
    return (id)sub_24A706C2C(a1);
  }
  id result = (id)v29;
  uint64_t v4 = HIBYTE(v30) & 0xF;
  uint64_t v5 = v29 & 0xFFFFFFFFFFFFLL;
  if ((v30 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(v30) & 0xF;
  }
  else {
    uint64_t v6 = v29 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    swift_bridgeObjectRelease();
    goto LABEL_56;
  }
  if ((v30 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (uint64_t)sub_24A753A38(v29, v30, 10);
    char v10 = v28;
    goto LABEL_47;
  }
  if ((v30 & 0x2000000000000000) == 0)
  {
    if ((v29 & 0x1000000000000000) != 0) {
      id v7 = (unsigned __int8 *)((v30 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      id v7 = (unsigned __int8 *)sub_24A763398();
    }
    uint64_t v8 = (uint64_t)sub_24A753A20(v7, v5, 10);
    char v10 = v9 & 1;
LABEL_47:
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      uint64_t v31 = 0;
      uint64_t v32 = 0xE000000000000000;
      sub_24A763338();
      sub_24A762E68();
      sub_24A763598();
      sub_24A762E68();
      swift_bridgeObjectRelease();
      sub_24A762E68();
      sub_24A704710((uint64_t *)&unk_2697B32D0);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_24A763FD0;
      uint64_t v31 = 0x6D32333B305B1BLL;
      uint64_t v32 = 0xE700000000000000;
      sub_24A762E68();
      sub_24A762E68();
      uint64_t v21 = v31;
      uint64_t v22 = v32;
      *(void *)(v20 + 56) = v2;
      *(void *)(v20 + 32) = v21;
      *(void *)(v20 + 40) = v22;
      sub_24A763678();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return objc_msgSend(a1, sel_respondWithSelectedIndex_, v8);
    }
    goto LABEL_56;
  }
  uint64_t v31 = v29;
  uint64_t v32 = v30 & 0xFFFFFFFFFFFFFFLL;
  if (v29 == 43)
  {
    if (!v4) {
      goto LABEL_60;
    }
    if (v4 == 1 || (BYTE1(v29) - 48) > 9u) {
      goto LABEL_34;
    }
    uint64_t v8 = (BYTE1(v29) - 48);
    if (v4 != 2)
    {
      if ((BYTE2(v29) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v8 = 10 * (BYTE1(v29) - 48) + (BYTE2(v29) - 48);
      uint64_t v11 = v4 - 3;
      if (v11)
      {
        unint64_t v12 = (unsigned __int8 *)&v31 + 3;
        while (1)
        {
          unsigned int v13 = *v12 - 48;
          if (v13 > 9) {
            goto LABEL_34;
          }
          uint64_t v14 = 10 * v8;
          if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63) {
            goto LABEL_34;
          }
          uint64_t v8 = v14 + v13;
          if (__OFADD__(v14, v13)) {
            goto LABEL_34;
          }
          char v10 = 0;
          ++v12;
          if (!--v11) {
            goto LABEL_47;
          }
        }
      }
    }
LABEL_46:
    char v10 = 0;
    goto LABEL_47;
  }
  if (v29 != 45)
  {
    if (!v4 || (v29 - 48) > 9u) {
      goto LABEL_34;
    }
    uint64_t v8 = (v29 - 48);
    if (v4 != 1)
    {
      if ((BYTE1(v29) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v8 = 10 * (v29 - 48) + (BYTE1(v29) - 48);
      uint64_t v15 = v4 - 2;
      if (v15)
      {
        id v16 = (unsigned __int8 *)&v31 + 2;
        while (1)
        {
          unsigned int v17 = *v16 - 48;
          if (v17 > 9) {
            goto LABEL_34;
          }
          uint64_t v18 = 10 * v8;
          if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63) {
            goto LABEL_34;
          }
          uint64_t v8 = v18 + v17;
          if (__OFADD__(v18, v17)) {
            goto LABEL_34;
          }
          char v10 = 0;
          ++v16;
          if (!--v15) {
            goto LABEL_47;
          }
        }
      }
    }
    goto LABEL_46;
  }
  if (v4)
  {
    if (v4 != 1 && (BYTE1(v29) - 48) <= 9u)
    {
      if (v4 == 2)
      {
        char v10 = 0;
        uint64_t v8 = -(uint64_t)(BYTE1(v29) - 48);
        goto LABEL_47;
      }
      if ((BYTE2(v29) - 48) <= 9u)
      {
        uint64_t v8 = -10 * (BYTE1(v29) - 48) - (BYTE2(v29) - 48);
        uint64_t v19 = v4 - 3;
        if (!v19) {
          goto LABEL_46;
        }
        uint64_t v23 = (unsigned __int8 *)&v31 + 3;
        while (1)
        {
          unsigned int v24 = *v23 - 48;
          if (v24 > 9) {
            break;
          }
          uint64_t v25 = 10 * v8;
          if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63) {
            break;
          }
          uint64_t v8 = v25 - v24;
          if (__OFSUB__(v25, v24)) {
            break;
          }
          char v10 = 0;
          ++v23;
          if (!--v19) {
            goto LABEL_47;
          }
        }
      }
    }
LABEL_34:
    uint64_t v8 = 0;
    char v10 = 1;
    goto LABEL_47;
  }
  __break(1u);
LABEL_60:
  __break(1u);
  return result;
}

uint64_t sub_24A707168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 24) = a4;
  *(void *)(v5 + 32) = a5;
  return MEMORY[0x270FA2498](sub_24A707188, 0, 0);
}

uint64_t sub_24A707188()
{
  id v1 = objc_msgSend(*(id *)(v0 + 32), sel_dialog);
  *(void *)(v0 + 40) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24A707250;
  v2[16] = v1;
  return MEMORY[0x270FA2498](sub_24A708740, 0, 0);
}

uint64_t sub_24A707250()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_24A7073CC;
  }
  else
  {

    uint64_t v3 = sub_24A70736C;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24A70736C()
{
  sub_24A707478(*(void **)(v0 + 32));
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A7073CC()
{
  id v1 = *(void **)(v0 + 56);

  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  sub_24A704710(&qword_2697B3090);
  sub_24A762F98();

  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_24A707478(void *a1)
{
  sub_24A708088((uint64_t)&v16);
  if (v18)
  {
    uint64_t v2 = MEMORY[0x263F8D310];
    if (swift_dynamicCast())
    {
      uint64_t v8 = (void *)sub_24A74F494(v14, v15);
      swift_bridgeObjectRelease();
      if (v8)
      {
        unint64_t v16 = 96;
        unint64_t v17 = 0xE100000000000000;
        id v9 = objc_msgSend(a1, sel_parameterName);
        sub_24A762E08();

        sub_24A762E68();
        swift_bridgeObjectRelease();
        sub_24A762E68();
        id v10 = objc_msgSend(v8, sel_description);
        sub_24A762E08();

        sub_24A762E68();
        swift_bridgeObjectRelease();
        sub_24A762E68();
        unint64_t v16 = 0xD00000000000002ALL;
        unint64_t v17 = 0x800000024A767C20;
        sub_24A762E68();
        swift_bridgeObjectRelease();
        sub_24A704710((uint64_t *)&unk_2697B32D0);
        uint64_t v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = xmmword_24A763FD0;
        unint64_t v16 = 0x6D32333B305B1BLL;
        unint64_t v17 = 0xE700000000000000;
        sub_24A762E68();
        sub_24A762E68();
        unint64_t v12 = v16;
        unint64_t v13 = v17;
        *(void *)(v11 + 56) = v2;
        *(void *)(v11 + 32) = v12;
        *(void *)(v11 + 40) = v13;
        sub_24A763678();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        objc_msgSend(a1, sel_respondWithValue_, v8);
        goto LABEL_6;
      }
    }
  }
  else
  {
    sub_24A705C4C((uint64_t)&v16);
  }
  uint64_t v3 = MEMORY[0x263F8D310];
  sub_24A704710((uint64_t *)&unk_2697B32D0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24A763FD0;
  *(void *)(v4 + 56) = v3;
  *(void *)(v4 + 32) = 0xD00000000000002DLL;
  *(void *)(v4 + 40) = 0x800000024A767BF0;
  sub_24A763678();
  swift_bridgeObjectRelease();
  sub_24A762E08();
  id v5 = objc_allocWithZone(MEMORY[0x263F087E8]);
  uint64_t v6 = (void *)sub_24A762DF8();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_initWithDomain_code_userInfo_, v6, 0, 0);

  uint64_t v8 = (void *)sub_24A7623E8();
  objc_msgSend(a1, sel_respondWithError_, v8);
LABEL_6:
}

id sub_24A707840(void *a1)
{
  return sub_24A707B64(a1, (uint64_t (*)(void *))sub_24A707840);
}

id sub_24A707858(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a1)
  {
    swift_unknownObjectRetain();
    sub_24A763338();
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(a1, sel_print);
    uint64_t v7 = MEMORY[0x263F8D310];
    uint64_t v8 = sub_24A762F38();

    if (*(void *)(v8 + 16)) {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    sub_24A704710(&qword_2697B3098);
    sub_24A762E18();
    sub_24A762E68();
    swift_bridgeObjectRelease();
    sub_24A762E68();
    sub_24A704710((uint64_t *)&unk_2697B32D0);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_24A763FD0;
    *(void *)(v10 + 56) = v7;
    *(void *)(v10 + 32) = 0x3A696C636B6E696CLL;
    *(void *)(v10 + 40) = 0xE900000000000020;
    swift_bridgeObjectRetain();
    sub_24A763678();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24A704710((uint64_t *)&unk_2697B32D0);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_24A763FD0;
    *(void *)(v9 + 56) = MEMORY[0x263F8D310];
    *(void *)(v9 + 32) = 0xD000000000000018;
    *(void *)(v9 + 40) = 0x800000024A767BA0;
    sub_24A763678();
  }
  swift_bridgeObjectRelease();
  return sub_24A707840(a4);
}

uint64_t sub_24A707A6C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

id sub_24A707B64(void *a1, uint64_t (*a2)(void *))
{
  sub_24A708088((uint64_t)&v15);
  if (v17)
  {
    uint64_t v4 = MEMORY[0x263F8D310];
    if (swift_dynamicCast())
    {
      id v5 = objc_allocWithZone(NSString);
      id v6 = (void *)sub_24A762DF8();
      swift_bridgeObjectRelease();
      id v7 = objc_msgSend(v5, sel_initWithString_, v6);

      id v8 = objc_msgSend(v7, sel_BOOLValue);
      unint64_t v15 = 0;
      unint64_t v16 = 0xE000000000000000;
      sub_24A763338();
      swift_bridgeObjectRelease();
      unint64_t v15 = 0xD000000000000029;
      unint64_t v16 = 0x800000024A767B40;
      sub_24A762E68();
      swift_bridgeObjectRelease();
      sub_24A762E68();
      sub_24A704710((uint64_t *)&unk_2697B32D0);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_24A763FD0;
      unint64_t v15 = 0x6D32333B305B1BLL;
      unint64_t v16 = 0xE700000000000000;
      sub_24A762E68();
      sub_24A762E68();
      unint64_t v10 = v15;
      unint64_t v11 = v16;
      *(void *)(v9 + 56) = v4;
      *(void *)(v9 + 32) = v10;
      *(void *)(v9 + 40) = v11;
      sub_24A763678();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return objc_msgSend(a1, sel_respondWithConfirmation_, v8);
    }
  }
  else
  {
    sub_24A705C4C((uint64_t)&v15);
  }
  uint64_t v13 = MEMORY[0x263F8D310];
  sub_24A704710((uint64_t *)&unk_2697B32D0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_24A763FD0;
  *(void *)(v14 + 56) = v13;
  *(void *)(v14 + 32) = 0xD000000000000035;
  *(void *)(v14 + 40) = 0x800000024A767B00;
  sub_24A763678();
  swift_bridgeObjectRelease();
  return (id)a2(a1);
}

id sub_24A707DFC(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a1)
  {
    swift_unknownObjectRetain();
    sub_24A763338();
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(a1, sel_print);
    uint64_t v7 = MEMORY[0x263F8D310];
    uint64_t v8 = sub_24A762F38();

    if (*(void *)(v8 + 16)) {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    sub_24A704710(&qword_2697B3098);
    sub_24A762E18();
    sub_24A762E68();
    swift_bridgeObjectRelease();
    sub_24A762E68();
    sub_24A704710((uint64_t *)&unk_2697B32D0);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_24A763FD0;
    *(void *)(v10 + 56) = v7;
    *(void *)(v10 + 32) = 0x3A696C636B6E696CLL;
    *(void *)(v10 + 40) = 0xE900000000000020;
    swift_bridgeObjectRetain();
    sub_24A763678();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24A704710((uint64_t *)&unk_2697B32D0);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_24A763FD0;
    *(void *)(v9 + 56) = MEMORY[0x263F8D310];
    *(void *)(v9 + 32) = 0xD00000000000001FLL;
    *(void *)(v9 + 40) = 0x800000024A767AE0;
    sub_24A763678();
  }
  swift_bridgeObjectRelease();
  return sub_24A707840(a4);
}

double sub_24A708088@<D0>(uint64_t a1@<X8>)
{
  sub_24A704710((uint64_t *)&unk_2697B32D0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x263F8D310];
  *(_OWORD *)(v2 + 16) = xmmword_24A763FD0;
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 32) = 0x3E696C636B6E696CLL;
  *(void *)(v2 + 40) = 0xE900000000000020;
  sub_24A763678();
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_24A7636E8();
  if (v5)
  {
    *(void *)(a1 + 24) = v3;
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

id sub_24A70816C()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24A708214()
{
  return type metadata accessor for PerformActionExecutorDelegate();
}

uint64_t type metadata accessor for PerformActionExecutorDelegate()
{
  uint64_t result = qword_2697B32B8;
  if (!qword_2697B32B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24A708268()
{
  sub_24A7082F8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_24A7082F8()
{
  if (!qword_2697B32C8)
  {
    sub_24A705D7C(255, &qword_2697B3070);
    sub_24A704B6C(&qword_2697B3008);
    unint64_t v0 = sub_24A762FB8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2697B32C8);
    }
  }
}

uint64_t sub_24A70837C(void *a1, void *a2)
{
  uint64_t v5 = sub_24A704710(&qword_2697B3090);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v15 = (uint64_t)a1;
    id v9 = a1;
    return sub_24A762FA8();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v2 + OBJC_IVAR____TtC23ConditionalEngineShared29PerformActionExecutorDelegate_continuation, v5);
    if (a2)
    {
      uint64_t v11 = (uint64_t)a2;
    }
    else
    {
      sub_24A705DB8();
      uint64_t v11 = swift_allocError();
      *unint64_t v12 = xmmword_24A7640F0;
    }
    uint64_t v15 = v11;
    id v13 = a2;
    sub_24A762F98();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_24A7084E8(void *a1)
{
  uint64_t v2 = v1;
  sub_24A704710(&qword_2697B3440);
  MEMORY[0x270FA5388]();
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_24A763338();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(a1, sel_parameterName, 0xD00000000000002ALL, 0x800000024A767C50);
  sub_24A762E08();

  sub_24A762E68();
  swift_bridgeObjectRelease();
  sub_24A762E68();
  sub_24A704710((uint64_t *)&unk_2697B32D0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_24A763FD0;
  uint64_t v15 = 1831951131;
  unint64_t v16 = 0xE400000000000000;
  sub_24A762E68();
  sub_24A762E68();
  uint64_t v8 = v15;
  unint64_t v9 = v16;
  *(void *)(v7 + 56) = MEMORY[0x263F8D310];
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 40) = v9;
  sub_24A763678();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_24A763008();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = v2;
  v11[5] = a1;
  id v12 = v2;
  id v13 = a1;
  sub_24A70DA08((uint64_t)v5, (uint64_t)&unk_2697B3308, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_24A708720(uint64_t a1)
{
  *(void *)(v1 + 128) = a1;
  return MEMORY[0x270FA2498](sub_24A708740, 0, 0);
}

uint64_t sub_24A708740()
{
  uint64_t v1 = (void *)v0[16];
  if (v1)
  {
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_24A708878;
    uint64_t v2 = swift_continuation_init();
    v0[10] = MEMORY[0x263EF8330];
    v0[11] = 0x40000000;
    v0[12] = sub_24A7065C4;
    v0[13] = &unk_26528D9C8;
    v0[14] = v2;
    objc_msgSend(v1, sel_getResultWithCompletionHandler_, v0 + 10);
    return MEMORY[0x270FA23F0](v0 + 2);
  }
  else
  {
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
}

uint64_t sub_24A708878()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 136) = v1;
  if (v1) {
    uint64_t v2 = sub_24A708B10;
  }
  else {
    uint64_t v2 = sub_24A708988;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24A708988()
{
  id v1 = objc_msgSend(*(id *)(v0 + 120), sel_print);
  uint64_t v2 = MEMORY[0x263F8D310];
  uint64_t v3 = sub_24A762F38();

  uint64_t v4 = *(void **)(v0 + 128);
  if (*(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_24A762E68();
    swift_bridgeObjectRelease();
    sub_24A704710((uint64_t *)&unk_2697B32D0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_24A763FD0;
    *(void *)(v5 + 56) = v2;
    *(void *)(v5 + 32) = 0x3A696C636B6E696CLL;
    *(void *)(v5 + 40) = 0xE900000000000020;
    swift_bridgeObjectRetain();
    sub_24A763678();
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  id v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_24A708B10()
{
  id v1 = *(void **)(v0 + 128);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24A708B80(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24A704710(&qword_2697B3440);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = 0;
  unint64_t v17 = 0xE000000000000000;
  sub_24A763338();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(a1, sel_parameterName, 0xD000000000000026, 0x800000024A767BC0);
  sub_24A762E08();

  sub_24A762E68();
  swift_bridgeObjectRelease();
  sub_24A762E68();
  sub_24A704710((uint64_t *)&unk_2697B32D0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_24A763FD0;
  uint64_t v16 = 1831951131;
  unint64_t v17 = 0xE400000000000000;
  sub_24A762E68();
  sub_24A762E68();
  uint64_t v9 = v16;
  unint64_t v10 = v17;
  *(void *)(v8 + 56) = MEMORY[0x263F8D310];
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v10;
  sub_24A763678();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_24A763008();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  id v12 = (void *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = v2;
  v12[5] = a1;
  id v13 = v2;
  id v14 = a1;
  sub_24A70DA08((uint64_t)v6, (uint64_t)&unk_2697B32E8, (uint64_t)v12);
  return swift_release();
}

void sub_24A708DB8(void *a1)
{
  uint64_t v2 = v1;
  sub_24A763338();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(a1, sel_parameterName);
  sub_24A762E08();

  sub_24A762E68();
  swift_bridgeObjectRelease();
  sub_24A762E68();
  sub_24A704710((uint64_t *)&unk_2697B32D0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24A763FD0;
  sub_24A762E68();
  sub_24A762E68();
  uint64_t v6 = MEMORY[0x263F8D310];
  *(void *)(v5 + 56) = MEMORY[0x263F8D310];
  *(void *)(v5 + 32) = 1831951131;
  *(void *)(v5 + 40) = 0xE400000000000000;
  sub_24A763678();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(a1, sel_dialog);
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v2;
    *(void *)(v9 + 24) = a1;
    aBlock[4] = sub_24A709334;
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24A707A6C;
    aBlock[3] = &unk_26FE3A5B0;
    unint64_t v10 = _Block_copy(aBlock);
    id v11 = v2;
    id v12 = a1;
    swift_release();
    objc_msgSend(v8, sel_getResultWithCompletionHandler_, v10);
    _Block_release(v10);
  }
  else
  {
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_24A763FD0;
    *(void *)(v13 + 56) = v6;
    *(void *)(v13 + 32) = 0xD000000000000018;
    *(void *)(v13 + 40) = 0x800000024A767BA0;
    sub_24A763678();
    swift_bridgeObjectRelease();
    sub_24A707840(a1);
  }
}

void sub_24A709090(void *a1)
{
  sub_24A704710((uint64_t *)&unk_2697B32D0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_24A763FD0;
  uint64_t v4 = MEMORY[0x263F8D310];
  *(void *)(v3 + 56) = MEMORY[0x263F8D310];
  *(void *)(v3 + 32) = 0xD00000000000002ELL;
  *(void *)(v3 + 40) = 0x800000024A767AB0;
  sub_24A763678();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(a1, sel_result);
  id v6 = objc_msgSend(v5, sel_output);

  id v7 = objc_msgSend(v6, sel_dialog);
  if (v7)
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v1;
    *(void *)(v8 + 24) = a1;
    aBlock[4] = sub_24A709314;
    aBlock[5] = v8;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24A707A6C;
    aBlock[3] = &unk_26FE3A560;
    uint64_t v9 = _Block_copy(aBlock);
    id v10 = v1;
    id v11 = a1;
    swift_release();
    objc_msgSend(v7, sel_getResultWithCompletionHandler_, v9);
    _Block_release(v9);
  }
  else
  {
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_24A763FD0;
    *(void *)(v12 + 56) = v4;
    *(void *)(v12 + 32) = 0xD00000000000001FLL;
    *(void *)(v12 + 40) = 0x800000024A767AE0;
    sub_24A763678();
    swift_bridgeObjectRelease();
    sub_24A707840(a1);
  }
}

uint64_t sub_24A7092D4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

id sub_24A709314(void *a1, uint64_t a2)
{
  return sub_24A707DFC(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_24A70931C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24A70932C()
{
  return swift_release();
}

id sub_24A709334(void *a1, uint64_t a2)
{
  return sub_24A707858(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_24A709340()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_24A7093EC;
  *(_OWORD *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_24A707188, 0, 0);
}

uint64_t sub_24A7093EC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24A7094E4()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24A70952C()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_24A7095E4;
  *(_OWORD *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_24A706738, 0, 0);
}

uint64_t initializeBufferWithCopyOfBuffer for ActionExecutionOptions(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for ActionExecutionOptions()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ActionExecutionOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ActionExecutionOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ActionExecutionOptions(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for ActionExecutionOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionExecutionOptions(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionExecutionOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionExecutionOptions()
{
  return &type metadata for ActionExecutionOptions;
}

uint64_t sub_24A7098E4()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24A709914()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_24A70991C()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_24A709924()
{
  return *(void *)(v0 + 24);
}

uint64_t sub_24A709930()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t static BundleIdentifiers.conditionalEngineAppIntentsExtension.getter()
{
  return 0xD000000000000040;
}

unint64_t static BundleIdentifiers.conditionalApp.getter()
{
  return 0xD00000000000002ALL;
}

unint64_t static BundleIdentifiers.userDefaultsSuiteName.getter()
{
  return 0xD00000000000001BLL;
}

ValueMetadata *type metadata accessor for BundleIdentifiers()
{
  return &type metadata for BundleIdentifiers;
}

uint64_t sub_24A7099C4()
{
  return 32;
}

uint64_t sub_24A7099D0()
{
  return 10;
}

void sub_24A7099DC()
{
  sub_24A704710((uint64_t *)&unk_2697B32D0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24A763FD0;
  sub_24A762E68();
  sub_24A762E68();
  *(void *)(v0 + 56) = MEMORY[0x263F8D310];
  *(void *)(v0 + 32) = 0x6D31333B305B1BLL;
  *(void *)(v0 + 40) = 0xE700000000000000;
  sub_24A763678();
  swift_bridgeObjectRelease();
  exit(-1);
}

void *initializeBufferWithCopyOfBuffer for LastUsedBundle(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for LastUsedBundle()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for LastUsedBundle(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for LastUsedBundle(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LastUsedBundle(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LastUsedBundle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LastUsedBundle()
{
  return &type metadata for LastUsedBundle;
}

uint64_t sub_24A709C04()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_24A763688();
  sub_24A763698();
  if (v1) {
    sub_24A762E58();
  }
  return sub_24A7636B8();
}

uint64_t sub_24A709C74()
{
  if (!*(void *)(v0 + 8)) {
    return sub_24A763698();
  }
  sub_24A763698();

  return sub_24A762E58();
}

uint64_t sub_24A709CEC()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_24A763688();
  sub_24A763698();
  if (v1) {
    sub_24A762E58();
  }
  return sub_24A7636B8();
}

uint64_t sub_24A709D58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *(void *)&xmmword_2697B98F8 = a1;
  *((void *)&xmmword_2697B98F8 + 1) = a2;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = a1;
  a3[1] = a2;
  return result;
}

uint64_t sub_24A709DB8(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (!v3) {
    return v4 == 0;
  }
  if (!v4) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v4) {
    return 1;
  }
  else {
    return sub_24A7635B8();
  }
}

unint64_t sub_24A709E08()
{
  unint64_t result = qword_2697B3310;
  if (!qword_2697B3310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3310);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CommandError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CommandError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CommandError()
{
  return &type metadata for CommandError;
}

unint64_t sub_24A709EF8()
{
  unint64_t result = qword_2697B3318;
  if (!qword_2697B3318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3318);
  }
  return result;
}

uint64_t type metadata accessor for ConversationEntityRepresentation()
{
  uint64_t result = qword_2697B3320;
  if (!qword_2697B3320) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24A709FA4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24A709FE4(uint64_t a1)
{
  uint64_t v2 = sub_24A762A18();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v6 = sub_24A762A78();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

uint64_t sub_24A70A0EC()
{
  sub_24A762A68();

  return swift_deallocClassInstance();
}

uint64_t sub_24A70A11C()
{
  return type metadata accessor for ConversationEntityRepresentation();
}

unint64_t sub_24A70A124()
{
  return 0xD000000000000013;
}

unint64_t sub_24A70A140()
{
  return 0xD000000000000012;
}

uint64_t sub_24A70A15C()
{
  return sub_24A7629D8();
}

uint64_t sub_24A70A180()
{
  return sub_24A7629E8();
}

uint64_t sub_24A70A1A4()
{
  return sub_24A762A08() & 1;
}

uint64_t sub_24A70A1CC()
{
  return sub_24A7629F8();
}

uint64_t sub_24A70A1F0(uint64_t a1)
{
  uint64_t v3 = sub_24A70A55C(&qword_2697B3370);

  return MEMORY[0x270F0CBC0](a1, v1, v3);
}

uint64_t sub_24A70A24C()
{
  uint64_t v1 = sub_24A70A55C(&qword_2697B3360);

  return MEMORY[0x270F0C9E8](v0, v1);
}

uint64_t sub_24A70A298()
{
  return sub_24A762A58();
}

uint64_t sub_24A70A2BC(uint64_t a1)
{
  uint64_t v3 = sub_24A70A55C(&qword_2697B3370);

  return MEMORY[0x270F0CBA8](a1, v1, v3);
}

uint64_t sub_24A70A318@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24A762A38();
  *a1 = result;
  return result;
}

uint64_t sub_24A70A340()
{
  return sub_24A762A48();
}

uint64_t sub_24A70A364()
{
  return sub_24A762A28();
}

uint64_t sub_24A70A388()
{
  return sub_24A70A55C(&qword_2697B3330);
}

uint64_t sub_24A70A3BC()
{
  return sub_24A70A55C(&qword_2697B3338);
}

uint64_t sub_24A70A3F0()
{
  return sub_24A70A55C(&qword_2697B3340);
}

uint64_t sub_24A70A424()
{
  return sub_24A70A55C(&qword_2697B3348);
}

uint64_t sub_24A70A458()
{
  return sub_24A70A55C(&qword_2697B3350);
}

uint64_t sub_24A70A48C()
{
  return sub_24A70A55C(&qword_2697B3358);
}

uint64_t sub_24A70A4C0()
{
  return sub_24A70A55C(&qword_2697B3360);
}

uint64_t sub_24A70A4F4()
{
  return sub_24A70A55C(&qword_2697B3368);
}

uint64_t sub_24A70A528()
{
  return sub_24A70A55C(&qword_2697B3370);
}

uint64_t sub_24A70A55C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ConversationEntityRepresentation();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t CoreRoutineManager.Location.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CoreRoutineManager.Location.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CoreRoutineManager.Location.name.modify())()
{
  return nullsub_1;
}

uint64_t CoreRoutineManager.Location.type.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CoreRoutineManager.Location.type.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*CoreRoutineManager.Location.type.modify())()
{
  return nullsub_1;
}

double CoreRoutineManager.Location.latitude.getter()
{
  return *(double *)(v0 + 32);
}

void CoreRoutineManager.Location.latitude.setter(double a1)
{
  *(double *)(v1 + 32) = a1;
}

uint64_t (*CoreRoutineManager.Location.latitude.modify())()
{
  return nullsub_1;
}

double CoreRoutineManager.Location.longitude.getter()
{
  return *(double *)(v0 + 40);
}

void CoreRoutineManager.Location.longitude.setter(double a1)
{
  *(double *)(v1 + 40) = a1;
}

uint64_t (*CoreRoutineManager.Location.longitude.modify())()
{
  return nullsub_1;
}

id sub_24A70A710()
{
  type metadata accessor for CoreRoutineManager();
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  id result = objc_msgSend(self, sel_defaultManager);
  *(void *)(v0 + 112) = result;
  *(void *)(v0 + 120) = 0;
  qword_2697B3378 = v0;
  return result;
}

uint64_t static CoreRoutineManager.shared.getter()
{
  if (qword_2697B2E70 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_24A70A7CC()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_24A70A7EC, v0, 0);
}

uint64_t sub_24A70A7EC()
{
  uint64_t v1 = *(void *)(v0[2] + 120);
  v0[3] = v1;
  if (v1)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v2 = swift_bridgeObjectRetain();
    return v6(v2);
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v0[4] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_24A70A908;
    uint64_t v5 = (void *)v0[2];
    v4[26] = v5;
    v4[27] = *v5;
    return MEMORY[0x270FA2498](sub_24A70AEE0, v5, 0);
  }
}

uint64_t sub_24A70A908(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  *(void *)(*(void *)v1 + 40) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24A70AA20, v2, 0);
}

uint64_t sub_24A70AA20()
{
  uint64_t v1 = v0[2];
  *(void *)(v1 + 120) = v0[5];
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void *)(v1 + 120);
  if (v2) {
    swift_bridgeObjectRetain();
  }
  else {
    unint64_t v2 = sub_24A70AAC4(MEMORY[0x263F8EE78]);
  }
  uint64_t v4 = (uint64_t (*)(unint64_t))v0[1];
  swift_bridgeObjectRetain();
  return v4(v2);
}

unint64_t sub_24A70AAC4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24A704710(&qword_2697B30B8);
  unint64_t v2 = (void *)sub_24A763458();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v8 = *v4;
    uint64_t v7 = v4[1];
    uint64_t v9 = v4[2];
    uint64_t v10 = v4[3];
    uint64_t v11 = v4[4];
    uint64_t v12 = v4[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_24A729D3C(v5, v6);
    if (v14) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v15 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v15 = v5;
    v15[1] = v6;
    uint64_t v16 = (void *)(v2[7] + 48 * result);
    void *v16 = v8;
    v16[1] = v7;
    v16[2] = v9;
    v16[3] = v10;
    v16[4] = v11;
    v16[5] = v12;
    uint64_t v17 = v2[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18) {
      goto LABEL_11;
    }
    v2[2] = v19;
    v4 += 8;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24A70AC18(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24A704710(&qword_2697B33C0);
  uint64_t v2 = sub_24A763458();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24A70D3AC(v6, (uint64_t)&v15);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_24A729D3C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_24A70D414(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24A70AD44(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24A704710(&qword_2697B30B0);
  uint64_t v2 = (void *)sub_24A763458();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v8 = *v4;
    uint64_t v7 = v4[1];
    uint64_t v9 = v4[2];
    uint64_t v10 = v4[3];
    uint64_t v11 = v4[4];
    uint64_t v12 = v4[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_24A729D3C(v5, v6);
    if (v14) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v15 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v15 = v5;
    v15[1] = v6;
    uint64_t v16 = (void *)(v2[7] + 48 * result);
    void *v16 = v8;
    v16[1] = v7;
    v16[2] = v9;
    v16[3] = v10;
    v16[4] = v11;
    v16[5] = v12;
    uint64_t v17 = v2[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18) {
      goto LABEL_11;
    }
    v2[2] = v19;
    v4 += 8;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_24A70AE98()
{
  *(void *)(v1 + 208) = v0;
  *(void *)(v1 + 216) = *v0;
  return MEMORY[0x270FA2498](sub_24A70AEE0, v0, 0);
}

uint64_t sub_24A70AEE0()
{
  if (qword_2697B2E78 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24A762D68();
  sub_24A70D1FC(v1, (uint64_t)qword_2697B3530);
  uint64_t v2 = sub_24A762D48();
  os_log_type_t v3 = sub_24A7630B8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_24A6FB000, v2, v3, "[CRM] Update cached locations", v4, 2u);
    MEMORY[0x24C5CEE90](v4, -1, -1);
  }

  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v5;
  void *v5 = v0;
  v5[1] = sub_24A70B044;
  uint64_t v6 = *(void *)(v0 + 208);
  v5[5] = 0;
  v5[6] = v6;
  return MEMORY[0x270FA2498](sub_24A70C27C, v6, 0);
}

uint64_t sub_24A70B044(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(*v2 + 232) = a1;
  swift_task_dealloc();
  if (v1)
  {

    *(_OWORD *)(v3 + 256) = 0u;
    *(_OWORD *)(v3 + 272) = 0u;
    *(_OWORD *)(v3 + 240) = 0u;
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v3 + 288) = v5;
    void *v5 = v4;
    v5[1] = sub_24A70B35C;
    uint64_t v6 = *(void *)(v3 + 208);
    v5[5] = 1;
    v5[6] = v6;
    uint64_t v7 = sub_24A70C27C;
  }
  else
  {
    uint64_t v6 = *(void *)(v3 + 208);
    uint64_t v7 = sub_24A70B1CC;
  }
  return MEMORY[0x270FA2498](v7, v6, 0);
}

uint64_t sub_24A70B1CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = v3;
  unint64_t v4 = *(void *)(v3 + 232);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_24A763428();
    a1 = swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    long long v7 = 0uLL;
    long long v10 = 0uLL;
    goto LABEL_9;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v5 = (id)MEMORY[0x24C5CE400](0, *(void *)(v3 + 232));
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return MEMORY[0x270FA2498](a1, a2, a3);
    }
    id v5 = *(id *)(*(void *)(v3 + 232) + 32);
  }
  swift_bridgeObjectRelease();
  id v6 = v5;
  sub_24A70C108(v6, (uint64_t *)&v14);

  long long v7 = v14;
  uint64_t v8 = v15;
  uint64_t v9 = v16;
  long long v10 = v17;
LABEL_9:
  *(_OWORD *)(v3 + 272) = v10;
  *(void *)(v3 + 256) = v8;
  *(void *)(v3 + 264) = v9;
  *(_OWORD *)(v3 + 240) = v7;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 288) = v12;
  *uint64_t v12 = v3;
  v12[1] = sub_24A70B35C;
  a2 = *(void *)(v3 + 208);
  v12[5] = 1;
  v12[6] = a2;
  a1 = (uint64_t)sub_24A70C27C;
  a3 = 0;
  return MEMORY[0x270FA2498](a1, a2, a3);
}

uint64_t sub_24A70B35C(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(*v2 + 296) = a1;
  swift_task_dealloc();
  if (v1)
  {

    *(_OWORD *)(v3 + 320) = 0u;
    *(_OWORD *)(v3 + 336) = 0u;
    *(_OWORD *)(v3 + 304) = 0u;
    id v5 = (void *)swift_task_alloc();
    *(void *)(v3 + 352) = v5;
    void *v5 = v4;
    v5[1] = sub_24A70B674;
    uint64_t v6 = *(void *)(v3 + 208);
    v5[5] = 3;
    v5[6] = v6;
    long long v7 = sub_24A70C27C;
  }
  else
  {
    uint64_t v6 = *(void *)(v3 + 208);
    long long v7 = sub_24A70B4E4;
  }
  return MEMORY[0x270FA2498](v7, v6, 0);
}

uint64_t sub_24A70B4E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = v3;
  unint64_t v4 = *(void *)(v3 + 296);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_24A763428();
    a1 = swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    long long v7 = 0uLL;
    long long v10 = 0uLL;
    goto LABEL_9;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v5 = (id)MEMORY[0x24C5CE400](0, *(void *)(v3 + 296));
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return MEMORY[0x270FA2498](a1, a2, a3);
    }
    id v5 = *(id *)(*(void *)(v3 + 296) + 32);
  }
  swift_bridgeObjectRelease();
  id v6 = v5;
  sub_24A70C108(v6, (uint64_t *)&v14);

  long long v7 = v14;
  uint64_t v8 = v15;
  uint64_t v9 = v16;
  long long v10 = v17;
LABEL_9:
  *(_OWORD *)(v3 + 336) = v10;
  *(void *)(v3 + 320) = v8;
  *(void *)(v3 + 328) = v9;
  *(_OWORD *)(v3 + 304) = v7;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 352) = v12;
  *uint64_t v12 = v3;
  v12[1] = sub_24A70B674;
  a2 = *(void *)(v3 + 208);
  v12[5] = 3;
  v12[6] = a2;
  a1 = (uint64_t)sub_24A70C27C;
  a3 = 0;
  return MEMORY[0x270FA2498](a1, a2, a3);
}

uint64_t sub_24A70B674(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(*v2 + 360) = a1;
  swift_task_dealloc();
  if (v1)
  {

    *(_OWORD *)(v3 + 384) = 0u;
    *(_OWORD *)(v3 + 400) = 0u;
    *(_OWORD *)(v3 + 368) = 0u;
    id v5 = (void *)swift_task_alloc();
    *(void *)(v3 + 416) = v5;
    void *v5 = v4;
    v5[1] = sub_24A70B98C;
    uint64_t v6 = *(void *)(v3 + 208);
    v5[5] = 2;
    v5[6] = v6;
    long long v7 = sub_24A70C27C;
  }
  else
  {
    uint64_t v6 = *(void *)(v3 + 208);
    long long v7 = sub_24A70B7FC;
  }
  return MEMORY[0x270FA2498](v7, v6, 0);
}

uint64_t sub_24A70B7FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = v3;
  unint64_t v4 = *(void *)(v3 + 360);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_24A763428();
    a1 = swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    long long v7 = 0uLL;
    long long v10 = 0uLL;
    goto LABEL_9;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v5 = (id)MEMORY[0x24C5CE400](0, *(void *)(v3 + 360));
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return MEMORY[0x270FA2498](a1, a2, a3);
    }
    id v5 = *(id *)(*(void *)(v3 + 360) + 32);
  }
  swift_bridgeObjectRelease();
  id v6 = v5;
  sub_24A70C108(v6, (uint64_t *)&v14);

  long long v7 = v14;
  uint64_t v8 = v15;
  uint64_t v9 = v16;
  long long v10 = v17;
LABEL_9:
  *(_OWORD *)(v3 + 400) = v10;
  *(void *)(v3 + 384) = v8;
  *(void *)(v3 + 392) = v9;
  *(_OWORD *)(v3 + 368) = v7;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 416) = v12;
  *uint64_t v12 = v3;
  v12[1] = sub_24A70B98C;
  a2 = *(void *)(v3 + 208);
  v12[5] = 2;
  v12[6] = a2;
  a1 = (uint64_t)sub_24A70C27C;
  a3 = 0;
  return MEMORY[0x270FA2498](a1, a2, a3);
}

uint64_t sub_24A70B98C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(*v2 + 424) = a1;
  swift_task_dealloc();
  uint64_t v4 = *(void *)(v3 + 208);
  if (v1)
  {

    id v5 = sub_24A70BEA8;
  }
  else
  {
    id v5 = sub_24A70BACC;
  }
  return MEMORY[0x270FA2498](v5, v4, 0);
}

void sub_24A70BACC()
{
  uint64_t v37 = v0;
  unint64_t v1 = *(void *)(v0 + 424);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_24A763428();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v34 = 0;
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    uint64_t v4 = 0;
    uint64_t v31 = 0;
    goto LABEL_9;
  }
  if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v2 = (id)MEMORY[0x24C5CE400](0, *(void *)(v0 + 424));
  }
  else
  {
    if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v2 = *(id *)(*(void *)(v0 + 424) + 32);
  }
  swift_bridgeObjectRelease();
  id v3 = v2;
  sub_24A70C108(v3, v36);

  uint64_t v34 = v36[1];
  uint64_t v35 = v36[0];
  uint64_t v4 = v36[3];
  uint64_t v32 = v36[4];
  uint64_t v33 = v36[2];
  uint64_t v31 = v36[5];
LABEL_9:
  uint64_t v6 = *(void *)(v0 + 264);
  unint64_t v7 = sub_24A70AAC4(MEMORY[0x263F8EE78]);
  if (v6)
  {
    uint64_t v8 = *(void *)(v0 + 272);
    uint64_t v9 = *(void *)(v0 + 280);
    uint64_t v11 = *(void *)(v0 + 256);
    uint64_t v10 = *(void *)(v0 + 264);
    uint64_t v12 = *(void *)(v0 + 240);
    uint64_t v13 = *(void *)(v0 + 248);
    *(void *)(v0 + 16) = v12;
    *(void *)(v0 + 24) = v13;
    *(void *)(v0 + 32) = v11;
    *(void *)(v0 + 40) = v10;
    *(void *)(v0 + 48) = v8;
    *(void *)(v0 + 56) = v9;
    swift_bridgeObjectRetain();
    sub_24A70D424(v12, v13, v11, v10);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v36[0] = v7;
    sub_24A72A26C((long long *)(v0 + 16), v11, v10, isUniquelyReferenced_nonNull_native);
    unint64_t v7 = v36[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24A70D468(v12, v13, v11, v10);
  }
  uint64_t v15 = *(void *)(v0 + 328);
  if (v15)
  {
    uint64_t v17 = *(void *)(v0 + 336);
    uint64_t v16 = *(void *)(v0 + 344);
    uint64_t v19 = *(void *)(v0 + 312);
    uint64_t v18 = *(void *)(v0 + 320);
    uint64_t v20 = *(void *)(v0 + 304);
    *(void *)(v0 + 64) = v20;
    *(void *)(v0 + 72) = v19;
    *(void *)(v0 + 80) = v18;
    *(void *)(v0 + 88) = v15;
    *(void *)(v0 + 96) = v17;
    *(void *)(v0 + 104) = v16;
    swift_bridgeObjectRetain();
    sub_24A70D424(v20, v19, v18, v15);
    char v21 = swift_isUniquelyReferenced_nonNull_native();
    v36[0] = v7;
    sub_24A72A26C((long long *)(v0 + 64), v18, v15, v21);
    unint64_t v7 = v36[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24A70D468(v20, v19, v18, v15);
  }
  uint64_t v22 = *(void *)(v0 + 392);
  if (v22)
  {
    uint64_t v24 = *(void *)(v0 + 400);
    uint64_t v23 = *(void *)(v0 + 408);
    uint64_t v26 = *(void *)(v0 + 376);
    uint64_t v25 = *(void *)(v0 + 384);
    uint64_t v27 = *(void *)(v0 + 368);
    *(void *)(v0 + 112) = v27;
    *(void *)(v0 + 120) = v26;
    *(void *)(v0 + 128) = v25;
    *(void *)(v0 + 136) = v22;
    *(void *)(v0 + 144) = v24;
    *(void *)(v0 + 152) = v23;
    swift_bridgeObjectRetain();
    sub_24A70D424(v27, v26, v25, v22);
    char v28 = swift_isUniquelyReferenced_nonNull_native();
    v36[0] = v7;
    sub_24A72A26C((long long *)(v0 + 112), v25, v22, v28);
    unint64_t v7 = v36[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24A70D468(v27, v26, v25, v22);
  }
  if (v4)
  {
    *(void *)(v0 + 160) = v35;
    *(void *)(v0 + 168) = v34;
    *(void *)(v0 + 176) = v33;
    *(void *)(v0 + 184) = v4;
    *(void *)(v0 + 192) = v32;
    *(void *)(v0 + 200) = v31;
    swift_bridgeObjectRetain();
    sub_24A70D424(v35, v34, v33, v4);
    char v29 = swift_isUniquelyReferenced_nonNull_native();
    v36[0] = v7;
    sub_24A72A26C((long long *)(v0 + 160), v33, v4, v29);
    unint64_t v7 = v36[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24A70D468(v35, v34, v33, v4);
  }
  unint64_t v30 = *(void (**)(unint64_t))(v0 + 8);
  v30(v7);
}

uint64_t sub_24A70BEA8()
{
  uint64_t v1 = *(void *)(v0 + 264);
  unint64_t v2 = sub_24A70AAC4(MEMORY[0x263F8EE78]);
  if (v1)
  {
    uint64_t v4 = *(void *)(v0 + 272);
    uint64_t v3 = *(void *)(v0 + 280);
    uint64_t v6 = *(void *)(v0 + 256);
    uint64_t v5 = *(void *)(v0 + 264);
    uint64_t v8 = *(void *)(v0 + 240);
    uint64_t v7 = *(void *)(v0 + 248);
    *(void *)(v0 + 16) = v8;
    *(void *)(v0 + 24) = v7;
    *(void *)(v0 + 32) = v6;
    *(void *)(v0 + 40) = v5;
    *(void *)(v0 + 48) = v4;
    *(void *)(v0 + 56) = v3;
    swift_bridgeObjectRetain();
    sub_24A70D424(v8, v7, v6, v5);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_24A72A26C((long long *)(v0 + 16), v6, v5, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24A70D468(v8, v7, v6, v5);
  }
  uint64_t v10 = *(void *)(v0 + 328);
  if (v10)
  {
    uint64_t v12 = *(void *)(v0 + 336);
    uint64_t v11 = *(void *)(v0 + 344);
    uint64_t v14 = *(void *)(v0 + 312);
    uint64_t v13 = *(void *)(v0 + 320);
    uint64_t v15 = *(void *)(v0 + 304);
    *(void *)(v0 + 64) = v15;
    *(void *)(v0 + 72) = v14;
    *(void *)(v0 + 80) = v13;
    *(void *)(v0 + 88) = v10;
    *(void *)(v0 + 96) = v12;
    *(void *)(v0 + 104) = v11;
    swift_bridgeObjectRetain();
    sub_24A70D424(v15, v14, v13, v10);
    char v16 = swift_isUniquelyReferenced_nonNull_native();
    sub_24A72A26C((long long *)(v0 + 64), v13, v10, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24A70D468(v15, v14, v13, v10);
  }
  uint64_t v17 = *(void *)(v0 + 392);
  if (v17)
  {
    uint64_t v19 = *(void *)(v0 + 400);
    uint64_t v18 = *(void *)(v0 + 408);
    uint64_t v21 = *(void *)(v0 + 376);
    uint64_t v20 = *(void *)(v0 + 384);
    uint64_t v22 = *(void *)(v0 + 368);
    *(void *)(v0 + 112) = v22;
    *(void *)(v0 + 120) = v21;
    *(void *)(v0 + 128) = v20;
    *(void *)(v0 + 136) = v17;
    *(void *)(v0 + 144) = v19;
    *(void *)(v0 + 152) = v18;
    swift_bridgeObjectRetain();
    sub_24A70D424(v22, v21, v20, v17);
    char v23 = swift_isUniquelyReferenced_nonNull_native();
    sub_24A72A26C((long long *)(v0 + 112), v20, v17, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24A70D468(v22, v21, v20, v17);
  }
  uint64_t v24 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v24(v2);
}

void sub_24A70C108(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_type);
  if ((unint64_t)v4 + 1 > 4)
  {
    unint64_t v7 = 0xE700000000000000;
    uint64_t v6 = 0x746C7561666564;
  }
  else
  {
    uint64_t v5 = 8 * ((void)v4 + 1);
    uint64_t v6 = *(void *)&aUnknown_1[v5];
    unint64_t v7 = *(void *)((char *)&unk_24A764670 + v5);
  }
  id v8 = objc_msgSend(a1, sel_mapItem);
  id v9 = objc_msgSend(v8, sel_name);

  if (v9)
  {
    uint64_t v10 = sub_24A762E08();
    uint64_t v12 = v11;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v12 = 0;
  }
  id v13 = objc_msgSend(a1, sel_location);
  objc_msgSend(v13, sel_latitude);
  uint64_t v15 = v14;

  id v16 = objc_msgSend(a1, sel_location);
  objc_msgSend(v16, sel_longitude);
  uint64_t v18 = v17;

  *a2 = v10;
  a2[1] = v12;
  a2[2] = v6;
  a2[3] = v7;
  a2[4] = v15;
  a2[5] = v18;
}

uint64_t sub_24A70C25C(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v1;
  return MEMORY[0x270FA2498](sub_24A70C27C, v1, 0);
}

uint64_t sub_24A70C27C()
{
  uint64_t v17 = v0;
  if (qword_2697B2E78 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24A762D68();
  sub_24A70D1FC(v1, (uint64_t)qword_2697B3530);
  uint64_t v2 = sub_24A762D48();
  os_log_type_t v3 = sub_24A7630B8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[5];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v16 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    v0[3] = v4;
    type metadata accessor for RTLocationOfInterestType();
    uint64_t v7 = sub_24A762E18();
    v0[4] = sub_24A716784(v7, v8, &v16);
    sub_24A763198();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24A6FB000, v2, v3, "[CRM] fetchLocations: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v6, -1, -1);
    MEMORY[0x24C5CEE90](v5, -1, -1);
  }

  uint64_t v10 = v0[5];
  uint64_t v9 = v0[6];
  unint64_t v11 = sub_24A70CCDC();
  uint64_t v12 = swift_task_alloc();
  v0[7] = v12;
  *(void *)(v12 + 16) = v9;
  *(void *)(v12 + 24) = v10;
  id v13 = (void *)swift_task_alloc();
  v0[8] = v13;
  uint64_t v14 = sub_24A704710(&qword_2697B33A8);
  void *v13 = v0;
  v13[1] = sub_24A70C4FC;
  return MEMORY[0x270FA2360](v0 + 2, v9, v11, 0xD000000000000015, 0x800000024A767E40, sub_24A70D234, v12, v14);
}

uint64_t sub_24A70C4FC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = sub_24A70C63C;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 48);
    swift_task_dealloc();
    uint64_t v4 = sub_24A70C620;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24A70C620()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_24A70C63C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_24A70C6A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A704710(&qword_2697B33B0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = *(void **)(a2 + 112);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_24A70D2D0;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24A70CBBC;
  aBlock[3] = &unk_26FE3A8D0;
  uint64_t v12 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v9, sel_fetchLocationsOfInterestOfType_withHandler_, a3, v12);
  _Block_release(v12);
}

uint64_t sub_24A70C854(unint64_t a1, id a2)
{
  if (a2)
  {
    id v3 = a2;
    if (qword_2697B2E78 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_24A762D68();
    sub_24A70D1FC(v4, (uint64_t)qword_2697B3530);
    id v5 = a2;
    id v6 = a2;
    uint64_t v7 = sub_24A762D48();
    os_log_type_t v8 = sub_24A763098();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      unint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      id v11 = a2;
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      sub_24A763198();
      *unint64_t v10 = v19;

      _os_log_impl(&dword_24A6FB000, v7, v8, "[CRM] fetchLocations error: %@", v9, 0xCu);
      sub_24A704710(&qword_2697B3520);
      swift_arrayDestroy();
      MEMORY[0x24C5CEE90](v10, -1, -1);
      MEMORY[0x24C5CEE90](v9, -1, -1);
    }
    else
    {
    }
    sub_24A704710(&qword_2697B33B0);
    return sub_24A762F98();
  }
  else
  {
    if (a1) {
      unint64_t v12 = a1;
    }
    else {
      unint64_t v12 = MEMORY[0x263F8EE78];
    }
    uint64_t v13 = qword_2697B2E78;
    swift_bridgeObjectRetain();
    if (v13 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_24A762D68();
    sub_24A70D1FC(v14, (uint64_t)qword_2697B3530);
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_24A762D48();
    os_log_type_t v16 = sub_24A7630B8();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 134217984;
      if (v12 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_24A763428();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_24A763198();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24A6FB000, v15, v16, "[CRM] fetchLocations received %ld", v17, 0xCu);
      MEMORY[0x24C5CEE90](v17, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain();
    sub_24A704710(&qword_2697B33B0);
    return sub_24A762FA8();
  }
}

uint64_t sub_24A70CBBC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_24A70D36C();
    uint64_t v4 = sub_24A762F38();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t CoreRoutineManager.deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t CoreRoutineManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return MEMORY[0x270FA2418](v0);
}

uint64_t CoreRoutineManager.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_24A70CCCC()
{
  return v0;
}

unint64_t sub_24A70CCDC()
{
  unint64_t result = qword_2697B3390;
  if (!qword_2697B3390)
  {
    type metadata accessor for CoreRoutineManager();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3390);
  }
  return result;
}

uint64_t type metadata accessor for CoreRoutineManager()
{
  return self;
}

uint64_t sub_24A70CD54()
{
  if (qword_2697B2E70 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_24A70CDB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for CoreRoutineManager();

  return MEMORY[0x270FA2150](v3, a2);
}

uint64_t method lookup function for CoreRoutineManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CoreRoutineManager);
}

uint64_t dispatch thunk of CoreRoutineManager.fetchLocations()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 136) + **(int **)(*(void *)v0 + 136));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_24A70CEF4;
  return v4();
}

uint64_t sub_24A70CEF4(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t destroy for CoreRoutineManager.Location()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CoreRoutineManager.Location(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CoreRoutineManager.Location(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

__n128 initializeWithTake for CoreRoutineManager.Location(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CoreRoutineManager.Location(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreRoutineManager.Location(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreRoutineManager.Location(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreRoutineManager.Location()
{
  return &type metadata for CoreRoutineManager.Location;
}

uint64_t sub_24A70D1FC(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

void sub_24A70D234(uint64_t a1)
{
  sub_24A70C6A0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24A70D23C()
{
  uint64_t v1 = sub_24A704710(&qword_2697B33B0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24A70D2D0(unint64_t a1, void *a2)
{
  sub_24A704710(&qword_2697B33B0);

  return sub_24A70C854(a1, a2);
}

uint64_t sub_24A70D354(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24A70D364()
{
  return swift_release();
}

unint64_t sub_24A70D36C()
{
  unint64_t result = qword_2697B33B8;
  if (!qword_2697B33B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2697B33B8);
  }
  return result;
}

uint64_t sub_24A70D3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A704710(&qword_2697B33C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_24A70D414(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_24A70D424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24A70D468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t ConditionalEngineError.errorUserInfo.getter()
{
  uint64_t v0 = sub_24A7623A8();
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    sub_24A704710(&qword_2697B33D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24A763FD0;
    *(void *)(inited + 32) = sub_24A762E08();
    *(void *)(inited + 40) = v5;
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = v2;
    *(void *)(inited + 56) = v3;
    return sub_24A70AC18(inited);
  }
  else
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    return sub_24A70AC18(v7);
  }
}

const char *FeatureFlag.domain.getter()
{
  return "ConditionalEngine";
}

const char *FeatureFlag.feature.getter()
{
  if (*v0) {
    return "diningOut";
  }
  else {
    return "conditionalEngine";
  }
}

uint64_t FeatureFlag.isEnabled.getter()
{
  char v1 = *v0;
  uint64_t v5 = &type metadata for FeatureFlag;
  unint64_t v6 = sub_24A70D604();
  v4[0] = v1;
  char v2 = sub_24A762618();
  sub_24A704754((uint64_t)v4);
  return v2 & 1;
}

unint64_t sub_24A70D604()
{
  unint64_t result = qword_2697B33D8;
  if (!qword_2697B33D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B33D8);
  }
  return result;
}

BOOL static FeatureFlag.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FeatureFlag.hash(into:)()
{
  return sub_24A763698();
}

uint64_t FeatureFlag.hashValue.getter()
{
  return sub_24A7636B8();
}

BOOL sub_24A70D6E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_24A70D6FC()
{
  return sub_24A7636B8();
}

uint64_t sub_24A70D744()
{
  return sub_24A763698();
}

uint64_t sub_24A70D770()
{
  return sub_24A7636B8();
}

unint64_t sub_24A70D7B8()
{
  unint64_t result = qword_2697B33E0;
  if (!qword_2697B33E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B33E0);
  }
  return result;
}

const char *sub_24A70D80C()
{
  return "ConditionalEngine";
}

const char *sub_24A70D820()
{
  if (*v0) {
    return "diningOut";
  }
  else {
    return "conditionalEngine";
  }
}

unsigned char *initializeBufferWithCopyOfBuffer for InteractionMode(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FeatureFlag(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FeatureFlag(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A70D9BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_24A70D9E4(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_24A70D9EC(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlag()
{
  return &type metadata for FeatureFlag;
}

uint64_t sub_24A70DA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A763008();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_24A762FF8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_24A70FD54(a1, &qword_2697B3440);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24A762F88();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

void static CLLocationManager.createShortcutsServiceLocationManager(on:delegate:)(void *a1, uint64_t a2)
{
  swift_getObjectType();

  sub_24A70EE9C(a1, a2);
}

id LocationManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void LocationManager.init()()
{
  uint64_t v20 = sub_24A7630D8();
  uint64_t v1 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  int v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24A7630C8();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_24A762DA8();
  MEMORY[0x270FA5388](v5 - 8);
  *(void *)&v0[OBJC_IVAR____TtC23ConditionalEngineShared15LocationManager_manager] = 0;
  uint64_t v19 = OBJC_IVAR____TtC23ConditionalEngineShared15LocationManager_queue;
  sub_24A705D7C(0, &qword_2697B3400);
  uint64_t v6 = v0;
  sub_24A762D98();
  uint64_t v22 = MEMORY[0x263F8EE78];
  sub_24A70FDB0(&qword_2697B3408, MEMORY[0x263F8F0F8]);
  sub_24A704710(&qword_2697B3410);
  sub_24A70EF4C();
  sub_24A763208();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F130], v20);
  *(void *)&v0[v19] = sub_24A7630E8();
  uint64_t v7 = &v6[OBJC_IVAR____TtC23ConditionalEngineShared15LocationManager_locationContinuation];
  uint64_t v8 = sub_24A704710((uint64_t *)&unk_2697B3428);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);

  uint64_t v9 = (objc_class *)type metadata accessor for LocationManager();
  v21.receiver = v6;
  v21.super_class = v9;
  unint64_t v10 = (char *)objc_msgSendSuper2(&v21, sel_init);
  id v11 = *(void **)&v10[OBJC_IVAR____TtC23ConditionalEngineShared15LocationManager_queue];
  id v12 = objc_allocWithZone(MEMORY[0x263F00A60]);
  uint64_t v13 = v10;
  id v14 = v11;
  uint64_t v15 = (void *)sub_24A762DF8();
  id v16 = objc_msgSend(v12, sel_initWithEffectiveBundlePath_delegate_onQueue_, v15, v13, v14);

  if (v16)
  {

    uint64_t v17 = *(void **)&v13[OBJC_IVAR____TtC23ConditionalEngineShared15LocationManager_manager];
    *(void *)&v13[OBJC_IVAR____TtC23ConditionalEngineShared15LocationManager_manager] = v16;
  }
  else
  {
    __break(1u);
  }
}

void *sub_24A70DFD4()
{
  unint64_t result = *(void **)(v0 + OBJC_IVAR____TtC23ConditionalEngineShared15LocationManager_manager);
  if (result) {
    return (void *)(objc_msgSend(result, sel_authorizationStatus) == 3);
  }
  __break(1u);
  return result;
}

id sub_24A70E010()
{
  id result = *(id *)(v0 + OBJC_IVAR____TtC23ConditionalEngineShared15LocationManager_manager);
  if (result) {
    return objc_msgSend(result, sel_setDesiredAccuracy_, *MEMORY[0x263F00B10]);
  }
  __break(1u);
  return result;
}

uint64_t sub_24A70E03C()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x270FA2498](sub_24A70E05C, 0, 0);
}

uint64_t sub_24A70E05C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  int v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  uint64_t v4 = sub_24A704710(&qword_2697B3438);
  *int v3 = v0;
  v3[1] = sub_24A70E160;
  return MEMORY[0x270FA2360](v0 + 2, 0, 0, 0xD000000000000011, 0x800000024A767F30, sub_24A70EFF4, v2, v4);
}

uint64_t sub_24A70E160()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24A70E27C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_24A70C620;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24A70E27C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_24A70E2E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A704710(&qword_2697B3510);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24A704710((uint64_t *)&unk_2697B3428);
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  uint64_t v9 = a2 + OBJC_IVAR____TtC23ConditionalEngineShared15LocationManager_locationContinuation;
  swift_beginAccess();
  sub_24A70FF50((uint64_t)v6, v9);
  swift_endAccess();
  id result = *(id *)(a2 + OBJC_IVAR____TtC23ConditionalEngineShared15LocationManager_manager);
  if (result) {
    return objc_msgSend(result, sel_requestLocation);
  }
  __break(1u);
  return result;
}

uint64_t sub_24A70E434()
{
  uint64_t v0 = sub_24A704710(&qword_2697B3440);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24A763008();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_24A70FD54((uint64_t)v2, &qword_2697B3440);
    uint64_t v6 = 0;
    uint64_t v7 = 0;
  }
  else
  {
    sub_24A762FF8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
    if (*(void *)(v5 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v6 = sub_24A762F88();
      uint64_t v7 = v8;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v7 = 0;
    }
  }
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = &unk_2697B3450;
  *(void *)(v9 + 24) = v5;
  if (v7 | v6)
  {
    v11[0] = 0;
    v11[1] = 0;
    v11[2] = v6;
    v11[3] = v7;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_24A70E660()
{
  return MEMORY[0x270FA2498](sub_24A70E67C, 0, 0);
}

uint64_t sub_24A70E67C()
{
  uint64_t v1 = self;
  if ((objc_msgSend(v1, sel_locationServicesEnabled) & 1) == 0) {
    objc_msgSend(v1, sel_setLocationServicesEnabled_, 1);
  }
  uint64_t v2 = (void *)sub_24A762DF8();
  objc_msgSend(v1, sel_setAuthorizationStatusByType_forBundlePath_, 3, v2);

  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_24A70E744(uint64_t a1, unint64_t a2)
{
  return sub_24A70F190(a2);
}

uint64_t sub_24A70E7D8(uint64_t a1, void *a2)
{
  return sub_24A70F494(a2);
}

uint64_t sub_24A70E850()
{
  uint64_t v1 = sub_24A704710(&qword_2697B3440);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24A763008();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  sub_24A762FE8();
  id v5 = v0;
  uint64_t v6 = sub_24A762FD8();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v8 = MEMORY[0x263F8F500];
  v7[2] = v6;
  v7[3] = v8;
  v7[4] = v5;
  sub_24A70DA08((uint64_t)v3, (uint64_t)&unk_2697B3470, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_24A70E968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  sub_24A762FE8();
  *(void *)(v4 + 24) = sub_24A762FD8();
  uint64_t v6 = sub_24A762F88();
  return MEMORY[0x270FA2498](sub_24A70EA00, v6, v5);
}

uint64_t sub_24A70EA00()
{
  swift_release();
  type metadata accessor for LocationManager();
  sub_24A70FDB0(&qword_2697B3518, (void (*)(uint64_t))type metadata accessor for LocationManager);
  sub_24A762D78();
  sub_24A762D88();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id LocationManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocationManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24A70EC88@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for LocationManager();
  uint64_t result = sub_24A762D78();
  *a1 = result;
  return result;
}

uint64_t sub_24A70ECC8(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24A70EDA4;
  return v6(a1);
}

uint64_t sub_24A70EDA4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_24A70EE9C(void *a1, uint64_t a2)
{
  id v4 = objc_allocWithZone(MEMORY[0x263F00A60]);
  id v5 = a1;
  swift_unknownObjectRetain();
  uint64_t v6 = (void *)sub_24A762DF8();
  id v7 = objc_msgSend(v4, sel_initWithEffectiveBundlePath_delegate_onQueue_, v6, a2, v5);

  swift_unknownObjectRelease();
  if (!v7) {
    __break(1u);
  }
}

unint64_t sub_24A70EF4C()
{
  unint64_t result = qword_2697B3418;
  if (!qword_2697B3418)
  {
    sub_24A704B6C(&qword_2697B3410);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3418);
  }
  return result;
}

uint64_t type metadata accessor for LocationManager()
{
  uint64_t result = qword_2697B34E0;
  if (!qword_2697B34E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_24A70EFF4(uint64_t a1)
{
  return sub_24A70E2E0(a1, *(void *)(v1 + 16));
}

uint64_t sub_24A70EFFC()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24A70F034()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_24A7093EC;
  return MEMORY[0x270FA2498](sub_24A70E67C, 0, 0);
}

uint64_t sub_24A70F0D8(uint64_t a1)
{
  id v4 = *(int **)(v1 + 16);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_24A7095E4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_2697B3458 + dword_2697B3458);
  return v6(a1, v4);
}

uint64_t sub_24A70F190(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24A704710((uint64_t *)&unk_2697B3428);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24A704710(&qword_2697B3510);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2697B2E78 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_24A762D68();
  sub_24A70D1FC(v11, (uint64_t)qword_2697B3530);
  id v12 = sub_24A762D48();
  os_log_type_t v13 = sub_24A7630B8();
  if (os_log_type_enabled(v12, v13))
  {
    id v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v14 = 0;
    _os_log_impl(&dword_24A6FB000, v12, v13, "Location update", v14, 2u);
    MEMORY[0x24C5CEE90](v14, -1, -1);
  }

  uint64_t v15 = v2 + OBJC_IVAR____TtC23ConditionalEngineShared15LocationManager_locationContinuation;
  swift_beginAccess();
  sub_24A70FDF8(v15, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4)) {
    return sub_24A70FD54((uint64_t)v10, &qword_2697B3510);
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  sub_24A70FD54((uint64_t)v10, &qword_2697B3510);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_24A763428();
    uint64_t v17 = result;
    if (!result) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v17 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v17)
    {
LABEL_13:
      swift_bridgeObjectRelease();
      uint64_t v19 = v17;
      sub_24A762FA8();
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v18 = (id)MEMORY[0x24C5CE400](0, a1);
    goto LABEL_12;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v18 = *(id *)(a1 + 32);
LABEL_12:
    uint64_t v17 = (uint64_t)v18;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A70F494(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24A704710((uint64_t *)&unk_2697B3428);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24A704710(&qword_2697B3510);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2697B2E78 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_24A762D68();
  sub_24A70D1FC(v11, (uint64_t)qword_2697B3530);
  id v12 = a1;
  id v13 = a1;
  id v14 = sub_24A762D48();
  os_log_type_t v15 = sub_24A763098();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v27 = v5;
    uint64_t v28 = v4;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v26 = v2;
    uint64_t v17 = (uint8_t *)v16;
    id v18 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 138412290;
    id v19 = a1;
    uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v30 = v20;
    sub_24A763198();
    *id v18 = v20;
    uint64_t v5 = v27;
    uint64_t v4 = v28;

    _os_log_impl(&dword_24A6FB000, v14, v15, "Location error: %@", v17, 0xCu);
    sub_24A704710(&qword_2697B3520);
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v18, -1, -1);
    objc_super v21 = v17;
    uint64_t v2 = v26;
    MEMORY[0x24C5CEE90](v21, -1, -1);
  }
  else
  {
  }
  uint64_t v22 = v2 + OBJC_IVAR____TtC23ConditionalEngineShared15LocationManager_locationContinuation;
  swift_beginAccess();
  sub_24A70FDF8(v22, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4)) {
    return sub_24A70FD54((uint64_t)v10, &qword_2697B3510);
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  sub_24A70FD54((uint64_t)v10, &qword_2697B3510);
  char v29 = a1;
  id v24 = a1;
  sub_24A762F98();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_24A70F7F4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_24A7095E4;
  return sub_24A70E968(a1, v4, v5, v6);
}

uint64_t sub_24A70F8A8()
{
  return MEMORY[0x263EFDDD8];
}

uint64_t sub_24A70F8B4()
{
  return type metadata accessor for LocationManager();
}

void sub_24A70F8BC()
{
  sub_24A70FCB4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for LocationManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for LocationManager);
}

uint64_t dispatch thunk of LocationManager.isAuthorized.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of LocationManager.requestHighAccuracy()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of LocationManager.requestLocation()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x263F8EED0] & *v0) + 0xA8);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_24A70FAE8;
  return v5();
}

uint64_t sub_24A70FAE8(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of LocationManager.enableShortcutsLocationServices()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of LocationManager.locationManager(_:didUpdateLocations:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of LocationManager.locationManager(_:didFailWithError:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of LocationManager.locationManagerDidChangeAuthorization(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

void sub_24A70FCB4()
{
  if (!qword_2697B34F8)
  {
    sub_24A704B6C((uint64_t *)&unk_2697B3428);
    unint64_t v0 = sub_24A763178();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2697B34F8);
    }
  }
}

uint64_t sub_24A70FD14()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24A70FD54(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_24A704710(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24A70FDB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A70FDF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A704710(&qword_2697B3510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A70FE60()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24A70FE98(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_24A7093EC;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_2697B3458 + dword_2697B3458);
  return v6(a1, v4);
}

uint64_t sub_24A70FF50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A704710(&qword_2697B3510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A70FFBC(uint64_t a1)
{
  return sub_24A7101B8(a1, qword_2697B3530);
}

uint64_t static Logger.main.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24A710254(&qword_2697B2E78, (uint64_t)qword_2697B3530, a1);
}

uint64_t sub_24A70FFF8(uint64_t a1)
{
  return sub_24A7101B8(a1, qword_2697B3548);
}

uint64_t static Logger.xpc.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24A710254(&qword_2697B2E80, (uint64_t)qword_2697B3548, a1);
}

uint64_t sub_24A710034(uint64_t a1)
{
  return sub_24A7101B8(a1, qword_2697B3560);
}

uint64_t sub_24A710050()
{
  if (qword_2697B2E88 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24A762D68();

  return sub_24A70D1FC(v0, (uint64_t)qword_2697B3560);
}

uint64_t static Logger.runner.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24A710254(&qword_2697B2E88, (uint64_t)qword_2697B3560, a1);
}

uint64_t sub_24A7100D8(uint64_t a1)
{
  return sub_24A7101B8(a1, qword_2697B3578);
}

uint64_t static Logger.app.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24A710254(&qword_2697B2E90, (uint64_t)qword_2697B3578, a1);
}

uint64_t sub_24A710114(uint64_t a1)
{
  return sub_24A7101B8(a1, qword_2697B3590);
}

uint64_t static Logger.intent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24A710254(&qword_2697B2E98, (uint64_t)qword_2697B3590, a1);
}

uint64_t sub_24A710154(uint64_t a1)
{
  return sub_24A7101B8(a1, qword_2697B35A8);
}

uint64_t static Logger.history.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24A710254(&qword_2697B2EA0, (uint64_t)qword_2697B35A8, a1);
}

uint64_t sub_24A710198(uint64_t a1)
{
  return sub_24A7101B8(a1, qword_2697B35C0);
}

uint64_t sub_24A7101B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_24A762D68();
  sub_24A7102EC(v3, a2);
  sub_24A70D1FC(v3, (uint64_t)a2);
  return sub_24A762D58();
}

uint64_t static Logger.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24A710254(&qword_2697B2EA8, (uint64_t)qword_2697B35C0, a1);
}

uint64_t sub_24A710254@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_24A762D68();
  uint64_t v6 = sub_24A70D1FC(v5, a2);
  id v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t *sub_24A7102EC(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t ScheduledQuery.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ScheduledQuery.query.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ScheduledQuery.shortcutsTriggerIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ScheduledQuery.parameters.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ScheduledQuery();
  return sub_24A7114A8(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(void))type metadata accessor for TriggerParameters);
}

uint64_t type metadata accessor for ScheduledQuery()
{
  uint64_t result = qword_2697B3608;
  if (!qword_2697B3608) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ScheduledQuery.parameters.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ScheduledQuery() + 28);

  return sub_24A7104BC(a1, v3);
}

uint64_t sub_24A7104BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TriggerParameters();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*ScheduledQuery.parameters.modify())()
{
  return nullsub_1;
}

uint64_t ScheduledQuery.init(id:query:shortcutsTriggerIdentifier:parameters:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  *a8 = a1;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  uint64_t v9 = (uint64_t)a8 + *(int *)(type metadata accessor for ScheduledQuery() + 28);

  return sub_24A7105BC(a7, v9);
}

uint64_t sub_24A7105BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TriggerParameters();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ScheduledQuery.description.getter()
{
  return 0;
}

unint64_t sub_24A7107C0(char a1)
{
  unint64_t result = 0xD00000000000001ALL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7972657571;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x6574656D61726170;
      break;
    default:
      unint64_t result = 25705;
      break;
  }
  return result;
}

BOOL sub_24A71084C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_24A710860()
{
  return sub_24A7107C0(*v0);
}

uint64_t sub_24A710868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24A7122BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24A710890()
{
  return 0;
}

void sub_24A71089C(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_24A7108A8(uint64_t a1)
{
  unint64_t v2 = sub_24A711454();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A7108E4(uint64_t a1)
{
  unint64_t v2 = sub_24A711454();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ScheduledQuery.encode(to:)(void *a1)
{
  uint64_t v3 = sub_24A704710(&qword_2697B35D8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24A705BC4(a1, a1[3]);
  sub_24A711454();
  sub_24A7636D8();
  v8[15] = 0;
  sub_24A763548();
  if (!v1)
  {
    v8[14] = 1;
    sub_24A763548();
    v8[13] = 2;
    sub_24A763548();
    type metadata accessor for ScheduledQuery();
    v8[12] = 3;
    type metadata accessor for TriggerParameters();
    sub_24A711558(&qword_2697B35E8, (void (*)(uint64_t))type metadata accessor for TriggerParameters);
    sub_24A763578();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ScheduledQuery.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = type metadata accessor for TriggerParameters();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24A704710(&qword_2697B35F0);
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ScheduledQuery();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t *)((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24A705BC4(a1, a1[3]);
  sub_24A711454();
  uint64_t v26 = v8;
  uint64_t v12 = v27;
  sub_24A7636C8();
  if (v12) {
    return sub_24A704754((uint64_t)a1);
  }
  uint64_t v13 = (uint64_t)a1;
  uint64_t v27 = v3;
  uint64_t v14 = (uint64_t)v5;
  uint64_t v16 = v24;
  uint64_t v15 = v25;
  char v31 = 0;
  *uint64_t v11 = sub_24A7634C8();
  v11[1] = v17;
  char v30 = 1;
  v11[2] = sub_24A7634C8();
  v11[3] = v18;
  char v29 = 2;
  uint64_t v19 = sub_24A7634C8();
  uint64_t v22 = 0;
  void v11[4] = v19;
  v11[5] = v20;
  char v28 = 3;
  sub_24A711558(&qword_2697B35F8, (void (*)(uint64_t))type metadata accessor for TriggerParameters);
  sub_24A7634F8();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v26, v15);
  sub_24A7105BC(v14, (uint64_t)v11 + *(int *)(v9 + 28));
  sub_24A7114A8((uint64_t)v11, v23, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
  sub_24A704754(v13);
  return sub_24A711AF8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
}

uint64_t sub_24A710EEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ScheduledQuery.init(from:)(a1, a2);
}

uint64_t sub_24A710F04(void *a1)
{
  return ScheduledQuery.encode(to:)(a1);
}

BOOL sub_24A710F24(void *a1, void *a2)
{
  return (_s23ConditionalEngineShared14ScheduledQueryV1loiySbAC_ACtFZ_0(a2, a1) & 1) == 0;
}

BOOL sub_24A710F50(void *a1, void *a2)
{
  return (_s23ConditionalEngineShared14ScheduledQueryV1loiySbAC_ACtFZ_0(a1, a2) & 1) == 0;
}

uint64_t sub_24A710F70(void *a1, void *a2)
{
  return _s23ConditionalEngineShared14ScheduledQueryV1loiySbAC_ACtFZ_0(a2, a1);
}

uint64_t _s23ConditionalEngineShared14ScheduledQueryV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_24A7635B8() & 1) == 0) {
    return 0;
  }
  BOOL v5 = a1[2] == a2[2] && a1[3] == a2[3];
  if (!v5 && (sub_24A7635B8() & 1) == 0 || (a1[4] != a2[4] || a1[5] != a2[5]) && (sub_24A7635B8() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(type metadata accessor for ScheduledQuery() + 28);

  return _s23ConditionalEngineShared17TriggerParametersO2eeoiySbAC_ACtFZ_0((uint64_t)a1 + v6, (uint64_t)a2 + v6);
}

uint64_t _s23ConditionalEngineShared14ScheduledQueryV1loiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v37 = a2;
  uint64_t v3 = sub_24A762528();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v32 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v35 = (char *)&v32 - v7;
  uint64_t v8 = type metadata accessor for ScheduledQuery();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24A704710((uint64_t *)&unk_2697B3630);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v34 = (uint64_t)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v32 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v32 - v18;
  MEMORY[0x270FA5388](v17);
  objc_super v21 = (char *)&v32 - v20;
  uint64_t v33 = a1;
  TriggerParameters.upcomingDate.getter((uint64_t)&v32 - v20);
  uint64_t v36 = v4;
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48);
  LODWORD(a1) = v22(v21, 1, v3);
  sub_24A712448((uint64_t)v21);
  sub_24A7114A8((uint64_t)v37, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
  if (a1 == 1)
  {
    TriggerParameters.upcomingDate.getter((uint64_t)v19);
    sub_24A711AF8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
    int v23 = v22(v19, 1, v3);
    sub_24A712448((uint64_t)v19);
    if (v23 == 1)
    {
      if (*v33 != *v37 || v33[1] != v37[1])
      {
        char HistoryC5EventV1loiySbAE_AEtFZ_0 = sub_24A7635B8();
        return HistoryC5EventV1loiySbAE_AEtFZ_0 & 1;
      }
LABEL_9:
      char HistoryC5EventV1loiySbAE_AEtFZ_0 = 0;
      return HistoryC5EventV1loiySbAE_AEtFZ_0 & 1;
    }
  }
  else
  {
    sub_24A711AF8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
  }
  TriggerParameters.upcomingDate.getter((uint64_t)v16);
  if (v22(v16, 1, v3) == 1)
  {
    sub_24A712448((uint64_t)v16);
    goto LABEL_9;
  }
  uint64_t v26 = v35;
  uint64_t v25 = v36;
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v27(v35, v16, v3);
  uint64_t v28 = v34;
  TriggerParameters.upcomingDate.getter(v34);
  if (v22((char *)v28, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v3);
    sub_24A712448(v28);
    char HistoryC5EventV1loiySbAE_AEtFZ_0 = 1;
  }
  else
  {
    char v29 = v32;
    v27(v32, (char *)v28, v3);
    char HistoryC5EventV1loiySbAE_AEtFZ_0 = _s23ConditionalEngineShared21ScheduledQueryHistoryC5EventV1loiySbAE_AEtFZ_0();
    char v30 = *(void (**)(char *, uint64_t))(v25 + 8);
    v30(v29, v3);
    v30(v26, v3);
  }
  return HistoryC5EventV1loiySbAE_AEtFZ_0 & 1;
}

unint64_t sub_24A711454()
{
  unint64_t result = qword_2697B35E0;
  if (!qword_2697B35E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B35E0);
  }
  return result;
}

uint64_t sub_24A7114A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24A711510()
{
  return sub_24A711558(&qword_2697B3600, (void (*)(uint64_t))type metadata accessor for ScheduledQuery);
}

uint64_t sub_24A711558(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ScheduledQuery(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = (char *)a1 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    type metadata accessor for TriggerParameters();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v14 = *((void *)v9 + 1);
      *(void *)uint64_t v10 = *(void *)v9;
      *((void *)v10 + 1) = v14;
      *((_OWORD *)v10 + 1) = *((_OWORD *)v9 + 1);
      *((void *)v10 + 4) = *((void *)v9 + 4);
      *((_WORD *)v10 + 20) = *((_WORD *)v9 + 20);
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload == 1) {
        uint64_t v12 = sub_24A762398();
      }
      else {
        uint64_t v12 = sub_24A762528();
      }
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v9, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t destroy for ScheduledQuery(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  type metadata accessor for TriggerParameters();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (result == 1)
    {
      uint64_t v6 = sub_24A762398();
    }
    else
    {
      if (result) {
        return result;
      }
      uint64_t v6 = sub_24A762528();
    }
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v4, v6);
  }
}

void *initializeWithCopy for ScheduledQuery(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a2 + v7;
  uint64_t v9 = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  type metadata accessor for TriggerParameters();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v12 = *((void *)v8 + 1);
    *(void *)uint64_t v9 = *(void *)v8;
    *((void *)v9 + 1) = v12;
    *((_OWORD *)v9 + 1) = *((_OWORD *)v8 + 1);
    *((void *)v9 + 4) = *((void *)v8 + 4);
    *((_WORD *)v9 + 20) = *((_WORD *)v8 + 20);
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload == 1) {
      uint64_t v11 = sub_24A762398();
    }
    else {
      uint64_t v11 = sub_24A762528();
    }
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v8, v11);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for ScheduledQuery(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_24A711AF8((uint64_t)a1 + v6, (uint64_t (*)(void))type metadata accessor for TriggerParameters);
    type metadata accessor for TriggerParameters();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)uint64_t v7 = *(void *)v8;
      *((void *)v7 + 1) = *((void *)v8 + 1);
      *((void *)v7 + 2) = *((void *)v8 + 2);
      *((void *)v7 + 3) = *((void *)v8 + 3);
      *((void *)v7 + 4) = *((void *)v8 + 4);
      v7[40] = v8[40];
      v7[41] = v8[41];
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload == 1) {
        uint64_t v10 = sub_24A762398();
      }
      else {
        uint64_t v10 = sub_24A762528();
      }
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v8, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24A711AF8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for ScheduledQuery(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for TriggerParameters();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v11 = sub_24A762398();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v6, v7, v11);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v10 = sub_24A762528();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v6, v7, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for ScheduledQuery(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 28);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    sub_24A711AF8((uint64_t)a1 + v9, (uint64_t (*)(void))type metadata accessor for TriggerParameters);
    uint64_t v12 = type metadata accessor for TriggerParameters();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = sub_24A762398();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v10, v11, v15);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_24A762528();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v10, v11, v14);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduledQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24A711E10);
}

uint64_t sub_24A711E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for TriggerParameters();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ScheduledQuery(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24A711ED4);
}

uint64_t sub_24A711ED4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for TriggerParameters();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24A711F7C()
{
  uint64_t result = type metadata accessor for TriggerParameters();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ScheduledQuery.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ScheduledQuery.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A712174);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

unsigned char *sub_24A71219C(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQuery.CodingKeys()
{
  return &type metadata for ScheduledQuery.CodingKeys;
}

unint64_t sub_24A7121B8()
{
  unint64_t result = qword_2697B3618;
  if (!qword_2697B3618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3618);
  }
  return result;
}

unint64_t sub_24A712210()
{
  unint64_t result = qword_2697B3620;
  if (!qword_2697B3620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3620);
  }
  return result;
}

unint64_t sub_24A712268()
{
  unint64_t result = qword_2697B3628;
  if (!qword_2697B3628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3628);
  }
  return result;
}

uint64_t sub_24A7122BC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v3 || (sub_24A7635B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7972657571 && a2 == 0xE500000000000000 || (sub_24A7635B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000024A768010 || (sub_24A7635B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24A7635B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24A712448(uint64_t a1)
{
  uint64_t v2 = sub_24A704710((uint64_t *)&unk_2697B3630);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24A7124A8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = 0x6E72757465526F6ELL;
  switch(a3)
  {
    case 1:
      v6[0] = 0;
      v6[1] = 0xE000000000000000;
      sub_24A763338();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000021;
      uint64_t v5 = "Conversation not found for name: ";
      goto LABEL_8;
    case 2:
      sub_24A763338();
      swift_bridgeObjectRelease();
      strcpy((char *)v6, "Location type ");
      HIBYTE(v6[1]) = -18;
      sub_24A762E68();
      goto LABEL_9;
    case 3:
      v6[0] = 0;
      v6[1] = 0xE000000000000000;
      sub_24A763338();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000017;
      uint64_t v5 = "noToolFound for bundle ";
      goto LABEL_8;
    case 4:
      v6[0] = 0;
      v6[1] = 0xE000000000000000;
      sub_24A763338();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000017;
      uint64_t v5 = "noToolFound for action ";
      goto LABEL_8;
    case 5:
      v6[0] = 0;
      v6[1] = 0xE000000000000000;
      sub_24A763338();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000018;
      uint64_t v5 = "Issue getting location: ";
      goto LABEL_8;
    case 6:
      return result;
    default:
      v6[0] = 0;
      v6[1] = 0xE000000000000000;
      sub_24A763338();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD00000000000001CLL;
      uint64_t v5 = "Regex does not match query: ";
LABEL_8:
      v6[0] = v4;
      v6[1] = (unint64_t)(v5 - 32) | 0x8000000000000000;
LABEL_9:
      sub_24A762E68();
      return v6[0];
  }
}

uint64_t sub_24A7126C8()
{
  return sub_24A7124A8(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

unint64_t sub_24A7126DC()
{
  uint64_t v1 = sub_24A7124A8(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
  if (v2)
  {
    uint64_t v3 = v1;
    uint64_t v4 = v2;
    sub_24A704710(&qword_2697B33D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24A763FD0;
    *(void *)(inited + 32) = sub_24A762E08();
    *(void *)(inited + 40) = v6;
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = v3;
    *(void *)(inited + 56) = v4;
    return sub_24A70AC18(inited);
  }
  else
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    return sub_24A70AC18(v8);
  }
}

uint64_t sub_24A71279C(uint64_t a1)
{
  unint64_t v2 = sub_24A71C0C8();

  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_24A7127D8(uint64_t a1)
{
  unint64_t v2 = sub_24A71C0C8();

  return MEMORY[0x270EF2668](a1, v2);
}

id ScheduledQueryETARunner.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id ScheduledQueryETARunner.init()()
{
  uint64_t v1 = OBJC_IVAR____TtC23ConditionalEngineShared23ScheduledQueryETARunner_dispatchGroup;
  unint64_t v2 = v0;
  *(void *)&v0[v1] = dispatch_group_create();
  *(void *)&v2[OBJC_IVAR____TtC23ConditionalEngineShared23ScheduledQueryETARunner_currentLocation] = 0;

  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for ScheduledQueryETARunner();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for ScheduledQueryETARunner()
{
  return self;
}

uint64_t sub_24A712948()
{
  uint64_t v8 = MEMORY[0x263F8EE78];
  sub_24A75348C(0, 5, 0);
  for (uint64_t i = 0; i != 80; i += 16)
  {
    swift_bridgeObjectRetain();
    sub_24A762E68();
    sub_24A762E68();
    swift_bridgeObjectRelease();
    unint64_t v2 = *(void *)(v8 + 16);
    unint64_t v1 = *(void *)(v8 + 24);
    if (v2 >= v1 >> 1) {
      sub_24A75348C(v1 > 1, v2 + 1, 1);
    }
    *(void *)(v8 + 16) = v2 + 1;
    uint64_t v3 = v8 + 16 * v2;
    *(void *)(v3 + 32) = 96;
    *(void *)(v3 + 40) = 0xE100000000000000;
  }
  swift_arrayDestroy();
  sub_24A704710((uint64_t *)&unk_2697B2FE0);
  sub_24A704B10();
  uint64_t v4 = sub_24A762DD8();
  uint64_t v6 = v5;
  uint64_t result = swift_release();
  qword_2697B3640 = v4;
  qword_2697B3648 = v6;
  return result;
}

uint64_t static ScheduledQueryETARunner.examplePhrases.getter()
{
  if (qword_2697B2EB0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = qword_2697B3640;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static ScheduledQueryETARunner.examplePhrases.setter(uint64_t a1, uint64_t a2)
{
  if (qword_2697B2EB0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_2697B3640 = a1;
  qword_2697B3648 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ScheduledQueryETARunner.examplePhrases.modify())()
{
  if (qword_2697B2EB0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

double static ScheduledQueryETARunner.extractActionType(query:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v163 = a1;
  uint64_t v164 = a2;
  v153 = a3;
  uint64_t v3 = sub_24A704710(&qword_2697B3660);
  MEMORY[0x270FA5388](v3 - 8);
  v136 = (char *)&v131 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_24A704710(&qword_2697B3668);
  uint64_t v139 = *(void *)(v138 - 8);
  MEMORY[0x270FA5388](v138);
  v131 = (char *)&v131 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_24A704710(&qword_2697B3670);
  uint64_t v137 = *(void *)(v151 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v151);
  v135 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  v150 = (char *)&v131 - v8;
  uint64_t v9 = sub_24A704710(&qword_2697B3678);
  MEMORY[0x270FA5388](v9 - 8);
  v143 = (char *)&v131 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_24A704710(&qword_2697B3680);
  uint64_t v140 = *(void *)(v141 - 8);
  MEMORY[0x270FA5388](v141);
  v133 = (char *)&v131 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_24A704710(&qword_2697B3688);
  uint64_t v158 = *(void *)(v149 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v149);
  v142 = (char *)&v131 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  v155 = (char *)&v131 - v14;
  uint64_t v15 = sub_24A704710(&qword_2697B3690);
  MEMORY[0x270FA5388](v15 - 8);
  v145 = (char *)&v131 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_24A704710(&qword_2697B3698);
  v147 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v146 - 8);
  MEMORY[0x270FA5388](v146);
  v134 = (char *)&v131 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_24A704710(&qword_2697B36A0);
  uint64_t v159 = *(void *)(v157 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v157);
  v144 = (char *)&v131 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  v156 = (char *)&v131 - v20;
  uint64_t v21 = sub_24A704710(&qword_2697B36A8);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  v148 = (void (*)(char *, uint64_t))((char *)&v131 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v131 - v24;
  uint64_t v26 = sub_24A704710(&qword_2697B36B0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  v132 = (char *)&v131 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  char v31 = (char *)&v131 - v30;
  uint64_t v32 = sub_24A704710(&qword_2697B36B8);
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  v161 = (char *)&v131 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v38 = (char *)&v131 - v37;
  MEMORY[0x270FA5388](v36);
  long long v40 = (char *)&v131 - v39;
  sub_24A704710(&qword_2697B36C0);
  sub_24A762948();
  sub_24A762968();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v33 + 8);
  uint64_t v160 = v33 + 8;
  v154 = v41;
  v41(v38, v32);
  uint64_t v162 = v32;
  v152 = v40;
  sub_24A762958();
  uint64_t v42 = v26;
  uint64_t v43 = v27;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) != 1)
  {
    char v68 = v31;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v31, v25, v42);
    if (qword_2697B2E88 != -1) {
      swift_once();
    }
    uint64_t v69 = sub_24A762D68();
    sub_24A70D1FC(v69, (uint64_t)qword_2697B3560);
    uint64_t v70 = sub_24A762D48();
    os_log_type_t v71 = sub_24A7630B8();
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v72 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v72 = 0;
      _os_log_impl(&dword_24A6FB000, v70, v71, "Matched send to", v72, 2u);
      MEMORY[0x24C5CEE90](v72, -1, -1);
    }

    swift_getKeyPath();
    sub_24A762998();
    swift_release();
    uint64_t v73 = MEMORY[0x24C5CDEE0](v165, v166, v167, v168);
    uint64_t v75 = v74;
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    sub_24A762998();
    swift_release();
    uint64_t v76 = MEMORY[0x24C5CDEE0](v165, v166, v167, v168);
    uint64_t v78 = v77;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v68, v42);
    v154(v152, v162);
    goto LABEL_18;
  }
  sub_24A70FD54((uint64_t)v25, &qword_2697B36A8);
  sub_24A762948();
  uint64_t v44 = v162;
  sub_24A762968();
  uint64_t v45 = v154;
  v154(v38, v44);
  uint64_t v46 = (uint64_t)v148;
  sub_24A762958();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v46, 1, v26) != 1)
  {
    v86 = v132;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v132, v46, v42);
    if (qword_2697B2E88 != -1) {
      swift_once();
    }
    uint64_t v87 = sub_24A762D68();
    sub_24A70D1FC(v87, (uint64_t)qword_2697B3560);
    v88 = sub_24A762D48();
    os_log_type_t v89 = sub_24A7630B8();
    if (os_log_type_enabled(v88, v89))
    {
      v90 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v90 = 0;
      _os_log_impl(&dword_24A6FB000, v88, v89, "Matched text ETA", v90, 2u);
      MEMORY[0x24C5CEE90](v90, -1, -1);
    }

    swift_getKeyPath();
    sub_24A762998();
    swift_release();
    uint64_t v73 = MEMORY[0x24C5CDEE0](v165, v166, v167, v168);
    uint64_t v75 = v91;
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    sub_24A762998();
    swift_release();
    uint64_t v76 = MEMORY[0x24C5CDEE0](v165, v166, v167, v168);
    uint64_t v78 = v92;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v86, v42);
    uint64_t v93 = v162;
    v45(v161, v162);
    v45(v152, v93);
LABEL_18:
    v94 = v153;
    uint64_t *v153 = v73;
    v94[1] = v75;
    v94[2] = v76;
    v94[3] = v78;
    return result;
  }
  sub_24A70FD54(v46, &qword_2697B36A8);
  sub_24A704710(&qword_2697B36C8);
  uint64_t v47 = v144;
  sub_24A762948();
  uint64_t v48 = v157;
  sub_24A762968();
  uint64_t v49 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v159 + 8);
  uint64_t v50 = v159 + 8;
  ((void (*)(char *, uint64_t))v49)(v47, v48);
  uint64_t v51 = (uint64_t)v145;
  sub_24A762958();
  v52 = v147;
  uint64_t v53 = v146;
  int v54 = v147[6](v51, 1, v146);
  uint64_t v55 = v149;
  uint64_t v56 = v158;
  if (v54 == 1)
  {
    char v57 = v45;
    sub_24A70FD54(v51, &qword_2697B3690);
    sub_24A704710(&qword_2697B36D0);
    id v58 = v142;
    sub_24A762948();
    sub_24A762968();
    id v60 = *(void (**)(char *, uint64_t))(v56 + 8);
    uint64_t v59 = v56 + 8;
    v148 = v60;
    v60(v58, v55);
    uint64_t v61 = (uint64_t)v143;
    sub_24A762958();
    uint64_t v62 = v140;
    uint64_t v63 = v141;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v140 + 48))(v61, 1, v141) == 1)
    {
      uint64_t v159 = v50;
      v147 = v49;
      uint64_t v158 = v59;
      sub_24A70FD54(v61, &qword_2697B3678);
      sub_24A704710(&qword_2697B36D8);
      v64 = v135;
      sub_24A762948();
      uint64_t v65 = v151;
      sub_24A762968();
      uint64_t v66 = *(void (**)(char *, uint64_t))(v137 + 8);
      v66(v64, v65);
      uint64_t v67 = (uint64_t)v136;
      sub_24A762958();
      uint64_t v80 = v139;
      uint64_t v81 = v138;
      int v82 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v139 + 48))(v67, 1, v138);
      v83 = v147;
      if (v82 == 1)
      {
        v66(v150, v151);
        v148(v155, v55);
        ((void (*)(char *, uint64_t))v83)(v156, v157);
        uint64_t v84 = v162;
        v57(v161, v162);
        v57(v152, v84);
        sub_24A70FD54(v67, &qword_2697B3660);
        double result = 0.0;
        uint64_t v85 = v153;
        *(_OWORD *)v153 = 0u;
        *((_OWORD *)v85 + 1) = 0u;
      }
      else
      {
        v120 = v131;
        (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v131, v67, v81);
        if (qword_2697B2E88 != -1) {
          swift_once();
        }
        uint64_t v121 = sub_24A762D68();
        sub_24A70D1FC(v121, (uint64_t)qword_2697B3560);
        v122 = sub_24A762D48();
        os_log_type_t v123 = sub_24A7630B8();
        if (os_log_type_enabled(v122, v123))
        {
          v124 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v124 = 0;
          _os_log_impl(&dword_24A6FB000, v122, v123, "Matched leave", v124, 2u);
          v125 = v124;
          uint64_t v81 = v138;
          MEMORY[0x24C5CEE90](v125, -1, -1);
        }

        swift_getKeyPath();
        sub_24A762998();
        swift_release();
        uint64_t v126 = MEMORY[0x24C5CDEE0](v165, v166, v167, v168);
        uint64_t v128 = v127;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v139 + 8))(v120, v81);
        v66(v150, v151);
        v148(v155, v149);
        ((void (*)(char *, uint64_t))v147)(v156, v157);
        uint64_t v129 = v162;
        v57(v161, v162);
        v57(v152, v129);
        double result = 0.0;
        v130 = v153;
        *(_OWORD *)v153 = xmmword_24A764A60;
        v130[2] = v126;
        v130[3] = v128;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v133, v61, v63);
      v109 = v57;
      if (qword_2697B2E88 != -1) {
        swift_once();
      }
      uint64_t v110 = sub_24A762D68();
      sub_24A70D1FC(v110, (uint64_t)qword_2697B3560);
      v111 = sub_24A762D48();
      os_log_type_t v112 = sub_24A7630B8();
      if (os_log_type_enabled(v111, v112))
      {
        v113 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v113 = 0;
        _os_log_impl(&dword_24A6FB000, v111, v112, "Matched notify", v113, 2u);
        MEMORY[0x24C5CEE90](v113, -1, -1);
      }

      swift_getKeyPath();
      v114 = v133;
      sub_24A762998();
      swift_release();
      uint64_t v115 = MEMORY[0x24C5CDEE0](v165, v166, v167, v168);
      uint64_t v117 = v116;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v114, v63);
      v148(v155, v149);
      ((void (*)(char *, uint64_t))v49)(v156, v157);
      uint64_t v118 = v162;
      v109(v161, v162);
      v109(v152, v118);
      v119 = v153;
      uint64_t *v153 = 0;
      v119[1] = 0;
      v119[2] = v115;
      v119[3] = v117;
    }
  }
  else
  {
    v52[4]((uint64_t)v134, v51, v53);
    if (qword_2697B2E88 != -1) {
      swift_once();
    }
    uint64_t v95 = sub_24A762D68();
    sub_24A70D1FC(v95, (uint64_t)qword_2697B3560);
    v96 = sub_24A762D48();
    os_log_type_t v97 = sub_24A7630B8();
    if (os_log_type_enabled(v96, v97))
    {
      v98 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v98 = 0;
      _os_log_impl(&dword_24A6FB000, v96, v97, "Matched share ETA", v98, 2u);
      MEMORY[0x24C5CEE90](v98, -1, -1);
    }

    swift_getKeyPath();
    v99 = v134;
    sub_24A762998();
    swift_release();
    uint64_t v100 = MEMORY[0x24C5CDEE0](v165, v166, v167, v168);
    uint64_t v164 = v101;
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    uint64_t v102 = v53;
    sub_24A762998();
    swift_release();
    uint64_t v103 = MEMORY[0x24C5CDEE0](v165, v166, v167, v168);
    uint64_t v105 = v104;
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v147[1])(v99, v102);
    ((void (*)(char *, uint64_t))v49)(v156, v157);
    uint64_t v106 = v162;
    v45(v161, v162);
    v45(v152, v106);
    v107 = v153;
    uint64_t v108 = v164;
    uint64_t *v153 = v100;
    v107[1] = v108;
    v107[2] = v103;
    v107[3] = v105;
  }
  return result;
}

uint64_t sub_24A7141BC(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v3[8] = swift_getObjectType();
  return MEMORY[0x270FA2498](sub_24A714230, 0, 0);
}

uint64_t sub_24A714230()
{
  uint64_t v22 = v0;
  if (qword_2697B2E88 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24A762D68();
  sub_24A70D1FC(v1, (uint64_t)qword_2697B3560);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_24A762D48();
  os_log_type_t v3 = sub_24A763088();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[6];
  if (v4)
  {
    uint64_t v6 = v0[5];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v20[0] = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[4] = sub_24A716784(v6, v5, v20);
    sub_24A763198();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24A6FB000, v2, v3, "Calculating ETA: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v8, -1, -1);
    MEMORY[0x24C5CEE90](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  static ScheduledQueryETARunner.extractActionType(query:)(v0[5], v0[6], v20);
  uint64_t v9 = v20[0];
  uint64_t v10 = v20[1];
  v0[9] = v20[0];
  v0[10] = v10;
  uint64_t v11 = v21;
  v0[11] = v21;
  if (v11)
  {
    uint64_t v12 = v20[2];
    v0[2] = v9;
    v0[3] = v10;
    uint64_t v13 = swift_task_alloc();
    v0[12] = v13;
    *(void *)uint64_t v13 = v0;
    *(void *)(v13 + 8) = sub_24A714528;
    uint64_t v14 = v0[7];
    *(void *)(v13 + 120) = v11;
    *(void *)(v13 + 128) = v14;
    *(void *)(v13 + 112) = v12;
    *(_OWORD *)(v13 + 136) = *((_OWORD *)v0 + 1);
    return MEMORY[0x270FA2498](sub_24A71479C, 0, 0);
  }
  else
  {
    uint64_t v16 = v0[5];
    uint64_t v15 = v0[6];
    sub_24A71667C();
    swift_allocError();
    *(void *)uint64_t v17 = v16;
    *(void *)(v17 + 8) = v15;
    *(unsigned char *)(v17 + 16) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
}

uint64_t sub_24A714528(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)*v3;
  v6[13] = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x270FA2498](sub_24A71469C, 0, 0);
  }
  else
  {
    unint64_t v7 = v6[10];
    uint64_t v8 = v6[9];
    swift_bridgeObjectRelease();
    sub_24A7166D0(v8, v7);
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))v6[1];
    return v9(a1, a2);
  }
}

uint64_t sub_24A71469C()
{
  sub_24A7166D0(v0[9], v0[10]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24A714700(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 120) = a3;
  *(void *)(v4 + 128) = v3;
  *(void *)(v4 + 112) = a2;
  *(_OWORD *)(v4 + 136) = *a1;
  return MEMORY[0x270FA2498](sub_24A71479C, 0, 0);
}

uint64_t sub_24A71479C()
{
  if (qword_2697B2E88 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24A762D68();
  v0[19] = sub_24A70D1FC(v1, (uint64_t)qword_2697B3560);
  uint64_t v2 = sub_24A762D48();
  os_log_type_t v3 = sub_24A7630B8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_24A6FB000, v2, v3, "Processing ETA Action", v4, 2u);
    MEMORY[0x24C5CEE90](v4, -1, -1);
  }

  unint64_t v5 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LocationManager()), sel_init);
  v0[20] = v5;
  uint64_t v6 = *(void **)&v5[OBJC_IVAR____TtC23ConditionalEngineShared15LocationManager_manager];
  if (!v6) {
    __break(1u);
  }
  objc_msgSend(v6, sel_setDesiredAccuracy_, *MEMORY[0x263F00B10]);
  uint64_t v7 = swift_task_alloc();
  v0[21] = v7;
  *(void *)(v7 + 16) = v5;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[22] = v8;
  uint64_t v9 = sub_24A704710(&qword_2697B3438);
  void *v8 = v0;
  v8[1] = sub_24A7149C8;
  return MEMORY[0x270FA2360](v0 + 10, 0, 0, 0xD000000000000011, 0x800000024A767F30, sub_24A70EFF4, v7, v9);
}

uint64_t sub_24A7149C8()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24A715178;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_24A714B18;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24A714B18()
{
  uint64_t v48 = v0;
  v47[1] = *MEMORY[0x263EF8340];
  uint64_t v1 = v0[16];
  uint64_t v2 = OBJC_IVAR____TtC23ConditionalEngineShared23ScheduledQueryETARunner_currentLocation;
  os_log_type_t v3 = *(void **)(v1 + OBJC_IVAR____TtC23ConditionalEngineShared23ScheduledQueryETARunner_currentLocation);
  *(void *)(v1 + OBJC_IVAR____TtC23ConditionalEngineShared23ScheduledQueryETARunner_currentLocation) = v0[10];

  uint64_t v4 = *(void **)(v1 + v2);
  v0[24] = v4;
  if (v4)
  {
    unint64_t v5 = self;
    id v6 = v4;
    id v7 = objc_msgSend(v5, sel_placemarkWithLocation_name_postalAddress_, v6, 0, 0);
    v0[25] = v7;
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEA58]), sel_init);
    v0[26] = v8;
    sub_24A704710(&qword_2697B3700);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_24A764A70;
    uint64_t v10 = (void *)*MEMORY[0x263EFE0A0];
    *(void *)(v9 + 32) = *MEMORY[0x263EFE0A0];
    v47[0] = v9;
    sub_24A762F58();
    id v11 = v10;
    sub_24A704710(&qword_2697B3708);
    uint64_t v12 = (void *)sub_24A762F28();
    swift_bridgeObjectRelease();
    v0[11] = 0;
    id v13 = objc_msgSend(v8, sel__crossPlatformUnifiedMeContactWithKeysToFetch_error_, v12, v0 + 11);
    v0[27] = v13;

    uint64_t v14 = (void *)v0[11];
    if (v13)
    {
      uint64_t v45 = v7;
      id v15 = v14;
      id v16 = objc_msgSend(v13, sel_postalAddresses);
      sub_24A704710(&qword_2697B3710);
      unint64_t v17 = sub_24A762F38();

      swift_bridgeObjectRetain();
      uint64_t v18 = sub_24A717148(v17);
      v0[28] = v18;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = v0[15];
      if (v18)
      {
        id v20 = objc_msgSend(v18, sel_value);
        id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEB38]), sel_init);
        id v22 = objc_msgSend(v21, sel_stringFromPostalAddress_, v20);
        uint64_t v23 = sub_24A762E08();
        uint64_t v25 = v24;

        v0[6] = v23;
        v0[7] = v25;
        v0[8] = 10;
        v0[9] = 0xE100000000000000;
        v0[2] = 8236;
        v0[3] = 0xE200000000000000;
        sub_24A7172F0();
        uint64_t v26 = sub_24A7631C8();
        unint64_t v28 = v27;

        swift_bridgeObjectRelease();
        uint64_t v46 = v26;
        v0[29] = v26;
        v0[30] = v28;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        uint64_t v29 = sub_24A762D48();
        os_log_type_t v30 = sub_24A7630B8();
        BOOL v31 = os_log_type_enabled(v29, v30);
        unint64_t v32 = v0[15];
        if (v31)
        {
          uint64_t v43 = v0[14];
          uint64_t v33 = swift_slowAlloc();
          uint64_t v44 = swift_slowAlloc();
          v47[0] = v44;
          *(_DWORD *)uint64_t v33 = 136315394;
          swift_bridgeObjectRetain();
          v0[12] = sub_24A716784(v43, v32, v47);
          sub_24A763198();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v33 + 12) = 2080;
          swift_bridgeObjectRetain();
          v0[13] = sub_24A716784(v46, v28, v47);
          sub_24A763198();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_24A6FB000, v29, v30, "Destination (%s) address: %s", (uint8_t *)v33, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x24C5CEE90](v44, -1, -1);
          MEMORY[0x24C5CEE90](v33, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }

        uint64_t v41 = dword_2697B3720;
        uint64_t v42 = (void *)swift_task_alloc();
        v0[31] = v42;
        *uint64_t v42 = v0;
        v42[1] = sub_24A715270;
        return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_2697B3720 + v41))(v46, v28);
      }
      uint64_t v34 = (void *)v0[20];
      uint64_t v37 = v0[14];
      sub_24A71667C();
      swift_allocError();
      *(void *)uint64_t v38 = v37;
      *(void *)(v38 + 8) = v19;
      *(unsigned char *)(v38 + 16) = 2;
      swift_bridgeObjectRetain();
      swift_willThrow();
    }
    else
    {
      uint64_t v34 = (void *)v0[20];
      id v36 = v14;
      sub_24A7623F8();

      swift_willThrow();
    }
  }
  else
  {
    uint64_t v34 = (void *)v0[20];
    sub_24A71667C();
    swift_allocError();
    *(void *)uint64_t v35 = 0xD000000000000025;
    *(void *)(v35 + 8) = 0x800000024A768180;
    *(unsigned char *)(v35 + 16) = 5;
    swift_willThrow();
  }

  uint64_t v39 = (uint64_t (*)(void))v0[1];
  return v39();
}

uint64_t sub_24A715178()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v2 = (void *)v0[20];
  swift_task_dealloc();
  sub_24A71667C();
  swift_allocError();
  *(void *)uint64_t v3 = 0xD000000000000025;
  *(void *)(v3 + 8) = 0x800000024A768180;
  *(unsigned char *)(v3 + 16) = 5;
  swift_willThrow();

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_24A715270(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 256) = a1;
  *(void *)(v3 + 264) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_24A715714;
  }
  else
  {
    uint64_t v4 = sub_24A7153C0;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_24A7153C0()
{
  uint64_t v1 = *(void **)(v0 + 256);
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 224);
    uint64_t v3 = *(void *)(v0 + 144);
    swift_bridgeObjectRelease();
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F109E0]), sel_initWithPlacemark_, v1);
    *(void *)(v0 + 272) = v4;

    if (v3 == 1)
    {
      uint64_t v5 = dword_2697B3730;
      id v6 = v4;
      id v7 = (void *)swift_task_alloc();
      *(void *)(v0 + 280) = v7;
      *id v7 = v0;
      v7[1] = sub_24A7157D4;
      uint64_t v8 = *(void *)(v0 + 200);
      return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_2697B3730 + v5))(v8, (uint64_t)v6);
    }
    else
    {
      *(_OWORD *)(v0 + 32) = *(_OWORD *)(v0 + 136);
      uint64_t v16 = dword_2697B3728;
      id v17 = v4;
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 312) = v18;
      *uint64_t v18 = v0;
      v18[1] = sub_24A715AE4;
      uint64_t v19 = *(void *)(v0 + 200);
      uint64_t v20 = *(void *)(v0 + 112);
      uint64_t v21 = *(void *)(v0 + 120);
      return ((uint64_t (*)(_OWORD *, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2697B3728 + v16))((_OWORD *)(v0 + 32), v20, v21, v19, (uint64_t)v17);
    }
  }
  else
  {
    id v11 = *(void **)(v0 + 208);
    uint64_t v10 = *(void **)(v0 + 216);
    uint64_t v12 = *(void **)(v0 + 192);
    id v13 = *(void **)(v0 + 200);
    id v22 = *(void **)(v0 + 160);
    uint64_t v23 = *(void **)(v0 + 224);
    sub_24A763338();
    swift_bridgeObjectRelease();
    sub_24A762E68();
    sub_24A762E68();
    sub_24A762E68();
    swift_bridgeObjectRelease();
    sub_24A71667C();
    swift_allocError();
    *(void *)uint64_t v14 = 0xD000000000000012;
    *(void *)(v14 + 8) = 0x800000024A7681B0;
    *(unsigned char *)(v14 + 16) = 5;
    swift_willThrow();

    id v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
}

uint64_t sub_24A715714()
{
  uint64_t v1 = *(void **)(v0 + 224);
  uint64_t v3 = *(void **)(v0 + 200);
  uint64_t v2 = *(void **)(v0 + 208);
  id v4 = *(void **)(v0 + 192);
  uint64_t v5 = *(void **)(v0 + 160);

  id v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_24A7157D4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(v6 + 288) = v2;
  swift_task_dealloc();

  if (v2)
  {
    id v7 = sub_24A715A24;
  }
  else
  {
    *(void *)(v6 + 296) = a2;
    *(void *)(v6 + 304) = a1;
    id v7 = sub_24A715950;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_24A715950()
{
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v2 = *(void **)(v0 + 192);

  uint64_t v3 = *(void *)(v0 + 304);
  id v4 = *(void **)(v0 + 208);
  uint64_t v5 = *(void **)(v0 + 200);
  uint64_t v6 = *(void **)(v0 + 160);

  id v7 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v7(v3, v1);
}

uint64_t sub_24A715A24()
{
  uint64_t v1 = *(void **)(v0 + 208);
  uint64_t v2 = *(void **)(v0 + 216);
  id v4 = *(void **)(v0 + 192);
  uint64_t v3 = *(void **)(v0 + 200);
  uint64_t v5 = *(void **)(v0 + 160);

  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_24A715AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 320) = v2;
  swift_task_dealloc();

  if (v2)
  {
    id v7 = sub_24A715D20;
  }
  else
  {
    *(void *)(v6 + 328) = a2;
    *(void *)(v6 + 336) = a1;
    id v7 = sub_24A715C50;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_24A715C50()
{
  uint64_t v1 = *(void **)(v0 + 192);

  uint64_t v2 = *(void *)(v0 + 328);
  uint64_t v3 = *(void *)(v0 + 336);
  id v4 = *(void **)(v0 + 208);
  uint64_t v5 = *(void **)(v0 + 200);
  uint64_t v6 = *(void **)(v0 + 160);

  id v7 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v7(v3, v2);
}

uint64_t sub_24A715D20()
{
  uint64_t v1 = *(void **)(v0 + 208);
  uint64_t v2 = *(void **)(v0 + 216);
  id v4 = *(void **)(v0 + 192);
  uint64_t v3 = *(void **)(v0 + 200);
  uint64_t v5 = *(void **)(v0 + 160);

  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_24A715DE0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_24A704710(&qword_2697B3008);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    if (a2)
    {
      **(void **)(*(void *)(v3 + 64) + 40) = a2;
      id v8 = a2;
      a1 = v3;
    }
    else
    {
      __break(1u);
    }
    return MEMORY[0x270FA2408](a1);
  }
}

uint64_t sub_24A715EA0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_24A704710(&qword_2697B3008);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    sub_24A705D7C(0, &qword_2697B3808);
    **(void **)(*(void *)(v3 + 64) + 40) = sub_24A762F38();
    return MEMORY[0x270FA2408](v3);
  }
}

uint64_t sub_24A715F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2697B3740 + dword_2697B3740);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_24A7093EC;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_24A716048()
{
  return MEMORY[0x270FA2498](sub_24A716064, 0, 0);
}

uint64_t sub_24A716064()
{
  if (qword_2697B2E88 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24A762D68();
  *(void *)(v0 + 16) = sub_24A70D1FC(v1, (uint64_t)qword_2697B3560);
  uint64_t v2 = sub_24A762D48();
  os_log_type_t v3 = sub_24A7630B8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_24A6FB000, v2, v3, "Running Notify", v4, 2u);
    MEMORY[0x24C5CEE90](v4, -1, -1);
  }

  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v5;
  void *v5 = v0;
  v5[1] = sub_24A7161C8;
  return MEMORY[0x270FA2498](sub_24A71B39C, 0, 0);
}

uint64_t sub_24A7161C8()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_24A7162F8, 0, 0);
  }
}

uint64_t sub_24A7162F8()
{
  uint64_t v1 = sub_24A762D48();
  os_log_type_t v2 = sub_24A7630B8();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v3 = 0;
    _os_log_impl(&dword_24A6FB000, v1, v2, "Running notify: finished", v3, 2u);
    MEMORY[0x24C5CEE90](v3, -1, -1);
  }

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

id ScheduledQueryETARunner.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScheduledQueryETARunner();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24A71644C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24A71651C;
  v7[6] = a2;
  v7[7] = v6;
  v7[5] = a1;
  v7[8] = swift_getObjectType();
  return MEMORY[0x270FA2498](sub_24A714230, 0, 0);
}

uint64_t sub_24A71651C(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *v3;
  uint64_t v6 = swift_task_dealloc();
  id v8 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (!v2)
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2;
  }
  return v8(v6, v7);
}

uint64_t sub_24A71662C()
{
  return swift_slowAlloc();
}

uint64_t sub_24A716634(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

void sub_24A716670()
{
}

unint64_t sub_24A71667C()
{
  unint64_t result = qword_2697B36E8;
  if (!qword_2697B36E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_2697B36E8);
  }
  return result;
}

uint64_t sub_24A7166D0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24A7166E4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_24A71670C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_24A716784(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_24A763198();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_24A716784(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_24A716858(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_24A705CAC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_24A705CAC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_24A704754((uint64_t)v12);
  return v7;
}

uint64_t sub_24A716858(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_24A7631A8();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_24A716A14(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_24A763398();
  if (!v8)
  {
    sub_24A763408();
    __break(1u);
LABEL_17:
    uint64_t result = sub_24A763468();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_24A716A14(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_24A716AAC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24A716C24(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_24A716C24(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_24A716AAC(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_24A753388(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_24A763348();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_24A763408();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_24A762E78();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_24A763468();
    __break(1u);
LABEL_14:
    uint64_t result = sub_24A763408();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_24A716C24(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_24A704710((uint64_t *)&unk_2697B3810);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  id v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24A763468();
  __break(1u);
  return result;
}

unsigned char **sub_24A716D74(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t sub_24A716D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  uint64_t result = sub_24A71709C(a1, a2, a3);
  uint64_t v7 = result;
  uint64_t v8 = v3 >> 63;
  if (result > 0)
  {
    sub_24A704710(&qword_2697B3800);
    int64_t v9 = (uint64_t *)swift_allocObject();
    int64_t v10 = j__malloc_size(v9);
    int v11 = 0;
    unint64_t v12 = 0;
    LOBYTE(v13) = 0;
    uint64_t v15 = v10 - 32;
    BOOL v14 = v10 < 32;
    uint64_t v16 = v10 - 25;
    uint64_t result = (uint64_t)v9;
    if (v14) {
      uint64_t v15 = v16;
    }
    uint64_t v17 = v15 >> 3;
    v9[2] = v7;
    v9[3] = 2 * v17;
    uint64_t v18 = v9 + 4;
    uint64_t v19 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v7;
    while (v7)
    {
      uint64_t v21 = v5;
      BOOL v22 = v5 <= v4;
      if (v3 > 0) {
        BOOL v22 = v5 >= v4;
      }
      if (v22)
      {
        if (v11 & 1 | (v5 != v4)) {
          goto LABEL_61;
        }
        if (v13)
        {
          int v11 = 1;
          uint64_t v5 = v4;
          BOOL v13 = 1;
        }
        else
        {
          if (v12 == 0x8000000000000000) {
            goto LABEL_62;
          }
          BOOL v13 = 0;
          int v11 = 1;
          uint64_t v5 = v4;
        }
      }
      else
      {
        BOOL v20 = __OFADD__(v5, v3);
        if (v20) {
          uint64_t v5 = v8 ^ 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          v5 += v3;
        }
        if (v20) {
          unint64_t v12 = 0x8000000000000000;
        }
        else {
          unint64_t v12 = 0;
        }
        BOOL v13 = !v20;
      }
      *v18++ = v21;
      if (!--v7) {
        goto LABEL_27;
      }
    }
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (result < 0) {
    goto LABEL_63;
  }
  int v11 = 0;
  unint64_t v12 = 0;
  BOOL v13 = 0;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v19 = *(void *)(MEMORY[0x263F8EE78] + 24) >> 1;
  uint64_t v18 = (uint64_t *)(MEMORY[0x263F8EE78] + 32);
LABEL_27:
  uint64_t v45 = v8 ^ 0x7FFFFFFFFFFFFFFFLL;
  while (1)
  {
    BOOL v23 = v5 <= v4;
    if (v3 > 0) {
      BOOL v23 = v5 >= v4;
    }
    if (v23) {
      break;
    }
    uint64_t v24 = v5 + v3;
    if (__OFADD__(v5, v3))
    {
      BOOL v13 = 0;
      unint64_t v12 = 0x8000000000000000;
      uint64_t v24 = v45;
      if (v19)
      {
        uint64_t v24 = v45;
        goto LABEL_52;
      }
    }
    else
    {
      unint64_t v12 = 0;
      BOOL v13 = 1;
      if (v19) {
        goto LABEL_52;
      }
    }
LABEL_40:
    unint64_t v25 = *(void *)(result + 24);
    if ((uint64_t)((v25 >> 1) + 0x4000000000000000) < 0) {
      goto LABEL_59;
    }
    BOOL v46 = v13;
    int v47 = v11;
    uint64_t v26 = v4;
    uint64_t v27 = v3;
    unint64_t v28 = v12;
    int64_t v29 = v25 & 0xFFFFFFFFFFFFFFFELL;
    if (v29 <= 1) {
      uint64_t v30 = 1;
    }
    else {
      uint64_t v30 = v29;
    }
    BOOL v31 = (void *)result;
    sub_24A704710(&qword_2697B3800);
    unint64_t v32 = (void *)swift_allocObject();
    int64_t v33 = j__malloc_size(v32);
    uint64_t v34 = v33 - 32;
    BOOL v14 = v33 < 32;
    uint64_t v35 = v33 - 25;
    id v36 = v31;
    if (v14) {
      uint64_t v34 = v35;
    }
    uint64_t v37 = v34 >> 3;
    v32[2] = v30;
    v32[3] = 2 * (v34 >> 3);
    unint64_t v38 = (unint64_t)(v32 + 4);
    uint64_t v39 = v31[3] >> 1;
    if (v31[2])
    {
      long long v40 = v31 + 4;
      if (v32 != v31 || v38 >= (unint64_t)v40 + 8 * v39)
      {
        memmove(v32 + 4, v40, 8 * v39);
        id v36 = v31;
      }
      v36[2] = 0;
    }
    uint64_t v18 = (uint64_t *)(v38 + 8 * v39);
    uint64_t v19 = (v37 & 0x7FFFFFFFFFFFFFFFLL) - v39;
    swift_release();
    uint64_t result = (uint64_t)v32;
    unint64_t v12 = v28;
    uint64_t v3 = v27;
    uint64_t v4 = v26;
    BOOL v13 = v46;
    int v11 = v47;
LABEL_52:
    BOOL v41 = __OFSUB__(v19--, 1);
    if (v41)
    {
      __break(1u);
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    *v18++ = v5;
    uint64_t v5 = v24;
  }
  if (!((v5 != v4) | v11 & 1) && (v13 || v12 != 0x8000000000000000))
  {
    int v11 = 1;
    uint64_t v24 = v5;
    if (v19)
    {
      uint64_t v24 = v5;
      goto LABEL_52;
    }
    goto LABEL_40;
  }
  unint64_t v42 = *(void *)(result + 24);
  if (v42 < 2) {
    return result;
  }
  unint64_t v43 = v42 >> 1;
  BOOL v41 = __OFSUB__(v43, v19);
  unint64_t v44 = v43 - v19;
  if (!v41)
  {
    *(void *)(result + 16) = v44;
    return result;
  }
LABEL_64:
  __break(1u);
  return result;
}

uint64_t sub_24A71709C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = 0;
  char v5 = 0;
  unint64_t v6 = 0;
  char v7 = 0;
  do
  {
    BOOL v11 = a1 <= a2;
    if (a3 > 0) {
      BOOL v11 = a1 >= a2;
    }
    if (v11)
    {
      if ((a1 != a2) | v5 & 1) {
        return result;
      }
      if (v7)
      {
        char v5 = 1;
        a1 = a2;
        char v7 = 1;
      }
      else
      {
        if (v6 == 0x8000000000000000) {
          return result;
        }
        char v7 = 0;
        char v5 = 1;
        a1 = a2;
      }
    }
    else
    {
      BOOL v8 = __OFADD__(a1, a3);
      a1 += a3;
      char v9 = v8;
      BOOL v10 = (v9 & 1) == 0;
      if (v9)
      {
        a1 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
        unint64_t v6 = 0x8000000000000000;
      }
      else
      {
        unint64_t v6 = 0;
      }
      char v7 = v10;
    }
    BOOL v8 = __OFADD__(result++, 1);
  }
  while (!v8);
  __break(1u);
  return result;
}

void *sub_24A717148(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_24A763428())
  {
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24C5CE400](v3 - 4, a1) : *(id *)(a1 + 8 * v3);
      char v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      id v7 = objc_msgSend(v4, sel_label);
      if (v7)
      {
        BOOL v8 = v7;
        sub_24A762E08();

        sub_24A762E28();
        swift_bridgeObjectRelease();
        sub_24A7172F0();
        char v9 = sub_24A7631D8();
        swift_bridgeObjectRelease();
        if (v9)
        {
          swift_bridgeObjectRelease();
          return v5;
        }
      }

      ++v3;
      if (v6 == v2) {
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_15:
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_24A7172F0()
{
  unint64_t result = qword_2697B3718;
  if (!qword_2697B3718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3718);
  }
  return result;
}

uint64_t sub_24A717344(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return MEMORY[0x270FA2498](sub_24A717364, 0, 0);
}

uint64_t sub_24A717364()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00A40]), sel_init);
  v0[18] = v1;
  uint64_t v2 = sub_24A762DF8();
  v0[19] = v2;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_24A7174A4;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_24A715EA0;
  v0[13] = &unk_26528D9F8;
  v0[14] = v3;
  objc_msgSend(v1, sel_geocodeAddressString_completionHandler_, v2, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24A7174A4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1) {
    uint64_t v2 = sub_24A7176AC;
  }
  else {
    uint64_t v2 = sub_24A7175B4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

void sub_24A7175B4()
{
  unint64_t v1 = *(void *)(v0 + 120);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_24A763428();
    swift_bridgeObjectRelease();
    if (!v2) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      goto LABEL_7;
    }
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v3 = (id)MEMORY[0x24C5CE400](0, v1);
  }
  else
  {
    if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v3 = *(id *)(v1 + 32);
  }
  uint64_t v2 = (uint64_t)v3;
LABEL_7:

  swift_bridgeObjectRelease();
  uint64_t v4 = *(void (**)(uint64_t))(v0 + 8);
  v4(v2);
}

uint64_t sub_24A7176AC()
{
  unint64_t v1 = (void *)v0[19];
  uint64_t v2 = (void *)v0[18];
  swift_willThrow();

  id v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_24A717724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[17] = a2;
  v3[18] = a3;
  v3[16] = a1;
  return MEMORY[0x270FA2498](sub_24A717748, 0, 0);
}

uint64_t sub_24A717748()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[16];
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F108C0]), sel_init);
  v0[19] = v3;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10960]), sel_initWithPlacemark_, v2);
  objc_msgSend(v3, sel_setSource_, v4);

  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10960]), sel_initWithPlacemark_, v1);
  objc_msgSend(v3, sel_setDestination_, v5);

  objc_msgSend(v3, sel_setRequestsAlternateRoutes_, 1);
  objc_msgSend(v3, sel_setTransportType_, 0xFFFFFFFLL);
  uint64_t v6 = (void *)sub_24A7624A8();
  objc_msgSend(v3, sel_setDepartureDate_, v6);

  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F108B8]), sel_initWithRequest_, v3);
  v0[20] = v7;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_24A717958;
  uint64_t v8 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_24A715DE0;
  v0[13] = &unk_26528D9E0;
  v0[14] = v8;
  objc_msgSend(v7, sel_calculateDirectionsWithCompletionHandler_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24A717958()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 168) = v1;
  if (v1) {
    uint64_t v2 = sub_24A717B34;
  }
  else {
    uint64_t v2 = sub_24A717A68;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24A717A68()
{
  uint64_t v2 = (void *)v0[19];
  uint64_t v1 = (void *)v0[20];
  id v3 = (void *)v0[15];
  id v4 = objc_msgSend(v3, sel_routes);
  sub_24A705D7C(0, (unint64_t *)&unk_2697B37F0);
  uint64_t v5 = sub_24A762F38();

  uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
  return v6(v5);
}

uint64_t sub_24A717B34()
{
  uint64_t v1 = (void *)v0[20];
  uint64_t v2 = (void *)v0[19];
  swift_willThrow();

  id v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_24A717BAC(uint64_t a1, uint64_t a2)
{
  v2[15] = a1;
  v2[16] = a2;
  uint64_t v3 = sub_24A762528();
  v2[17] = v3;
  v2[18] = *(void *)(v3 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A717C88, 0, 0);
}

uint64_t sub_24A717C88()
{
  uint64_t v1 = sub_24A716D84(0, 90, 5);
  v0[22] = v1;
  uint64_t result = sub_24A762508();
  uint64_t v3 = *(void *)(v1 + 16);
  v0[23] = v3;
  if (v3)
  {
    v0[24] = 0;
    v0[25] = 0;
    uint64_t v4 = v0[22];
    if (*(void *)(v4 + 16))
    {
      uint64_t v5 = *(void *)(v4 + 32);
      v0[26] = v5;
      if ((unsigned __int128)(v5 * (__int128)60) >> 64 == (60 * v5) >> 63)
      {
        v0[27] = 60 * v5;
        sub_24A7624D8();
        uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2697B37E0 + dword_2697B37E0);
        uint64_t v6 = (void *)swift_task_alloc();
        v0[28] = v6;
        *uint64_t v6 = v0;
        v6[1] = sub_24A717ED8;
        uint64_t v7 = v0[20];
        uint64_t v9 = v0[15];
        uint64_t v8 = v0[16];
        return v15(v9, v8, v7);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
  swift_release();
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  BOOL v11 = (void *)sub_24A762DF8();
  objc_msgSend(v10, sel_setDateFormat_, v11);

  uint64_t v12 = v0[18];
  sub_24A71667C();
  swift_allocError();
  *(void *)uint64_t v13 = 0xD000000000000013;
  *(void *)(v13 + 8) = 0x800000024A768360;
  *(unsigned char *)(v13 + 16) = 5;
  swift_willThrow();

  (*(void (**)(void, void))(v12 + 8))(v0[21], v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_24A717ED8(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[29] = a1;
  v3[30] = v1;
  swift_task_dealloc();
  uint64_t v4 = v3[20];
  uint64_t v5 = v3[17];
  uint64_t v6 = v3[18];
  if (v1)
  {
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v3[33] = v7;
    v3[34] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v7(v4, v5);
    swift_release();
    uint64_t v8 = sub_24A718AE0;
  }
  else
  {
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v3[31] = v9;
    v3[32] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v9(v4, v5);
    uint64_t v8 = sub_24A718040;
  }
  return MEMORY[0x270FA2498](v8, 0, 0);
}

void sub_24A718040()
{
  unint64_t v1 = v0[29];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_24A763428();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  if (v2)
  {
    unint64_t v3 = v1 & 0xC000000000000001;
    if ((v1 & 0xC000000000000001) != 0)
    {
      id v4 = (id)MEMORY[0x24C5CE400](0, v0[29]);
    }
    else
    {
      if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      id v4 = *(id *)(v0[29] + 32);
    }
    uint64_t v5 = v4;
    unint64_t v6 = v2 - 1;
    if (v2 != 1)
    {
      if (v2 < 2)
      {
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
        return;
      }
      if (!v3)
      {
        unint64_t v25 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v25 < 2 || v6 >= v25) {
          goto LABEL_50;
        }
      }
      uint64_t v27 = 0;
      uint64_t v28 = v0[29] + 40;
      do
      {
        if (v3) {
          id v29 = (id)MEMORY[0x24C5CE400](v27 + 1, v0[29]);
        }
        else {
          id v29 = *(id *)(v28 + 8 * v27);
        }
        id v30 = v29;
        objc_msgSend(v29, sel_expectedTravelTime);
        double v32 = v31;
        objc_msgSend(v5, sel_expectedTravelTime);
        if (v32 >= v33) {
          uint64_t v34 = v30;
        }
        else {
          uint64_t v34 = v5;
        }
        if (v32 < v33) {
          uint64_t v5 = v30;
        }

        ++v27;
      }
      while (v6 != v27);
    }
    uint64_t v7 = v0[26];
    uint64_t v8 = v0[24];
    swift_bridgeObjectRelease_n();
    sub_24A704710((uint64_t *)&unk_2697B32D0);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_24A763FD0;
    v0[4] = 0;
    v0[5] = 0xE000000000000000;
    sub_24A763338();
    uint64_t v10 = v0[5];
    v0[2] = v0[4];
    v0[3] = v10;
    sub_24A762E68();
    v0[14] = v7;
    sub_24A763598();
    sub_24A762E68();
    swift_bridgeObjectRelease();
    sub_24A762E68();
    objc_msgSend(v5, sel_expectedTravelTime);
    sub_24A763018();
    uint64_t v11 = v0[2];
    uint64_t v12 = v0[3];
    uint64_t v13 = MEMORY[0x263F8D310];
    *(void *)(v9 + 56) = MEMORY[0x263F8D310];
    *(void *)(v9 + 32) = v11;
    *(void *)(v9 + 40) = v12;
    sub_24A763678();
    swift_bridgeObjectRelease();
    if (!v8)
    {
      uint64_t v35 = v13;
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_24A763FD0;
      v0[6] = 0;
      v0[7] = 0xE000000000000000;
      sub_24A763338();
      swift_bridgeObjectRelease();
      v0[12] = 0xD000000000000015;
      v0[13] = 0x800000024A7683E0;
      id v37 = objc_msgSend(v5, sel_description);
      sub_24A762E08();

      sub_24A762E68();
      swift_bridgeObjectRelease();
      uint64_t v38 = v0[12];
      uint64_t v39 = v0[13];
      *(void *)(v36 + 56) = v35;
      *(void *)(v36 + 32) = v38;
      *(void *)(v36 + 40) = v39;
      sub_24A763678();
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    BOOL v14 = (void *)v0[24];
    objc_msgSend(v5, sel_expectedTravelTime);
    double v16 = v15;
    objc_msgSend(v14, sel_expectedTravelTime);
    if (v16 < v17)
    {
      char v68 = (void (*)(uint64_t, uint64_t))v0[31];
      uint64_t v67 = v0[21];
      uint64_t v18 = v0[18];
      uint64_t v19 = v0[19];
      uint64_t v20 = v0[17];
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_24A763FD0;
      v0[10] = 0;
      v0[11] = 0xE000000000000000;
      sub_24A763338();
      swift_bridgeObjectRelease();
      v0[8] = 0xD000000000000015;
      v0[9] = 0x800000024A7683E0;
      id v22 = objc_msgSend(v5, sel_description);
      sub_24A762E08();

      sub_24A762E68();
      swift_bridgeObjectRelease();
      uint64_t v23 = v0[8];
      uint64_t v24 = v0[9];
      *(void *)(v21 + 56) = MEMORY[0x263F8D310];
      *(void *)(v21 + 32) = v23;
      *(void *)(v21 + 40) = v24;
      sub_24A763678();

      swift_bridgeObjectRelease();
      sub_24A7624D8();
      v68(v67, v20);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v67, v19, v20);
      goto LABEL_31;
    }
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  uint64_t v5 = (void *)v0[24];
LABEL_31:
  unint64_t v40 = v0[25] + 1;
  if (v40 == v0[23])
  {
    swift_release();
    id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
    unint64_t v42 = (void *)sub_24A762DF8();
    objc_msgSend(v41, sel_setDateFormat_, v42);

    if (v5)
    {
      uint64_t v43 = v0[21];
      uint64_t v44 = v0[19];
      uint64_t v70 = v0[18];
      uint64_t v69 = v0[17];
      sub_24A704710((uint64_t *)&unk_2697B32D0);
      uint64_t v45 = swift_allocObject();
      *(_OWORD *)(v45 + 16) = xmmword_24A763FD0;
      id v66 = v5;
      sub_24A763338();
      sub_24A762E68();
      BOOL v46 = (void *)sub_24A7624A8();
      id v47 = objc_msgSend(v41, sel_stringFromDate_, v46);

      sub_24A762E08();
      sub_24A762E68();
      swift_bridgeObjectRelease();
      sub_24A762E68();
      objc_msgSend(v66, sel_expectedTravelTime);
      uint64_t v48 = v44;
      sub_24A762498();
      uint64_t v49 = (void *)sub_24A7624A8();
      uint64_t v65 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
      v65(v44, v69);
      id v50 = objc_msgSend(v41, sel_stringFromDate_, v49);

      sub_24A762E08();
      sub_24A762E68();
      swift_bridgeObjectRelease();
      sub_24A762E68();
      *(void *)(v45 + 56) = MEMORY[0x263F8D310];
      *(void *)(v45 + 32) = 0;
      *(void *)(v45 + 40) = 0xE000000000000000;
      sub_24A763678();
      swift_bridgeObjectRelease();
      sub_24A763338();
      sub_24A762E68();
      uint64_t v51 = (void *)sub_24A7624A8();
      id v52 = objc_msgSend(v41, sel_stringFromDate_, v51);

      sub_24A762E08();
      sub_24A762E68();
      swift_bridgeObjectRelease();
      sub_24A762E68();
      objc_msgSend(v66, sel_expectedTravelTime);
      sub_24A762498();
      uint64_t v53 = (void *)sub_24A7624A8();
      v65(v48, v69);
      id v54 = objc_msgSend(v41, sel_stringFromDate_, v53);

      sub_24A762E08();
      sub_24A762E68();
      swift_bridgeObjectRelease();
      sub_24A762E68();

      v65(v43, v69);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v55 = (void (*)(void, unint64_t))v0[1];
      v55(0, 0xE000000000000000);
    }
    else
    {
      uint64_t v62 = v0[18];
      sub_24A71667C();
      swift_allocError();
      *(void *)uint64_t v63 = 0xD000000000000013;
      *(void *)(v63 + 8) = 0x800000024A768360;
      *(unsigned char *)(v63 + 16) = 5;
      swift_willThrow();

      (*(void (**)(void, void))(v62 + 8))(v0[21], v0[17]);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v64 = (void (*)(void))v0[1];
      v64();
    }
    return;
  }
  v0[24] = v5;
  v0[25] = v40;
  uint64_t v56 = v0[22];
  if (v40 >= *(void *)(v56 + 16)) {
    goto LABEL_47;
  }
  uint64_t v57 = *(void *)(v56 + 8 * v40 + 32);
  v0[26] = v57;
  if ((unsigned __int128)(v57 * (__int128)60) >> 64 != (60 * v57) >> 63)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v0[27] = 60 * v57;
  sub_24A7624D8();
  os_log_type_t v71 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2697B37E0 + dword_2697B37E0);
  id v58 = (void *)swift_task_alloc();
  v0[28] = v58;
  *id v58 = v0;
  v58[1] = sub_24A717ED8;
  uint64_t v59 = v0[20];
  uint64_t v61 = v0[15];
  uint64_t v60 = v0[16];
  v71(v61, v60, v59);
}

uint64_t sub_24A718AE0()
{
  (*(void (**)(void, void))(v0 + 264))(*(void *)(v0 + 168), *(void *)(v0 + 136));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A718B7C(uint64_t a1, uint64_t a2)
{
  v2[12] = a1;
  v2[13] = a2;
  uint64_t v3 = sub_24A762B48();
  v2[14] = v3;
  v2[15] = *(void *)(v3 - 8);
  v2[16] = swift_task_alloc();
  uint64_t v4 = sub_24A704710(&qword_2697B37B8);
  v2[17] = v4;
  v2[18] = *(void *)(v4 - 8);
  v2[19] = swift_task_alloc();
  uint64_t v5 = sub_24A762AD8();
  v2[20] = v5;
  v2[21] = *(void *)(v5 - 8);
  v2[22] = swift_task_alloc();
  uint64_t v6 = sub_24A762B08();
  v2[23] = v6;
  v2[24] = *(void *)(v6 - 8);
  v2[25] = swift_task_alloc();
  uint64_t v7 = sub_24A762B28();
  v2[26] = v7;
  v2[27] = *(void *)(v7 - 8);
  v2[28] = swift_task_alloc();
  uint64_t v8 = sub_24A704710((uint64_t *)&unk_2697B37C0);
  v2[29] = v8;
  v2[30] = *(void *)(v8 - 8);
  v2[31] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A718E10, 0, 0);
}

uint64_t sub_24A718E10()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[28];
  uint64_t v3 = v0[25];
  uint64_t v4 = v0[26];
  uint64_t v22 = v0[24];
  uint64_t v23 = v0[23];
  uint64_t v5 = v0[21];
  uint64_t v20 = v0[22];
  uint64_t v21 = v0[20];
  uint64_t v6 = type metadata accessor for ConversationEntityRepresentation();
  sub_24A762B18();
  sub_24A70A55C(&qword_2697B3360);
  sub_24A762AB8();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v4);
  id v7 = objc_msgSend(self, sel_defaultEnvironment);
  uint64_t v8 = sub_24A705D7C(0, (unint64_t *)&qword_2697B37D0);
  uint64_t v9 = MEMORY[0x263F24F88];
  v0[2] = v7;
  v0[5] = v8;
  v0[6] = v9;
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v20, *MEMORY[0x263F24F28], v21);
  sub_24A762AF8();
  uint64_t v10 = sub_24A762AE8();
  uint64_t v12 = v11;
  v0[32] = v10;
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v3, v23);
  sub_24A704754((uint64_t)(v0 + 2));
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = sub_24A70A55C(&qword_2697B37D8);
  sub_24A7396B0();
  double v15 = (void *)swift_task_alloc();
  v0[33] = v15;
  *double v15 = v0;
  v15[1] = sub_24A7190B8;
  uint64_t v16 = v0[31];
  uint64_t v17 = v0[19];
  uint64_t v18 = v0[16];
  return MEMORY[0x270F0C938](v17, v16, v18, ObjectType, v6, v12, v14);
}

uint64_t sub_24A7190B8()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 128);
  uint64_t v3 = *(void *)(*(void *)v1 + 120);
  uint64_t v4 = *(void *)(*(void *)v1 + 112);
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_24A719454;
  }
  else {
    uint64_t v5 = sub_24A719228;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24A719228()
{
  unint64_t v1 = sub_24A762A98();
  unint64_t v2 = v1;
  if (v1 >> 62)
  {
    uint64_t result = sub_24A763428();
    if (result) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t v11 = v0[31];
    uint64_t v12 = v0[29];
    uint64_t v13 = v0[30];
    uint64_t v15 = v0[18];
    uint64_t v14 = v0[19];
    uint64_t v16 = v0[17];
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    uint64_t v8 = 0;
    uint64_t v10 = 0;
    goto LABEL_9;
  }
  uint64_t result = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!result) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    MEMORY[0x24C5CE400](0, v2);
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    swift_retain();
  }
  uint64_t v4 = v0[30];
  uint64_t v18 = v0[29];
  uint64_t v19 = v0[31];
  uint64_t v5 = v0[18];
  uint64_t v6 = v0[19];
  uint64_t v7 = v0[17];
  swift_bridgeObjectRelease();
  sub_24A7629E8();
  swift_release();
  sub_24A705BC4(v0 + 7, v0[10]);
  uint64_t v8 = sub_24A762A88();
  uint64_t v10 = v9;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v19, v18);
  sub_24A704754((uint64_t)(v0 + 7));
LABEL_9:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v17(v8, v10);
}

uint64_t sub_24A719454()
{
  uint64_t v1 = v0[31];
  uint64_t v2 = v0[29];
  uint64_t v3 = v0[30];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_24A719530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[21] = a3;
  v4[22] = a4;
  v4[19] = a1;
  v4[20] = a2;
  return MEMORY[0x270FA2498](sub_24A719554, 0, 0);
}

uint64_t sub_24A719554()
{
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  id v3 = objc_allocWithZone(MEMORY[0x263F51BB8]);
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_24A762DF8();
  uint64_t v5 = (void *)sub_24A762DF8();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v3, sel_initWithTypeIdentifier_instanceIdentifier_, v4, v5);

  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F51BC0]), sel_init);
  id v8 = objc_allocWithZone(MEMORY[0x263F51D50]);
  id v9 = v6;
  id v10 = objc_msgSend(v8, sel_initWithValue_valueType_, v9, v7);
  v0[23] = v10;

  sub_24A704710(&qword_2697B37B0);
  uint64_t inited = swift_initStackObject();
  v0[24] = inited;
  *(_OWORD *)(inited + 16) = xmmword_24A764A80;
  strcpy((char *)(inited + 32), "conversation");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(void *)(inited + 48) = v10;
  uint64_t v12 = self;
  id v13 = v10;
  swift_bridgeObjectRetain();
  id v14 = objc_msgSend(v12, sel_stringValueType);
  id v15 = objc_allocWithZone(MEMORY[0x263F51D50]);
  v0[17] = v2;
  v0[18] = v1;
  swift_bridgeObjectRetain();
  id v16 = objc_msgSend(v15, sel_initWithValue_valueType_, sub_24A7635D8(), v14);

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = 0x746E65746E6F63;
  *(void *)(inited + 64) = 0xE700000000000000;
  *(void *)(inited + 72) = v16;
  *(void *)&xmmword_2697B98F8 = 0xD000000000000013;
  *((void *)&xmmword_2697B98F8 + 1) = 0x800000024A767DC0;
  swift_bridgeObjectRelease();
  v0[15] = &type metadata for ActionExecutionOptions;
  v0[16] = &off_26FE3A6B8;
  uint64_t v17 = swift_allocObject();
  v0[12] = v17;
  *(void *)(v17 + 16) = 0xD000000000000013;
  *(void *)(v17 + 24) = 0x800000024A767DC0;
  *(_WORD *)(v17 + 32) = 513;
  *(void *)(v17 + 40) = 0;
  *(unsigned char *)(v17 + 48) = 1;
  *(_OWORD *)(v17 + 56) = 0u;
  *(_OWORD *)(v17 + 72) = 0u;
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_2697B2FF0 + dword_2697B2FF0);
  uint64_t v18 = (void *)swift_task_alloc();
  v0[25] = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_24A7198A8;
  return v20(0x6C706552646E6553, 0xEF746E65746E4979, inited, 0, 1, (uint64_t)(v0 + 12), 0, 0);
}

uint64_t sub_24A7198A8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    id v3 = sub_24A719A4C;
  }
  else
  {
    sub_24A704754(v2 + 96);
    id v3 = sub_24A7199E8;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24A7199E8()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A719A4C()
{
  sub_24A704754(v0 + 96);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A719ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_24A719AE0, 0, 0);
}

uint64_t sub_24A719AE0()
{
  if (qword_2697B2E88 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24A762D68();
  v0[6] = sub_24A70D1FC(v1, (uint64_t)qword_2697B3560);
  uint64_t v2 = sub_24A762D48();
  os_log_type_t v3 = sub_24A7630B8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_24A6FB000, v2, v3, "Running Send Message", v4, 2u);
    MEMORY[0x24C5CEE90](v4, -1, -1);
  }

  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  void *v5 = v0;
  v5[1] = sub_24A719C34;
  uint64_t v7 = v0[2];
  uint64_t v6 = v0[3];
  return sub_24A718B7C(v7, v6);
}

uint64_t sub_24A719C34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[8] = a1;
  v4[9] = a2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v5 = (uint64_t (*)(void))v4[1];
    return v5();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_24A719D68, 0, 0);
  }
}

uint64_t sub_24A719D68()
{
  uint64_t v1 = v0[9];
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[10] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_24A719EA4;
    uint64_t v3 = v0[8];
    uint64_t v4 = v0[5];
    v2[21] = v0[4];
    v2[22] = v4;
    v2[19] = v3;
    v2[20] = v1;
    return MEMORY[0x270FA2498](sub_24A719554, 0, 0);
  }
  else
  {
    uint64_t v6 = v0[2];
    uint64_t v5 = v0[3];
    sub_24A71667C();
    swift_allocError();
    *(void *)uint64_t v7 = v6;
    *(void *)(v7 + 8) = v5;
    *(unsigned char *)(v7 + 16) = 1;
    swift_bridgeObjectRetain();
    swift_willThrow();
    id v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_24A719EA4()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_24A719FF0, 0, 0);
  }
}

uint64_t sub_24A719FF0()
{
  uint64_t v1 = sub_24A762D48();
  os_log_type_t v2 = sub_24A7630B8();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_24A6FB000, v1, v2, "Running plan: finished", v3, 2u);
    MEMORY[0x24C5CEE90](v3, -1, -1);
  }

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_24A71A0C4(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  *(void *)(v5 + 40) = a2;
  *(void *)(v5 + 48) = a3;
  uint64_t v7 = sub_24A762528();
  *(void *)(v5 + 72) = v7;
  *(void *)(v5 + 80) = *(void *)(v7 - 8);
  *(void *)(v5 + 88) = swift_task_alloc();
  *(void *)(v5 + 96) = swift_task_alloc();
  *(void *)(v5 + 104) = swift_task_alloc();
  *(_OWORD *)(v5 + 112) = *a1;
  return MEMORY[0x270FA2498](sub_24A71A1B0, 0, 0);
}

uint64_t sub_24A71A1B0()
{
  sub_24A762508();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2697B37E0 + dword_2697B37E0);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[16] = v1;
  void *v1 = v0;
  v1[1] = sub_24A71A264;
  uint64_t v2 = v0[13];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  return v6(v4, v3, v2);
}

uint64_t sub_24A71A264(uint64_t a1)
{
  uint64_t v3 = *(void **)v2;
  uint64_t v4 = *(void *)(*(void *)v2 + 104);
  uint64_t v5 = *(void *)(*(void *)v2 + 80);
  uint64_t v6 = *(void *)(*(void *)v2 + 72);
  v3[17] = a1;
  v3[18] = v1;
  swift_task_dealloc();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v3[19] = v7;
  v3[20] = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v7(v4, v6);
  if (v1) {
    id v8 = sub_24A71B060;
  }
  else {
    id v8 = sub_24A71A3EC;
  }
  return MEMORY[0x270FA2498](v8, 0, 0);
}

void sub_24A71A3EC()
{
  v83 = v0;
  unint64_t v1 = v0[17];
  if (v1 >> 62) {
    goto LABEL_67;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2)
  {
LABEL_68:
    swift_bridgeObjectRelease();
    double v25 = 0.0;
    double v8 = 0.0;
LABEL_69:
    swift_bridgeObjectRelease();
    sub_24A7624D8();
    sub_24A7624D8();
    id v56 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
    v0[21] = v56;
    uint64_t v57 = (void *)sub_24A762DF8();
    objc_msgSend(v56, sel_setDateFormat_, v57);

    if (v8 >= v25)
    {
      uint64_t v81 = 2128226;
      unint64_t v82 = 0xE300000000000000;
    }
    else
    {
      uint64_t v81 = 0;
      unint64_t v82 = 0xE000000000000000;
      sub_24A763338();
      swift_bridgeObjectRelease();
      uint64_t v81 = 0x206E656577746562;
      unint64_t v82 = 0xE800000000000000;
      id v58 = (void *)sub_24A7624A8();
      id v59 = objc_msgSend(v56, sel_stringFromDate_, v58);

      sub_24A762E08();
      sub_24A762E68();
      swift_bridgeObjectRelease();
      sub_24A762E68();
    }
    uint64_t v60 = (void *)sub_24A7624A8();
    id v61 = objc_msgSend(v56, sel_stringFromDate_, v60);

    sub_24A762E08();
    sub_24A762E68();
    swift_bridgeObjectRelease();
    uint64_t v62 = v0[15];
    if (v62)
    {
      if (v62 != 1)
      {
        uint64_t v81 = 0;
        unint64_t v82 = 0xE000000000000000;
        sub_24A763338();
        swift_bridgeObjectRelease();
        uint64_t v81 = 0xD000000000000024;
        unint64_t v82 = 0x800000024A768450;
        sub_24A762E68();
        sub_24A762E68();
        sub_24A762E68();
        swift_bridgeObjectRelease();
        sub_24A762E68();
        uint64_t v70 = v81;
        uint64_t v69 = v82;
        v0[22] = v82;
        uint64_t v80 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2697B3740 + dword_2697B3740);
        os_log_type_t v71 = (void *)swift_task_alloc();
        v0[23] = v71;
        *os_log_type_t v71 = v0;
        v71[1] = sub_24A71B0E0;
        uint64_t v72 = v0[14];
        v80(v72, v62, v70, v69);
        return;
      }

      swift_bridgeObjectRelease();
      uint64_t v63 = 0;
      unint64_t v64 = 0;
    }
    else
    {
      uint64_t v81 = 0;
      unint64_t v82 = 0xE000000000000000;
      sub_24A763338();
      swift_bridgeObjectRelease();
      uint64_t v81 = 0xD000000000000015;
      unint64_t v82 = 0x800000024A768430;
      sub_24A762E68();
      sub_24A762E68();
      sub_24A762E68();
      swift_bridgeObjectRelease();
      sub_24A762E68();

      uint64_t v63 = v81;
      unint64_t v64 = v82;
    }
    uint64_t v65 = (void (*)(uint64_t, uint64_t))v0[19];
    uint64_t v66 = v0[12];
    uint64_t v67 = v0[9];
    v65(v0[11], v67);
    v65(v66, v67);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v68 = (void (*)(uint64_t, unint64_t))v0[1];
    v68(v63, v64);
    return;
  }
  while (1)
  {
    unint64_t v3 = v1 & 0xC000000000000001;
    if ((v1 & 0xC000000000000001) == 0) {
      break;
    }
    id v4 = (id)MEMORY[0x24C5CE400](0, v0[17]);
LABEL_6:
    uint64_t v5 = v4;
    unint64_t v6 = v2 - 1;
    if (v2 != 1)
    {
      if (v2 < 2) {
        goto LABEL_84;
      }
      if (!v3)
      {
        unint64_t v11 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v11 < 2 || v6 >= v11) {
          goto LABEL_86;
        }
      }
      uint64_t v13 = 0;
      uint64_t v14 = v0[17] + 40;
      do
      {
        if (v3) {
          id v15 = (id)MEMORY[0x24C5CE400](v13 + 1, v0[17]);
        }
        else {
          id v15 = *(id *)(v14 + 8 * v13);
        }
        id v16 = v15;
        objc_msgSend(v15, sel_expectedTravelTime);
        double v18 = v17;
        objc_msgSend(v5, sel_expectedTravelTime);
        if (v18 >= v19) {
          uint64_t v20 = v16;
        }
        else {
          uint64_t v20 = v5;
        }
        if (v18 < v19) {
          uint64_t v5 = v16;
        }

        ++v13;
      }
      while (v6 != v13);
    }
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_expectedTravelTime);
    double v8 = v7;

    if (v3)
    {
      uint64_t v9 = v0[17];
      swift_bridgeObjectRetain();
      id v10 = (id)MEMORY[0x24C5CE400](0, v9);
    }
    else
    {
      if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_85;
      }
      uint64_t v21 = *(void **)(v0[17] + 32);
      swift_bridgeObjectRetain();
      id v10 = v21;
    }
    uint64_t v22 = v10;
    unint64_t v23 = v2 - 1;
    if (v2 != 1)
    {
      if (!v3)
      {
        unint64_t v47 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v47 < 2 || v23 >= v47) {
          goto LABEL_87;
        }
      }
      uint64_t v48 = 0;
      uint64_t v49 = v0[17] + 40;
      do
      {
        if (v3) {
          id v50 = (id)MEMORY[0x24C5CE400](v48 + 1, v0[17]);
        }
        else {
          id v50 = *(id *)(v49 + 8 * v48);
        }
        uint64_t v51 = v50;
        objc_msgSend(v22, sel_expectedTravelTime);
        double v53 = v52;
        objc_msgSend(v51, sel_expectedTravelTime);
        if (v53 >= v54) {
          uint64_t v55 = v51;
        }
        else {
          uint64_t v55 = v22;
        }
        if (v53 < v54) {
          uint64_t v22 = v51;
        }

        ++v48;
      }
      while (v23 != v48);
    }
    swift_bridgeObjectRelease();
    objc_msgSend(v22, sel_expectedTravelTime);
    double v25 = v24;

    uint64_t v26 = 0;
    uint64_t v74 = v0 + 3;
    uint64_t v75 = v0 + 4;
    uint64_t v27 = v0;
    uint64_t v73 = v0[17] + 32;
    unint64_t v1 = 0x7FF0000000000000;
    uint64_t v0 = (void *)0xC3E0000000000001;
    unint64_t v76 = v3;
    uint64_t v77 = v27;
    while (1)
    {
      id v29 = v3 ? (id)MEMORY[0x24C5CE400](v26, v27[17]) : *(id *)(v73 + 8 * v26);
      id v30 = v29;
      objc_msgSend(v29, sel_expectedTravelTime, v73);
      double v32 = v31;
      if ((~*(void *)&v31 & 0x7FF0000000000000) == 0) {
        break;
      }
      if (v31 <= -9.22337204e18) {
        goto LABEL_62;
      }
      if (v31 >= 9.22337204e18) {
        goto LABEL_63;
      }
      objc_msgSend(v30, sel_expectedTravelTime);
      double v34 = fmod(v33, 3600.0) / 60.0;
      if ((~*(void *)&v34 & 0x7FF0000000000000) == 0) {
        goto LABEL_64;
      }
      if (v34 <= -9.22337204e18) {
        goto LABEL_65;
      }
      if (v34 >= 9.22337204e18) {
        goto LABEL_66;
      }
      id v78 = v30;
      uint64_t v79 = v26;
      if ((uint64_t)v32 < 3600)
      {
        uint64_t v36 = 0;
        unint64_t v37 = 0xE000000000000000;
      }
      else
      {
        uint64_t *v75 = (uint64_t)v32 / 3600;
        uint64_t v81 = sub_24A763598();
        unint64_t v82 = v35;
        sub_24A762E68();
        sub_24A762E68();
        swift_bridgeObjectRelease();
        sub_24A762E68();
        uint64_t v36 = v81;
        unint64_t v37 = v82;
      }
      v27[2] = (uint64_t)v34;
      uint64_t v81 = sub_24A763598();
      unint64_t v82 = v38;
      sub_24A762E68();
      uint64_t v81 = v36;
      unint64_t v82 = v37;
      swift_bridgeObjectRetain();
      sub_24A762E68();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24A762E68();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v81 = 0;
      unint64_t v82 = 0xE000000000000000;
      sub_24A763338();
      swift_bridgeObjectRelease();
      uint64_t v81 = 2123337;
      unint64_t v82 = 0xE300000000000000;
      swift_bridgeObjectRetain();
      sub_24A762E68();
      swift_bridgeObjectRelease();
      sub_24A762E68();
      sub_24A762E68();
      swift_bridgeObjectRelease();
      sub_24A762E68();
      sub_24A762E68();
      sub_24A762E68();
      sub_24A762E68();
      swift_bridgeObjectRelease();
      sub_24A762E68();
      id v39 = objc_msgSend(v30, sel_name);
      sub_24A762E08();

      sub_24A762E68();
      swift_bridgeObjectRelease();
      uint64_t v40 = v81;
      unint64_t v41 = v82;
      if (qword_2697B2E88 != -1) {
        swift_once();
      }
      uint64_t v42 = sub_24A762D68();
      sub_24A70D1FC(v42, (uint64_t)qword_2697B3560);
      swift_bridgeObjectRetain_n();
      uint64_t v43 = sub_24A762D48();
      os_log_type_t v44 = sub_24A7630B8();
      if (os_log_type_enabled(v43, v44))
      {
        uint64_t v45 = (uint8_t *)swift_slowAlloc();
        uint64_t v46 = swift_slowAlloc();
        uint64_t v81 = v46;
        *(_DWORD *)uint64_t v45 = 136315138;
        swift_bridgeObjectRetain();
        *uint64_t v74 = sub_24A716784(v40, v41, &v81);
        sub_24A763198();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24A6FB000, v43, v44, "%s", v45, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5CEE90](v46, -1, -1);
        MEMORY[0x24C5CEE90](v45, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      uint64_t v27 = v77;
      unint64_t v3 = v76;
      ++v26;
      sub_24A704710((uint64_t *)&unk_2697B32D0);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_24A763FD0;
      *(void *)(v28 + 56) = MEMORY[0x263F8D310];
      *(void *)(v28 + 32) = v40;
      *(void *)(v28 + 40) = v41;
      sub_24A763678();

      swift_bridgeObjectRelease();
      unint64_t v1 = 0x7FF0000000000000;
      uint64_t v0 = (void *)0xC3E0000000000001;
      if (v2 == v79 + 1)
      {
        uint64_t v0 = v77;
        goto LABEL_69;
      }
    }
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_24A763428();
    if (!v2) {
      goto LABEL_68;
    }
  }
  if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v4 = *(id *)(v0[17] + 32);
    goto LABEL_6;
  }
  __break(1u);
  __break(1u);
LABEL_84:
  __break(1u);
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
}

uint64_t sub_24A71B060()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A71B0E0()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_24A71B2CC;
  }
  else {
    uint64_t v2 = sub_24A71B210;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24A71B210()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 72);
  v1(*(void *)(v0 + 88), v3);
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void, void))(v0 + 8);
  return v4(0, 0);
}

uint64_t sub_24A71B2CC()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 72);

  v1(v2, v4);
  v1(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_24A71B380()
{
  return MEMORY[0x270FA2498](sub_24A71B39C, 0, 0);
}

uint64_t sub_24A71B39C()
{
  *(void *)&xmmword_2697B98F8 = 0xD000000000000013;
  *((void *)&xmmword_2697B98F8 + 1) = 0x800000024A768320;
  swift_bridgeObjectRelease();
  v0[5] = &type metadata for ActionExecutionOptions;
  v0[6] = &off_26FE3A6B8;
  uint64_t v1 = swift_allocObject();
  v0[2] = v1;
  *(void *)(v1 + 16) = 0xD000000000000013;
  *(void *)(v1 + 24) = 0x800000024A768320;
  *(_WORD *)(v1 + 32) = 513;
  *(void *)(v1 + 40) = 0;
  *(unsigned char *)(v1 + 48) = 1;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_2697B2FF0 + dword_2697B2FF0);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[7] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24A71B4F8;
  uint64_t v3 = MEMORY[0x263F8EE78];
  return v5(0xD000000000000014, 0x800000024A768300, v3, 0, 1, (uint64_t)(v0 + 2), 0, 0);
}

uint64_t sub_24A71B4F8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24A71B634, 0, 0);
  }
  else
  {
    sub_24A704754(v2 + 16);
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_24A71B634()
{
  sub_24A704754(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t method lookup function for ScheduledQueryETARunner(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ScheduledQueryETARunner);
}

uint64_t dispatch thunk of ScheduledQueryETARunner.run(query:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x263F8EED0] & *v2) + 0x90);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24A71C1B8;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ScheduledQueryETARunner.processETAAction(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v8 = *(int **)((*MEMORY[0x263F8EED0] & *v3) + 0x98);
  unint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_24A71B8F8;
  return v11(a1, a2, a3);
}

uint64_t sub_24A71B8F8(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t dispatch thunk of ScheduledQueryETARunner.send(name:message:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(int **)((*MEMORY[0x263F8EED0] & *v4) + 0xC8);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *unint64_t v11 = v5;
  v11[1] = sub_24A7093EC;
  return v13(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ScheduledQueryETARunner.notify(message:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x263F8EED0] & *v2) + 0xD8);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24A7095E4;
  return v9(a1, a2);
}

unint64_t destroy for ScheduledQueryETARunner.ETAAction(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s23ConditionalEngineShared23ScheduledQueryETARunnerC9ETAActionOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for ScheduledQueryETARunner.ETAAction(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ScheduledQueryETARunner.ETAAction(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduledQueryETARunner.ETAAction(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ScheduledQueryETARunner.ETAAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQueryETARunner.ETAAction()
{
  return &type metadata for ScheduledQueryETARunner.ETAAction;
}

uint64_t sub_24A71BE88(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 5u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for ETARunnerError(uint64_t a1)
{
  return sub_24A71BEB0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_24A71BEB0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 5u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s23ConditionalEngineShared14ETARunnerErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_24A71BE88(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ETARunnerError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_24A71BE88(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24A71BEB0(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for ETARunnerError(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ETARunnerError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_24A71BEB0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ETARunnerError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 250);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 6) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ETARunnerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 250;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24A71C054(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 5u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 6);
  }
}

uint64_t sub_24A71C06C(uint64_t result, unsigned int a2)
{
  if (a2 >= 6)
  {
    *(void *)__n128 result = a2 - 6;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 6;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ETARunnerError()
{
  return &type metadata for ETARunnerError;
}

unint64_t sub_24A71C098(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24A71C0C8();
  unint64_t result = sub_24A71C11C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_24A71C0C8()
{
  unint64_t result = qword_2697B3788;
  if (!qword_2697B3788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3788);
  }
  return result;
}

unint64_t sub_24A71C11C()
{
  unint64_t result = qword_2697B3790;
  if (!qword_2697B3790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3790);
  }
  return result;
}

uint64_t sub_24A71C170()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 88, 7);
}

uint64_t sub_24A71C1BC()
{
  return 1;
}

uint64_t sub_24A71C1C4()
{
  return sub_24A7636B8();
}

uint64_t sub_24A71C208()
{
  return sub_24A763698();
}

uint64_t sub_24A71C230()
{
  return sub_24A7636B8();
}

unint64_t sub_24A71C270()
{
  return 0xD000000000000025;
}

unint64_t sub_24A71C28C()
{
  sub_24A704710(&qword_2697B33D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A763FD0;
  *(void *)(inited + 32) = sub_24A762E08();
  *(void *)(inited + 40) = v1;
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = 0xD000000000000025;
  *(void *)(inited + 56) = 0x800000024A768690;
  return sub_24A70AC18(inited);
}

uint64_t sub_24A71C318(uint64_t a1)
{
  unint64_t v2 = sub_24A71D5C0();

  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_24A71C354(uint64_t a1)
{
  unint64_t v2 = sub_24A71D5C0();

  return MEMORY[0x270EF2668](a1, v2);
}

void __swiftcall ScheduledQueryFileManager.init(file:)(ConditionalEngineShared::ScheduledQueryFileManager *__return_ptr retstr, Swift::String file)
{
  object = file._object;
  uint64_t countAndFlagsBits = file._countAndFlagsBits;
  retstr->fileManager.super.isa = (Class)objc_msgSend(self, sel_defaultManager);
  retstr->groupIdentifier._uint64_t countAndFlagsBits = 0xD000000000000021;
  retstr->groupIdentifier._object = (void *)0x800000024A768660;
  retstr->file._uint64_t countAndFlagsBits = countAndFlagsBits;
  retstr->file._object = object;
}

uint64_t *sub_24A71C404()
{
  uint64_t v2 = sub_24A762468();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  unsigned __int8 v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unsigned __int8 v8 = (char *)&v26 - v7;
  uint64_t v9 = *(void **)v0;
  long long v10 = *(_OWORD *)(v0 + 8);
  uint64_t v11 = *(void *)(v0 + 24);
  uint64_t v12 = *(void *)(v0 + 32);
  id v29 = *(void **)v0;
  long long v30 = v10;
  uint64_t v31 = v11;
  uint64_t v32 = v12;
  uint64_t v13 = (uint64_t *)&v29;
  sub_24A71C774((uint64_t)&v26 - v7);
  if (!v1)
  {
    sub_24A762438();
    uint64_t v14 = (void *)sub_24A762DF8();
    swift_bridgeObjectRelease();
    unsigned int v15 = objc_msgSend(v9, sel_fileExistsAtPath_, v14);

    if (v15)
    {
      uint64_t v13 = (uint64_t *)sub_24A762478();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    }
    else
    {
      if (qword_2697B2E78 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_24A762D68();
      sub_24A70D1FC(v16, (uint64_t)qword_2697B3530);
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
      double v17 = sub_24A762D48();
      os_log_type_t v18 = sub_24A7630B8();
      if (os_log_type_enabled(v17, v18))
      {
        double v19 = (uint8_t *)swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        id v29 = (void *)v28;
        uint64_t v27 = v19;
        *(_DWORD *)double v19 = 136315138;
        uint64_t v26 = v19 + 4;
        uint64_t v20 = sub_24A762438();
        uint64_t v33 = sub_24A716784(v20, v21, (uint64_t *)&v29);
        sub_24A763198();
        swift_bridgeObjectRelease();
        uint64_t v22 = *(void (**)(char *, uint64_t))(v3 + 8);
        v22(v6, v2);
        unint64_t v23 = v27;
        _os_log_impl(&dword_24A6FB000, v17, v18, "[ScheduledQueryFileManager] %s doesn't exist", v27, 0xCu);
        uint64_t v24 = v28;
        swift_arrayDestroy();
        MEMORY[0x24C5CEE90](v24, -1, -1);
        MEMORY[0x24C5CEE90](v23, -1, -1);
      }
      else
      {

        uint64_t v22 = *(void (**)(char *, uint64_t))(v3 + 8);
        v22(v6, v2);
      }
      v22(v8, v2);
      return 0;
    }
  }
  return v13;
}

uint64_t sub_24A71C774@<X0>(uint64_t a1@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v2 = sub_24A762418();
  uint64_t v34 = *(void *)(v2 - 8);
  uint64_t v35 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v32 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24A704710(&qword_2697B3830);
  MEMORY[0x270FA5388](v4 - 8);
  unsigned __int8 v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24A762468();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v31 - v12;
  unsigned int v15 = *(void **)v1;
  uint64_t v14 = *(void *)(v1 + 8);
  unint64_t v16 = *(void *)(v1 + 16);
  uint64_t v31 = *(void *)(v1 + 24);
  uint64_t v17 = *(void *)(v1 + 32);
  uint64_t v36 = v14;
  uint64_t v37 = v17;
  os_log_type_t v18 = (void *)sub_24A762DF8();
  id v19 = objc_msgSend(v15, sel_containerURLForSecurityApplicationGroupIdentifier_, v18);

  if (v19)
  {
    sub_24A762428();

    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v20(v6, v11, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      v20(v13, v6, v7);
      unint64_t v21 = v32;
      v38[0] = v31;
      v38[1] = v37;
      uint64_t v23 = v34;
      uint64_t v22 = v35;
      (*(void (**)(char *, void, uint64_t))(v34 + 104))(v32, *MEMORY[0x263F06E50], v35);
      sub_24A7172F0();
      swift_bridgeObjectRetain();
      sub_24A762458();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_24A71D17C((uint64_t)v6);
  if (qword_2697B2E78 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_24A762D68();
  sub_24A70D1FC(v25, (uint64_t)qword_2697B3530);
  id v26 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_24A762D48();
  os_log_type_t v28 = sub_24A763098();
  if (os_log_type_enabled(v27, v28))
  {
    id v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    v38[0] = v30;
    *(_DWORD *)id v29 = 136315138;
    swift_bridgeObjectRetain();
    v38[3] = sub_24A716784(v36, v16, v38);
    sub_24A763198();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24A6FB000, v27, v28, "[ScheduledQueryFileManager] group identifier %s is invalid", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v30, -1, -1);
    MEMORY[0x24C5CEE90](v29, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_24A71D1DC();
  swift_allocError();
  return swift_willThrow();
}

uint64_t ScheduledQueryFileManager.databaseURL()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v2 = sub_24A762418();
  uint64_t v34 = *(void *)(v2 - 8);
  uint64_t v35 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v32 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24A704710(&qword_2697B3830);
  MEMORY[0x270FA5388](v4 - 8);
  unsigned __int8 v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24A762468();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v31 - v12;
  unsigned int v15 = *(void **)v1;
  uint64_t v14 = *(void *)(v1 + 8);
  unint64_t v16 = *(void *)(v1 + 16);
  uint64_t v31 = *(void *)(v1 + 24);
  uint64_t v17 = *(void *)(v1 + 32);
  uint64_t v36 = v14;
  uint64_t v37 = v17;
  os_log_type_t v18 = (void *)sub_24A762DF8();
  id v19 = objc_msgSend(v15, sel_containerURLForSecurityApplicationGroupIdentifier_, v18);

  if (v19)
  {
    sub_24A762428();

    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v20(v6, v11, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      v20(v13, v6, v7);
      unint64_t v21 = v32;
      v38[0] = v31;
      v38[1] = v37;
      uint64_t v23 = v34;
      uint64_t v22 = v35;
      (*(void (**)(char *, void, uint64_t))(v34 + 104))(v32, *MEMORY[0x263F06E50], v35);
      sub_24A7172F0();
      swift_bridgeObjectRetain();
      sub_24A762458();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_24A71D17C((uint64_t)v6);
  if (qword_2697B2E78 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_24A762D68();
  sub_24A70D1FC(v25, (uint64_t)qword_2697B3530);
  id v26 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_24A762D48();
  os_log_type_t v28 = sub_24A763098();
  if (os_log_type_enabled(v27, v28))
  {
    id v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    v38[0] = v30;
    *(_DWORD *)id v29 = 136315138;
    swift_bridgeObjectRetain();
    v38[3] = sub_24A716784(v36, v16, v38);
    sub_24A763198();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24A6FB000, v27, v28, "[ScheduledQueryFileManager] group identifier %s is invalid", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v30, -1, -1);
    MEMORY[0x24C5CEE90](v29, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_24A71D1DC();
  swift_allocError();
  return swift_willThrow();
}

uint64_t sub_24A71D17C(uint64_t a1)
{
  uint64_t v2 = sub_24A704710(&qword_2697B3830);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24A71D1DC()
{
  unint64_t result = qword_2697B3838;
  if (!qword_2697B3838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3838);
  }
  return result;
}

uint64_t destroy for ScheduledQueryFileManager(id *a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ScheduledQueryFileManager(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  a1[4] = *(void *)(a2 + 32);
  id v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScheduledQueryFileManager(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ScheduledQueryFileManager(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ScheduledQueryFileManager(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduledQueryFileManager(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduledQueryFileManager(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQueryFileManager()
{
  return &type metadata for ScheduledQueryFileManager;
}

uint64_t getEnumTagSinglePayload for ScheduledQueryFileManager.Error(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for ScheduledQueryFileManager.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24A71D54CLL);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24A71D574()
{
  return 0;
}

ValueMetadata *type metadata accessor for ScheduledQueryFileManager.Error()
{
  return &type metadata for ScheduledQueryFileManager.Error;
}

unint64_t sub_24A71D590(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24A71D5C0();
  unint64_t result = sub_24A71D614();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_24A71D5C0()
{
  unint64_t result = qword_2697B3840;
  if (!qword_2697B3840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3840);
  }
  return result;
}

unint64_t sub_24A71D614()
{
  unint64_t result = qword_2697B3848;
  if (!qword_2697B3848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3848);
  }
  return result;
}

unint64_t sub_24A71D66C()
{
  unint64_t result = qword_2697B3850;
  if (!qword_2697B3850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3850);
  }
  return result;
}

uint64_t sub_24A71D6C0()
{
  type metadata accessor for ScheduledQueryHistory();
  uint64_t v0 = swift_allocObject();
  type metadata accessor for ScheduledQueryHistoryStore();
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_2697B3858 = v0;
  return result;
}

uint64_t static ScheduledQueryHistory.shared.getter()
{
  if (qword_2697B2EB8 != -1) {
    swift_once();
  }

  return swift_retain();
}

BOOL static ScheduledQueryHistory.Event.EventType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ScheduledQueryHistory.Event.EventType.hash(into:)()
{
  return sub_24A763698();
}

uint64_t sub_24A71D7AC(char a1)
{
  return *(void *)&aCreate_0[8 * a1];
}

uint64_t sub_24A71D7D4()
{
  return sub_24A71D7AC(*v0);
}

uint64_t sub_24A71D7DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24A71FF2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24A71D804(uint64_t a1)
{
  unint64_t v2 = sub_24A71DEE4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A71D840(uint64_t a1)
{
  unint64_t v2 = sub_24A71DEE4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24A71D87C()
{
  return 0;
}

void sub_24A71D888(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24A71D894(uint64_t a1)
{
  unint64_t v2 = sub_24A71E034();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A71D8D0(uint64_t a1)
{
  unint64_t v2 = sub_24A71E034();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24A71D90C(uint64_t a1)
{
  unint64_t v2 = sub_24A71DFE0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A71D948(uint64_t a1)
{
  unint64_t v2 = sub_24A71DFE0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24A71D984@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_24A71D9B4(uint64_t a1)
{
  unint64_t v2 = sub_24A71DF8C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A71D9F0(uint64_t a1)
{
  unint64_t v2 = sub_24A71DF8C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24A71DA2C(uint64_t a1)
{
  unint64_t v2 = sub_24A71DF38();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A71DA68(uint64_t a1)
{
  unint64_t v2 = sub_24A71DF38();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ScheduledQueryHistory.Event.EventType.encode(to:)(void *a1)
{
  uint64_t v3 = sub_24A704710(&qword_2697B3860);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x270FA5388](v3);
  id v29 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24A704710(&qword_2697B3868);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  id v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24A704710(&qword_2697B3870);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v23 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24A704710(&qword_2697B3878);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24A704710(&qword_2697B3880);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unsigned int v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  sub_24A705BC4(a1, a1[3]);
  sub_24A71DEE4();
  sub_24A7636D8();
  switch(v16)
  {
    case 1:
      char v33 = 1;
      sub_24A71DFE0();
      uint64_t v17 = v23;
      sub_24A763518();
      uint64_t v19 = v24;
      uint64_t v18 = v25;
      goto LABEL_6;
    case 2:
      char v34 = 2;
      sub_24A71DF8C();
      uint64_t v17 = v26;
      sub_24A763518();
      uint64_t v19 = v27;
      uint64_t v18 = v28;
      goto LABEL_6;
    case 3:
      char v35 = 3;
      sub_24A71DF38();
      uint64_t v17 = v29;
      sub_24A763518();
      uint64_t v19 = v30;
      uint64_t v18 = v31;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_24A71E034();
      sub_24A763518();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_24A71DEE4()
{
  unint64_t result = qword_2697B3888;
  if (!qword_2697B3888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3888);
  }
  return result;
}

unint64_t sub_24A71DF38()
{
  unint64_t result = qword_2697B3890;
  if (!qword_2697B3890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3890);
  }
  return result;
}

unint64_t sub_24A71DF8C()
{
  unint64_t result = qword_2697B3898;
  if (!qword_2697B3898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3898);
  }
  return result;
}

unint64_t sub_24A71DFE0()
{
  unint64_t result = qword_2697B38A0;
  if (!qword_2697B38A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B38A0);
  }
  return result;
}

unint64_t sub_24A71E034()
{
  unint64_t result = qword_2697B38A8;
  if (!qword_2697B38A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B38A8);
  }
  return result;
}

uint64_t ScheduledQueryHistory.Event.EventType.hashValue.getter()
{
  return sub_24A7636B8();
}

uint64_t ScheduledQueryHistory.Event.EventType.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t v47 = a2;
  uint64_t v3 = sub_24A704710(&qword_2697B38B0);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24A704710(&qword_2697B38B8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24A704710(&qword_2697B38C0);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24A704710(&qword_2697B38C8);
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24A704710(&qword_2697B38D0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v51 = a1;
  sub_24A705BC4(a1, v18);
  sub_24A71DEE4();
  uint64_t v19 = v52;
  sub_24A7636C8();
  if (v19) {
    goto LABEL_7;
  }
  uint64_t v39 = v11;
  uint64_t v40 = v10;
  uint64_t v52 = 0;
  uint64_t v21 = v48;
  uint64_t v20 = v49;
  uint64_t v22 = v50;
  uint64_t v23 = v17;
  uint64_t v24 = sub_24A763508();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v27 = sub_24A763388();
    swift_allocError();
    id v29 = v28;
    sub_24A704710(&qword_2697B38D8);
    void *v29 = &type metadata for ScheduledQueryHistory.Event.EventType;
    sub_24A763488();
    sub_24A763378();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_7:
    uint64_t v30 = (uint64_t)v51;
    return sub_24A704754(v30);
  }
  char v25 = *(unsigned char *)(v24 + 32);
  switch(v25)
  {
    case 1:
      char v54 = 1;
      sub_24A71DFE0();
      char v32 = v40;
      uint64_t v33 = v52;
      sub_24A763478();
      if (v33) {
        goto LABEL_12;
      }
      uint64_t v35 = v42;
      uint64_t v34 = v43;
      goto LABEL_16;
    case 2:
      char v55 = 2;
      sub_24A71DF8C();
      char v32 = v46;
      uint64_t v36 = v52;
      sub_24A763478();
      if (v36) {
        goto LABEL_12;
      }
      uint64_t v34 = v44;
      uint64_t v35 = v45;
LABEL_16:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      goto LABEL_17;
    case 3:
      char v56 = 3;
      sub_24A71DF38();
      uint64_t v37 = v52;
      sub_24A763478();
      if (v37)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        uint64_t v30 = (uint64_t)v51;
        return sub_24A704754(v30);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      unint64_t v38 = v47;
      goto LABEL_19;
    default:
      char v53 = 0;
      sub_24A71E034();
      uint64_t v26 = v52;
      sub_24A763478();
      if (v26)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v39);
LABEL_17:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      unint64_t v38 = v47;
LABEL_19:
      *unint64_t v38 = v25;
      break;
  }
  return sub_24A704754(v30);
}

uint64_t sub_24A71E704@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ScheduledQueryHistory.Event.EventType.init(from:)(a1, a2);
}

uint64_t sub_24A71E71C(void *a1)
{
  return ScheduledQueryHistory.Event.EventType.encode(to:)(a1);
}

uint64_t ScheduledQueryHistory.Event.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24A762528();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ScheduledQueryHistory.Event.timestamp.setter(uint64_t a1)
{
  uint64_t v3 = sub_24A762528();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*ScheduledQueryHistory.Event.timestamp.modify())()
{
  return nullsub_1;
}

uint64_t ScheduledQueryHistory.Event.eventType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ScheduledQueryHistory.Event();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for ScheduledQueryHistory.Event()
{
  uint64_t result = qword_2697B3940;
  if (!qword_2697B3940) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ScheduledQueryHistory.Event.eventType.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for ScheduledQueryHistory.Event();
  *(unsigned char *)(v1 + *(int *)(result + 20)) = v2;
  return result;
}

uint64_t (*ScheduledQueryHistory.Event.eventType.modify())(void)
{
  return nullsub_1;
}

uint64_t ScheduledQueryHistory.Event.scheduledQuery.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ScheduledQueryHistory.Event() + 24);

  return sub_24A71E960(v3, a1);
}

uint64_t sub_24A71E960(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A704710(&qword_2697B38E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ScheduledQueryHistory.Event.scheduledQuery.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ScheduledQueryHistory.Event() + 24);

  return sub_24A71EA0C(a1, v3);
}

uint64_t sub_24A71EA0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A704710(&qword_2697B38E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*ScheduledQueryHistory.Event.scheduledQuery.modify())(void)
{
  return nullsub_1;
}

uint64_t ScheduledQueryHistory.Event.error.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ScheduledQueryHistory.Event() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ScheduledQueryHistory.Event.error.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ScheduledQueryHistory.Event() + 28));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ScheduledQueryHistory.Event.error.modify())(void)
{
  return nullsub_1;
}

uint64_t ScheduledQueryHistory.Event.result.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ScheduledQueryHistory.Event() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ScheduledQueryHistory.Event.result.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ScheduledQueryHistory.Event() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ScheduledQueryHistory.Event.result.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_24A71EC64(char a1)
{
  return *(void *)&aTimestameventt[8 * a1];
}

uint64_t sub_24A71EC84()
{
  return sub_24A71EC64(*v0);
}

uint64_t sub_24A71EC8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24A7200B0(a1, a2);
  *a3 = result;
  return result;
}

void sub_24A71ECB4(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_24A71ECC0(uint64_t a1)
{
  unint64_t v2 = sub_24A71FE30();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A71ECFC(uint64_t a1)
{
  unint64_t v2 = sub_24A71FE30();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ScheduledQueryHistory.Event.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_24A704710(&qword_2697B38E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24A705BC4(a1, a1[3]);
  sub_24A71FE30();
  sub_24A7636D8();
  v10[15] = 0;
  sub_24A762528();
  sub_24A7216C4(&qword_2697B38F8, MEMORY[0x263F07490]);
  sub_24A763578();
  if (!v2)
  {
    v10[14] = *(unsigned char *)(v3 + *(int *)(type metadata accessor for ScheduledQueryHistory.Event() + 20));
    v10[13] = 1;
    sub_24A71FE84();
    sub_24A763578();
    v10[12] = 2;
    type metadata accessor for ScheduledQuery();
    sub_24A7216C4(&qword_2697B3908, (void (*)(uint64_t))type metadata accessor for ScheduledQuery);
    sub_24A763538();
    v10[11] = 3;
    sub_24A763528();
    v10[10] = 4;
    sub_24A763528();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ScheduledQueryHistory.Event.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = sub_24A704710(&qword_2697B38E0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v33 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24A762528();
  uint64_t v35 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v36 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_24A704710(&qword_2697B3910);
  uint64_t v34 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for ScheduledQueryHistory.Event();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t)&v12[*(int *)(v10 + 24)];
  uint64_t v14 = type metadata accessor for ScheduledQuery();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v41 = v13;
  v15(v13, 1, 1, v14);
  uint64_t v16 = &v12[v9[7]];
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = 0;
  uint64_t v39 = v16;
  uint64_t v17 = &v12[v9[8]];
  *(void *)uint64_t v17 = 0;
  *((void *)v17 + 1) = 0;
  uint64_t v40 = v17;
  sub_24A705BC4(a1, a1[3]);
  sub_24A71FE30();
  uint64_t v37 = v8;
  uint64_t v18 = (uint64_t)v42;
  sub_24A7636C8();
  if (v18)
  {
    sub_24A704754((uint64_t)a1);
    sub_24A70FD54(v41, &qword_2697B38E0);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = v34;
    uint64_t v19 = v35;
    uint64_t v42 = a1;
    char v48 = 0;
    sub_24A7216C4(&qword_2697B3918, MEMORY[0x263F07490]);
    sub_24A7634F8();
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v12, v36, v5);
    char v46 = 1;
    sub_24A71FED8();
    sub_24A7634F8();
    v12[v9[5]] = v47;
    char v45 = 2;
    sub_24A7216C4(&qword_2697B3928, (void (*)(uint64_t))type metadata accessor for ScheduledQuery);
    uint64_t v21 = (uint64_t)v33;
    sub_24A7634B8();
    sub_24A71EA0C(v21, v41);
    char v44 = 3;
    uint64_t v22 = sub_24A763498();
    uint64_t v24 = v23;
    char v25 = (uint64_t *)v39;
    swift_bridgeObjectRelease();
    *char v25 = v22;
    v25[1] = v24;
    char v43 = 4;
    uint64_t v26 = sub_24A763498();
    uint64_t v28 = v27;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v37, v38);
    id v29 = (uint64_t *)v40;
    swift_bridgeObjectRelease();
    uint64_t *v29 = v26;
    v29[1] = v28;
    sub_24A723590((uint64_t)v12, v32, (uint64_t (*)(void))type metadata accessor for ScheduledQueryHistory.Event);
    sub_24A704754((uint64_t)v42);
    return sub_24A722374((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ScheduledQueryHistory.Event);
  }
}

uint64_t sub_24A71F554@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ScheduledQueryHistory.Event.init(from:)(a1, a2);
}

uint64_t sub_24A71F56C(void *a1)
{
  return ScheduledQueryHistory.Event.encode(to:)(a1);
}

BOOL sub_24A71F588()
{
  return (_s23ConditionalEngineShared21ScheduledQueryHistoryC5EventV1loiySbAE_AEtFZ_0() & 1) == 0;
}

BOOL sub_24A71F5B4()
{
  return (_s23ConditionalEngineShared21ScheduledQueryHistoryC5EventV1loiySbAE_AEtFZ_0() & 1) == 0;
}

uint64_t sub_24A71F5D4()
{
  return _s23ConditionalEngineShared21ScheduledQueryHistoryC5EventV1loiySbAE_AEtFZ_0();
}

unint64_t ScheduledQueryHistory.get()()
{
  if (qword_2697B2EA0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24A762D68();
  sub_24A70D1FC(v1, (uint64_t)qword_2697B35A8);
  uint64_t v2 = sub_24A762D48();
  os_log_type_t v3 = sub_24A7630B8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_24A6FB000, v2, v3, "[History] get", v4, 2u);
    MEMORY[0x24C5CEE90](v4, -1, -1);
  }

  unint64_t result = sub_24A724B28();
  if (!v0)
  {
    if (!result) {
      unint64_t result = MEMORY[0x263F8EE78];
    }
    return sub_24A71F6EC(result);
  }
  return result;
}

uint64_t sub_24A71F6EC(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScheduledQueryHistory.Event();
  uint64_t v15 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v3);
  uint64_t v16 = (uint64_t)&v15 - v7;
  unint64_t v8 = *(void *)(a1 + 16);
  if (v8 < 2) {
    return a1;
  }
  unint64_t v9 = 0;
  unint64_t v10 = v8 >> 1;
  for (unint64_t i = v8 - 1; ; --i)
  {
    if (v9 == i) {
      goto LABEL_4;
    }
    unint64_t v12 = *(void *)(a1 + 16);
    if (v9 >= v12) {
      break;
    }
    unint64_t v13 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v14 = *(void *)(v15 + 72);
    uint64_t result = sub_24A723590(a1 + v13 + v14 * v9, v16, (uint64_t (*)(void))type metadata accessor for ScheduledQueryHistory.Event);
    if (i >= v12) {
      goto LABEL_14;
    }
    sub_24A723590(a1 + v13 + v14 * i, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ScheduledQueryHistory.Event);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_24A71F92C(a1);
      a1 = result;
    }
    if (v9 >= *(void *)(a1 + 16)) {
      goto LABEL_15;
    }
    uint64_t result = sub_24A7235F8((uint64_t)v5, a1 + v13 + v14 * v9);
    if (i >= *(void *)(a1 + 16)) {
      goto LABEL_16;
    }
    uint64_t result = sub_24A7235F8(v16, a1 + v13 + v14 * i);
LABEL_4:
    if (v10 == ++v9) {
      return a1;
    }
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t ScheduledQueryHistory.deinit()
{
  swift_release();
  return v0;
}

uint64_t ScheduledQueryHistory.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_24A71F92C(unint64_t a1)
{
  return sub_24A703158(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t _s23ConditionalEngineShared21ScheduledQueryHistoryC5EventV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScheduledQuery();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_24A704710(&qword_2697B39C8);
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24A704710(&qword_2697B38E0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (uint64_t *)((char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v48 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v48 - v18;
  if ((sub_24A7624E8() & 1) == 0) {
    return 0;
  }
  uint64_t v20 = type metadata accessor for ScheduledQueryHistory.Event();
  if (*(unsigned __int8 *)(a1 + *(int *)(v20 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v20 + 20))) {
    return 0;
  }
  uint64_t v21 = v20;
  uint64_t v22 = *(int *)(v20 + 24);
  uint64_t v49 = a1;
  uint64_t v23 = a1 + v22;
  uint64_t v24 = v21;
  sub_24A71E960(v23, (uint64_t)v19);
  uint64_t v50 = a2;
  uint64_t v51 = v24;
  sub_24A71E960(a2 + *(int *)(v24 + 24), (uint64_t)v17);
  uint64_t v25 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_24A71E960((uint64_t)v19, (uint64_t)v10);
  sub_24A71E960((uint64_t)v17, v25);
  uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v26((uint64_t)v10, 1, v4) == 1)
  {
    sub_24A70FD54((uint64_t)v17, &qword_2697B38E0);
    sub_24A70FD54((uint64_t)v19, &qword_2697B38E0);
    if (v26(v25, 1, v4) == 1)
    {
      sub_24A70FD54((uint64_t)v10, &qword_2697B38E0);
      goto LABEL_6;
    }
    goto LABEL_14;
  }
  sub_24A71E960((uint64_t)v10, (uint64_t)v14);
  if (v26(v25, 1, v4) == 1)
  {
    sub_24A70FD54((uint64_t)v17, &qword_2697B38E0);
    sub_24A70FD54((uint64_t)v19, &qword_2697B38E0);
    sub_24A722374((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
LABEL_14:
    uint64_t v38 = &qword_2697B39C8;
    uint64_t v39 = (uint64_t)v10;
LABEL_31:
    sub_24A70FD54(v39, v38);
    return 0;
  }
  sub_24A72365C(v25, (uint64_t)v7);
  BOOL v40 = *v14 == *v7 && v14[1] == v7[1];
  if (!v40 && (sub_24A7635B8() & 1) == 0
    || (v14[2] == v7[2] ? (BOOL v41 = v14[3] == v7[3]) : (BOOL v41 = 0),
        !v41 && (sub_24A7635B8() & 1) == 0 || (v14[4] != v7[4] || v14[5] != v7[5]) && (sub_24A7635B8() & 1) == 0))
  {
    sub_24A722374((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
    sub_24A70FD54((uint64_t)v17, &qword_2697B38E0);
    sub_24A70FD54((uint64_t)v19, &qword_2697B38E0);
    sub_24A722374((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
    uint64_t v39 = (uint64_t)v10;
    uint64_t v38 = &qword_2697B38E0;
    goto LABEL_31;
  }
  char v42 = _s23ConditionalEngineShared17TriggerParametersO2eeoiySbAC_ACtFZ_0((uint64_t)v14 + *(int *)(v4 + 28), (uint64_t)v7 + *(int *)(v4 + 28));
  sub_24A722374((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
  sub_24A70FD54((uint64_t)v17, &qword_2697B38E0);
  sub_24A70FD54((uint64_t)v19, &qword_2697B38E0);
  sub_24A722374((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
  sub_24A70FD54((uint64_t)v10, &qword_2697B38E0);
  if ((v42 & 1) == 0) {
    return 0;
  }
LABEL_6:
  uint64_t v28 = v50;
  uint64_t v27 = v51;
  uint64_t v29 = *(int *)(v51 + 28);
  uint64_t v30 = v49;
  uint64_t v31 = (void *)(v49 + v29);
  uint64_t v32 = *(void *)(v49 + v29 + 8);
  uint64_t v33 = (void *)(v50 + v29);
  uint64_t v34 = v33[1];
  if (!v32)
  {
    if (!v34) {
      goto LABEL_35;
    }
    return 0;
  }
  if (!v34) {
    return 0;
  }
  if (*v31 == *v33 && v32 == v34 || (char v35 = sub_24A7635B8(), v27 = v51, v36 = v35, result = 0, (v36 & 1) != 0))
  {
LABEL_35:
    uint64_t v43 = *(int *)(v27 + 32);
    char v44 = (void *)(v30 + v43);
    uint64_t v45 = *(void *)(v30 + v43 + 8);
    char v46 = (void *)(v28 + v43);
    uint64_t v47 = v46[1];
    if (v45)
    {
      if (v47 && (*v44 == *v46 && v45 == v47 || (sub_24A7635B8() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v47)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_24A71FE30()
{
  unint64_t result = qword_2697B38F0;
  if (!qword_2697B38F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B38F0);
  }
  return result;
}

unint64_t sub_24A71FE84()
{
  unint64_t result = qword_2697B3900;
  if (!qword_2697B3900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3900);
  }
  return result;
}

unint64_t sub_24A71FED8()
{
  unint64_t result = qword_2697B3920;
  if (!qword_2697B3920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3920);
  }
  return result;
}

uint64_t sub_24A71FF2C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x657461657263 && a2 == 0xE600000000000000;
  if (v3 || (sub_24A7635B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574656C6564 && a2 == 0xE600000000000000 || (sub_24A7635B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7239026 && a2 == 0xE300000000000000 || (sub_24A7635B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F7272456E7572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24A7635B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24A7200B0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_24A7635B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x707954746E657665 && a2 == 0xE900000000000065 || (sub_24A7635B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C756465686373 && a2 == 0xEE00797265755164 || (sub_24A7635B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000 || (sub_24A7635B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746C75736572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_24A7635B8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_24A7202C8(uint64_t a1)
{
  return sub_24A7202E8(a1, "[History] create %s", 0);
}

uint64_t sub_24A7202D8(uint64_t a1)
{
  return sub_24A7202E8(a1, "[History] delete %s", 1);
}

uint64_t sub_24A7202E8(uint64_t a1, const char *a2, int a3)
{
  LODWORD(v3) = a3;
  char v35 = a2;
  char v5 = (int *)type metadata accessor for ScheduledQueryHistory.Event();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_24A762528();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v31[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for ScheduledQuery();
  uint64_t v39 = *(void *)(v12 - 8);
  uint64_t v40 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (uint64_t *)&v31[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_2697B2EA0 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_24A762D68();
  uint64_t v16 = sub_24A70D1FC(v15, (uint64_t)qword_2697B35A8);
  uint64_t v41 = a1;
  sub_24A723590(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
  uint64_t v38 = v16;
  uint64_t v17 = sub_24A762D48();
  os_log_type_t v18 = sub_24A7630B8();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v33 = v9;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v37 = v7;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v34 = v8;
    uint64_t v22 = v21;
    uint64_t v43 = v21;
    char v36 = v11;
    *(_DWORD *)uint64_t v20 = 136315138;
    int v32 = v3;
    uint64_t v23 = *v14;
    unint64_t v3 = v14[1];
    swift_bridgeObjectRetain();
    uint64_t v24 = v23;
    uint64_t v9 = v33;
    uint64_t v42 = sub_24A716784(v24, v3, &v43);
    uint64_t v11 = v36;
    sub_24A763198();
    LOBYTE(v3) = v32;
    swift_bridgeObjectRelease();
    sub_24A722374((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
    _os_log_impl(&dword_24A6FB000, v17, v18, v35, v20, 0xCu);
    swift_arrayDestroy();
    uint64_t v25 = v22;
    uint64_t v8 = v34;
    MEMORY[0x24C5CEE90](v25, -1, -1);
    uint64_t v26 = v20;
    uint64_t v7 = v37;
    MEMORY[0x24C5CEE90](v26, -1, -1);
  }
  else
  {
    sub_24A722374((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
  }

  sub_24A762518();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v7, v11, v8);
  uint64_t v27 = (uint64_t)&v7[v5[6]];
  sub_24A723590(v41, v27, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v27, 0, 1, v40);
  v7[v5[5]] = v3;
  uint64_t v28 = &v7[v5[7]];
  *uint64_t v28 = 0;
  v28[1] = 0;
  uint64_t v29 = &v7[v5[8]];
  void *v29 = 0;
  v29[1] = 0;
  sub_24A724130((uint64_t)v7);
  sub_24A722374((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScheduledQueryHistory.Event);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_24A7208AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v42 = a2;
  uint64_t v41 = type metadata accessor for ScheduledQueryHistory.Event();
  MEMORY[0x270FA5388](v41);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24A762528();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ScheduledQuery();
  uint64_t v38 = *(void *)(v11 - 8);
  uint64_t v39 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (uint64_t *)((char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_2697B2EA0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_24A762D68();
  uint64_t v15 = sub_24A70D1FC(v14, (uint64_t)qword_2697B35A8);
  uint64_t v40 = a1;
  sub_24A723590(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
  uint64_t v37 = v15;
  uint64_t v16 = sub_24A762D48();
  os_log_type_t v17 = sub_24A7630B8();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v34 = v8;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v33 = a3;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t v20 = swift_slowAlloc();
    char v36 = v6;
    uint64_t v21 = v20;
    uint64_t v44 = v20;
    *(_DWORD *)uint64_t v19 = 136315138;
    char v35 = v10;
    uint64_t v22 = *v13;
    unint64_t v23 = v13[1];
    swift_bridgeObjectRetain();
    uint64_t v24 = v22;
    uint64_t v8 = v34;
    uint64_t v43 = sub_24A716784(v24, v23, &v44);
    sub_24A763198();
    uint64_t v10 = v35;
    swift_bridgeObjectRelease();
    sub_24A722374((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
    _os_log_impl(&dword_24A6FB000, v16, v17, "[History] run %s", v19, 0xCu);
    swift_arrayDestroy();
    uint64_t v25 = v21;
    uint64_t v6 = v36;
    MEMORY[0x24C5CEE90](v25, -1, -1);
    uint64_t v26 = v19;
    a3 = v33;
    MEMORY[0x24C5CEE90](v26, -1, -1);
  }
  else
  {
    sub_24A722374((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
  }

  sub_24A762518();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v6, v10, v7);
  uint64_t v27 = (int *)v41;
  uint64_t v28 = (uint64_t)&v6[*(int *)(v41 + 24)];
  sub_24A723590(v40, v28, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v28, 0, 1, v39);
  v6[v27[5]] = 2;
  uint64_t v29 = &v6[v27[7]];
  *(void *)uint64_t v29 = 0;
  *((void *)v29 + 1) = 0;
  uint64_t v30 = &v6[v27[8]];
  *(void *)uint64_t v30 = v42;
  *((void *)v30 + 1) = a3;
  swift_bridgeObjectRetain();
  sub_24A724130((uint64_t)v6);
  sub_24A722374((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ScheduledQueryHistory.Event);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_24A720E7C(uint64_t a1, void *a2)
{
  uint64_t v4 = (int *)type metadata accessor for ScheduledQueryHistory.Event();
  MEMORY[0x270FA5388](v4);
  uint64_t v51 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24A762528();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v53 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24A704710(&qword_2697B38E0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (uint64_t *)((char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v42 - v13;
  uint64_t v15 = sub_24A762D68();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2697B2EA0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_24A70D1FC(v15, (uint64_t)qword_2697B35A8);
  uint64_t v20 = *(void (**)(char *))(v16 + 16);
  uint64_t v50 = v19;
  v20(v18);
  uint64_t v52 = a1;
  sub_24A71E960(a1, (uint64_t)v14);
  id v21 = a2;
  id v22 = a2;
  unint64_t v23 = sub_24A762D48();
  int v48 = sub_24A7630B8();
  if (os_log_type_enabled(v23, (os_log_type_t)v48))
  {
    os_log_t v45 = v23;
    char v46 = v4;
    uint64_t v47 = v7;
    uint64_t v49 = v6;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v43 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    uint64_t v55 = v44;
    *(_DWORD *)uint64_t v24 = 136315394;
    sub_24A71E960((uint64_t)v14, (uint64_t)v12);
    uint64_t v25 = type metadata accessor for ScheduledQuery();
    int v26 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v12, 1, v25);
    uint64_t v27 = (uint64_t)v51;
    if (v26 == 1)
    {
      sub_24A70FD54((uint64_t)v12, &qword_2697B38E0);
      unint64_t v28 = 0xE300000000000000;
      uint64_t v29 = 7104878;
    }
    else
    {
      uint64_t v29 = *v12;
      unint64_t v28 = v12[1];
      swift_bridgeObjectRetain();
      sub_24A722374((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
    }
    uint64_t v54 = sub_24A716784(v29, v28, &v55);
    sub_24A763198();
    swift_bridgeObjectRelease();
    sub_24A70FD54((uint64_t)v14, &qword_2697B38E0);
    *(_WORD *)(v24 + 12) = 2112;
    id v30 = a2;
    uint64_t v31 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v54 = v31;
    sub_24A763198();
    uint64_t v32 = v43;
    *uint64_t v43 = v31;

    os_log_t v33 = v45;
    _os_log_impl(&dword_24A6FB000, v45, (os_log_type_t)v48, "[History] run error %s: %@", (uint8_t *)v24, 0x16u);
    sub_24A704710(&qword_2697B3520);
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v32, -1, -1);
    uint64_t v34 = v44;
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v34, -1, -1);
    MEMORY[0x24C5CEE90](v24, -1, -1);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    uint64_t v6 = v49;
    uint64_t v4 = v46;
    uint64_t v7 = v47;
  }
  else
  {
    sub_24A70FD54((uint64_t)v14, &qword_2697B38E0);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    uint64_t v27 = (uint64_t)v51;
  }
  char v35 = v53;
  sub_24A762518();
  swift_getErrorValue();
  uint64_t v36 = sub_24A763628();
  uint64_t v38 = v37;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v27, v35, v6);
  *(unsigned char *)(v27 + v4[5]) = 3;
  sub_24A71E960(v52, v27 + v4[6]);
  uint64_t v39 = (uint64_t *)(v27 + v4[7]);
  uint64_t *v39 = v36;
  v39[1] = v38;
  uint64_t v40 = (void *)(v27 + v4[8]);
  *uint64_t v40 = 0;
  v40[1] = 0;
  sub_24A724130(v27);
  sub_24A722374(v27, (uint64_t (*)(void))type metadata accessor for ScheduledQueryHistory.Event);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v35, v6);
}

unint64_t sub_24A721628()
{
  unint64_t result = qword_2697B3930;
  if (!qword_2697B3930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3930);
  }
  return result;
}

uint64_t sub_24A72167C()
{
  return sub_24A7216C4(&qword_2697B3938, (void (*)(uint64_t))type metadata accessor for ScheduledQueryHistory.Event);
}

uint64_t sub_24A7216C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ScheduledQueryHistory()
{
  return self;
}

uint64_t method lookup function for ScheduledQueryHistory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ScheduledQueryHistory);
}

char *initializeBufferWithCopyOfBuffer for ScheduledQueryHistory.Event(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24A762528();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[6];
    a1[a3[5]] = a2[a3[5]];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = type metadata accessor for ScheduledQuery();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_24A704710(&qword_2697B38E0);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v32 = v8;
      uint64_t v34 = v13;
      uint64_t v16 = *((void *)v11 + 1);
      *(void *)uint64_t v10 = *(void *)v11;
      *((void *)v10 + 1) = v16;
      uint64_t v17 = *((void *)v11 + 3);
      *((void *)v10 + 2) = *((void *)v11 + 2);
      *((void *)v10 + 3) = v17;
      uint64_t v18 = *((void *)v11 + 5);
      *((void *)v10 + 4) = *((void *)v11 + 4);
      *((void *)v10 + 5) = v18;
      uint64_t v19 = *(int *)(v12 + 28);
      os_log_t v33 = &v10[v19];
      char v35 = &v11[v19];
      type metadata accessor for TriggerParameters();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v22 = *((void *)v35 + 1);
        *(void *)os_log_t v33 = *(void *)v35;
        *((void *)v33 + 1) = v22;
        *((_OWORD *)v33 + 1) = *((_OWORD *)v35 + 1);
        *((void *)v33 + 4) = *((void *)v35 + 4);
        *((_WORD *)v33 + 20) = *((_WORD *)v35 + 20);
        swift_bridgeObjectRetain();
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v21 = sub_24A762398();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v33, v35, v21);
      }
      else
      {
        v32(v33, v35, v7);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v10, 0, 1, v12);
    }
    uint64_t v23 = a3[7];
    uint64_t v24 = a3[8];
    uint64_t v25 = &a1[v23];
    int v26 = &a2[v23];
    uint64_t v27 = *((void *)v26 + 1);
    *(void *)uint64_t v25 = *(void *)v26;
    *((void *)v25 + 1) = v27;
    unint64_t v28 = &a1[v24];
    uint64_t v29 = &a2[v24];
    uint64_t v30 = *((void *)v29 + 1);
    *(void *)unint64_t v28 = *(void *)v29;
    *((void *)v28 + 1) = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ScheduledQueryHistory.Event(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A762528();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for ScheduledQuery();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = v6 + *(int *)(v7 + 28);
    type metadata accessor for TriggerParameters();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        swift_bridgeObjectRelease();
        break;
      case 1:
        uint64_t v11 = sub_24A762398();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v9, v11);
        break;
      case 0:
        v5(v9, v4);
        break;
    }
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ScheduledQueryHistory.Event(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24A762528();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for ScheduledQuery();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v31 = (void (*)(char *, char *, uint64_t))v7;
    uint64_t v34 = v12;
    uint64_t v14 = v10[1];
    void *v9 = *v10;
    v9[1] = v14;
    uint64_t v15 = v10[3];
    v9[2] = v10[2];
    v9[3] = v15;
    uint64_t v16 = v10[5];
    v9[4] = v10[4];
    v9[5] = v16;
    uint64_t v17 = *(int *)(v11 + 28);
    os_log_t v33 = (char *)v9 + v17;
    uint64_t v32 = (char *)v10 + v17;
    type metadata accessor for TriggerParameters();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v20 = *((void *)v32 + 1);
      *(void *)os_log_t v33 = *(void *)v32;
      *((void *)v33 + 1) = v20;
      *((_OWORD *)v33 + 1) = *((_OWORD *)v32 + 1);
      *((void *)v33 + 4) = *((void *)v32 + 4);
      *((_WORD *)v33 + 20) = *((_WORD *)v32 + 20);
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v21 = v34;
        v31(v33, v32, v6);
        goto LABEL_9;
      }
      uint64_t v19 = sub_24A762398();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v33, v32, v19);
    }
    uint64_t v21 = v34;
LABEL_9:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v9, 0, 1, v11);
    goto LABEL_10;
  }
  uint64_t v13 = sub_24A704710(&qword_2697B38E0);
  memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
LABEL_10:
  uint64_t v22 = a3[7];
  uint64_t v23 = a3[8];
  uint64_t v24 = (void *)(a1 + v22);
  uint64_t v25 = (void *)(a2 + v22);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = (void *)(a1 + v23);
  unint64_t v28 = (void *)(a2 + v23);
  uint64_t v29 = v28[1];
  void *v27 = *v28;
  v27[1] = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScheduledQueryHistory.Event(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A762528();
  uint64_t v34 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ScheduledQuery();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      void *v8 = *v9;
      v8[1] = v9[1];
      v8[2] = v9[2];
      v8[3] = v9[3];
      v8[4] = v9[4];
      v8[5] = v9[5];
      uint64_t v15 = *(int *)(v10 + 28);
      uint64_t v32 = (char *)v8 + v15;
      os_log_t v33 = (char *)v9 + v15;
      type metadata accessor for TriggerParameters();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(void *)uint64_t v32 = *(void *)v33;
        *((void *)v32 + 1) = *((void *)v33 + 1);
        *((void *)v32 + 2) = *((void *)v33 + 2);
        *((void *)v32 + 3) = *((void *)v33 + 3);
        *((void *)v32 + 4) = *((void *)v33 + 4);
        v32[40] = v33[40];
        v32[41] = v33[41];
        swift_bridgeObjectRetain();
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          uint64_t v19 = a3;
          (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v32, v33, v6);
          goto LABEL_17;
        }
        uint64_t v17 = sub_24A762398();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v32, v33, v17);
      }
      uint64_t v19 = a3;
LABEL_17:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_18;
    }
    goto LABEL_8;
  }
  if (v14)
  {
    sub_24A722374((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
LABEL_8:
    uint64_t v18 = sub_24A704710(&qword_2697B38E0);
    memcpy(v8, v9, *(void *)(*(void *)(v18 - 8) + 64));
    uint64_t v19 = a3;
    goto LABEL_18;
  }
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[2] = v9[2];
  v8[3] = v9[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[4] = v9[4];
  v8[5] = v9[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3;
  if (a1 != a2)
  {
    uint64_t v20 = *(int *)(v10 + 28);
    uint64_t v21 = (uint64_t)v8 + v20;
    uint64_t v22 = (char *)v9 + v20;
    sub_24A722374(v21, (uint64_t (*)(void))type metadata accessor for TriggerParameters);
    type metadata accessor for TriggerParameters();
    int v23 = swift_getEnumCaseMultiPayload();
    if (v23 == 2)
    {
      *(void *)uint64_t v21 = *(void *)v22;
      *(void *)(v21 + 8) = *((void *)v22 + 1);
      *(void *)(v21 + 16) = *((void *)v22 + 2);
      *(void *)(v21 + 24) = *((void *)v22 + 3);
      *(void *)(v21 + 32) = *((void *)v22 + 4);
      *(unsigned char *)(v21 + 40) = v22[40];
      *(unsigned char *)(v21 + 41) = v22[41];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v23 == 1)
      {
        uint64_t v24 = sub_24A762398();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v21, v22, v24);
      }
      else
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v34 + 16))(v21, v22, v6);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_18:
  uint64_t v25 = *(int *)(v19 + 28);
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = *(int *)(v19 + 32);
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  void *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24A722374(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t initializeWithTake for ScheduledQueryHistory.Event(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24A762528();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v9 = (_OWORD *)(a1 + v8);
  uint64_t v10 = (_OWORD *)(a2 + v8);
  uint64_t v11 = type metadata accessor for ScheduledQuery();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_24A704710(&qword_2697B38E0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    long long v14 = v10[1];
    _OWORD *v9 = *v10;
    v9[1] = v14;
    v9[2] = v10[2];
    uint64_t v15 = *(int *)(v11 + 28);
    uint64_t v22 = (char *)v9 + v15;
    uint64_t v21 = (char *)v10 + v15;
    uint64_t v16 = type metadata accessor for TriggerParameters();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v18 = sub_24A762398();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v22, v21, v18);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v22, v21, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      v7((uint64_t)v22, (uint64_t)v21, v6);
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v19 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v19) = *(_OWORD *)(a2 + v19);
  return a1;
}

uint64_t assignWithTake for ScheduledQueryHistory.Event(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A762528();
  uint64_t v44 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v45 = a3;
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ScheduledQuery();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      long long v15 = *((_OWORD *)v9 + 1);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v15;
      *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
      uint64_t v16 = *(int *)(v10 + 28);
      uint64_t v17 = (char *)v8 + v16;
      uint64_t v18 = (char *)v9 + v16;
      uint64_t v19 = type metadata accessor for TriggerParameters();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v31 = sub_24A762398();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v17, v18, v31);
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v17, v18, v6);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v22 = v45;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_16;
    }
LABEL_8:
    uint64_t v21 = sub_24A704710(&qword_2697B38E0);
    memcpy(v8, v9, *(void *)(*(void *)(v21 - 8) + 64));
    uint64_t v22 = v45;
    goto LABEL_16;
  }
  if (v14)
  {
    sub_24A722374((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
    goto LABEL_8;
  }
  uint64_t v23 = v9[1];
  void *v8 = *v9;
  v8[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = v9[3];
  v8[2] = v9[2];
  v8[3] = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = v9[5];
  v8[4] = v9[4];
  v8[5] = v25;
  swift_bridgeObjectRelease();
  uint64_t v22 = v45;
  if (a1 != a2)
  {
    uint64_t v26 = *(int *)(v10 + 28);
    uint64_t v27 = (char *)v8 + v26;
    uint64_t v28 = (char *)v9 + v26;
    sub_24A722374((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for TriggerParameters);
    uint64_t v29 = type metadata accessor for TriggerParameters();
    int v30 = swift_getEnumCaseMultiPayload();
    if (v30 == 1)
    {
      uint64_t v43 = sub_24A762398();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v27, v28, v43);
      swift_storeEnumTagMultiPayload();
    }
    else if (v30)
    {
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v27, v28, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_16:
  uint64_t v32 = *(int *)(v22 + 28);
  os_log_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (uint64_t *)(a2 + v32);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  void *v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  uint64_t v37 = *(int *)(v22 + 32);
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (uint64_t *)(a2 + v37);
  uint64_t v41 = *v39;
  uint64_t v40 = v39[1];
  *uint64_t v38 = v41;
  v38[1] = v40;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduledQueryHistory.Event(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24A722A48);
}

uint64_t sub_24A722A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A762528();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_24A704710(&qword_2697B38E0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  int v15 = v14 - 1;
  if (v15 < 0) {
    int v15 = -1;
  }
  return (v15 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduledQueryHistory.Event(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24A722B84);
}

uint64_t sub_24A722B84(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_24A762528();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_24A704710(&qword_2697B38E0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28) + 8) = a2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_24A722C9C()
{
  sub_24A762528();
  if (v0 <= 0x3F)
  {
    sub_24A722D78();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_24A722D78()
{
  if (!qword_2697B3950)
  {
    type metadata accessor for ScheduledQuery();
    unint64_t v0 = sub_24A763178();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2697B3950);
    }
  }
}

ValueMetadata *type metadata accessor for ScheduledQueryHistory.Event.EventType()
{
  return &type metadata for ScheduledQueryHistory.Event.EventType;
}

uint64_t getEnumTagSinglePayload for InteractionMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ScheduledQueryHistory.Event.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A722F44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQueryHistory.Event.CodingKeys()
{
  return &type metadata for ScheduledQueryHistory.Event.CodingKeys;
}

unsigned char *_s23ConditionalEngineShared21ScheduledQueryHistoryC5EventV9EventTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A723048);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQueryHistory.Event.EventType.CodingKeys()
{
  return &type metadata for ScheduledQueryHistory.Event.EventType.CodingKeys;
}

ValueMetadata *type metadata accessor for ScheduledQueryHistory.Event.EventType.CreateCodingKeys()
{
  return &type metadata for ScheduledQueryHistory.Event.EventType.CreateCodingKeys;
}

ValueMetadata *type metadata accessor for ScheduledQueryHistory.Event.EventType.DeleteCodingKeys()
{
  return &type metadata for ScheduledQueryHistory.Event.EventType.DeleteCodingKeys;
}

ValueMetadata *type metadata accessor for ScheduledQueryHistory.Event.EventType.RunCodingKeys()
{
  return &type metadata for ScheduledQueryHistory.Event.EventType.RunCodingKeys;
}

ValueMetadata *type metadata accessor for ScheduledQueryHistory.Event.EventType.RunErrorCodingKeys()
{
  return &type metadata for ScheduledQueryHistory.Event.EventType.RunErrorCodingKeys;
}

unint64_t sub_24A7230C4()
{
  unint64_t result = qword_2697B3958;
  if (!qword_2697B3958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3958);
  }
  return result;
}

unint64_t sub_24A72311C()
{
  unint64_t result = qword_2697B3960;
  if (!qword_2697B3960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3960);
  }
  return result;
}

unint64_t sub_24A723174()
{
  unint64_t result = qword_2697B3968;
  if (!qword_2697B3968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3968);
  }
  return result;
}

unint64_t sub_24A7231CC()
{
  unint64_t result = qword_2697B3970;
  if (!qword_2697B3970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3970);
  }
  return result;
}

unint64_t sub_24A723224()
{
  unint64_t result = qword_2697B3978;
  if (!qword_2697B3978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3978);
  }
  return result;
}

unint64_t sub_24A72327C()
{
  unint64_t result = qword_2697B3980;
  if (!qword_2697B3980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3980);
  }
  return result;
}

unint64_t sub_24A7232D4()
{
  unint64_t result = qword_2697B3988;
  if (!qword_2697B3988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3988);
  }
  return result;
}

unint64_t sub_24A72332C()
{
  unint64_t result = qword_2697B3990;
  if (!qword_2697B3990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3990);
  }
  return result;
}

unint64_t sub_24A723384()
{
  unint64_t result = qword_2697B3998;
  if (!qword_2697B3998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3998);
  }
  return result;
}

unint64_t sub_24A7233DC()
{
  unint64_t result = qword_2697B39A0;
  if (!qword_2697B39A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B39A0);
  }
  return result;
}

unint64_t sub_24A723434()
{
  unint64_t result = qword_2697B39A8;
  if (!qword_2697B39A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B39A8);
  }
  return result;
}

unint64_t sub_24A72348C()
{
  unint64_t result = qword_2697B39B0;
  if (!qword_2697B39B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B39B0);
  }
  return result;
}

unint64_t sub_24A7234E4()
{
  unint64_t result = qword_2697B39B8;
  if (!qword_2697B39B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B39B8);
  }
  return result;
}

unint64_t sub_24A72353C()
{
  unint64_t result = qword_2697B39C0;
  if (!qword_2697B39C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B39C0);
  }
  return result;
}

uint64_t sub_24A723590(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24A7235F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScheduledQueryHistory.Event();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A72365C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScheduledQuery();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_24A7236D4()
{
  id result = objc_msgSend(self, sel_defaultManager);
  *(void *)&xmmword_2697B39D0 = result;
  *((void *)&xmmword_2697B39D0 + 1) = 0xD000000000000021;
  qword_2697B39E0 = 0x800000024A768660;
  unk_2697B39E8 = 0xD000000000000015;
  qword_2697B39F0 = 0x800000024A7687B0;
  return result;
}

uint64_t sub_24A723748()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ScheduledQueryHistoryStore()
{
  return self;
}

uint64_t sub_24A72377C()
{
  if (qword_2697B2EC0 != -1) {
    swift_once();
  }
  long long v14 = xmmword_2697B39D0;
  long long v15 = *(_OWORD *)&qword_2697B39E0;
  uint64_t v16 = qword_2697B39F0;
  int v2 = sub_24A71C404();
  if (!v0)
  {
    unint64_t v4 = v3;
    if (v3 >> 60 == 15)
    {
      return 0;
    }
    else
    {
      uint64_t v5 = (uint64_t)v2;
      if (qword_2697B2EA0 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_24A762D68();
      sub_24A70D1FC(v6, (uint64_t)qword_2697B35A8);
      BOOL v7 = sub_24A762D48();
      os_log_type_t v8 = sub_24A7630B8();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v9 = 0;
        _os_log_impl(&dword_24A6FB000, v7, v8, "[HistoryStore] readQueriesFromCache success", v9, 2u);
        MEMORY[0x24C5CEE90](v9, -1, -1);
      }

      sub_24A7622C8();
      swift_allocObject();
      sub_24A7622B8();
      sub_24A704710(&qword_2697B39F8);
      sub_24A724A50(&qword_2697B3A10, &qword_2697B3A18);
      sub_24A7622A8();
      uint64_t v1 = v14;
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_24A762D48();
      os_log_type_t v11 = sub_24A7630B8();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 134217984;
        *(void *)&long long v14 = *(void *)(v1 + 16);
        sub_24A763198();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24A6FB000, v10, v11, "[HistoryStore] readQueriesFromCache %ld queries", v12, 0xCu);
        MEMORY[0x24C5CEE90](v12, -1, -1);
        swift_release();
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
      }
      sub_24A724B14(v5, v4);
    }
  }
  return v1;
}

uint64_t sub_24A723BE0(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_24A703158(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(type metadata accessor for ScheduledQueryHistory.Event() - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *int v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_24A763468();
  __break(1u);
  return result;
}

uint64_t sub_24A723DC8(uint64_t a1)
{
  uint64_t v3 = sub_24A762468();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A7622F8();
  swift_allocObject();
  sub_24A7622E8();
  *(void *)&long long v18 = a1;
  sub_24A704710(&qword_2697B39F8);
  sub_24A724A50(&qword_2697B3A00, &qword_2697B3A08);
  uint64_t v7 = sub_24A7622D8();
  if (!v1)
  {
    uint64_t v9 = v7;
    unint64_t v22 = v8;
    uint64_t v17 = v4;
    if (qword_2697B2EA0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_24A762D68();
    sub_24A70D1FC(v10, (uint64_t)qword_2697B35A8);
    swift_bridgeObjectRetain();
    int64_t v11 = sub_24A762D48();
    os_log_type_t v12 = sub_24A7630B8();
    if (os_log_type_enabled(v11, v12))
    {
      unint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unint64_t v13 = 134217984;
      *(void *)&long long v18 = *(void *)(a1 + 16);
      sub_24A763198();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24A6FB000, v11, v12, "[HistoryStore] storeQueriesToCache for %ld queries", v13, 0xCu);
      MEMORY[0x24C5CEE90](v13, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    if (qword_2697B2EC0 != -1) {
      swift_once();
    }
    long long v18 = xmmword_2697B39D0;
    uint64_t v19 = qword_2697B39E0;
    uint64_t v20 = unk_2697B39E8;
    uint64_t v21 = qword_2697B39F0;
    id v14 = (id)xmmword_2697B39D0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24A71C774((uint64_t)v6);
    unint64_t v15 = v22;
    sub_24A762488();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_24A7249F8(v9, v15);
  }
  return swift_release();
}

uint64_t sub_24A724130(uint64_t a1)
{
  uint64_t v2 = sub_24A704710(&qword_2697B38E0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v56 = type metadata accessor for ScheduledQueryHistory.Event();
  uint64_t v58 = *(void *)(v56 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v56);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v55 = (uint64_t)&v47 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  os_log_type_t v12 = (char *)&v47 - v11;
  MEMORY[0x270FA5388](v10);
  id v14 = (char *)&v47 - v13;
  uint64_t v15 = sub_24A762D68();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  long long v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2697B2EA0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_24A70D1FC(v15, (uint64_t)qword_2697B35A8);
  uint64_t v20 = *(void (**)(char *))(v16 + 16);
  uint64_t v53 = v19;
  v20(v18);
  sub_24A724870(a1, (uint64_t)v14);
  uint64_t v54 = a1;
  sub_24A724870(a1, (uint64_t)v12);
  uint64_t v21 = sub_24A762D48();
  int v22 = sub_24A7630B8();
  if (!os_log_type_enabled(v21, (os_log_type_t)v22))
  {
    sub_24A724998((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ScheduledQueryHistory.Event);
    sub_24A724998((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ScheduledQueryHistory.Event);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    uint64_t v29 = v58;
    goto LABEL_14;
  }
  int v50 = v22;
  uint64_t v48 = v15;
  os_log_t v51 = v21;
  uint64_t v52 = v7;
  uint64_t v23 = swift_slowAlloc();
  uint64_t v49 = swift_slowAlloc();
  v60[0] = v49;
  *(_DWORD *)uint64_t v23 = 136315394;
  uint64_t v24 = v56;
  LOBYTE(v59) = v14[*(int *)(v56 + 20)];
  uint64_t v25 = sub_24A762E18();
  uint64_t v59 = sub_24A716784(v25, v26, v60);
  sub_24A763198();
  swift_bridgeObjectRelease();
  sub_24A724998((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ScheduledQueryHistory.Event);
  *(_WORD *)(v23 + 12) = 2080;
  sub_24A71E960((uint64_t)&v12[*(int *)(v24 + 24)], (uint64_t)v4);
  uint64_t v27 = type metadata accessor for ScheduledQuery();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v4, 1, v27) == 1)
  {
    sub_24A724938((uint64_t)v4);
    uint64_t v28 = v55;
    sub_24A724870((uint64_t)v12, v55);
LABEL_9:
    uint64_t v34 = (uint64_t *)(v28 + *(int *)(v56 + 28));
    uint64_t v32 = v28;
    if (v34[1])
    {
      uint64_t v31 = *v34;
      unint64_t v30 = v34[1];
    }
    else
    {
      unint64_t v30 = 0xE300000000000000;
      uint64_t v31 = 7104878;
    }
    uint64_t v33 = v48;
    swift_bridgeObjectRetain();
    goto LABEL_13;
  }
  uint64_t v31 = *v4;
  unint64_t v30 = v4[1];
  swift_bridgeObjectRetain();
  sub_24A724998((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
  uint64_t v28 = v55;
  sub_24A724870((uint64_t)v12, v55);
  if (!v30) {
    goto LABEL_9;
  }
  uint64_t v32 = v28;
  uint64_t v33 = v48;
LABEL_13:
  sub_24A724998(v32, (uint64_t (*)(void))type metadata accessor for ScheduledQueryHistory.Event);
  uint64_t v59 = sub_24A716784(v31, v30, v60);
  sub_24A763198();
  swift_bridgeObjectRelease();
  sub_24A724998((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ScheduledQueryHistory.Event);
  os_log_t v35 = v51;
  _os_log_impl(&dword_24A6FB000, v51, (os_log_type_t)v50, "[HistoryStore] append %s item %s", (uint8_t *)v23, 0x16u);
  uint64_t v36 = v49;
  swift_arrayDestroy();
  MEMORY[0x24C5CEE90](v36, -1, -1);
  MEMORY[0x24C5CEE90](v23, -1, -1);

  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v33);
  uint64_t v29 = v58;
  uint64_t v7 = v52;
LABEL_14:
  uint64_t v37 = v57;
  uint64_t result = sub_24A72377C();
  if (!v37)
  {
    uint64_t v39 = MEMORY[0x263F8EE78];
    if (result) {
      uint64_t v39 = result;
    }
    unint64_t v61 = v39;
    if (*(void *)(v39 + 16) >= 0xC9uLL)
    {
      sub_24A723BE0(0, 10);
      uint64_t v40 = sub_24A762D48();
      os_log_type_t v41 = sub_24A7630B8();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v42 = 134217984;
        swift_beginAccess();
        v60[0] = *(void *)(v61 + 16);
        sub_24A763198();
        _os_log_impl(&dword_24A6FB000, v40, v41, "[HistoryStore] trim items to %ld", v42, 0xCu);
        MEMORY[0x24C5CEE90](v42, -1, -1);
      }
    }
    sub_24A724870(v54, (uint64_t)v7);
    swift_beginAccess();
    unint64_t v43 = v61;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v43 = sub_24A703158(0, *(void *)(v43 + 16) + 1, 1, v43);
    }
    unint64_t v45 = *(void *)(v43 + 16);
    unint64_t v44 = *(void *)(v43 + 24);
    if (v45 >= v44 >> 1) {
      unint64_t v43 = sub_24A703158(v44 > 1, v45 + 1, 1, v43);
    }
    *(void *)(v43 + 16) = v45 + 1;
    sub_24A7248D4((uint64_t)v7, v43+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v45);
    swift_endAccess();
    uint64_t v46 = swift_bridgeObjectRetain();
    sub_24A723DC8(v46);
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_24A724870(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScheduledQueryHistory.Event();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A7248D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScheduledQueryHistory.Event();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A724938(uint64_t a1)
{
  uint64_t v2 = sub_24A704710(&qword_2697B38E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24A724998(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24A7249F8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_24A724A50(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24A704B6C(&qword_2697B39F8);
    sub_24A724AD0(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A724AD0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ScheduledQueryHistory.Event();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A724B14(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_24A7249F8(a1, a2);
  }
  return a1;
}

uint64_t sub_24A724B28()
{
  uint64_t v1 = sub_24A72377C();
  if (!v0)
  {
    if (qword_2697B2EA0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_24A762D68();
    sub_24A70D1FC(v2, (uint64_t)qword_2697B35A8);
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_24A762D48();
    os_log_type_t v4 = sub_24A7630B8();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 134217984;
      sub_24A763198();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24A6FB000, v3, v4, "[HistoryStore] getItems count = %ld", v5, 0xCu);
      MEMORY[0x24C5CEE90](v5, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  return v1;
}

uint64_t sub_24A724C74(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = 0x6E72757465526F6ELL;
  switch(a3)
  {
    case 1:
      sub_24A763338();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000019;
      goto LABEL_5;
    case 2:
    case 3:
      sub_24A763338();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000017;
      goto LABEL_5;
    case 4:
      return result;
    default:
      sub_24A763338();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD00000000000001CLL;
LABEL_5:
      unint64_t v5 = v4;
      sub_24A762E68();
      return v5;
  }
}

uint64_t sub_24A724DE4()
{
  return sub_24A724C74(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

unint64_t sub_24A724DF0()
{
  uint64_t v1 = sub_24A724C74(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
  if (v2)
  {
    uint64_t v3 = v1;
    uint64_t v4 = v2;
    sub_24A704710(&qword_2697B33D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24A763FD0;
    *(void *)(inited + 32) = sub_24A762E08();
    *(void *)(inited + 40) = v6;
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = v3;
    *(void *)(inited + 56) = v4;
    return sub_24A70AC18(inited);
  }
  else
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    return sub_24A70AC18(v8);
  }
}

uint64_t sub_24A724EB0(uint64_t a1)
{
  unint64_t v2 = sub_24A726E10();

  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_24A724EEC(uint64_t a1)
{
  unint64_t v2 = sub_24A726E10();

  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t ScheduledQueryHomeAccessoryToggleRunner.run(query:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return MEMORY[0x270FA2498](sub_24A724F50, 0, 0);
}

uint64_t sub_24A724F50()
{
  uint64_t v20 = v0;
  if (qword_2697B2E88 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24A762D68();
  sub_24A70D1FC(v1, (uint64_t)qword_2697B3560);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_24A762D48();
  os_log_type_t v3 = sub_24A763088();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[4];
  if (v4)
  {
    uint64_t v6 = v0[3];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v19 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[2] = sub_24A716784(v6, v5, &v19);
    sub_24A763198();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24A6FB000, v2, v3, "Running toggle accessory: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v8, -1, -1);
    MEMORY[0x24C5CEE90](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t HomeAccessoryToggleRunnerV07extracthG05querySSSgSS_tFZ_0 = _s23ConditionalEngineShared39ScheduledQueryHomeAccessoryToggleRunnerV07extracthG05querySSSgSS_tFZ_0();
  v0[5] = v10;
  if (v10)
  {
    uint64_t v11 = HomeAccessoryToggleRunnerV07extracthG05querySSSgSS_tFZ_0;
    uint64_t v12 = v10;
    uint64_t v13 = (void *)swift_task_alloc();
    v0[6] = v13;
    void *v13 = v0;
    v13[2] = v11;
    v13[3] = v12;
    v13[1] = sub_24A725228;
    return MEMORY[0x270FA2498](sub_24A7253C4, 0, 0);
  }
  else
  {
    uint64_t v15 = v0[3];
    uint64_t v14 = v0[4];
    sub_24A726AE8();
    swift_allocError();
    *(void *)uint64_t v16 = v15;
    *(void *)(v16 + 8) = v14;
    *(unsigned char *)(v16 + 16) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
}

uint64_t sub_24A725228()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24A72538C, 0, 0);
  }
  else
  {
    os_log_type_t v3 = *(uint64_t (**)(void, void))(v2 + 8);
    return v3(0, 0);
  }
}

uint64_t sub_24A72538C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ScheduledQueryHomeAccessoryToggleRunner.toggle(accessory:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_24A7253C4, 0, 0);
}

uint64_t sub_24A7253C4()
{
  if (qword_2697B2E88 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24A762D68();
  v0[4] = sub_24A70D1FC(v1, (uint64_t)qword_2697B3560);
  uint64_t v2 = sub_24A762D48();
  os_log_type_t v3 = sub_24A7630B8();
  if (os_log_type_enabled(v2, v3))
  {
    BOOL v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v4 = 0;
    _os_log_impl(&dword_24A6FB000, v2, v3, "Toggling accessory", v4, 2u);
    MEMORY[0x24C5CEE90](v4, -1, -1);
  }

  uint64_t v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  void *v5 = v0;
  v5[1] = sub_24A725518;
  uint64_t v7 = v0[2];
  uint64_t v6 = v0[3];
  return sub_24A725998(v7, v6);
}

uint64_t sub_24A725518(uint64_t a1, uint64_t a2)
{
  BOOL v4 = (void *)*v3;
  v4[6] = a1;
  v4[7] = a2;
  v4[8] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_24A725968;
  }
  else {
    uint64_t v5 = sub_24A725630;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24A725630()
{
  uint64_t v1 = v0[7];
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[9] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_24A725764;
    v2[14] = v0[6];
    v2[15] = v1;
    return MEMORY[0x270FA2498](sub_24A725EDC, 0, 0);
  }
  else
  {
    uint64_t v4 = v0[2];
    uint64_t v3 = v0[3];
    sub_24A726AE8();
    swift_allocError();
    *(void *)uint64_t v5 = v4;
    *(void *)(v5 + 8) = v3;
    *(unsigned char *)(v5 + 16) = 1;
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_24A725764()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_24A725980;
  }
  else {
    uint64_t v2 = sub_24A725894;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24A725894()
{
  uint64_t v1 = sub_24A762D48();
  os_log_type_t v2 = sub_24A7630B8();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_24A6FB000, v1, v2, "Running plan: finished", v3, 2u);
    MEMORY[0x24C5CEE90](v3, -1, -1);
  }

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_24A725968()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24A725980()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24A725998(uint64_t a1, uint64_t a2)
{
  v2[12] = a1;
  v2[13] = a2;
  uint64_t v3 = sub_24A762B48();
  v2[14] = v3;
  v2[15] = *(void *)(v3 - 8);
  v2[16] = swift_task_alloc();
  uint64_t v4 = sub_24A704710(&qword_2697B3AD8);
  v2[17] = v4;
  v2[18] = *(void *)(v4 - 8);
  v2[19] = swift_task_alloc();
  uint64_t v5 = sub_24A762AD8();
  v2[20] = v5;
  v2[21] = *(void *)(v5 - 8);
  v2[22] = swift_task_alloc();
  uint64_t v6 = sub_24A762B08();
  v2[23] = v6;
  v2[24] = *(void *)(v6 - 8);
  v2[25] = swift_task_alloc();
  uint64_t v7 = sub_24A762B28();
  v2[26] = v7;
  v2[27] = *(void *)(v7 - 8);
  v2[28] = swift_task_alloc();
  uint64_t v8 = sub_24A704710(&qword_2697B3AE0);
  v2[29] = v8;
  v2[30] = *(void *)(v8 - 8);
  v2[31] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A725C2C, 0, 0);
}

uint64_t sub_24A725C2C()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[28];
  uint64_t v3 = v0[25];
  uint64_t v4 = v0[24];
  uint64_t v5 = v0[21];
  uint64_t v20 = v0[26];
  uint64_t v21 = v0[22];
  uint64_t v22 = v0[20];
  uint64_t v23 = v0[23];
  uint64_t v6 = type metadata accessor for AccessoryEntityRepresentation();
  sub_24A762B18();
  sub_24A727114(&qword_2697B3AC0);
  sub_24A762AB8();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v20);
  id v7 = objc_msgSend(self, sel_defaultEnvironment);
  unint64_t v8 = sub_24A7270D4();
  uint64_t v9 = MEMORY[0x263F24F88];
  v0[2] = v7;
  v0[5] = v8;
  v0[6] = v9;
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v21, *MEMORY[0x263F24F28], v22);
  sub_24A762AF8();
  uint64_t v10 = sub_24A762AE8();
  uint64_t v12 = v11;
  v0[32] = v10;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v23);
  sub_24A704754((uint64_t)(v0 + 2));
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = sub_24A727114(&qword_2697B3AE8);
  sub_24A7396B0();
  uint64_t v15 = (void *)swift_task_alloc();
  v0[33] = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_24A7190B8;
  uint64_t v16 = v0[31];
  uint64_t v17 = v0[19];
  uint64_t v18 = v0[16];
  return MEMORY[0x270F0C938](v17, v16, v18, ObjectType, v6, v12, v14);
}

uint64_t sub_24A725EBC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  return MEMORY[0x270FA2498](sub_24A725EDC, 0, 0);
}

uint64_t sub_24A725EDC()
{
  id v1 = objc_allocWithZone(MEMORY[0x263F51BB8]);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_24A762DF8();
  uint64_t v3 = (void *)sub_24A762DF8();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v1, sel_initWithTypeIdentifier_instanceIdentifier_, v2, v3);

  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F51BC0]), sel_init);
  id v6 = objc_allocWithZone(MEMORY[0x263F51D50]);
  id v7 = v4;
  id v8 = objc_msgSend(v6, sel_initWithValue_valueType_, v7, v5);
  v0[16] = v8;

  sub_24A704710(&qword_2697B37B0);
  uint64_t inited = swift_initStackObject();
  v0[17] = inited;
  *(_OWORD *)(inited + 16) = xmmword_24A763FD0;
  *(void *)(inited + 32) = 0x797469746E65;
  *(void *)(inited + 40) = 0xE600000000000000;
  *(void *)(inited + 48) = v8;
  xmmword_2697B98F8 = xmmword_24A765610;
  id v10 = v8;
  swift_bridgeObjectRelease();
  v0[12] = &type metadata for ActionExecutionOptions;
  v0[13] = &off_26FE3A6B8;
  uint64_t v11 = swift_allocObject();
  v0[9] = v11;
  *(_OWORD *)(v11 + 16) = xmmword_24A765610;
  *(_WORD *)(v11 + 32) = 513;
  *(void *)(v11 + 40) = 0;
  *(unsigned char *)(v11 + 48) = 1;
  *(_OWORD *)(v11 + 56) = 0u;
  *(_OWORD *)(v11 + 72) = 0u;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_2697B2FF0 + dword_2697B2FF0);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[18] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_24A72615C;
  return v14(0x6E49656C67676F54, 0xEC000000746E6574, inited, 0, 1, (uint64_t)(v0 + 9), 0, 0);
}

uint64_t sub_24A72615C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    uint64_t v3 = sub_24A726300;
  }
  else
  {
    sub_24A704754(v2 + 72);
    uint64_t v3 = sub_24A72629C;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24A72629C()
{
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A726300()
{
  sub_24A704754(v0 + 72);
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A726370(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_24A71651C;
  v5[3] = a1;
  v5[4] = a2;
  return MEMORY[0x270FA2498](sub_24A724F50, 0, 0);
}

void sub_24A726420()
{
  algn_2697B3A28[7] = -18;
}

uint64_t sub_24A726450(uint64_t a1)
{
  uint64_t v2 = sub_24A762A18();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v6 = sub_24A762A78();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

uint64_t sub_24A726558()
{
  if (qword_2697B2EC8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_2697B3A20;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_24A7265C0()
{
  return 0xD000000000000017;
}

uint64_t sub_24A7265DC(uint64_t a1)
{
  uint64_t v3 = sub_24A727114(&qword_2697B3AD0);

  return MEMORY[0x270F0CBC0](a1, v1, v3);
}

uint64_t sub_24A726638()
{
  uint64_t v1 = sub_24A727114(&qword_2697B3AC0);

  return MEMORY[0x270F0C9E8](v0, v1);
}

uint64_t sub_24A726684(uint64_t a1)
{
  uint64_t v3 = sub_24A727114(&qword_2697B3AD0);

  return MEMORY[0x270F0CBA8](a1, v1, v3);
}

uint64_t _s23ConditionalEngineShared39ScheduledQueryHomeAccessoryToggleRunnerV07extracthG05querySSSgSS_tFZ_0()
{
  uint64_t v0 = sub_24A704710(&qword_2697B3AF0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24A704710(&qword_2697B3AF8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24A704710(&qword_2697B3B00);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v20 - v12;
  sub_24A704710(&qword_2697B3B08);
  sub_24A762948();
  sub_24A762968();
  v20[0] = *(void *)(v8 + 8);
  ((void (*)(char *, uint64_t))v20[0])(v11, v7);
  sub_24A762958();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    ((void (*)(char *, uint64_t))v20[0])(v13, v7);
    sub_24A727158((uint64_t)v2);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    if (qword_2697B2E88 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_24A762D68();
    sub_24A70D1FC(v16, (uint64_t)qword_2697B3560);
    uint64_t v17 = sub_24A762D48();
    os_log_type_t v18 = sub_24A7630B8();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_24A6FB000, v17, v18, "Matched toggle accessory", v19, 2u);
      MEMORY[0x24C5CEE90](v19, -1, -1);
    }

    swift_getKeyPath();
    sub_24A762998();
    swift_release();
    uint64_t v14 = MEMORY[0x24C5CDEE0](v20[1], v20[2], v20[3], v20[4]);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    ((void (*)(char *, uint64_t))v20[0])(v13, v7);
  }
  return v14;
}

unint64_t sub_24A726AE8()
{
  unint64_t result = qword_2697B3A38;
  if (!qword_2697B3A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3A38);
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQueryHomeAccessoryToggleRunner()
{
  return &type metadata for ScheduledQueryHomeAccessoryToggleRunner;
}

uint64_t type metadata accessor for AccessoryEntityRepresentation()
{
  uint64_t result = qword_2697B3A70;
  if (!qword_2697B3A70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24A726B98()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24A726BD8()
{
  return type metadata accessor for AccessoryEntityRepresentation();
}

uint64_t sub_24A726BE4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 3u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for SendAccessoryToggleError(uint64_t a1)
{
  return sub_24A726C0C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_24A726C0C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 3u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s23ConditionalEngineShared24SendAccessoryToggleErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_24A726BE4(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SendAccessoryToggleError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_24A726BE4(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24A726C0C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SendAccessoryToggleError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_24A726C0C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SendAccessoryToggleError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SendAccessoryToggleError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24A726D9C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_24A726DB4(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)uint64_t result = a2 - 4;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SendAccessoryToggleError()
{
  return &type metadata for SendAccessoryToggleError;
}

unint64_t sub_24A726DE0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24A726E10();
  unint64_t result = sub_24A726E64();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_24A726E10()
{
  unint64_t result = qword_2697B3A80;
  if (!qword_2697B3A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3A80);
  }
  return result;
}

unint64_t sub_24A726E64()
{
  unint64_t result = qword_2697B3A88;
  if (!qword_2697B3A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3A88);
  }
  return result;
}

uint64_t sub_24A726EB8()
{
  return sub_24A727114(&qword_2697B3A90);
}

uint64_t sub_24A726EEC()
{
  return sub_24A727114(&qword_2697B3A98);
}

uint64_t sub_24A726F20()
{
  return sub_24A727114(&qword_2697B3AA0);
}

uint64_t sub_24A726F54()
{
  return sub_24A727114(&qword_2697B3AA8);
}

uint64_t sub_24A726F88()
{
  return sub_24A727114(&qword_2697B3AB0);
}

uint64_t sub_24A726FBC()
{
  return sub_24A727114(&qword_2697B3AB8);
}

uint64_t sub_24A726FF0()
{
  return sub_24A727114(&qword_2697B3AC0);
}

uint64_t sub_24A727024()
{
  return sub_24A727114(&qword_2697B3AC8);
}

uint64_t sub_24A727058()
{
  return sub_24A727114(&qword_2697B3AD0);
}

uint64_t sub_24A72708C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 88, 7);
}

unint64_t sub_24A7270D4()
{
  unint64_t result = qword_2697B37D0;
  if (!qword_2697B37D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2697B37D0);
  }
  return result;
}

uint64_t sub_24A727114(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AccessoryEntityRepresentation();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A727158(uint64_t a1)
{
  uint64_t v2 = sub_24A704710(&qword_2697B3AF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of RunnableScheduledQueryIntent.scheduledQueryIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ScheduledQueryInterface.scheduledQueries()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_24A727CE4;
  return v7(a1, a2);
}

uint64_t dispatch thunk of ScheduledQueryInterface.upcomingScheduledQueries()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_24A70FAE8;
  return v7(a1, a2);
}

uint64_t dispatch thunk of ScheduledQueryInterface.scheduledQuery(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 24) + **(int **)(a5 + 24));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_24A7095E4;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of ScheduledQueryInterface.delete(scheduledQueryWithIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 32) + **(int **)(a4 + 32));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_24A7095E4;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ScheduledQueryInterface.deleteAllScheduledQueries()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 40) + **(int **)(a2 + 40));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_24A7095E4;
  return v7(a1, a2);
}

uint64_t dispatch thunk of ScheduledQueryInterface.run(scheduledQueryWithIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 48) + **(int **)(a4 + 48));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_24A71B8F8;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ScheduledQueryInterface.createDateScheduledQuery(date:query:runIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 56)
                                                                                              + **(int **)(a7 + 56));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_24A7093EC;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of ScheduledQueryInterface.createDailyScheduledQuery(components:query:runIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 64)
                                                                                              + **(int **)(a7 + 64));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_24A7095E4;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of ScheduledQueryInterface.createLocationEnteredScheduledQuery(location:radiusInMeters:query:isOneTime:runIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9)
{
  uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(void *)(a8 + 72) + **(int **)(a8 + 72));
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v9 + 16) = v19;
  void *v19 = v9;
  v19[1] = sub_24A7095E4;
  v20.n128_f64[0] = a9;
  return v22(a1, a2, a3, a4, a5, a6, a7, a8, v20);
}

uint64_t dispatch thunk of ScheduledQueryInterface.createLocationExitedScheduledQuery(location:radiusInMeters:query:isOneTime:runIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9)
{
  uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(void *)(a8 + 80) + **(int **)(a8 + 80));
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v9 + 16) = v19;
  void *v19 = v9;
  v19[1] = sub_24A7095E4;
  v20.n128_f64[0] = a9;
  return v22(a1, a2, a3, a4, a5, a6, a7, a8, v20);
}

uint64_t ScheduledQueryLocation.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ScheduledQueryLocation.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ScheduledQueryLocation.id.modify())()
{
  return nullsub_1;
}

uint64_t ScheduledQueryLocation.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ScheduledQueryLocation.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ScheduledQueryLocation.name.modify())()
{
  return nullsub_1;
}

double ScheduledQueryLocation.latitude.getter()
{
  return *(double *)(v0 + 32);
}

void ScheduledQueryLocation.latitude.setter(double a1)
{
  *(double *)(v1 + 32) = a1;
}

uint64_t (*ScheduledQueryLocation.latitude.modify())()
{
  return nullsub_1;
}

double ScheduledQueryLocation.longitude.getter()
{
  return *(double *)(v0 + 40);
}

void ScheduledQueryLocation.longitude.setter(double a1)
{
  *(double *)(v1 + 40) = a1;
}

uint64_t (*ScheduledQueryLocation.longitude.modify())()
{
  return nullsub_1;
}

void __swiftcall ScheduledQueryLocation.init(id:name:latitude:longitude:)(ConditionalEngineShared::ScheduledQueryLocation *__return_ptr retstr, Swift::String id, Swift::String name, Swift::Double latitude, Swift::Double longitude)
{
  object = name._object;
  uint64_t countAndFlagsBits = name._countAndFlagsBits;
  uint64_t v10 = sub_24A762E28();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  retstr->id._uint64_t countAndFlagsBits = v10;
  retstr->id._object = v12;
  retstr->name._uint64_t countAndFlagsBits = countAndFlagsBits;
  retstr->name._object = object;
  retstr->latitude = latitude;
  retstr->longitude = longitude;
}

uint64_t ScheduledQueryLocation.description.getter()
{
  return 0;
}

uint64_t static ScheduledQueryLocation.< infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 0;
  }
  else {
    return sub_24A7635B8();
  }
}

uint64_t sub_24A728070(char a1)
{
  return qword_24A765C30[a1];
}

uint64_t sub_24A728090()
{
  return sub_24A728070(*v0);
}

uint64_t sub_24A728098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24A728B00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24A7280C0(uint64_t a1)
{
  unint64_t v2 = sub_24A7287A4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A7280FC(uint64_t a1)
{
  unint64_t v2 = sub_24A7287A4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ScheduledQueryLocation.encode(to:)(void *a1)
{
  uint64_t v3 = sub_24A704710(&qword_2697B3B60);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned __int8 v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  v10[2] = v7;
  sub_24A705BC4(a1, a1[3]);
  sub_24A7287A4();
  sub_24A7636D8();
  char v14 = 0;
  uint64_t v8 = v10[3];
  sub_24A763548();
  if (!v8)
  {
    char v13 = 1;
    sub_24A763548();
    char v12 = 2;
    sub_24A763568();
    char v11 = 3;
    sub_24A763568();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ScheduledQueryLocation.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_24A704710(&qword_2697B3B70);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A705BC4(a1, a1[3]);
  sub_24A7287A4();
  sub_24A7636C8();
  if (v2) {
    return sub_24A704754((uint64_t)a1);
  }
  char v28 = 0;
  uint64_t v9 = sub_24A7634C8();
  uint64_t v11 = v10;
  uint64_t v24 = v9;
  char v27 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_24A7634C8();
  uint64_t v14 = v13;
  uint64_t v22 = v12;
  char v26 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = v14;
  sub_24A7634E8();
  uint64_t v16 = v15;
  char v25 = 3;
  sub_24A7634E8();
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v20 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v20;
  a2[4] = v16;
  a2[5] = v19;
  sub_24A704754((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A7285BC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ScheduledQueryLocation.init(from:)(a1, a2);
}

uint64_t sub_24A7285D4(void *a1)
{
  return ScheduledQueryLocation.encode(to:)(a1);
}

uint64_t sub_24A7285F0(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 0;
  }
  else {
    return sub_24A7635B8();
  }
}

uint64_t sub_24A728620(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (v4 == v2 && v5 == v3) {
    char v7 = 1;
  }
  else {
    char v7 = sub_24A7635B8() ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_24A728660(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_24A7635B8() ^ 1;
  }
  return v3 & 1;
}

uint64_t sub_24A7286AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (v4 == v2 && v5 == v3) {
    return 0;
  }
  else {
    return sub_24A7635B8();
  }
}

BOOL _s23ConditionalEngineShared22ScheduledQueryLocationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  double v5 = *(double *)(a1 + 32);
  double v4 = *(double *)(a1 + 40);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  double v9 = *(double *)(a2 + 32);
  double v8 = *(double *)(a2 + 40);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v10 = sub_24A7635B8(), result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v3 == v7)
    {
      if (v5 != v9) {
        return 0;
      }
      return v4 == v8;
    }
    char v12 = sub_24A7635B8();
    BOOL result = 0;
    if ((v12 & 1) != 0 && v5 == v9) {
      return v4 == v8;
    }
  }
  return result;
}

unint64_t sub_24A7287A4()
{
  unint64_t result = qword_2697B3B68;
  if (!qword_2697B3B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3B68);
  }
  return result;
}

unint64_t sub_24A7287FC()
{
  unint64_t result = qword_2697B3B78;
  if (!qword_2697B3B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3B78);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ScheduledQueryLocation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduledQueryLocation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQueryLocation()
{
  return &type metadata for ScheduledQueryLocation;
}

unsigned char *storeEnumTagSinglePayload for ScheduledQueryLocation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A7289C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQueryLocation.CodingKeys()
{
  return &type metadata for ScheduledQueryLocation.CodingKeys;
}

unint64_t sub_24A7289FC()
{
  unint64_t result = qword_2697B3B80;
  if (!qword_2697B3B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3B80);
  }
  return result;
}

unint64_t sub_24A728A54()
{
  unint64_t result = qword_2697B3B88;
  if (!qword_2697B3B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3B88);
  }
  return result;
}

unint64_t sub_24A728AAC()
{
  unint64_t result = qword_2697B3B90;
  if (!qword_2697B3B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3B90);
  }
  return result;
}

uint64_t sub_24A728B00(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v3 || (sub_24A7635B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_24A7635B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000 || (sub_24A7635B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24A7635B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24A728C84()
{
  type metadata accessor for ScheduledQueryLocationManager();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  qword_2697B3B98 = v0;
  return result;
}

uint64_t static ScheduledQueryLocationManager.shared.getter()
{
  if (qword_2697B2ED0 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_24A728D1C()
{
  unint64_t result = sub_24A72B410();
  if (!v0)
  {
    unint64_t v2 = sub_24A72A780(result);
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  return result;
}

void sub_24A728D68(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  if (qword_2697B2E78 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_24A762D68();
  sub_24A70D1FC(v6, (uint64_t)qword_2697B3530);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_24A762D48();
  os_log_type_t v8 = sub_24A7630B8();
  uint64_t v34 = a3;
  if (os_log_type_enabled(v7, v8))
  {
    double v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v36 = v10;
    *(_DWORD *)double v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_24A716784(a1, a2, &v36);
    sub_24A763198();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24A6FB000, v7, v8, "[SQLocationManager] location search for: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v10, -1, -1);
    MEMORY[0x24C5CEE90](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  unint64_t v11 = sub_24A72B410();
  if (!v3)
  {
    unint64_t v12 = v11;
    uint64_t v13 = sub_24A762E28();
    if (*(void *)(v12 + 16) && (unint64_t v15 = sub_24A729D3C(v13, v14), (v16 & 1) != 0))
    {
      uint64_t v17 = (uint64_t *)(*(void *)(v12 + 56) + 48 * v15);
      uint64_t v19 = *v17;
      uint64_t v18 = v17[1];
      uint64_t v21 = v17[2];
      uint64_t v20 = v17[3];
      uint64_t v32 = v17[5];
      uint64_t v33 = v17[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      uint64_t v22 = sub_24A762D48();
      os_log_type_t v23 = sub_24A7630B8();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        uint64_t v31 = v18;
        uint64_t v25 = swift_slowAlloc();
        uint64_t v36 = v25;
        *(_DWORD *)uint64_t v24 = 136315138;
        swift_bridgeObjectRetain();
        sub_24A716784(a1, a2, &v36);
        sub_24A763198();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24A6FB000, v22, v23, "[SQLocationManager] location found for: %s", v24, 0xCu);
        swift_arrayDestroy();
        uint64_t v26 = v25;
        uint64_t v18 = v31;
        MEMORY[0x24C5CEE90](v26, -1, -1);
        MEMORY[0x24C5CEE90](v24, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      void *v34 = v19;
      v34[1] = v18;
      v34[2] = v21;
      v34[3] = v20;
      v34[4] = v33;
      v34[5] = v32;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      char v27 = sub_24A762D48();
      os_log_type_t v28 = sub_24A7630B8();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        uint64_t v30 = swift_slowAlloc();
        uint64_t v36 = v30;
        *(_DWORD *)uint64_t v29 = 136315138;
        swift_bridgeObjectRetain();
        sub_24A716784(a1, a2, &v36);
        sub_24A763198();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24A6FB000, v27, v28, "[SQLocationManager] location missing for: %s", v29, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5CEE90](v30, -1, -1);
        MEMORY[0x24C5CEE90](v29, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      *((_OWORD *)v34 + 1) = 0u;
      *((_OWORD *)v34 + 2) = 0u;
      *(_OWORD *)uint64_t v34 = 0u;
    }
  }
}

void sub_24A729234(long long *a1)
{
  long long v2 = a1[1];
  v21[0] = *a1;
  v21[1] = v2;
  _OWORD v21[2] = a1[2];
  if (qword_2697B2E78 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_24A762D68();
  sub_24A70D1FC(v3, (uint64_t)qword_2697B3530);
  sub_24A72B6DC((uint64_t)v21);
  unsigned int v4 = sub_24A762D48();
  os_log_type_t v5 = sub_24A7630B8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v22 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    long long v8 = v21[0];
    swift_bridgeObjectRetain();
    sub_24A716784(v8, *((unint64_t *)&v8 + 1), &v22);
    sub_24A763198();
    swift_bridgeObjectRelease();
    sub_24A72B714((uint64_t)v21);
    _os_log_impl(&dword_24A6FB000, v4, v5, "[SQLocationManager] location updating for: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v7, -1, -1);
    MEMORY[0x24C5CEE90](v6, -1, -1);
  }
  else
  {
    sub_24A72B714((uint64_t)v21);
  }

  unint64_t v9 = sub_24A72B410();
  if (!v1)
  {
    uint64_t v10 = v9;
    long long v11 = v21[0];
    sub_24A72B6DC((uint64_t)v21);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = v10;
    sub_24A72A3FC(v21, v11, *((uint64_t *)&v11 + 1), isUniquelyReferenced_nonNull_native);
    uint64_t v13 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_24A762D48();
    os_log_type_t v15 = sub_24A7630B8();
    if (os_log_type_enabled(v14, v15))
    {
      char v16 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)char v16 = 134217984;
      uint64_t v22 = *(void *)(v13 + 16);
      sub_24A763198();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24A6FB000, v14, v15, "[QueryStore] storeLocationsToCache for %ld queries", v16, 0xCu);
      MEMORY[0x24C5CEE90](v16, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    sub_24A760BEC();
    swift_bridgeObjectRelease();
    sub_24A72B6DC((uint64_t)v21);
    uint64_t v17 = sub_24A762D48();
    os_log_type_t v18 = sub_24A7630B8();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v22 = v20;
      *(_DWORD *)uint64_t v19 = 136315138;
      swift_bridgeObjectRetain();
      sub_24A716784(v11, *((unint64_t *)&v11 + 1), &v22);
      sub_24A763198();
      swift_bridgeObjectRelease();
      sub_24A72B714((uint64_t)v21);
      _os_log_impl(&dword_24A6FB000, v17, v18, "[SQLocationManager] location updated for: %s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5CEE90](v20, -1, -1);
      MEMORY[0x24C5CEE90](v19, -1, -1);
    }
    else
    {
      sub_24A72B714((uint64_t)v21);
    }
  }
}

void sub_24A729644(uint64_t a1, unint64_t a2)
{
  if (qword_2697B2E78 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_24A762D68();
  sub_24A70D1FC(v4, (uint64_t)qword_2697B3530);
  swift_bridgeObjectRetain_n();
  os_log_type_t v5 = sub_24A762D48();
  os_log_type_t v6 = sub_24A7630B8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v21[0] = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_24A716784(a1, a2, v21);
    sub_24A763198();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24A6FB000, v5, v6, "[SQLocationManager] location deleting for: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v8, -1, -1);
    MEMORY[0x24C5CEE90](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  unint64_t v9 = sub_24A72B410();
  if (!v2)
  {
    uint64_t v22 = v9;
    uint64_t v10 = sub_24A762E28();
    sub_24A729F64(v10, v11, (uint64_t)v21);
    swift_bridgeObjectRelease();
    sub_24A72B74C(v21[0], v21[1]);
    uint64_t v12 = v22;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_24A762D48();
    os_log_type_t v14 = sub_24A7630B8();
    if (os_log_type_enabled(v13, v14))
    {
      os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v15 = 134217984;
      v21[0] = *(void *)(v12 + 16);
      sub_24A763198();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24A6FB000, v13, v14, "[QueryStore] storeLocationsToCache for %ld queries", v15, 0xCu);
      MEMORY[0x24C5CEE90](v15, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    sub_24A760BEC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    char v16 = sub_24A762D48();
    os_log_type_t v17 = sub_24A7630B8();
    if (os_log_type_enabled(v16, v17))
    {
      os_log_type_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      v21[0] = v19;
      *(_DWORD *)os_log_type_t v18 = 136315138;
      swift_bridgeObjectRetain();
      sub_24A716784(a1, a2, v21);
      sub_24A763198();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24A6FB000, v16, v17, "[SQLocationManager] location deleted for: %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5CEE90](v19, -1, -1);
      MEMORY[0x24C5CEE90](v18, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_24A729A44()
{
  sub_24A70AD44(MEMORY[0x263F8EE78]);
  if (qword_2697B2E78 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24A762D68();
  sub_24A70D1FC(v0, (uint64_t)qword_2697B3530);
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_24A762D48();
  os_log_type_t v2 = sub_24A7630B8();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 134217984;
    sub_24A763198();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24A6FB000, v1, v2, "[QueryStore] storeLocationsToCache for %ld queries", v3, 0xCu);
    MEMORY[0x24C5CEE90](v3, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  sub_24A760BEC();
  return swift_bridgeObjectRelease();
}

uint64_t ScheduledQueryLocationManager.deinit()
{
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ScheduledQueryLocationManager.__deallocating_deinit()
{
  swift_defaultActor_destroy();

  return MEMORY[0x270FA2418](v0);
}

uint64_t ScheduledQueryLocationManager.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_24A729C04()
{
  if (qword_2697B2ED0 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_24A729C60(uint64_t a1, uint64_t a2)
{
  uint64_t LocationManager = type metadata accessor for ScheduledQueryLocationManager();

  return MEMORY[0x270FA2150](LocationManager, a2);
}

unint64_t sub_24A729C98(uint64_t a1, uint64_t a2)
{
  sub_24A763688();
  sub_24A7636A8();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_24A762E58();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = sub_24A7636B8();

  return sub_24A729DB4(a1, a2, v4);
}

unint64_t sub_24A729D3C(uint64_t a1, uint64_t a2)
{
  sub_24A763688();
  sub_24A762E58();
  uint64_t v4 = sub_24A7636B8();

  return sub_24A729E80(a1, a2, v4);
}

unint64_t sub_24A729DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = ~v5;
    uint64_t v10 = *(void *)(v3 + 48);
    do
    {
      uint64_t v11 = (void *)(v10 + 16 * v6);
      uint64_t v12 = v11[1];
      if (v12)
      {
        if (a2)
        {
          BOOL v13 = *v11 == a1 && v12 == a2;
          if (v13 || (sub_24A7635B8() & 1) != 0) {
            return v6;
          }
        }
      }
      else if (!a2)
      {
        return v6;
      }
      unint64_t v6 = (v6 + 1) & v9;
    }
    while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

unint64_t sub_24A729E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_24A7635B8() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        BOOL v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_24A7635B8() & 1) == 0);
    }
  }
  return v6;
}

double sub_24A729F64@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_24A729D3C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v16 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24A703B5C();
      uint64_t v11 = v16;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56) + 48 * v8;
    uint64_t v13 = *(void *)(v12 + 16);
    uint64_t v14 = *(void *)(v12 + 24);
    *(_OWORD *)a3 = *(_OWORD *)v12;
    *(void *)(a3 + 16) = v13;
    *(void *)(a3 + 24) = v14;
    *(_OWORD *)(a3 + 32) = *(_OWORD *)(v12 + 32);
    sub_24A72A080(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  return result;
}

unint64_t sub_24A72A080(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_24A763218();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_24A763688();
        swift_bridgeObjectRetain();
        sub_24A762E58();
        uint64_t v11 = sub_24A7636B8();
        double result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          uint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          os_log_type_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            _OWORD *v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          os_log_type_t v17 = (long long *)(v16 + 48 * v3);
          os_log_type_t v18 = (long long *)(v16 + 48 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= v18 + 3))
          {
            long long v9 = *v18;
            long long v10 = v18[2];
            v17[1] = v18[1];
            v17[2] = v10;
            *os_log_type_t v17 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  uint64_t *v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_24A72A26C(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_24A729D3C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_24A70396C();
LABEL_7:
    os_log_type_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 48 * v12;
      return sub_24A72BA58((uint64_t)a1, v19);
    }
    goto LABEL_13;
  }
  sub_24A704070(v15, a4 & 1);
  unint64_t v21 = sub_24A729D3C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = sub_24A7635F8();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  os_log_type_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  BOOL v23 = (uint64_t *)(v18[6] + 16 * v12);
  *BOOL v23 = a2;
  v23[1] = a3;
  uint64_t v24 = (_OWORD *)(v18[7] + 48 * v12);
  long long v25 = *a1;
  long long v26 = a1[2];
  v24[1] = a1[1];
  v24[2] = v26;
  *uint64_t v24 = v25;
  uint64_t v27 = v18[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v18[2] = v29;

  return swift_bridgeObjectRetain();
}

uint64_t sub_24A72A3FC(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_24A729D3C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_24A703B5C();
LABEL_7:
    os_log_type_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 48 * v12;
      return sub_24A72B9F4((uint64_t)a1, v19);
    }
    goto LABEL_13;
  }
  sub_24A7043B8(v15, a4 & 1);
  unint64_t v21 = sub_24A729D3C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = sub_24A7635F8();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  os_log_type_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  BOOL v23 = (uint64_t *)(v18[6] + 16 * v12);
  *BOOL v23 = a2;
  v23[1] = a3;
  uint64_t v24 = (_OWORD *)(v18[7] + 48 * v12);
  long long v25 = *a1;
  long long v26 = a1[2];
  v24[1] = a1[1];
  v24[2] = v26;
  *uint64_t v24 = v25;
  uint64_t v27 = v18[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v18[2] = v29;

  return swift_bridgeObjectRetain();
}

void *sub_24A72A58C(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  while (1)
  {
    if (v2 <= 0)
    {
      int64_t v3 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      sub_24A704710(&qword_2697B3700);
      int64_t v3 = (void *)swift_allocObject();
      int64_t v4 = j__malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_24A72AA9C((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_24A763428();
    swift_bridgeObjectRelease();
    if (!v2) {
      return (void *)MEMORY[0x263F8EE78];
    }
  }
  return v3;
}

uint64_t sub_24A72A684(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = sub_24A763288();
    if (v2) {
      goto LABEL_3;
    }
    return MEMORY[0x263F8EE78];
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
LABEL_3:
  if (v2 <= 0)
  {
    int64_t v3 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    sub_24A704710(&qword_2697B3700);
    int64_t v3 = (void *)swift_allocObject();
    int64_t v4 = j__malloc_size(v3);
    uint64_t v5 = v4 - 32;
    if (v4 < 32) {
      uint64_t v5 = v4 - 25;
    }
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_24A72AEDC(&v8, v3 + 4, v2, a1);
  uint64_t result = sub_24A72BA50();
  if (v6 == (void *)v2) {
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

void *sub_24A72A780(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_24A704710(&qword_2697B3BC8);
  int64_t v3 = (void *)swift_allocObject();
  size_t v4 = j__malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 48);
  uint64_t v5 = sub_24A72B1E8(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_24A72BA50();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t (*sub_24A72A878(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_24A72A994(v6, a2, a3);
  return sub_24A72A8E0;
}

uint64_t (*sub_24A72A8E4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_24A72AA1C(v6, a2, a3);
  return sub_24A72A8E0;
}

void sub_24A72A94C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_24A72A994(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  int64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x24C5CE400](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)int64_t v3 = v4;
    return sub_24A72AA14;
  }
  __break(1u);
  return result;
}

void sub_24A72AA14(id *a1)
{
}

uint64_t (*sub_24A72AA1C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  int64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x24C5CE400](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)int64_t v3 = v4;
    return sub_24A72BAB4;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A72AA9C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_24A763428();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_24A763428();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_24A72B9A4(&qword_2697B3BA8, &qword_2697B2FC0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_24A704710(&qword_2697B2FC0);
          unint64_t v12 = sub_24A72A8E4(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_24A705D7C(0, &qword_2697B3040);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_24A763468();
  __break(1u);
  return result;
}

uint64_t sub_24A72ACBC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_24A763428();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_24A763428();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_24A72B9A4(&qword_2697B3BC0, &qword_2697B3BB8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_24A704710(&qword_2697B3BB8);
          unint64_t v12 = sub_24A72A878(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_24A705D7C(0, &qword_2697B2FD8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_24A763468();
  __break(1u);
  return result;
}

void *sub_24A72AEDC(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  unint64_t v6 = a2;
  uint64_t v7 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_24A763248();
    sub_24A705D7C(0, &qword_2697B3038);
    sub_24A72B93C();
    uint64_t result = (void *)sub_24A763048();
    uint64_t v4 = v27;
    uint64_t v8 = v28;
    uint64_t v9 = v29;
    int64_t v10 = v30;
    unint64_t v11 = v31;
    uint64_t v24 = v7;
    if (v6) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v12 = 0;
LABEL_46:
    *uint64_t v24 = v4;
    v24[1] = v8;
    v24[2] = v9;
    v24[3] = v10;
    v24[4] = v11;
    return (void *)v12;
  }
  int64_t v10 = 0;
  uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v8 = a4 + 56;
  uint64_t v9 = ~v20;
  uint64_t v21 = -v20;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v11 = v22 & *(void *)(a4 + 56);
  uint64_t v24 = result;
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v12 = 0;
  int64_t v25 = (unint64_t)(v9 + 64) >> 6;
  uint64_t v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_24A7632B8()) {
        goto LABEL_45;
      }
      sub_24A705D7C(0, &qword_2697B3038);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v15 = v26;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v26) {
        goto LABEL_45;
      }
      goto LABEL_8;
    }
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    int64_t v16 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v16 >= v25)
    {
      unint64_t v11 = 0;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    if (v17) {
      goto LABEL_23;
    }
    int64_t v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      unint64_t v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25) {
        goto LABEL_42;
      }
      unint64_t v17 = *(void *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        int64_t v16 = v10 + 3;
        goto LABEL_23;
      }
      int64_t v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        unint64_t v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      unint64_t v17 = *(void *)(v8 + 8 * v18);
      if (!v17)
      {
        int64_t v16 = v10 + 5;
        if (v10 + 5 >= v25)
        {
LABEL_42:
          unint64_t v11 = 0;
          int64_t v10 = v18;
          goto LABEL_45;
        }
        unint64_t v17 = *(void *)(v8 + 8 * v16);
        if (!v17)
        {
          int64_t v19 = v10 + 6;
          while (v25 != v19)
          {
            unint64_t v17 = *(void *)(v8 + 8 * v19++);
            if (v17)
            {
              int64_t v16 = v19 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v11 = 0;
          int64_t v10 = v25 - 1;
          goto LABEL_45;
        }
        goto LABEL_23;
      }
    }
    int64_t v16 = v18;
LABEL_23:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v10 = v16;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t v15 = result;
    if (!result) {
      goto LABEL_45;
    }
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      uint64_t v12 = a3;
LABEL_45:
      uint64_t v9 = v23;
      goto LABEL_46;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

void *sub_24A72B1E8(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  int64_t v25 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    uint64_t v19 = *(void *)(a4 + 56) + 48 * v15;
    uint64_t v20 = *(void *)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
    uint64_t v22 = *(void *)(v19 + 24);
    long long v23 = *(_OWORD *)(v19 + 32);
    *(void *)uint64_t v10 = *(void *)v19;
    *(void *)(v10 + 8) = v20;
    *(void *)(v10 + 16) = v21;
    *(void *)(v10 + 24) = v22;
    *(_OWORD *)(v10 + 32) = v23;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 48;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        unint64_t v8 = 0;
        int64_t v11 = v16;
      }
      else
      {
        unint64_t v17 = *(void *)(v5 + 8 * v11);
        if (v17) {
          goto LABEL_14;
        }
        int64_t v18 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          int64_t v16 = v18;
          goto LABEL_18;
        }
        int64_t v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          unint64_t v17 = *(void *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            int64_t v16 = v11;
            goto LABEL_18;
          }
          int64_t v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v17 = *(void *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              int64_t v16 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_42;
              }
              if (v16 >= v13)
              {
                unint64_t v8 = 0;
                int64_t v11 = v13 - 1;
                goto LABEL_37;
              }
              unint64_t v17 = *(void *)(v5 + 8 * v16);
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v16 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v24;
      uint64_t result = v25;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

unint64_t sub_24A72B410()
{
  uint64_t v1 = sub_24A760A60();
  if (!v0) {
    return v1;
  }
  if (qword_2697B2E78 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24A762D68();
  sub_24A70D1FC(v2, (uint64_t)qword_2697B3530);
  id v3 = v0;
  id v4 = v0;
  uint64_t v5 = sub_24A762D48();
  os_log_type_t v6 = sub_24A763098();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v17 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_getErrorValue();
    uint64_t v9 = sub_24A763628();
    sub_24A716784(v9, v10, &v17);
    sub_24A763198();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A6FB000, v5, v6, "[QueryStore] readLocationsFromCache resetting locations. Error = %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v8, -1, -1);
    MEMORY[0x24C5CEE90](v7, -1, -1);
  }
  else
  {
  }
  unint64_t v12 = sub_24A70AD44(MEMORY[0x263F8EE78]);
  int64_t v13 = sub_24A762D48();
  os_log_type_t v14 = sub_24A7630B8();
  if (os_log_type_enabled(v13, v14))
  {
    unint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v15 = 134217984;
    uint64_t v17 = *(void *)(v12 + 16);
    sub_24A763198();
    _os_log_impl(&dword_24A6FB000, v13, v14, "[QueryStore] storeLocationsToCache for %ld queries", v15, 0xCu);
    MEMORY[0x24C5CEE90](v15, -1, -1);
  }

  sub_24A760BEC();
  swift_bridgeObjectRelease();
  unint64_t v11 = sub_24A70AD44(MEMORY[0x263F8EE78]);

  return v11;
}

uint64_t sub_24A72B6DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_24A72B714(uint64_t a1)
{
  return a1;
}

uint64_t sub_24A72B74C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_24A72B794()
{
  unint64_t result = qword_2697B3BA0;
  if (!qword_2697B3BA0)
  {
    type metadata accessor for ScheduledQueryLocationManager();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3BA0);
  }
  return result;
}

uint64_t type metadata accessor for ScheduledQueryLocationManager()
{
  return self;
}

uint64_t method lookup function for ScheduledQueryLocationManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ScheduledQueryLocationManager);
}

uint64_t dispatch thunk of ScheduledQueryLocationManager.allLocations()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of ScheduledQueryLocationManager.location(identifier:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of ScheduledQueryLocationManager.update(location:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ScheduledQueryLocationManager.delete(identifier:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of ScheduledQueryLocationManager.deleteAll()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

unint64_t sub_24A72B93C()
{
  unint64_t result = qword_2697B3BB0;
  if (!qword_2697B3BB0)
  {
    sub_24A705D7C(255, &qword_2697B3038);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3BB0);
  }
  return result;
}

uint64_t sub_24A72B9A4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24A704B6C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A72B9F4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24A72BA50()
{
  return swift_release();
}

uint64_t sub_24A72BA58(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24A72BABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24A735048(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24A72BAE8(uint64_t a1)
{
  unint64_t v2 = sub_24A736C28();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A72BB24(uint64_t a1)
{
  unint64_t v2 = sub_24A736C28();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24A72BB60@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_24A704710(&qword_2697B3D20);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A705BC4(a1, a1[3]);
  sub_24A736C28();
  sub_24A7636C8();
  if (v2) {
    return sub_24A704754((uint64_t)a1);
  }
  uint64_t v9 = sub_24A7634C8();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = sub_24A704754((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_24A72BCD8(void *a1)
{
  uint64_t v2 = sub_24A704710(&qword_2697B3D30);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A705BC4(a1, a1[3]);
  sub_24A736C28();
  sub_24A7636D8();
  sub_24A763548();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_24A72BE10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24A7095E4;
  return MEMORY[0x270F847F0](a1, a2, a3);
}

uint64_t sub_24A72BEC8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_24A7095E4;
  return MEMORY[0x270F847F8](a1);
}

uint64_t sub_24A72BF64()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_24A737048;
  return MEMORY[0x270F84808]();
}

unint64_t sub_24A72BFF8()
{
  type metadata accessor for ScheduledQueryManager();
  uint64_t v0 = (void *)swift_allocObject();
  id v1 = objc_msgSend(self, sel_standardClient);
  unint64_t result = sub_24A736D2C();
  v0[5] = result;
  v0[6] = &off_26FE3B218;
  v0[2] = v1;
  qword_2697B3BD0 = (uint64_t)v0;
  return result;
}

uint64_t static ScheduledQueryManager.shared.getter()
{
  if (qword_2697B2ED8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t static ScheduledQueryManager.shared.setter(uint64_t a1)
{
  if (qword_2697B2ED8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_2697B3BD0 = a1;
  return swift_release();
}

uint64_t (*static ScheduledQueryManager.shared.modify())()
{
  if (qword_2697B2ED8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t ScheduledQueryManager.ScheduledQueryManagerError.errorDescription.getter()
{
  if (!*(unsigned char *)(v0 + 16))
  {
    sub_24A763338();
    sub_24A762E68();
    sub_24A762E68();
    return 0;
  }
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    sub_24A763338();
    sub_24A762E68();
    sub_24A763718();
    sub_24A762E68();
    swift_bridgeObjectRelease();
    return 0;
  }
  if (*(_OWORD *)v0 == 0) {
    return 0xD000000000000029;
  }
  else {
    return 0xD00000000000002FLL;
  }
}

uint64_t ScheduledQueryManager.scheduledQueries()()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_2697B3BE0 + dword_2697B3BE0);
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_24A737048;
  return v3();
}

uint64_t ScheduledQueryManager.upcomingScheduledQueries()()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_2697B3BF0 + dword_2697B3BF0);
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_24A72C468;
  return v3();
}

uint64_t sub_24A72C468(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t ScheduledQueryManager.scheduledQuery(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for ScheduledQuery();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  uint64_t v7 = (uint64_t (__cdecl *)())((char *)&dword_2697B3BE0 + dword_2697B3BE0);
  uint64_t v5 = (void *)swift_task_alloc();
  v3[8] = v5;
  void *v5 = v3;
  v5[1] = sub_24A72C66C;
  return v7();
}

uint64_t sub_24A72C66C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(*v2 + 72) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_24A72C7BC, 0, 0);
  }
}

uint64_t sub_24A72C7BC()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[6];
    uint64_t v4 = v0[7];
    uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v6 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v7 = (void *)v0[7];
      uint64_t v9 = v0[3];
      uint64_t v8 = v0[4];
      sub_24A736C7C(v5, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
      BOOL v10 = *v7 == v9 && *(void *)(v4 + 8) == v8;
      if (v10 || (sub_24A7635B8() & 1) != 0) {
        break;
      }
      sub_24A711AF8(v0[7], (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
      v5 += v6;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    uint64_t v12 = v0[7];
    uint64_t v13 = v0[2];
    swift_bridgeObjectRelease();
    sub_24A72365C(v12, v13);
    uint64_t v11 = 0;
  }
  else
  {
LABEL_10:
    uint64_t v11 = 1;
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[6] + 56))(v0[2], v11, 1, v0[5]);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  os_log_type_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t ScheduledQueryManager.delete(scheduledQueryWithIdentifier:)(uint64_t a1, uint64_t a2)
{
  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  sub_24A704710(&qword_2697B3440);
  v3[15] = swift_task_alloc();
  sub_24A704710(&qword_2697B38E0);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for ScheduledQuery();
  v3[18] = v4;
  v3[19] = *(void *)(v4 - 8);
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  uint64_t v7 = (uint64_t (__cdecl *)())((char *)&dword_2697B3BE0 + dword_2697B3BE0);
  uint64_t v5 = (void *)swift_task_alloc();
  v3[22] = v5;
  void *v5 = v3;
  v5[1] = sub_24A72CAB4;
  return v7();
}

uint64_t sub_24A72CAB4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 184) = a1;
  *(void *)(v3 + 192) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_24A72CF24;
  }
  else {
    uint64_t v4 = sub_24A72CBC8;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_24A72CBC8()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[19];
    uint64_t v4 = v0[20];
    uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v6 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v7 = (void *)v0[20];
      uint64_t v9 = v0[12];
      uint64_t v8 = v0[13];
      sub_24A736C7C(v5, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
      BOOL v10 = *v7 == v9 && *(void *)(v4 + 8) == v8;
      if (v10 || (sub_24A7635B8() & 1) != 0) {
        break;
      }
      sub_24A711AF8(v0[20], (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
      v5 += v6;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    uint64_t v12 = v0[20];
    uint64_t v13 = v0[16];
    swift_bridgeObjectRelease();
    sub_24A72365C(v12, v13);
    uint64_t v11 = 0;
  }
  else
  {
LABEL_10:
    uint64_t v11 = 1;
  }
  uint64_t v14 = v0[18];
  uint64_t v15 = v0[19];
  uint64_t v17 = v0[16];
  uint64_t v16 = v0[17];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v17, v11, 1, v14);
  swift_bridgeObjectRelease();
  sub_24A736D6C(v17, v16, &qword_2697B38E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v16, 1, v14) == 1)
  {
    uint64_t v19 = v0[12];
    uint64_t v18 = v0[13];
    sub_24A70FD54(v0[17], &qword_2697B38E0);
    sub_24A736050();
    swift_allocError();
    *(void *)uint64_t v20 = v19;
    *(void *)(v20 + 8) = v18;
    *(unsigned char *)(v20 + 16) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
  else
  {
    uint64_t v23 = v0[21];
    uint64_t v24 = v0[14];
    sub_24A72365C(v0[17], v23);
    uint64_t v26 = *(void *)(v23 + 32);
    uint64_t v25 = *(void *)(v23 + 40);
    sub_24A7360A4(v24 + 16, (uint64_t)(v0 + 2));
    uint64_t v27 = v0[5];
    uint64_t v28 = v0[6];
    sub_24A705BC4(v0 + 2, v27);
    v0[10] = &type metadata for ScheduledTriggerIdentifier;
    v0[11] = sub_24A736108();
    v0[7] = v26;
    v0[8] = v25;
    int64_t v30 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v28 + 16) + **(int **)(v28 + 16));
    swift_bridgeObjectRetain();
    uint64_t v29 = (void *)swift_task_alloc();
    v0[25] = v29;
    void *v29 = v0;
    v29[1] = sub_24A72CFC0;
    return v30(v0 + 7, v27, v28);
  }
}

uint64_t sub_24A72CF24()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A72CFC0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_24A72D4E4;
  }
  else
  {
    sub_24A704754(v2 + 56);
    uint64_t v3 = sub_24A72D0DC;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24A72D0DC()
{
  sub_24A704754(v0 + 16);
  if (qword_2697B2EF8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_2697B9918;
  *(void *)(v0 + 216) = qword_2697B9918;
  return MEMORY[0x270FA2498](sub_24A72D17C, v1, 0);
}

uint64_t sub_24A72D17C()
{
  uint64_t v1 = v0[26];
  uint64_t v2 = sub_24A74E41C();
  if (v1)
  {
    v0[28] = v1;
    uint64_t v12 = sub_24A72D42C;
  }
  else
  {
    uint64_t v4 = v0[12];
    uint64_t v3 = v0[13];
    if (v2) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = MEMORY[0x263F8EE78];
    }
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_24A73615C(v5, v4, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24A74E5B8(v6);
    uint64_t v7 = v0[27];
    uint64_t v8 = v0[15];
    uint64_t v9 = sub_24A763008();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
    uint64_t v10 = sub_24A736CE4(&qword_2697B3C18, (void (*)(uint64_t))type metadata accessor for ScheduledQueryStore);
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = v7;
    v11[3] = v10;
    void v11[4] = v7;
    swift_retain_n();
    sub_24A70DA08(v8, (uint64_t)&unk_2697B3C20, (uint64_t)v11);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_24A72D338;
  }
  return MEMORY[0x270FA2498](v12, 0, 0);
}

uint64_t sub_24A72D338()
{
  if (qword_2697B2EB8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 168);
  sub_24A7202D8(v1);
  sub_24A711AF8(v1, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24A72D42C()
{
  sub_24A711AF8(*(void *)(v0 + 168), (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A72D4E4()
{
  sub_24A711AF8(*(void *)(v0 + 168), (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
  sub_24A704754(v0 + 56);
  sub_24A704754(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t ScheduledQueryManager.deleteAllScheduledQueries()()
{
  *(void *)(v1 + 136) = v0;
  sub_24A704710(&qword_2697B3440);
  *(void *)(v1 + 144) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A72D648, 0, 0);
}

uint64_t sub_24A72D648()
{
  if (qword_2697B2EF8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[17];
  v0[19] = qword_2697B9918;
  sub_24A7360A4(v1 + 16, (uint64_t)(v0 + 2));
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  sub_24A705BC4(v0 + 2, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 24) + **(int **)(v3 + 24));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[20] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24A72D798;
  return v6(v2, v3);
}

uint64_t sub_24A72D798(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 168) = a1;
  *(void *)(v3 + 176) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_24A72DF48;
  }
  else {
    uint64_t v4 = sub_24A72D8AC;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_24A72D8AC()
{
  uint64_t v1 = v0[21];
  sub_24A704754((uint64_t)(v0 + 2));
  uint64_t v2 = *(void *)(v1 + 16);
  v0[23] = v2;
  if (v2)
  {
    uint64_t v3 = (void *)v0[21];
    v0[24] = 0;
    uint64_t v4 = v3 + 4;
    sub_24A7360A4(v0[17] + 16, (uint64_t)(v0 + 7));
    uint64_t v5 = v0[10];
    uint64_t v6 = v0[11];
    sub_24A705BC4(v0 + 7, v5);
    uint64_t v7 = v3[7];
    uint64_t v8 = v3[9];
    uint64_t v9 = sub_24A705BC4(v4, v7);
    v0[15] = v7;
    v0[16] = v8;
    uint64_t v10 = sub_24A736434(v0 + 12);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v10, v9, v7);
    uint64_t v14 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v6 + 16) + **(int **)(v6 + 16));
    uint64_t v11 = (void *)swift_task_alloc();
    v0[25] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_24A72DAA8;
    return v14(v0 + 12, v5, v6);
  }
  else
  {
    v0[27] = v0[22];
    uint64_t v13 = v0[19];
    swift_bridgeObjectRelease();
    return MEMORY[0x270FA2498](sub_24A72DDDC, v13, 0);
  }
}

uint64_t sub_24A72DAA8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_24A72DFB4;
  }
  else
  {
    sub_24A704754(v2 + 96);
    uint64_t v3 = sub_24A72DBCC;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24A72DBCC()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24] + 1;
  sub_24A704754((uint64_t)(v0 + 7));
  if (v2 == v1)
  {
    v0[27] = v0[26];
    uint64_t v3 = v0[19];
    swift_bridgeObjectRelease();
    return MEMORY[0x270FA2498](sub_24A72DDDC, v3, 0);
  }
  else
  {
    uint64_t v4 = v0[24] + 1;
    v0[24] = v4;
    uint64_t v5 = v0[21] + 48 * v4;
    uint64_t v6 = (void *)(v5 + 32);
    sub_24A7360A4(v0[17] + 16, (uint64_t)(v0 + 7));
    uint64_t v7 = v0[10];
    uint64_t v8 = v0[11];
    sub_24A705BC4(v0 + 7, v7);
    uint64_t v9 = *(void *)(v5 + 56);
    uint64_t v10 = *(void *)(v5 + 72);
    uint64_t v11 = sub_24A705BC4(v6, v9);
    v0[15] = v9;
    v0[16] = v10;
    uint64_t v12 = sub_24A736434(v0 + 12);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v12, v11, v9);
    uint64_t v15 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v8 + 16) + **(int **)(v8 + 16));
    uint64_t v13 = (void *)swift_task_alloc();
    v0[25] = v13;
    void *v13 = v0;
    v13[1] = sub_24A72DAA8;
    return v15(v0 + 12, v7, v8);
  }
}

uint64_t sub_24A72DDDC()
{
  uint64_t v1 = v0[27];
  sub_24A74E5B8(MEMORY[0x263F8EE78]);
  if (!v1)
  {
    uint64_t v4 = v0[18];
    uint64_t v3 = v0[19];
    uint64_t v5 = sub_24A763008();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
    uint64_t v6 = sub_24A736CE4(&qword_2697B3C18, (void (*)(uint64_t))type metadata accessor for ScheduledQueryStore);
    uint64_t v7 = (void *)swift_allocObject();
    v7[2] = v3;
    v7[3] = v6;
    v7[4] = v3;
    swift_retain_n();
    sub_24A70DA08(v4, (uint64_t)&unk_2697B3C30, (uint64_t)v7);
    swift_release();
  }
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_24A72DF48()
{
  sub_24A704754(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A72DFB4()
{
  sub_24A704754(v0 + 96);
  sub_24A704754(v0 + 56);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t ScheduledQueryManager.run(scheduledQueryWithIdentifier:)(uint64_t a1, uint64_t a2)
{
  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  sub_24A704710(&qword_2697B38E0);
  v3[22] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for ScheduledQuery();
  v3[23] = v4;
  v3[24] = *(void *)(v4 - 8);
  v3[25] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A72E120, 0, 0);
}

uint64_t sub_24A72E120()
{
  if (qword_2697B2EF8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_2697B9918;
  *(void *)(v0 + 208) = qword_2697B9918;
  return MEMORY[0x270FA2498](sub_24A72E1B8, v1, 0);
}

uint64_t sub_24A72E1B8()
{
  sub_24A74DA08(v0[19], v0[20], v0[25]);
  v0[27] = 0;
  return MEMORY[0x270FA2498](sub_24A72E248, 0, 0);
}

uint64_t sub_24A72E248()
{
  if (qword_2697B2F18 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = qword_2697B4230;
  long long v2 = *(_OWORD *)&qword_2697B4220;
  *(_OWORD *)(v0 + 16) = xmmword_2697B4210;
  *(_OWORD *)(v0 + 32) = v2;
  *(void *)(v0 + 48) = v1;
  sub_24A736590(v0 + 16);
  uint64_t v3 = sub_24A734C34();
  uint64_t v5 = v4;
  sub_24A7365D4(v0 + 16);
  if (v3 == 0x7974706D65 && v5 == 0xE500000000000000 || (sub_24A7635B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = &off_26FE3CF90;
    uint64_t v7 = &type metadata for ScheduleQueryEmptyRunner;
  }
  else
  {
    if (v3 != 0x647261646E617473 || v5 != 0xE800000000000000) {
      sub_24A7635B8();
    }
    swift_bridgeObjectRelease();
    uint64_t v6 = &off_26FE3B630;
    uint64_t v7 = &type metadata for ScheduledQueryStandardRunner;
  }
  uint64_t v8 = *(void *)(v0 + 200);
  *(void *)(v0 + 80) = v7;
  *(void *)(v0 + 88) = v6;
  sub_24A705BC4((void *)(v0 + 56), (uint64_t)v7);
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = *(void *)(v8 + 24);
  *(void *)(v0 + 224) = v10;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **))((char *)v6[1] + *(int *)v6[1]);
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_24A72E4D0;
  return v13(v9, v10, v7, v6);
}

uint64_t sub_24A72E4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[12] = v3;
  v4[13] = a1;
  v4[14] = a2;
  v4[15] = v2;
  v4[30] = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v2) {
    uint64_t v5 = sub_24A72EA24;
  }
  else {
    uint64_t v5 = sub_24A72E60C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24A72E60C()
{
  sub_24A704754((uint64_t)(v0 + 7));
  if (qword_2697B2EB8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[25];
  v0[31] = v2;
  v0[32] = v1;
  sub_24A7208AC(v3, v1, v2);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[33] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24A72E6EC;
  uint64_t v5 = v0[25];
  return sub_24A72EBA4(v5);
}

uint64_t sub_24A72E6EC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24A72E7E8, 0, 0);
}

uint64_t sub_24A72E7E8()
{
  sub_24A711AF8(v0[25], (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  uint64_t v3 = v0[31];
  uint64_t v2 = v0[32];
  return v1(v2, v3);
}

uint64_t sub_24A72E87C()
{
  sub_24A74DA08(v0[19], v0[20], v0[22]);
  return MEMORY[0x270FA2498](sub_24A72E914, 0, 0);
}

uint64_t sub_24A72E914()
{
  (*(void (**)(void, void, uint64_t, void))(*(void *)(v0 + 192) + 56))(*(void *)(v0 + 176), 0, 1, *(void *)(v0 + 184));
  if (qword_2697B2EB8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 176);
  sub_24A720E7C(v1, *(void **)(v0 + 272));
  swift_willThrow();
  sub_24A70FD54(v1, &qword_2697B38E0);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24A72EA04()
{
  uint64_t v1 = v0[26];
  v0[34] = v0[27];
  return MEMORY[0x270FA2498](sub_24A72E87C, v1, 0);
}

uint64_t sub_24A72EA24()
{
  sub_24A711AF8(v0[25], (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
  sub_24A704754((uint64_t)(v0 + 7));
  v0[34] = v0[30];
  uint64_t v1 = v0[26];
  return MEMORY[0x270FA2498](sub_24A72E87C, v1, 0);
}

uint64_t sub_24A72EAB4()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 192) + 56))(*(void *)(v0 + 176), 1, 1, *(void *)(v0 + 184));
  if (qword_2697B2EB8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 176);
  sub_24A720E7C(v1, *(void **)(v0 + 272));
  swift_willThrow();
  sub_24A70FD54(v1, &qword_2697B38E0);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24A72EBA4(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  v2[9] = type metadata accessor for TriggerParameters();
  v2[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A72EC38, 0, 0);
}

uint64_t sub_24A72EC38()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[7];
  uint64_t v3 = type metadata accessor for ScheduledQuery();
  sub_24A736C7C(v2 + *(int *)(v3 + 28), v1, (uint64_t (*)(void))type metadata accessor for TriggerParameters);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = v0[10];
      uint64_t v6 = sub_24A762398();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
LABEL_9:
      swift_task_dealloc();
      uint64_t v15 = (uint64_t (*)(void))v0[1];
      return v15();
    }
    int v9 = *(unsigned __int8 *)(v0[10] + 41);
    swift_bridgeObjectRelease();
    if (v9 != 1) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v7 = v0[10];
    uint64_t v8 = sub_24A762528();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v10 = (uint64_t *)v0[7];
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  v0[11] = v13;
  void *v13 = v0;
  v13[1] = sub_24A72EE00;
  return ScheduledQueryManager.delete(scheduledQueryWithIdentifier:)(v12, v11);
}

uint64_t sub_24A72EE00()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24A72EF3C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_24A72EF3C()
{
  uint64_t v16 = v0;
  if (qword_2697B2E78 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[12];
  uint64_t v2 = sub_24A762D68();
  sub_24A70D1FC(v2, (uint64_t)qword_2697B3530);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_24A762D48();
  os_log_type_t v6 = sub_24A763098();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[12];
  if (v7)
  {
    int v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v10;
    *(_DWORD *)int v9 = 136315138;
    swift_getErrorValue();
    uint64_t v11 = sub_24A763628();
    v0[6] = sub_24A716784(v11, v12, &v15);
    sub_24A763198();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A6FB000, v5, v6, "ScheduledQueryManager failed to remove one time trigger after succesful completion with error: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v10, -1, -1);
    MEMORY[0x24C5CEE90](v9, -1, -1);
  }
  else
  {
  }
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t ScheduledQueryManager.createDateScheduledQuery(date:query:runIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[29] = a5;
  v6[30] = v5;
  v6[27] = a3;
  v6[28] = a4;
  v6[25] = a1;
  v6[26] = a2;
  v6[31] = type metadata accessor for ScheduledQuery();
  v6[32] = swift_task_alloc();
  v6[33] = swift_task_alloc();
  uint64_t v7 = sub_24A762B88();
  v6[34] = v7;
  v6[35] = *(void *)(v7 - 8);
  v6[36] = swift_task_alloc();
  uint64_t v8 = sub_24A7625F8();
  v6[37] = v8;
  v6[38] = *(void *)(v8 - 8);
  v6[39] = swift_task_alloc();
  sub_24A762398();
  v6[40] = swift_task_alloc();
  uint64_t v9 = sub_24A762B78();
  v6[41] = v9;
  v6[42] = *(void *)(v9 - 8);
  v6[43] = swift_task_alloc();
  sub_24A704710(&qword_2697B3C50);
  v6[44] = swift_task_alloc();
  uint64_t v10 = sub_24A762C08();
  v6[45] = v10;
  v6[46] = *(void *)(v10 - 8);
  v6[47] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A72F3E4, 0, 0);
}

uint64_t sub_24A72F3E4()
{
  uint64_t v52 = v0;
  if (qword_2697B2E78 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24A762D68();
  v0[48] = sub_24A70D1FC(v1, (uint64_t)qword_2697B3530);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_24A762D48();
  os_log_type_t v3 = sub_24A7630B8();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[28];
  if (v4)
  {
    uint64_t v6 = v0[27];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v51 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[24] = sub_24A716784(v6, v5, &v51);
    sub_24A763198();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24A6FB000, v2, v3, "ScheduledQueryManager createDateScheduledQuery  %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v8, -1, -1);
    MEMORY[0x24C5CEE90](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v48 = v0[46];
  uint64_t v49 = v0[45];
  uint64_t v9 = v0[39];
  uint64_t v10 = v0[38];
  uint64_t v46 = v0[37];
  uint64_t v47 = v0[44];
  (*(void (**)(void))(v0[42] + 104))();
  sub_24A7625C8();
  sub_24A704710(&qword_2697B3C58);
  uint64_t v11 = sub_24A7625E8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_24A765D10;
  unint64_t v16 = v15 + v14;
  uint64_t v17 = *(void (**)(unint64_t, void, uint64_t))(v12 + 104);
  v17(v16, *MEMORY[0x263F078A0], v11);
  v17(v16 + v13, *MEMORY[0x263F078A8], v11);
  v17(v16 + 2 * v13, *MEMORY[0x263F07870], v11);
  v17(v16 + 3 * v13, *MEMORY[0x263F07890], v11);
  v17(v16 + 4 * v13, *MEMORY[0x263F078C0], v11);
  v17(v16 + 5 * v13, *MEMORY[0x263F078C8], v11);
  sub_24A73661C(v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_24A762588();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v46);
  sub_24A762BF8();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v47, 1, v49) == 1)
  {
    sub_24A70FD54(v0[44], &qword_2697B3C50);
    uint64_t v18 = sub_24A762D48();
    os_log_type_t v19 = sub_24A763098();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_24A6FB000, v18, v19, "ScheduledQueryManager createDateScheduledQuery failed to create TimeOfDayTrigger", v20, 2u);
      MEMORY[0x24C5CEE90](v20, -1, -1);
    }
    uint64_t v21 = v0[45];

    uint64_t v22 = sub_24A736CE4(&qword_2697B3C60, MEMORY[0x263F84F98]);
    sub_24A736050();
    swift_allocError();
    *(void *)uint64_t v23 = v21;
    *(void *)(v23 + 8) = v22;
    *(unsigned char *)(v23 + 16) = 1;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    return v24();
  }
  else
  {
    uint64_t v27 = v0[35];
    uint64_t v26 = (uint64_t *)v0[36];
    uint64_t v28 = v0[34];
    uint64_t v29 = (void *)v0[29];
    (*(void (**)(void, void, void))(v0[46] + 32))(v0[47], v0[44], v0[45]);
    uint64_t v30 = v29[3];
    uint64_t v31 = v29[4];
    uint64_t v32 = sub_24A705BC4(v29, v30);
    v26[3] = v30;
    v26[4] = *(void *)(v31 + 8);
    uint64_t v33 = sub_24A736434(v26);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v33, v32, v30);
    v26[5] = 0xD000000000000040;
    v26[6] = 0x800000024A767CC0;
    (*(void (**)(uint64_t *, void, uint64_t))(v27 + 104))(v26, *MEMORY[0x263F84F58], v28);
    uint64_t v34 = sub_24A762D48();
    os_log_type_t v35 = sub_24A7630B8();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl(&dword_24A6FB000, v34, v35, "ScheduledQueryManager createDateScheduledQuery TriggerAction.intent", v36, 2u);
      MEMORY[0x24C5CEE90](v36, -1, -1);
    }
    uint64_t v38 = v0[46];
    uint64_t v37 = v0[47];
    uint64_t v39 = v0[45];
    uint64_t v40 = v0[30];

    sub_24A7360A4(v40 + 16, (uint64_t)(v0 + 8));
    uint64_t v41 = v0[11];
    uint64_t v42 = v0[12];
    sub_24A705BC4(v0 + 8, v41);
    v0[16] = v39;
    v0[17] = sub_24A736CE4(&qword_2697B3C60, MEMORY[0x263F84F98]);
    unint64_t v43 = sub_24A736434(v0 + 13);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v38 + 16))(v43, v37, v39);
    int v50 = (uint64_t (*)(void *, void *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 + 8)
                                                                                + **(int **)(v42 + 8));
    unint64_t v44 = (void *)swift_task_alloc();
    v0[49] = v44;
    *unint64_t v44 = v0;
    v44[1] = sub_24A72FC0C;
    uint64_t v45 = v0[36];
    return v50(v0 + 2, v0 + 13, v45, v41, v42);
  }
}

uint64_t sub_24A72FC0C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 400) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_24A730378;
  }
  else
  {
    sub_24A704754(v2 + 104);
    os_log_type_t v3 = sub_24A72FD28;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24A72FD28()
{
  uint64_t v36 = v0;
  sub_24A704754((uint64_t)(v0 + 8));
  uint64_t v1 = sub_24A762D48();
  os_log_type_t v2 = sub_24A7630B8();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v3 = 0;
    _os_log_impl(&dword_24A6FB000, v1, v2, "ScheduledQueryManager createDateScheduledQuery TriggerAction.intent success", v3, 2u);
    MEMORY[0x24C5CEE90](v3, -1, -1);
  }
  BOOL v4 = (void *)v0[29];

  uint64_t v5 = v4[3];
  uint64_t v6 = v4[4];
  sub_24A705BC4(v4, v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v33 = v7;
    uint64_t v10 = (uint64_t *)v0[33];
    uint64_t v34 = v0[32];
    uint64_t v11 = v0[31];
    uint64_t v12 = v0[28];
    uint64_t v32 = v0[27];
    uint64_t v13 = v0[26];
    sub_24A705BC4(v0 + 2, v0[5]);
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_24A762C18();
    uint64_t v16 = v15;
    uint64_t v17 = (char *)v10 + *(int *)(v11 + 28);
    uint64_t v18 = sub_24A762528();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v17, v13, v18);
    type metadata accessor for TriggerParameters();
    swift_storeEnumTagMultiPayload();
    *uint64_t v10 = v33;
    v10[1] = v9;
    v10[2] = v32;
    v10[3] = v12;
    void v10[4] = v14;
    v10[5] = v16;
    sub_24A736C7C((uint64_t)v10, v34, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
    os_log_type_t v19 = sub_24A762D48();
    os_log_type_t v20 = sub_24A7630B8();
    BOOL v21 = os_log_type_enabled(v19, v20);
    uint64_t v22 = v0[32];
    if (v21)
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v35 = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v25 = ScheduledQuery.description.getter();
      v0[23] = sub_24A716784(v25, v26, &v35);
      sub_24A763198();
      swift_bridgeObjectRelease();
      sub_24A711AF8(v22, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
      _os_log_impl(&dword_24A6FB000, v19, v20, "ScheduledQueryManager createDateScheduledQuery created %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5CEE90](v24, -1, -1);
      MEMORY[0x24C5CEE90](v23, -1, -1);
    }
    else
    {
      sub_24A711AF8(v0[32], (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
    }

    if (qword_2697B2EF8 != -1) {
      swift_once();
    }
    uint64_t v31 = qword_2697B9918;
    v0[51] = qword_2697B9918;
    return MEMORY[0x270FA2498](sub_24A730180, v31, 0);
  }
  else
  {
    uint64_t v27 = sub_24A762D48();
    os_log_type_t v28 = sub_24A7630A8();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_24A6FB000, v27, v28, "Daily scheduled query created without identifier", v29, 2u);
      MEMORY[0x24C5CEE90](v29, -1, -1);
    }

    return sub_24A763418();
  }
}

uint64_t sub_24A730180()
{
  uint64_t v1 = *(void *)(v0 + 400);
  sub_24A74D6AC(*(uint64_t **)(v0 + 264));
  *(void *)(v0 + 416) = v1;
  if (v1) {
    os_log_type_t v2 = sub_24A7305EC;
  }
  else {
    os_log_type_t v2 = sub_24A73020C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24A73020C()
{
  if (qword_2697B2EB8 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[46];
  uint64_t v1 = v0[47];
  uint64_t v3 = v0[45];
  uint64_t v4 = v0[35];
  uint64_t v5 = v0[36];
  uint64_t v6 = v0[33];
  uint64_t v7 = v0[34];
  uint64_t v8 = v0[25];
  sub_24A7202C8(v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_24A72365C(v6, v8);
  sub_24A704754((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_24A730378()
{
  os_log_type_t v19 = v0;
  sub_24A704754((uint64_t)(v0 + 13));
  sub_24A704754((uint64_t)(v0 + 8));
  uint64_t v1 = (void *)v0[50];
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_24A762D48();
  os_log_type_t v5 = sub_24A763098();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v18 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_getErrorValue();
    uint64_t v8 = sub_24A763628();
    v0[22] = sub_24A716784(v8, v9, &v18);
    sub_24A763198();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A6FB000, v4, v5, "Error creating scheduled trigger: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v7, -1, -1);
    MEMORY[0x24C5CEE90](v6, -1, -1);
  }
  else
  {
  }
  uint64_t v11 = v0[46];
  uint64_t v10 = v0[47];
  uint64_t v12 = v0[45];
  uint64_t v14 = v0[35];
  uint64_t v13 = v0[36];
  uint64_t v15 = v0[34];
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_24A7305EC()
{
  os_log_type_t v19 = v0;
  sub_24A711AF8(v0[33], (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
  sub_24A704754((uint64_t)(v0 + 2));
  uint64_t v1 = (void *)v0[52];
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_24A762D48();
  os_log_type_t v5 = sub_24A763098();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v18 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_getErrorValue();
    uint64_t v8 = sub_24A763628();
    v0[22] = sub_24A716784(v8, v9, &v18);
    sub_24A763198();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A6FB000, v4, v5, "Error creating scheduled trigger: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v7, -1, -1);
    MEMORY[0x24C5CEE90](v6, -1, -1);
  }
  else
  {
  }
  uint64_t v11 = v0[46];
  uint64_t v10 = v0[47];
  uint64_t v12 = v0[45];
  uint64_t v14 = v0[35];
  uint64_t v13 = v0[36];
  uint64_t v15 = v0[34];
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t ScheduledQueryManager.createDailyScheduledQuery(components:query:runIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[29] = a5;
  v6[30] = v5;
  v6[27] = a3;
  v6[28] = a4;
  v6[25] = a1;
  v6[26] = a2;
  v6[31] = type metadata accessor for ScheduledQuery();
  v6[32] = swift_task_alloc();
  v6[33] = swift_task_alloc();
  uint64_t v7 = sub_24A762B88();
  v6[34] = v7;
  v6[35] = *(void *)(v7 - 8);
  v6[36] = swift_task_alloc();
  uint64_t v8 = sub_24A762B78();
  v6[37] = v8;
  v6[38] = *(void *)(v8 - 8);
  v6[39] = swift_task_alloc();
  sub_24A704710(&qword_2697B3C50);
  v6[40] = swift_task_alloc();
  uint64_t v9 = sub_24A762C08();
  v6[41] = v9;
  v6[42] = *(void *)(v9 - 8);
  v6[43] = swift_task_alloc();
  sub_24A704710(&qword_2697B3C70);
  v6[44] = swift_task_alloc();
  sub_24A704710(&qword_2697B3C78);
  v6[45] = swift_task_alloc();
  uint64_t v10 = sub_24A762398();
  v6[46] = v10;
  v6[47] = *(void *)(v10 - 8);
  v6[48] = swift_task_alloc();
  v6[49] = swift_task_alloc();
  v6[50] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A730B3C, 0, 0);
}

uint64_t sub_24A730B3C()
{
  uint64_t v70 = v0;
  uint64_t v1 = v0[47];
  uint64_t v64 = v0[49];
  uint64_t v66 = v0[46];
  uint64_t v2 = v0[44];
  uint64_t v3 = v0[45];
  uint64_t v4 = v0[42];
  uint64_t v67 = v0[41];
  uint64_t v5 = v0[38];
  uint64_t v58 = v0[50];
  uint64_t v59 = v0[39];
  uint64_t v60 = v0[37];
  uint64_t v61 = v0[40];
  uint64_t v6 = sub_24A7625F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v3, 1, 1, v6);
  uint64_t v7 = sub_24A762608();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  uint64_t v8 = sub_24A762368();
  char v10 = v9 & 1;
  uint64_t v11 = sub_24A762378();
  char v57 = v12 & 1;
  uint64_t v56 = v11;
  uint64_t v55 = v8;
  sub_24A762388();
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v59, *MEMORY[0x263F84F30], v60);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16);
  v0[51] = v13;
  v0[52] = (v1 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v13(v64, v58, v66);
  sub_24A762BF8();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v61, 1, v67) == 1)
  {
    sub_24A70FD54(v0[40], &qword_2697B3C50);
    if (qword_2697B2E78 != -1) {
      swift_once();
    }
    uint64_t v19 = v0[50];
    uint64_t v20 = v0[48];
    uint64_t v21 = v0[46];
    uint64_t v22 = sub_24A762D68();
    sub_24A70D1FC(v22, (uint64_t)qword_2697B3530);
    v13(v20, v19, v21);
    uint64_t v23 = sub_24A762D48();
    os_log_type_t v24 = sub_24A763098();
    BOOL v25 = os_log_type_enabled(v23, v24);
    uint64_t v27 = v0[47];
    uint64_t v26 = v0[48];
    uint64_t v28 = v0[46];
    if (v25)
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      v69[0] = v68;
      *(_DWORD *)uint64_t v29 = 136315138;
      sub_24A736CE4(&qword_2697B3C80, MEMORY[0x263F063B0]);
      uint64_t v30 = sub_24A763598();
      v0[22] = sub_24A716784(v30, v31, v69);
      sub_24A763198();
      swift_bridgeObjectRelease();
      uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
      v32(v26, v28);
      _os_log_impl(&dword_24A6FB000, v23, v24, "ScheduledQueryManager createDailyScheduledQuery failed to create TimeOfDayTrigger with components %s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5CEE90](v68, -1, -1);
      MEMORY[0x24C5CEE90](v29, -1, -1);
    }
    else
    {
      uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
      v32(v0[48], v0[46]);
    }

    uint64_t v49 = v0[50];
    uint64_t v50 = v0[46];
    uint64_t v51 = v0[41];
    uint64_t v52 = sub_24A736CE4(&qword_2697B3C60, MEMORY[0x263F84F98]);
    sub_24A736050();
    swift_allocError();
    *(void *)uint64_t v53 = v51;
    *(void *)(v53 + 8) = v52;
    *(unsigned char *)(v53 + 16) = 1;
    swift_willThrow();
    v32(v49, v50);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v54 = (uint64_t (*)(void))v0[1];
    return v54();
  }
  else
  {
    uint64_t v33 = v0[42];
    uint64_t v34 = v0[41];
    uint64_t v35 = v0[35];
    uint64_t v36 = (uint64_t *)v0[36];
    uint64_t v37 = v0[34];
    uint64_t v38 = (void *)v0[29];
    uint64_t v62 = v0[30];
    uint64_t v65 = v0[43];
    (*(void (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, char, uint64_t, char, uint64_t, char, void, _BYTE, void, char, void, char, void, char))(v33 + 32))(v65, v0[40], v34, v14, v15, v16, v17, v18, 0, 1, v55, v10, v56, v57, 0, 0, 0, 1, 0,
      1,
      0,
      1);
    uint64_t v40 = v38[3];
    uint64_t v39 = v38[4];
    uint64_t v41 = sub_24A705BC4(v38, v40);
    v36[3] = v40;
    v36[4] = *(void *)(v39 + 8);
    uint64_t v42 = sub_24A736434(v36);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(v42, v41, v40);
    v36[5] = 0xD000000000000040;
    uint64_t v36[6] = 0x800000024A767CC0;
    (*(void (**)(uint64_t *, void, uint64_t))(v35 + 104))(v36, *MEMORY[0x263F84F58], v37);
    sub_24A7360A4(v62 + 16, (uint64_t)(v0 + 8));
    uint64_t v43 = v0[11];
    uint64_t v44 = v0[12];
    sub_24A705BC4(v0 + 8, v43);
    v0[16] = v34;
    v0[17] = sub_24A736CE4(&qword_2697B3C60, MEMORY[0x263F84F98]);
    uint64_t v45 = sub_24A736434(v0 + 13);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v33 + 16))(v45, v65, v34);
    uint64_t v63 = (uint64_t (*)(void *, void *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 + 8)
                                                                                + **(int **)(v44 + 8));
    uint64_t v46 = (void *)swift_task_alloc();
    v0[53] = v46;
    *uint64_t v46 = v0;
    v46[1] = sub_24A7312BC;
    uint64_t v47 = v0[36];
    return v63(v0 + 2, v0 + 13, v47, v43, v44);
  }
}

uint64_t sub_24A7312BC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 432) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_24A731A68;
  }
  else
  {
    sub_24A704754(v2 + 104);
    uint64_t v3 = sub_24A7313D8;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24A7313D8()
{
  uint64_t v36 = v0;
  uint64_t v1 = (void *)v0[29];
  sub_24A704754((uint64_t)(v0 + 8));
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_24A705BC4(v1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v34 = v4;
    uint64_t v7 = v0[50];
    uint64_t v32 = (void (*)(char *, uint64_t, uint64_t))v0[51];
    uint64_t v8 = v0[46];
    char v9 = (uint64_t *)v0[33];
    uint64_t v10 = v0[31];
    uint64_t v11 = v0[28];
    uint64_t v33 = v0[27];
    sub_24A705BC4(v0 + 2, v0[5]);
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_24A762C18();
    uint64_t v14 = v13;
    v32((char *)v9 + *(int *)(v10 + 28), v7, v8);
    type metadata accessor for TriggerParameters();
    swift_storeEnumTagMultiPayload();
    uint64_t *v9 = v34;
    v9[1] = v6;
    v9[2] = v33;
    v9[3] = v11;
    v9[4] = v12;
    v9[5] = v14;
    if (qword_2697B2E78 != -1) {
      swift_once();
    }
    uint64_t v15 = v0[32];
    uint64_t v16 = v0[33];
    uint64_t v17 = sub_24A762D68();
    sub_24A70D1FC(v17, (uint64_t)qword_2697B3530);
    sub_24A736C7C(v16, v15, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
    uint64_t v18 = sub_24A762D48();
    os_log_type_t v19 = sub_24A7630B8();
    BOOL v20 = os_log_type_enabled(v18, v19);
    uint64_t v21 = v0[32];
    if (v20)
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v35 = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      uint64_t v24 = ScheduledQuery.description.getter();
      v0[24] = sub_24A716784(v24, v25, &v35);
      sub_24A763198();
      swift_bridgeObjectRelease();
      sub_24A711AF8(v21, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
      _os_log_impl(&dword_24A6FB000, v18, v19, "ScheduledQueryManager createDailyScheduledQuery created %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5CEE90](v23, -1, -1);
      MEMORY[0x24C5CEE90](v22, -1, -1);
    }
    else
    {
      sub_24A711AF8(v0[32], (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
    }

    if (qword_2697B2EF8 != -1) {
      swift_once();
    }
    uint64_t v31 = qword_2697B9918;
    v0[55] = qword_2697B9918;
    return MEMORY[0x270FA2498](sub_24A731830, v31, 0);
  }
  else
  {
    if (qword_2697B2E78 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_24A762D68();
    sub_24A70D1FC(v26, (uint64_t)qword_2697B3530);
    uint64_t v27 = sub_24A762D48();
    os_log_type_t v28 = sub_24A7630A8();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_24A6FB000, v27, v28, "Daily scheduled query created without identifier", v29, 2u);
      MEMORY[0x24C5CEE90](v29, -1, -1);
    }

    return sub_24A763418();
  }
}

uint64_t sub_24A731830()
{
  uint64_t v1 = *(void *)(v0 + 432);
  sub_24A74D6AC(*(uint64_t **)(v0 + 264));
  *(void *)(v0 + 448) = v1;
  if (v1) {
    uint64_t v2 = sub_24A731D74;
  }
  else {
    uint64_t v2 = sub_24A7318BC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24A7318BC()
{
  if (qword_2697B2EB8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[50];
  uint64_t v2 = v0[47];
  uint64_t v3 = v0[46];
  uint64_t v4 = v0[43];
  uint64_t v6 = v0[41];
  uint64_t v5 = v0[42];
  uint64_t v7 = v0[35];
  uint64_t v8 = v0[33];
  uint64_t v12 = v0[34];
  uint64_t v13 = v0[36];
  uint64_t v9 = v0[25];
  sub_24A7202C8(v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_24A72365C(v8, v9);
  sub_24A704754((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v13, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_24A731A68()
{
  uint64_t v23 = v0;
  sub_24A704754((uint64_t)(v0 + 13));
  sub_24A704754((uint64_t)(v0 + 8));
  uint64_t v1 = (void *)v0[54];
  if (qword_2697B2E78 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24A762D68();
  sub_24A70D1FC(v2, (uint64_t)qword_2697B3530);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_24A762D48();
  os_log_type_t v6 = sub_24A763098();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v22 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_getErrorValue();
    uint64_t v9 = sub_24A763628();
    v0[23] = sub_24A716784(v9, v10, &v22);
    sub_24A763198();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A6FB000, v5, v6, "Error creating scheduled trigger: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v8, -1, -1);
    MEMORY[0x24C5CEE90](v7, -1, -1);
  }
  else
  {
  }
  uint64_t v11 = v0[50];
  uint64_t v13 = v0[46];
  uint64_t v12 = v0[47];
  uint64_t v15 = v0[42];
  uint64_t v14 = v0[43];
  uint64_t v16 = v0[41];
  uint64_t v17 = v0[35];
  uint64_t v21 = v0[36];
  uint64_t v18 = v0[34];
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v21, v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_24A731D74()
{
  uint64_t v23 = v0;
  sub_24A711AF8(v0[33], (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
  sub_24A704754((uint64_t)(v0 + 2));
  uint64_t v1 = (void *)v0[56];
  if (qword_2697B2E78 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24A762D68();
  sub_24A70D1FC(v2, (uint64_t)qword_2697B3530);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_24A762D48();
  os_log_type_t v6 = sub_24A763098();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v22 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_getErrorValue();
    uint64_t v9 = sub_24A763628();
    v0[23] = sub_24A716784(v9, v10, &v22);
    sub_24A763198();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A6FB000, v5, v6, "Error creating scheduled trigger: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v8, -1, -1);
    MEMORY[0x24C5CEE90](v7, -1, -1);
  }
  else
  {
  }
  uint64_t v11 = v0[50];
  uint64_t v13 = v0[46];
  uint64_t v12 = v0[47];
  uint64_t v15 = v0[42];
  uint64_t v14 = v0[43];
  uint64_t v16 = v0[41];
  uint64_t v17 = v0[35];
  uint64_t v21 = v0[36];
  uint64_t v18 = v0[34];
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v21, v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t ScheduledQueryManager.createLocationEnteredScheduledQuery(location:radiusInMeters:query:isOneTime:runIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, double a7)
{
  *(void *)(v8 + 72) = a6;
  *(void *)(v8 + 80) = v7;
  *(unsigned char *)(v8 + 168) = a5;
  *(void *)(v8 + 56) = a3;
  *(void *)(v8 + 64) = a4;
  *(double *)(v8 + 48) = a7;
  *(void *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = a2;
  sub_24A704710(&qword_2697B3C90);
  *(void *)(v8 + 88) = swift_task_alloc();
  uint64_t v9 = sub_24A762B98();
  *(void *)(v8 + 96) = v9;
  *(void *)(v8 + 104) = *(void *)(v9 - 8);
  *(void *)(v8 + 112) = swift_task_alloc();
  uint64_t v10 = sub_24A762BE8();
  *(void *)(v8 + 120) = v10;
  *(void *)(v8 + 128) = *(void *)(v10 - 8);
  *(void *)(v8 + 136) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A7321F0, 0, 0);
}

uint64_t sub_24A7321F0()
{
  if (qword_2697B2E78 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v2 = sub_24A762D68();
  sub_24A70D1FC(v2, (uint64_t)qword_2697B3530);
  id v3 = v1;
  id v4 = sub_24A762D48();
  os_log_type_t v5 = sub_24A7630B8();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void **)(v0 + 40);
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    *(void *)(v0 + 24) = v7;
    id v10 = v7;
    sub_24A763198();
    void *v9 = v7;

    _os_log_impl(&dword_24A6FB000, v4, v5, "manager createLocationEnteredScheduledQuery location=%@)", v8, 0xCu);
    sub_24A704710(&qword_2697B3520);
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v9, -1, -1);
    MEMORY[0x24C5CEE90](v8, -1, -1);
  }
  else
  {
  }
  id v11 = objc_msgSend(*(id *)(v0 + 40), sel_location);
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = *(void **)(v0 + 40);
    objc_msgSend(v11, sel_coordinate);
    double v15 = v14;
    double v17 = v16;

    id v18 = objc_msgSend(v13, sel_name);
    if (v18)
    {
      os_log_type_t v19 = v18;
      sub_24A762E08();
    }
    double v26 = *(double *)(v0 + 48);
    id v27 = objc_allocWithZone(MEMORY[0x263F00A28]);
    os_log_type_t v28 = (void *)sub_24A762DF8();
    swift_bridgeObjectRelease();
    id v29 = objc_msgSend(v27, sel_initWithCenter_radius_identifier_, v28, v15, v17, v26);
    *(void *)(v0 + 144) = v29;

    uint64_t v30 = v29;
    uint64_t v31 = sub_24A762D48();
    os_log_type_t v32 = sub_24A7630B8();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 138412290;
      *(void *)(v0 + 16) = v30;
      uint64_t v35 = v30;
      sub_24A763198();
      void *v34 = v30;

      _os_log_impl(&dword_24A6FB000, v31, v32, "manager createLocationEnteredScheduledQuery region=%@)", v33, 0xCu);
      sub_24A704710(&qword_2697B3520);
      swift_arrayDestroy();
      MEMORY[0x24C5CEE90](v34, -1, -1);
      MEMORY[0x24C5CEE90](v33, -1, -1);
    }
    else
    {

      uint64_t v31 = v30;
    }
    uint64_t v37 = *(void *)(v0 + 104);
    uint64_t v36 = *(void *)(v0 + 112);
    uint64_t v39 = *(void *)(v0 + 88);
    uint64_t v38 = *(void *)(v0 + 96);

    (*(void (**)(uint64_t, void, uint64_t))(v37 + 104))(v36, *MEMORY[0x263F84F68], v38);
    uint64_t v40 = sub_24A762BB8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 1, 1, v40);
    uint64_t v41 = v30;
    sub_24A762BC8();
    uint64_t v42 = sub_24A762D48();
    os_log_type_t v43 = sub_24A7630B8();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v44 = 0;
      _os_log_impl(&dword_24A6FB000, v42, v43, "manager createLocationEnteredScheduledQuery trigger=", v44, 2u);
      MEMORY[0x24C5CEE90](v44, -1, -1);
    }

    uint64_t v45 = swift_task_alloc();
    *(void *)(v0 + 152) = v45;
    *(void *)uint64_t v45 = v0;
    *(void *)(v45 + 8) = sub_24A732844;
    uint64_t v46 = *(void *)(v0 + 136);
    uint64_t v47 = *(void *)(v0 + 72);
    long long v48 = *(_OWORD *)(v0 + 56);
    uint64_t v49 = *(void *)(v0 + 32);
    *(void *)(v45 + 56) = *(void *)(v0 + 80);
    *(unsigned char *)(v45 + 80) = 1;
    *(_OWORD *)(v45 + 40) = v48;
    *(void *)(v45 + 24) = v47;
    *(void *)(v45 + 32) = v46;
    *(void *)(v45 + 16) = v49;
    return MEMORY[0x270FA2498](sub_24A732B14, 0, 0);
  }
  else
  {
    BOOL v20 = sub_24A762D48();
    os_log_type_t v21 = sub_24A7630A8();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_24A6FB000, v20, v21, "Error creating scheduled trigger: Location is nil", v22, 2u);
      MEMORY[0x24C5CEE90](v22, -1, -1);
    }

    sub_24A736050();
    swift_allocError();
    *(_OWORD *)uint64_t v23 = xmmword_24A765D20;
    *(unsigned char *)(v23 + 16) = 2;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
    return v24();
  }
}

uint64_t sub_24A732844()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24A732A40;
  }
  else {
    uint64_t v2 = sub_24A732958;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24A732958()
{
  if (qword_2697B2EB8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[17];
  uint64_t v2 = (void *)v0[18];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[16];
  sub_24A7202C8(v0[4]);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_24A732A40()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_24A732AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v7 + 80) = a6;
  *(void *)(v7 + 48) = a5;
  *(void *)(v7 + 56) = v6;
  *(void *)(v7 + 32) = a3;
  *(void *)(v7 + 40) = a4;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  return MEMORY[0x270FA2498](sub_24A732B14, 0, 0);
}

uint64_t sub_24A732B14()
{
  uint64_t v1 = (void *)sub_24A762BA8();
  objc_msgSend(v1, sel_center);
  double v3 = v2;

  uint64_t v4 = (void *)sub_24A762BA8();
  objc_msgSend(v4, sel_center);
  double v6 = v5;

  uint64_t v7 = (void *)sub_24A762BA8();
  objc_msgSend(v7, sel_radius);
  double v9 = v8;

  id v10 = (void *)sub_24A762BA8();
  id v11 = objc_msgSend(v10, sel_identifier);

  uint64_t v12 = sub_24A762E08();
  uint64_t v14 = v13;

  *(void *)(v0 + 64) = v14;
  sub_24A762BD8();
  double v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v15;
  *double v15 = v0;
  v15[1] = sub_24A732C84;
  char v16 = *(unsigned char *)(v0 + 80);
  uint64_t v17 = *(void *)(v0 + 48);
  uint64_t v18 = *(void *)(v0 + 32);
  uint64_t v19 = *(void *)(v0 + 40);
  uint64_t v20 = *(void *)(v0 + 16);
  uint64_t v21 = *(void *)(v0 + 24);
  return sub_24A733550(v20, v21, v18, v19, v17, v12, v14, v16, v3, v6, v9);
}

uint64_t sub_24A732C84()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t ScheduledQueryManager.createLocationExitedScheduledQuery(location:radiusInMeters:query:isOneTime:runIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, double a7)
{
  *(void *)(v8 + 56) = a6;
  *(void *)(v8 + 64) = v7;
  *(unsigned char *)(v8 + 152) = a5;
  *(void *)(v8 + 40) = a3;
  *(void *)(v8 + 48) = a4;
  *(double *)(v8 + 32) = a7;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  sub_24A704710(&qword_2697B3C90);
  *(void *)(v8 + 72) = swift_task_alloc();
  uint64_t v9 = sub_24A762B98();
  *(void *)(v8 + 80) = v9;
  *(void *)(v8 + 88) = *(void *)(v9 - 8);
  *(void *)(v8 + 96) = swift_task_alloc();
  uint64_t v10 = sub_24A762BE8();
  *(void *)(v8 + 104) = v10;
  *(void *)(v8 + 112) = *(void *)(v10 - 8);
  *(void *)(v8 + 120) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A732EF0, 0, 0);
}

uint64_t sub_24A732EF0()
{
  id v1 = objc_msgSend(*(id *)(v0 + 24), sel_location);
  if (v1)
  {
    double v2 = v1;
    uint64_t v3 = *(void **)(v0 + 24);
    objc_msgSend(v1, sel_coordinate);
    double v5 = v4;
    double v7 = v6;

    id v8 = objc_msgSend(v3, sel_name);
    if (v8)
    {
      uint64_t v9 = v8;
      sub_24A762E08();
    }
    uint64_t v18 = *(void *)(v0 + 88);
    uint64_t v17 = *(void *)(v0 + 96);
    uint64_t v19 = *(void *)(v0 + 72);
    uint64_t v20 = *(void *)(v0 + 80);
    double v21 = *(double *)(v0 + 32);
    id v22 = objc_allocWithZone(MEMORY[0x263F00A28]);
    uint64_t v23 = (void *)sub_24A762DF8();
    swift_bridgeObjectRelease();
    id v24 = objc_msgSend(v22, sel_initWithCenter_radius_identifier_, v23, v5, v7, v21);
    *(void *)(v0 + 128) = v24;

    (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, *MEMORY[0x263F84F60], v20);
    uint64_t v25 = sub_24A762BB8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v19, 1, 1, v25);
    id v26 = v24;
    sub_24A762BC8();
    uint64_t v27 = swift_task_alloc();
    *(void *)(v0 + 136) = v27;
    *(void *)uint64_t v27 = v0;
    *(void *)(v27 + 8) = sub_24A7332AC;
    uint64_t v28 = *(void *)(v0 + 120);
    uint64_t v29 = *(void *)(v0 + 56);
    long long v30 = *(_OWORD *)(v0 + 40);
    uint64_t v31 = *(void *)(v0 + 16);
    *(void *)(v27 + 56) = *(void *)(v0 + 64);
    *(unsigned char *)(v27 + 80) = 0;
    *(_OWORD *)(v27 + 40) = v30;
    *(void *)(v27 + 24) = v29;
    *(void *)(v27 + 32) = v28;
    *(void *)(v27 + 16) = v31;
    return MEMORY[0x270FA2498](sub_24A732B14, 0, 0);
  }
  else
  {
    if (qword_2697B2E78 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_24A762D68();
    sub_24A70D1FC(v10, (uint64_t)qword_2697B3530);
    id v11 = sub_24A762D48();
    os_log_type_t v12 = sub_24A7630A8();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_24A6FB000, v11, v12, "Error creating scheduled trigger: Location is nil", v13, 2u);
      MEMORY[0x24C5CEE90](v13, -1, -1);
    }

    sub_24A736050();
    swift_allocError();
    *(_OWORD *)uint64_t v14 = xmmword_24A765D20;
    *(unsigned char *)(v14 + 16) = 2;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    double v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
}

uint64_t sub_24A7332AC()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    double v2 = sub_24A7334A8;
  }
  else {
    double v2 = sub_24A7333C0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24A7333C0()
{
  if (qword_2697B2EB8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[15];
  double v2 = (void *)v0[16];
  uint64_t v3 = v0[13];
  uint64_t v4 = v0[14];
  sub_24A7202C8(v0[2]);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  double v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_24A7334A8()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 112);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_24A733550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, double a9, double a10, double a11)
{
  *(void *)(v12 + 264) = v11;
  *(unsigned char *)(v12 + 361) = v16;
  *(unsigned char *)(v12 + 360) = a8;
  *(double *)(v12 + 248) = a10;
  *(double *)(v12 + 256) = a11;
  *(double *)(v12 + 240) = a9;
  *(void *)(v12 + 224) = a6;
  *(void *)(v12 + 232) = a7;
  *(void *)(v12 + 208) = a4;
  *(void *)(v12 + 216) = a5;
  *(void *)(v12 + 192) = a2;
  *(void *)(v12 + 200) = a3;
  *(void *)(v12 + 184) = a1;
  *(void *)(v12 + 272) = type metadata accessor for ScheduledQuery();
  *(void *)(v12 + 280) = swift_task_alloc();
  *(void *)(v12 + 288) = type metadata accessor for TriggerParameters();
  *(void *)(v12 + 296) = swift_task_alloc();
  uint64_t v13 = sub_24A762B88();
  *(void *)(v12 + 304) = v13;
  *(void *)(v12 + 312) = *(void *)(v13 - 8);
  *(void *)(v12 + 320) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A733698, 0, 0);
}

uint64_t sub_24A733698()
{
  uint64_t v2 = v0[39];
  uint64_t v1 = (uint64_t *)v0[40];
  uint64_t v3 = v0[38];
  uint64_t v4 = v0[33];
  double v5 = (void *)v0[24];
  uint64_t v18 = v0[25];
  uint64_t v7 = v5[3];
  uint64_t v6 = v5[4];
  id v8 = sub_24A705BC4(v5, v7);
  v1[3] = v7;
  v1[4] = *(void *)(v6 + 8);
  uint64_t v9 = sub_24A736434(v1);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v9, v8, v7);
  v1[5] = 0xD000000000000040;
  v1[6] = 0x800000024A767CC0;
  (*(void (**)(uint64_t *, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x263F84F58], v3);
  sub_24A7360A4(v4 + 16, (uint64_t)(v0 + 8));
  uint64_t v10 = v0[11];
  uint64_t v11 = v0[12];
  sub_24A705BC4(v0 + 8, v10);
  uint64_t v12 = sub_24A762BE8();
  v0[16] = v12;
  v0[17] = sub_24A736CE4(&qword_2697B3D40, MEMORY[0x263F84F78]);
  uint64_t v13 = sub_24A736434(v0 + 13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v13, v18, v12);
  uint64_t v17 = (uint64_t (*)(void *, void *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 + 8)
                                                                              + **(int **)(v11 + 8));
  uint64_t v14 = (void *)swift_task_alloc();
  v0[41] = v14;
  void *v14 = v0;
  v14[1] = sub_24A733904;
  uint64_t v15 = v0[40];
  return v17(v0 + 2, v0 + 13, v15, v10, v11);
}

uint64_t sub_24A733904()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 336) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_24A733E84;
  }
  else
  {
    sub_24A704754(v2 + 104);
    uint64_t v3 = sub_24A733A20;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24A733A20()
{
  uint64_t v1 = *(void *)(v0 + 296);
  char v2 = *(unsigned char *)(v0 + 361);
  char v3 = *(unsigned char *)(v0 + 360);
  uint64_t v4 = *(void *)(v0 + 256);
  long long v28 = *(_OWORD *)(v0 + 240);
  uint64_t v6 = *(void *)(v0 + 224);
  uint64_t v5 = *(void *)(v0 + 232);
  uint64_t v7 = *(void **)(v0 + 192);
  sub_24A704754(v0 + 64);
  *(void *)uint64_t v1 = v6;
  *(void *)(v1 + 8) = v5;
  *(_OWORD *)(v1 + 16) = v28;
  *(void *)(v1 + 32) = v4;
  *(unsigned char *)(v1 + 40) = v3;
  *(unsigned char *)(v1 + 41) = v2;
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = v7[3];
  uint64_t v9 = v7[4];
  sub_24A705BC4(v7, v8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 16);
  swift_bridgeObjectRetain();
  uint64_t v11 = v10(v8, v9);
  if (v12)
  {
    uint64_t v13 = v11;
    uint64_t v14 = v12;
    uint64_t v15 = *(void *)(v0 + 296);
    uint64_t v17 = *(void *)(v0 + 272);
    char v16 = *(uint64_t **)(v0 + 280);
    uint64_t v18 = *(void *)(v0 + 216);
    uint64_t v29 = *(void *)(v0 + 208);
    sub_24A705BC4((void *)(v0 + 16), *(void *)(v0 + 40));
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_24A762C18();
    uint64_t v21 = v20;
    sub_24A736C7C(v15, (uint64_t)v16 + *(int *)(v17 + 28), (uint64_t (*)(void))type metadata accessor for TriggerParameters);
    uint64_t *v16 = v13;
    v16[1] = v14;
    v16[2] = v29;
    v16[3] = v18;
    v16[4] = v19;
    v16[5] = v21;
    if (qword_2697B2EF8 != -1) {
      swift_once();
    }
    uint64_t v22 = qword_2697B9918;
    *(void *)(v0 + 344) = qword_2697B9918;
    return MEMORY[0x270FA2498](sub_24A733D10, v22, 0);
  }
  else
  {
    if (qword_2697B2E78 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_24A762D68();
    sub_24A70D1FC(v23, (uint64_t)qword_2697B3530);
    id v24 = sub_24A762D48();
    os_log_type_t v25 = sub_24A7630A8();
    if (os_log_type_enabled(v24, v25))
    {
      id v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v26 = 0;
      _os_log_impl(&dword_24A6FB000, v24, v25, "Location scheduled query created without identifier", v26, 2u);
      MEMORY[0x24C5CEE90](v26, -1, -1);
    }

    return sub_24A763418();
  }
}

uint64_t sub_24A733D10()
{
  uint64_t v1 = *(void *)(v0 + 336);
  sub_24A74D6AC(*(uint64_t **)(v0 + 280));
  *(void *)(v0 + 352) = v1;
  if (v1) {
    char v2 = sub_24A7340EC;
  }
  else {
    char v2 = sub_24A733D9C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24A733D9C()
{
  uint64_t v2 = v0[39];
  uint64_t v1 = v0[40];
  uint64_t v3 = v0[38];
  uint64_t v4 = v0[35];
  uint64_t v5 = v0[23];
  sub_24A711AF8(v0[37], (uint64_t (*)(void))type metadata accessor for TriggerParameters);
  sub_24A72365C(v4, v5);
  sub_24A704754((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_24A733E84()
{
  uint64_t v17 = v0;
  sub_24A704754((uint64_t)(v0 + 13));
  sub_24A704754((uint64_t)(v0 + 8));
  uint64_t v1 = (void *)v0[42];
  if (qword_2697B2E78 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24A762D68();
  sub_24A70D1FC(v2, (uint64_t)qword_2697B3530);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_24A762D48();
  os_log_type_t v6 = sub_24A763098();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v16 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_getErrorValue();
    uint64_t v9 = sub_24A763628();
    v0[22] = sub_24A716784(v9, v10, &v16);
    sub_24A763198();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A6FB000, v5, v6, "Error creating scheduled trigger: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v8, -1, -1);
    MEMORY[0x24C5CEE90](v7, -1, -1);
  }
  else
  {
  }
  uint64_t v12 = v0[39];
  uint64_t v11 = v0[40];
  uint64_t v13 = v0[38];
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_24A7340EC()
{
  uint64_t v18 = v0;
  uint64_t v1 = v0[37];
  sub_24A711AF8(v0[35], (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
  sub_24A711AF8(v1, (uint64_t (*)(void))type metadata accessor for TriggerParameters);
  sub_24A704754((uint64_t)(v0 + 2));
  uint64_t v2 = (void *)v0[44];
  if (qword_2697B2E78 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_24A762D68();
  sub_24A70D1FC(v3, (uint64_t)qword_2697B3530);
  id v4 = v2;
  id v5 = v2;
  os_log_type_t v6 = sub_24A762D48();
  os_log_type_t v7 = sub_24A763098();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v17 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_getErrorValue();
    uint64_t v10 = sub_24A763628();
    v0[22] = sub_24A716784(v10, v11, &v17);
    sub_24A763198();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A6FB000, v6, v7, "Error creating scheduled trigger: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v9, -1, -1);
    MEMORY[0x24C5CEE90](v8, -1, -1);
  }
  else
  {
  }
  uint64_t v13 = v0[39];
  uint64_t v12 = v0[40];
  uint64_t v14 = v0[38];
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t ScheduledQueryManager.deinit()
{
  sub_24A704754(v0 + 16);
  return v0;
}

uint64_t ScheduledQueryManager.__deallocating_deinit()
{
  sub_24A704754(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t sub_24A7343E0()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_2697B3BE0 + dword_2697B3BE0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_24A737048;
  return v3();
}

uint64_t sub_24A734480()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_2697B3BF0 + dword_2697B3BF0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_24A737048;
  return v3();
}

uint64_t sub_24A734520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *os_log_type_t v7 = v3;
  v7[1] = sub_24A7095E4;
  return ScheduledQueryManager.scheduledQuery(identifier:)(a1, a2, a3);
}

uint64_t sub_24A7345D0(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_24A7095E4;
  return ScheduledQueryManager.delete(scheduledQueryWithIdentifier:)(a1, a2);
}

uint64_t sub_24A734678()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_24A7095E4;
  return ScheduledQueryManager.deleteAllScheduledQueries()();
}

uint64_t sub_24A734708(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_24A71651C;
  return ScheduledQueryManager.run(scheduledQueryWithIdentifier:)(a1, a2);
}

uint64_t sub_24A7347B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *unint64_t v11 = v5;
  v11[1] = sub_24A7093EC;
  return ScheduledQueryManager.createDateScheduledQuery(date:query:runIntent:)(a1, a2, a3, a4, a5);
}

uint64_t sub_24A73487C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *unint64_t v11 = v5;
  v11[1] = sub_24A7095E4;
  return ScheduledQueryManager.createDailyScheduledQuery(components:query:runIntent:)(a1, a2, a3, a4, a5);
}

uint64_t sub_24A734948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, double a7)
{
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_24A7095E4;
  return ScheduledQueryManager.createLocationEnteredScheduledQuery(location:radiusInMeters:query:isOneTime:runIntent:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_24A734A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, double a7)
{
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_24A7095E4;
  return ScheduledQueryManager.createLocationExitedScheduledQuery(location:radiusInMeters:query:isOneTime:runIntent:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_24A734B10@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 32);
  uint64_t v4 = (void *)sub_24A762DF8();
  id v5 = objc_msgSend(v3, sel_objectForKey_, v4);

  if (v5)
  {
    sub_24A7631F8();
    swift_unknownObjectRelease();
    sub_24A70D414(v8, v10);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_24A704710(&qword_2697B3020);
  sub_24A704710(&qword_2697B3D68);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v7 = *((void *)&v9 + 1);
    if (*((void *)&v9 + 1) >> 60 != 11)
    {
      *a1 = v9;
      a1[1] = v7;
      return result;
    }
  }
  else
  {
    long long v9 = xmmword_24A765D30;
  }
  sub_24A736D6C(v1, (uint64_t)v8, &qword_2697B3D68);
  sub_24A736D6C((uint64_t)v8, (uint64_t)a1, &qword_2697B3D68);
  return sub_24A736DD0((uint64_t)v8);
}

uint64_t sub_24A734C34()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = (void *)sub_24A762DF8();
  id v3 = objc_msgSend(v1, sel_objectForKey_, v2);

  if (v3)
  {
    sub_24A7631F8();
    swift_unknownObjectRelease();
    sub_24A70D414(&v6, v7);
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_24A704710(&qword_2697B3020);
  if (swift_dynamicCast() && *((void *)&v6 + 1)) {
    return v6;
  }
  uint64_t v4 = *v0;
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_24A734D14(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  long long v6 = (void *)sub_24A762DF8();
  id v7 = objc_msgSend(a4, sel_objectForKey_, v6);

  if (v7)
  {
    sub_24A7631F8();
    swift_unknownObjectRelease();
    sub_24A70D414(&v9, v10);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_24A704710(&qword_2697B3020);
  if (swift_dynamicCast() && v9 != 2) {
    a1 = v9 & 1;
  }
  return a1 & 1;
}

uint64_t sub_24A734DF0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (void *)sub_24A762DF8();
  id v5 = objc_msgSend(a3, sel_objectForKey_, v4);

  if (v5)
  {
    sub_24A7631F8();
    swift_unknownObjectRelease();
    sub_24A70D414(&v7, v8);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_24A704710(&qword_2697B3020);
  return swift_dynamicCast();
}

uint64_t sub_24A734EB4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  long long v6 = (void *)sub_24A762DF8();
  id v7 = objc_msgSend(a4, sel_objectForKey_, v6);

  if (v7)
  {
    sub_24A7631F8();
    swift_unknownObjectRelease();
    sub_24A70D414(&v9, v10);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_24A704710(&qword_2697B3020);
  if (swift_dynamicCast()) {
    return v9;
  }
  else {
    return a1;
  }
}

uint64_t sub_24A734F80(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = 2 * a2;
  return result;
}

void sub_24A734F90(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  long long v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_24A763198();
  *a1 = v7;
  uint64_t v8 = *a2;
  if (*a2)
  {
    void *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_24A735048(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24A7635B8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24A7350D8()
{
  return 0x696669746E656469;
}

uint64_t sub_24A7350F4()
{
  return MEMORY[0x270FA2498](sub_24A735110, 0, 0);
}

uint64_t sub_24A735110()
{
  if (qword_2697B2EF8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_2697B9918;
  if (qword_2697B2E78 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24A762D68();
  *(void *)(v0 + 24) = sub_24A70D1FC(v2, (uint64_t)qword_2697B3530);
  char v3 = sub_24A762D48();
  os_log_type_t v4 = sub_24A7630B8();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    _os_log_impl(&dword_24A6FB000, v3, v4, "ScheduledQueryManager scheduledQueries found store", v5, 2u);
    MEMORY[0x24C5CEE90](v5, -1, -1);
  }

  return MEMORY[0x270FA2498](sub_24A735268, v1, 0);
}

uint64_t sub_24A735268()
{
  *(void *)(v0 + 32) = sub_24A74E41C();
  return MEMORY[0x270FA2498](sub_24A735318, 0, 0);
}

uint64_t sub_24A735318()
{
  uint64_t v1 = v0[4];
  if (v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_24A762D48();
    os_log_type_t v3 = sub_24A7630B8();
    if (os_log_type_enabled(v2, v3))
    {
      os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v4 = 134217984;
      v0[2] = *(void *)(v1 + 16);
      sub_24A763198();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24A6FB000, v2, v3, "ScheduledQueryManager scheduledQueries found %ld queries", v4, 0xCu);
      MEMORY[0x24C5CEE90](v4, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v2 = sub_24A762D48();
    uint64_t v5 = sub_24A7630B8();
    if (os_log_type_enabled(v2, (os_log_type_t)v5))
    {
      long long v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v6 = 0;
      _os_log_impl(&dword_24A6FB000, v2, (os_log_type_t)v5, "Scheduled Queries were requested but store is empty", v6, 2u);
      MEMORY[0x24C5CEE90](v6, -1, -1);
    }
    uint64_t v1 = MEMORY[0x263F8EE78];
  }

  uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
  return v7(v1);
}

uint64_t sub_24A7354C4()
{
  uint64_t v1 = sub_24A762598();
  v0[2] = v1;
  v0[3] = *(void *)(v1 - 8);
  v0[4] = swift_task_alloc();
  uint64_t v2 = sub_24A7625A8();
  v0[5] = v2;
  v0[6] = *(void *)(v2 - 8);
  v0[7] = swift_task_alloc();
  uint64_t v3 = sub_24A762578();
  v0[8] = v3;
  v0[9] = *(void *)(v3 - 8);
  v0[10] = swift_task_alloc();
  uint64_t v4 = sub_24A7625F8();
  v0[11] = v4;
  v0[12] = *(void *)(v4 - 8);
  v0[13] = swift_task_alloc();
  uint64_t v5 = sub_24A762398();
  v0[14] = v5;
  v0[15] = *(void *)(v5 - 8);
  v0[16] = swift_task_alloc();
  v0[17] = type metadata accessor for TriggerParameters();
  v0[18] = swift_task_alloc();
  sub_24A704710((uint64_t *)&unk_2697B3630);
  v0[19] = swift_task_alloc();
  uint64_t v6 = sub_24A762528();
  v0[20] = v6;
  v0[21] = *(void *)(v6 - 8);
  v0[22] = swift_task_alloc();
  v0[23] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for ScheduledQuery();
  v0[24] = v7;
  v0[25] = *(void *)(v7 - 8);
  v0[26] = swift_task_alloc();
  v0[27] = swift_task_alloc();
  uint64_t v10 = (uint64_t (__cdecl *)())((char *)&dword_2697B3BE0 + dword_2697B3BE0);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[28] = v8;
  void *v8 = v0;
  v8[1] = sub_24A735868;
  return v10();
}

uint64_t sub_24A735868(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 232) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_24A735A44, 0, 0);
  }
}

void sub_24A735A44()
{
  uint64_t v1 = v0[29];
  uint64_t v2 = MEMORY[0x263F8EE78];
  uint64_t v67 = MEMORY[0x263F8EE78];
  uint64_t v63 = *(void *)(v1 + 16);
  if (v63)
  {
    unint64_t v3 = 0;
    uint64_t v61 = v0[24];
    uint64_t v62 = v0[25];
    uint64_t v4 = v0[21];
    uint64_t v5 = v0[15];
    uint64_t v6 = v0[9];
    uint64_t v7 = v0[6];
    uint64_t v8 = v0[3];
    uint64_t v56 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    uint64_t v50 = (void (**)(void))(v5 + 32);
    unsigned int v49 = *MEMORY[0x263F07780];
    long long v48 = (void (**)(uint64_t, void, uint64_t))(v6 + 104);
    uint64_t v47 = (void (**)(uint64_t, void, uint64_t))(v7 + 104);
    uint64_t v45 = (void (**)(uint64_t, uint64_t))(v8 + 8);
    uint64_t v46 = (void (**)(uint64_t, void, uint64_t))(v8 + 104);
    os_log_type_t v43 = (void (**)(uint64_t, uint64_t))(v6 + 8);
    uint64_t v44 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    uint64_t v58 = (void (**)(uint64_t, uint64_t))(v4 + 8);
    uint64_t v41 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    uint64_t v42 = (void (**)(uint64_t, uint64_t))(v0[12] + 8);
    unsigned int v40 = *MEMORY[0x263F07800];
    char v57 = (void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
    uint64_t v60 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    unsigned int v39 = *MEMORY[0x263F077E0];
    uint64_t v9 = MEMORY[0x263F8EE78];
    uint64_t v51 = v0[29];
    while (1)
    {
      if (v3 >= *(void *)(v1 + 16))
      {
        __break(1u);
        return;
      }
      uint64_t v10 = v0[27];
      uint64_t v11 = v0[18];
      uint64_t v12 = *(void *)(v62 + 72);
      unint64_t v66 = (*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
      sub_24A736C7C(v0[29] + v66 + v12 * v3, v10, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
      sub_24A736C7C(v10 + *(int *)(v61 + 28), v11, (uint64_t (*)(void))type metadata accessor for TriggerParameters);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v64 = v12;
          uint64_t v14 = v0[22];
          uint64_t v55 = v0[20];
          uint64_t v59 = v9;
          uint64_t v15 = v0[13];
          uint64_t v16 = v0[10];
          uint64_t v53 = v0[14];
          uint64_t v54 = v0[11];
          uint64_t v17 = v0[7];
          uint64_t v18 = v0[8];
          uint64_t v52 = v0[16];
          uint64_t v19 = v0[4];
          uint64_t v20 = v0[5];
          uint64_t v21 = v0[2];
          (*v50)();
          sub_24A7625C8();
          sub_24A762508();
          (*v48)(v16, v49, v18);
          (*v47)(v17, v40, v20);
          (*v46)(v19, v39, v21);
          sub_24A7625D8();
          (*v45)(v19, v21);
          (*v44)(v17, v20);
          (*v43)(v16, v18);
          uint64_t v12 = v64;
          uint64_t v1 = v51;
          (*v58)(v14, v55);
          (*v42)(v15, v54);
          uint64_t v9 = v59;
          (*v41)(v52, v53);
        }
        else
        {
          uint64_t v24 = v0[19];
          uint64_t v25 = v0[20];
          swift_bridgeObjectRelease();
          (*v56)(v24, 1, 1, v25);
        }
      }
      else
      {
        uint64_t v22 = v0[19];
        uint64_t v23 = v0[20];
        (*v57)(v22, v0[18], v23);
        (*v56)(v22, 0, 1, v23);
      }
      uint64_t v26 = v0[19];
      uint64_t v27 = v0[20];
      if ((*v60)(v26, 1, v27) == 1) {
        break;
      }
      uint64_t v65 = v12;
      uint64_t v29 = v0[22];
      uint64_t v28 = v0[23];
      (*v57)(v28, v26, v27);
      sub_24A762508();
      char v30 = sub_24A7624B8();
      uint64_t v31 = v9;
      uint64_t v32 = v1;
      uint64_t v33 = *v58;
      uint64_t v34 = v29;
      uint64_t v12 = v65;
      (*v58)(v34, v27);
      v33(v28, v27);
      uint64_t v1 = v32;
      uint64_t v9 = v31;
      if (v30) {
        goto LABEL_14;
      }
      sub_24A711AF8(v0[27], (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
LABEL_4:
      if (v63 == ++v3)
      {
        uint64_t v2 = v9;
        goto LABEL_20;
      }
    }
    sub_24A70FD54(v26, (uint64_t *)&unk_2697B3630);
LABEL_14:
    sub_24A72365C(v0[27], v0[26]);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24A7534AC(0, *(void *)(v9 + 16) + 1, 1);
      uint64_t v9 = v67;
    }
    unint64_t v36 = *(void *)(v9 + 16);
    unint64_t v35 = *(void *)(v9 + 24);
    if (v36 >= v35 >> 1)
    {
      sub_24A7534AC(v35 > 1, v36 + 1, 1);
      uint64_t v9 = v67;
    }
    uint64_t v37 = v0[26];
    *(void *)(v9 + 16) = v36 + 1;
    sub_24A72365C(v37, v9 + v66 + v36 * v12);
    goto LABEL_4;
  }
LABEL_20:
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v38 = (void (*)(uint64_t))v0[1];
  v38(v2);
}

unint64_t sub_24A736050()
{
  unint64_t result = qword_2697B3C08;
  if (!qword_2697B3C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3C08);
  }
  return result;
}

uint64_t sub_24A7360A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_24A736108()
{
  unint64_t result = qword_2697B3C10;
  if (!qword_2697B3C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3C10);
  }
  return result;
}

uint64_t sub_24A73615C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for ScheduledQuery() - 8;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v13 = (void *)((char *)v23 - v12);
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v26 = MEMORY[0x263F8EE78];
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    v23[1] = v3;
    uint64_t v16 = *(void *)(v11 + 72);
    unint64_t v24 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v17 = a1 + v24;
    uint64_t v18 = MEMORY[0x263F8EE78];
    uint64_t v25 = v10;
    do
    {
      sub_24A736C7C(v17, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
      BOOL v19 = *v13 == a2 && v13[1] == a3;
      if (v19 || (sub_24A7635B8() & 1) != 0)
      {
        sub_24A711AF8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ScheduledQuery);
      }
      else
      {
        sub_24A72365C((uint64_t)v13, (uint64_t)v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_24A7534AC(0, *(void *)(v18 + 16) + 1, 1);
        }
        uint64_t v18 = v26;
        unint64_t v21 = *(void *)(v26 + 16);
        unint64_t v20 = *(void *)(v26 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_24A7534AC(v20 > 1, v21 + 1, 1);
          uint64_t v18 = v26;
        }
        *(void *)(v18 + 16) = v21 + 1;
        uint64_t v22 = v18 + v24 + v21 * v16;
        uint64_t v10 = v25;
        sub_24A72365C((uint64_t)v25, v22);
      }
      v17 += v16;
      --v15;
    }
    while (v15);
    return v26;
  }
  return result;
}

uint64_t sub_24A736380(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_24A7095E4;
  return sub_24A74DC98(a1, v4, v5, v6);
}

uint64_t *sub_24A736434(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_24A73649C()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24A7364DC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_24A7093EC;
  return sub_24A74DC98(a1, v4, v5, v6);
}

uint64_t sub_24A736590(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return a1;
}

uint64_t sub_24A7365D4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24A73661C(uint64_t a1)
{
  uint64_t v2 = sub_24A7625E8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_24A704710(&qword_2697B3D48);
    uint64_t v9 = sub_24A763318();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    unint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_24A736CE4(&qword_2697B3D50, MEMORY[0x263F07908]);
      uint64_t v16 = sub_24A762DC8();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_24A736CE4(&qword_2697B3D58, MEMORY[0x263F07908]);
          char v23 = sub_24A762DE8();
          unint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t type metadata accessor for ScheduledQueryManager()
{
  return self;
}

uint64_t method lookup function for ScheduledQueryManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ScheduledQueryManager);
}

uint64_t sub_24A736978(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for ScheduledQueryManager.ScheduledQueryManagerError(uint64_t a1)
{
  return sub_24A73699C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_24A73699C(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s23ConditionalEngineShared21ScheduledQueryManagerC26ScheduledQueryManagerErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24A736978(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ScheduledQueryManager.ScheduledQueryManagerError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24A736978(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24A73699C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ScheduledQueryManager.ScheduledQueryManagerError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_24A73699C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduledQueryManager.ScheduledQueryManagerError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduledQueryManager.ScheduledQueryManagerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24A736B28(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_24A736B40(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQueryManager.ScheduledQueryManagerError()
{
  return &type metadata for ScheduledQueryManager.ScheduledQueryManagerError;
}

ValueMetadata *type metadata accessor for ScheduledTriggerIdentifier()
{
  return &type metadata for ScheduledTriggerIdentifier;
}

unint64_t sub_24A736B7C()
{
  unint64_t result = qword_2697B3D10;
  if (!qword_2697B3D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3D10);
  }
  return result;
}

unint64_t sub_24A736BD4()
{
  unint64_t result = qword_2697B3D18;
  if (!qword_2697B3D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3D18);
  }
  return result;
}

unint64_t sub_24A736C28()
{
  unint64_t result = qword_2697B3D28;
  if (!qword_2697B3D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3D28);
  }
  return result;
}

uint64_t sub_24A736C7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24A736CE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A736D2C()
{
  unint64_t result = qword_2697B3D60;
  if (!qword_2697B3D60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2697B3D60);
  }
  return result;
}

uint64_t sub_24A736D6C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_24A704710(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24A736DD0(uint64_t a1)
{
  return a1;
}

uint64_t sub_24A736E00(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_24A736E14(a1, a2);
  }
  return a1;
}

uint64_t sub_24A736E14(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

unsigned char *storeEnumTagSinglePayload for ScheduledTriggerIdentifier.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24A736F08);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledTriggerIdentifier.CodingKeys()
{
  return &type metadata for ScheduledTriggerIdentifier.CodingKeys;
}

unint64_t sub_24A736F44()
{
  unint64_t result = qword_2697B3D70;
  if (!qword_2697B3D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3D70);
  }
  return result;
}

unint64_t sub_24A736F9C()
{
  unint64_t result = qword_2697B3D78;
  if (!qword_2697B3D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3D78);
  }
  return result;
}

unint64_t sub_24A736FF4()
{
  unint64_t result = qword_2697B3D80;
  if (!qword_2697B3D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3D80);
  }
  return result;
}

uint64_t sub_24A737050(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = 0x6E72757465526F6ELL;
  switch(a3)
  {
    case 1:
      sub_24A763338();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000021;
      goto LABEL_5;
    case 2:
    case 3:
      sub_24A763338();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000017;
      goto LABEL_5;
    case 4:
      return result;
    default:
      sub_24A763338();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD00000000000001CLL;
LABEL_5:
      unint64_t v5 = v4;
      sub_24A762E68();
      return v5;
  }
}

uint64_t sub_24A7371C0()
{
  return sub_24A737050(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

unint64_t sub_24A7371CC()
{
  uint64_t v1 = sub_24A737050(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
  if (v2)
  {
    uint64_t v3 = v1;
    uint64_t v4 = v2;
    sub_24A704710(&qword_2697B33D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24A763FD0;
    *(void *)(inited + 32) = sub_24A762E08();
    *(void *)(inited + 40) = v6;
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = v3;
    *(void *)(inited + 56) = v4;
    return sub_24A70AC18(inited);
  }
  else
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    return sub_24A70AC18(v8);
  }
}

uint64_t sub_24A73728C(uint64_t a1)
{
  unint64_t v2 = sub_24A739560();

  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_24A7372C8(uint64_t a1)
{
  unint64_t v2 = sub_24A739560();

  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_24A737308()
{
  uint64_t v14 = MEMORY[0x263F8EE78];
  sub_24A75348C(0, 3, 0);
  uint64_t v0 = v14;
  swift_bridgeObjectRetain();
  sub_24A762E68();
  sub_24A762E68();
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void *)(v14 + 16);
  unint64_t v1 = *(void *)(v14 + 24);
  if (v2 >= v1 >> 1)
  {
    sub_24A75348C(v1 > 1, v2 + 1, 1);
    uint64_t v0 = v14;
  }
  *(void *)(v0 + 16) = v2 + 1;
  uint64_t v3 = v0 + 16 * v2;
  *(void *)(v3 + 32) = 96;
  *(void *)(v3 + 40) = 0xE100000000000000;
  swift_bridgeObjectRetain();
  sub_24A762E68();
  sub_24A762E68();
  swift_bridgeObjectRelease();
  unint64_t v5 = *(void *)(v0 + 16);
  unint64_t v4 = *(void *)(v0 + 24);
  if (v5 >= v4 >> 1) {
    sub_24A75348C(v4 > 1, v5 + 1, 1);
  }
  *(void *)(v0 + 16) = v5 + 1;
  uint64_t v6 = v0 + 16 * v5;
  *(void *)(v6 + 32) = 96;
  *(void *)(v6 + 40) = 0xE100000000000000;
  swift_bridgeObjectRetain();
  sub_24A762E68();
  sub_24A762E68();
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void *)(v0 + 16);
  unint64_t v7 = *(void *)(v0 + 24);
  if (v8 >= v7 >> 1) {
    sub_24A75348C(v7 > 1, v8 + 1, 1);
  }
  *(void *)(v0 + 16) = v8 + 1;
  uint64_t v9 = v0 + 16 * v8;
  *(void *)(v9 + 32) = 96;
  *(void *)(v9 + 40) = 0xE100000000000000;
  swift_arrayDestroy();
  sub_24A704710((uint64_t *)&unk_2697B2FE0);
  sub_24A704B10();
  uint64_t v10 = sub_24A762DD8();
  uint64_t v12 = v11;
  uint64_t result = swift_release();
  qword_2697B3D88 = v10;
  qword_2697B3D90 = v12;
  return result;
}

uint64_t static ScheduledQuerySendMessageRunner.examplePhrases.getter()
{
  if (qword_2697B2EE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = qword_2697B3D88;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static ScheduledQuerySendMessageRunner.examplePhrases.setter(uint64_t a1, uint64_t a2)
{
  if (qword_2697B2EE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_2697B3D88 = a1;
  qword_2697B3D90 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ScheduledQuerySendMessageRunner.examplePhrases.modify())()
{
  if (qword_2697B2EE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t ScheduledQuerySendMessageRunner.run(query:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return MEMORY[0x270FA2498](sub_24A737724, 0, 0);
}

uint64_t sub_24A737724()
{
  unint64_t v24 = v0;
  if (qword_2697B2E88 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24A762D68();
  sub_24A70D1FC(v1, (uint64_t)qword_2697B3560);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_24A762D48();
  os_log_type_t v3 = sub_24A763088();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[4];
  if (v4)
  {
    uint64_t v6 = v0[3];
    unint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v23 = v8;
    *(_DWORD *)unint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[2] = sub_24A716784(v6, v5, &v23);
    sub_24A763198();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24A6FB000, v2, v3, "Running Send Message: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v8, -1, -1);
    MEMORY[0x24C5CEE90](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t SendMessageRunnerV07extractfG05querySS4name_SS7messagetSgSS_tFZ_0 = _s23ConditionalEngineShared31ScheduledQuerySendMessageRunnerV07extractfG05querySS4name_SS7messagetSgSS_tFZ_0(v0[3], v0[4]);
  v0[5] = v10;
  if (v10)
  {
    uint64_t v13 = SendMessageRunnerV07extractfG05querySS4name_SS7messagetSgSS_tFZ_0;
    uint64_t v14 = v10;
    uint64_t v15 = v11;
    uint64_t v16 = v12;
    v0[6] = v12;
    uint64_t v17 = (void *)swift_task_alloc();
    v0[7] = v17;
    *uint64_t v17 = v0;
    v17[4] = v15;
    v17[5] = v16;
    v17[2] = v13;
    v17[3] = v14;
    v17[1] = sub_24A737A0C;
    return MEMORY[0x270FA2498](sub_24A737BEC, 0, 0);
  }
  else
  {
    uint64_t v19 = v0[3];
    uint64_t v18 = v0[4];
    sub_24A7394B8();
    swift_allocError();
    *(void *)uint64_t v20 = v19;
    *(void *)(v20 + 8) = v18;
    *(unsigned char *)(v20 + 16) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
}

uint64_t sub_24A737A0C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24A737B5C, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    os_log_type_t v3 = *(uint64_t (**)(void, void))(v2 + 8);
    return v3(0, 0);
  }
}

uint64_t sub_24A737B5C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t ScheduledQuerySendMessageRunner.send(name:message:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_24A737BEC, 0, 0);
}

uint64_t sub_24A737BEC()
{
  if (qword_2697B2E88 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24A762D68();
  v0[6] = sub_24A70D1FC(v1, (uint64_t)qword_2697B3560);
  uint64_t v2 = sub_24A762D48();
  os_log_type_t v3 = sub_24A7630B8();
  if (os_log_type_enabled(v2, v3))
  {
    BOOL v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v4 = 0;
    _os_log_impl(&dword_24A6FB000, v2, v3, "Running Send Message", v4, 2u);
    MEMORY[0x24C5CEE90](v4, -1, -1);
  }

  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  void *v5 = v0;
  v5[1] = sub_24A737D40;
  uint64_t v7 = v0[2];
  uint64_t v6 = v0[3];
  return sub_24A7380DC(v7, v6);
}

uint64_t sub_24A737D40(uint64_t a1, uint64_t a2)
{
  BOOL v4 = (void *)*v3;
  v4[8] = a1;
  v4[9] = a2;
  v4[10] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_24A725980;
  }
  else {
    uint64_t v5 = sub_24A737E58;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24A737E58()
{
  uint64_t v1 = v0[9];
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[11] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_24A737F94;
    uint64_t v3 = v0[8];
    uint64_t v4 = v0[5];
    v2[21] = v0[4];
    v2[22] = v4;
    v2[19] = v3;
    v2[20] = v1;
    return MEMORY[0x270FA2498](sub_24A738628, 0, 0);
  }
  else
  {
    uint64_t v6 = v0[2];
    uint64_t v5 = v0[3];
    sub_24A7394B8();
    swift_allocError();
    *(void *)uint64_t v7 = v6;
    *(void *)(v7 + 8) = v5;
    *(unsigned char *)(v7 + 16) = 1;
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_24A737F94()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_24A7380C4;
  }
  else {
    uint64_t v2 = sub_24A719FF0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24A7380C4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24A7380DC(uint64_t a1, uint64_t a2)
{
  v2[12] = a1;
  v2[13] = a2;
  uint64_t v3 = sub_24A762B48();
  v2[14] = v3;
  v2[15] = *(void *)(v3 - 8);
  v2[16] = swift_task_alloc();
  uint64_t v4 = sub_24A704710(&qword_2697B37B8);
  v2[17] = v4;
  v2[18] = *(void *)(v4 - 8);
  v2[19] = swift_task_alloc();
  uint64_t v5 = sub_24A762AD8();
  v2[20] = v5;
  v2[21] = *(void *)(v5 - 8);
  v2[22] = swift_task_alloc();
  uint64_t v6 = sub_24A762B08();
  v2[23] = v6;
  v2[24] = *(void *)(v6 - 8);
  v2[25] = swift_task_alloc();
  uint64_t v7 = sub_24A762B28();
  v2[26] = v7;
  v2[27] = *(void *)(v7 - 8);
  v2[28] = swift_task_alloc();
  uint64_t v8 = sub_24A704710((uint64_t *)&unk_2697B37C0);
  v2[29] = v8;
  v2[30] = *(void *)(v8 - 8);
  v2[31] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A738370, 0, 0);
}

uint64_t sub_24A738370()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[28];
  uint64_t v3 = v0[25];
  uint64_t v4 = v0[24];
  uint64_t v5 = v0[21];
  uint64_t v20 = v0[26];
  uint64_t v21 = v0[22];
  uint64_t v22 = v0[20];
  uint64_t v23 = v0[23];
  uint64_t v6 = type metadata accessor for ConversationEntityRepresentation();
  sub_24A762B18();
  sub_24A70A55C(&qword_2697B3360);
  sub_24A762AB8();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v20);
  id v7 = objc_msgSend(self, sel_defaultEnvironment);
  unint64_t v8 = sub_24A7270D4();
  uint64_t v9 = MEMORY[0x263F24F88];
  v0[2] = v7;
  v0[5] = v8;
  v0[6] = v9;
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v21, *MEMORY[0x263F24F28], v22);
  sub_24A762AF8();
  uint64_t v10 = sub_24A762AE8();
  uint64_t v12 = v11;
  v0[32] = v10;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v23);
  sub_24A704754((uint64_t)(v0 + 2));
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = sub_24A70A55C(&qword_2697B37D8);
  sub_24A7396B0();
  uint64_t v15 = (void *)swift_task_alloc();
  v0[33] = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_24A7190B8;
  uint64_t v16 = v0[31];
  uint64_t v17 = v0[19];
  uint64_t v18 = v0[16];
  return MEMORY[0x270F0C938](v17, v16, v18, ObjectType, v6, v12, v14);
}

uint64_t sub_24A738604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[21] = a3;
  v4[22] = a4;
  v4[19] = a1;
  v4[20] = a2;
  return MEMORY[0x270FA2498](sub_24A738628, 0, 0);
}

uint64_t sub_24A738628()
{
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  id v3 = objc_allocWithZone(MEMORY[0x263F51BB8]);
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_24A762DF8();
  uint64_t v5 = (void *)sub_24A762DF8();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v3, sel_initWithTypeIdentifier_instanceIdentifier_, v4, v5);

  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F51BC0]), sel_init);
  id v8 = objc_allocWithZone(MEMORY[0x263F51D50]);
  id v9 = v6;
  id v10 = objc_msgSend(v8, sel_initWithValue_valueType_, v9, v7);
  v0[23] = v10;

  sub_24A704710(&qword_2697B37B0);
  uint64_t inited = swift_initStackObject();
  v0[24] = inited;
  *(_OWORD *)(inited + 16) = xmmword_24A764A80;
  strcpy((char *)(inited + 32), "conversation");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(void *)(inited + 48) = v10;
  uint64_t v12 = self;
  id v13 = v10;
  swift_bridgeObjectRetain();
  id v14 = objc_msgSend(v12, sel_stringValueType);
  id v15 = objc_allocWithZone(MEMORY[0x263F51D50]);
  v0[17] = v2;
  v0[18] = v1;
  swift_bridgeObjectRetain();
  id v16 = objc_msgSend(v15, sel_initWithValue_valueType_, sub_24A7635D8(), v14);

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = 0x746E65746E6F63;
  *(void *)(inited + 64) = 0xE700000000000000;
  *(void *)(inited + 72) = v16;
  *(void *)&xmmword_2697B98F8 = 0xD000000000000013;
  *((void *)&xmmword_2697B98F8 + 1) = 0x800000024A767DC0;
  swift_bridgeObjectRelease();
  v0[15] = &type metadata for ActionExecutionOptions;
  v0[16] = &off_26FE3A6B8;
  uint64_t v17 = swift_allocObject();
  v0[12] = v17;
  *(void *)(v17 + 16) = 0xD000000000000013;
  *(void *)(v17 + 24) = 0x800000024A767DC0;
  *(_WORD *)(v17 + 32) = 513;
  *(void *)(v17 + 40) = 0;
  *(unsigned char *)(v17 + 48) = 1;
  *(_OWORD *)(v17 + 56) = 0u;
  *(_OWORD *)(v17 + 72) = 0u;
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_2697B2FF0 + dword_2697B2FF0);
  uint64_t v18 = (void *)swift_task_alloc();
  v0[25] = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_24A7198A8;
  return v20(0x6C706552646E6553, 0xEF746E65746E4979, inited, 0, 1, (uint64_t)(v0 + 12), 0, 0);
}

uint64_t sub_24A73897C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_24A71651C;
  v5[3] = a1;
  v5[4] = a2;
  return MEMORY[0x270FA2498](sub_24A737724, 0, 0);
}

uint64_t _s23ConditionalEngineShared31ScheduledQuerySendMessageRunnerV07extractfG05querySS4name_SS7messagetSgSS_tFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v66 = a1;
  uint64_t v67 = a2;
  uint64_t v2 = sub_24A704710(&qword_2697B3DD8);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v58 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v60 = (char *)&v55 - v6;
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v55 - v7;
  uint64_t v9 = sub_24A704710(&qword_2697B3DE0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v56 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  char v57 = (char *)&v55 - v14;
  MEMORY[0x270FA5388](v13);
  id v16 = (char *)&v55 - v15;
  uint64_t v17 = sub_24A704710(&qword_2697B3DE8);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v59 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v64 = (char *)&v55 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v55 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v55 - v26;
  sub_24A704710(&qword_2697B3DF0);
  sub_24A762948();
  sub_24A762968();
  BOOL v28 = *(void (**)(char *, uint64_t))(v18 + 8);
  uint64_t v61 = v18 + 8;
  uint64_t v63 = v28;
  v28(v25, v17);
  uint64_t v62 = v27;
  sub_24A762958();
  uint64_t v65 = v10;
  uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v30 = v9;
  if (v29(v8, 1, v9) == 1)
  {
    sub_24A739650((uint64_t)v8);
    sub_24A762948();
    sub_24A762968();
    uint64_t v31 = v63;
    v63(v25, v17);
    uint64_t v32 = (uint64_t)v60;
    sub_24A762958();
    uint64_t v33 = v30;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v32, 1, v30) == 1)
    {
      sub_24A739650(v32);
      sub_24A762948();
      uint64_t v34 = v59;
      sub_24A762968();
      v31(v25, v17);
      uint64_t v35 = (uint64_t)v58;
      sub_24A762958();
      uint64_t v36 = v65;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v35, 1, v33) == 1)
      {
        v31(v34, v17);
        v31(v64, v17);
        v31(v62, v17);
        sub_24A739650(v35);
        return 0;
      }
      unsigned int v49 = v56;
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v56, v35, v33);
      if (qword_2697B2E88 != -1) {
        swift_once();
      }
      uint64_t v50 = sub_24A762D68();
      sub_24A70D1FC(v50, (uint64_t)qword_2697B3560);
      uint64_t v51 = sub_24A762D48();
      os_log_type_t v52 = sub_24A7630B8();
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v53 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v53 = 0;
        _os_log_impl(&dword_24A6FB000, v51, v52, "Matched text message", v53, 2u);
        MEMORY[0x24C5CEE90](v53, -1, -1);
      }

      swift_getKeyPath();
      sub_24A762998();
      swift_release();
      uint64_t v37 = MEMORY[0x24C5CDEE0](v68, v69, v70, v71);
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      sub_24A762998();
      swift_release();
      MEMORY[0x24C5CDEE0](v68, v69, v70, v71);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v49, v33);
      long long v48 = v63;
      v63(v59, v17);
      v48(v64, v17);
    }
    else
    {
      uint64_t v42 = v65;
      os_log_type_t v43 = v57;
      (*(void (**)(char *, uint64_t, uint64_t))(v65 + 32))(v57, v32, v33);
      if (qword_2697B2E88 != -1) {
        swift_once();
      }
      uint64_t v44 = sub_24A762D68();
      sub_24A70D1FC(v44, (uint64_t)qword_2697B3560);
      uint64_t v45 = sub_24A762D48();
      os_log_type_t v46 = sub_24A7630B8();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v47 = 0;
        _os_log_impl(&dword_24A6FB000, v45, v46, "Matched text message with comma", v47, 2u);
        MEMORY[0x24C5CEE90](v47, -1, -1);
      }

      swift_getKeyPath();
      sub_24A762998();
      swift_release();
      uint64_t v37 = MEMORY[0x24C5CDEE0](v68, v69, v70, v71);
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      sub_24A762998();
      swift_release();
      MEMORY[0x24C5CDEE0](v68, v69, v70, v71);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v33);
      long long v48 = v63;
      v63(v64, v17);
    }
    v48(v62, v17);
    return v37;
  }
  (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v16, v8, v9);
  if (qword_2697B2E88 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_24A762D68();
  sub_24A70D1FC(v38, (uint64_t)qword_2697B3560);
  unsigned int v39 = sub_24A762D48();
  os_log_type_t v40 = sub_24A7630B8();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v41 = 0;
    _os_log_impl(&dword_24A6FB000, v39, v40, "Matched send message", v41, 2u);
    MEMORY[0x24C5CEE90](v41, -1, -1);
  }

  swift_getKeyPath();
  sub_24A762998();
  swift_release();
  uint64_t v37 = MEMORY[0x24C5CDEE0](v68, v69, v70, v71);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_24A762998();
  swift_release();
  MEMORY[0x24C5CDEE0](v68, v69, v70, v71);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v16, v9);
  v63(v62, v17);
  return v37;
}

unint64_t sub_24A7394B8()
{
  unint64_t result = qword_2697B3DA0;
  if (!qword_2697B3DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3DA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQuerySendMessageRunner()
{
  return &type metadata for ScheduledQuerySendMessageRunner;
}

ValueMetadata *type metadata accessor for SendMessageRunnerError()
{
  return &type metadata for SendMessageRunnerError;
}

unint64_t sub_24A739530(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24A739560();
  unint64_t result = sub_24A7395B4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_24A739560()
{
  unint64_t result = qword_2697B3DC8;
  if (!qword_2697B3DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3DC8);
  }
  return result;
}

unint64_t sub_24A7395B4()
{
  unint64_t result = qword_2697B3DD0;
  if (!qword_2697B3DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3DD0);
  }
  return result;
}

uint64_t sub_24A739608()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 88, 7);
}

uint64_t sub_24A739650(uint64_t a1)
{
  uint64_t v2 = sub_24A704710(&qword_2697B3DD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24A7396B0()
{
  uint64_t v0 = sub_24A704710(&qword_2697B3ED8);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24A762C78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  return sub_24A762B38();
}

uint64_t sub_24A739768(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = 0x6E72757465526F6ELL;
  switch(a3)
  {
    case 1:
      sub_24A763338();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD00000000000001ALL;
      goto LABEL_5;
    case 2:
    case 3:
      sub_24A763338();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000017;
      goto LABEL_5;
    case 4:
      return result;
    default:
      sub_24A763338();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD00000000000001CLL;
LABEL_5:
      unint64_t v5 = v4;
      sub_24A762E68();
      return v5;
  }
}

uint64_t sub_24A7398D8()
{
  return sub_24A739768(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

unint64_t sub_24A7398E4()
{
  uint64_t v1 = sub_24A739768(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
  if (v2)
  {
    uint64_t v3 = v1;
    uint64_t v4 = v2;
    sub_24A704710(&qword_2697B33D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24A763FD0;
    *(void *)(inited + 32) = sub_24A762E08();
    *(void *)(inited + 40) = v6;
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = v3;
    *(void *)(inited + 56) = v4;
    return sub_24A70AC18(inited);
  }
  else
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    return sub_24A70AC18(v8);
  }
}

uint64_t sub_24A7399A4(uint64_t a1)
{
  unint64_t v2 = sub_24A73BB50();

  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_24A7399E0(uint64_t a1)
{
  unint64_t v2 = sub_24A73BB50();

  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_24A739A20()
{
  uint64_t v8 = MEMORY[0x263F8EE78];
  sub_24A75348C(0, 5, 0);
  for (uint64_t i = 0; i != 80; i += 16)
  {
    swift_bridgeObjectRetain();
    sub_24A762E68();
    sub_24A762E68();
    swift_bridgeObjectRelease();
    unint64_t v2 = *(void *)(v8 + 16);
    unint64_t v1 = *(void *)(v8 + 24);
    if (v2 >= v1 >> 1) {
      sub_24A75348C(v1 > 1, v2 + 1, 1);
    }
    *(void *)(v8 + 16) = v2 + 1;
    uint64_t v3 = v8 + 16 * v2;
    *(void *)(v3 + 32) = 96;
    *(void *)(v3 + 40) = 0xE100000000000000;
  }
  swift_arrayDestroy();
  sub_24A704710((uint64_t *)&unk_2697B2FE0);
  sub_24A704B10();
  uint64_t v4 = sub_24A762DD8();
  uint64_t v6 = v5;
  uint64_t result = swift_release();
  qword_2697B3DF8 = v4;
  qword_2697B3E00 = v6;
  return result;
}

uint64_t static ScheduledQuerySetFocusRunner.examplePhrases.getter()
{
  if (qword_2697B2EE8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = qword_2697B3DF8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static ScheduledQuerySetFocusRunner.examplePhrases.setter(uint64_t a1, uint64_t a2)
{
  if (qword_2697B2EE8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_2697B3DF8 = a1;
  qword_2697B3E00 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ScheduledQuerySetFocusRunner.examplePhrases.modify())()
{
  if (qword_2697B2EE8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t ScheduledQuerySetFocusRunner.run(query:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return MEMORY[0x270FA2498](sub_24A739DD4, 0, 0);
}

uint64_t sub_24A739DD4()
{
  uint64_t v20 = v0;
  if (qword_2697B2E88 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24A762D68();
  sub_24A70D1FC(v1, (uint64_t)qword_2697B3560);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_24A762D48();
  os_log_type_t v3 = sub_24A763088();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[4];
  if (v4)
  {
    uint64_t v6 = v0[3];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v19 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[2] = sub_24A716784(v6, v5, &v19);
    sub_24A763198();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24A6FB000, v2, v3, "Running Set Focus: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v8, -1, -1);
    MEMORY[0x24C5CEE90](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t SetFocusRunnerV07extractG4Type5querySSSgSS_tFZ_0 = _s23ConditionalEngineShared28ScheduledQuerySetFocusRunnerV07extractG4Type5querySSSgSS_tFZ_0();
  v0[5] = v10;
  if (v10)
  {
    uint64_t v11 = SetFocusRunnerV07extractG4Type5querySSSgSS_tFZ_0;
    uint64_t v12 = v10;
    uint64_t v13 = (void *)swift_task_alloc();
    v0[6] = v13;
    void *v13 = v0;
    v13[2] = v11;
    v13[3] = v12;
    v13[1] = sub_24A725228;
    return MEMORY[0x270FA2498](sub_24A73A0CC, 0, 0);
  }
  else
  {
    uint64_t v15 = v0[3];
    uint64_t v14 = v0[4];
    sub_24A73BA14();
    swift_allocError();
    *(void *)uint64_t v16 = v15;
    *(void *)(v16 + 8) = v14;
    *(unsigned char *)(v16 + 16) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
}

uint64_t ScheduledQuerySetFocusRunner.setFocus(focusType:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_24A73A0CC, 0, 0);
}

uint64_t sub_24A73A0CC()
{
  if (qword_2697B2E88 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24A762D68();
  v0[4] = sub_24A70D1FC(v1, (uint64_t)qword_2697B3560);
  uint64_t v2 = sub_24A762D48();
  os_log_type_t v3 = sub_24A7630B8();
  if (os_log_type_enabled(v2, v3))
  {
    BOOL v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v4 = 0;
    _os_log_impl(&dword_24A6FB000, v2, v3, "Running Set Focus", v4, 2u);
    MEMORY[0x24C5CEE90](v4, -1, -1);
  }

  unint64_t v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  void *v5 = v0;
  v5[1] = sub_24A73A220;
  uint64_t v7 = v0[2];
  uint64_t v6 = v0[3];
  return sub_24A73A46C(v7, v6);
}

uint64_t sub_24A73A220(uint64_t a1, uint64_t a2)
{
  BOOL v4 = (void *)*v3;
  v4[6] = a1;
  v4[7] = a2;
  v4[8] = v2;
  swift_task_dealloc();
  if (v2) {
    unint64_t v5 = sub_24A725968;
  }
  else {
    unint64_t v5 = sub_24A73A338;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24A73A338()
{
  uint64_t v1 = v0[7];
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[9] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_24A725764;
    v2[18] = v0[6];
    v2[19] = v1;
    return MEMORY[0x270FA2498](sub_24A73A9F8, 0, 0);
  }
  else
  {
    uint64_t v4 = v0[2];
    uint64_t v3 = v0[3];
    sub_24A73BA14();
    swift_allocError();
    *(void *)uint64_t v5 = v4;
    *(void *)(v5 + 8) = v3;
    *(unsigned char *)(v5 + 16) = 1;
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_24A73A46C(uint64_t a1, uint64_t a2)
{
  v2[12] = a1;
  v2[13] = a2;
  uint64_t v3 = sub_24A762B48();
  v2[14] = v3;
  v2[15] = *(void *)(v3 - 8);
  v2[16] = swift_task_alloc();
  uint64_t v4 = sub_24A704710(&qword_2697B3EC0);
  v2[17] = v4;
  v2[18] = *(void *)(v4 - 8);
  v2[19] = swift_task_alloc();
  uint64_t v5 = sub_24A762AD8();
  v2[20] = v5;
  v2[21] = *(void *)(v5 - 8);
  v2[22] = swift_task_alloc();
  uint64_t v6 = sub_24A762B08();
  v2[23] = v6;
  v2[24] = *(void *)(v6 - 8);
  v2[25] = swift_task_alloc();
  uint64_t v7 = sub_24A762B28();
  v2[26] = v7;
  v2[27] = *(void *)(v7 - 8);
  v2[28] = swift_task_alloc();
  uint64_t v8 = sub_24A704710(&qword_2697B3EC8);
  v2[29] = v8;
  v2[30] = *(void *)(v8 - 8);
  v2[31] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A73A700, 0, 0);
}

uint64_t sub_24A73A700()
{
  uint64_t v23 = type metadata accessor for FocusEntityRepresentation();
  if (qword_2697B2EF0 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v3 = v0[25];
  uint64_t v21 = v0[24];
  uint64_t v22 = v0[23];
  uint64_t v4 = v0[21];
  uint64_t v18 = v0[26];
  uint64_t v19 = v0[22];
  uint64_t v20 = v0[20];
  swift_bridgeObjectRetain();
  sub_24A762B18();
  swift_bridgeObjectRelease();
  sub_24A73BE14(&qword_2697B3EA8);
  sub_24A762AB8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v18);
  id v5 = objc_msgSend(self, sel_defaultEnvironment);
  unint64_t v6 = sub_24A7270D4();
  uint64_t v7 = MEMORY[0x263F24F88];
  v0[2] = v5;
  v0[5] = v6;
  v0[6] = v7;
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v19, *MEMORY[0x263F24F28], v20);
  sub_24A762AF8();
  uint64_t v8 = sub_24A762AE8();
  uint64_t v10 = v9;
  v0[32] = v8;
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v3, v22);
  sub_24A704754((uint64_t)(v0 + 2));
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = sub_24A73BE14(&qword_2697B3ED0);
  sub_24A7396B0();
  uint64_t v13 = (void *)swift_task_alloc();
  v0[33] = v13;
  void *v13 = v0;
  v13[1] = sub_24A7190B8;
  uint64_t v14 = v0[31];
  uint64_t v15 = v0[19];
  uint64_t v16 = v0[16];
  return MEMORY[0x270F0C938](v15, v14, v16, ObjectType, v23, v10, v12);
}

uint64_t sub_24A73A9D8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 144) = a1;
  *(void *)(v2 + 152) = a2;
  return MEMORY[0x270FA2498](sub_24A73A9F8, 0, 0);
}

uint64_t sub_24A73A9F8()
{
  id v1 = objc_allocWithZone(MEMORY[0x263F51BB8]);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_24A762DF8();
  uint64_t v3 = (void *)sub_24A762DF8();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v1, sel_initWithTypeIdentifier_instanceIdentifier_, v2, v3);

  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F51BC0]), sel_init);
  id v6 = objc_allocWithZone(MEMORY[0x263F51D50]);
  id v7 = v4;
  id v8 = objc_msgSend(v6, sel_initWithValue_valueType_, v7, v5);
  v0[20] = v8;

  id v9 = objc_msgSend(self, sel_BOOLValueType);
  id v10 = objc_allocWithZone(MEMORY[0x263F51D50]);
  v0[17] = 1;
  id v11 = objc_msgSend(v10, sel_initWithValue_valueType_, sub_24A7635D8(), v9);
  v0[21] = v11;

  swift_unknownObjectRelease();
  sub_24A704710(&qword_2697B37B0);
  uint64_t inited = swift_initStackObject();
  v0[22] = inited;
  *(_OWORD *)(inited + 16) = xmmword_24A764A80;
  *(void *)(inited + 32) = 0x7375636F66;
  *(void *)(inited + 40) = 0xE500000000000000;
  *(void *)(inited + 48) = v8;
  *(void *)(inited + 56) = 0x656C62616E65;
  *(void *)(inited + 64) = 0xE600000000000000;
  *(void *)(inited + 72) = v11;
  *(void *)&xmmword_2697B98F8 = 0xD000000000000015;
  *((void *)&xmmword_2697B98F8 + 1) = 0x800000024A768C10;
  id v13 = v8;
  id v14 = v11;
  swift_bridgeObjectRelease();
  v0[15] = &type metadata for ActionExecutionOptions;
  v0[16] = &off_26FE3A6B8;
  uint64_t v15 = swift_allocObject();
  v0[12] = v15;
  *(void *)(v15 + 16) = 0xD000000000000015;
  *(void *)(v15 + 24) = 0x800000024A768C10;
  *(_WORD *)(v15 + 32) = 513;
  *(void *)(v15 + 40) = 0;
  *(unsigned char *)(v15 + 48) = 1;
  *(_OWORD *)(v15 + 56) = 0u;
  *(_OWORD *)(v15 + 72) = 0u;
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_2697B2FF0 + dword_2697B2FF0);
  uint64_t v16 = (void *)swift_task_alloc();
  v0[23] = v16;
  void *v16 = v0;
  v16[1] = sub_24A73AD18;
  return v18(0x7375636F46746553, 0xED00006574617453, inited, 0, 1, (uint64_t)(v0 + 12), 0, 0);
}

uint64_t sub_24A73AD18()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    uint64_t v3 = sub_24A73AEC0;
  }
  else
  {
    sub_24A704754(v2 + 96);
    uint64_t v3 = sub_24A73AE58;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24A73AE58()
{
  id v1 = *(void **)(v0 + 160);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24A73AEC0()
{
  id v1 = *(void **)(v0 + 168);

  sub_24A704754(v0 + 96);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24A73AF34(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_24A71651C;
  v5[3] = a1;
  v5[4] = a2;
  return MEMORY[0x270FA2498](sub_24A739DD4, 0, 0);
}

void sub_24A73AFE4()
{
  qword_2697B3E08 = 0x746E457375636F46;
  unk_2697B3E10 = 0xEB00000000797469;
}

uint64_t sub_24A73B010(uint64_t a1)
{
  uint64_t v2 = sub_24A762A18();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v6 = sub_24A762A78();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

unint64_t sub_24A73B118()
{
  return 0xD000000000000015;
}

uint64_t sub_24A73B134()
{
  if (qword_2697B2EF0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_2697B3E08;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_24A73B19C(uint64_t a1)
{
  uint64_t v3 = sub_24A73BE14(&qword_2697B3EB8);

  return MEMORY[0x270F0CBC0](a1, v1, v3);
}

uint64_t sub_24A73B1F8()
{
  uint64_t v1 = sub_24A73BE14(&qword_2697B3EA8);

  return MEMORY[0x270F0C9E8](v0, v1);
}

uint64_t sub_24A73B244(uint64_t a1)
{
  uint64_t v3 = sub_24A73BE14(&qword_2697B3EB8);

  return MEMORY[0x270F0CBA8](a1, v1, v3);
}

uint64_t _s23ConditionalEngineShared28ScheduledQuerySetFocusRunnerV07extractG4Type5querySSSgSS_tFZ_0()
{
  uint64_t v0 = sub_24A704710(&qword_2697B3EE0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v39 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24A704710(&qword_2697B3EE8);
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  MEMORY[0x270FA5388](v3);
  unsigned int v39 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_24A704710(&qword_2697B3EF0);
  uint64_t v46 = *(void *)(v40 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v40);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v47 = (char *)&v39 - v8;
  uint64_t v9 = sub_24A704710(&qword_2697B3EF8);
  MEMORY[0x270FA5388](v9 - 8);
  id v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24A704710(&qword_2697B3F00);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v39 - v17;
  sub_24A704710(&qword_2697B3F08);
  sub_24A762948();
  sub_24A762968();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v44 = v13 + 8;
  uint64_t v45 = v19;
  v19(v16, v12);
  os_log_type_t v43 = v18;
  sub_24A762958();
  uint64_t v20 = sub_24A704710(&qword_2697B3F10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v11, 1, v20) == 1)
  {
    sub_24A70FD54((uint64_t)v11, &qword_2697B3EF8);
    sub_24A704710(&qword_2697B3F18);
    sub_24A762948();
    uint64_t v21 = v40;
    sub_24A762968();
    uint64_t v22 = *(void (**)(char *, uint64_t))(v46 + 8);
    uint64_t v23 = v7;
    uint64_t v24 = v46 + 8;
    v22(v23, v21);
    sub_24A762958();
    uint64_t v26 = v41;
    uint64_t v25 = v42;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v2, 1, v42) == 1)
    {
      v22(v47, v21);
      v45(v43, v12);
      sub_24A70FD54((uint64_t)v2, &qword_2697B3EE0);
      return 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v39, v2, v25);
      if (qword_2697B2E88 != -1) {
        swift_once();
      }
      uint64_t v46 = v24;
      uint64_t v32 = sub_24A762D68();
      sub_24A70D1FC(v32, (uint64_t)qword_2697B3560);
      uint64_t v33 = sub_24A762D48();
      os_log_type_t v34 = sub_24A7630B8();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v35 = 0;
        _os_log_impl(&dword_24A6FB000, v33, v34, "Matched set focus", v35, 2u);
        MEMORY[0x24C5CEE90](v35, -1, -1);
      }

      swift_getKeyPath();
      uint64_t v36 = v42;
      uint64_t v37 = v39;
      sub_24A762998();
      swift_release();
      uint64_t v27 = MEMORY[0x24C5CDEE0](v48, v49, v50, v51);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v37, v36);
      v22(v47, v21);
      v45(v43, v12);
    }
  }
  else
  {
    sub_24A70FD54((uint64_t)v11, &qword_2697B3EF8);
    if (qword_2697B2E88 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_24A762D68();
    sub_24A70D1FC(v28, (uint64_t)qword_2697B3560);
    uint64_t v29 = sub_24A762D48();
    os_log_type_t v30 = sub_24A7630B8();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_24A6FB000, v29, v30, "Matched set focus", v31, 2u);
      MEMORY[0x24C5CEE90](v31, -1, -1);
    }

    v45(v43, v12);
    return 0x6420746F6E206F64;
  }
  return v27;
}

unint64_t sub_24A73BA14()
{
  unint64_t result = qword_2697B3E20;
  if (!qword_2697B3E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3E20);
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQuerySetFocusRunner()
{
  return &type metadata for ScheduledQuerySetFocusRunner;
}

uint64_t type metadata accessor for FocusEntityRepresentation()
{
  uint64_t result = qword_2697B3E58;
  if (!qword_2697B3E58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24A73BAC4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24A73BB04()
{
  return type metadata accessor for FocusEntityRepresentation();
}

ValueMetadata *type metadata accessor for SetFocusRunnerError()
{
  return &type metadata for SetFocusRunnerError;
}

unint64_t sub_24A73BB20(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24A73BB50();
  unint64_t result = sub_24A73BBA4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_24A73BB50()
{
  unint64_t result = qword_2697B3E68;
  if (!qword_2697B3E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3E68);
  }
  return result;
}

unint64_t sub_24A73BBA4()
{
  unint64_t result = qword_2697B3E70;
  if (!qword_2697B3E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3E70);
  }
  return result;
}

uint64_t sub_24A73BBF8()
{
  return sub_24A73BE14(&qword_2697B3E78);
}

uint64_t sub_24A73BC2C()
{
  return sub_24A73BE14(&qword_2697B3E80);
}

uint64_t sub_24A73BC60()
{
  return sub_24A73BE14(&qword_2697B3E88);
}

uint64_t sub_24A73BC94()
{
  return sub_24A73BE14(&qword_2697B3E90);
}

uint64_t sub_24A73BCC8()
{
  return sub_24A73BE14(&qword_2697B3E98);
}

uint64_t sub_24A73BCFC()
{
  return sub_24A73BE14(&qword_2697B3EA0);
}

uint64_t sub_24A73BD30()
{
  return sub_24A73BE14(&qword_2697B3EA8);
}

uint64_t sub_24A73BD64()
{
  return sub_24A73BE14(&qword_2697B3EB0);
}

uint64_t sub_24A73BD98()
{
  return sub_24A73BE14(&qword_2697B3EB8);
}

uint64_t sub_24A73BDCC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 88, 7);
}

uint64_t sub_24A73BE14(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FocusEntityRepresentation();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A73BE58(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    uint64_t v8 = swift_bridgeObjectRetain() + 40;
    do
    {
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 - 8);
      swift_retain();
      v9(a2, a3, a4);
      swift_release();
      v8 += 16;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_24A73BEF4()
{
  return 0xD000000000000020;
}

unint64_t sub_24A73BF24()
{
  return sub_24A74D3EC(*v0);
}

uint64_t sub_24A73BF2C(uint64_t a1)
{
  unint64_t v2 = sub_24A74D1F0();

  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_24A73BF68(uint64_t a1)
{
  unint64_t v2 = sub_24A74D1F0();

  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t ScheduledQueryStandardRunner.run(query:)(uint64_t a1, uint64_t a2)
{
  v2[8] = a1;
  v2[9] = a2;
  uint64_t v3 = sub_24A762CE8();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  uint64_t v4 = sub_24A762CA8();
  v2[14] = v4;
  v2[15] = *(void *)(v4 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  uint64_t v5 = sub_24A762D68();
  v2[20] = v5;
  v2[21] = *(void *)(v5 - 8);
  v2[22] = swift_task_alloc();
  uint64_t v6 = sub_24A762CD8();
  v2[23] = v6;
  v2[24] = *(void *)(v6 - 8);
  v2[25] = swift_task_alloc();
  sub_24A704710(&qword_2697B3F28);
  v2[26] = swift_task_alloc();
  sub_24A704710(&qword_2697B3F30);
  v2[27] = swift_task_alloc();
  sub_24A704710(&qword_2697B3F38);
  v2[28] = swift_task_alloc();
  uint64_t v7 = sub_24A762788();
  v2[29] = v7;
  v2[30] = *(void *)(v7 - 8);
  v2[31] = swift_task_alloc();
  uint64_t v8 = sub_24A7627D8();
  v2[32] = v8;
  v2[33] = *(void *)(v8 - 8);
  v2[34] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A73C2F8, 0, 0);
}

uint64_t sub_24A73C2F8()
{
  uint64_t v72 = v0;
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72);
  ETARunner = (objc_class *)type metadata accessor for ScheduledQueryETARunner();
  static ScheduledQueryETARunner.extractActionType(query:)(v1, v2, v69);
  uint64_t v4 = v69[0];
  uint64_t v5 = v69[1];
  *(void *)(v0 + 280) = v69[0];
  *(void *)(v0 + 288) = v5;
  uint64_t v6 = v70;
  uint64_t v7 = v71;
  *(void *)(v0 + 296) = v70;
  *(void *)(v0 + 304) = v7;
  if (v7)
  {
    *(void *)(v0 + 312) = objc_msgSend(objc_allocWithZone(ETARunner), sel_init);
    *(void *)(v0 + 16) = v4;
    *(void *)(v0 + 24) = v5;
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 320) = v8;
    void *v8 = v0;
    v8[1] = sub_24A73CAD4;
    return sub_24A714700((_OWORD *)(v0 + 16), v6, v7);
  }
  else
  {
    uint64_t SendMessageRunnerV07extractfG05querySS4name_SS7messagetSgSS_tFZ_0 = _s23ConditionalEngineShared31ScheduledQuerySendMessageRunnerV07extractfG05querySS4name_SS7messagetSgSS_tFZ_0(*(void *)(v0 + 64), *(void *)(v0 + 72));
    *(void *)(v0 + 352) = v11;
    if (v11)
    {
      uint64_t v14 = SendMessageRunnerV07extractfG05querySS4name_SS7messagetSgSS_tFZ_0;
      uint64_t v15 = v11;
      uint64_t v16 = v12;
      uint64_t v17 = v13;
      *(void *)(v0 + 360) = v13;
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 368) = v18;
      *uint64_t v18 = v0;
      v18[1] = sub_24A73CD2C;
      return ScheduledQuerySendMessageRunner.send(name:message:)(v14, v15, v16, v17);
    }
    else
    {
      uint64_t HomeAccessoryToggleRunnerV07extracthG05querySSSgSS_tFZ_0 = _s23ConditionalEngineShared39ScheduledQueryHomeAccessoryToggleRunnerV07extracthG05querySSSgSS_tFZ_0();
      *(void *)(v0 + 384) = v20;
      if (v20)
      {
        uint64_t v21 = HomeAccessoryToggleRunnerV07extracthG05querySSSgSS_tFZ_0;
        uint64_t v22 = v20;
        uint64_t v23 = (void *)swift_task_alloc();
        *(void *)(v0 + 392) = v23;
        *uint64_t v23 = v0;
        v23[1] = sub_24A73CF3C;
        return ScheduledQueryHomeAccessoryToggleRunner.toggle(accessory:)(v21, v22);
      }
      else
      {
        uint64_t SetFocusRunnerV07extractG4Type5querySSSgSS_tFZ_0 = _s23ConditionalEngineShared28ScheduledQuerySetFocusRunnerV07extractG4Type5querySSSgSS_tFZ_0();
        *(void *)(v0 + 408) = v25;
        if (v25)
        {
          uint64_t v26 = SetFocusRunnerV07extractG4Type5querySSSgSS_tFZ_0;
          uint64_t v27 = v25;
          uint64_t v28 = (void *)swift_task_alloc();
          *(void *)(v0 + 416) = v28;
          *uint64_t v28 = v0;
          v28[1] = sub_24A73D158;
          return ScheduledQuerySetFocusRunner.setFocus(focusType:)(v26, v27);
        }
        else
        {
          if (qword_2697B2E88 != -1) {
            swift_once();
          }
          *(void *)(v0 + 432) = sub_24A70D1FC(*(void *)(v0 + 160), (uint64_t)qword_2697B3560);
          swift_bridgeObjectRetain_n();
          uint64_t v29 = sub_24A762D48();
          os_log_type_t v30 = sub_24A763088();
          BOOL v31 = os_log_type_enabled(v29, v30);
          unint64_t v32 = *(void *)(v0 + 72);
          if (v31)
          {
            uint64_t v67 = *(void *)(v0 + 64);
            uint64_t v33 = (uint8_t *)swift_slowAlloc();
            uint64_t v34 = swift_slowAlloc();
            v69[0] = v34;
            *(_DWORD *)uint64_t v33 = 136315138;
            swift_bridgeObjectRetain();
            *(void *)(v0 + 56) = sub_24A716784(v67, v32, v69);
            sub_24A763198();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_24A6FB000, v29, v30, "Running plan: %s", v33, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24C5CEE90](v34, -1, -1);
            MEMORY[0x24C5CEE90](v33, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          uint64_t v35 = *(void *)(v0 + 264);
          uint64_t v36 = *(void *)(v0 + 248);
          uint64_t v66 = *(void *)(v0 + 272);
          uint64_t v68 = *(void *)(v0 + 256);
          uint64_t v38 = *(void *)(v0 + 232);
          uint64_t v37 = *(void *)(v0 + 240);
          uint64_t v40 = *(void *)(v0 + 216);
          uint64_t v39 = *(void *)(v0 + 224);
          uint64_t v41 = *(void *)(v0 + 208);
          uint64_t v43 = *(void *)(v0 + 64);
          uint64_t v42 = *(void *)(v0 + 72);
          swift_bridgeObjectRetain();
          MEMORY[0x24C5CD820](v43, v42);
          (*(void (**)(uint64_t, void, uint64_t))(v37 + 104))(v36, *MEMORY[0x263F4C2C0], v38);
          uint64_t v44 = sub_24A762798();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v39, 1, 1, v44);
          uint64_t v45 = sub_24A762568();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v40, 1, 1, v45);
          uint64_t v46 = sub_24A7627A8();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v41, 1, 1, v46);
          sub_24A7627B8();
          (*(void (**)(uint64_t, void, uint64_t))(v35 + 104))(v66, *MEMORY[0x263F4C508], v68);
          if (qword_2697B2EA8 != -1) {
            swift_once();
          }
          uint64_t v48 = *(void *)(v0 + 168);
          uint64_t v47 = *(void *)(v0 + 176);
          uint64_t v49 = *(void *)(v0 + 160);
          uint64_t v50 = sub_24A70D1FC(v49, (uint64_t)qword_2697B35C0);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v47, v50, v49);
          sub_24A762CB8();
          sub_24A762CC8();
          sub_24A762C88();
          uint64_t v51 = sub_24A762CC8();
          os_signpost_type_t v52 = sub_24A763108();
          if (sub_24A763168())
          {
            uint64_t v53 = *(void *)(v0 + 144);
            uint64_t v54 = *(void *)(v0 + 112);
            uint64_t v55 = *(void *)(v0 + 120);
            uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16);
            unint64_t v57 = (v55 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
            v56(v53, *(void *)(v0 + 152), v54);
            uint64_t v58 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v58 = 0;
            os_signpost_id_t v59 = sub_24A762C98();
            _os_signpost_emit_with_name_impl(&dword_24A6FB000, v51, v52, v59, "CE.Runner.Standard", "", v58, 2u);
            MEMORY[0x24C5CEE90](v58, -1, -1);

            (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53, v54);
          }
          else
          {
            uint64_t v60 = *(void *)(v0 + 120);

            uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 16);
            unint64_t v57 = (v60 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
          }
          uint64_t v62 = *(void *)(v0 + 144);
          uint64_t v61 = *(void *)(v0 + 152);
          uint64_t v63 = *(void *)(v0 + 112);
          *(void *)(v0 + 440) = v56;
          *(void *)(v0 + 448) = v57;
          v56(v62, v61, v63);
          sub_24A762D28();
          swift_allocObject();
          *(void *)(v0 + 456) = sub_24A762D18();
          uint64_t v64 = (void *)swift_task_alloc();
          *(void *)(v0 + 464) = v64;
          void *v64 = v0;
          v64[1] = sub_24A73D374;
          uint64_t v65 = *(void *)(v0 + 272);
          return sub_24A73E16C(v65);
        }
      }
    }
  }
}

uint64_t sub_24A73CAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v3;
  *(void *)(*(void *)v3 + 328) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_24A73D854;
  }
  else
  {
    uint64_t v8 = v6[37];
    uint64_t v9 = v6[38];
    uint64_t v10 = v6[35];
    unint64_t v11 = v6[36];
    v6[42] = a2;
    v6[43] = a1;
    sub_24A74C3DC(v10, v11, v8, v9);
    uint64_t v7 = sub_24A73CC08;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_24A73CC08()
{
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v4 = *(void *)(v0 + 344);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v1(v4, v3);
}

uint64_t sub_24A73CD2C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 376) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24A73D988, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void, void))(v2 + 8);
    return v3(0, 0);
  }
}

uint64_t sub_24A73CF3C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 400) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24A73DAA8, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void, void))(v2 + 8);
    return v3(0, 0);
  }
}

uint64_t sub_24A73D158()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 424) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24A73DBB8, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void, void))(v2 + 8);
    return v3(0, 0);
  }
}

uint64_t sub_24A73D374()
{
  *(void *)(*(void *)v1 + 472) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24A73DCC8;
  }
  else {
    uint64_t v2 = sub_24A73D488;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24A73D488()
{
  sub_24A74C378();
  sub_24A74BD7C();
  sub_24A74C3CC(v1);
  uint64_t v2 = sub_24A762CC8();
  sub_24A762D08();
  os_signpost_type_t v3 = sub_24A7630F8();
  if (sub_24A763168())
  {
    uint64_t v4 = *(void *)(v0 + 104);
    uint64_t v6 = *(void *)(v0 + 80);
    uint64_t v5 = *(void *)(v0 + 88);
    swift_retain();
    sub_24A762D38();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6) == *MEMORY[0x263F90238])
    {
      char v7 = 0;
      uint64_t v8 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 88) + 8))(*(void *)(v0 + 104), *(void *)(v0 + 80));
      uint64_t v8 = "error=%{signpost.telemetry:number1,public}ld enableTelemetry=YES";
      char v7 = 1;
    }
    uint64_t v13 = *(void *)(v0 + 136);
    uint64_t v12 = *(void *)(v0 + 144);
    uint64_t v14 = *(void *)(v0 + 112);
    uint64_t v15 = *(void *)(v0 + 120);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 440))(v12, v13, v14);
    uint64_t v16 = swift_slowAlloc();
    *(unsigned char *)uint64_t v16 = 0;
    *(unsigned char *)(v16 + 1) = v7;
    *(_WORD *)(v16 + 2) = 2050;
    *(void *)(v0 + 48) = 0;
    sub_24A763198();
    os_signpost_id_t v17 = sub_24A762C98();
    _os_signpost_emit_with_name_impl(&dword_24A6FB000, v2, v3, v17, "CE.Runner.Standard", v8, (uint8_t *)v16, 0xCu);
    MEMORY[0x24C5CEE90](v16, -1, -1);

    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v18(v13, v14);
    os_log_type_t v30 = v18;
    v18(v12, v14);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 136);
    uint64_t v10 = *(void *)(v0 + 112);
    uint64_t v11 = *(void *)(v0 + 120);

    os_log_type_t v30 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v30(v9, v10);
  }
  uint64_t v19 = sub_24A762D48();
  os_log_type_t v20 = sub_24A7630B8();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl(&dword_24A6FB000, v19, v20, "Running plan: finished", v21, 2u);
    MEMORY[0x24C5CEE90](v21, -1, -1);
  }
  uint64_t v22 = *(void *)(v0 + 264);
  uint64_t v31 = *(void *)(v0 + 256);
  uint64_t v32 = *(void *)(v0 + 272);
  uint64_t v23 = *(void *)(v0 + 192);
  uint64_t v24 = *(void *)(v0 + 200);
  uint64_t v25 = *(void *)(v0 + 184);
  uint64_t v26 = *(void *)(v0 + 152);
  uint64_t v27 = *(void *)(v0 + 112);

  swift_release();
  v30(v26, v27);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v25);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v32, v31);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = *(uint64_t (**)(void, void))(v0 + 8);
  return v28(0, 0);
}

uint64_t sub_24A73D854()
{
  uint64_t v1 = *(void *)(v0 + 304);
  unint64_t v3 = *(void *)(v0 + 288);
  uint64_t v2 = *(void *)(v0 + 296);
  uint64_t v4 = *(void *)(v0 + 280);

  sub_24A74C3DC(v4, v3, v2, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_24A73D988()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A73DAA8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A73DBB8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A73DCC8()
{
  sub_24A74C378();
  sub_24A74BD7C();
  sub_24A74C3CC(v1);
  uint64_t v2 = sub_24A762CC8();
  sub_24A762D08();
  os_signpost_type_t v3 = sub_24A7630F8();
  if (sub_24A763168())
  {
    uint64_t v4 = *(void *)(v0 + 88);
    uint64_t v5 = *(void *)(v0 + 96);
    uint64_t v6 = *(void *)(v0 + 80);
    swift_retain();
    sub_24A762D38();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v5, v6) == *MEMORY[0x263F90238])
    {
      char v7 = 0;
      uint64_t v8 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 88) + 8))(*(void *)(v0 + 96), *(void *)(v0 + 80));
      uint64_t v8 = "error=%{signpost.telemetry:number1,public}ld enableTelemetry=YES";
      char v7 = 1;
    }
    uint64_t v12 = *(void *)(v0 + 144);
    uint64_t v13 = *(void *)(v0 + 120);
    uint64_t v14 = *(void *)(v0 + 128);
    uint64_t v15 = *(void *)(v0 + 112);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 440))(v12, v14, v15);
    uint64_t v16 = swift_slowAlloc();
    *(unsigned char *)uint64_t v16 = 0;
    *(unsigned char *)(v16 + 1) = v7;
    *(_WORD *)(v16 + 2) = 2050;
    *(void *)(v0 + 40) = 1;
    sub_24A763198();
    os_signpost_id_t v17 = sub_24A762C98();
    _os_signpost_emit_with_name_impl(&dword_24A6FB000, v2, v3, v17, "CE.Runner.Standard", v8, (uint8_t *)v16, 0xCu);
    MEMORY[0x24C5CEE90](v16, -1, -1);

    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v18(v14, v15);
    uint64_t v37 = v18;
    v18(v12, v15);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 120);
    uint64_t v10 = *(void *)(v0 + 128);
    uint64_t v11 = *(void *)(v0 + 112);

    uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v37(v10, v11);
  }
  uint64_t v19 = *(void **)(v0 + 472);
  id v20 = v19;
  id v21 = v19;
  uint64_t v22 = sub_24A762D48();
  os_log_type_t v23 = sub_24A763098();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v25 = *(void **)(v0 + 472);
  if (v24)
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 138412290;
    id v27 = v25;
    uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 32) = v28;
    sub_24A763198();
    void *v39 = v28;

    _os_log_impl(&dword_24A6FB000, v22, v23, "Error: %@", v26, 0xCu);
    sub_24A704710(&qword_2697B3520);
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v39, -1, -1);
    MEMORY[0x24C5CEE90](v26, -1, -1);
  }
  else
  {
  }
  uint64_t v29 = *(void *)(v0 + 264);
  uint64_t v38 = *(void *)(v0 + 256);
  uint64_t v40 = *(void *)(v0 + 272);
  uint64_t v30 = *(void *)(v0 + 192);
  uint64_t v31 = *(void *)(v0 + 200);
  uint64_t v32 = *(void *)(v0 + 184);
  uint64_t v33 = *(void *)(v0 + 152);
  uint64_t v34 = *(void *)(v0 + 112);

  swift_willThrow();
  swift_release();
  v37(v33, v34);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v32);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v40, v38);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = *(uint64_t (**)(void))(v0 + 8);
  return v35();
}

uint64_t sub_24A73E16C(uint64_t a1)
{
  v1[7] = a1;
  uint64_t v2 = sub_24A762748();
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  uint64_t v3 = sub_24A762698();
  v1[11] = v3;
  v1[12] = *(void *)(v3 - 8);
  v1[13] = swift_task_alloc();
  uint64_t v4 = sub_24A762738();
  v1[14] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v1[15] = v5;
  v1[16] = *(void *)(v5 + 64);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  uint64_t v6 = sub_24A762688();
  v1[19] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v1[20] = v7;
  v1[21] = *(void *)(v7 + 64);
  v1[22] = swift_task_alloc();
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  uint64_t v8 = sub_24A762888();
  v1[25] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v1[26] = v9;
  v1[27] = *(void *)(v9 + 64);
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  v1[30] = swift_task_alloc();
  uint64_t v10 = sub_24A762818();
  v1[31] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v1[32] = v11;
  v1[33] = *(void *)(v11 + 64);
  v1[34] = swift_task_alloc();
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  uint64_t v12 = sub_24A762938();
  v1[37] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v1[38] = v13;
  v1[39] = *(void *)(v13 + 64);
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  uint64_t v14 = sub_24A762878();
  v1[43] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  v1[44] = v15;
  v1[45] = *(void *)(v15 + 64);
  v1[46] = swift_task_alloc();
  v1[47] = swift_task_alloc();
  v1[48] = swift_task_alloc();
  uint64_t v16 = sub_24A762928();
  v1[49] = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  v1[50] = v17;
  v1[51] = *(void *)(v17 + 64);
  v1[52] = swift_task_alloc();
  v1[53] = swift_task_alloc();
  v1[54] = swift_task_alloc();
  uint64_t v18 = sub_24A762918();
  v1[55] = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  v1[56] = v19;
  v1[57] = *(void *)(v19 + 64);
  v1[58] = swift_task_alloc();
  v1[59] = swift_task_alloc();
  v1[60] = swift_task_alloc();
  uint64_t v20 = sub_24A762868();
  v1[61] = v20;
  uint64_t v21 = *(void *)(v20 - 8);
  v1[62] = v21;
  v1[63] = *(void *)(v21 + 64);
  v1[64] = swift_task_alloc();
  v1[65] = swift_task_alloc();
  v1[66] = swift_task_alloc();
  uint64_t v22 = sub_24A762858();
  v1[67] = v22;
  uint64_t v23 = *(void *)(v22 - 8);
  v1[68] = v23;
  v1[69] = *(void *)(v23 + 64);
  v1[70] = swift_task_alloc();
  v1[71] = swift_task_alloc();
  v1[72] = swift_task_alloc();
  uint64_t v24 = sub_24A762828();
  v1[73] = v24;
  uint64_t v25 = *(void *)(v24 - 8);
  v1[74] = v25;
  v1[75] = *(void *)(v25 + 64);
  v1[76] = swift_task_alloc();
  v1[77] = swift_task_alloc();
  v1[78] = swift_task_alloc();
  uint64_t v26 = sub_24A7626B8();
  v1[79] = v26;
  uint64_t v27 = *(void *)(v26 - 8);
  v1[80] = v27;
  v1[81] = *(void *)(v27 + 64);
  v1[82] = swift_task_alloc();
  v1[83] = swift_task_alloc();
  v1[84] = swift_task_alloc();
  uint64_t v28 = sub_24A762808();
  v1[85] = v28;
  v1[86] = *(void *)(v28 - 8);
  v1[87] = swift_task_alloc();
  uint64_t v29 = sub_24A7627F8();
  v1[88] = v29;
  uint64_t v30 = *(void *)(v29 - 8);
  v1[89] = v30;
  v1[90] = *(void *)(v30 + 64);
  v1[91] = swift_task_alloc();
  v1[92] = swift_task_alloc();
  uint64_t v31 = sub_24A762638();
  v1[93] = v31;
  v1[94] = *(void *)(v31 - 8);
  v1[95] = swift_task_alloc();
  uint64_t v32 = sub_24A762768();
  v1[96] = v32;
  uint64_t v33 = *(void *)(v32 - 8);
  v1[97] = v33;
  v1[98] = *(void *)(v33 + 64);
  v1[99] = swift_task_alloc();
  v1[100] = swift_task_alloc();
  uint64_t v34 = sub_24A762D68();
  v1[101] = v34;
  v1[102] = *(void *)(v34 - 8);
  v1[103] = swift_task_alloc();
  v1[104] = swift_task_alloc();
  v1[105] = swift_task_alloc();
  v1[106] = swift_task_alloc();
  v1[107] = swift_task_alloc();
  v1[108] = swift_task_alloc();
  v1[109] = swift_task_alloc();
  v1[110] = swift_task_alloc();
  v1[111] = swift_task_alloc();
  v1[112] = swift_task_alloc();
  v1[113] = swift_task_alloc();
  v1[114] = swift_task_alloc();
  v1[115] = swift_task_alloc();
  v1[116] = swift_task_alloc();
  v1[117] = swift_task_alloc();
  v1[118] = swift_task_alloc();
  v1[119] = swift_task_alloc();
  v1[120] = swift_task_alloc();
  v1[121] = swift_task_alloc();
  v1[122] = swift_task_alloc();
  v1[123] = swift_task_alloc();
  v1[124] = swift_task_alloc();
  v1[125] = swift_task_alloc();
  v1[126] = swift_task_alloc();
  v1[127] = swift_task_alloc();
  v1[128] = swift_task_alloc();
  v1[129] = swift_task_alloc();
  v1[130] = swift_task_alloc();
  v1[131] = swift_task_alloc();
  v1[132] = swift_task_alloc();
  v1[133] = swift_task_alloc();
  v1[134] = swift_task_alloc();
  v1[135] = swift_task_alloc();
  v1[136] = swift_task_alloc();
  v1[137] = swift_task_alloc();
  v1[138] = swift_task_alloc();
  v1[139] = swift_task_alloc();
  v1[140] = swift_task_alloc();
  v1[141] = swift_task_alloc();
  v1[142] = swift_task_alloc();
  v1[143] = swift_task_alloc();
  v1[144] = swift_task_alloc();
  v1[145] = swift_task_alloc();
  v1[146] = swift_task_alloc();
  v1[147] = swift_task_alloc();
  v1[148] = swift_task_alloc();
  v1[149] = swift_task_alloc();
  v1[150] = swift_task_alloc();
  uint64_t v35 = sub_24A762908();
  v1[151] = v35;
  uint64_t v36 = *(void *)(v35 - 8);
  v1[152] = v36;
  v1[153] = *(void *)(v36 + 64);
  v1[154] = swift_task_alloc();
  v1[155] = swift_task_alloc();
  sub_24A704710(&qword_2697B3F58);
  v1[156] = swift_task_alloc();
  uint64_t v37 = sub_24A762848();
  v1[157] = v37;
  v1[158] = *(void *)(v37 - 8);
  v1[159] = swift_task_alloc();
  uint64_t v38 = sub_24A7627D8();
  v1[160] = v38;
  v1[161] = *(void *)(v38 - 8);
  v1[162] = swift_task_alloc();
  v1[163] = swift_task_alloc();
  uint64_t v39 = sub_24A7628A8();
  v1[164] = v39;
  v1[165] = *(void *)(v39 - 8);
  v1[166] = swift_task_alloc();
  v1[167] = swift_task_alloc();
  sub_24A704710(&qword_2697B3F60);
  v1[168] = swift_task_alloc();
  uint64_t v40 = sub_24A762568();
  v1[169] = v40;
  v1[170] = *(void *)(v40 - 8);
  v1[171] = swift_task_alloc();
  v1[172] = swift_task_alloc();
  sub_24A704710(&qword_2697B3F68);
  v1[173] = swift_task_alloc();
  uint64_t v41 = sub_24A7628D8();
  v1[174] = v41;
  v1[175] = *(void *)(v41 - 8);
  v1[176] = swift_task_alloc();
  uint64_t v42 = sub_24A762678();
  v1[177] = v42;
  v1[178] = *(void *)(v42 - 8);
  v1[179] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A73F00C, 0, 0);
}

uint64_t sub_24A73F00C()
{
  sub_24A762718();
  *(void *)(v0 + 1440) = sub_24A762708();
  *(void *)(v0 + 1448) = sub_24A7626F8();
  uint64_t v1 = *(void *)(v0 + 1400);
  uint64_t v2 = *(void *)(v0 + 1384);
  uint64_t v3 = *(void *)(v0 + 1376);
  uint64_t v4 = *(void *)(v0 + 1360);
  uint64_t v23 = *(void *)(v0 + 1408);
  uint64_t v24 = *(void *)(v0 + 1352);
  uint64_t v25 = *(void *)(v0 + 1344);
  uint64_t v27 = *(void *)(v0 + 1392);
  sub_24A762648();
  uint64_t v5 = *MEMORY[0x263F4CA18];
  uint64_t v6 = sub_24A7628B8();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 104))(v2, v5, v6);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v2, 0, 1, v6);
  sub_24A762658();
  sub_24A7628C8();
  sub_24A762558();
  sub_24A762538();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(void *)(v0 + 1456) = v8;
  *(void *)(v0 + 1464) = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v8(v3, v24);
  sub_24A762558();
  sub_24A762538();
  v8(v3, v24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v25, v23, v27);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v1 + 56))(v25, 0, 1, v27);
  sub_24A7626D8();
  uint64_t v9 = *(void *)(v0 + 1376);
  uint64_t v29 = *(void *)(v0 + 1368);
  uint64_t v10 = *(void *)(v0 + 1360);
  uint64_t v26 = *(void *)(v0 + 1352);
  uint64_t v11 = *(void *)(v0 + 1304);
  uint64_t v12 = *(void *)(v0 + 1288);
  uint64_t v30 = *(void *)(v0 + 1280);
  uint64_t v28 = *(void *)(v0 + 56);
  sub_24A74C42C(*(void *)(v0 + 1344));
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  *(void *)(v0 + 1472) = v13;
  *(void *)(v0 + 1480) = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v13(v9, v29, v26);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v28, v30);
  sub_24A762898();
  sub_24A7626E8();
  uint64_t v14 = *(void *)(v0 + 1336);
  uint64_t v15 = *(void *)(v0 + 1320);
  uint64_t v16 = *(void *)(v0 + 1312);
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  *(void *)(v0 + 1488) = v17;
  *(void *)(v0 + 1496) = (v15 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v17(v14, v16);
  sub_24A762838();
  uint64_t v18 = (_DWORD *)MEMORY[0x263F4C510];
  *(_DWORD *)(v0 + 1536) = *MEMORY[0x263F4C518];
  *(_DWORD *)(v0 + 1540) = *v18;
  *(_DWORD *)(v0 + 1544) = *MEMORY[0x263F4C4F8];
  uint64_t v19 = (_DWORD *)MEMORY[0x263F4C2D8];
  *(_DWORD *)(v0 + 1548) = *MEMORY[0x263F4C260];
  *(_DWORD *)(v0 + 1552) = *v19;
  *(_DWORD *)(v0 + 1556) = *MEMORY[0x263F4C2F0];
  uint64_t v31 = (char *)&dword_2697B3F70 + dword_2697B3F70;
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 1504) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_24A73FB5C;
  uint64_t v21 = *(void *)(v0 + 1248);
  return ((uint64_t (*)(uint64_t, void, void))v31)(v21, 0, 0);
}

uint64_t sub_24A73FB5C()
{
  *(void *)(*(void *)v1 + 1512) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24A74AF50;
  }
  else {
    uint64_t v2 = sub_24A73FC70;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

void sub_24A73FC70()
{
  v1199 = v0;
  uint64_t v1 = v0[156];
  uint64_t v2 = v0[152];
  uint64_t v3 = v0[151];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    uint64_t v4 = v0[103];
    uint64_t v5 = v0[102];
    uint64_t v6 = v0[101];
    (*(void (**)(void, void))(v0[158] + 8))(v0[159], v0[157]);
    uint64_t v7 = sub_24A710050();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v6);
    uint64_t v8 = sub_24A762D48();
    os_log_type_t v9 = sub_24A7630B8();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)sub_24A71662C();
      v1198[0] = 0;
      v1195 = 0;
      *(_WORD *)uint64_t v10 = 0;
      v1197 = v10 + 2;
      sub_24A73BE58(MEMORY[0x263F8EE78], (uint64_t)&v1197, (uint64_t)v1198, (uint64_t)&v1195);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24A6FB000, v8, v9, "Running plan finished", v10, 2u);
      sub_24A716670();
    }
    v1082 = (void (*)(uint64_t, uint64_t))v0[182];
    uint64_t v30 = v0[178];
    v1134 = v0[177];
    uint64_t v1166 = v0[179];
    uint64_t v31 = v0[175];
    uint64_t v1062 = v0[174];
    uint64_t v1070 = v0[176];
    uint64_t v32 = v0[171];
    uint64_t v33 = v0[169];
    uint64_t v34 = v0[103];
    uint64_t v35 = v0[102];
    uint64_t v36 = v0[101];
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
    v1082(v32, v33);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v1070, v1062);
    (*(void (**)(uint64_t, NSObject *))(v30 + 8))(v1166, v1134);
    goto LABEL_17;
  }
  uint64_t v11 = (void (*)(uint64_t, uint64_t))v0[182];
  uint64_t v12 = v0[172];
  uint64_t v13 = v0[169];
  uint64_t v14 = v3;
  uint64_t v15 = *(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32);
  v15(v0[155], v1, v14);
  sub_24A7628F8();
  char v16 = sub_24A762548();
  v11(v12, v13);
  if ((v16 & 1) == 0)
  {
    (*(void (**)(void, void))(v0[152] + 8))(v0[155], v0[151]);
    uint64_t v37 = v0;
    goto LABEL_10;
  }
  int v17 = *((_DWORD *)v0 + 384);
  uint64_t v18 = v0[162];
  uint64_t v19 = v0[161];
  uint64_t v20 = v0[160];
  sub_24A7628E8();
  int v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 88))(v18, v20);
  uint64_t v22 = v0;
  if (v21 == v17)
  {
    uint64_t v23 = v0[150];
    uint64_t v24 = v0[102];
    uint64_t v25 = v0[101];
    uint64_t v26 = sub_24A710050();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v23, v26, v25);
    uint64_t v27 = sub_24A762D48();
    os_log_type_t v28 = sub_24A7630B8();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)sub_24A71662C();
      v1198[0] = 0;
      v1195 = 0;
      *(_WORD *)uint64_t v29 = 0;
      v1197 = v29 + 2;
      sub_24A73BE58(MEMORY[0x263F8EE78], (uint64_t)&v1197, (uint64_t)v1198, (uint64_t)&v1195);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24A6FB000, v27, v28, "Got termination", v29, 2u);
      sub_24A716670();
    }
    v1084 = (void (*)(uint64_t, uint64_t))v22[182];
    uint64_t v53 = v22[178];
    v1136 = v22[177];
    uint64_t v1168 = v22[179];
    uint64_t v54 = v22[175];
    uint64_t v1063 = v22[174];
    uint64_t v1072 = v22[176];
    uint64_t v1041 = v22[169];
    uint64_t v1052 = v22[171];
    uint64_t v55 = v22[158];
    uint64_t v1023 = v22[157];
    uint64_t v1032 = v22[159];
    uint64_t v56 = v22[152];
    uint64_t v1005 = v22[151];
    uint64_t v1014 = v22[155];
    uint64_t v57 = v22[150];
    uint64_t v58 = v22[102];
    uint64_t v59 = v22[101];
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v59);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v1014, v1005);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v1032, v1023);
    v1084(v1052, v1041);
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v1072, v1063);
    (*(void (**)(uint64_t, NSObject *))(v53 + 8))(v1168, v1136);
    (*(void (**)(void, void))(v22[161] + 8))(v22[162], v22[160]);
    uint64_t v0 = v22;
    goto LABEL_17;
  }
  if (v21 == *((_DWORD *)v0 + 385))
  {
    uint64_t v40 = v0[189];
    sub_24A704710((uint64_t *)&unk_2697B32D0);
    uint64_t v41 = swift_allocObject();
    uint64_t v42 = sub_24A73704C(v41, 1);
    v43[3] = MEMORY[0x263F8D310];
    *uint64_t v43 = 0x20646E6520746F47;
    v43[1] = 0xEF6E616C7020666FLL;
    nullsub_1(v42);
    sub_24A7099C4();
    uint64_t v37 = v0;
    sub_24A7099D0();
    sub_24A763678();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24A7626C8();
    if (v40)
    {
      v1051 = (void (*)(uint64_t, uint64_t))v0[182];
      v1135 = v0[179];
      uint64_t v44 = v0[178];
      uint64_t v45 = v0[175];
      uint64_t v1031 = v0[174];
      uint64_t v1040 = v0[176];
      uint64_t v1013 = v0[169];
      uint64_t v1022 = v0[171];
      uint64_t v1083 = v0[162];
      uint64_t v1101 = v0[177];
      uint64_t v46 = v0[161];
      uint64_t v1071 = v0[160];
      uint64_t v1004 = v0[159];
      uint64_t v47 = v0[158];
      uint64_t v48 = v0[157];
      uint64_t v49 = v37[155];
      uint64_t v50 = v37[152];
      uint64_t v51 = v37[151];
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v51);
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v1004, v48);
      v1051(v1022, v1013);
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v1040, v1031);
      (*(void (**)(NSObject *, uint64_t))(v44 + 8))(v1135, v1101);
      os_signpost_type_t v52 = v37;
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v1083, v1071);
LABEL_160:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v60 = (void (*)(void))v52[1];
      goto LABEL_18;
    }
    uint64_t v97 = v0[162];
    uint64_t v98 = v0[161];
    uint64_t v99 = v0[160];
    (*(void (**)(void, void))(v22[152] + 8))(v22[155], v22[151]);
    (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v97, v99);
    goto LABEL_10;
  }
  if (v21 == *((_DWORD *)v0 + 386))
  {
    uint64_t v61 = v0[162];
    uint64_t v62 = v22[161];
    uint64_t v63 = v22[160];
    uint64_t v64 = v22[149];
    uint64_t v65 = v22[102];
    uint64_t v66 = v22[101];
    uint64_t v67 = v22[100];
    uint64_t v68 = v22[99];
    uint64_t v69 = v22[97];
    v964 = v22;
    uint64_t v70 = v22[96];
    (*(void (**)(uint64_t, uint64_t))(v62 + 96))(v61, v63);
    uint64_t v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 32);
    v71(v67, v61, v70);
    uint64_t v72 = sub_24A710050();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 16))(v64, v72, v66);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16))(v68, v67, v70);
    unint64_t v73 = (*(unsigned __int8 *)(v69 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
    uint64_t v74 = swift_allocObject();
    v71(v74 + v73, v68, v70);
    uint64_t v75 = sub_24A762D48();
    os_log_type_t v76 = sub_24A763098();
    uint64_t v77 = swift_allocObject();
    *(unsigned char *)(v77 + 16) = 64;
    uint64_t v78 = swift_allocObject();
    *(unsigned char *)(v78 + 16) = 8;
    uint64_t v79 = swift_allocObject();
    *(void *)(v79 + 16) = sub_24A74CF78;
    *(void *)(v79 + 24) = v74;
    uint64_t v80 = swift_allocObject();
    *(void *)(v80 + 16) = sub_24A74CFF8;
    *(void *)(v80 + 24) = v79;
    uint64_t v81 = swift_allocObject();
    *(void *)(v81 + 16) = sub_24A74D030;
    *(void *)(v81 + 24) = v80;
    sub_24A704710(&qword_2697B3F78);
    uint64_t v82 = swift_allocObject();
    sub_24A734F80(v82, 3);
    void *v83 = sub_24A74D2F8;
    v83[1] = v77;
    v83[2] = sub_24A74D2F8;
    v83[3] = v78;
    v83[4] = sub_24A74D058;
    v83[5] = v81;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (!os_log_type_enabled(v75, v76))
    {
      os_signpost_type_t v52 = v964;
      uint64_t v100 = v964[149];
      uint64_t v101 = v964[102];
      uint64_t v102 = v964[101];
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v100, v102);
      uint64_t v103 = v964[189];
      uint64_t v104 = *((unsigned int *)v964 + 384);
      uint64_t v105 = v964[163];
      uint64_t v106 = v964[161];
      uint64_t v107 = v964[160];
      ((void (*)(void, void, void))v52[184])(v52[172], v52[171], v52[169]);
      sub_24A7627C8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 104))(v105, v104, v107);
      sub_24A762898();
      sub_24A7626E8();
      v987 = (void (*)(uint64_t, uint64_t))v964[186];
      v1085 = (void (*)(uint64_t, uint64_t))v964[182];
      uint64_t v108 = v964[179];
      uint64_t v109 = v964[178];
      v1137 = v964[177];
      uint64_t v1064 = v964[176];
      uint64_t v1073 = v964[175];
      uint64_t v1042 = v964[171];
      uint64_t v1053 = v964[174];
      uint64_t v110 = v964[166];
      uint64_t v111 = v964[164];
      uint64_t v1024 = v964[159];
      uint64_t v1033 = v964[169];
      uint64_t v112 = v964[158];
      uint64_t v1006 = v964[155];
      uint64_t v1015 = v964[157];
      uint64_t v113 = v964[152];
      uint64_t v997 = v964[151];
      uint64_t v114 = v964[100];
      uint64_t v115 = v964[97];
      uint64_t v982 = v964[96];
      if (v103)
      {
        swift_release();
        swift_release();
        v987(v110, v111);
        (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v114, v982);
        (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v1006, v997);
        (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v1024, v1015);
        v1085(v1042, v1033);
        (*(void (**)(uint64_t, uint64_t))(v1073 + 8))(v1064, v1053);
        (*(void (**)(uint64_t, NSObject *))(v109 + 8))(v108, v1137);
      }
      else
      {
        uint64_t v977 = v964[178];
        uint64_t v189 = v964[95];
        uint64_t v980 = v964[179];
        uint64_t v190 = v964[94];
        uint64_t v1171 = v964[93];
        swift_bridgeObjectRelease();
        v987(v110, v111);
        sub_24A762758();
        sub_24A762628();
        (*(void (**)(uint64_t, uint64_t))(v190 + 8))(v189, v1171);
        swift_willThrow();
        swift_release();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v114, v982);
        (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v1006, v997);
        (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v1024, v1015);
        v1085(v1042, v1033);
        (*(void (**)(uint64_t, uint64_t))(v1073 + 8))(v1064, v1053);
        (*(void (**)(uint64_t, NSObject *))(v977 + 8))(v980, v1137);
      }
      goto LABEL_160;
    }
    uint64_t v84 = (void *)v964[189];
    uint64_t v85 = (uint8_t *)sub_24A71662C();
    uint64_t v86 = swift_slowAlloc();
    v1197 = (uint8_t *)v86;
    v1198[0] = 0;
    *(_WORD *)uint64_t v85 = 258;
    v1194 = v85 + 2;
    v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
    uint64_t v1196 = v77;
    sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
    if (!v84)
    {
      swift_release();
      v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
      uint64_t v1196 = v78;
      sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
      swift_release();
      v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D058;
      uint64_t v1196 = v81;
      sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
      swift_release();
      _os_log_impl(&dword_24A6FB000, v75, v76, "Got error: %@", v85, 0xCu);
      sub_24A704710(&qword_2697B3520);
      swift_arrayDestroy();
      MEMORY[0x24C5CEE90](v86, -1, -1);
      sub_24A716670();
    }
    goto LABEL_264;
  }
  if (v21 != *((_DWORD *)v0 + 387))
  {
    if (v21 == *((_DWORD *)v0 + 388))
    {
      uint64_t v116 = v0[162];
      uint64_t v117 = v0[161];
      uint64_t v118 = v0[160];
      uint64_t v119 = v0[18];
      uint64_t v120 = v22[14];
      uint64_t v121 = v22[15];
      uint64_t v123 = v22[12];
      uint64_t v122 = v22[13];
      uint64_t v124 = v22[11];
      (*(void (**)(void, uint64_t))(v117 + 96))(v22[162], v118);
      v965 = v22;
      v125 = *(void (**)(uint64_t, uint64_t, uint64_t))(v121 + 32);
      v125(v119, v116, v120);
      sub_24A762728();
      int v126 = (*(uint64_t (**)(uint64_t, uint64_t))(v123 + 88))(v122, v124);
      if (v126 == *MEMORY[0x263F4C100])
      {
        uint64_t v127 = v965[126];
        uint64_t v128 = v965[102];
        uint64_t v129 = v965[101];
        uint64_t v130 = v965[83];
        uint64_t v131 = v965[82];
        uint64_t v132 = v965[80];
        uint64_t v133 = v965[79];
        uint64_t v134 = v965[13];
        (*(void (**)(uint64_t, void))(v965[12] + 96))(v134, v965[11]);
        v135 = *(void (**)(uint64_t, uint64_t, uint64_t))(v132 + 32);
        v135(v131, v134, v133);
        uint64_t v136 = sub_24A710050();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v128 + 16))(v127, v136, v129);
        uint64_t v137 = *(void (**)(uint64_t, uint64_t, uint64_t))(v132 + 16);
        v137(v130, v131, v133);
        unint64_t v138 = (*(unsigned __int8 *)(v132 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80);
        uint64_t v1169 = swift_allocObject();
        v135(v1169 + v138, v130, v133);
        v137(v130, v131, v133);
        uint64_t v139 = swift_allocObject();
        v135(v139 + v138, v130, v133);
        v1138 = sub_24A762D48();
        os_log_type_t v1102 = sub_24A7630B8();
        uint64_t v140 = swift_allocObject();
        *(unsigned char *)(v140 + 16) = 32;
        uint64_t v141 = swift_allocObject();
        *(unsigned char *)(v141 + 16) = 8;
        uint64_t v142 = swift_allocObject();
        *(void *)(v142 + 16) = sub_24A74CA7C;
        *(void *)(v142 + 24) = v1169;
        uint64_t v143 = swift_allocObject();
        *(void *)(v143 + 16) = sub_24A74D2F0;
        *(void *)(v143 + 24) = v142;
        uint64_t v144 = swift_allocObject();
        *(unsigned char *)(v144 + 16) = 32;
        uint64_t v145 = swift_allocObject();
        *(unsigned char *)(v145 + 16) = 8;
        uint64_t v146 = swift_allocObject();
        *(void *)(v146 + 16) = sub_24A74CAD4;
        *(void *)(v146 + 24) = v139;
        uint64_t v147 = swift_allocObject();
        *(void *)(v147 + 16) = sub_24A74D2F0;
        *(void *)(v147 + 24) = v146;
        sub_24A704710(&qword_2697B3F78);
        uint64_t v148 = swift_allocObject();
        sub_24A734F80(v148, 6);
        *uint64_t v149 = sub_24A74D2F8;
        v149[1] = v140;
        v149[2] = sub_24A74D2F8;
        v149[3] = v141;
        v149[4] = sub_24A74D2F4;
        v149[5] = v143;
        v149[6] = sub_24A74D2F8;
        v149[7] = v144;
        v149[8] = sub_24A74D2F8;
        v149[9] = v145;
        v149[10] = sub_24A74D2F4;
        v149[11] = v147;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v1138, v1102))
        {
          uint64_t v150 = v143;
          uint64_t v151 = v145;
          uint64_t v84 = (void *)v965[189];
          v152 = (uint8_t *)sub_24A71662C();
          v1197 = 0;
          v1198[0] = swift_slowAlloc();
          uint64_t v1086 = v1198[0];
          *(_WORD *)v152 = 514;
          v1194 = v152 + 2;
          v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
          uint64_t v1196 = v140;
          sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
          if (!v84)
          {
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
            uint64_t v1196 = v141;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
            uint64_t v1196 = v150;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
            uint64_t v1196 = v144;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
            uint64_t v1196 = v151;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
            uint64_t v1196 = v147;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            _os_log_impl(&dword_24A6FB000, v1138, v1102, "Success: result=%s appLaunched=%s", v152, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x24C5CEE90](v1086, -1, -1);
            sub_24A716670();
          }
LABEL_264:

          return;
        }
        uint64_t v0 = v965;
        v1054 = (void (*)(uint64_t, uint64_t))v965[182];
        uint64_t v1074 = v965[178];
        uint64_t v1089 = v965[177];
        uint64_t v1104 = v965[179];
        uint64_t v1034 = v965[174];
        uint64_t v1043 = v965[176];
        uint64_t v1016 = v965[171];
        uint64_t v1025 = v965[175];
        uint64_t v998 = v965[159];
        uint64_t v1007 = v965[169];
        uint64_t v992 = v965[158];
        uint64_t v995 = v965[157];
        uint64_t v988 = v965[155];
        uint64_t v981 = v965[152];
        uint64_t v983 = v965[151];
        uint64_t v969 = v965[126];
        uint64_t v222 = v965[102];
        uint64_t v967 = v965[101];
        uint64_t v973 = v965[82];
        uint64_t v223 = v965[80];
        uint64_t v971 = v965[79];
        uint64_t v978 = v965[18];
        uint64_t v224 = v965[15];
        uint64_t v975 = v965[14];
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v222 + 8))(v969, v967);
        (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v973, v971);
        (*(void (**)(uint64_t, uint64_t))(v224 + 8))(v978, v975);
LABEL_73:
        (*(void (**)(uint64_t, uint64_t))(v981 + 8))(v988, v983);
        (*(void (**)(uint64_t, uint64_t))(v992 + 8))(v998, v995);
        v1054(v1016, v1007);
        (*(void (**)(uint64_t, uint64_t))(v1025 + 8))(v1043, v1034);
        (*(void (**)(uint64_t, uint64_t))(v1074 + 8))(v1104, v1089);
LABEL_17:
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v60 = (void (*)(void))v0[1];
LABEL_18:
        v60();
        return;
      }
      if (v126 == *MEMORY[0x263F4C0B8])
      {
        uint64_t v191 = v965[125];
        uint64_t v192 = v965[102];
        uint64_t v193 = v965[101];
        uint64_t v194 = v965[76];
        uint64_t v195 = v965[74];
        uint64_t v196 = v965[73];
        uint64_t v197 = v965[13];
        (*(void (**)(uint64_t, void))(v965[12] + 96))(v197, v965[11]);
        v1172 = *(void (**)(uint64_t, uint64_t, uint64_t))(v195 + 32);
        v1172(v194, v197, v196);
        uint64_t v198 = sub_24A710050();
        v1140 = *(NSObject **)(v192 + 16);
        ((void (*)(uint64_t, uint64_t, uint64_t))v1140)(v191, v198, v193);
        v199 = sub_24A762D48();
        os_log_type_t v200 = sub_24A763098();
        if (os_log_type_enabled(v199, v200))
        {
          v201 = (uint8_t *)sub_24A71662C();
          v1198[0] = 0;
          v1195 = 0;
          *(_WORD *)v201 = 0;
          v1197 = v201 + 2;
          sub_24A73BE58(MEMORY[0x263F8EE78], (uint64_t)&v1197, (uint64_t)v1198, (uint64_t)&v1195);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24A6FB000, v199, v200, "Received actionConfirmation", v201, 2u);
          sub_24A716670();
        }
        uint64_t v255 = v965[125];
        uint64_t v256 = v965[102];
        uint64_t v257 = v965[101];
        swift_bridgeObjectRelease();

        v1105 = *(void (**)(uint64_t, uint64_t))(v256 + 8);
        v1105(v255, v257);
        v1090 = (void *)v965[189];
        uint64_t v258 = v965[77];
        uint64_t v259 = v965[76];
        uint64_t v260 = v965[74];
        uint64_t v261 = v965[73];
        ((void (*)(void, uint64_t, void))v1140)(v965[124], v198, v965[101]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v260 + 16))(v258, v259, v261);
        unint64_t v262 = (*(unsigned __int8 *)(v260 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v260 + 80);
        uint64_t v263 = swift_allocObject();
        v1172(v263 + v262, v258, v261);
        v264 = sub_24A762D48();
        os_log_type_t v265 = sub_24A763088();
        uint64_t v266 = swift_allocObject();
        *(unsigned char *)(v266 + 16) = 32;
        uint64_t v267 = swift_allocObject();
        *(unsigned char *)(v267 + 16) = 8;
        uint64_t v268 = swift_allocObject();
        *(void *)(v268 + 16) = sub_24A74CA28;
        *(void *)(v268 + 24) = v263;
        uint64_t v269 = swift_allocObject();
        *(void *)(v269 + 16) = sub_24A74D2F0;
        *(void *)(v269 + 24) = v268;
        sub_24A704710(&qword_2697B3F78);
        uint64_t v270 = swift_allocObject();
        sub_24A734F80(v270, 3);
        void *v271 = sub_24A74D2F8;
        v271[1] = v266;
        v271[2] = sub_24A74D2F8;
        v271[3] = v267;
        v271[4] = sub_24A74D2F4;
        v271[5] = v269;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v264, v265))
        {
          v272 = (uint8_t *)sub_24A71662C();
          uint64_t v273 = swift_slowAlloc();
          v1197 = 0;
          v1198[0] = v273;
          *(_WORD *)v272 = 258;
          v1194 = v272 + 2;
          v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
          uint64_t v1196 = v266;
          uint64_t v84 = v1090;
          sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
          if (!v1090)
          {
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
            uint64_t v1196 = v267;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
            uint64_t v1196 = v269;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            _os_log_impl(&dword_24A6FB000, v264, v265, "%s", v272, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24C5CEE90](v273, -1, -1);
            sub_24A716670();
          }
          goto LABEL_264;
        }
        v296 = v965;
        uint64_t v297 = v965[124];
        uint64_t v298 = v965[101];
        swift_release();
        swift_release();
        swift_release();

        v1105(v297, v298);
        v1075 = (void (*)(uint64_t, uint64_t))v965[182];
        uint64_t v299 = v965[178];
        uint64_t v1106 = v965[177];
        v1146 = v965[179];
        uint64_t v300 = v965[175];
        uint64_t v1055 = v965[174];
        uint64_t v1065 = v965[176];
        uint64_t v1035 = v965[169];
        uint64_t v1044 = v965[171];
        uint64_t v301 = v965[158];
        uint64_t v1017 = v965[157];
        uint64_t v1026 = v965[159];
        uint64_t v302 = v965[152];
        uint64_t v999 = v965[151];
        uint64_t v1008 = v965[155];
        uint64_t v303 = v965[76];
        uint64_t v304 = v965[74];
        uint64_t v305 = v965[73];
LABEL_159:
        uint64_t v989 = v296[18];
        v574 = v296 + 14;
        uint64_t v573 = v296[14];
        uint64_t v572 = v574[1];
        sub_24A74C690();
        swift_allocError();
        unsigned char *v575 = 0;
        swift_willThrow();
        swift_release();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v304 + 8))(v303, v305);
        (*(void (**)(uint64_t, uint64_t))(v572 + 8))(v989, v573);
        (*(void (**)(uint64_t, uint64_t))(v302 + 8))(v1008, v999);
        (*(void (**)(uint64_t, uint64_t))(v301 + 8))(v1026, v1017);
        v1075(v1044, v1035);
        (*(void (**)(uint64_t, uint64_t))(v300 + 8))(v1065, v1055);
        (*(void (**)(NSObject *, uint64_t))(v299 + 8))(v1146, v1106);
        os_signpost_type_t v52 = v965;
        goto LABEL_160;
      }
      if (v126 == *MEMORY[0x263F4C0C0])
      {
        uint64_t v236 = v965[111];
        uint64_t v237 = v965[102];
        uint64_t v238 = v965[101];
        uint64_t v239 = v965[70];
        uint64_t v240 = v965[68];
        uint64_t v241 = v965[67];
        uint64_t v242 = v965[13];
        (*(void (**)(uint64_t, void))(v965[12] + 96))(v242, v965[11]);
        v1175 = *(void (**)(uint64_t, uint64_t, uint64_t))(v240 + 32);
        v1175(v239, v242, v241);
        uint64_t v243 = sub_24A710050();
        v1143 = *(NSObject **)(v237 + 16);
        ((void (*)(uint64_t, uint64_t, uint64_t))v1143)(v236, v243, v238);
        v244 = sub_24A762D48();
        os_log_type_t v245 = sub_24A763098();
        if (os_log_type_enabled(v244, v245))
        {
          v246 = (uint8_t *)sub_24A71662C();
          v1198[0] = 0;
          v1195 = 0;
          *(_WORD *)v246 = 0;
          v1197 = v246 + 2;
          sub_24A73BE58(MEMORY[0x263F8EE78], (uint64_t)&v1197, (uint64_t)v1198, (uint64_t)&v1195);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24A6FB000, v244, v245, "Received toolDisambiguation", v246, 2u);
          sub_24A716670();
        }
        uint64_t v325 = v965[111];
        uint64_t v326 = v965[102];
        uint64_t v327 = v965[101];
        swift_bridgeObjectRelease();

        v1108 = *(void (**)(uint64_t, uint64_t))(v326 + 8);
        v1108(v325, v327);
        v1092 = (void *)v965[189];
        uint64_t v328 = v965[71];
        uint64_t v329 = v965[70];
        uint64_t v330 = v965[68];
        uint64_t v331 = v965[67];
        ((void (*)(void, uint64_t, void))v1143)(v965[110], v243, v965[101]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v330 + 16))(v328, v329, v331);
        unint64_t v332 = (*(unsigned __int8 *)(v330 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v330 + 80);
        uint64_t v333 = swift_allocObject();
        v1175(v333 + v332, v328, v331);
        v334 = sub_24A762D48();
        os_log_type_t v335 = sub_24A763088();
        uint64_t v336 = swift_allocObject();
        *(unsigned char *)(v336 + 16) = 32;
        uint64_t v337 = swift_allocObject();
        *(unsigned char *)(v337 + 16) = 8;
        uint64_t v338 = swift_allocObject();
        *(void *)(v338 + 16) = sub_24A74C7A4;
        *(void *)(v338 + 24) = v333;
        uint64_t v339 = swift_allocObject();
        *(void *)(v339 + 16) = sub_24A74D2F0;
        *(void *)(v339 + 24) = v338;
        sub_24A704710(&qword_2697B3F78);
        uint64_t v340 = swift_allocObject();
        sub_24A734F80(v340, 3);
        void *v341 = sub_24A74D2F8;
        v341[1] = v336;
        v341[2] = sub_24A74D2F8;
        v341[3] = v337;
        v341[4] = sub_24A74D2F4;
        v341[5] = v339;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v334, v335))
        {
          v342 = (uint8_t *)sub_24A71662C();
          uint64_t v343 = swift_slowAlloc();
          v1197 = 0;
          v1198[0] = v343;
          *(_WORD *)v342 = 258;
          v1194 = v342 + 2;
          v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
          uint64_t v1196 = v336;
          uint64_t v84 = v1092;
          sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
          if (!v1092)
          {
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
            uint64_t v1196 = v337;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
            uint64_t v1196 = v339;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            _os_log_impl(&dword_24A6FB000, v334, v335, "%s", v342, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24C5CEE90](v343, -1, -1);
            sub_24A716670();
          }
          goto LABEL_264;
        }
        v296 = v965;
        uint64_t v377 = v965[110];
        uint64_t v378 = v965[101];
        swift_release();
        swift_release();
        swift_release();

        v1108(v377, v378);
        v1075 = (void (*)(uint64_t, uint64_t))v965[182];
        uint64_t v299 = v965[178];
        uint64_t v1106 = v965[177];
        v1146 = v965[179];
        uint64_t v300 = v965[175];
        uint64_t v1055 = v965[174];
        uint64_t v1065 = v965[176];
        uint64_t v1035 = v965[169];
        uint64_t v1044 = v965[171];
        uint64_t v301 = v965[158];
        uint64_t v1017 = v965[157];
        uint64_t v1026 = v965[159];
        uint64_t v302 = v965[152];
        uint64_t v999 = v965[151];
        uint64_t v1008 = v965[155];
        uint64_t v303 = v965[70];
        uint64_t v304 = v965[68];
        uint64_t v305 = v965[67];
        goto LABEL_159;
      }
      if (v126 == *MEMORY[0x263F4C0C8])
      {
        uint64_t v285 = v965[123];
        uint64_t v286 = v965[102];
        uint64_t v287 = v965[101];
        uint64_t v288 = v965[64];
        uint64_t v289 = v965[61];
        uint64_t v290 = v965[62];
        uint64_t v291 = v965[13];
        (*(void (**)(uint64_t, void))(v965[12] + 96))(v291, v965[11]);
        v1178 = *(void (**)(uint64_t, uint64_t, uint64_t))(v290 + 32);
        v1178(v288, v291, v289);
        uint64_t v292 = sub_24A710050();
        v1145 = *(NSObject **)(v286 + 16);
        ((void (*)(uint64_t, uint64_t, uint64_t))v1145)(v285, v292, v287);
        v293 = sub_24A762D48();
        os_log_type_t v294 = sub_24A763098();
        if (os_log_type_enabled(v293, v294))
        {
          v295 = (uint8_t *)sub_24A71662C();
          v1198[0] = 0;
          v1195 = 0;
          *(_WORD *)v295 = 0;
          v1197 = v295 + 2;
          sub_24A73BE58(MEMORY[0x263F8EE78], (uint64_t)&v1197, (uint64_t)v1198, (uint64_t)&v1195);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24A6FB000, v293, v294, "Received parameterNeedsValue", v295, 2u);
          sub_24A716670();
        }
        uint64_t v398 = v965[123];
        uint64_t v399 = v965[102];
        uint64_t v400 = v965[101];
        swift_bridgeObjectRelease();

        v1111 = *(void (**)(uint64_t, uint64_t))(v399 + 8);
        v1111(v398, v400);
        v1094 = (void *)v965[189];
        uint64_t v401 = v965[65];
        uint64_t v402 = v965[64];
        uint64_t v403 = v965[62];
        uint64_t v404 = v965[61];
        ((void (*)(void, uint64_t, void))v1145)(v965[122], v292, v965[101]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v403 + 16))(v401, v402, v404);
        unint64_t v405 = (*(unsigned __int8 *)(v403 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v403 + 80);
        uint64_t v406 = swift_allocObject();
        v1178(v406 + v405, v401, v404);
        v407 = sub_24A762D48();
        os_log_type_t v408 = sub_24A763088();
        uint64_t v409 = swift_allocObject();
        *(unsigned char *)(v409 + 16) = 32;
        uint64_t v410 = swift_allocObject();
        *(unsigned char *)(v410 + 16) = 8;
        uint64_t v411 = swift_allocObject();
        *(void *)(v411 + 16) = sub_24A74C9D4;
        *(void *)(v411 + 24) = v406;
        uint64_t v412 = swift_allocObject();
        *(void *)(v412 + 16) = sub_24A74D2F0;
        *(void *)(v412 + 24) = v411;
        sub_24A704710(&qword_2697B3F78);
        uint64_t v413 = swift_allocObject();
        sub_24A734F80(v413, 3);
        void *v414 = sub_24A74D2F8;
        v414[1] = v409;
        v414[2] = sub_24A74D2F8;
        v414[3] = v410;
        v414[4] = sub_24A74D2F4;
        v414[5] = v412;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v407, v408))
        {
          v415 = (uint8_t *)sub_24A71662C();
          uint64_t v416 = swift_slowAlloc();
          v1197 = 0;
          v1198[0] = v416;
          *(_WORD *)v415 = 258;
          v1194 = v415 + 2;
          v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
          uint64_t v1196 = v409;
          uint64_t v84 = v1094;
          sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
          if (!v1094)
          {
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
            uint64_t v1196 = v410;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
            uint64_t v1196 = v412;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            _os_log_impl(&dword_24A6FB000, v407, v408, "%s", v415, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24C5CEE90](v416, -1, -1);
            sub_24A716670();
          }
          goto LABEL_264;
        }
        v296 = v965;
        uint64_t v441 = v965[122];
        uint64_t v442 = v965[101];
        swift_release();
        swift_release();
        swift_release();

        v1111(v441, v442);
        v1075 = (void (*)(uint64_t, uint64_t))v965[182];
        uint64_t v299 = v965[178];
        uint64_t v1106 = v965[177];
        v1146 = v965[179];
        uint64_t v300 = v965[175];
        uint64_t v1055 = v965[174];
        uint64_t v1065 = v965[176];
        uint64_t v1035 = v965[169];
        uint64_t v1044 = v965[171];
        uint64_t v301 = v965[158];
        uint64_t v1017 = v965[157];
        uint64_t v1026 = v965[159];
        uint64_t v302 = v965[152];
        uint64_t v999 = v965[151];
        uint64_t v1008 = v965[155];
        uint64_t v303 = v965[64];
        uint64_t v305 = v965[61];
        uint64_t v304 = v965[62];
        goto LABEL_159;
      }
      if (v126 == *MEMORY[0x263F4C0E0])
      {
        uint64_t v355 = v965[121];
        uint64_t v356 = v965[102];
        uint64_t v357 = v965[101];
        uint64_t v358 = v965[58];
        uint64_t v359 = v965[55];
        uint64_t v360 = v965[56];
        uint64_t v361 = v965[13];
        (*(void (**)(uint64_t, void))(v965[12] + 96))(v361, v965[11]);
        v1180 = *(void (**)(uint64_t, uint64_t, uint64_t))(v360 + 32);
        v1180(v358, v361, v359);
        uint64_t v362 = sub_24A710050();
        v1148 = *(NSObject **)(v356 + 16);
        ((void (*)(uint64_t, uint64_t, uint64_t))v1148)(v355, v362, v357);
        v363 = sub_24A762D48();
        os_log_type_t v364 = sub_24A763098();
        if (os_log_type_enabled(v363, v364))
        {
          v365 = (uint8_t *)sub_24A71662C();
          v1198[0] = 0;
          v1195 = 0;
          *(_WORD *)v365 = 0;
          v1197 = v365 + 2;
          sub_24A73BE58(MEMORY[0x263F8EE78], (uint64_t)&v1197, (uint64_t)v1198, (uint64_t)&v1195);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24A6FB000, v363, v364, "Received parameterConfirmation", v365, 2u);
          sub_24A716670();
        }
        uint64_t v462 = v965[121];
        uint64_t v463 = v965[102];
        uint64_t v464 = v965[101];
        swift_bridgeObjectRelease();

        v1113 = *(void (**)(uint64_t, uint64_t))(v463 + 8);
        v1113(v462, v464);
        v1096 = (void *)v965[189];
        uint64_t v466 = v965[58];
        uint64_t v465 = v965[59];
        uint64_t v467 = v965[56];
        uint64_t v468 = v965[55];
        ((void (*)(void, uint64_t, void))v1148)(v965[120], v362, v965[101]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v467 + 16))(v465, v466, v468);
        unint64_t v469 = (*(unsigned __int8 *)(v467 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v467 + 80);
        uint64_t v470 = swift_allocObject();
        v1180(v470 + v469, v465, v468);
        v471 = sub_24A762D48();
        os_log_type_t v472 = sub_24A763088();
        uint64_t v473 = swift_allocObject();
        *(unsigned char *)(v473 + 16) = 32;
        uint64_t v474 = swift_allocObject();
        *(unsigned char *)(v474 + 16) = 8;
        uint64_t v475 = swift_allocObject();
        *(void *)(v475 + 16) = sub_24A74C980;
        *(void *)(v475 + 24) = v470;
        uint64_t v476 = swift_allocObject();
        *(void *)(v476 + 16) = sub_24A74D2F0;
        *(void *)(v476 + 24) = v475;
        sub_24A704710(&qword_2697B3F78);
        uint64_t v477 = swift_allocObject();
        sub_24A734F80(v477, 3);
        void *v478 = sub_24A74D2F8;
        v478[1] = v473;
        v478[2] = sub_24A74D2F8;
        v478[3] = v474;
        v478[4] = sub_24A74D2F4;
        v478[5] = v476;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v471, v472))
        {
          v479 = (uint8_t *)sub_24A71662C();
          uint64_t v480 = swift_slowAlloc();
          v1197 = 0;
          v1198[0] = v480;
          *(_WORD *)v479 = 258;
          v1194 = v479 + 2;
          v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
          uint64_t v1196 = v473;
          uint64_t v84 = v1096;
          sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
          if (!v1096)
          {
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
            uint64_t v1196 = v474;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
            uint64_t v1196 = v476;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            _os_log_impl(&dword_24A6FB000, v471, v472, "%s", v479, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24C5CEE90](v480, -1, -1);
            sub_24A716670();
          }
          goto LABEL_264;
        }
        v296 = v965;
        uint64_t v505 = v965[120];
        uint64_t v506 = v965[101];
        swift_release();
        swift_release();
        swift_release();

        v1113(v505, v506);
        v1075 = (void (*)(uint64_t, uint64_t))v965[182];
        uint64_t v299 = v965[178];
        uint64_t v1106 = v965[177];
        v1146 = v965[179];
        uint64_t v300 = v965[175];
        uint64_t v1055 = v965[174];
        uint64_t v1065 = v965[176];
        uint64_t v1035 = v965[169];
        uint64_t v1044 = v965[171];
        uint64_t v301 = v965[158];
        uint64_t v1017 = v965[157];
        uint64_t v1026 = v965[159];
        uint64_t v302 = v965[152];
        uint64_t v999 = v965[151];
        uint64_t v1008 = v965[155];
        uint64_t v303 = v965[58];
        uint64_t v305 = v965[55];
        uint64_t v304 = v965[56];
        goto LABEL_159;
      }
      if (v126 == *MEMORY[0x263F4C0E8])
      {
        uint64_t v428 = v965[119];
        uint64_t v429 = v965[102];
        uint64_t v430 = v965[101];
        uint64_t v431 = v965[52];
        uint64_t v432 = v965[49];
        uint64_t v433 = v965[50];
        uint64_t v434 = v965[13];
        (*(void (**)(uint64_t, void))(v965[12] + 96))(v434, v965[11]);
        v1182 = *(void (**)(uint64_t, uint64_t, uint64_t))(v433 + 32);
        v1182(v431, v434, v432);
        uint64_t v435 = sub_24A710050();
        v1151 = *(NSObject **)(v429 + 16);
        ((void (*)(uint64_t, uint64_t, uint64_t))v1151)(v428, v435, v430);
        v436 = sub_24A762D48();
        os_log_type_t v437 = sub_24A763098();
        if (os_log_type_enabled(v436, v437))
        {
          v438 = (uint8_t *)sub_24A71662C();
          v1198[0] = 0;
          v1195 = 0;
          *(_WORD *)v438 = 0;
          v1197 = v438 + 2;
          sub_24A73BE58(MEMORY[0x263F8EE78], (uint64_t)&v1197, (uint64_t)v1198, (uint64_t)&v1195);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24A6FB000, v436, v437, "Received parameterDisambiguation", v438, 2u);
          sub_24A716670();
        }
        uint64_t v526 = v965[119];
        uint64_t v527 = v965[102];
        uint64_t v528 = v965[101];
        swift_bridgeObjectRelease();

        v1117 = *(void (**)(uint64_t, uint64_t))(v527 + 8);
        v1117(v526, v528);
        uint64_t v84 = (void *)v965[189];
        uint64_t v530 = v965[52];
        uint64_t v529 = v965[53];
        uint64_t v531 = v965[50];
        uint64_t v532 = v965[49];
        ((void (*)(void, uint64_t, void))v1151)(v965[118], v435, v965[101]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v531 + 16))(v529, v530, v532);
        unint64_t v533 = (*(unsigned __int8 *)(v531 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v531 + 80);
        uint64_t v534 = swift_allocObject();
        v1182(v534 + v533, v529, v532);
        v535 = sub_24A762D48();
        os_log_type_t v536 = sub_24A763088();
        uint64_t v537 = swift_allocObject();
        *(unsigned char *)(v537 + 16) = 32;
        uint64_t v538 = swift_allocObject();
        *(unsigned char *)(v538 + 16) = 8;
        uint64_t v539 = swift_allocObject();
        *(void *)(v539 + 16) = sub_24A74C92C;
        *(void *)(v539 + 24) = v534;
        uint64_t v540 = swift_allocObject();
        *(void *)(v540 + 16) = sub_24A74D2F0;
        *(void *)(v540 + 24) = v539;
        sub_24A704710(&qword_2697B3F78);
        uint64_t v541 = swift_allocObject();
        sub_24A734F80(v541, 3);
        void *v542 = sub_24A74D2F8;
        v542[1] = v537;
        v542[2] = sub_24A74D2F8;
        v542[3] = v538;
        v542[4] = sub_24A74D2F4;
        v542[5] = v540;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v535, v536))
        {
          v543 = (uint8_t *)sub_24A71662C();
          uint64_t v544 = swift_slowAlloc();
          v1197 = 0;
          v1198[0] = v544;
          *(_WORD *)v543 = 258;
          v1194 = v543 + 2;
          v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
          uint64_t v1196 = v537;
          sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
          if (!v84)
          {
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
            uint64_t v1196 = v538;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
            uint64_t v1196 = v540;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            _os_log_impl(&dword_24A6FB000, v535, v536, "%s", v543, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24C5CEE90](v544, -1, -1);
            sub_24A716670();
          }
          goto LABEL_264;
        }
        v296 = v965;
        uint64_t v570 = v965[118];
        uint64_t v571 = v965[101];
        swift_release();
        swift_release();
        swift_release();

        v1117(v570, v571);
        v1075 = (void (*)(uint64_t, uint64_t))v965[182];
        uint64_t v299 = v965[178];
        uint64_t v1106 = v965[177];
        v1146 = v965[179];
        uint64_t v300 = v965[175];
        uint64_t v1055 = v965[174];
        uint64_t v1065 = v965[176];
        uint64_t v1035 = v965[169];
        uint64_t v1044 = v965[171];
        uint64_t v301 = v965[158];
        uint64_t v1017 = v965[157];
        uint64_t v1026 = v965[159];
        uint64_t v302 = v965[152];
        uint64_t v999 = v965[151];
        uint64_t v1008 = v965[155];
        uint64_t v303 = v965[52];
        uint64_t v305 = v965[49];
        uint64_t v304 = v965[50];
        goto LABEL_159;
      }
      if (v126 == *MEMORY[0x263F4C0D0])
      {
        uint64_t v492 = v965[117];
        uint64_t v493 = v965[102];
        uint64_t v494 = v965[101];
        uint64_t v495 = v965[46];
        uint64_t v496 = v965[43];
        uint64_t v497 = v965[44];
        uint64_t v498 = v965[13];
        (*(void (**)(uint64_t, void))(v965[12] + 96))(v498, v965[11]);
        v1153 = *(NSObject **)(v497 + 32);
        ((void (*)(uint64_t, uint64_t, uint64_t))v1153)(v495, v498, v496);
        uint64_t v499 = sub_24A710050();
        v1115 = *(void (**)(uint64_t, uint64_t, uint64_t))(v493 + 16);
        v1115(v492, v499, v494);
        v500 = sub_24A762D48();
        os_log_type_t v501 = sub_24A763098();
        if (os_log_type_enabled(v500, v501))
        {
          v502 = (uint8_t *)sub_24A71662C();
          v1198[0] = 0;
          v1195 = 0;
          *(_WORD *)v502 = 0;
          v1197 = v502 + 2;
          sub_24A73BE58(MEMORY[0x263F8EE78], (uint64_t)&v1197, (uint64_t)v1198, (uint64_t)&v1195);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24A6FB000, v500, v501, "Received parameterNotAllowed", v502, 2u);
          sub_24A716670();
        }
        uint64_t v595 = v965[117];
        uint64_t v596 = v965[102];
        uint64_t v597 = v965[101];
        swift_bridgeObjectRelease();

        v1098 = *(void (**)(uint64_t, uint64_t))(v596 + 8);
        v1098(v595, v597);
        uint64_t v84 = (void *)v965[189];
        uint64_t v599 = v965[46];
        uint64_t v598 = v965[47];
        uint64_t v600 = v965[44];
        uint64_t v601 = v965[43];
        v1115(v965[116], v499, v965[101]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v600 + 16))(v598, v599, v601);
        unint64_t v602 = (*(unsigned __int8 *)(v600 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v600 + 80);
        uint64_t v603 = swift_allocObject();
        ((void (*)(unint64_t, uint64_t, uint64_t))v1153)(v603 + v602, v598, v601);
        v604 = sub_24A762D48();
        os_log_type_t v605 = sub_24A763088();
        uint64_t v606 = swift_allocObject();
        *(unsigned char *)(v606 + 16) = 32;
        uint64_t v607 = swift_allocObject();
        *(unsigned char *)(v607 + 16) = 8;
        uint64_t v608 = swift_allocObject();
        *(void *)(v608 + 16) = sub_24A74C8D8;
        *(void *)(v608 + 24) = v603;
        uint64_t v609 = swift_allocObject();
        *(void *)(v609 + 16) = sub_24A74D2F0;
        *(void *)(v609 + 24) = v608;
        sub_24A704710(&qword_2697B3F78);
        uint64_t v610 = swift_allocObject();
        sub_24A734F80(v610, 3);
        void *v611 = sub_24A74D2F8;
        v611[1] = v606;
        v611[2] = sub_24A74D2F8;
        v611[3] = v607;
        v611[4] = sub_24A74D2F4;
        v611[5] = v609;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v604, v605))
        {
          v612 = (uint8_t *)sub_24A71662C();
          uint64_t v613 = swift_slowAlloc();
          v1197 = 0;
          v1198[0] = v613;
          *(_WORD *)v612 = 258;
          v1194 = v612 + 2;
          v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
          uint64_t v1196 = v606;
          sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
          if (!v84)
          {
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
            uint64_t v1196 = v607;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
            uint64_t v1196 = v609;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            _os_log_impl(&dword_24A6FB000, v604, v605, "%s", v612, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24C5CEE90](v613, -1, -1);
            sub_24A716670();
          }
          goto LABEL_264;
        }
        uint64_t v646 = v965[116];
        uint64_t v647 = v965[101];
        swift_release();
        swift_release();
        swift_release();

        v1098(v646, v647);
        os_signpost_type_t v52 = v965;
        v1078 = (void (*)(uint64_t, uint64_t))v965[182];
        uint64_t v648 = v965[178];
        uint64_t v1119 = v965[177];
        v1159 = v965[179];
        uint64_t v649 = v965[175];
        uint64_t v1058 = v965[174];
        uint64_t v1068 = v965[176];
        uint64_t v1038 = v965[169];
        uint64_t v1047 = v965[171];
        uint64_t v650 = v965[158];
        uint64_t v1020 = v965[157];
        uint64_t v1029 = v965[159];
        uint64_t v651 = v965[152];
        uint64_t v1002 = v965[151];
        uint64_t v1011 = v965[155];
        uint64_t v652 = v965[46];
        uint64_t v653 = v965[43];
        uint64_t v654 = v965[44];
LABEL_259:
        uint64_t v991 = v52[18];
        uint64_t v936 = v52[15];
        uint64_t v986 = v52[14];
        sub_24A74C690();
        swift_allocError();
        unsigned char *v937 = 0;
        swift_willThrow();
        swift_release();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v654 + 8))(v652, v653);
        (*(void (**)(uint64_t, uint64_t))(v936 + 8))(v991, v986);
        (*(void (**)(uint64_t, uint64_t))(v651 + 8))(v1011, v1002);
        (*(void (**)(uint64_t, uint64_t))(v650 + 8))(v1029, v1020);
        v1078(v1047, v1038);
        (*(void (**)(uint64_t, uint64_t))(v649 + 8))(v1068, v1058);
        (*(void (**)(NSObject *, uint64_t))(v648 + 8))(v1159, v1119);
        goto LABEL_160;
      }
      if (v126 == *MEMORY[0x263F4C0F0])
      {
        uint64_t v556 = v965[115];
        uint64_t v557 = v965[102];
        uint64_t v558 = v965[101];
        uint64_t v559 = v965[40];
        uint64_t v560 = v965[37];
        uint64_t v561 = v965[38];
        uint64_t v562 = v965[13];
        (*(void (**)(uint64_t, void))(v965[12] + 96))(v562, v965[11]);
        v1184 = *(void (**)(uint64_t, uint64_t, uint64_t))(v561 + 32);
        v1184(v559, v562, v560);
        uint64_t v563 = sub_24A710050();
        v1155 = *(NSObject **)(v557 + 16);
        ((void (*)(uint64_t, uint64_t, uint64_t))v1155)(v556, v563, v558);
        v564 = sub_24A762D48();
        os_log_type_t v565 = sub_24A763098();
        if (os_log_type_enabled(v564, v565))
        {
          v566 = (uint8_t *)sub_24A71662C();
          v1198[0] = 0;
          v1195 = 0;
          *(_WORD *)v566 = 0;
          v1197 = v566 + 2;
          sub_24A73BE58(MEMORY[0x263F8EE78], (uint64_t)&v1197, (uint64_t)v1198, (uint64_t)&v1195);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24A6FB000, v564, v565, "Received parameterCandidatesNotFound", v566, 2u);
          sub_24A716670();
        }
        uint64_t v674 = v965[115];
        uint64_t v675 = v965[102];
        uint64_t v676 = v965[101];
        swift_bridgeObjectRelease();

        v1121 = *(void (**)(uint64_t, uint64_t))(v675 + 8);
        v1121(v674, v676);
        uint64_t v84 = (void *)v965[189];
        uint64_t v678 = v965[40];
        uint64_t v677 = v965[41];
        uint64_t v679 = v965[38];
        uint64_t v680 = v965[37];
        ((void (*)(void, uint64_t, void))v1155)(v965[114], v563, v965[101]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v679 + 16))(v677, v678, v680);
        unint64_t v681 = (*(unsigned __int8 *)(v679 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v679 + 80);
        uint64_t v682 = swift_allocObject();
        v1184(v682 + v681, v677, v680);
        v683 = sub_24A762D48();
        os_log_type_t v684 = sub_24A763088();
        uint64_t v685 = swift_allocObject();
        *(unsigned char *)(v685 + 16) = 32;
        uint64_t v686 = swift_allocObject();
        *(unsigned char *)(v686 + 16) = 8;
        uint64_t v687 = swift_allocObject();
        *(void *)(v687 + 16) = sub_24A74C884;
        *(void *)(v687 + 24) = v682;
        uint64_t v688 = swift_allocObject();
        *(void *)(v688 + 16) = sub_24A74D2F0;
        *(void *)(v688 + 24) = v687;
        sub_24A704710(&qword_2697B3F78);
        uint64_t v689 = swift_allocObject();
        sub_24A734F80(v689, 3);
        void *v690 = sub_24A74D2F8;
        v690[1] = v685;
        v690[2] = sub_24A74D2F8;
        v690[3] = v686;
        v690[4] = sub_24A74D2F4;
        v690[5] = v688;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v683, v684))
        {
          v691 = (uint8_t *)sub_24A71662C();
          uint64_t v692 = swift_slowAlloc();
          v1197 = 0;
          v1198[0] = v692;
          *(_WORD *)v691 = 258;
          v1194 = v691 + 2;
          v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
          uint64_t v1196 = v685;
          sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
          if (!v84)
          {
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
            uint64_t v1196 = v686;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
            uint64_t v1196 = v688;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            _os_log_impl(&dword_24A6FB000, v683, v684, "%s", v691, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24C5CEE90](v692, -1, -1);
            sub_24A716670();
          }
          goto LABEL_264;
        }
        uint64_t v717 = v965[114];
        uint64_t v718 = v965[101];
        swift_release();
        swift_release();
        swift_release();

        v1121(v717, v718);
        os_signpost_type_t v52 = v965;
        v1078 = (void (*)(uint64_t, uint64_t))v965[182];
        uint64_t v648 = v965[178];
        uint64_t v1119 = v965[177];
        v1159 = v965[179];
        uint64_t v649 = v965[175];
        uint64_t v1058 = v965[174];
        uint64_t v1068 = v965[176];
        uint64_t v1038 = v965[169];
        uint64_t v1047 = v965[171];
        uint64_t v650 = v965[158];
        uint64_t v1020 = v965[157];
        uint64_t v1029 = v965[159];
        uint64_t v651 = v965[152];
        uint64_t v1002 = v965[151];
        uint64_t v1011 = v965[155];
        uint64_t v652 = v965[40];
        uint64_t v653 = v965[37];
        uint64_t v654 = v965[38];
        goto LABEL_259;
      }
      if (v126 == *MEMORY[0x263F4C0B0])
      {
        uint64_t v625 = v965[113];
        uint64_t v626 = v965[102];
        uint64_t v627 = v965[101];
        uint64_t v628 = v965[34];
        uint64_t v629 = v965[31];
        uint64_t v630 = v965[32];
        uint64_t v631 = v965[13];
        (*(void (**)(uint64_t, void))(v965[12] + 96))(v631, v965[11]);
        v1186 = *(void (**)(uint64_t, uint64_t, uint64_t))(v630 + 32);
        v1186(v628, v631, v629);
        uint64_t v632 = sub_24A710050();
        v1157 = *(NSObject **)(v626 + 16);
        ((void (*)(uint64_t, uint64_t, uint64_t))v1157)(v625, v632, v627);
        v633 = sub_24A762D48();
        os_log_type_t v634 = sub_24A763098();
        if (os_log_type_enabled(v633, v634))
        {
          v635 = (uint8_t *)sub_24A71662C();
          v1198[0] = 0;
          v1195 = 0;
          *(_WORD *)v635 = 0;
          v1197 = v635 + 2;
          sub_24A73BE58(MEMORY[0x263F8EE78], (uint64_t)&v1197, (uint64_t)v1198, (uint64_t)&v1195);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24A6FB000, v633, v634, "Received actionRequirement", v635, 2u);
          sub_24A716670();
        }
        uint64_t v738 = v965[113];
        uint64_t v739 = v965[102];
        uint64_t v740 = v965[101];
        swift_bridgeObjectRelease();

        v1123 = *(void (**)(uint64_t, uint64_t))(v739 + 8);
        v1123(v738, v740);
        uint64_t v84 = (void *)v965[189];
        uint64_t v742 = v965[34];
        uint64_t v741 = v965[35];
        uint64_t v743 = v965[32];
        uint64_t v744 = v965[31];
        ((void (*)(void, uint64_t, void))v1157)(v965[112], v632, v965[101]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v743 + 16))(v741, v742, v744);
        unint64_t v745 = (*(unsigned __int8 *)(v743 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v743 + 80);
        uint64_t v746 = swift_allocObject();
        v1186(v746 + v745, v741, v744);
        v747 = sub_24A762D48();
        os_log_type_t v748 = sub_24A763088();
        uint64_t v749 = swift_allocObject();
        *(unsigned char *)(v749 + 16) = 32;
        uint64_t v750 = swift_allocObject();
        *(unsigned char *)(v750 + 16) = 8;
        uint64_t v751 = swift_allocObject();
        *(void *)(v751 + 16) = sub_24A74C830;
        *(void *)(v751 + 24) = v746;
        uint64_t v752 = swift_allocObject();
        *(void *)(v752 + 16) = sub_24A74D2F0;
        *(void *)(v752 + 24) = v751;
        sub_24A704710(&qword_2697B3F78);
        uint64_t v753 = swift_allocObject();
        sub_24A734F80(v753, 3);
        void *v754 = sub_24A74D2F8;
        v754[1] = v749;
        v754[2] = sub_24A74D2F8;
        v754[3] = v750;
        v754[4] = sub_24A74D2F4;
        v754[5] = v752;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v747, v748))
        {
          v755 = (uint8_t *)sub_24A71662C();
          uint64_t v756 = swift_slowAlloc();
          v1197 = 0;
          v1198[0] = v756;
          *(_WORD *)v755 = 258;
          v1194 = v755 + 2;
          v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
          uint64_t v1196 = v749;
          sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
          if (!v84)
          {
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
            uint64_t v1196 = v750;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
            uint64_t v1196 = v752;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            _os_log_impl(&dword_24A6FB000, v747, v748, "%s", v755, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24C5CEE90](v756, -1, -1);
            sub_24A716670();
          }
          goto LABEL_264;
        }
        uint64_t v781 = v965[112];
        uint64_t v782 = v965[101];
        swift_release();
        swift_release();
        swift_release();

        v1123(v781, v782);
        os_signpost_type_t v52 = v965;
        v1078 = (void (*)(uint64_t, uint64_t))v965[182];
        uint64_t v648 = v965[178];
        uint64_t v1119 = v965[177];
        v1159 = v965[179];
        uint64_t v649 = v965[175];
        uint64_t v1058 = v965[174];
        uint64_t v1068 = v965[176];
        uint64_t v1038 = v965[169];
        uint64_t v1047 = v965[171];
        uint64_t v650 = v965[158];
        uint64_t v1020 = v965[157];
        uint64_t v1029 = v965[159];
        uint64_t v651 = v965[152];
        uint64_t v1002 = v965[151];
        uint64_t v1011 = v965[155];
        uint64_t v652 = v965[34];
        uint64_t v653 = v965[31];
        uint64_t v654 = v965[32];
        goto LABEL_259;
      }
      if (v126 == *MEMORY[0x263F4C0D8])
      {
        uint64_t v704 = v965[109];
        uint64_t v705 = v965[102];
        uint64_t v706 = v965[101];
        uint64_t v707 = v965[28];
        uint64_t v708 = v965[25];
        uint64_t v709 = v965[26];
        uint64_t v710 = v965[13];
        (*(void (**)(uint64_t, void))(v965[12] + 96))(v710, v965[11]);
        v1188 = *(void (**)(uint64_t, uint64_t, uint64_t))(v709 + 32);
        v1188(v707, v710, v708);
        uint64_t v711 = sub_24A710050();
        v1161 = *(NSObject **)(v705 + 16);
        ((void (*)(uint64_t, uint64_t, uint64_t))v1161)(v704, v711, v706);
        v712 = sub_24A762D48();
        os_log_type_t v713 = sub_24A763098();
        if (os_log_type_enabled(v712, v713))
        {
          v714 = (uint8_t *)sub_24A71662C();
          v1198[0] = 0;
          v1195 = 0;
          *(_WORD *)v714 = 0;
          v1197 = v714 + 2;
          sub_24A73BE58(MEMORY[0x263F8EE78], (uint64_t)&v1197, (uint64_t)v1198, (uint64_t)&v1195);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24A6FB000, v712, v713, "Received valueDisambiguation", v714, 2u);
          sub_24A716670();
        }
        uint64_t v802 = v965[109];
        uint64_t v803 = v965[102];
        uint64_t v804 = v965[101];
        swift_bridgeObjectRelease();

        v1125 = *(void (**)(uint64_t, uint64_t))(v803 + 8);
        v1125(v802, v804);
        uint64_t v84 = (void *)v965[189];
        uint64_t v806 = v965[28];
        uint64_t v805 = v965[29];
        uint64_t v807 = v965[26];
        uint64_t v808 = v965[25];
        ((void (*)(void, uint64_t, void))v1161)(v965[108], v711, v965[101]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v807 + 16))(v805, v806, v808);
        unint64_t v809 = (*(unsigned __int8 *)(v807 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v807 + 80);
        uint64_t v810 = swift_allocObject();
        v1188(v810 + v809, v805, v808);
        v811 = sub_24A762D48();
        os_log_type_t v812 = sub_24A763088();
        uint64_t v813 = swift_allocObject();
        *(unsigned char *)(v813 + 16) = 32;
        uint64_t v814 = swift_allocObject();
        *(unsigned char *)(v814 + 16) = 8;
        uint64_t v815 = swift_allocObject();
        *(void *)(v815 + 16) = sub_24A74C750;
        *(void *)(v815 + 24) = v810;
        uint64_t v816 = swift_allocObject();
        *(void *)(v816 + 16) = sub_24A74D2F0;
        *(void *)(v816 + 24) = v815;
        sub_24A704710(&qword_2697B3F78);
        uint64_t v817 = swift_allocObject();
        sub_24A734F80(v817, 3);
        void *v818 = sub_24A74D2F8;
        v818[1] = v813;
        v818[2] = sub_24A74D2F8;
        v818[3] = v814;
        v818[4] = sub_24A74D2F4;
        v818[5] = v816;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v811, v812))
        {
          v819 = (uint8_t *)sub_24A71662C();
          uint64_t v820 = swift_slowAlloc();
          v1197 = 0;
          v1198[0] = v820;
          *(_WORD *)v819 = 258;
          v1194 = v819 + 2;
          v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
          uint64_t v1196 = v813;
          sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
          if (!v84)
          {
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
            uint64_t v1196 = v814;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
            uint64_t v1196 = v816;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            _os_log_impl(&dword_24A6FB000, v811, v812, "%s", v819, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24C5CEE90](v820, -1, -1);
            sub_24A716670();
          }
          goto LABEL_264;
        }
        uint64_t v857 = v965[108];
        uint64_t v858 = v965[101];
        swift_release();
        swift_release();
        swift_release();

        v1125(v857, v858);
        os_signpost_type_t v52 = v965;
        v1078 = (void (*)(uint64_t, uint64_t))v965[182];
        uint64_t v648 = v965[178];
        uint64_t v1119 = v965[177];
        v1159 = v965[179];
        uint64_t v649 = v965[175];
        uint64_t v1058 = v965[174];
        uint64_t v1068 = v965[176];
        uint64_t v1038 = v965[169];
        uint64_t v1047 = v965[171];
        uint64_t v650 = v965[158];
        uint64_t v1020 = v965[157];
        uint64_t v1029 = v965[159];
        uint64_t v651 = v965[152];
        uint64_t v1002 = v965[151];
        uint64_t v1011 = v965[155];
        uint64_t v652 = v965[28];
        uint64_t v653 = v965[25];
        uint64_t v654 = v965[26];
        goto LABEL_259;
      }
      if (v126 == *MEMORY[0x263F4C0F8])
      {
        uint64_t v768 = v965[107];
        uint64_t v769 = v965[102];
        uint64_t v770 = v965[101];
        uint64_t v771 = v965[22];
        uint64_t v772 = v965[19];
        uint64_t v773 = v965[20];
        uint64_t v774 = v965[13];
        (*(void (**)(uint64_t, void))(v965[12] + 96))(v774, v965[11]);
        v1190 = *(void (**)(uint64_t, uint64_t, uint64_t))(v773 + 32);
        v1190(v771, v774, v772);
        uint64_t v775 = sub_24A710050();
        v1163 = *(NSObject **)(v769 + 16);
        ((void (*)(uint64_t, uint64_t, uint64_t))v1163)(v768, v775, v770);
        v776 = sub_24A762D48();
        os_log_type_t v777 = sub_24A763098();
        if (os_log_type_enabled(v776, v777))
        {
          v778 = (uint8_t *)sub_24A71662C();
          v1198[0] = 0;
          v1195 = 0;
          *(_WORD *)v778 = 0;
          v1197 = v778 + 2;
          sub_24A73BE58(MEMORY[0x263F8EE78], (uint64_t)&v1197, (uint64_t)v1198, (uint64_t)&v1195);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24A6FB000, v776, v777, "Received failure", v778, 2u);
          sub_24A716670();
        }
        uint64_t v878 = v965[107];
        uint64_t v879 = v965[102];
        uint64_t v880 = v965[101];
        swift_bridgeObjectRelease();

        v1129 = *(void (**)(uint64_t, uint64_t))(v879 + 8);
        v1129(v878, v880);
        uint64_t v84 = (void *)v965[189];
        uint64_t v882 = v965[22];
        uint64_t v881 = v965[23];
        uint64_t v883 = v965[20];
        uint64_t v884 = v965[19];
        ((void (*)(void, uint64_t, void))v1163)(v965[106], v775, v965[101]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v883 + 16))(v881, v882, v884);
        unint64_t v885 = (*(unsigned __int8 *)(v883 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v883 + 80);
        uint64_t v886 = swift_allocObject();
        v1190(v886 + v885, v881, v884);
        v887 = sub_24A762D48();
        os_log_type_t v888 = sub_24A763088();
        uint64_t v889 = swift_allocObject();
        *(unsigned char *)(v889 + 16) = 32;
        uint64_t v890 = swift_allocObject();
        *(unsigned char *)(v890 + 16) = 8;
        uint64_t v891 = swift_allocObject();
        *(void *)(v891 + 16) = sub_24A74C6FC;
        *(void *)(v891 + 24) = v886;
        uint64_t v892 = swift_allocObject();
        *(void *)(v892 + 16) = sub_24A74D2F0;
        *(void *)(v892 + 24) = v891;
        sub_24A704710(&qword_2697B3F78);
        uint64_t v893 = swift_allocObject();
        sub_24A734F80(v893, 3);
        void *v894 = sub_24A74D2F8;
        v894[1] = v889;
        v894[2] = sub_24A74D2F8;
        v894[3] = v890;
        v894[4] = sub_24A74D2F4;
        v894[5] = v892;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v887, v888))
        {
          v895 = (uint8_t *)sub_24A71662C();
          uint64_t v896 = swift_slowAlloc();
          v1197 = 0;
          v1198[0] = v896;
          *(_WORD *)v895 = 258;
          v1194 = v895 + 2;
          v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
          uint64_t v1196 = v889;
          sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
          if (!v84)
          {
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
            uint64_t v1196 = v890;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
            uint64_t v1196 = v892;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            _os_log_impl(&dword_24A6FB000, v887, v888, "%s", v895, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24C5CEE90](v896, -1, -1);
            sub_24A716670();
          }
          goto LABEL_264;
        }
        uint64_t v934 = v965[106];
        uint64_t v935 = v965[101];
        swift_release();
        swift_release();
        swift_release();

        v1129(v934, v935);
        os_signpost_type_t v52 = v965;
        v1078 = (void (*)(uint64_t, uint64_t))v965[182];
        uint64_t v648 = v965[178];
        uint64_t v1119 = v965[177];
        v1159 = v965[179];
        uint64_t v649 = v965[175];
        uint64_t v1058 = v965[174];
        uint64_t v1068 = v965[176];
        uint64_t v1038 = v965[169];
        uint64_t v1047 = v965[171];
        uint64_t v650 = v965[158];
        uint64_t v1020 = v965[157];
        uint64_t v1029 = v965[159];
        uint64_t v651 = v965[152];
        uint64_t v1002 = v965[151];
        uint64_t v1011 = v965[155];
        uint64_t v652 = v965[22];
        uint64_t v653 = v965[19];
        uint64_t v654 = v965[20];
        goto LABEL_259;
      }
      uint64_t v1048 = v965[154];
      uint64_t v1059 = v965[155];
      uint64_t v832 = v965[152];
      uint64_t v833 = v965[151];
      uint64_t v834 = v965[105];
      uint64_t v835 = v965[102];
      uint64_t v836 = v965[101];
      uint64_t v1099 = v965[17];
      uint64_t v1126 = v965[18];
      uint64_t v837 = v965[15];
      uint64_t v1079 = v965[14];
      uint64_t v838 = sub_24A710050();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v835 + 16))(v834, v838, v836);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v832 + 16))(v1048, v1059, v833);
      unint64_t v839 = (*(unsigned __int8 *)(v832 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v832 + 80);
      uint64_t v840 = swift_allocObject();
      v15(v840 + v839, v1048, v833);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v837 + 16))(v1099, v1126, v1079);
      unint64_t v841 = (*(unsigned __int8 *)(v837 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v837 + 80);
      uint64_t v842 = swift_allocObject();
      v125(v842 + v841, v1099, v1079);
      v1192 = sub_24A762D48();
      os_log_type_t v843 = sub_24A763088();
      uint64_t v844 = swift_allocObject();
      *(unsigned char *)(v844 + 16) = 32;
      uint64_t v845 = swift_allocObject();
      *(unsigned char *)(v845 + 16) = 8;
      uint64_t v846 = swift_allocObject();
      *(void *)(v846 + 16) = sub_24A74C4A4;
      *(void *)(v846 + 24) = v840;
      uint64_t v847 = swift_allocObject();
      *(void *)(v847 + 16) = sub_24A74D2F0;
      *(void *)(v847 + 24) = v846;
      uint64_t v848 = swift_allocObject();
      *(unsigned char *)(v848 + 16) = 32;
      uint64_t v849 = swift_allocObject();
      *(unsigned char *)(v849 + 16) = 8;
      uint64_t v850 = swift_allocObject();
      *(void *)(v850 + 16) = sub_24A74C5C8;
      *(void *)(v850 + 24) = v842;
      uint64_t v851 = swift_allocObject();
      *(void *)(v851 + 16) = sub_24A74D2F0;
      *(void *)(v851 + 24) = v850;
      sub_24A704710(&qword_2697B3F78);
      uint64_t v852 = swift_allocObject();
      sub_24A734F80(v852, 6);
      void *v853 = sub_24A74D2F8;
      v853[1] = v844;
      v853[2] = sub_24A74D2F8;
      v853[3] = v845;
      v853[4] = sub_24A74D2F4;
      v853[5] = v847;
      v853[6] = sub_24A74D2F8;
      v853[7] = v848;
      v853[8] = sub_24A74D2F8;
      v853[9] = v849;
      v853[10] = sub_24A74D2F4;
      v853[11] = v851;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v1192, v843))
      {
        uint64_t v84 = (void *)v965[189];
        v854 = (uint8_t *)sub_24A71662C();
        v1197 = 0;
        v1198[0] = swift_slowAlloc();
        uint64_t v1127 = v1198[0];
        *(_WORD *)v854 = 514;
        v1194 = v854 + 2;
        v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
        uint64_t v1196 = v844;
        sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
        if (!v84)
        {
          swift_release();
          v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
          uint64_t v1196 = v845;
          sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
          swift_release();
          v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
          uint64_t v1196 = v847;
          sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
          swift_release();
          v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
          uint64_t v1196 = v848;
          sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
          swift_release();
          v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
          uint64_t v1196 = v849;
          sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
          swift_release();
          v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
          uint64_t v1196 = v851;
          sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
          swift_release();
          _os_log_impl(&dword_24A6FB000, v1192, v843, "Got actionResponse: %s\n%s", v854, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x24C5CEE90](v1127, -1, -1);
          sub_24A716670();
        }
        goto LABEL_264;
      }
      uint64_t v920 = v965[105];
      uint64_t v921 = v965[102];
      uint64_t v922 = v965[101];
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v921 + 8))(v920, v922);
      os_signpost_type_t v52 = v965;
      v1081 = (void (*)(uint64_t, uint64_t))v965[182];
      uint64_t v923 = v965[178];
      uint64_t v1132 = v965[177];
      v1165 = v965[179];
      uint64_t v1069 = v965[176];
      uint64_t v924 = v965[175];
      uint64_t v1021 = v965[169];
      uint64_t v1030 = v965[171];
      uint64_t v925 = v965[158];
      uint64_t v1003 = v965[157];
      uint64_t v1012 = v965[159];
      uint64_t v996 = v965[155];
      uint64_t v926 = v965[152];
      uint64_t v990 = v965[151];
      uint64_t v927 = v965[18];
      uint64_t v929 = v965[14];
      uint64_t v928 = v965[15];
      uint64_t v930 = v965[12];
      uint64_t v1050 = v965[174];
      uint64_t v1061 = v965[13];
      uint64_t v931 = v965[11];
LABEL_268:
      uint64_t v1039 = v931;
      sub_24A74C690();
      swift_allocError();
      unsigned char *v960 = 0;
      swift_willThrow();
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v928 + 8))(v927, v929);
      (*(void (**)(uint64_t, uint64_t))(v926 + 8))(v996, v990);
      (*(void (**)(uint64_t, uint64_t))(v925 + 8))(v1012, v1003);
      v1081(v1030, v1021);
      (*(void (**)(uint64_t, uint64_t))(v924 + 8))(v1069, v1050);
      (*(void (**)(NSObject *, uint64_t))(v923 + 8))(v1165, v1132);
      (*(void (**)(uint64_t, uint64_t))(v930 + 8))(v1061, v1039);
      goto LABEL_160;
    }
    if (v21 == *((_DWORD *)v0 + 389))
    {
      uint64_t v153 = v0[162];
      uint64_t v154 = v0[161];
      uint64_t v155 = v0[160];
      uint64_t v156 = v0[92];
      uint64_t v157 = v22[89];
      uint64_t v158 = v22[88];
      uint64_t v159 = v22[87];
      uint64_t v160 = v22[86];
      uint64_t v161 = v22[85];
      (*(void (**)(void, uint64_t))(v154 + 96))(v22[162], v155);
      v966 = v22;
      uint64_t v162 = *(void (**)(uint64_t, uint64_t, uint64_t))(v157 + 32);
      v162(v156, v153, v158);
      sub_24A7627E8();
      int v163 = (*(uint64_t (**)(uint64_t, uint64_t))(v160 + 88))(v159, v161);
      if (v163 == *MEMORY[0x263F4C7D8])
      {
        uint64_t v164 = v966[148];
        uint64_t v165 = v966[102];
        uint64_t v166 = v966[101];
        uint64_t v167 = v966[87];
        uint64_t v168 = v966[84];
        uint64_t v169 = v966[83];
        uint64_t v170 = v966[80];
        uint64_t v171 = v966[79];
        (*(void (**)(uint64_t, void))(v966[86] + 96))(v167, v966[85]);
        v172 = *(void (**)(uint64_t, uint64_t, uint64_t))(v170 + 32);
        v172(v168, v167, v171);
        uint64_t v173 = sub_24A710050();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v165 + 16))(v164, v173, v166);
        v174 = *(void (**)(uint64_t, uint64_t, uint64_t))(v170 + 16);
        v174(v169, v168, v171);
        unint64_t v175 = (*(unsigned __int8 *)(v170 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v170 + 80);
        uint64_t v1170 = swift_allocObject();
        v172(v1170 + v175, v169, v171);
        v174(v169, v168, v171);
        uint64_t v176 = swift_allocObject();
        v172(v176 + v175, v169, v171);
        v1139 = sub_24A762D48();
        os_log_type_t v1103 = sub_24A7630B8();
        uint64_t v177 = swift_allocObject();
        *(unsigned char *)(v177 + 16) = 32;
        uint64_t v178 = swift_allocObject();
        *(unsigned char *)(v178 + 16) = 8;
        uint64_t v179 = swift_allocObject();
        *(void *)(v179 + 16) = sub_24A74CA7C;
        *(void *)(v179 + 24) = v1170;
        uint64_t v180 = swift_allocObject();
        *(void *)(v180 + 16) = sub_24A74D2F0;
        *(void *)(v180 + 24) = v179;
        uint64_t v181 = swift_allocObject();
        *(unsigned char *)(v181 + 16) = 32;
        uint64_t v182 = swift_allocObject();
        *(unsigned char *)(v182 + 16) = 8;
        uint64_t v183 = swift_allocObject();
        *(void *)(v183 + 16) = sub_24A74CAD4;
        *(void *)(v183 + 24) = v176;
        uint64_t v184 = swift_allocObject();
        *(void *)(v184 + 16) = sub_24A74D2F0;
        *(void *)(v184 + 24) = v183;
        sub_24A704710(&qword_2697B3F78);
        uint64_t v185 = swift_allocObject();
        sub_24A734F80(v185, 6);
        void *v186 = sub_24A74D2F8;
        v186[1] = v177;
        v186[2] = sub_24A74D2F8;
        v186[3] = v178;
        v186[4] = sub_24A74D2F4;
        v186[5] = v180;
        v186[6] = sub_24A74D2F8;
        v186[7] = v181;
        v186[8] = sub_24A74D2F8;
        v186[9] = v182;
        v186[10] = sub_24A74D2F4;
        v186[11] = v184;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v1139, v1103))
        {
          uint64_t v187 = v182;
          uint64_t v84 = (void *)v966[189];
          v188 = (uint8_t *)sub_24A71662C();
          v1197 = 0;
          v1198[0] = swift_slowAlloc();
          uint64_t v1087 = v1198[0];
          *(_WORD *)v188 = 514;
          v1194 = v188 + 2;
          v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
          uint64_t v1196 = v177;
          sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
          if (!v84)
          {
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
            uint64_t v1196 = v178;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
            uint64_t v1196 = v180;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
            uint64_t v1196 = v181;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
            uint64_t v1196 = v187;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
            uint64_t v1196 = v184;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            _os_log_impl(&dword_24A6FB000, v1139, v1103, "Success: result=%s appLaunched=%s", v188, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x24C5CEE90](v1087, -1, -1);
            sub_24A716670();
          }
          goto LABEL_264;
        }
        uint64_t v0 = v966;
        v1054 = (void (*)(uint64_t, uint64_t))v966[182];
        uint64_t v1074 = v966[178];
        uint64_t v1089 = v966[177];
        uint64_t v1104 = v966[179];
        uint64_t v1034 = v966[174];
        uint64_t v1043 = v966[176];
        uint64_t v1016 = v966[171];
        uint64_t v1025 = v966[175];
        uint64_t v998 = v966[159];
        uint64_t v1007 = v966[169];
        uint64_t v992 = v966[158];
        uint64_t v995 = v966[157];
        uint64_t v988 = v966[155];
        uint64_t v981 = v966[152];
        uint64_t v983 = v966[151];
        uint64_t v972 = v966[148];
        uint64_t v252 = v966[102];
        uint64_t v968 = v966[101];
        uint64_t v979 = v966[92];
        uint64_t v253 = v966[89];
        uint64_t v976 = v966[88];
        uint64_t v974 = v966[84];
        uint64_t v254 = v966[80];
        uint64_t v970 = v966[79];
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v252 + 8))(v972, v968);
        (*(void (**)(uint64_t, uint64_t))(v254 + 8))(v974, v970);
        (*(void (**)(uint64_t, uint64_t))(v253 + 8))(v979, v976);
        goto LABEL_73;
      }
      if (v163 == *MEMORY[0x263F4C790])
      {
        uint64_t v225 = v966[147];
        uint64_t v226 = v966[102];
        uint64_t v227 = v966[101];
        uint64_t v228 = v966[87];
        uint64_t v229 = v966[78];
        uint64_t v230 = v966[74];
        uint64_t v231 = v966[73];
        (*(void (**)(uint64_t, void))(v966[86] + 96))(v228, v966[85]);
        v1174 = *(void (**)(uint64_t, uint64_t, uint64_t))(v230 + 32);
        v1174(v229, v228, v231);
        uint64_t v232 = sub_24A710050();
        v1142 = *(NSObject **)(v226 + 16);
        ((void (*)(uint64_t, uint64_t, uint64_t))v1142)(v225, v232, v227);
        v233 = sub_24A762D48();
        os_log_type_t v234 = sub_24A763098();
        if (os_log_type_enabled(v233, v234))
        {
          v235 = (uint8_t *)sub_24A71662C();
          v1198[0] = 0;
          v1195 = 0;
          *(_WORD *)v235 = 0;
          v1197 = v235 + 2;
          sub_24A73BE58(MEMORY[0x263F8EE78], (uint64_t)&v1197, (uint64_t)v1198, (uint64_t)&v1195);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24A6FB000, v233, v234, "Received actionConfirmation", v235, 2u);
          sub_24A716670();
        }
        uint64_t v306 = v966[147];
        uint64_t v307 = v966[102];
        uint64_t v308 = v966[101];
        swift_bridgeObjectRelease();

        v1107 = *(void (**)(uint64_t, uint64_t))(v307 + 8);
        v1107(v306, v308);
        v1091 = (void *)v966[189];
        uint64_t v309 = v966[78];
        uint64_t v310 = v966[77];
        uint64_t v311 = v966[74];
        uint64_t v312 = v966[73];
        ((void (*)(void, uint64_t, void))v1142)(v966[146], v232, v966[101]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v311 + 16))(v310, v309, v312);
        unint64_t v313 = (*(unsigned __int8 *)(v311 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v311 + 80);
        uint64_t v314 = swift_allocObject();
        v1174(v314 + v313, v310, v312);
        v315 = sub_24A762D48();
        os_log_type_t v316 = sub_24A763088();
        uint64_t v317 = swift_allocObject();
        *(unsigned char *)(v317 + 16) = 32;
        uint64_t v318 = swift_allocObject();
        *(unsigned char *)(v318 + 16) = 8;
        uint64_t v319 = swift_allocObject();
        *(void *)(v319 + 16) = sub_24A74CA28;
        *(void *)(v319 + 24) = v314;
        uint64_t v320 = swift_allocObject();
        *(void *)(v320 + 16) = sub_24A74D2F0;
        *(void *)(v320 + 24) = v319;
        sub_24A704710(&qword_2697B3F78);
        uint64_t v321 = swift_allocObject();
        sub_24A734F80(v321, 3);
        void *v322 = sub_24A74D2F8;
        v322[1] = v317;
        v322[2] = sub_24A74D2F8;
        v322[3] = v318;
        v322[4] = sub_24A74D2F4;
        v322[5] = v320;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v315, v316))
        {
          v323 = (uint8_t *)sub_24A71662C();
          uint64_t v324 = swift_slowAlloc();
          v1197 = 0;
          v1198[0] = v324;
          *(_WORD *)v323 = 258;
          v1194 = v323 + 2;
          v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
          uint64_t v1196 = v317;
          uint64_t v84 = v1091;
          sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
          if (!v1091)
          {
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
            uint64_t v1196 = v318;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
            uint64_t v1196 = v320;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            _os_log_impl(&dword_24A6FB000, v315, v316, "%s", v323, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24C5CEE90](v324, -1, -1);
            sub_24A716670();
          }
          goto LABEL_264;
        }
        v366 = v966;
        uint64_t v367 = v966[146];
        uint64_t v368 = v966[101];
        swift_release();
        swift_release();
        swift_release();

        v1107(v367, v368);
        v1076 = (void (*)(uint64_t, uint64_t))v966[182];
        uint64_t v369 = v966[178];
        uint64_t v1109 = v966[177];
        v1149 = v966[179];
        uint64_t v370 = v966[175];
        uint64_t v1056 = v966[174];
        uint64_t v1066 = v966[176];
        uint64_t v1036 = v966[169];
        uint64_t v1045 = v966[171];
        uint64_t v371 = v966[158];
        uint64_t v1018 = v966[157];
        uint64_t v1027 = v966[159];
        uint64_t v372 = v966[152];
        uint64_t v1000 = v966[151];
        uint64_t v1009 = v966[155];
        uint64_t v993 = v966[92];
        uint64_t v373 = v966[89];
        uint64_t v984 = v966[88];
        uint64_t v374 = v966[78];
        uint64_t v375 = v966[74];
        uint64_t v376 = v966[73];
      }
      else if (v163 == *MEMORY[0x263F4C798])
      {
        uint64_t v274 = v966[145];
        uint64_t v275 = v966[102];
        uint64_t v276 = v966[101];
        uint64_t v277 = v966[87];
        uint64_t v278 = v966[72];
        uint64_t v279 = v966[68];
        uint64_t v280 = v966[67];
        (*(void (**)(uint64_t, void))(v966[86] + 96))(v277, v966[85]);
        v1177 = *(void (**)(uint64_t, uint64_t, uint64_t))(v279 + 32);
        v1177(v278, v277, v280);
        uint64_t v281 = sub_24A710050();
        v1144 = *(NSObject **)(v275 + 16);
        ((void (*)(uint64_t, uint64_t, uint64_t))v1144)(v274, v281, v276);
        v282 = sub_24A762D48();
        os_log_type_t v283 = sub_24A763098();
        if (os_log_type_enabled(v282, v283))
        {
          v284 = (uint8_t *)sub_24A71662C();
          v1198[0] = 0;
          v1195 = 0;
          *(_WORD *)v284 = 0;
          v1197 = v284 + 2;
          sub_24A73BE58(MEMORY[0x263F8EE78], (uint64_t)&v1197, (uint64_t)v1198, (uint64_t)&v1195);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24A6FB000, v282, v283, "Received toolDisambiguation", v284, 2u);
          sub_24A716670();
        }
        uint64_t v379 = v966[145];
        uint64_t v380 = v966[102];
        uint64_t v381 = v966[101];
        swift_bridgeObjectRelease();

        v1110 = *(void (**)(uint64_t, uint64_t))(v380 + 8);
        v1110(v379, v381);
        v1093 = (void *)v966[189];
        uint64_t v382 = v966[72];
        uint64_t v383 = v966[71];
        uint64_t v384 = v966[68];
        uint64_t v385 = v966[67];
        ((void (*)(void, uint64_t, void))v1144)(v966[144], v281, v966[101]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v384 + 16))(v383, v382, v385);
        unint64_t v386 = (*(unsigned __int8 *)(v384 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v384 + 80);
        uint64_t v387 = swift_allocObject();
        v1177(v387 + v386, v383, v385);
        v388 = sub_24A762D48();
        os_log_type_t v389 = sub_24A763088();
        uint64_t v390 = swift_allocObject();
        *(unsigned char *)(v390 + 16) = 32;
        uint64_t v391 = swift_allocObject();
        *(unsigned char *)(v391 + 16) = 8;
        uint64_t v392 = swift_allocObject();
        *(void *)(v392 + 16) = sub_24A74C7A4;
        *(void *)(v392 + 24) = v387;
        uint64_t v393 = swift_allocObject();
        *(void *)(v393 + 16) = sub_24A74D2F0;
        *(void *)(v393 + 24) = v392;
        sub_24A704710(&qword_2697B3F78);
        uint64_t v394 = swift_allocObject();
        sub_24A734F80(v394, 3);
        void *v395 = sub_24A74D2F8;
        v395[1] = v390;
        v395[2] = sub_24A74D2F8;
        v395[3] = v391;
        v395[4] = sub_24A74D2F4;
        v395[5] = v393;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v388, v389))
        {
          v396 = (uint8_t *)sub_24A71662C();
          uint64_t v397 = swift_slowAlloc();
          v1197 = 0;
          v1198[0] = v397;
          *(_WORD *)v396 = 258;
          v1194 = v396 + 2;
          v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
          uint64_t v1196 = v390;
          uint64_t v84 = v1093;
          sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
          if (!v1093)
          {
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
            uint64_t v1196 = v391;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
            uint64_t v1196 = v393;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            _os_log_impl(&dword_24A6FB000, v388, v389, "%s", v396, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24C5CEE90](v397, -1, -1);
            sub_24A716670();
          }
          goto LABEL_264;
        }
        v366 = v966;
        uint64_t v439 = v966[144];
        uint64_t v440 = v966[101];
        swift_release();
        swift_release();
        swift_release();

        v1110(v439, v440);
        v1076 = (void (*)(uint64_t, uint64_t))v966[182];
        uint64_t v369 = v966[178];
        uint64_t v1109 = v966[177];
        v1149 = v966[179];
        uint64_t v370 = v966[175];
        uint64_t v1056 = v966[174];
        uint64_t v1066 = v966[176];
        uint64_t v1036 = v966[169];
        uint64_t v1045 = v966[171];
        uint64_t v371 = v966[158];
        uint64_t v1018 = v966[157];
        uint64_t v1027 = v966[159];
        uint64_t v372 = v966[152];
        uint64_t v1000 = v966[151];
        uint64_t v1009 = v966[155];
        uint64_t v993 = v966[92];
        uint64_t v373 = v966[89];
        uint64_t v984 = v966[88];
        uint64_t v374 = v966[72];
        uint64_t v375 = v966[68];
        uint64_t v376 = v966[67];
      }
      else if (v163 == *MEMORY[0x263F4C7A0])
      {
        uint64_t v344 = v966[143];
        uint64_t v345 = v966[102];
        uint64_t v346 = v966[101];
        uint64_t v347 = v966[87];
        uint64_t v348 = v966[66];
        uint64_t v349 = v966[61];
        uint64_t v350 = v966[62];
        (*(void (**)(uint64_t, void))(v966[86] + 96))(v347, v966[85]);
        v1179 = *(void (**)(uint64_t, uint64_t, uint64_t))(v350 + 32);
        v1179(v348, v347, v349);
        uint64_t v351 = sub_24A710050();
        v1147 = *(NSObject **)(v345 + 16);
        ((void (*)(uint64_t, uint64_t, uint64_t))v1147)(v344, v351, v346);
        v352 = sub_24A762D48();
        os_log_type_t v353 = sub_24A763098();
        if (os_log_type_enabled(v352, v353))
        {
          v354 = (uint8_t *)sub_24A71662C();
          v1198[0] = 0;
          v1195 = 0;
          *(_WORD *)v354 = 0;
          v1197 = v354 + 2;
          sub_24A73BE58(MEMORY[0x263F8EE78], (uint64_t)&v1197, (uint64_t)v1198, (uint64_t)&v1195);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24A6FB000, v352, v353, "Received parameterNeedsValue", v354, 2u);
          sub_24A716670();
        }
        uint64_t v443 = v966[143];
        uint64_t v444 = v966[102];
        uint64_t v445 = v966[101];
        swift_bridgeObjectRelease();

        v1112 = *(void (**)(uint64_t, uint64_t))(v444 + 8);
        v1112(v443, v445);
        v1095 = (void *)v966[189];
        uint64_t v446 = v966[66];
        uint64_t v447 = v966[65];
        uint64_t v448 = v966[62];
        uint64_t v449 = v966[61];
        ((void (*)(void, uint64_t, void))v1147)(v966[142], v351, v966[101]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v448 + 16))(v447, v446, v449);
        unint64_t v450 = (*(unsigned __int8 *)(v448 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v448 + 80);
        uint64_t v451 = swift_allocObject();
        v1179(v451 + v450, v447, v449);
        v452 = sub_24A762D48();
        os_log_type_t v453 = sub_24A763088();
        uint64_t v454 = swift_allocObject();
        *(unsigned char *)(v454 + 16) = 32;
        uint64_t v455 = swift_allocObject();
        *(unsigned char *)(v455 + 16) = 8;
        uint64_t v456 = swift_allocObject();
        *(void *)(v456 + 16) = sub_24A74C9D4;
        *(void *)(v456 + 24) = v451;
        uint64_t v457 = swift_allocObject();
        *(void *)(v457 + 16) = sub_24A74D2F0;
        *(void *)(v457 + 24) = v456;
        sub_24A704710(&qword_2697B3F78);
        uint64_t v458 = swift_allocObject();
        sub_24A734F80(v458, 3);
        void *v459 = sub_24A74D2F8;
        v459[1] = v454;
        v459[2] = sub_24A74D2F8;
        v459[3] = v455;
        v459[4] = sub_24A74D2F4;
        v459[5] = v457;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v452, v453))
        {
          v460 = (uint8_t *)sub_24A71662C();
          uint64_t v461 = swift_slowAlloc();
          v1197 = 0;
          v1198[0] = v461;
          *(_WORD *)v460 = 258;
          v1194 = v460 + 2;
          v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
          uint64_t v1196 = v454;
          uint64_t v84 = v1095;
          sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
          if (!v1095)
          {
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
            uint64_t v1196 = v455;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
            uint64_t v1196 = v457;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            _os_log_impl(&dword_24A6FB000, v452, v453, "%s", v460, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24C5CEE90](v461, -1, -1);
            sub_24A716670();
          }
          goto LABEL_264;
        }
        v366 = v966;
        uint64_t v503 = v966[142];
        uint64_t v504 = v966[101];
        swift_release();
        swift_release();
        swift_release();

        v1112(v503, v504);
        v1076 = (void (*)(uint64_t, uint64_t))v966[182];
        uint64_t v369 = v966[178];
        uint64_t v1109 = v966[177];
        v1149 = v966[179];
        uint64_t v370 = v966[175];
        uint64_t v1056 = v966[174];
        uint64_t v1066 = v966[176];
        uint64_t v1036 = v966[169];
        uint64_t v1045 = v966[171];
        uint64_t v371 = v966[158];
        uint64_t v1018 = v966[157];
        uint64_t v1027 = v966[159];
        uint64_t v372 = v966[152];
        uint64_t v1000 = v966[151];
        uint64_t v1009 = v966[155];
        uint64_t v993 = v966[92];
        uint64_t v373 = v966[89];
        uint64_t v984 = v966[88];
        uint64_t v374 = v966[66];
        uint64_t v376 = v966[61];
        uint64_t v375 = v966[62];
      }
      else
      {
        if (v163 != *MEMORY[0x263F4C7B8])
        {
          if (v163 == *MEMORY[0x263F4C7C0])
          {
            uint64_t v481 = v966[139];
            uint64_t v482 = v966[102];
            uint64_t v483 = v966[101];
            uint64_t v484 = v966[87];
            uint64_t v485 = v966[54];
            uint64_t v486 = v966[49];
            uint64_t v487 = v966[50];
            (*(void (**)(uint64_t, void))(v966[86] + 96))(v484, v966[85]);
            v1152 = *(NSObject **)(v487 + 32);
            ((void (*)(uint64_t, uint64_t, uint64_t))v1152)(v485, v484, v486);
            uint64_t v488 = sub_24A710050();
            v1114 = *(void (**)(uint64_t, uint64_t, uint64_t))(v482 + 16);
            v1114(v481, v488, v483);
            v489 = sub_24A762D48();
            os_log_type_t v490 = sub_24A763098();
            if (os_log_type_enabled(v489, v490))
            {
              v491 = (uint8_t *)sub_24A71662C();
              v1198[0] = 0;
              v1195 = 0;
              *(_WORD *)v491 = 0;
              v1197 = v491 + 2;
              sub_24A73BE58(MEMORY[0x263F8EE78], (uint64_t)&v1197, (uint64_t)v1198, (uint64_t)&v1195);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_24A6FB000, v489, v490, "Received parameterDisambiguation", v491, 2u);
              sub_24A716670();
            }
            uint64_t v576 = v966[139];
            uint64_t v577 = v966[102];
            uint64_t v578 = v966[101];
            swift_bridgeObjectRelease();

            v1097 = *(void (**)(uint64_t, uint64_t))(v577 + 8);
            v1097(v576, v578);
            uint64_t v84 = (void *)v966[189];
            uint64_t v580 = v966[53];
            uint64_t v579 = v966[54];
            uint64_t v581 = v966[50];
            uint64_t v582 = v966[49];
            v1114(v966[138], v488, v966[101]);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v581 + 16))(v580, v579, v582);
            unint64_t v583 = (*(unsigned __int8 *)(v581 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v581 + 80);
            uint64_t v584 = swift_allocObject();
            ((void (*)(unint64_t, uint64_t, uint64_t))v1152)(v584 + v583, v580, v582);
            v585 = sub_24A762D48();
            os_log_type_t v586 = sub_24A763088();
            uint64_t v587 = swift_allocObject();
            *(unsigned char *)(v587 + 16) = 32;
            uint64_t v588 = swift_allocObject();
            *(unsigned char *)(v588 + 16) = 8;
            uint64_t v589 = swift_allocObject();
            *(void *)(v589 + 16) = sub_24A74C92C;
            *(void *)(v589 + 24) = v584;
            uint64_t v590 = swift_allocObject();
            *(void *)(v590 + 16) = sub_24A74D2F0;
            *(void *)(v590 + 24) = v589;
            sub_24A704710(&qword_2697B3F78);
            uint64_t v591 = swift_allocObject();
            sub_24A734F80(v591, 3);
            void *v592 = sub_24A74D2F8;
            v592[1] = v587;
            v592[2] = sub_24A74D2F8;
            v592[3] = v588;
            v592[4] = sub_24A74D2F4;
            v592[5] = v590;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v585, v586))
            {
              v593 = (uint8_t *)sub_24A71662C();
              uint64_t v594 = swift_slowAlloc();
              v1197 = 0;
              v1198[0] = v594;
              *(_WORD *)v593 = 258;
              v1194 = v593 + 2;
              v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
              uint64_t v1196 = v587;
              sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
              if (!v84)
              {
                swift_release();
                v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
                uint64_t v1196 = v588;
                sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
                swift_release();
                v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
                uint64_t v1196 = v590;
                sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
                swift_release();
                _os_log_impl(&dword_24A6FB000, v585, v586, "%s", v593, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x24C5CEE90](v594, -1, -1);
                sub_24A716670();
              }
              goto LABEL_264;
            }
            uint64_t v636 = v966[138];
            uint64_t v637 = v966[101];
            swift_release();
            swift_release();
            swift_release();

            v1097(v636, v637);
            os_signpost_type_t v52 = v966;
            v1077 = (void (*)(uint64_t, uint64_t))v966[182];
            uint64_t v638 = v966[178];
            uint64_t v1118 = v966[177];
            v1158 = v966[179];
            uint64_t v639 = v966[175];
            uint64_t v1057 = v966[174];
            uint64_t v1067 = v966[176];
            uint64_t v1037 = v966[169];
            uint64_t v1046 = v966[171];
            uint64_t v640 = v966[158];
            uint64_t v1019 = v966[157];
            uint64_t v1028 = v966[159];
            uint64_t v641 = v966[152];
            uint64_t v1001 = v966[151];
            uint64_t v1010 = v966[155];
            uint64_t v994 = v966[92];
            uint64_t v642 = v966[89];
            uint64_t v985 = v966[88];
            uint64_t v643 = v966[54];
            uint64_t v645 = v966[49];
            uint64_t v644 = v966[50];
          }
          else if (v163 == *MEMORY[0x263F4C7A8])
          {
            uint64_t v545 = v966[137];
            uint64_t v546 = v966[102];
            uint64_t v547 = v966[101];
            uint64_t v548 = v966[87];
            uint64_t v549 = v966[48];
            uint64_t v550 = v966[43];
            uint64_t v551 = v966[44];
            (*(void (**)(uint64_t, void))(v966[86] + 96))(v548, v966[85]);
            v1183 = *(void (**)(uint64_t, uint64_t, uint64_t))(v551 + 32);
            v1183(v549, v548, v550);
            uint64_t v552 = sub_24A710050();
            v1154 = *(NSObject **)(v546 + 16);
            ((void (*)(uint64_t, uint64_t, uint64_t))v1154)(v545, v552, v547);
            v553 = sub_24A762D48();
            os_log_type_t v554 = sub_24A763098();
            if (os_log_type_enabled(v553, v554))
            {
              v555 = (uint8_t *)sub_24A71662C();
              v1198[0] = 0;
              v1195 = 0;
              *(_WORD *)v555 = 0;
              v1197 = v555 + 2;
              sub_24A73BE58(MEMORY[0x263F8EE78], (uint64_t)&v1197, (uint64_t)v1198, (uint64_t)&v1195);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_24A6FB000, v553, v554, "Received parameterNotAllowed", v555, 2u);
              sub_24A716670();
            }
            uint64_t v655 = v966[137];
            uint64_t v656 = v966[102];
            uint64_t v657 = v966[101];
            swift_bridgeObjectRelease();

            v1120 = *(void (**)(uint64_t, uint64_t))(v656 + 8);
            v1120(v655, v657);
            uint64_t v84 = (void *)v966[189];
            uint64_t v659 = v966[47];
            uint64_t v658 = v966[48];
            uint64_t v660 = v966[44];
            uint64_t v661 = v966[43];
            ((void (*)(void, uint64_t, void))v1154)(v966[136], v552, v966[101]);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v660 + 16))(v659, v658, v661);
            unint64_t v662 = (*(unsigned __int8 *)(v660 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v660 + 80);
            uint64_t v663 = swift_allocObject();
            v1183(v663 + v662, v659, v661);
            v664 = sub_24A762D48();
            os_log_type_t v665 = sub_24A763088();
            uint64_t v666 = swift_allocObject();
            *(unsigned char *)(v666 + 16) = 32;
            uint64_t v667 = swift_allocObject();
            *(unsigned char *)(v667 + 16) = 8;
            uint64_t v668 = swift_allocObject();
            *(void *)(v668 + 16) = sub_24A74C8D8;
            *(void *)(v668 + 24) = v663;
            uint64_t v669 = swift_allocObject();
            *(void *)(v669 + 16) = sub_24A74D2F0;
            *(void *)(v669 + 24) = v668;
            sub_24A704710(&qword_2697B3F78);
            uint64_t v670 = swift_allocObject();
            sub_24A734F80(v670, 3);
            void *v671 = sub_24A74D2F8;
            v671[1] = v666;
            v671[2] = sub_24A74D2F8;
            v671[3] = v667;
            v671[4] = sub_24A74D2F4;
            v671[5] = v669;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v664, v665))
            {
              v672 = (uint8_t *)sub_24A71662C();
              uint64_t v673 = swift_slowAlloc();
              v1197 = 0;
              v1198[0] = v673;
              *(_WORD *)v672 = 258;
              v1194 = v672 + 2;
              v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
              uint64_t v1196 = v666;
              sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
              if (!v84)
              {
                swift_release();
                v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
                uint64_t v1196 = v667;
                sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
                swift_release();
                v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
                uint64_t v1196 = v669;
                sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
                swift_release();
                _os_log_impl(&dword_24A6FB000, v664, v665, "%s", v672, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x24C5CEE90](v673, -1, -1);
                sub_24A716670();
              }
              goto LABEL_264;
            }
            uint64_t v715 = v966[136];
            uint64_t v716 = v966[101];
            swift_release();
            swift_release();
            swift_release();

            v1120(v715, v716);
            os_signpost_type_t v52 = v966;
            v1077 = (void (*)(uint64_t, uint64_t))v966[182];
            uint64_t v638 = v966[178];
            uint64_t v1118 = v966[177];
            v1158 = v966[179];
            uint64_t v639 = v966[175];
            uint64_t v1057 = v966[174];
            uint64_t v1067 = v966[176];
            uint64_t v1037 = v966[169];
            uint64_t v1046 = v966[171];
            uint64_t v640 = v966[158];
            uint64_t v1019 = v966[157];
            uint64_t v1028 = v966[159];
            uint64_t v641 = v966[152];
            uint64_t v1001 = v966[151];
            uint64_t v1010 = v966[155];
            uint64_t v994 = v966[92];
            uint64_t v642 = v966[89];
            uint64_t v985 = v966[88];
            uint64_t v643 = v966[48];
            uint64_t v645 = v966[43];
            uint64_t v644 = v966[44];
          }
          else if (v163 == *MEMORY[0x263F4C7C8])
          {
            uint64_t v614 = v966[135];
            uint64_t v615 = v966[102];
            uint64_t v616 = v966[101];
            uint64_t v617 = v966[87];
            uint64_t v618 = v966[42];
            uint64_t v619 = v966[37];
            uint64_t v620 = v966[38];
            (*(void (**)(uint64_t, void))(v966[86] + 96))(v617, v966[85]);
            v1185 = *(void (**)(uint64_t, uint64_t, uint64_t))(v620 + 32);
            v1185(v618, v617, v619);
            uint64_t v621 = sub_24A710050();
            v1156 = *(NSObject **)(v615 + 16);
            ((void (*)(uint64_t, uint64_t, uint64_t))v1156)(v614, v621, v616);
            v622 = sub_24A762D48();
            os_log_type_t v623 = sub_24A763098();
            if (os_log_type_enabled(v622, v623))
            {
              v624 = (uint8_t *)sub_24A71662C();
              v1198[0] = 0;
              v1195 = 0;
              *(_WORD *)v624 = 0;
              v1197 = v624 + 2;
              sub_24A73BE58(MEMORY[0x263F8EE78], (uint64_t)&v1197, (uint64_t)v1198, (uint64_t)&v1195);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_24A6FB000, v622, v623, "Received parameterCandidatesNotFound", v624, 2u);
              sub_24A716670();
            }
            uint64_t v719 = v966[135];
            uint64_t v720 = v966[102];
            uint64_t v721 = v966[101];
            swift_bridgeObjectRelease();

            v1122 = *(void (**)(uint64_t, uint64_t))(v720 + 8);
            v1122(v719, v721);
            uint64_t v84 = (void *)v966[189];
            uint64_t v723 = v966[41];
            uint64_t v722 = v966[42];
            uint64_t v724 = v966[38];
            uint64_t v725 = v966[37];
            ((void (*)(void, uint64_t, void))v1156)(v966[134], v621, v966[101]);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v724 + 16))(v723, v722, v725);
            unint64_t v726 = (*(unsigned __int8 *)(v724 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v724 + 80);
            uint64_t v727 = swift_allocObject();
            v1185(v727 + v726, v723, v725);
            v728 = sub_24A762D48();
            os_log_type_t v729 = sub_24A763088();
            uint64_t v730 = swift_allocObject();
            *(unsigned char *)(v730 + 16) = 32;
            uint64_t v731 = swift_allocObject();
            *(unsigned char *)(v731 + 16) = 8;
            uint64_t v732 = swift_allocObject();
            *(void *)(v732 + 16) = sub_24A74C884;
            *(void *)(v732 + 24) = v727;
            uint64_t v733 = swift_allocObject();
            *(void *)(v733 + 16) = sub_24A74D2F0;
            *(void *)(v733 + 24) = v732;
            sub_24A704710(&qword_2697B3F78);
            uint64_t v734 = swift_allocObject();
            sub_24A734F80(v734, 3);
            void *v735 = sub_24A74D2F8;
            v735[1] = v730;
            v735[2] = sub_24A74D2F8;
            v735[3] = v731;
            v735[4] = sub_24A74D2F4;
            v735[5] = v733;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v728, v729))
            {
              v736 = (uint8_t *)sub_24A71662C();
              uint64_t v737 = swift_slowAlloc();
              v1197 = 0;
              v1198[0] = v737;
              *(_WORD *)v736 = 258;
              v1194 = v736 + 2;
              v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
              uint64_t v1196 = v730;
              sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
              if (!v84)
              {
                swift_release();
                v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
                uint64_t v1196 = v731;
                sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
                swift_release();
                v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
                uint64_t v1196 = v733;
                sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
                swift_release();
                _os_log_impl(&dword_24A6FB000, v728, v729, "%s", v736, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x24C5CEE90](v737, -1, -1);
                sub_24A716670();
              }
              goto LABEL_264;
            }
            uint64_t v779 = v966[134];
            uint64_t v780 = v966[101];
            swift_release();
            swift_release();
            swift_release();

            v1122(v779, v780);
            os_signpost_type_t v52 = v966;
            v1077 = (void (*)(uint64_t, uint64_t))v966[182];
            uint64_t v638 = v966[178];
            uint64_t v1118 = v966[177];
            v1158 = v966[179];
            uint64_t v639 = v966[175];
            uint64_t v1057 = v966[174];
            uint64_t v1067 = v966[176];
            uint64_t v1037 = v966[169];
            uint64_t v1046 = v966[171];
            uint64_t v640 = v966[158];
            uint64_t v1019 = v966[157];
            uint64_t v1028 = v966[159];
            uint64_t v641 = v966[152];
            uint64_t v1001 = v966[151];
            uint64_t v1010 = v966[155];
            uint64_t v994 = v966[92];
            uint64_t v642 = v966[89];
            uint64_t v985 = v966[88];
            uint64_t v643 = v966[42];
            uint64_t v645 = v966[37];
            uint64_t v644 = v966[38];
          }
          else if (v163 == *MEMORY[0x263F4C788])
          {
            uint64_t v693 = v966[133];
            uint64_t v694 = v966[102];
            uint64_t v695 = v966[101];
            uint64_t v696 = v966[87];
            uint64_t v697 = v966[36];
            uint64_t v698 = v966[31];
            uint64_t v699 = v966[32];
            (*(void (**)(uint64_t, void))(v966[86] + 96))(v696, v966[85]);
            v1187 = *(void (**)(uint64_t, uint64_t, uint64_t))(v699 + 32);
            v1187(v697, v696, v698);
            uint64_t v700 = sub_24A710050();
            v1160 = *(NSObject **)(v694 + 16);
            ((void (*)(uint64_t, uint64_t, uint64_t))v1160)(v693, v700, v695);
            v701 = sub_24A762D48();
            os_log_type_t v702 = sub_24A763098();
            if (os_log_type_enabled(v701, v702))
            {
              v703 = (uint8_t *)sub_24A71662C();
              v1198[0] = 0;
              v1195 = 0;
              *(_WORD *)v703 = 0;
              v1197 = v703 + 2;
              sub_24A73BE58(MEMORY[0x263F8EE78], (uint64_t)&v1197, (uint64_t)v1198, (uint64_t)&v1195);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_24A6FB000, v701, v702, "Received actionRequirement", v703, 2u);
              sub_24A716670();
            }
            uint64_t v783 = v966[133];
            uint64_t v784 = v966[102];
            uint64_t v785 = v966[101];
            swift_bridgeObjectRelease();

            v1124 = *(void (**)(uint64_t, uint64_t))(v784 + 8);
            v1124(v783, v785);
            uint64_t v84 = (void *)v966[189];
            uint64_t v787 = v966[35];
            uint64_t v786 = v966[36];
            uint64_t v788 = v966[32];
            uint64_t v789 = v966[31];
            ((void (*)(void, uint64_t, void))v1160)(v966[132], v700, v966[101]);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v788 + 16))(v787, v786, v789);
            unint64_t v790 = (*(unsigned __int8 *)(v788 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v788 + 80);
            uint64_t v791 = swift_allocObject();
            v1187(v791 + v790, v787, v789);
            v792 = sub_24A762D48();
            os_log_type_t v793 = sub_24A763088();
            uint64_t v794 = swift_allocObject();
            *(unsigned char *)(v794 + 16) = 32;
            uint64_t v795 = swift_allocObject();
            *(unsigned char *)(v795 + 16) = 8;
            uint64_t v796 = swift_allocObject();
            *(void *)(v796 + 16) = sub_24A74C830;
            *(void *)(v796 + 24) = v791;
            uint64_t v797 = swift_allocObject();
            *(void *)(v797 + 16) = sub_24A74D2F0;
            *(void *)(v797 + 24) = v796;
            sub_24A704710(&qword_2697B3F78);
            uint64_t v798 = swift_allocObject();
            sub_24A734F80(v798, 3);
            void *v799 = sub_24A74D2F8;
            v799[1] = v794;
            v799[2] = sub_24A74D2F8;
            v799[3] = v795;
            v799[4] = sub_24A74D2F4;
            v799[5] = v797;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v792, v793))
            {
              v800 = (uint8_t *)sub_24A71662C();
              uint64_t v801 = swift_slowAlloc();
              v1197 = 0;
              v1198[0] = v801;
              *(_WORD *)v800 = 258;
              v1194 = v800 + 2;
              v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
              uint64_t v1196 = v794;
              sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
              if (!v84)
              {
                swift_release();
                v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
                uint64_t v1196 = v795;
                sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
                swift_release();
                v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
                uint64_t v1196 = v797;
                sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
                swift_release();
                _os_log_impl(&dword_24A6FB000, v792, v793, "%s", v800, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x24C5CEE90](v801, -1, -1);
                sub_24A716670();
              }
              goto LABEL_264;
            }
            uint64_t v855 = v966[132];
            uint64_t v856 = v966[101];
            swift_release();
            swift_release();
            swift_release();

            v1124(v855, v856);
            os_signpost_type_t v52 = v966;
            v1077 = (void (*)(uint64_t, uint64_t))v966[182];
            uint64_t v638 = v966[178];
            uint64_t v1118 = v966[177];
            v1158 = v966[179];
            uint64_t v639 = v966[175];
            uint64_t v1057 = v966[174];
            uint64_t v1067 = v966[176];
            uint64_t v1037 = v966[169];
            uint64_t v1046 = v966[171];
            uint64_t v640 = v966[158];
            uint64_t v1019 = v966[157];
            uint64_t v1028 = v966[159];
            uint64_t v641 = v966[152];
            uint64_t v1001 = v966[151];
            uint64_t v1010 = v966[155];
            uint64_t v994 = v966[92];
            uint64_t v642 = v966[89];
            uint64_t v985 = v966[88];
            uint64_t v643 = v966[36];
            uint64_t v645 = v966[31];
            uint64_t v644 = v966[32];
          }
          else if (v163 == *MEMORY[0x263F4C7B0])
          {
            uint64_t v757 = v966[131];
            uint64_t v758 = v966[102];
            uint64_t v759 = v966[101];
            uint64_t v760 = v966[87];
            uint64_t v761 = v966[30];
            uint64_t v762 = v966[25];
            uint64_t v763 = v966[26];
            (*(void (**)(uint64_t, void))(v966[86] + 96))(v760, v966[85]);
            v1189 = *(void (**)(uint64_t, uint64_t, uint64_t))(v763 + 32);
            v1189(v761, v760, v762);
            uint64_t v764 = sub_24A710050();
            v1162 = *(NSObject **)(v758 + 16);
            ((void (*)(uint64_t, uint64_t, uint64_t))v1162)(v757, v764, v759);
            v765 = sub_24A762D48();
            os_log_type_t v766 = sub_24A763098();
            if (os_log_type_enabled(v765, v766))
            {
              v767 = (uint8_t *)sub_24A71662C();
              v1198[0] = 0;
              v1195 = 0;
              *(_WORD *)v767 = 0;
              v1197 = v767 + 2;
              sub_24A73BE58(MEMORY[0x263F8EE78], (uint64_t)&v1197, (uint64_t)v1198, (uint64_t)&v1195);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_24A6FB000, v765, v766, "Received valueDisambiguation", v767, 2u);
              sub_24A716670();
            }
            uint64_t v859 = v966[131];
            uint64_t v860 = v966[102];
            uint64_t v861 = v966[101];
            swift_bridgeObjectRelease();

            v1128 = *(void (**)(uint64_t, uint64_t))(v860 + 8);
            v1128(v859, v861);
            uint64_t v84 = (void *)v966[189];
            uint64_t v863 = v966[29];
            uint64_t v862 = v966[30];
            uint64_t v864 = v966[26];
            uint64_t v865 = v966[25];
            ((void (*)(void, uint64_t, void))v1162)(v966[130], v764, v966[101]);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v864 + 16))(v863, v862, v865);
            unint64_t v866 = (*(unsigned __int8 *)(v864 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v864 + 80);
            uint64_t v867 = swift_allocObject();
            v1189(v867 + v866, v863, v865);
            v868 = sub_24A762D48();
            os_log_type_t v869 = sub_24A763088();
            uint64_t v870 = swift_allocObject();
            *(unsigned char *)(v870 + 16) = 32;
            uint64_t v871 = swift_allocObject();
            *(unsigned char *)(v871 + 16) = 8;
            uint64_t v872 = swift_allocObject();
            *(void *)(v872 + 16) = sub_24A74C750;
            *(void *)(v872 + 24) = v867;
            uint64_t v873 = swift_allocObject();
            *(void *)(v873 + 16) = sub_24A74D2F0;
            *(void *)(v873 + 24) = v872;
            sub_24A704710(&qword_2697B3F78);
            uint64_t v874 = swift_allocObject();
            sub_24A734F80(v874, 3);
            void *v875 = sub_24A74D2F8;
            v875[1] = v870;
            v875[2] = sub_24A74D2F8;
            v875[3] = v871;
            v875[4] = sub_24A74D2F4;
            v875[5] = v873;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v868, v869))
            {
              v876 = (uint8_t *)sub_24A71662C();
              uint64_t v877 = swift_slowAlloc();
              v1197 = 0;
              v1198[0] = v877;
              *(_WORD *)v876 = 258;
              v1194 = v876 + 2;
              v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
              uint64_t v1196 = v870;
              sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
              if (!v84)
              {
                swift_release();
                v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
                uint64_t v1196 = v871;
                sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
                swift_release();
                v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
                uint64_t v1196 = v873;
                sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
                swift_release();
                _os_log_impl(&dword_24A6FB000, v868, v869, "%s", v876, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x24C5CEE90](v877, -1, -1);
                sub_24A716670();
              }
              goto LABEL_264;
            }
            uint64_t v932 = v966[130];
            uint64_t v933 = v966[101];
            swift_release();
            swift_release();
            swift_release();

            v1128(v932, v933);
            os_signpost_type_t v52 = v966;
            v1077 = (void (*)(uint64_t, uint64_t))v966[182];
            uint64_t v638 = v966[178];
            uint64_t v1118 = v966[177];
            v1158 = v966[179];
            uint64_t v639 = v966[175];
            uint64_t v1057 = v966[174];
            uint64_t v1067 = v966[176];
            uint64_t v1037 = v966[169];
            uint64_t v1046 = v966[171];
            uint64_t v640 = v966[158];
            uint64_t v1019 = v966[157];
            uint64_t v1028 = v966[159];
            uint64_t v641 = v966[152];
            uint64_t v1001 = v966[151];
            uint64_t v1010 = v966[155];
            uint64_t v994 = v966[92];
            uint64_t v642 = v966[89];
            uint64_t v985 = v966[88];
            uint64_t v643 = v966[30];
            uint64_t v645 = v966[25];
            uint64_t v644 = v966[26];
          }
          else
          {
            if (v163 != *MEMORY[0x263F4C7D0])
            {
              uint64_t v1049 = v966[154];
              uint64_t v1060 = v966[155];
              uint64_t v897 = v966[152];
              uint64_t v898 = v966[151];
              uint64_t v899 = v966[127];
              uint64_t v900 = v966[102];
              uint64_t v901 = v966[101];
              uint64_t v1100 = v966[91];
              uint64_t v1130 = v966[92];
              uint64_t v902 = v966[89];
              uint64_t v1080 = v966[88];
              uint64_t v903 = sub_24A710050();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v900 + 16))(v899, v903, v901);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v897 + 16))(v1049, v1060, v898);
              unint64_t v904 = (*(unsigned __int8 *)(v897 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v897 + 80);
              uint64_t v905 = swift_allocObject();
              v15(v905 + v904, v1049, v898);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v902 + 16))(v1100, v1130, v1080);
              unint64_t v906 = (*(unsigned __int8 *)(v902 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v902 + 80);
              uint64_t v907 = swift_allocObject();
              v162(v907 + v906, v1100, v1080);
              v1193 = sub_24A762D48();
              os_log_type_t v908 = sub_24A763088();
              uint64_t v909 = swift_allocObject();
              *(unsigned char *)(v909 + 16) = 32;
              uint64_t v910 = swift_allocObject();
              *(unsigned char *)(v910 + 16) = 8;
              uint64_t v911 = swift_allocObject();
              *(void *)(v911 + 16) = sub_24A74C4A4;
              *(void *)(v911 + 24) = v905;
              uint64_t v912 = swift_allocObject();
              *(void *)(v912 + 16) = sub_24A74D2F0;
              *(void *)(v912 + 24) = v911;
              uint64_t v913 = swift_allocObject();
              *(unsigned char *)(v913 + 16) = 32;
              uint64_t v914 = swift_allocObject();
              *(unsigned char *)(v914 + 16) = 8;
              uint64_t v915 = swift_allocObject();
              *(void *)(v915 + 16) = sub_24A74CB48;
              *(void *)(v915 + 24) = v907;
              uint64_t v916 = swift_allocObject();
              *(void *)(v916 + 16) = sub_24A74D2F0;
              *(void *)(v916 + 24) = v915;
              sub_24A704710(&qword_2697B3F78);
              uint64_t v917 = swift_allocObject();
              sub_24A734F80(v917, 6);
              void *v918 = sub_24A74D2F8;
              v918[1] = v909;
              v918[2] = sub_24A74D2F8;
              v918[3] = v910;
              v918[4] = sub_24A74D2F4;
              v918[5] = v912;
              v918[6] = sub_24A74D2F8;
              v918[7] = v913;
              v918[8] = sub_24A74D2F8;
              v918[9] = v914;
              v918[10] = sub_24A74D2F4;
              v918[11] = v916;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_bridgeObjectRelease();
              if (os_log_type_enabled(v1193, v908))
              {
                uint64_t v84 = (void *)v966[189];
                v919 = (uint8_t *)sub_24A71662C();
                v1197 = 0;
                v1198[0] = swift_slowAlloc();
                uint64_t v1131 = v1198[0];
                *(_WORD *)v919 = 514;
                v1194 = v919 + 2;
                v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
                uint64_t v1196 = v909;
                sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
                if (!v84)
                {
                  swift_release();
                  v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
                  uint64_t v1196 = v910;
                  sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
                  swift_release();
                  v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
                  uint64_t v1196 = v912;
                  sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
                  swift_release();
                  v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
                  uint64_t v1196 = v913;
                  sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
                  swift_release();
                  v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
                  uint64_t v1196 = v914;
                  sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
                  swift_release();
                  v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
                  uint64_t v1196 = v916;
                  sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
                  swift_release();
                  _os_log_impl(&dword_24A6FB000, v1193, v908, "Got actionResponse: %s\n%s", v919, 0x16u);
                  swift_arrayDestroy();
                  MEMORY[0x24C5CEE90](v1131, -1, -1);
                  sub_24A716670();
                }
                goto LABEL_264;
              }
              uint64_t v957 = v966[127];
              uint64_t v958 = v966[102];
              uint64_t v959 = v966[101];
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();

              (*(void (**)(uint64_t, uint64_t))(v958 + 8))(v957, v959);
              os_signpost_type_t v52 = v966;
              v1081 = (void (*)(uint64_t, uint64_t))v966[182];
              uint64_t v923 = v966[178];
              uint64_t v1132 = v966[177];
              v1165 = v966[179];
              uint64_t v1069 = v966[176];
              uint64_t v924 = v966[175];
              uint64_t v1021 = v966[169];
              uint64_t v1030 = v966[171];
              uint64_t v925 = v966[158];
              uint64_t v1003 = v966[157];
              uint64_t v1012 = v966[159];
              uint64_t v996 = v966[155];
              uint64_t v926 = v966[152];
              uint64_t v990 = v966[151];
              uint64_t v927 = v966[92];
              uint64_t v928 = v966[89];
              uint64_t v929 = v966[88];
              uint64_t v1050 = v966[174];
              uint64_t v1061 = v966[87];
              uint64_t v930 = v966[86];
              uint64_t v931 = v966[85];
              goto LABEL_268;
            }
            uint64_t v821 = v966[129];
            uint64_t v822 = v966[102];
            uint64_t v823 = v966[101];
            uint64_t v824 = v966[87];
            uint64_t v825 = v966[24];
            uint64_t v826 = v966[19];
            uint64_t v827 = v966[20];
            (*(void (**)(uint64_t, void))(v966[86] + 96))(v824, v966[85]);
            v1191 = *(void (**)(uint64_t, uint64_t, uint64_t))(v827 + 32);
            v1191(v825, v824, v826);
            uint64_t v828 = sub_24A710050();
            v1164 = *(NSObject **)(v822 + 16);
            ((void (*)(uint64_t, uint64_t, uint64_t))v1164)(v821, v828, v823);
            v829 = sub_24A762D48();
            os_log_type_t v830 = sub_24A763098();
            if (os_log_type_enabled(v829, v830))
            {
              v831 = (uint8_t *)sub_24A71662C();
              v1198[0] = 0;
              v1195 = 0;
              *(_WORD *)v831 = 0;
              v1197 = v831 + 2;
              sub_24A73BE58(MEMORY[0x263F8EE78], (uint64_t)&v1197, (uint64_t)v1198, (uint64_t)&v1195);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_24A6FB000, v829, v830, "Received failure", v831, 2u);
              sub_24A716670();
            }
            uint64_t v938 = v966[129];
            uint64_t v939 = v966[102];
            uint64_t v940 = v966[101];
            swift_bridgeObjectRelease();

            v1133 = *(void (**)(uint64_t, uint64_t))(v939 + 8);
            v1133(v938, v940);
            uint64_t v84 = (void *)v966[189];
            uint64_t v942 = v966[23];
            uint64_t v941 = v966[24];
            uint64_t v943 = v966[20];
            uint64_t v944 = v966[19];
            ((void (*)(void, uint64_t, void))v1164)(v966[128], v828, v966[101]);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v943 + 16))(v942, v941, v944);
            unint64_t v945 = (*(unsigned __int8 *)(v943 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v943 + 80);
            uint64_t v946 = swift_allocObject();
            v1191(v946 + v945, v942, v944);
            v947 = sub_24A762D48();
            os_log_type_t v948 = sub_24A763088();
            uint64_t v949 = swift_allocObject();
            *(unsigned char *)(v949 + 16) = 32;
            uint64_t v950 = swift_allocObject();
            *(unsigned char *)(v950 + 16) = 8;
            uint64_t v951 = swift_allocObject();
            *(void *)(v951 + 16) = sub_24A74C6FC;
            *(void *)(v951 + 24) = v946;
            uint64_t v952 = swift_allocObject();
            *(void *)(v952 + 16) = sub_24A74D2F0;
            *(void *)(v952 + 24) = v951;
            sub_24A704710(&qword_2697B3F78);
            uint64_t v953 = swift_allocObject();
            sub_24A734F80(v953, 3);
            void *v954 = sub_24A74D2F8;
            v954[1] = v949;
            v954[2] = sub_24A74D2F8;
            v954[3] = v950;
            v954[4] = sub_24A74D2F4;
            v954[5] = v952;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v947, v948))
            {
              v955 = (uint8_t *)sub_24A71662C();
              uint64_t v956 = swift_slowAlloc();
              v1197 = 0;
              v1198[0] = v956;
              *(_WORD *)v955 = 258;
              v1194 = v955 + 2;
              v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
              uint64_t v1196 = v949;
              sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
              if (!v84)
              {
                swift_release();
                v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
                uint64_t v1196 = v950;
                sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
                swift_release();
                v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
                uint64_t v1196 = v952;
                sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
                swift_release();
                _os_log_impl(&dword_24A6FB000, v947, v948, "%s", v955, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x24C5CEE90](v956, -1, -1);
                sub_24A716670();
              }
              goto LABEL_264;
            }
            uint64_t v961 = v966[128];
            uint64_t v962 = v966[101];
            swift_release();
            swift_release();
            swift_release();

            v1133(v961, v962);
            os_signpost_type_t v52 = v966;
            v1077 = (void (*)(uint64_t, uint64_t))v966[182];
            uint64_t v638 = v966[178];
            uint64_t v1118 = v966[177];
            v1158 = v966[179];
            uint64_t v639 = v966[175];
            uint64_t v1057 = v966[174];
            uint64_t v1067 = v966[176];
            uint64_t v1037 = v966[169];
            uint64_t v1046 = v966[171];
            uint64_t v640 = v966[158];
            uint64_t v1019 = v966[157];
            uint64_t v1028 = v966[159];
            uint64_t v641 = v966[152];
            uint64_t v1001 = v966[151];
            uint64_t v1010 = v966[155];
            uint64_t v994 = v966[92];
            uint64_t v642 = v966[89];
            uint64_t v985 = v966[88];
            uint64_t v643 = v966[24];
            uint64_t v645 = v966[19];
            uint64_t v644 = v966[20];
          }
          sub_24A74C690();
          swift_allocError();
          unsigned char *v963 = 1;
          swift_willThrow();
          swift_release();
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v644 + 8))(v643, v645);
          (*(void (**)(uint64_t, uint64_t))(v642 + 8))(v994, v985);
          (*(void (**)(uint64_t, uint64_t))(v641 + 8))(v1010, v1001);
          (*(void (**)(uint64_t, uint64_t))(v640 + 8))(v1028, v1019);
          v1077(v1046, v1037);
          (*(void (**)(uint64_t, uint64_t))(v639 + 8))(v1067, v1057);
          (*(void (**)(NSObject *, uint64_t))(v638 + 8))(v1158, v1118);
          goto LABEL_160;
        }
        uint64_t v417 = v966[141];
        uint64_t v418 = v966[102];
        uint64_t v419 = v966[101];
        uint64_t v420 = v966[87];
        uint64_t v421 = v966[60];
        uint64_t v422 = v966[55];
        uint64_t v423 = v966[56];
        (*(void (**)(uint64_t, void))(v966[86] + 96))(v420, v966[85]);
        v1181 = *(void (**)(uint64_t, uint64_t, uint64_t))(v423 + 32);
        v1181(v421, v420, v422);
        uint64_t v424 = sub_24A710050();
        v1150 = *(NSObject **)(v418 + 16);
        ((void (*)(uint64_t, uint64_t, uint64_t))v1150)(v417, v424, v419);
        v425 = sub_24A762D48();
        os_log_type_t v426 = sub_24A763098();
        if (os_log_type_enabled(v425, v426))
        {
          v427 = (uint8_t *)sub_24A71662C();
          v1198[0] = 0;
          v1195 = 0;
          *(_WORD *)v427 = 0;
          v1197 = v427 + 2;
          sub_24A73BE58(MEMORY[0x263F8EE78], (uint64_t)&v1197, (uint64_t)v1198, (uint64_t)&v1195);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24A6FB000, v425, v426, "Received parameterConfirmation", v427, 2u);
          sub_24A716670();
        }
        uint64_t v507 = v966[141];
        uint64_t v508 = v966[102];
        uint64_t v509 = v966[101];
        swift_bridgeObjectRelease();

        v1116 = *(void (**)(uint64_t, uint64_t))(v508 + 8);
        v1116(v507, v509);
        uint64_t v84 = (void *)v966[189];
        uint64_t v511 = v966[59];
        uint64_t v510 = v966[60];
        uint64_t v512 = v966[56];
        uint64_t v513 = v966[55];
        ((void (*)(void, uint64_t, void))v1150)(v966[140], v424, v966[101]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v512 + 16))(v511, v510, v513);
        unint64_t v514 = (*(unsigned __int8 *)(v512 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v512 + 80);
        uint64_t v515 = swift_allocObject();
        v1181(v515 + v514, v511, v513);
        v516 = sub_24A762D48();
        os_log_type_t v517 = sub_24A763088();
        uint64_t v518 = swift_allocObject();
        *(unsigned char *)(v518 + 16) = 32;
        uint64_t v519 = swift_allocObject();
        *(unsigned char *)(v519 + 16) = 8;
        uint64_t v520 = swift_allocObject();
        *(void *)(v520 + 16) = sub_24A74C980;
        *(void *)(v520 + 24) = v515;
        uint64_t v521 = swift_allocObject();
        *(void *)(v521 + 16) = sub_24A74D2F0;
        *(void *)(v521 + 24) = v520;
        sub_24A704710(&qword_2697B3F78);
        uint64_t v522 = swift_allocObject();
        sub_24A734F80(v522, 3);
        void *v523 = sub_24A74D2F8;
        v523[1] = v518;
        v523[2] = sub_24A74D2F8;
        v523[3] = v519;
        v523[4] = sub_24A74D2F4;
        v523[5] = v521;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v516, v517))
        {
          v524 = (uint8_t *)sub_24A71662C();
          uint64_t v525 = swift_slowAlloc();
          v1197 = 0;
          v1198[0] = v525;
          *(_WORD *)v524 = 258;
          v1194 = v524 + 2;
          v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
          uint64_t v1196 = v518;
          sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
          if (!v84)
          {
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F8;
            uint64_t v1196 = v519;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            v1195 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24A74D2F4;
            uint64_t v1196 = v521;
            sub_24A716634(&v1195, (uint64_t)&v1194, (uint64_t)&v1197, (uint64_t)v1198);
            swift_release();
            _os_log_impl(&dword_24A6FB000, v516, v517, "%s", v524, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24C5CEE90](v525, -1, -1);
            sub_24A716670();
          }
          goto LABEL_264;
        }
        v366 = v966;
        uint64_t v567 = v966[140];
        uint64_t v568 = v966[101];
        swift_release();
        swift_release();
        swift_release();

        v1116(v567, v568);
        v1076 = (void (*)(uint64_t, uint64_t))v966[182];
        uint64_t v369 = v966[178];
        uint64_t v1109 = v966[177];
        v1149 = v966[179];
        uint64_t v370 = v966[175];
        uint64_t v1056 = v966[174];
        uint64_t v1066 = v966[176];
        uint64_t v1036 = v966[169];
        uint64_t v1045 = v966[171];
        uint64_t v371 = v966[158];
        uint64_t v1018 = v966[157];
        uint64_t v1027 = v966[159];
        uint64_t v372 = v966[152];
        uint64_t v1000 = v966[151];
        uint64_t v1009 = v966[155];
        uint64_t v993 = v966[92];
        uint64_t v373 = v966[89];
        uint64_t v984 = v966[88];
        uint64_t v374 = v966[60];
        uint64_t v376 = v966[55];
        uint64_t v375 = v966[56];
      }
      sub_24A74C690();
      swift_allocError();
      unsigned char *v569 = 1;
      swift_willThrow();
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v375 + 8))(v374, v376);
      (*(void (**)(uint64_t, uint64_t))(v373 + 8))(v993, v984);
      (*(void (**)(uint64_t, uint64_t))(v372 + 8))(v1009, v1000);
      (*(void (**)(uint64_t, uint64_t))(v371 + 8))(v1027, v1018);
      v1076(v1045, v1036);
      (*(void (**)(uint64_t, uint64_t))(v370 + 8))(v1066, v1056);
      (*(void (**)(NSObject *, uint64_t))(v369 + 8))(v1149, v1109);
      os_signpost_type_t v52 = v366;
      goto LABEL_160;
    }
    uint64_t v202 = v0[155];
    uint64_t v203 = v0[154];
    uint64_t v204 = v22[152];
    uint64_t v205 = v22[151];
    uint64_t v206 = v22[104];
    uint64_t v207 = v22[102];
    uint64_t v208 = v22[101];
    uint64_t v209 = sub_24A710050();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v207 + 16))(v206, v209, v208);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v204 + 16))(v203, v202, v205);
    unint64_t v210 = (*(unsigned __int8 *)(v204 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v204 + 80);
    uint64_t v211 = swift_allocObject();
    v15(v211 + v210, v203, v205);
    v212 = sub_24A762D48();
    os_log_type_t v213 = sub_24A763088();
    uint64_t v214 = swift_allocObject();
    *(unsigned char *)(v214 + 16) = 32;
    uint64_t v215 = swift_allocObject();
    *(unsigned char *)(v215 + 16) = 8;
    uint64_t v216 = swift_allocObject();
    *(void *)(v216 + 16) = sub_24A74C4A4;
    *(void *)(v216 + 24) = v211;
    uint64_t v217 = swift_allocObject();
    *(void *)(v217 + 16) = sub_24A74C50C;
    *(void *)(v217 + 24) = v216;
    sub_24A704710(&qword_2697B3F78);
    uint64_t v218 = swift_allocObject();
    sub_24A734F80(v218, 3);
    void *v219 = sub_24A74C4F4;
    v219[1] = v214;
    v219[2] = sub_24A74D2F8;
    v219[3] = v215;
    v219[4] = sub_24A74C514;
    v219[5] = v217;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v212, v213))
    {
      os_log_type_t v1141 = v213;
      v1173 = v212;
      uint64_t v84 = (void *)v22[189];
      v220 = (uint8_t *)sub_24A71662C();
      uint64_t v221 = swift_slowAlloc();
      v22[5] = 0;
      v22[6] = v221;
      uint64_t v1088 = v221;
      *(_WORD *)v220 = 258;
      v22[3] = v214;
      v22[4] = v220 + 2;
      v22[2] = sub_24A74C4F4;
      sub_24A716634((uint64_t (**)(uint64_t, uint64_t, uint64_t))v22 + 2, (uint64_t)(v22 + 4), (uint64_t)(v22 + 5), (uint64_t)(v22 + 6));
      if (!v84)
      {
        swift_release();
        v22[2] = sub_24A74D2F8;
        v22[3] = v215;
        sub_24A716634((uint64_t (**)(uint64_t, uint64_t, uint64_t))v22 + 2, (uint64_t)(v22 + 4), (uint64_t)(v22 + 5), (uint64_t)(v22 + 6));
        swift_release();
        v22[2] = sub_24A74C514;
        v22[3] = v217;
        sub_24A716634((uint64_t (**)(uint64_t, uint64_t, uint64_t))v22 + 2, (uint64_t)(v22 + 4), (uint64_t)(v22 + 5), (uint64_t)(v22 + 6));
        swift_release();
        _os_log_impl(&dword_24A6FB000, v1173, v1141, "Got payload: %s", v220, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5CEE90](v1088, -1, -1);
        sub_24A716670();
      }
      goto LABEL_264;
    }
    uint64_t v1176 = v22[155];
    uint64_t v247 = v22[152];
    uint64_t v248 = v22[151];
    uint64_t v249 = v22[104];
    uint64_t v250 = v22[102];
    uint64_t v251 = v22[101];

    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v250 + 8))(v249, v251);
    (*(void (**)(uint64_t, uint64_t))(v247 + 8))(v1176, v248);
    (*(void (**)(void, void))(v22[161] + 8))(v22[162], v22[160]);
    uint64_t v37 = v22;
LABEL_10:
    v1167 = (char *)&dword_2697B3F70 + dword_2697B3F70;
    uint64_t v38 = (void *)swift_task_alloc();
    v37[188] = v38;
    *uint64_t v38 = v37;
    v38[1] = sub_24A73FB5C;
    uint64_t v39 = v37[156];
    ((void (*)(uint64_t, void, void))v1167)(v39, 0, 0);
    return;
  }
  uint64_t v87 = v0[162];
  uint64_t v88 = v0[161];
  uint64_t v89 = v0[160];
  uint64_t v90 = v0[9];
  uint64_t v91 = v0[10];
  uint64_t v92 = v22[8];
  (*(void (**)(void, uint64_t))(v88 + 96))(v22[162], v89);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 32))(v91, v87, v92);
  uint64_t v93 = (void *)swift_task_alloc();
  v22[190] = v93;
  *uint64_t v93 = v22;
  v93[1] = sub_24A74AD44;
  uint64_t v94 = v22[180];
  uint64_t v95 = v22[171];
  uint64_t v96 = v22[10];
  MEMORY[0x270F3D8A0](v96, v94, v95, 0, 0);
}

void sub_24A74AD24()
{
  (*(void (**)(uint64_t, uint64_t))(v3 - 152))(v2, v1);
  JUMPOUT(0x24A74AB5CLL);
}

uint64_t sub_24A74AD44()
{
  *(void *)(*(void *)v1 + 1528) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24A74B644;
  }
  else {
    uint64_t v2 = sub_24A74AE58;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24A74AE58()
{
  uint64_t v1 = v0[155];
  uint64_t v2 = v0[152];
  uint64_t v3 = v0[151];
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2697B3F70 + dword_2697B3F70);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[188] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24A73FB5C;
  uint64_t v5 = v0[156];
  return v7(v5, 0, 0);
}

uint64_t sub_24A74AF50()
{
  uint64_t v12 = (void (*)(uint64_t, uint64_t))v0[182];
  uint64_t v1 = v0[178];
  uint64_t v13 = v0[177];
  uint64_t v14 = v0[179];
  uint64_t v11 = v0[176];
  uint64_t v2 = v0[175];
  uint64_t v3 = v0[174];
  uint64_t v4 = v0[171];
  uint64_t v5 = v0[169];
  uint64_t v6 = v0[159];
  uint64_t v7 = v0[158];
  uint64_t v8 = v0[157];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  v12(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v11, v3);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v14, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_24A74B644()
{
  uint64_t v18 = (void (*)(uint64_t, uint64_t))v0[182];
  uint64_t v1 = v0[178];
  uint64_t v19 = v0[177];
  uint64_t v20 = v0[179];
  uint64_t v2 = v0[175];
  uint64_t v16 = v0[174];
  uint64_t v17 = v0[176];
  uint64_t v14 = v0[169];
  uint64_t v15 = v0[171];
  uint64_t v3 = v0[158];
  uint64_t v12 = v0[157];
  uint64_t v13 = v0[159];
  uint64_t v11 = v0[155];
  uint64_t v4 = v0[152];
  uint64_t v5 = v0[151];
  uint64_t v6 = v0[9];
  uint64_t v7 = v0[10];
  uint64_t v8 = v0[8];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v11, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v12);
  v18(v15, v14);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v17, v16);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v20, v19);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_24A74BD7C()
{
  return sub_24A762CF8();
}

uint64_t sub_24A74BDEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  uint64_t v5 = sub_24A762848();
  unint64_t v6 = sub_24A74D060();
  uint64_t v7 = (void *)swift_task_alloc();
  v3[5] = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24A74BEB0;
  return MEMORY[0x270FA1E80](a1, v5, v6);
}

uint64_t sub_24A74BEB0()
{
  uint64_t v2 = (void *)*v1;
  v2[6] = v0;
  swift_task_dealloc();
  if (v0)
  {
    if (v2[3])
    {
      swift_getObjectType();
      uint64_t v3 = sub_24A762F88();
      uint64_t v5 = v4;
    }
    else
    {
      uint64_t v3 = 0;
      uint64_t v5 = 0;
    }
    return MEMORY[0x270FA2498](sub_24A74C020, v3, v5);
  }
  else
  {
    unint64_t v6 = (uint64_t (*)(void))v2[1];
    return v6();
  }
}

uint64_t sub_24A74C020()
{
  v0[2] = v0[6];
  sub_24A704710(&qword_2697B3008);
  swift_willThrowTypedImpl();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24A74C0A8()
{
  uint64_t v0 = sub_24A762638();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A762758();
  uint64_t v4 = sub_24A762628();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_24A74C17C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  MEMORY[0x270FA5388](v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v7 - v4, a1, v3);
  return sub_24A762E18();
}

uint64_t sub_24A74C248(uint64_t a1, uint64_t (*a2)(void), void (*a3)(uint64_t))
{
  uint64_t v4 = a2(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  a3(v5);
  return sub_24A762E18();
}

uint64_t sub_24A74C2DC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_24A71651C;
  return ScheduledQueryStandardRunner.run(query:)(a1, a2);
}

unint64_t sub_24A74C378()
{
  unint64_t result = qword_2697B3F48;
  if (!qword_2697B3F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3F48);
  }
  return result;
}

uint64_t sub_24A74C3CC(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_24A74C3DC(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    sub_24A7166D0(result, a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQueryStandardRunner()
{
  return &type metadata for ScheduledQueryStandardRunner;
}

uint64_t sub_24A74C42C(uint64_t a1)
{
  uint64_t v2 = sub_24A704710(&qword_2697B3F60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24A74C48C()
{
  return sub_24A74CEE0(MEMORY[0x263F4CA80]);
}

uint64_t sub_24A74C4A4()
{
  return sub_24A74C534(MEMORY[0x263F4CA80], MEMORY[0x263F4C520], MEMORY[0x263F4CA78]);
}

uint64_t sub_24A74C4E4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

unsigned char **sub_24A74C4F4(unsigned char **a1, uint64_t a2, uint64_t a3)
{
  return sub_24A716D74(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

uint64_t sub_24A74C4FC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74C50C()
{
  return sub_24A7166E4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_24A74C514(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_24A71670C(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_24A74C51C()
{
  return sub_24A74CEE0(MEMORY[0x263F4CA80]);
}

uint64_t sub_24A74C534(uint64_t (*a1)(void), uint64_t (*a2)(void), void (*a3)(uint64_t))
{
  uint64_t v6 = *(void *)(a1(0) - 8);
  return sub_24A74C248(v3 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), a2, a3);
}

uint64_t sub_24A74C5B0()
{
  return sub_24A74CEE0(MEMORY[0x263F4C1F0]);
}

uint64_t sub_24A74C5C8()
{
  return sub_24A74C5E4(MEMORY[0x263F4C1F0], MEMORY[0x263F4C1F0]);
}

uint64_t sub_24A74C5E4(uint64_t (*a1)(void), uint64_t (*a2)(void))
{
  uint64_t v4 = *(void *)(a1(0) - 8);
  return sub_24A74C17C(v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), a2);
}

uint64_t sub_24A74C650()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74C660()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74C670()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74C680()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

unint64_t sub_24A74C690()
{
  unint64_t result = qword_2697B3F80;
  if (!qword_2697B3F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3F80);
  }
  return result;
}

uint64_t sub_24A74C6E4()
{
  return sub_24A74CEE0(MEMORY[0x263F4C098]);
}

uint64_t sub_24A74C6FC()
{
  return sub_24A74C5E4(MEMORY[0x263F4C098], MEMORY[0x263F4C098]);
}

uint64_t sub_24A74C718()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74C728()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74C738()
{
  return sub_24A74CEE0(MEMORY[0x263F4C9E8]);
}

uint64_t sub_24A74C750()
{
  return sub_24A74C5E4(MEMORY[0x263F4C9E8], MEMORY[0x263F4C9E8]);
}

uint64_t sub_24A74C76C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74C77C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74C78C()
{
  return sub_24A74CEE0(MEMORY[0x263F4C980]);
}

uint64_t sub_24A74C7A4()
{
  return sub_24A74C5E4(MEMORY[0x263F4C980], MEMORY[0x263F4C980]);
}

uint64_t sub_24A74C7C0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74C7D0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74C7E0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24A74C818()
{
  return sub_24A74CEE0(MEMORY[0x263F4C818]);
}

uint64_t sub_24A74C830()
{
  return sub_24A74C5E4(MEMORY[0x263F4C818], MEMORY[0x263F4C818]);
}

uint64_t sub_24A74C84C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74C85C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74C86C()
{
  return sub_24A74CEE0(MEMORY[0x263F4CCF8]);
}

uint64_t sub_24A74C884()
{
  return sub_24A74C5E4(MEMORY[0x263F4CCF8], MEMORY[0x263F4CCF8]);
}

uint64_t sub_24A74C8A0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74C8B0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74C8C0()
{
  return sub_24A74CEE0(MEMORY[0x263F4C9B8]);
}

uint64_t sub_24A74C8D8()
{
  return sub_24A74C5E4(MEMORY[0x263F4C9B8], MEMORY[0x263F4C9B8]);
}

uint64_t sub_24A74C8F4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74C904()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74C914()
{
  return sub_24A74CEE0(MEMORY[0x263F4CB78]);
}

uint64_t sub_24A74C92C()
{
  return sub_24A74C5E4(MEMORY[0x263F4CB78], MEMORY[0x263F4CB78]);
}

uint64_t sub_24A74C948()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74C958()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74C968()
{
  return sub_24A74CEE0(MEMORY[0x263F4CA98]);
}

uint64_t sub_24A74C980()
{
  return sub_24A74C5E4(MEMORY[0x263F4CA98], MEMORY[0x263F4CA98]);
}

uint64_t sub_24A74C99C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74C9AC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74C9BC()
{
  return sub_24A74CEE0(MEMORY[0x263F4C998]);
}

uint64_t sub_24A74C9D4()
{
  return sub_24A74C5E4(MEMORY[0x263F4C998], MEMORY[0x263F4C998]);
}

uint64_t sub_24A74C9F0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CA00()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CA10()
{
  return sub_24A74CEE0(MEMORY[0x263F4C950]);
}

uint64_t sub_24A74CA28()
{
  return sub_24A74C5E4(MEMORY[0x263F4C950], MEMORY[0x263F4C950]);
}

uint64_t sub_24A74CA44()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CA54()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CA64()
{
  return sub_24A74CEE0(MEMORY[0x263F4C158]);
}

uint64_t sub_24A74CA7C()
{
  return sub_24A74C534(MEMORY[0x263F4C158], MEMORY[0x263F80508], MEMORY[0x263F4C148]);
}

uint64_t sub_24A74CABC()
{
  return sub_24A74CEE0(MEMORY[0x263F4C158]);
}

uint64_t sub_24A74CAD8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CAE8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CAF8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CB08()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CB18()
{
  return sub_24A74CEE0(MEMORY[0x263F4CA80]);
}

uint64_t sub_24A74CB30()
{
  return sub_24A74CEE0(MEMORY[0x263F4C6B8]);
}

uint64_t sub_24A74CB48()
{
  return sub_24A74C5E4(MEMORY[0x263F4C6B8], MEMORY[0x263F4C6B8]);
}

uint64_t sub_24A74CB64()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CB74()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CB84()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CB94()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CBA4()
{
  return sub_24A74CEE0(MEMORY[0x263F4C098]);
}

uint64_t sub_24A74CBBC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CBCC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CBDC()
{
  return sub_24A74CEE0(MEMORY[0x263F4C9E8]);
}

uint64_t sub_24A74CBF4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CC04()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CC14()
{
  return sub_24A74CEE0(MEMORY[0x263F4C818]);
}

uint64_t sub_24A74CC2C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CC3C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CC4C()
{
  return sub_24A74CEE0(MEMORY[0x263F4CCF8]);
}

uint64_t sub_24A74CC64()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CC74()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CC84()
{
  return sub_24A74CEE0(MEMORY[0x263F4C9B8]);
}

uint64_t sub_24A74CC9C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CCAC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CCBC()
{
  return sub_24A74CEE0(MEMORY[0x263F4CB78]);
}

uint64_t sub_24A74CCD4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CCE4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CCF4()
{
  return sub_24A74CEE0(MEMORY[0x263F4CA98]);
}

uint64_t sub_24A74CD0C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CD1C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CD2C()
{
  return sub_24A74CEE0(MEMORY[0x263F4C998]);
}

uint64_t sub_24A74CD44()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CD54()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CD64()
{
  return sub_24A74CEE0(MEMORY[0x263F4C980]);
}

uint64_t sub_24A74CD7C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CD8C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CD9C()
{
  return sub_24A74CEE0(MEMORY[0x263F4C950]);
}

uint64_t sub_24A74CDB4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CDC4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CDD4()
{
  return sub_24A74CEE0(MEMORY[0x263F4C158]);
}

uint64_t sub_24A74CDEC()
{
  return sub_24A74CEE0(MEMORY[0x263F4C158]);
}

uint64_t sub_24A74CE04()
{
  if (sub_24A7626A8()) {
    return 1702195828;
  }
  else {
    return 0x65736C6166;
  }
}

uint64_t sub_24A74CE88()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CE98()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CEA8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CEB8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CEC8()
{
  return sub_24A74CEE0(MEMORY[0x263F4C258]);
}

uint64_t sub_24A74CEE0(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return MEMORY[0x270FA0238](v1, v6, v7);
}

uint64_t sub_24A74CF78()
{
  sub_24A762768();

  return sub_24A74C0A8();
}

uint64_t sub_24A74CFD8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CFE8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A74CFF8()
{
  (*(void (**)(void))(v0 + 16))();

  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_24A74D030()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_24A74D058(uint64_t *a1, void **a2, uint64_t a3)
{
  sub_24A734F90(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

unint64_t sub_24A74D060()
{
  unint64_t result = qword_2697B3F88;
  if (!qword_2697B3F88)
  {
    sub_24A762848();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3F88);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StandardRunnerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A74D184);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StandardRunnerError()
{
  return &type metadata for StandardRunnerError;
}

unint64_t sub_24A74D1C0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24A74D1F0();
  unint64_t result = sub_24A74D244();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_24A74D1F0()
{
  unint64_t result = qword_2697B3F90;
  if (!qword_2697B3F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3F90);
  }
  return result;
}

unint64_t sub_24A74D244()
{
  unint64_t result = qword_2697B3F98;
  if (!qword_2697B3F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3F98);
  }
  return result;
}

unint64_t sub_24A74D29C()
{
  unint64_t result = qword_2697B3FA0;
  if (!qword_2697B3FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3FA0);
  }
  return result;
}

unint64_t sub_24A74D3EC(char a1)
{
  if (a1) {
    unint64_t v1 = 0x800000024A768D50;
  }
  else {
    unint64_t v1 = 0x800000024A768D80;
  }
  sub_24A704710(&qword_2697B33D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A763FD0;
  *(void *)(inited + 32) = sub_24A762E08();
  *(void *)(inited + 40) = v3;
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = 0xD000000000000020;
  *(void *)(inited + 56) = v1;
  return sub_24A70AC18(inited);
}

unint64_t sub_24A74D490(char a1)
{
  unint64_t v1 = 0xD000000000000014;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v1 = 0xD000000000000017;
    }
    else {
      unint64_t v1 = 0xD000000000000031;
    }
    if (a1 == 1) {
      unint64_t v2 = 0x800000024A768E60;
    }
    else {
      unint64_t v2 = 0x800000024A768E20;
    }
  }
  else
  {
    unint64_t v2 = 0x800000024A768E80;
  }
  sub_24A704710(&qword_2697B33D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A763FD0;
  *(void *)(inited + 32) = sub_24A762E08();
  *(void *)(inited + 40) = v4;
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v1;
  *(void *)(inited + 56) = v2;
  return sub_24A70AC18(inited);
}

id sub_24A74D564()
{
  type metadata accessor for ScheduledQueryStore();
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  id result = objc_msgSend(self, sel_weakObjectsHashTable);
  *(void *)(v0 + 112) = result;
  qword_2697B9918 = v0;
  return result;
}

unint64_t sub_24A74D5C4(char a1)
{
  unint64_t result = 0xD000000000000014;
  if (a1)
  {
    if (a1 == 1) {
      return 0xD000000000000017;
    }
    else {
      return 0xD000000000000031;
    }
  }
  return result;
}

unint64_t sub_24A74D624()
{
  return sub_24A74D5C4(*v0);
}

unint64_t sub_24A74D62C()
{
  return sub_24A74D490(*v0);
}

uint64_t sub_24A74D634(uint64_t a1)
{
  unint64_t v2 = sub_24A74ED60();

  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_24A74D670(uint64_t a1)
{
  unint64_t v2 = sub_24A74ED60();

  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_24A74D6AC(uint64_t *a1)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_24A704710(&qword_2697B3440);
  MEMORY[0x270FA5388](v4 - 8);
  unsigned int v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_24A74E41C();
  if (!v2)
  {
    uint64_t v26 = v6;
    uint64_t v27 = v1;
    if (result) {
      uint64_t v8 = result;
    }
    else {
      uint64_t v8 = MEMORY[0x263F8EE78];
    }
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      uint64_t v10 = *(void *)(type metadata accessor for ScheduledQuery() - 8);
      uint64_t v11 = *a1;
      uint64_t v12 = a1[1];
      uint64_t v13 = *(void *)(v10 + 72);
      uint64_t v14 = (void *)(((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
                     + v8
                     + 8);
      while (1)
      {
        BOOL v15 = *(v14 - 1) == v11 && *v14 == v12;
        if (v15 || (sub_24A7635B8() & 1) != 0) {
          break;
        }
        uint64_t v14 = (void *)((char *)v14 + v13);
        if (!--v9) {
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
      sub_24A74EA08();
      swift_allocError();
      unsigned char *v19 = 1;
      return swift_willThrow();
    }
    else
    {
LABEL_13:
      sub_24A704710(&qword_2697B30A8);
      uint64_t v16 = *(void *)(type metadata accessor for ScheduledQuery() - 8);
      unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_24A763FD0;
      sub_24A74E554((uint64_t)a1, v18 + v17);
      uint64_t v28 = v8;
      sub_24A7541E0(v18);
      sub_24A74E5B8(v28);
      uint64_t v20 = sub_24A763008();
      uint64_t v21 = (uint64_t)v26;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v26, 1, 1, v20);
      uint64_t v23 = sub_24A74EB50(&qword_2697B3C18, v22, (void (*)(uint64_t))type metadata accessor for ScheduledQueryStore);
      uint64_t v24 = (void *)swift_allocObject();
      uint64_t v25 = v27;
      v24[2] = v27;
      v24[3] = v23;
      v24[4] = v25;
      swift_retain_n();
      sub_24A70DA08(v21, (uint64_t)&unk_2697B3C20, (uint64_t)v24);
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_24A74DA08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for ScheduledQuery();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_24A704710(&qword_2697B38E0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_24A74E41C();
  if (!v3)
  {
    if (!result)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
LABEL_17:
      sub_24A724938((uint64_t)v13);
      sub_24A74EA08();
      swift_allocError();
      *uint64_t v21 = 0;
      return swift_willThrow();
    }
    uint64_t v24 = v8;
    uint64_t v15 = *(void *)(result + 16);
    if (v15)
    {
      uint64_t v22 = v7;
      uint64_t v23 = a3;
      uint64_t v16 = result + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
      uint64_t v17 = *(void *)(v24 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_24A74E554(v16, (uint64_t)v10);
        BOOL v18 = *v10 == a1 && v10[1] == a2;
        if (v18 || (sub_24A7635B8() & 1) != 0) {
          break;
        }
        sub_24A74EA5C((uint64_t)v10);
        v16 += v17;
        if (!--v15)
        {
          swift_bridgeObjectRelease();
          uint64_t v19 = 1;
          goto LABEL_14;
        }
      }
      swift_bridgeObjectRelease();
      sub_24A72365C((uint64_t)v10, (uint64_t)v13);
      uint64_t v19 = 0;
LABEL_14:
      uint64_t v7 = v22;
      a3 = v23;
    }
    else
    {
      uint64_t v19 = 1;
    }
    uint64_t v20 = v24;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v13, v19, 1, v7);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v7) == 1) {
      goto LABEL_17;
    }
    return sub_24A72365C((uint64_t)v13, a3);
  }
  return result;
}

uint64_t sub_24A74DC98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_24A74DCB8, a4, 0);
}

void sub_24A74DCB8()
{
  id v1 = objc_msgSend(*(id *)(*(void *)(v0 + 16) + 112), sel_allObjects);
  sub_24A704710(&qword_2697B3FE0);
  unint64_t v2 = sub_24A762F38();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_24A763428();
    swift_bridgeObjectRelease();
    if (!v3) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      goto LABEL_10;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = (void *)MEMORY[0x24C5CE400](i, v2);
    }
    else
    {
      uint64_t v5 = *(void **)(v2 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    objc_msgSend(v5, sel_scheduledQueryStoreDidUpdate);
    swift_unknownObjectRelease();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  unsigned int v6 = *(void (**)(void))(v0 + 8);
  v6();
}

id sub_24A74DE0C()
{
  id result = objc_msgSend(self, sel_defaultManager);
  *(void *)&xmmword_2697B3FA8 = result;
  *((void *)&xmmword_2697B3FA8 + 1) = 0xD000000000000021;
  qword_2697B3FB8 = 0x800000024A768660;
  unk_2697B3FC0 = 0xD000000000000010;
  qword_2697B3FC8 = 0x800000024A768E00;
  return result;
}

uint64_t sub_24A74DE80()
{
  swift_defaultActor_destroy();

  return MEMORY[0x270FA2418](v0);
}

uint64_t type metadata accessor for ScheduledQueryStore()
{
  return self;
}

uint64_t sub_24A74DEDC(uint64_t a1, uint64_t a2)
{
  return sub_24A74EB50(&qword_2697B3C18, a2, (void (*)(uint64_t))type metadata accessor for ScheduledQueryStore);
}

uint64_t sub_24A74DF24()
{
  if (qword_2697B2EF8 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_24A74DF80(uint64_t a1, uint64_t a2)
{
  uint64_t Store = type metadata accessor for ScheduledQueryStore();

  return MEMORY[0x270FA2150](Store, a2);
}

uint64_t sub_24A74DFB8()
{
  if (qword_2697B2F00 != -1) {
    swift_once();
  }
  long long v14 = xmmword_2697B3FA8;
  long long v15 = *(_OWORD *)&qword_2697B3FB8;
  uint64_t v16 = qword_2697B3FC8;
  unint64_t v2 = sub_24A71C404();
  if (!v0)
  {
    unint64_t v4 = v3;
    if (v3 >> 60 == 15)
    {
      return 0;
    }
    else
    {
      uint64_t v5 = (uint64_t)v2;
      if (qword_2697B2E78 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_24A762D68();
      sub_24A70D1FC(v6, (uint64_t)qword_2697B3530);
      uint64_t v7 = sub_24A762D48();
      os_log_type_t v8 = sub_24A7630B8();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v9 = 0;
        _os_log_impl(&dword_24A6FB000, v7, v8, "[QueryStore] readQueriesFromCache success", v9, 2u);
        MEMORY[0x24C5CEE90](v9, -1, -1);
      }

      sub_24A7622C8();
      swift_allocObject();
      sub_24A7622B8();
      sub_24A704710(&qword_2697B3FE8);
      sub_24A74EAB8(&qword_2697B3FF8, &qword_2697B3928);
      sub_24A7622A8();
      uint64_t v1 = v14;
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_24A762D48();
      os_log_type_t v11 = sub_24A7630B8();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 134217984;
        *(void *)&long long v14 = *(void *)(v1 + 16);
        sub_24A763198();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24A6FB000, v10, v11, "[QueryStore] readQueriesFromCache %ld queries", v12, 0xCu);
        MEMORY[0x24C5CEE90](v12, -1, -1);
        swift_release();
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
      }
      sub_24A724B14(v5, v4);
    }
  }
  return v1;
}

uint64_t sub_24A74E41C()
{
  uint64_t v1 = sub_24A74DFB8();
  uint64_t v2 = v1;
  if (!v0)
  {
    if (qword_2697B2E78 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_24A762D68();
    sub_24A70D1FC(v3, (uint64_t)qword_2697B3530);
    unint64_t v4 = sub_24A762D48();
    os_log_type_t v5 = sub_24A7630B8();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 134217984;
      sub_24A763198();
      _os_log_impl(&dword_24A6FB000, v4, v5, "Found %ld queries in self.readQueriesFromCache", v6, 0xCu);
      MEMORY[0x24C5CEE90](v6, -1, -1);
    }
  }
  return v2;
}

uint64_t sub_24A74E554(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScheduledQuery();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A74E5B8(uint64_t a1)
{
  uint64_t v3 = sub_24A762468();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A7622F8();
  swift_allocObject();
  sub_24A7622E8();
  *(void *)&long long v34 = a1;
  sub_24A704710(&qword_2697B3FE8);
  sub_24A74EAB8(&qword_2697B3FF0, &qword_2697B3908);
  uint64_t v7 = sub_24A7622D8();
  if (!v1)
  {
    uint64_t v32 = v7;
    unint64_t v33 = v8;
    if (qword_2697B2E78 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_24A762D68();
    sub_24A70D1FC(v9, (uint64_t)qword_2697B3530);
    swift_bridgeObjectRetain_n();
    uint64_t v10 = sub_24A762D48();
    os_log_type_t v11 = sub_24A7630B8();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v30 = v4;
      uint64_t v12 = swift_slowAlloc();
      uint64_t v31 = v3;
      uint64_t v13 = (uint8_t *)v12;
      uint64_t v29 = swift_slowAlloc();
      *(void *)&long long v34 = v29;
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v27 = v13 + 4;
      uint64_t v28 = v13;
      uint64_t v14 = type metadata accessor for ScheduledQuery();
      uint64_t v15 = swift_bridgeObjectRetain();
      uint64_t v16 = v6;
      uint64_t v17 = MEMORY[0x24C5CDFF0](v15, v14);
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();
      uint64_t v20 = v17;
      uint64_t v6 = v16;
      uint64_t v38 = sub_24A716784(v20, v19, (uint64_t *)&v34);
      sub_24A763198();
      swift_bridgeObjectRelease_n();
      uint64_t v4 = v30;
      swift_bridgeObjectRelease();
      uint64_t v21 = v28;
      _os_log_impl(&dword_24A6FB000, v10, v11, "[QueryStore] storeQueriesToCache for %s queries", v28, 0xCu);
      uint64_t v22 = v29;
      swift_arrayDestroy();
      MEMORY[0x24C5CEE90](v22, -1, -1);
      uint64_t v23 = v21;
      uint64_t v3 = v31;
      MEMORY[0x24C5CEE90](v23, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (qword_2697B2F00 != -1) {
      swift_once();
    }
    long long v34 = xmmword_2697B3FA8;
    uint64_t v35 = qword_2697B3FB8;
    uint64_t v36 = unk_2697B3FC0;
    uint64_t v37 = qword_2697B3FC8;
    id v24 = (id)xmmword_2697B3FA8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24A71C774((uint64_t)v6);
    uint64_t v25 = v32;
    sub_24A762488();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_24A7249F8(v25, v33);
  }
  return swift_release();
}

uint64_t sub_24A74E9C8()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

unint64_t sub_24A74EA08()
{
  unint64_t result = qword_2697B3FD8;
  if (!qword_2697B3FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B3FD8);
  }
  return result;
}

uint64_t sub_24A74EA5C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScheduledQuery();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24A74EAB8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24A704B6C(&qword_2697B3FE8);
    sub_24A74EB50(a2, 255, (void (*)(uint64_t))type metadata accessor for ScheduledQuery);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A74EB50(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ScheduledQueryStore.Error(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ScheduledQueryStore.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A74ECF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQueryStore.Error()
{
  return &type metadata for ScheduledQueryStore.Error;
}

unint64_t sub_24A74ED30(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24A74ED60();
  unint64_t result = sub_24A74EDB4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_24A74ED60()
{
  unint64_t result = qword_2697B4000;
  if (!qword_2697B4000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B4000);
  }
  return result;
}

unint64_t sub_24A74EDB4()
{
  unint64_t result = qword_2697B4008;
  if (!qword_2697B4008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B4008);
  }
  return result;
}

unint64_t sub_24A74EE0C()
{
  unint64_t result = qword_2697B4010;
  if (!qword_2697B4010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B4010);
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduleQueryEmptyRunner()
{
  return &type metadata for ScheduleQueryEmptyRunner;
}

uint64_t sub_24A74EE70(uint64_t a1, uint64_t a2)
{
  BOOL v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_2697B4020 + dword_2697B4020);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_24A71651C;
  return v7(a1, a2);
}

uint64_t sub_24A74EF24(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return MEMORY[0x270FA2498](sub_24A74EF44, 0, 0);
}

uint64_t sub_24A74EF44()
{
  uint64_t v12 = v0;
  if (qword_2697B2E88 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24A762D68();
  sub_24A70D1FC(v1, (uint64_t)qword_2697B3560);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_24A762D48();
  os_log_type_t v3 = sub_24A763088();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[4];
  if (v4)
  {
    uint64_t v6 = v0[3];
    BOOL v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v11 = v8;
    *(_DWORD *)BOOL v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[2] = sub_24A716784(v6, v5, &v11);
    sub_24A763198();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24A6FB000, v2, v3, "EmptyRunner finished running plan: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5CEE90](v8, -1, -1);
    MEMORY[0x24C5CEE90](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = (uint64_t (*)(void, void))v0[1];
  return v9(0, 0);
}

uint64_t sub_24A74F140(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_24A75348C(0, v1, 0);
    uint64_t v2 = v16;
    BOOL v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *(v4 - 3);
      uint64_t v6 = *(v4 - 2);
      uint64_t v7 = *(v4 - 1);
      uint64_t v8 = *v4;
      swift_bridgeObjectRetain();
      uint64_t v9 = MEMORY[0x24C5CDEE0](v5, v6, v7, v8);
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      unint64_t v13 = *(void *)(v16 + 16);
      unint64_t v12 = *(void *)(v16 + 24);
      if (v13 >= v12 >> 1) {
        sub_24A75348C(v12 > 1, v13 + 1, 1);
      }
      *(void *)(v16 + 16) = v13 + 1;
      uint64_t v14 = v16 + 16 * v13;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v11;
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_24A74F240(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x263F8EE78];
    if (!v2) {
      break;
    }
    uint64_t v8 = MEMORY[0x263F8EE78];
    uint64_t result = sub_24A7633C8();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)MEMORY[0x24C5CE400](v4, a1);
      }
      else {
        id v5 = *(id *)(a1 + 8 * v4 + 32);
      }
      uint64_t v6 = v5;
      ++v4;
      id v7 = objc_msgSend(v5, sel_valueType);

      sub_24A7633A8();
      sub_24A7633D8();
      sub_24A7633E8();
      sub_24A7633B8();
      if (v2 == v4) {
        return v8;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_24A763428();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24A74F384(uint64_t a1)
{
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v3 = sub_24A763238();
    uint64_t v5 = v4;
    uint64_t v6 = sub_24A7632C8();
    char v8 = MEMORY[0x24C5CE300](v3, v5, v6, v7);
    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_3:
      sub_24A758E30(v3, v5, v2 != 0);
      return 0;
    }
LABEL_7:
    sub_24A755594(v3, v5, v2 != 0, a1);
    uint64_t v9 = v13;
    sub_24A758E30(v3, v5, v2 != 0);
    return v9;
  }
  uint64_t result = sub_24A75580C(a1);
  if ((v12 & 1) == 0)
  {
    uint64_t v5 = v11;
    if (*(_DWORD *)(a1 + 36) == v11)
    {
      uint64_t v3 = result;
      if (result == 1 << *(unsigned char *)(a1 + 32)) {
        goto LABEL_3;
      }
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24A74F494(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v3 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3) {
    return 0;
  }
  uint64_t v21 = a1;
  unint64_t v22 = a2;
  uint64_t v19 = sub_24A755894();
  uint64_t v20 = v6;
  sub_24A7172F0();
  if ((sub_24A7631D8() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v21 = a1;
  unint64_t v22 = a2;
  uint64_t v7 = (void *)sub_24A7631E8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v7[2])
  {
    uint64_t v9 = v7[4];
    uint64_t v10 = v7[5];
    uint64_t v11 = v7[6];
    uint64_t v12 = v7[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x24C5CDEE0](v9, v10, v11, v12);
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_24A74F7B4(v13, v15);
    swift_bridgeObjectRelease();

    if (v16)
    {
      id v17 = sub_24A74FF00(a1, a2);
      if (v2) {
        return (uint64_t)v16;
      }
      return (uint64_t)v17;
    }
LABEL_11:
    id v17 = sub_24A7514EC(a1, a2);
    if (v2)
    {

      id v18 = objc_msgSend(self, sel_stringValueType, v19, v20, v21, v22);
      uint64_t v16 = (void *)sub_24A7502A8(v18, a1, a2);

      return (uint64_t)v16;
    }
    return (uint64_t)v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A74F66C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_24A758AAC(a1, a2);
  *a3 = result;
  a3[1] = v5;
  a3[2] = v6;
  return result;
}

uint64_t sub_24A74F698(char a1)
{
  return *(void *)&aUnknown_2[8 * a1];
}

void sub_24A74F6B8(void *a1@<X8>)
{
  *a1 = &unk_26FE3A358;
}

uint64_t sub_24A74F6C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  char v4 = sub_24A759210(a1, a2);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v4;
  return result;
}

uint64_t sub_24A74F70C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_24A7591BC();

  return MEMORY[0x270F0E948](a1, a2, v4);
}

uint64_t sub_24A74F758(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_24A7591BC();

  return MEMORY[0x270F0E950](a1, a2, v4);
}

uint64_t sub_24A74F7AC()
{
  return sub_24A74F698(*v0);
}

id sub_24A74F7B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A762318();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_24A762ED8() & 1) == 0 && (sub_24A762ED8() & 1) == 0)
  {
    uint64_t v32 = a1;
    uint64_t v33 = a2;
    sub_24A762308();
    sub_24A7172F0();
    uint64_t v21 = sub_24A7631B8();
    uint64_t v23 = v22;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    BOOL v24 = v21 == 115 && v23 == 0xE100000000000000;
    if (v24
      || (sub_24A7635B8() & 1) != 0
      || (v21 == 0x676E69727473 ? (BOOL v25 = v23 == 0xE600000000000000) : (BOOL v25 = 0), v25 || (sub_24A7635B8() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      id v26 = objc_msgSend(self, sel_stringValueType);
    }
    else
    {
      BOOL v29 = v21 == 98 && v23 == 0xE100000000000000;
      if (v29
        || (sub_24A7635B8() & 1) != 0
        || v21 == 1819242338 && v23 == 0xE400000000000000
        || (sub_24A7635B8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        id v26 = objc_msgSend(self, sel_BOOLValueType);
      }
      else if (v21 == 105 && v23 == 0xE100000000000000 {
             || (sub_24A7635B8() & 1) != 0
      }
             || v21 == 7630441 && v23 == 0xE300000000000000
             || (sub_24A7635B8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        id v26 = objc_msgSend(self, sel_intValueType);
      }
      else if (v21 == 100 && v23 == 0xE100000000000000 {
             || (sub_24A7635B8() & 1) != 0
      }
             || v21 == 0x656C62756F64 && v23 == 0xE600000000000000
             || (sub_24A7635B8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        id v26 = objc_msgSend(self, sel_doubleValueType);
      }
      else if (v21 == 1702125924 && v23 == 0xE400000000000000 || (sub_24A7635B8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        id v26 = objc_msgSend(self, sel_dateValueType);
      }
      else
      {
        if ((v21 != 117 || v23 != 0xE100000000000000)
          && (sub_24A7635B8() & 1) == 0
          && (v21 != 7107189 || v23 != 0xE300000000000000)
          && (sub_24A7635B8() & 1) == 0)
        {
          if (v21 == 113 && v23 == 0xE100000000000000
            || (sub_24A7635B8() & 1) != 0
            || v21 == 0x7972657571 && v23 == 0xE500000000000000
            || (sub_24A7635B8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v30 = (objc_class *)MEMORY[0x263F51CD0];
          }
          else
          {
            if (v21 == 25705 && v23 == 0xE200000000000000)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              char v31 = sub_24A7635B8();
              swift_bridgeObjectRelease();
              if ((v31 & 1) == 0) {
                return 0;
              }
            }
            uint64_t v30 = (objc_class *)MEMORY[0x263F51BC0];
          }
          return objc_msgSend(objc_allocWithZone(v30), sel_init);
        }
        swift_bridgeObjectRelease();
        id v26 = objc_msgSend(self, sel_URLValueType);
      }
    }
    return v26;
  }
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  sub_24A7172F0();
  uint64_t v8 = MEMORY[0x263F8D310];
  uint64_t v9 = (void *)sub_24A7631E8();
  if (v9[2] != 2)
  {
    swift_bridgeObjectRelease();
    sub_24A704710((uint64_t *)&unk_2697B32D0);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_24A763FD0;
    *(void *)(v20 + 56) = v8;
    *(void *)(v20 + 32) = 0xD000000000000098;
    *(void *)(v20 + 40) = 0x800000024A768EA0;
    sub_24A763678();
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v10 = v9[8];
  uint64_t v11 = v9[9];
  uint64_t v12 = v9[10];
  uint64_t v13 = v9[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = MEMORY[0x24C5CDEE0](v10, v11, v12, v13);
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  uint64_t v32 = v14;
  uint64_t v33 = v16;
  sub_24A762308();
  sub_24A7631B8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  id v17 = objc_allocWithZone(MEMORY[0x263F51C28]);
  id v18 = (void *)sub_24A762DF8();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v17, sel_initWithEnumerationIdentifier_, v18);

  return v19;
}

id sub_24A74FF00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  sub_24A755894();
  sub_24A7172F0();
  uint64_t v5 = sub_24A7631E8();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)sub_24A74F140(v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = v6[2];
  if (v7 != 2)
  {
    if (v7 == 1)
    {
      uint64_t v24 = v6[4];
      uint64_t v25 = v6[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      id v26 = objc_msgSend(self, sel_stringValueType, a1, a2);
      id v23 = (id)sub_24A7502A8(v26, v24, v25);
      swift_bridgeObjectRelease();

      return v23;
    }
    if (v7)
    {
      uint64_t v9 = v6[4];
      uint64_t v8 = v6[5];
      swift_bridgeObjectRetain();
      id v10 = sub_24A74F7B4(v9, v8);
      swift_bridgeObjectRelease();
      if (v10)
      {
        unint64_t v11 = v6[2];
        unint64_t v12 = v11 != 0;
        unint64_t v3 = MEMORY[0x263F8EE78];
        unint64_t v31 = MEMORY[0x263F8EE78];
        if (v11 == v12)
        {
LABEL_24:
          swift_bridgeObjectRelease();
          if ((v3 & 0x8000000000000000) == 0 && (v3 & 0x4000000000000000) == 0) {
            goto LABEL_26;
          }
          goto LABEL_32;
        }
        swift_bridgeObjectRetain();
        uint64_t v13 = &v6[2 * v12 + 5];
        while (v12 < v11)
        {
          if (v12 >= v6[2]) {
            goto LABEL_30;
          }
          uint64_t v15 = *(v13 - 1);
          uint64_t v14 = *v13;
          uint64_t v16 = HIBYTE(*v13) & 0xF;
          if ((*v13 & 0x2000000000000000) == 0) {
            uint64_t v16 = v15 & 0xFFFFFFFFFFFFLL;
          }
          if (v16)
          {
            swift_bridgeObjectRetain();
            unint64_t v17 = sub_24A7502A8(v10, v15, v14);
            if (v4)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              id v23 = (id)v31;

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v23;
            }
            unint64_t v3 = v17;
            uint64_t v18 = swift_bridgeObjectRelease();
            if (v3)
            {
              MEMORY[0x24C5CDFC0](v18);
              if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_24A762F68();
              }
              sub_24A762F78();
              sub_24A762F58();
            }
          }
          ++v12;
          v13 += 2;
          if (v11 == v12)
          {
            swift_bridgeObjectRelease();
            unint64_t v3 = v31;
            goto LABEL_24;
          }
        }
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        sub_24A72A58C(v3);
        swift_bridgeObjectRelease();
LABEL_26:
        id v27 = objc_allocWithZone(MEMORY[0x263F51D50]);
        sub_24A705D7C(0, &qword_2697B3040);
        uint64_t v28 = (void *)sub_24A762F28();
        swift_release();
        id v23 = objc_msgSend(v27, sel_initWithValues_memberValueType_, v28, v10);

        return v23;
      }
    }
    goto LABEL_21;
  }
  uint64_t v20 = v6[4];
  uint64_t v19 = v6[5];
  swift_bridgeObjectRetain();
  id v10 = sub_24A74F7B4(v20, v19);
  swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v6[2] < 2uLL) {
    goto LABEL_31;
  }
  uint64_t v21 = v6[6];
  uint64_t v22 = v6[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v23 = (id)sub_24A7502A8(v10, v21, v22);
  swift_bridgeObjectRelease();

  return v23;
}

unint64_t sub_24A7502A8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_24A704710(&qword_2697B3830);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v85 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24A704710((uint64_t *)&unk_2697B3630);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v86 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24A762318();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v92, 0, sizeof(v92));
  *(void *)&long long v90 = a2;
  *((void *)&v90 + 1) = a3;
  sub_24A762308();
  sub_24A7172F0();
  uint64_t v15 = MEMORY[0x263F8D310];
  uint64_t v16 = sub_24A7631B8();
  unint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v19 = HIBYTE(v18) & 0xF;
  uint64_t v20 = v16 & 0xFFFFFFFFFFFFLL;
  if ((v18 & 0x2000000000000000) != 0) {
    uint64_t v21 = HIBYTE(v18) & 0xF;
  }
  else {
    uint64_t v21 = v16 & 0xFFFFFFFFFFFFLL;
  }
  if (!v21) {
    goto LABEL_21;
  }
  self;
  if (!swift_dynamicCastObjCClass())
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      swift_bridgeObjectRelease();
      sub_24A709EF8();
      swift_allocError();
      *id v26 = 0xD000000000000074;
      v26[1] = 0x800000024A768F40;
      swift_willThrow();
      sub_24A70FD54((uint64_t)v92, &qword_2697B3020);
      return v18;
    }
    self;
    if (swift_dynamicCastObjCClass())
    {
      id v82 = a1;
      *((void *)&v91 + 1) = v15;
      *(void *)&long long v90 = v16;
      *((void *)&v90 + 1) = v18;
      sub_24A70FD54((uint64_t)v92, &qword_2697B3020);
      sub_24A736D6C((uint64_t)&v90, (uint64_t)v92, &qword_2697B3020);
      goto LABEL_97;
    }
LABEL_21:
    sub_24A70FD54((uint64_t)v92, &qword_2697B3020);
    swift_bridgeObjectRelease();
    return 0;
  }
  *(void *)&long long v84 = v16;
  *((void *)&v84 + 1) = v18;
  uint64_t v83 = v3;
  uint64_t v22 = self;
  id v82 = a1;
  id v23 = a1;
  id v24 = objc_msgSend(v22, sel_stringValueType);
  sub_24A705D7C(0, &qword_2697B4028);
  char v25 = sub_24A763158();

  if (v25)
  {
    *((void *)&v91 + 1) = v15;

    long long v90 = v84;
LABEL_12:
    sub_24A70FD54((uint64_t)v92, &qword_2697B3020);
    sub_24A736D6C((uint64_t)&v90, (uint64_t)v92, &qword_2697B3020);
LABEL_97:
    sub_24A758D14((uint64_t)v92, (uint64_t)&v88);
    if (v89)
    {
      sub_24A70D414(&v88, &v90);
      id v77 = objc_allocWithZone(MEMORY[0x263F51D50]);
      sub_24A705BC4(&v90, *((uint64_t *)&v91 + 1));
      id v78 = v82;
      unint64_t v18 = (unint64_t)objc_msgSend(v77, sel_initWithValue_valueType_, sub_24A7635A8(), v78);
      swift_unknownObjectRelease();

      sub_24A704754((uint64_t)&v90);
      sub_24A70FD54((uint64_t)v92, &qword_2697B3020);
      return v18;
    }
    sub_24A70FD54((uint64_t)v92, &qword_2697B3020);
    sub_24A70FD54((uint64_t)&v88, &qword_2697B3020);
    return 0;
  }
  id v27 = v23;
  id v28 = objc_msgSend(v22, sel_BOOLValueType);
  char v29 = sub_24A763158();

  if (v29)
  {
    id v30 = objc_allocWithZone(NSString);
    unint64_t v31 = (void *)sub_24A762DF8();
    swift_bridgeObjectRelease();
    id v32 = objc_msgSend(v30, sel_initWithString_, v31);

    LOBYTE(v31) = objc_msgSend(v32, sel_BOOLValue);
    *((void *)&v91 + 1) = MEMORY[0x263F8D4F8];

    LOBYTE(v90) = (_BYTE)v31;
    goto LABEL_12;
  }
  id v33 = v27;
  id v34 = objc_msgSend(v22, sel_intValueType);
  char v35 = sub_24A763158();

  if ((v35 & 1) == 0)
  {
    id v41 = v33;
    id v42 = objc_msgSend(v22, sel_doubleValueType);
    char v43 = sub_24A763158();

    if (v43)
    {
      *(void *)&long long v88 = 0;
      uint64_t v45 = MEMORY[0x270FA5388](v44);
      *(&v81 - 2) = (uint64_t)&v88;
      uint64_t v46 = *((void *)&v84 + 1);
      if ((*((void *)&v84 + 1) & 0x1000000000000000) != 0
        || !(*((void *)&v84 + 1) & 0x2000000000000000 | v84 & 0x1000000000000000))
      {
        sub_24A763328();
      }
      else
      {
        MEMORY[0x270FA5388](v45);
        *(&v81 - 2) = (uint64_t)sub_24A758D7C;
        *(&v81 - 1) = v47;
        if ((v46 & 0x2000000000000000) != 0)
        {
          *(void *)&long long v90 = v84;
          *((void *)&v90 + 1) = v46 & 0xFFFFFFFFFFFFFFLL;
          BOOL v59 = (v84 > 0x20u || ((0x100003E01uLL >> v84) & 1) == 0)
             && (uint64_t v58 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
             && *v58 == 0;
          char v87 = v59;
          swift_bridgeObjectRelease();
          goto LABEL_66;
        }
        if ((v84 & 0x1000000000000000) != 0)
        {
          uint64_t v48 = (*((void *)&v84 + 1) & 0xFFFFFFFFFFFFFFFLL) + 32;
        }
        else
        {
          uint64_t v48 = sub_24A763398();
          uint64_t v20 = v80;
        }
        char v87 = sub_24A755460(v48, v20, (void (*)(uint64_t *__return_ptr))sub_24A758DEC) & 1;
      }
      swift_bridgeObjectRelease();
LABEL_66:
      if (v87)
      {
        uint64_t v65 = v88;
        *((void *)&v91 + 1) = MEMORY[0x263F8D538];

        *(void *)&long long v90 = v65;
        goto LABEL_84;
      }
      sub_24A70FD54((uint64_t)v92, &qword_2697B3020);

LABEL_95:
      long long v90 = 0u;
      long long v91 = 0u;
      goto LABEL_96;
    }
    id v49 = v41;
    id v50 = objc_msgSend(v22, sel_dateValueType);
    char v51 = sub_24A763158();

    if (v51)
    {
      os_signpost_type_t v52 = v86;
      sub_24A750F20(v84, *((uint64_t *)&v84 + 1), v86);
      swift_bridgeObjectRelease();
      uint64_t v53 = sub_24A762528();
      uint64_t v54 = *(void *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53) == 1)
      {
        sub_24A70FD54((uint64_t)v92, &qword_2697B3020);

        uint64_t v55 = (uint64_t *)&unk_2697B3630;
LABEL_43:
        sub_24A70FD54((uint64_t)v52, v55);
        goto LABEL_95;
      }
    }
    else
    {
      id v49 = v49;
      id v56 = objc_msgSend(v22, sel_URLValueType);
      char v57 = sub_24A763158();

      if ((v57 & 1) == 0)
      {
        sub_24A70FD54((uint64_t)v92, &qword_2697B3020);
        swift_bridgeObjectRelease();

        return 0;
      }
      os_signpost_type_t v52 = v85;
      sub_24A762448();
      swift_bridgeObjectRelease();
      uint64_t v53 = sub_24A762468();
      uint64_t v54 = *(void *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53) == 1)
      {
        sub_24A70FD54((uint64_t)v92, &qword_2697B3020);

        uint64_t v55 = &qword_2697B3830;
        goto LABEL_43;
      }
    }
    *((void *)&v91 + 1) = v53;
    uint64_t v60 = sub_24A736434((uint64_t *)&v90);
    (*(void (**)(uint64_t *, char *, uint64_t))(v54 + 32))(v60, v52, v53);

LABEL_84:
    sub_24A70FD54((uint64_t)v92, &qword_2697B3020);
LABEL_96:
    sub_24A736D6C((uint64_t)&v90, (uint64_t)v92, &qword_2697B3020);
    goto LABEL_97;
  }
  if ((*((void *)&v84 + 1) & 0x1000000000000000) != 0)
  {
    uint64_t v74 = sub_24A753A38(v84, *((uint64_t *)&v84 + 1), 10);
    char v76 = v75;
    swift_bridgeObjectRelease();
    if ((v76 & 1) == 0)
    {
      uint64_t v38 = (uint64_t)v74;
      goto LABEL_83;
    }
    goto LABEL_94;
  }
  unint64_t result = v84;
  if ((*((void *)&v84 + 1) & 0x2000000000000000) == 0)
  {
    if ((v84 & 0x1000000000000000) != 0)
    {
      uint64_t v37 = (unsigned __int8 *)((*((void *)&v84 + 1) & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else
    {
      uint64_t v37 = (unsigned __int8 *)sub_24A763398();
      uint64_t v20 = v79;
    }
    uint64_t v38 = (uint64_t)sub_24A754478(v37, v20, 10);
    char v40 = v39 & 1;
LABEL_82:
    swift_bridgeObjectRelease();
    if ((v40 & 1) == 0)
    {
LABEL_83:
      *((void *)&v91 + 1) = MEMORY[0x263F8D6C8];

      *(void *)&long long v90 = v38;
      goto LABEL_84;
    }
LABEL_94:
    sub_24A70FD54((uint64_t)v92, &qword_2697B3020);

    goto LABEL_95;
  }
  *(void *)&long long v90 = v84;
  *((void *)&v90 + 1) = *((void *)&v84 + 1) & 0xFFFFFFFFFFFFFFLL;
  if (v84 == 43)
  {
    if (!v19) {
      goto LABEL_105;
    }
    if (v19 == 1 || (BYTE1(v84) - 48) > 9u) {
      goto LABEL_63;
    }
    uint64_t v38 = (BYTE1(v84) - 48);
    if (v19 != 2)
    {
      if ((BYTE2(v84) - 48) > 9u) {
        goto LABEL_63;
      }
      uint64_t v38 = 10 * (BYTE1(v84) - 48) + (BYTE2(v84) - 48);
      uint64_t v61 = v19 - 3;
      if (v19 != 3)
      {
        uint64_t v62 = (unsigned __int8 *)&v90 + 3;
        while (1)
        {
          unsigned int v63 = *v62 - 48;
          if (v63 > 9) {
            goto LABEL_63;
          }
          uint64_t v64 = 10 * v38;
          if ((unsigned __int128)(v38 * (__int128)10) >> 64 != (10 * v38) >> 63) {
            goto LABEL_63;
          }
          uint64_t v38 = v64 + v63;
          if (__OFADD__(v64, v63)) {
            goto LABEL_63;
          }
          char v40 = 0;
          ++v62;
          if (!--v61) {
            goto LABEL_82;
          }
        }
      }
    }
LABEL_81:
    char v40 = 0;
    goto LABEL_82;
  }
  if (v84 != 45)
  {
    if (!v19 || (v84 - 48) > 9u) {
      goto LABEL_63;
    }
    uint64_t v38 = (v84 - 48);
    if (v19 != 1)
    {
      if ((BYTE1(v84) - 48) > 9u) {
        goto LABEL_63;
      }
      uint64_t v38 = 10 * (v84 - 48) + (BYTE1(v84) - 48);
      uint64_t v66 = v19 - 2;
      if (v19 != 2)
      {
        uint64_t v67 = (unsigned __int8 *)&v90 + 2;
        while (1)
        {
          unsigned int v68 = *v67 - 48;
          if (v68 > 9) {
            goto LABEL_63;
          }
          uint64_t v69 = 10 * v38;
          if ((unsigned __int128)(v38 * (__int128)10) >> 64 != (10 * v38) >> 63) {
            goto LABEL_63;
          }
          uint64_t v38 = v69 + v68;
          if (__OFADD__(v69, v68)) {
            goto LABEL_63;
          }
          char v40 = 0;
          ++v67;
          if (!--v66) {
            goto LABEL_82;
          }
        }
      }
    }
    goto LABEL_81;
  }
  if (v19)
  {
    if (v19 != 1 && (BYTE1(v84) - 48) <= 9u)
    {
      if (v19 == 2)
      {
        char v40 = 0;
        uint64_t v38 = -(uint64_t)(BYTE1(v84) - 48);
        goto LABEL_82;
      }
      if ((BYTE2(v84) - 48) <= 9u)
      {
        uint64_t v38 = -10 * (BYTE1(v84) - 48) - (BYTE2(v84) - 48);
        uint64_t v70 = v19 - 3;
        if (v19 == 3) {
          goto LABEL_81;
        }
        uint64_t v71 = (unsigned __int8 *)&v90 + 3;
        while (1)
        {
          unsigned int v72 = *v71 - 48;
          if (v72 > 9) {
            break;
          }
          uint64_t v73 = 10 * v38;
          if ((unsigned __int128)(v38 * (__int128)10) >> 64 != (10 * v38) >> 63) {
            break;
          }
          uint64_t v38 = v73 - v72;
          if (__OFSUB__(v73, v72)) {
            break;
          }
          char v40 = 0;
          ++v71;
          if (!--v70) {
            goto LABEL_82;
          }
        }
      }
    }
LABEL_63:
    uint64_t v38 = 0;
    char v40 = 1;
    goto LABEL_82;
  }
  __break(1u);
LABEL_105:
  __break(1u);
  return result;
}

uint64_t sub_24A750F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  sub_24A704710((uint64_t *)&unk_2697B3630);
  uint64_t v6 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v47 - v9;
  uint64_t v11 = sub_24A762528();
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  MEMORY[0x270FA5388](v13);
  uint64_t v19 = (char *)&v47 - v18;
  if (a2)
  {
    uint64_t v51 = v15;
    uint64_t v57 = v14;
    uint64_t v53 = v17;
    uint64_t v48 = v16;
    unint64_t v20 = 0x26528D000uLL;
    id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F088C0]), sel_init);
    uint64_t v55 = a1;
    uint64_t v22 = (void *)sub_24A762DF8();
    id v23 = objc_msgSend(v21, sel_dateFromString_, v22);

    if (v23)
    {
      id v24 = v19;
      uint64_t v25 = v53;
      sub_24A7624F8();

      id v26 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 32);
      uint64_t v27 = v57;
      v26(v10, v25, v57);
      id v28 = *(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56);
      v28(v10, 0, 1, v27);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v10, 1, v27) != 1)
      {
        v26(v24, (uint64_t)v10, v27);
        v26(a3, (uint64_t)v24, v27);
        return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v28)(a3, 0, 1, v27);
      }
      uint64_t v54 = a2;
      id v50 = a3;
      unint64_t v20 = 0x26528D000;
    }
    else
    {
      uint64_t v54 = a2;
      id v50 = a3;
      id v28 = *(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56);
      v28(v10, 1, 1, v57);
    }
    sub_24A70FD54((uint64_t)v10, (uint64_t *)&unk_2697B3630);
    id v31 = [objc_allocWithZone(MEMORY[0x263F08790]) *(SEL *)(v20 + 3096)];
    unint64_t v32 = 0;
    long long v58 = xmmword_24A766920;
    id v49 = &v59;
    id v33 = v60;
    uint64_t v59 = 0x2D4D4D2D59595959;
    v60[0] = 0xEA00000000006464;
    v60[1] = 0x73733A6D6D3A4848;
    v60[2] = 0xE800000000000000;
    uint64_t v60[3] = 0xD000000000000013;
    v60[4] = 0x800000024A768FC0;
    uint64_t result = v51;
    os_signpost_type_t v52 = (void (**)(char *, uint64_t, uint64_t))(v51 + 32);
    uint64_t v56 = v51 + 56;
    id v34 = (unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
    uint64_t v35 = v57;
    while (v32 < (unint64_t)v58)
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = (void *)sub_24A762DF8();
      swift_bridgeObjectRelease();
      objc_msgSend(v31, sel_setDateFormat_, v36);

      uint64_t v37 = (void *)sub_24A762DF8();
      id v38 = objc_msgSend(v31, sel_dateFromString_, v37);

      if (v38)
      {
        uint64_t v39 = v53;
        sub_24A7624F8();

        char v40 = *v52;
        (*v52)(v8, v39, v35);
        v28(v8, 0, 1, v35);
        if ((*v34)(v8, 1, v35) != 1)
        {

          swift_arrayDestroy();
          id v41 = v48;
          uint64_t v42 = v57;
          v40(v48, (uint64_t)v8, v57);
          char v43 = v50;
          v40(v50, (uint64_t)v41, v42);
          uint64_t v44 = v43;
          uint64_t v45 = 0;
          uint64_t v46 = v42;
          return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v28)(v44, v45, 1, v46);
        }
      }
      else
      {
        v28(v8, 1, 1, v57);
      }
      ++v32;
      uint64_t result = sub_24A70FD54((uint64_t)v8, (uint64_t *)&unk_2697B3630);
      v33 += 2;
      if (v32 == 3)
      {
        swift_arrayDestroy();

        uint64_t v44 = v50;
        uint64_t v45 = 1;
        uint64_t v46 = v57;
        return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v28)(v44, v45, 1, v46);
      }
    }
    __break(1u);
  }
  else
  {
    char v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 56);
    return v29(a3, 1, 1);
  }
  return result;
}

void *sub_24A7514EC(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4)
  {
    sub_24A709EF8();
    swift_allocError();
    *uint64_t v11 = 0xD000000000000022;
    v11[1] = 0x800000024A769040;
    goto LABEL_7;
  }
  uint64_t v2 = v3;
  swift_bridgeObjectRetain();
  uint64_t v7 = MEMORY[0x24C5CE230](a1, a2);
  sub_24A752194(v7, v8, v9, v10, v19);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    sub_24A736D6C((uint64_t)v19, (uint64_t)&v20, &qword_2697B4030);
    uint64_t v2 = v20;
    if (v20)
    {
      unint64_t v13 = v21;
      uint64_t v14 = v22;
      uint64_t v15 = v24;
      if ((v22 ^ v21) >= 0x4000)
      {
        uint64_t v17 = v23;
        sub_24A763338();
        swift_bridgeObjectRelease();
        MEMORY[0x24C5CDEE0](v13, v14, v17, v15);
        sub_24A762E68();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24A762E68();
        sub_24A709EF8();
        swift_allocError();
        *uint64_t v18 = 0xD000000000000011;
        v18[1] = 0x800000024A769000;
        swift_willThrow();

        return v2;
      }
      goto LABEL_5;
    }
    sub_24A763338();
    swift_bridgeObjectRelease();
    sub_24A762E68();
    sub_24A762E68();
    uint64_t v2 = (void *)0xD000000000000010;
    sub_24A709EF8();
    swift_allocError();
    void *v16 = 0xD000000000000010;
    v16[1] = 0x800000024A768FE0;
LABEL_7:
    swift_willThrow();
    return v2;
  }
LABEL_5:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_24A75176C(uint64_t a1)
{
  return sub_24A7517B4(a1, qword_2697B9920);
}

uint64_t sub_24A751790(uint64_t a1)
{
  return sub_24A7517B4(a1, qword_2697B9938);
}

uint64_t sub_24A7517B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_24A704710(&qword_2697B4068);
  sub_24A7102EC(v3, a2);
  sub_24A70D1FC(v3, (uint64_t)a2);
  return sub_24A762948();
}

uint64_t sub_24A751824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10)
{
  id v49 = a8;
  uint64_t v50 = a5;
  uint64_t v48 = a9;
  uint64_t v46 = a6;
  uint64_t v47 = a10;
  uint64_t v15 = sub_24A704710(a6);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_24A704710(a7);
  uint64_t v18 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  unint64_t v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_24A762318();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = a1;
  uint64_t v53 = a2;
  uint64_t v54 = a3;
  uint64_t v55 = a4;
  sub_24A762308();
  sub_24A758E3C();
  uint64_t v25 = sub_24A7631B8();
  unint64_t v27 = v26;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  sub_24A704710(v49);
  sub_24A762978();
  int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, v51);
  char v29 = v47;
  uint64_t v30 = v48;
  if (v28 == 1)
  {
    swift_bridgeObjectRelease();
    sub_24A70FD54((uint64_t)v17, v46);
    uint64_t v31 = sub_24A704710(v29);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 1, 1, v31);
  }
  else
  {
    id v33 = v20;
    id v34 = v20;
    uint64_t v35 = v51;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v34, v17, v51);
    uint64_t v50 = sub_24A704710(v29);
    uint64_t v36 = (unint64_t *)(v30 + *(int *)(v50 + 48));
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 16))(v30, v33, v35);
    sub_24A7629B8();
    unint64_t v38 = sub_24A751BC0(v37, v25, v27);
    unint64_t v40 = v39;
    unint64_t v42 = v41;
    unint64_t v44 = v43;
    swift_bridgeObjectRelease();
    unint64_t *v36 = v38;
    v36[1] = v40;
    v36[2] = v42;
    v36[3] = v44;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v33, v35);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v30, 0, 1, v50);
  }
}

unint64_t sub_24A751BC0(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_24A762F08();
  }
  __break(1u);
  return result;
}

uint64_t sub_24A751C0C()
{
  return swift_release();
}

uint64_t sub_24A751C74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  unsigned int v63 = a5;
  uint64_t v9 = sub_24A704710(&qword_2697B4068);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24A704710(&qword_2697B4070);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_24A704710(&qword_2697B4078);
  uint64_t v43 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  unint64_t v44 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2697B2F08 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_24A70D1FC(v9, (uint64_t)qword_2697B9920);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v17, v9);
  sub_24A751824(a1, a2, a3, a4, (uint64_t)v12, &qword_2697B4088, &qword_2697B4078, &qword_2697B4068, (uint64_t)v15, &qword_2697B4080);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v18 = sub_24A704710(&qword_2697B4080);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v15, 1, v18) == 1)
  {
    uint64_t result = sub_24A70FD54((uint64_t)v15, &qword_2697B4070);
    id v20 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    long long v23 = 0uLL;
  }
  else
  {
    uint64_t v24 = (uint64_t *)&v15[*(int *)(v18 + 48)];
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v27 = v24[2];
    uint64_t v28 = v24[3];
    uint64_t v29 = v43;
    uint64_t v30 = v44;
    uint64_t v31 = v45;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v44, v15, v45);
    sub_24A756FB8(v25, v26, v27, v28, 58, 0xE100000000000000, (uint64_t)v51);
    swift_bridgeObjectRelease();
    sub_24A736D6C((uint64_t)v51, (uint64_t)v57, &qword_2697B4040);
    uint64_t v32 = v46;
    if (!v58) {
      goto LABEL_10;
    }
    uint64_t v33 = v59;
    uint64_t v34 = v60;
    uint64_t v36 = v61;
    uint64_t v35 = v62;
    swift_bridgeObjectRelease();
    sub_24A752194(v52, v33, v34, v36, v35);
    if (v32)
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_24A736D6C((uint64_t)v52, (uint64_t)&v53, &qword_2697B4030);
    unint64_t v37 = v53;
    if (v53)
    {
      long long v46 = v54;
      uint64_t v21 = v55;
      uint64_t v22 = v56;
      swift_getKeyPath();
      sub_24A7629A8();
      swift_release();
      MEMORY[0x24C5CDEE0](v47, v48, v49, v50);
      swift_bridgeObjectRelease();
      id v38 = objc_allocWithZone(MEMORY[0x263F51CA0]);
      id v39 = v37;
      unint64_t v40 = (void *)sub_24A762DF8();
      swift_bridgeObjectRelease();
      id v20 = objc_msgSend(v38, sel_initWithIdentifier_value_, v40, v39);

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v44, v45);
      long long v23 = v46;
    }
    else
    {
LABEL_10:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v30, v31);
      id v20 = 0;
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      long long v23 = 0uLL;
    }
  }
  unint64_t v41 = v63;
  *unsigned int v63 = v20;
  *(_OWORD *)(v41 + 1) = v23;
  v41[3] = v21;
  v41[4] = v22;
  return result;
}

void sub_24A752194(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  sub_24A755974(a1, a2, a3, a4, (uint64_t)v21);
  sub_24A736D6C((uint64_t)v21, (uint64_t)v40, &qword_2697B4038);
  if (v40[1])
  {
    uint64_t v11 = v40[2];
    uint64_t v10 = v40[3];
    uint64_t v12 = v40[4];
    uint64_t v13 = v40[5];
    id v14 = objc_msgSend(self, sel_stringValueType);
    id v15 = objc_allocWithZone(MEMORY[0x263F51D50]);
    swift_bridgeObjectRetain();
    id v16 = objc_msgSend(v15, sel_initWithValue_valueType_, sub_24A7635D8(), v14);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

LABEL_6:
    *a5 = v16;
    a5[1] = v11;
    a5[2] = v10;
    a5[3] = v12;
    a5[4] = v13;
    return;
  }
  sub_24A755E54(a1, a2, a3, a4, (uint64_t)v22);
  uint64_t v20 = a3;
  id v16 = (id)v22[0];
  uint64_t v11 = v22[1];
  uint64_t v17 = a4;
  uint64_t v10 = v22[2];
  uint64_t v12 = v22[3];
  uint64_t v13 = v22[4];
  sub_24A736D6C((uint64_t)v22, (uint64_t)v39, &qword_2697B4030);
  if (v39[0]) {
    goto LABEL_6;
  }
  uint64_t v19 = (void *)v17;
  sub_24A75633C(a1, a2, v20, v17, (uint64_t)v23);
  id v16 = (id)v23[0];
  uint64_t v11 = v23[1];
  uint64_t v10 = v23[2];
  uint64_t v12 = v23[3];
  uint64_t v13 = v23[4];
  sub_24A736D6C((uint64_t)v23, (uint64_t)v38, &qword_2697B4030);
  uint64_t v18 = v41;
  if (v38[0]) {
    goto LABEL_6;
  }
  sub_24A756B54(a1, a2, v20, (uint64_t)v19, v24);
  id v16 = (id)v24[0];
  uint64_t v11 = v24[1];
  uint64_t v10 = v24[2];
  uint64_t v12 = v24[3];
  uint64_t v13 = v24[4];
  sub_24A736D6C((uint64_t)v24, (uint64_t)v37, &qword_2697B4030);
  if (v37[0]) {
    goto LABEL_6;
  }
  sub_24A7571A0(a1, a2, v20, (uint64_t)v19, (uint64_t)v25);
  if (!v18)
  {
    uint64_t v11 = v25[1];
    unint64_t v41 = (void *)v25[0];
    uint64_t v10 = v25[2];
    uint64_t v12 = v25[3];
    uint64_t v13 = v25[4];
    sub_24A736D6C((uint64_t)v25, (uint64_t)v36, &qword_2697B4030);
    if (v36[0]) {
      goto LABEL_10;
    }
    sub_24A757648(a1, a2, v20, (uint64_t)v19, (uint64_t)v26);
    uint64_t v11 = v26[1];
    unint64_t v41 = (void *)v26[0];
    uint64_t v10 = v26[2];
    uint64_t v12 = v26[3];
    uint64_t v13 = v26[4];
    sub_24A736D6C((uint64_t)v26, (uint64_t)v35, &qword_2697B4030);
    if (v35[0]) {
      goto LABEL_10;
    }
    sub_24A757AE0(a1, a2, v20, v19, (uint64_t)v27);
    uint64_t v11 = v27[1];
    unint64_t v41 = (void *)v27[0];
    uint64_t v10 = v27[2];
    uint64_t v12 = v27[3];
    uint64_t v13 = v27[4];
    sub_24A736D6C((uint64_t)v27, (uint64_t)v34, &qword_2697B4030);
    if (v34[0]) {
      goto LABEL_10;
    }
    sub_24A752784(a1, a2, v20, (uint64_t)v19, v28);
    uint64_t v11 = v28[1];
    unint64_t v41 = (void *)v28[0];
    uint64_t v10 = v28[2];
    uint64_t v12 = v28[3];
    uint64_t v13 = v28[4];
    sub_24A736D6C((uint64_t)v28, (uint64_t)v33, &qword_2697B4030);
    if (v33[0]
      || (sub_24A75822C(a1, a2, v20, (uint64_t)v19, v29),
          uint64_t v11 = v29[1],
          unint64_t v41 = (void *)v29[0],
          uint64_t v10 = v29[2],
          uint64_t v12 = v29[3],
          uint64_t v13 = v29[4],
          sub_24A736D6C((uint64_t)v29, (uint64_t)v32, &qword_2697B4030),
          v32[0]))
    {
LABEL_10:
      id v16 = v41;
    }
    else
    {
      sub_24A7530E4(a1, a2, v20, (uint64_t)v19, (uint64_t)v30);
      id v16 = (id)v30[0];
      uint64_t v11 = v30[1];
      uint64_t v10 = v30[2];
      uint64_t v12 = v30[3];
      uint64_t v13 = v30[4];
      sub_24A736D6C((uint64_t)v30, (uint64_t)v31, &qword_2697B4030);
    }
    goto LABEL_6;
  }
}

uint64_t sub_24A752570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v6 = a4;
  uint64_t v7 = a3;
  uint64_t v8 = a2;
  uint64_t v9 = a1;
  uint64_t result = sub_24A751C74(a1, a2, a3, a4, v23);
  if (!v5)
  {
    sub_24A736D6C((uint64_t)v23, (uint64_t)&v33, &qword_2697B4098);
    uint64_t v12 = v33;
    if (v33)
    {
      uint64_t v9 = v34;
      uint64_t v8 = v35;
      uint64_t v7 = v36;
      uint64_t v6 = v37;
      sub_24A756FB8(v34, v35, v36, v37, 44, 0xE100000000000000, (uint64_t)v24);
      sub_24A736D6C((uint64_t)v24, (uint64_t)v27, &qword_2697B4040);
      if (!v28) {
        goto LABEL_8;
      }
      uint64_t v13 = v29;
      uint64_t v14 = v30;
      uint64_t v21 = v31;
      uint64_t v22 = v12;
      uint64_t v15 = v32;
      swift_bridgeObjectRelease();
      sub_24A752570(v25, v13, v14, v21, v15);
      swift_bridgeObjectRelease();
      sub_24A736D6C((uint64_t)v25, (uint64_t)v26, &qword_2697B4090);
      unint64_t v17 = v26[0];
      uint64_t v12 = v22;
      if (v26[0])
      {
        uint64_t v9 = v26[1];
        uint64_t v8 = v26[2];
        uint64_t v7 = v26[3];
        uint64_t v18 = v26[4];
        swift_bridgeObjectRelease();
        sub_24A704710(&qword_2697B3700);
        uint64_t v19 = swift_allocObject();
        *(_OWORD *)(v19 + 16) = xmmword_24A764A70;
        *(void *)(v19 + 32) = v22;
        uint64_t v38 = v19;
        sub_24A762F58();
        uint64_t result = sub_24A75400C(v17, (uint64_t (*)(uint64_t, void, unint64_t))sub_24A72ACBC);
        uint64_t v16 = v38;
        uint64_t v6 = v18;
      }
      else
      {
LABEL_8:
        sub_24A704710(&qword_2697B3700);
        uint64_t v20 = swift_allocObject();
        *(_OWORD *)(v20 + 16) = xmmword_24A764A70;
        *(void *)(v20 + 32) = v12;
        uint64_t v38 = v20;
        uint64_t result = sub_24A762F58();
        uint64_t v16 = v38;
      }
    }
    else
    {
      uint64_t result = swift_bridgeObjectRetain();
      uint64_t v16 = MEMORY[0x263F8EE78];
    }
    *a5 = v16;
    a5[1] = v9;
    a5[2] = v8;
    a5[3] = v7;
    a5[4] = v6;
  }
  return result;
}

uint64_t sub_24A752784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v64 = a5;
  *(void *)&long long v65 = a4;
  uint64_t v8 = sub_24A762568();
  uint64_t v59 = *(void *)(v8 - 8);
  uint64_t v60 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v58 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24A704710(&qword_2697B4068);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24A704710(&qword_2697B4070);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24A704710(&qword_2697B4078);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v61 = v17;
  uint64_t v62 = v18;
  MEMORY[0x270FA5388](v17);
  unsigned int v63 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2697B2F10 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_24A70D1FC(v10, (uint64_t)qword_2697B9938);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v20, v10);
  sub_24A751824(a1, a2, a3, v65, (uint64_t)v13, &qword_2697B4088, &qword_2697B4078, &qword_2697B4068, (uint64_t)v16, &qword_2697B4080);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v21 = sub_24A704710(&qword_2697B4080);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v16, 1, v21) == 1)
  {
    uint64_t result = sub_24A70FD54((uint64_t)v16, &qword_2697B4070);
  }
  else
  {
    long long v23 = (uint64_t *)&v16[*(int *)(v21 + 48)];
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    uint64_t v26 = v23[2];
    uint64_t v27 = v23[3];
    uint64_t v28 = v62;
    uint64_t v29 = v63;
    uint64_t v30 = v61;
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v63, v16, v61);
    sub_24A756FB8(v24, v25, v26, v27, 40, 0xE100000000000000, (uint64_t)v70);
    swift_bridgeObjectRelease();
    sub_24A736D6C((uint64_t)v70, (uint64_t)v79, &qword_2697B4040);
    if (v80)
    {
      uint64_t v31 = v81;
      uint64_t v32 = v82;
      uint64_t v34 = v83;
      uint64_t v33 = v84;
      swift_bridgeObjectRelease();
      uint64_t v35 = v85;
      sub_24A752570(v31, v32, v34, v33, v71);
      if (v35)
      {
        (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_24A736D6C((uint64_t)v71, (uint64_t)v78, &qword_2697B4090);
      if (v78[0])
      {
        sub_24A756FB8(v78[1], v78[2], v78[3], v78[4], 41, 0xE100000000000000, (uint64_t)v72);
        swift_bridgeObjectRelease();
        sub_24A736D6C((uint64_t)v72, (uint64_t)v73, &qword_2697B4040);
        if (v74)
        {
          long long v65 = v75;
          uint64_t v37 = v76;
          uint64_t v38 = v77;
          swift_bridgeObjectRelease();
          swift_getKeyPath();
          uint64_t v85 = 0;
          sub_24A7629A8();
          swift_release();
          MEMORY[0x24C5CDEE0](v66, v67, v68, v69);
          swift_bridgeObjectRelease();
          unint64_t v41 = v58;
          sub_24A762558();
          sub_24A762538();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v41, v60);
          id v42 = objc_allocWithZone(MEMORY[0x263F51BB8]);
          uint64_t v43 = (void *)sub_24A762DF8();
          swift_bridgeObjectRelease();
          unint64_t v44 = (void *)sub_24A762DF8();
          swift_bridgeObjectRelease();
          id v45 = objc_msgSend(v42, sel_initWithTypeIdentifier_instanceIdentifier_, v43, v44);

          id v46 = objc_allocWithZone(MEMORY[0x263F51BB0]);
          sub_24A705D7C(0, &qword_2697B2FD8);
          uint64_t v47 = (void *)sub_24A762F28();
          swift_bridgeObjectRelease();
          id v48 = objc_msgSend(v46, sel_initWithTransient_identifier_properties_managedAccountIdentifier_, 1, v45, v47, 0);

          swift_getKeyPath();
          id v49 = v48;
          uint64_t v50 = v61;
          uint64_t v51 = v63;
          sub_24A7629A8();
          swift_release();
          MEMORY[0x24C5CDEE0](v66, v67, v68, v69);
          swift_bridgeObjectRelease();
          id v52 = objc_allocWithZone(MEMORY[0x263F51BD8]);
          uint64_t v53 = (void *)sub_24A762DF8();
          swift_bridgeObjectRelease();
          id v54 = objc_msgSend(v52, sel_initWithIdentifier_, v53);

          id v55 = objc_allocWithZone(MEMORY[0x263F51D50]);
          id v56 = v49;
          id v36 = objc_msgSend(v55, sel_initWithValue_valueType_, v56, v54);

          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v51, v50);
          long long v39 = v65;
          goto LABEL_10;
        }
        (*(void (**)(char *, uint64_t))(v28 + 8))(v63, v30);
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v63, v30);
      }
      id v36 = 0;
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      long long v39 = 0uLL;
      goto LABEL_10;
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v29, v30);
  }
  id v36 = 0;
  uint64_t v37 = 0;
  uint64_t v38 = 0;
  long long v39 = 0uLL;
LABEL_10:
  unint64_t v40 = v64;
  void *v64 = v36;
  *(_OWORD *)(v40 + 1) = v39;
  v40[3] = v37;
  v40[4] = v38;
  return result;
}

void *sub_24A752EE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_24A752194(v25, a1, a2, a3, a4);
  if (!v5)
  {
    uint64_t result = (void *)sub_24A736D6C((uint64_t)v25, (uint64_t)&v35, &qword_2697B4030);
    uint64_t v8 = v35;
    if (v35)
    {
      uint64_t v10 = v36;
      uint64_t v9 = v37;
      uint64_t v11 = v38;
      uint64_t v12 = v39;
      sub_24A756FB8(v36, v37, v38, v39, 44, 0xE100000000000000, (uint64_t)v26);
      sub_24A736D6C((uint64_t)v26, (uint64_t)v29, &qword_2697B4040);
      if (v30)
      {
        uint64_t v22 = v10;
        uint64_t v23 = v9;
        uint64_t v13 = v31;
        uint64_t v14 = v32;
        uint64_t v16 = v33;
        uint64_t v15 = v34;
        swift_bridgeObjectRelease();
        sub_24A752EE4(v27, v13, v14, v16, v15);
        swift_bridgeObjectRelease();
        sub_24A736D6C((uint64_t)v27, (uint64_t)v28, &qword_2697B4048);
        unint64_t v18 = v28[0];
        if (v28[0])
        {
          uint64_t v10 = v28[1];
          uint64_t v24 = v28[2];
          uint64_t v11 = v28[3];
          uint64_t v19 = v28[4];
          swift_bridgeObjectRelease();
          sub_24A704710(&qword_2697B3700);
          uint64_t v20 = swift_allocObject();
          *(_OWORD *)(v20 + 16) = xmmword_24A764A70;
          *(void *)(v20 + 32) = v8;
          uint64_t v40 = v20;
          sub_24A762F58();
          uint64_t result = (void *)sub_24A75400C(v18, (uint64_t (*)(uint64_t, void, unint64_t))sub_24A72AA9C);
          uint64_t v17 = v40;
          uint64_t v12 = v19;
          uint64_t v9 = v24;
          goto LABEL_10;
        }
        uint64_t v10 = v22;
        uint64_t v9 = v23;
      }
      sub_24A704710(&qword_2697B3700);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_24A764A70;
      *(void *)(v21 + 32) = v8;
      uint64_t v40 = v21;
      uint64_t result = (void *)sub_24A762F58();
      uint64_t v17 = v40;
      goto LABEL_10;
    }
    uint64_t v17 = 0;
    uint64_t v10 = 0;
    uint64_t v9 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
LABEL_10:
    *a5 = v17;
    a5[1] = v10;
    a5[2] = v9;
    a5[3] = v11;
    a5[4] = v12;
  }
  return result;
}

void sub_24A7530E4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_24A756FB8(a1, a2, a3, a4, 91, 0xE100000000000000, (uint64_t)v23);
  sub_24A736D6C((uint64_t)v23, (uint64_t)v32, &qword_2697B4040);
  long long v7 = 0uLL;
  if (!v33) {
    goto LABEL_9;
  }
  uint64_t v8 = v34;
  uint64_t v9 = v35;
  uint64_t v10 = v36;
  uint64_t v11 = v37;
  swift_bridgeObjectRelease();
  sub_24A752EE4(v8, v9, v10, v11, v24);
  swift_bridgeObjectRelease();
  if (v5) {
    return;
  }
  sub_24A736D6C((uint64_t)v24, (uint64_t)v31, &qword_2697B4048);
  id v12 = (id)v31[0];
  if (!v31[0])
  {
LABEL_11:
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    long long v7 = 0uLL;
    goto LABEL_15;
  }
  sub_24A756FB8(v31[1], v31[2], v31[3], v31[4], 93, 0xE100000000000000, (uint64_t)v25);
  swift_bridgeObjectRelease();
  sub_24A736D6C((uint64_t)v25, (uint64_t)v26, &qword_2697B4040);
  if (!v27)
  {
    swift_bridgeObjectRelease();
    id v12 = 0;
    goto LABEL_11;
  }
  long long v22 = v28;
  uint64_t v13 = v29;
  uint64_t v14 = v30;
  swift_bridgeObjectRelease();
  unint64_t v15 = sub_24A74F240((unint64_t)v12);
  uint64_t v16 = sub_24A758958(v15);
  swift_bridgeObjectRelease();
  if ((v16 & 0xC000000000000001) != 0)
  {
    if (sub_24A763288() == 1) {
      goto LABEL_7;
    }
LABEL_13:
    sub_24A72A684(v16);
    swift_bridgeObjectRelease();
    id v18 = objc_allocWithZone(MEMORY[0x263F51B28]);
    sub_24A705D7C(0, &qword_2697B3038);
    uint64_t v19 = (void *)sub_24A762F28();
    swift_release();
    id v17 = objc_msgSend(v18, sel_initWithMemberValueTypes_, v19);

    goto LABEL_14;
  }
  if (*(void *)(v16 + 16) != 1) {
    goto LABEL_13;
  }
LABEL_7:
  id v17 = (id)sub_24A74F384(v16);
  swift_bridgeObjectRelease();
  if (v17)
  {
LABEL_14:
    id v20 = objc_allocWithZone(MEMORY[0x263F51D50]);
    sub_24A705D7C(0, &qword_2697B3040);
    uint64_t v21 = (void *)sub_24A762F28();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v20, sel_initWithValues_memberValueType_, v21, v17);

    long long v7 = v22;
    goto LABEL_15;
  }
  __break(1u);
LABEL_9:
  id v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
LABEL_15:
  *(void *)a5 = v12;
  *(_OWORD *)(a5 + 8) = v7;
  *(void *)(a5 + 24) = v13;
  *(void *)(a5 + 32) = v14;
}

void *sub_24A753388(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_24A704710((uint64_t *)&unk_2697B3810);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_24A7533F0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_24A762EC8();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x24C5CDF40](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_24A75346C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24A7534CC(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_24A75348C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24A753674(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_24A7534AC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24A7537E0(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_24A7534CC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_24A704710(&qword_2697B40F8);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_24A704710(&qword_2697B4100);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24A763468();
  __break(1u);
  return result;
}

uint64_t sub_24A753674(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_24A704710(&qword_2697B2FD0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24A763468();
  __break(1u);
  return result;
}

uint64_t sub_24A7537E0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_24A704710(&qword_2697B30A8);
  uint64_t v10 = *(void *)(type metadata accessor for ScheduledQuery() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for ScheduledQuery() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  id v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_24A763468();
  __break(1u);
  return result;
}

unsigned __int8 *sub_24A753A20(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_24A754478(a1, a2, a3);
}

unsigned __int8 *sub_24A753A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_24A762EF8();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    int64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_24A753B20();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    int64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    int64_t v7 = (unsigned __int8 *)sub_24A763398();
  }
LABEL_7:
  uint64_t v11 = sub_24A754478(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_24A753B20()
{
  unint64_t v0 = sub_24A762F08();
  uint64_t v4 = sub_24A753BA0(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_24A753BA0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = sub_24A753CF8(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = sub_24A753388(v9, 0);
      unint64_t v12 = sub_24A753DF8((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_24A763398();
LABEL_4:
        JUMPOUT(0x24C5CDEF0);
      }
    }
    else
    {
      uint64_t v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x24C5CDEF0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x24C5CDEF0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_24A753CF8(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    uint64_t result = sub_24A7533F0(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    uint64_t result = sub_24A7533F0(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }

  return sub_24A762EA8();
}

unint64_t sub_24A753DF8(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    void *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_24A7533F0(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_24A762EB8();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_24A763398();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_24A7533F0(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_24A762E88();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_24A75400C(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_24A763428();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_24A763428();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v2 = v6;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    swift_bridgeObjectRetain();
    unint64_t v6 = MEMORY[0x24C5CE410](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *unint64_t v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_24A763428();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return sub_24A762F58();
}

uint64_t sub_24A7541E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_24A70317C(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(type metadata accessor for ScheduledQuery() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_24A763468();
  __break(1u);
  return result;
}

unsigned __int8 *sub_24A754384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_24A758EE4();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_24A762EF8();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_24A753B20();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (unsigned __int8 *)sub_24A763398();
  }
LABEL_7:
  unint64_t v13 = sub_24A754478(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_24A754478(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v23 = a3 + 48;
      unsigned __int8 v24 = a3 + 55;
      unsigned __int8 v25 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v23 = 58;
      }
      else
      {
        unsigned __int8 v25 = 97;
        unsigned __int8 v24 = 65;
      }
      if (result)
      {
        uint64_t v26 = 0;
        do
        {
          unsigned int v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              uint64_t v13 = 0;
              if (v27 < 0x61 || v27 >= v25) {
                return (unsigned __int8 *)v13;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
            return 0;
          }
          uint64_t v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v15 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v16 = a3 + 48;
  unsigned __int8 v17 = a3 + 55;
  unsigned __int8 v18 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v16 = 58;
  }
  else
  {
    unsigned __int8 v18 = 97;
    unsigned __int8 v17 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v19 = result + 1;
  do
  {
    unsigned int v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        uint64_t v13 = 0;
        if (v20 < 0x61 || v20 >= v18) {
          return (unsigned __int8 *)v13;
        }
        char v21 = -87;
      }
      else
      {
        char v21 = -55;
      }
    }
    else
    {
      char v21 = -48;
    }
    uint64_t v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21))) {
      return 0;
    }
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_24A7546F4(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_24A763298();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_24A705D7C(0, &qword_2697B3038);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v26;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_24A763288();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_24A754994(v7, result + 1);
    uint64_t v27 = v21;
    if (*(void *)(v21 + 24) <= *(void *)(v21 + 16))
    {
      id v25 = v8;
      sub_24A754B8C();
      uint64_t v22 = v27;
    }
    else
    {
      uint64_t v22 = v21;
      id v23 = v8;
    }
    sub_24A754E2C((uint64_t)v8, v22);
    *uint64_t v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_24A763148();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_24A705D7C(0, &qword_2697B3038);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_24A763158();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_24A763158();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_24A754EB0((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_24A754994(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_24A704710(&qword_2697B4050);
    uint64_t v2 = sub_24A763308();
    uint64_t v14 = v2;
    sub_24A763248();
    if (sub_24A7632B8())
    {
      sub_24A705D7C(0, &qword_2697B3038);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_24A754B8C();
          uint64_t v2 = v14;
        }
        uint64_t result = sub_24A763148();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_24A7632B8());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  return v2;
}

uint64_t sub_24A754B8C()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_24A704710(&qword_2697B4050);
  uint64_t v3 = sub_24A7632F8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                unint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = sub_24A763148();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

unint64_t sub_24A754E2C(uint64_t a1, uint64_t a2)
{
  sub_24A763148();
  unint64_t result = sub_24A763228();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

void sub_24A754EB0(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_24A754B8C();
  }
  else
  {
    if (v7 > v6)
    {
      sub_24A755038();
      goto LABEL_14;
    }
    sub_24A7551E4();
  }
  uint64_t v8 = *v3;
  uint64_t v9 = sub_24A763148();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_24A705D7C(0, &qword_2697B3038);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_24A763158();

    if (v12)
    {
LABEL_13:
      sub_24A7635E8();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_24A763158();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

id sub_24A755038()
{
  unint64_t v1 = v0;
  sub_24A704710(&qword_2697B4050);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24A7632E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24A7551E4()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_24A704710(&qword_2697B4050);
  uint64_t v3 = sub_24A7632F8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v27 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    id v19 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_24A763148();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    unint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24A755460(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

uint64_t sub_24A7554C0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    uint64_t v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    uint64_t v11 = (void *)sub_24A763398();
  }
  uint64_t result = sub_24A75672C((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    char v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

void sub_24A755594(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      if (a4 < 0) {
        uint64_t v7 = a4;
      }
      else {
        uint64_t v7 = a4 & 0xFFFFFFFFFFFFFF8;
      }
      MEMORY[0x24C5CE350](a1, a2, v7);
      sub_24A705D7C(0, &qword_2697B3038);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
LABEL_27:
    __break(1u);
    return;
  }
  if (a3) {
    goto LABEL_13;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_20;
  }
  __break(1u);
LABEL_13:
  if (sub_24A763268() != *(_DWORD *)(a4 + 36))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_24A763278();
  sub_24A705D7C(0, &qword_2697B3038);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  char v4 = v17;
  swift_unknownObjectRelease();
  uint64_t v8 = sub_24A763148();
  uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v8 & ~v9;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_26:

    __break(1u);
    goto LABEL_27;
  }
  id v10 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v11 = sub_24A763158();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v6 = (v6 + 1) & v12;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_26;
      }
      id v13 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v14 = sub_24A763158();
    }
    while ((v14 & 1) == 0);
  }

LABEL_20:
  char v15 = *(void **)(*(void *)(a4 + 48) + 8 * v6);

  id v16 = v15;
}

uint64_t sub_24A75580C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_24A755894()
{
  id v0 = objc_msgSend(self, sel_processInfo);
  id v1 = objc_msgSend(v0, sel_environment);

  uint64_t v2 = sub_24A762DB8();
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_24A729D3C(0xD000000000000011, 0x800000024A769180), (v4 & 1) != 0))
  {
    uint64_t v5 = *(void *)(*(void *)(v2 + 56) + 16 * v3);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v5 = 58;
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24A755974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v35 = a3;
  *(void *)&long long v36 = a4;
  uint64_t v8 = sub_24A704710(&qword_2697B40B0);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_24A704710(&qword_2697B40B8);
  uint64_t v34 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v37 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_24A704710(&qword_2697B40C0);
  uint64_t v12 = *(void *)(v38 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v38);
  char v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  unint64_t v17 = (char *)&v32 - v16;
  sub_24A704710(&qword_2697B40C8);
  sub_24A762948();
  sub_24A751824(a1, a2, v35, v36, (uint64_t)v17, &qword_2697B40F0, &qword_2697B40B8, &qword_2697B40C0, (uint64_t)v10, &qword_2697B40D0);
  uint64_t v18 = sub_24A704710(&qword_2697B40D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v10, 1, v18) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v38);
    uint64_t result = sub_24A70FD54((uint64_t)v10, &qword_2697B40B0);
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    long long v24 = 0uLL;
  }
  else
  {
    BOOL v25 = &v10[*(int *)(v18 + 48)];
    long long v36 = *(_OWORD *)v25;
    uint64_t v27 = *((void *)v25 + 2);
    uint64_t v26 = *((void *)v25 + 3);
    uint64_t v35 = v27;
    uint64_t v33 = v26;
    uint64_t v28 = v34;
    (*(void (**)(void))(v34 + 32))();
    swift_getKeyPath();
    sub_24A762998();
    swift_release();
    long long v40 = v43;
    uint64_t v41 = v44;
    uint64_t v42 = v45;
    sub_24A762948();
    sub_24A758F38();
    sub_24A758F8C();
    sub_24A759120(&qword_2697B40E8, &qword_2697B40C0);
    uint64_t v29 = v38;
    sub_24A763078();
    uint64_t v30 = *(void (**)(char *, uint64_t))(v12 + 8);
    v30(v15, v29);
    swift_bridgeObjectRelease();
    uint64_t v20 = MEMORY[0x24C5CDEE0](v46, v47, v48, v49);
    uint64_t v21 = v31;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v37, v39);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v30)(v17, v29);
    uint64_t v23 = v33;
    long long v24 = v36;
    uint64_t v22 = v35;
  }
  *(void *)a5 = v20;
  *(void *)(a5 + 8) = v21;
  *(_OWORD *)(a5 + 16) = v24;
  *(void *)(a5 + 32) = v22;
  *(void *)(a5 + 40) = v23;
  return result;
}

uint64_t sub_24A755DE8(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v7 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v7 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (a1 == a5 && a2 == a6 && !(a3 >> 16) && v7 == a4 >> 16) {
    return 1;
  }
  else {
    return sub_24A763588() & 1;
  }
}

uint64_t sub_24A755E54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_24A704710(&qword_2697B4068);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24A704710(&qword_2697B4070);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_24A704710(&qword_2697B4078);
  uint64_t v42 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v41 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2697B2F08 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_24A70D1FC(v10, (uint64_t)qword_2697B9920);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v18, v10);
  sub_24A751824(a1, a2, a3, a4, (uint64_t)v13, &qword_2697B4088, &qword_2697B4078, &qword_2697B4068, (uint64_t)v16, &qword_2697B4080);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v19 = sub_24A704710(&qword_2697B4080);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v16, 1, v19) == 1)
  {
    uint64_t result = sub_24A70FD54((uint64_t)v16, &qword_2697B4070);
LABEL_11:
    id v32 = 0;
    uint64_t v36 = 0;
    uint64_t v22 = 0;
    long long v37 = 0uLL;
    goto LABEL_12;
  }
  uint64_t v21 = &v16[*(int *)(v19 + 48)];
  long long v38 = *(_OWORD *)v21;
  uint64_t v22 = *((void *)v21 + 3);
  uint64_t v39 = *((void *)v21 + 2);
  uint64_t v23 = v41;
  uint64_t v24 = v42;
  uint64_t v25 = v40;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v41, v16, v40);
  swift_getKeyPath();
  sub_24A7629A8();
  swift_release();
  unint64_t v26 = v44;
  unint64_t v27 = v45;
  uint64_t v29 = v46;
  uint64_t v28 = v47;
  if (sub_24A755DE8(1702195828, 0xE400000000000000, v44, v45, v46, v47))
  {
    swift_bridgeObjectRelease();
    id v30 = objc_msgSend(self, sel_BOOLValueType);
    id v31 = objc_allocWithZone(MEMORY[0x263F51D50]);
    char v43 = 1;
    id v32 = objc_msgSend(v31, sel_initWithValue_valueType_, sub_24A7635D8(), v30);
    swift_unknownObjectRelease();

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v23, v25);
  }
  else
  {
    char v33 = sub_24A755DE8(0x65736C6166, 0xE500000000000000, v26, v27, v29, v28);
    swift_bridgeObjectRelease();
    if ((v33 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v25);
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    id v34 = objc_msgSend(self, sel_BOOLValueType);
    id v35 = objc_allocWithZone(MEMORY[0x263F51D50]);
    char v43 = 0;
    id v32 = objc_msgSend(v35, sel_initWithValue_valueType_, sub_24A7635D8(), v34);
    swift_unknownObjectRelease();

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v41, v25);
  }
  uint64_t v36 = v39;
  long long v37 = v38;
LABEL_12:
  *(void *)a5 = v32;
  *(_OWORD *)(a5 + 8) = v37;
  *(void *)(a5 + 24) = v36;
  *(void *)(a5 + 32) = v22;
  return result;
}

uint64_t sub_24A75633C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  *(void *)&long long v35 = a2;
  uint64_t v7 = sub_24A704710(&qword_2697B4070);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24A704710(&qword_2697B4078);
  uint64_t v33 = *(void *)(v10 - 8);
  uint64_t v34 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24A704710(&qword_2697B4068);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v33 - v18;
  sub_24A762948();
  sub_24A762988();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v14 + 8);
  v20(v17, v13);
  sub_24A751824(a1, v35, v36, v37, (uint64_t)v19, &qword_2697B4088, &qword_2697B4078, &qword_2697B4068, (uint64_t)v9, &qword_2697B4080);
  uint64_t v21 = sub_24A704710(&qword_2697B4080);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v9, 1, v21) == 1)
  {
    v20(v19, v13);
    uint64_t result = sub_24A70FD54((uint64_t)v9, &qword_2697B4070);
    id v23 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    long long v26 = 0uLL;
LABEL_5:
    *(void *)a5 = v23;
    *(_OWORD *)(a5 + 8) = v26;
    *(void *)(a5 + 24) = v24;
    *(void *)(a5 + 32) = v25;
    return result;
  }
  unint64_t v27 = &v9[*(int *)(v21 + 48)];
  long long v35 = *(_OWORD *)v27;
  uint64_t v28 = *((void *)v27 + 2);
  uint64_t v36 = *((void *)v27 + 3);
  uint64_t v37 = v28;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v12, v9, v34);
  swift_getKeyPath();
  sub_24A7629A8();
  swift_release();
  uint64_t result = sub_24A763028();
  if ((v29 & 1) == 0)
  {
    uint64_t v30 = result;
    id v31 = objc_msgSend(self, sel_doubleValueType);
    id v32 = objc_allocWithZone(MEMORY[0x263F51D50]);
    uint64_t v38 = v30;
    id v23 = objc_msgSend(v32, sel_initWithValue_valueType_, sub_24A7635D8(), v31);
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v34);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v20)(v19, v13);
    uint64_t v25 = v36;
    uint64_t v24 = v37;
    long long v26 = v35;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A75672C(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    uint64_t result = sub_24A7533F0(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_95;
  }
  uint64_t result = sub_24A762EA8();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    uint64_t result = sub_24A7533F0(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    uint64_t result = sub_24A7533F0(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    uint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_91;
  }
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  uint64_t result = sub_24A762EA8();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  uint64_t v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    uint64_t v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v31 = a6 + 48;
        unsigned __int8 v32 = a6 + 55;
        unsigned __int8 v33 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v31 = 58;
        }
        else
        {
          unsigned __int8 v33 = 97;
          unsigned __int8 v32 = 65;
        }
        if (v19)
        {
          uint64_t v24 = 0;
          uint64_t v34 = v19 + 1;
          uint64_t v35 = result - 1;
          do
          {
            unsigned int v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                uint64_t v29 = 0;
                if (v36 < 0x61 || v36 >= v33) {
                  return v29;
                }
                char v37 = -87;
              }
              else
              {
                char v37 = -55;
              }
            }
            else
            {
              char v37 = -48;
            }
            uint64_t v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
              return 0;
            }
            uint64_t v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37))) {
              return 0;
            }
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v39 = a6 + 48;
      unsigned __int8 v40 = a6 + 55;
      unsigned __int8 v41 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v39 = 58;
      }
      else
      {
        unsigned __int8 v41 = 97;
        unsigned __int8 v40 = 65;
      }
      if (v19)
      {
        uint64_t v42 = 0;
        do
        {
          unsigned int v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              uint64_t v29 = 0;
              if (v43 < 0x61 || v43 >= v41) {
                return v29;
              }
              char v44 = -87;
            }
            else
            {
              char v44 = -55;
            }
          }
          else
          {
            char v44 = -48;
          }
          uint64_t v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63) {
            return 0;
          }
          uint64_t v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44))) {
            return 0;
          }
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 48;
      unsigned __int8 v22 = a6 + 55;
      unsigned __int8 v23 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v21 = 58;
      }
      else
      {
        unsigned __int8 v23 = 97;
        unsigned __int8 v22 = 65;
      }
      if (v19)
      {
        uint64_t v24 = 0;
        uint64_t v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              uint64_t v29 = 0;
              if (v27 < 0x61 || v27 >= v23) {
                return v29;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
            return 0;
          }
          uint64_t v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28))) {
            return 0;
          }
          ++v25;
          if (!--v26) {
            return v24;
          }
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

uint64_t sub_24A756B54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v49 = a3;
  uint64_t v50 = (uint64_t (*)(char *, uint64_t))a4;
  uint64_t v47 = a5;
  uint64_t v48 = a2;
  uint64_t v6 = sub_24A704710(&qword_2697B4070);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24A704710(&qword_2697B4078);
  uint64_t v46 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24A704710(&qword_2697B4068);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  unint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  int64_t v18 = (char *)&v43 - v17;
  sub_24A762948();
  sub_24A762988();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v13 + 8);
  v19(v16, v12);
  sub_24A751824(a1, v48, v49, (uint64_t)v50, (uint64_t)v18, &qword_2697B4088, &qword_2697B4078, &qword_2697B4068, (uint64_t)v8, &qword_2697B4080);
  uint64_t v20 = sub_24A704710(&qword_2697B4080);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v8, 1, v20) == 1)
  {
    v19(v18, v12);
    uint64_t result = sub_24A70FD54((uint64_t)v8, &qword_2697B4070);
    id v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    long long v25 = 0uLL;
LABEL_8:
    uint64_t v42 = v47;
    *uint64_t v47 = v22;
    *(_OWORD *)(v42 + 1) = v25;
    v42[3] = v23;
    v42[4] = v24;
    return result;
  }
  uint64_t v26 = v12;
  unsigned int v27 = &v8[*(int *)(v20 + 48)];
  long long v45 = *(_OWORD *)v27;
  uint64_t v29 = *((void *)v27 + 2);
  uint64_t v28 = *((void *)v27 + 3);
  uint64_t v49 = v29;
  uint64_t v50 = (uint64_t (*)(char *, uint64_t))v19;
  uint64_t v48 = v28;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v11, v8, v9);
  swift_getKeyPath();
  sub_24A7629A8();
  swift_release();
  uint64_t v30 = v51;
  uint64_t v31 = v52;
  uint64_t v32 = v54;
  if ((v52 ^ v51) >> 14)
  {
    char v44 = v11;
    uint64_t v33 = v9;
    uint64_t v34 = v53;
    uint64_t v35 = sub_24A7554C0(v51, v52, v53, v54, 10);
    if ((v36 & 0x100) != 0) {
      uint64_t v35 = (uint64_t)sub_24A754384(v30, v31, v34, v32, 10);
    }
    unint64_t v37 = v35;
    char v38 = v36;
    uint64_t result = swift_bridgeObjectRelease();
    unsigned __int8 v39 = v50;
    if ((v38 & 1) == 0)
    {
      id v40 = objc_msgSend(self, sel_intValueType);
      id v41 = objc_allocWithZone(MEMORY[0x263F51D50]);
      unint64_t v51 = v37;
      id v22 = objc_msgSend(v41, sel_initWithValue_valueType_, sub_24A7635D8(), v40);
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v46 + 8))(v44, v33);
      uint64_t result = v39(v18, v26);
      uint64_t v24 = v48;
      uint64_t v23 = v49;
      long long v25 = v45;
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_24A756FB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v33 = a5;
  uint64_t v13 = sub_24A762318();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v38 = a1;
  *((void *)&v38 + 1) = a2;
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  sub_24A762308();
  sub_24A758E3C();
  uint64_t v17 = sub_24A7631B8();
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v20 = v33;
  if (sub_24A762ED8())
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = MEMORY[0x24C5CE230](v20, a6);
    uint64_t v23 = v22;
    uint64_t v25 = v24;
    uint64_t v27 = v26;
    uint64_t v36 = v17;
    uint64_t v37 = v19;
    uint64_t v34 = v20;
    uint64_t v35 = a6;
    sub_24A758E90();
    sub_24A763068();
    uint64_t result = swift_bridgeObjectRelease();
    long long v29 = v38;
    uint64_t v30 = v39;
    uint64_t v31 = v40;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v21 = 0;
    uint64_t v23 = 0;
    uint64_t v25 = 0;
    uint64_t v27 = 0;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    long long v29 = 0uLL;
  }
  *(void *)a7 = v21;
  *(void *)(a7 + 8) = v23;
  *(void *)(a7 + 16) = v25;
  *(void *)(a7 + 24) = v27;
  *(_OWORD *)(a7 + 32) = v29;
  *(void *)(a7 + 48) = v30;
  *(void *)(a7 + 56) = v31;
  return result;
}

uint64_t sub_24A7571A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_24A704710((uint64_t *)&unk_2697B3630);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24A762528();
  uint64_t v41 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v42 = (char *)&v39 - v17;
  sub_24A756FB8(a1, a2, a3, a4, 1702125892, 0xE400000000000000, (uint64_t)v45);
  sub_24A736D6C((uint64_t)v45, (uint64_t)v65, &qword_2697B4040);
  uint64_t result = v66;
  long long v19 = 0uLL;
  if (!v66)
  {
    id v35 = 0;
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    goto LABEL_10;
  }
  uint64_t v20 = v67;
  uint64_t v21 = v68;
  uint64_t v22 = v69;
  uint64_t v23 = v70;
  swift_bridgeObjectRelease();
  sub_24A756FB8(v20, v21, v22, v23, 40, 0xE100000000000000, (uint64_t)v46);
  swift_bridgeObjectRelease();
  sub_24A736D6C((uint64_t)v46, (uint64_t)v59, &qword_2697B4040);
  uint64_t result = v60;
  if (!v60) {
    goto LABEL_9;
  }
  uint64_t v24 = v61;
  uint64_t v25 = v62;
  uint64_t v26 = v63;
  uint64_t v27 = v64;
  swift_bridgeObjectRelease();
  sub_24A755974(v24, v25, v26, v27, (uint64_t)v47);
  swift_bridgeObjectRelease();
  uint64_t result = sub_24A736D6C((uint64_t)v47, (uint64_t)&v53, &qword_2697B4038);
  uint64_t v28 = v54;
  if (!v54)
  {
LABEL_9:
    id v35 = 0;
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    long long v19 = 0uLL;
    goto LABEL_10;
  }
  uint64_t v40 = v53;
  sub_24A756FB8(v55, v56, v57, v58, 41, 0xE100000000000000, (uint64_t)v48);
  swift_bridgeObjectRelease();
  sub_24A736D6C((uint64_t)v48, (uint64_t)v49, &qword_2697B4040);
  if (!v49[3])
  {
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  long long v39 = v50;
  uint64_t v29 = v51;
  uint64_t v30 = v52;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24A750F20(v40, v28, v12);
  swift_bridgeObjectRelease();
  uint64_t v31 = v41;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v12, 1, v13) == 1)
  {
    swift_bridgeObjectRelease();
    sub_24A70FD54((uint64_t)v12, (uint64_t *)&unk_2697B3630);
    unint64_t v43 = 0;
    unint64_t v44 = 0xE000000000000000;
    sub_24A763338();
    swift_bridgeObjectRelease();
    unint64_t v43 = 0xD000000000000015;
    unint64_t v44 = 0x800000024A7690F0;
    sub_24A762E68();
    swift_bridgeObjectRelease();
    sub_24A762E68();
    unint64_t v32 = v43;
    unint64_t v33 = v44;
    sub_24A709EF8();
    swift_allocError();
    unint64_t *v34 = v32;
    v34[1] = v33;
    return swift_willThrow();
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v42, v12, v13);
  id v36 = objc_msgSend(self, sel_dateValueType);
  uint64_t v37 = v31;
  id v38 = objc_allocWithZone(MEMORY[0x263F51D50]);
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v16, v42, v13);
  id v35 = objc_msgSend(v38, sel_initWithValue_valueType_, sub_24A7635D8(), v36);
  swift_unknownObjectRelease();

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v42, v13);
  long long v19 = v39;
LABEL_10:
  *(void *)a5 = v35;
  *(_OWORD *)(a5 + 8) = v19;
  *(void *)(a5 + 24) = v29;
  *(void *)(a5 + 32) = v30;
  return result;
}

uint64_t sub_24A757648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_24A704710(&qword_2697B3830);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24A762468();
  uint64_t v40 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v41 = (char *)&v38 - v17;
  sub_24A756FB8(a1, a2, a3, a4, 5001813, 0xE300000000000000, (uint64_t)v44);
  sub_24A736D6C((uint64_t)v44, (uint64_t)v59, &qword_2697B4040);
  uint64_t result = v60;
  long long v19 = 0uLL;
  if (!v60)
  {
    id v34 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    goto LABEL_10;
  }
  uint64_t v20 = v61;
  uint64_t v21 = v62;
  uint64_t v22 = v63;
  uint64_t v23 = v64;
  swift_bridgeObjectRelease();
  sub_24A756FB8(v20, v21, v22, v23, 40, 0xE100000000000000, (uint64_t)v45);
  swift_bridgeObjectRelease();
  sub_24A736D6C((uint64_t)v45, (uint64_t)v53, &qword_2697B4040);
  uint64_t result = v54;
  if (!v54) {
    goto LABEL_9;
  }
  uint64_t v24 = v55;
  uint64_t v25 = v56;
  uint64_t v26 = v57;
  uint64_t v27 = v58;
  swift_bridgeObjectRelease();
  sub_24A755974(v24, v25, v26, v27, (uint64_t)v46);
  swift_bridgeObjectRelease();
  uint64_t result = sub_24A736D6C((uint64_t)v46, (uint64_t)v52, &qword_2697B4038);
  if (!v52[1])
  {
LABEL_9:
    id v34 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    long long v19 = 0uLL;
    goto LABEL_10;
  }
  uint64_t v39 = v52[0];
  sub_24A756FB8(v52[2], v52[3], v52[4], v52[5], 41, 0xE100000000000000, (uint64_t)v47);
  swift_bridgeObjectRelease();
  sub_24A736D6C((uint64_t)v47, (uint64_t)v48, &qword_2697B4040);
  if (!v48[3])
  {
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  long long v38 = v49;
  uint64_t v28 = v50;
  uint64_t v29 = v51;
  swift_bridgeObjectRelease();
  sub_24A762448();
  uint64_t v30 = v40;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v12, 1, v13) == 1)
  {
    swift_bridgeObjectRelease();
    sub_24A70FD54((uint64_t)v12, &qword_2697B3830);
    unint64_t v42 = 0;
    unint64_t v43 = 0xE000000000000000;
    sub_24A763338();
    swift_bridgeObjectRelease();
    unint64_t v42 = 0xD000000000000014;
    unint64_t v43 = 0x800000024A7690D0;
    sub_24A762E68();
    swift_bridgeObjectRelease();
    sub_24A762E68();
    unint64_t v31 = v42;
    unint64_t v32 = v43;
    sub_24A709EF8();
    swift_allocError();
    unint64_t *v33 = v31;
    v33[1] = v32;
    return swift_willThrow();
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v41, v12, v13);
  id v35 = objc_msgSend(self, sel_URLValueType);
  uint64_t v36 = v30;
  id v37 = objc_allocWithZone(MEMORY[0x263F51D50]);
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v16, v41, v13);
  id v34 = objc_msgSend(v37, sel_initWithValue_valueType_, sub_24A7635D8(), v35);
  swift_unknownObjectRelease();

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v41, v13);
  long long v19 = v38;
LABEL_10:
  *(void *)a5 = v34;
  *(_OWORD *)(a5 + 8) = v19;
  *(void *)(a5 + 24) = v28;
  *(void *)(a5 + 32) = v29;
  return result;
}

void sub_24A757AE0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  id v87 = a4;
  uint64_t v63 = a5;
  uint64_t v8 = sub_24A704710(&qword_2697B4068);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24A704710(&qword_2697B4070);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24A704710(&qword_2697B4078);
  uint64_t v60 = *(void *)(v15 - 8);
  uint64_t v61 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v62 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2697B2F10 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_24A70D1FC(v8, (uint64_t)qword_2697B9938);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v17, v8);
  sub_24A751824(a1, a2, a3, (uint64_t)v87, (uint64_t)v11, &qword_2697B4088, &qword_2697B4078, &qword_2697B4068, (uint64_t)v14, &qword_2697B4080);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v18 = sub_24A704710(&qword_2697B4080);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v14, 1, v18) == 1)
  {
    sub_24A70FD54((uint64_t)v14, &qword_2697B4070);
LABEL_16:
    id v54 = 0;
    uint64_t v31 = 0;
    goto LABEL_17;
  }
  long long v19 = (uint64_t *)&v14[*(int *)(v18 + 48)];
  uint64_t v20 = *v19;
  uint64_t v21 = v19[1];
  uint64_t v22 = v19[2];
  uint64_t v23 = v19[3];
  uint64_t v24 = v60;
  uint64_t v25 = v61;
  uint64_t v26 = v62;
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v62, v14, v61);
  sub_24A756FB8(v20, v21, v22, v23, 40, 0xE100000000000000, (uint64_t)v68);
  swift_bridgeObjectRelease();
  sub_24A736D6C((uint64_t)v68, (uint64_t)v81, &qword_2697B4040);
  if (!v82)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v25);
    goto LABEL_16;
  }
  uint64_t v27 = v83;
  uint64_t v28 = v84;
  uint64_t v30 = v85;
  uint64_t v29 = v86;
  swift_bridgeObjectRelease();
  sub_24A755974(v27, v28, v30, v29, (uint64_t)v69);
  sub_24A736D6C((uint64_t)v69, (uint64_t)&v75, &qword_2697B4038);
  uint64_t v31 = v76;
  if (!v76)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v62, v25);
    id v54 = 0;
LABEL_17:
    uint64_t v38 = 0;
    long long v56 = 0uLL;
    uint64_t v55 = v63;
    goto LABEL_18;
  }
  uint64_t v32 = v75;
  uint64_t v33 = v78;
  *(void *)&long long v59 = v77;
  uint64_t v35 = v79;
  uint64_t v34 = v80;
  id v58 = self;
  id v36 = objc_msgSend(v58, sel_stringValueType);
  id v37 = objc_allocWithZone(MEMORY[0x263F51D50]);
  v71[0] = v32;
  v71[1] = v31;
  swift_bridgeObjectRetain();
  id v87 = objc_msgSend(v37, sel_initWithValue_valueType_, sub_24A7635D8(), v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  sub_24A756FB8(v59, v33, v35, v34, 41, 0xE100000000000000, (uint64_t)v70);
  swift_bridgeObjectRelease();
  sub_24A736D6C((uint64_t)v70, (uint64_t)v71, &qword_2697B4040);
  if (!v71[3])
  {
    (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v61);

    goto LABEL_16;
  }
  long long v59 = v72;
  uint64_t v31 = v73;
  uint64_t v38 = v74;
  swift_bridgeObjectRelease();
  sub_24A705D7C(0, &qword_2697B40A0);
  id v39 = v87;
  id v40 = objc_msgSend(v87, sel_valueType);
  id v41 = objc_msgSend(v58, sel_stringValueType);
  char v42 = sub_24A763158();

  uint64_t v43 = v61;
  if ((v42 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v61);
    swift_bridgeObjectRelease();

    goto LABEL_16;
  }
  id v44 = objc_msgSend(v39, sel_value);
  sub_24A7631F8();
  swift_unknownObjectRelease();
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v43);
    goto LABEL_16;
  }
  sub_24A7629C8();
  MEMORY[0x24C5CDEE0](v64, v65, v66, v67);
  swift_bridgeObjectRelease();
  id v45 = objc_allocWithZone(MEMORY[0x263F51BB8]);
  uint64_t v46 = (void *)sub_24A762DF8();
  swift_bridgeObjectRelease();
  uint64_t v47 = (void *)sub_24A762DF8();
  swift_bridgeObjectRelease();
  id v48 = objc_msgSend(v45, sel_initWithTypeIdentifier_instanceIdentifier_, v46, v47);

  id v49 = objc_allocWithZone(MEMORY[0x263F51BC0]);
  id v50 = v48;
  id v51 = objc_msgSend(v49, sel_init);
  id v52 = objc_allocWithZone(MEMORY[0x263F51D50]);
  id v53 = v50;
  id v54 = objc_msgSend(v52, sel_initWithValue_valueType_, v53, v51);

  (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v43);
  uint64_t v55 = v63;
  long long v56 = v59;
LABEL_18:
  *(void *)uint64_t v55 = v54;
  *(_OWORD *)(v55 + 8) = v56;
  *(void *)(v55 + 24) = v31;
  *(void *)(v55 + 32) = v38;
}

uint64_t sub_24A75822C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *(void *)&long long v77 = a4;
  uint64_t v89 = a3;
  uint64_t v76 = a5;
  uint64_t v7 = sub_24A704710(&qword_2697B4068);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24A704710(&qword_2697B4070);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v72 = (uint64_t)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v62 - v14;
  uint64_t v16 = sub_24A704710(&qword_2697B4078);
  uint64_t v75 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v73 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v74 = (char *)&v62 - v19;
  if (qword_2697B2F08 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_24A70D1FC(v7, (uint64_t)qword_2697B9920);
  uint64_t v21 = *(void (**)(void))(v8 + 16);
  uint64_t v71 = v20;
  uint64_t v70 = (void (*)(char *, uint64_t, void))v21;
  v21(v10);
  sub_24A751824(a1, a2, v89, v77, (uint64_t)v10, &qword_2697B4088, &qword_2697B4078, &qword_2697B4068, (uint64_t)v15, &qword_2697B4080);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  *(void *)&long long v77 = v7;
  uint64_t v89 = v8 + 8;
  v22(v10, v7);
  uint64_t v23 = sub_24A704710(&qword_2697B4080);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v26 = v24 + 48;
  if (v25((uint64_t)v15, 1, v23) == 1)
  {
    uint64_t v27 = (uint64_t)v15;
  }
  else
  {
    uint64_t v67 = v26;
    uint64_t v68 = v25;
    uint64_t v69 = (void (*)(uint64_t, uint64_t))v22;
    uint64_t v66 = v10;
    uint64_t v28 = (uint64_t *)&v15[*(int *)(v23 + 48)];
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = v75;
    uint64_t v32 = v16;
    uint64_t v34 = v28[2];
    uint64_t v33 = v28[3];
    uint64_t v35 = *(void (**)(void))(v75 + 32);
    id v36 = v74;
    uint64_t v37 = v32;
    uint64_t v65 = v75 + 32;
    uint64_t v64 = v35;
    v35();
    sub_24A756FB8(v29, v30, v34, v33, 46, 0xE100000000000000, (uint64_t)v82);
    swift_bridgeObjectRelease();
    sub_24A736D6C((uint64_t)v82, (uint64_t)v83, &qword_2697B4040);
    if (!v84)
    {
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v36, v37);
      goto LABEL_10;
    }
    uint64_t v63 = v37;
    uint64_t v38 = v85;
    uint64_t v39 = v86;
    uint64_t v41 = v87;
    uint64_t v40 = v88;
    swift_bridgeObjectRelease();
    uint64_t v42 = (uint64_t)v66;
    uint64_t v43 = v77;
    v70(v66, v71, v77);
    uint64_t v44 = v72;
    sub_24A751824(v38, v39, v41, v40, v42, &qword_2697B4088, &qword_2697B4078, &qword_2697B4068, v72, &qword_2697B4080);
    swift_bridgeObjectRelease();
    v69(v42, v43);
    if (v68(v44, 1, v23) != 1)
    {
      uint64_t v51 = v44 + *(int *)(v23 + 48);
      long long v77 = *(_OWORD *)v51;
      uint64_t v47 = *(void *)(v51 + 16);
      uint64_t v48 = *(void *)(v51 + 24);
      uint64_t v52 = v63;
      v64();
      swift_getKeyPath();
      sub_24A7629A8();
      swift_release();
      uint64_t v53 = MEMORY[0x24C5CDEE0](v78, v79, v80, v81);
      uint64_t v55 = v54;
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      long long v56 = v74;
      sub_24A7629A8();
      swift_release();
      MEMORY[0x24C5CDEE0](v78, v79, v80, v81);
      swift_bridgeObjectRelease();
      id v57 = objc_allocWithZone(MEMORY[0x263F51C28]);
      id v58 = (void *)sub_24A762DF8();
      swift_bridgeObjectRelease();
      id v59 = objc_msgSend(v57, sel_initWithEnumerationIdentifier_, v58);

      id v60 = objc_allocWithZone(MEMORY[0x263F51D50]);
      uint64_t v78 = v53;
      uint64_t v79 = v55;
      swift_bridgeObjectRetain();
      id v46 = objc_msgSend(v60, sel_initWithValue_valueType_, sub_24A7635D8(), v59);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      uint64_t v61 = *(void (**)(char *, uint64_t))(v75 + 8);
      v61(v73, v52);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v61)(v56, v52);
      long long v49 = v77;
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v75 + 8))(v74, v63);
    uint64_t v27 = v44;
  }
  uint64_t result = sub_24A70FD54(v27, &qword_2697B4070);
LABEL_10:
  id v46 = 0;
  uint64_t v47 = 0;
  uint64_t v48 = 0;
  long long v49 = 0uLL;
LABEL_11:
  id v50 = v76;
  *uint64_t v76 = v46;
  *(_OWORD *)(v50 + 1) = v49;
  v50[3] = v47;
  v50[4] = v48;
  return result;
}

uint64_t sub_24A758958(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_24A763428();
    swift_bridgeObjectRelease();
  }
  sub_24A705D7C(0, &qword_2697B3038);
  sub_24A72B93C();
  uint64_t result = sub_24A763038();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_24A763428();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = (void *)MEMORY[0x24C5CE400](i, a1);
        sub_24A7546F4(&v9, v6);
      }
    }
    else
    {
      uint64_t v7 = (void **)(a1 + 32);
      do
      {
        uint64_t v8 = *v7++;
        sub_24A7546F4(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A758AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A762318();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  sub_24A755894();
  sub_24A7172F0();
  uint64_t v8 = sub_24A7631E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v9 = (void *)sub_24A74F140(v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v9[2])
  {
    uint64_t v11 = v9[5];
    uint64_t v17 = v9[4];
    uint64_t v18 = v11;
    swift_bridgeObjectRetain();
    sub_24A762308();
    uint64_t v12 = sub_24A7631B8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease();
    if (v9[2] < 2uLL)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    else
    {
      uint64_t v13 = v9[6];
      unint64_t v14 = v9[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v15 = sub_24A74F494(v13, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v15)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24A758D14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A704710(&qword_2697B3020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unsigned char *sub_24A758D7C@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  BOOL v7 = v6 && (result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void *sub_24A758DEC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_24A758E30(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_24A758E3C()
{
  unint64_t result = qword_2697B4058;
  if (!qword_2697B4058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B4058);
  }
  return result;
}

unint64_t sub_24A758E90()
{
  unint64_t result = qword_2697B4060;
  if (!qword_2697B4060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B4060);
  }
  return result;
}

unint64_t sub_24A758EE4()
{
  unint64_t result = qword_2697B40A8;
  if (!qword_2697B40A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B40A8);
  }
  return result;
}

unint64_t sub_24A758F38()
{
  unint64_t result = qword_2697B40D8;
  if (!qword_2697B40D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B40D8);
  }
  return result;
}

unint64_t sub_24A758F8C()
{
  unint64_t result = qword_2697B40E0;
  if (!qword_2697B40E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B40E0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for InteractionMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A7590ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InteractionMode()
{
  return &type metadata for InteractionMode;
}

uint64_t sub_24A7590E4()
{
  return sub_24A759120(&qword_2697B4108, &qword_2697B4110);
}

uint64_t sub_24A759120(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24A704B6C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A759168()
{
  unint64_t result = qword_2697B4118;
  if (!qword_2697B4118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B4118);
  }
  return result;
}

unint64_t sub_24A7591BC()
{
  unint64_t result = qword_2697B4120;
  if (!qword_2697B4120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B4120);
  }
  return result;
}

uint64_t sub_24A759210(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = byte_26FE3A350;
  if (*(void *)&aUnknown_2[8 * byte_26FE3A350] == a1 && *(void *)&aDisplayfdispla_0[8 * byte_26FE3A350 + 32] == a2) {
    goto LABEL_13;
  }
  char v6 = sub_24A7635B8();
  swift_bridgeObjectRelease();
  if (v6) {
    return v3;
  }
  uint64_t v3 = byte_26FE3A351;
  if (*(void *)&aUnknown_2[8 * byte_26FE3A351] == a1 && *(void *)&aDisplayfdispla_0[8 * byte_26FE3A351 + 32] == a2) {
    goto LABEL_13;
  }
  char v8 = sub_24A7635B8();
  swift_bridgeObjectRelease();
  if (v8) {
    return v3;
  }
  uint64_t v3 = byte_26FE3A352;
  if (*(void *)&aUnknown_2[8 * byte_26FE3A352] == a1 && *(void *)&aDisplayfdispla_0[8 * byte_26FE3A352 + 32] == a2) {
    goto LABEL_13;
  }
  char v10 = sub_24A7635B8();
  swift_bridgeObjectRelease();
  if (v10) {
    return v3;
  }
  uint64_t v3 = byte_26FE3A353;
  if (*(void *)&aUnknown_2[8 * byte_26FE3A353] == a1 && *(void *)&aDisplayfdispla_0[8 * byte_26FE3A353 + 32] == a2) {
    goto LABEL_13;
  }
  char v11 = sub_24A7635B8();
  swift_bridgeObjectRelease();
  if (v11) {
    return v3;
  }
  uint64_t v3 = byte_26FE3A354;
  if (*(void *)&aUnknown_2[8 * byte_26FE3A354] == a1 && *(void *)&aDisplayfdispla_0[8 * byte_26FE3A354 + 32] == a2)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return v3;
  }
  char v12 = sub_24A7635B8();
  swift_bridgeObjectRelease();
  if (v12) {
    return v3;
  }
  else {
    return 5;
  }
}

uint64_t sub_24A7593E8()
{
  return 0x4679616C70736964;
}

uint64_t TriggerParameters.upcomingDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v1 = sub_24A762598();
  uint64_t v37 = *(void *)(v1 - 8);
  uint64_t v38 = v1;
  MEMORY[0x270FA5388](v1);
  id v36 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_24A7625A8();
  uint64_t v32 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v34 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_24A762578();
  uint64_t v4 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  char v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_24A762528();
  uint64_t v7 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  id v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_24A7625F8();
  uint64_t v33 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  char v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24A762398();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for TriggerParameters();
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A7599CC((uint64_t)v41, (uint64_t)v18);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v30 = v12;
      uint64_t v31 = v13;
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v18, v12);
      sub_24A7625C8();
      uint64_t v41 = v11;
      uint64_t v29 = v9;
      sub_24A762508();
      (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F07780], v39);
      uint64_t v20 = v32;
      uint64_t v21 = v34;
      (*(void (**)(char *, void, uint64_t))(v32 + 104))(v34, *MEMORY[0x263F07800], v40);
      uint64_t v22 = v36;
      uint64_t v23 = v37;
      uint64_t v24 = v38;
      (*(void (**)(char *, void, uint64_t))(v37 + 104))(v36, *MEMORY[0x263F077E0], v38);
      sub_24A7625D8();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v22, v24);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v40);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v39);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v42);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v41, v35);
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v15, v30);
    }
    else
    {
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v43, 1, 1, v42);
    }
  }
  else
  {
    uint64_t v27 = v42;
    uint64_t v26 = v43;
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v43, v18, v42);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v26, 0, 1, v27);
  }
}

uint64_t type metadata accessor for TriggerParameters()
{
  uint64_t result = qword_2697B4198;
  if (!qword_2697B4198) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24A7599CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TriggerParameters();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t TriggerParameters.isUpcoming.getter()
{
  uint64_t v0 = sub_24A704710((uint64_t *)&unk_2697B3630);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24A762528();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  id v9 = (char *)&v13 - v8;
  TriggerParameters.upcomingDate.getter((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_24A70FD54((uint64_t)v2, (uint64_t *)&unk_2697B3630);
    char v10 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v2, v3);
    sub_24A762508();
    char v10 = sub_24A7624B8();
    char v11 = *(void (**)(char *, uint64_t))(v4 + 8);
    v11(v7, v3);
    v11(v9, v3);
  }
  return v10 & 1;
}

uint64_t TriggerParameters.shouldDeleteAfterRun.getter()
{
  uint64_t v1 = type metadata accessor for TriggerParameters();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A7599CC(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = sub_24A762398();
      (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v3, v5);
      return 0;
    }
    else
    {
      uint64_t v6 = v3[41];
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v7 = sub_24A762528();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v3, v7);
    return 1;
  }
  return v6;
}

uint64_t TriggerParameters.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v3 = sub_24A704710(&qword_2697B4128);
  uint64_t v61 = *(void *)(v3 - 8);
  uint64_t v62 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v70 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24A704710(&qword_2697B4130);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v65 = v5;
  uint64_t v66 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v69 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24A704710(&qword_2697B4138);
  uint64_t v63 = *(void *)(v8 - 8);
  uint64_t v64 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v68 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_24A704710(&qword_2697B4140);
  uint64_t v67 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  char v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TriggerParameters();
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v56 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v56 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v56 - v22;
  uint64_t v24 = a1[3];
  uint64_t v72 = a1;
  sub_24A705BC4(a1, v24);
  sub_24A75CB8C();
  uint64_t v25 = v73;
  sub_24A7636C8();
  if (v25) {
    goto LABEL_10;
  }
  id v58 = v18;
  id v59 = v21;
  uint64_t v27 = v68;
  uint64_t v26 = v69;
  long long v56 = (uint64_t *)v15;
  id v57 = v23;
  uint64_t v28 = v70;
  uint64_t v29 = v71;
  uint64_t v73 = v12;
  uint64_t v30 = sub_24A763508();
  if (*(void *)(v30 + 16) != 1)
  {
    uint64_t v37 = sub_24A763388();
    swift_allocError();
    uint64_t v39 = v38;
    sub_24A704710(&qword_2697B38D8);
    uint64_t *v39 = v73;
    sub_24A763488();
    sub_24A763378();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v37 - 8) + 104))(v39, *MEMORY[0x263F8DCB0], v37);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v11, v29);
LABEL_10:
    uint64_t v35 = (uint64_t)v72;
    return sub_24A704754(v35);
  }
  if (*(unsigned char *)(v30 + 32))
  {
    if (*(unsigned char *)(v30 + 32) == 1)
    {
      char v75 = 1;
      sub_24A75CC34();
      uint64_t v31 = v26;
      sub_24A763478();
      sub_24A762398();
      sub_24A75CD38(&qword_2697B4160, MEMORY[0x263F063B0]);
      uint64_t v32 = (uint64_t)v58;
      uint64_t v33 = v31;
      uint64_t v34 = v65;
      sub_24A7634F8();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v33, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v11, v29);
      uint64_t v35 = (uint64_t)v72;
      swift_storeEnumTagMultiPayload();
      uint64_t v36 = v32;
    }
    else
    {
      char v82 = 2;
      sub_24A75CBE0();
      sub_24A763478();
      uint64_t v69 = v11;
      char v81 = 0;
      uint64_t v43 = v62;
      uint64_t v44 = sub_24A7634C8();
      uint64_t v45 = v67;
      uint64_t v46 = v44;
      uint64_t v48 = v47;
      char v80 = 5;
      char v49 = sub_24A7634A8();
      char v79 = 1;
      sub_24A7634E8();
      uint64_t v51 = v50;
      char v78 = 2;
      sub_24A7634E8();
      uint64_t v53 = v52;
      char v77 = 3;
      sub_24A7634E8();
      uint64_t v68 = v54;
      char v76 = 4;
      char v55 = sub_24A7634D8();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v28, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v69, v71);
      uint64_t v36 = (uint64_t)v56;
      *long long v56 = v46;
      *(void *)(v36 + 8) = v48;
      *(void *)(v36 + 16) = v51;
      *(void *)(v36 + 24) = v53;
      *(void *)(v36 + 32) = v68;
      *(unsigned char *)(v36 + 40) = v55 & 1;
      *(unsigned char *)(v36 + 41) = (v49 == 2) | v49 & 1;
      swift_storeEnumTagMultiPayload();
      uint64_t v35 = (uint64_t)v72;
    }
  }
  else
  {
    char v74 = 0;
    sub_24A75CC88();
    sub_24A763478();
    sub_24A762528();
    sub_24A75CD38(&qword_2697B3918, MEMORY[0x263F07490]);
    uint64_t v36 = (uint64_t)v59;
    uint64_t v40 = v64;
    sub_24A7634F8();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v27, v40);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v11, v29);
    uint64_t v35 = (uint64_t)v72;
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v41 = (uint64_t)v57;
  sub_24A7105BC(v36, (uint64_t)v57);
  sub_24A7105BC(v41, v60);
  return sub_24A704754(v35);
}

uint64_t TriggerParameters.imageSystemName.getter()
{
  uint64_t v1 = type metadata accessor for TriggerParameters();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A7599CC(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = sub_24A762398();
      (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v3, v5);
      return 0xD000000000000016;
    }
    else
    {
      int v8 = v3[40];
      swift_bridgeObjectRelease();
      if (v8) {
        return 0xD000000000000015;
      }
      else {
        return 0xD000000000000013;
      }
    }
  }
  else
  {
    uint64_t v7 = sub_24A762528();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v3, v7);
    return 0x6B636F6C63;
  }
}

uint64_t TriggerParameters.subtitle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v37 = a1;
  uint64_t v3 = sub_24A7625F8();
  uint64_t v34 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24A704710((uint64_t *)&unk_2697B3630);
  MEMORY[0x270FA5388](v6 - 8);
  int v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24A762398();
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24A762528();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v33 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v32 - v16;
  uint64_t v18 = type metadata accessor for TriggerParameters();
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A7599CC(v2, (uint64_t)v20);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v22 = v35;
      uint64_t v23 = v36;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v11, v20, v36);
      sub_24A7625C8();
      sub_24A7625B8();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v5, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1)
      {
        sub_24A70FD54((uint64_t)v8, (uint64_t *)&unk_2697B3630);
        unint64_t v38 = 0;
        unint64_t v39 = 0xE000000000000000;
        sub_24A763338();
        swift_bridgeObjectRelease();
        unint64_t v38 = 0xD000000000000014;
        unint64_t v39 = 0x800000024A769200;
        sub_24A762348();
        sub_24A762E68();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v23);
      }
      else
      {
        uint64_t v27 = v33;
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v33, v8, v12);
        id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
        objc_msgSend(v28, sel_setDateStyle_, 0);
        objc_msgSend(v28, sel_setTimeStyle_, 1);
        unint64_t v38 = 0x746120796C696144;
        unint64_t v39 = 0xE900000000000020;
        uint64_t v29 = (void *)sub_24A7624A8();
        id v30 = objc_msgSend(v28, sel_stringFromDate_, v29);

        sub_24A762E08();
        sub_24A762E68();

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v27, v12);
        (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v36);
      }
    }
    else
    {
      unint64_t v38 = 0;
      unint64_t v39 = 0xE000000000000000;
      sub_24A762E68();
      swift_bridgeObjectRelease();
      sub_24A762E68();
      swift_bridgeObjectRelease();
      sub_24A762E68();
      sub_24A762E68();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v20, v12);
    id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
    objc_msgSend(v24, sel_setDateStyle_, 2);
    objc_msgSend(v24, sel_setTimeStyle_, 1);
    unint64_t v38 = 2125391;
    unint64_t v39 = 0xE300000000000000;
    uint64_t v25 = (void *)sub_24A7624A8();
    id v26 = objc_msgSend(v24, sel_stringFromDate_, v25);

    sub_24A762E08();
    sub_24A762E68();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
  }
  return sub_24A762408();
}

uint64_t TriggerParameters.runSuccessDialog.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v38 = a1;
  uint64_t v3 = sub_24A7625F8();
  uint64_t v34 = *(char **)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24A704710((uint64_t *)&unk_2697B3630);
  MEMORY[0x270FA5388](v6 - 8);
  int v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24A762398();
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24A762528();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v37 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v33 - v16;
  uint64_t v18 = type metadata accessor for TriggerParameters();
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A7599CC(v2, (uint64_t)v20);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v23 = v35;
      uint64_t v22 = v36;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v11, v20, v36);
      sub_24A7625C8();
      sub_24A7625B8();
      (*((void (**)(char *, uint64_t))v34 + 1))(v5, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1)
      {
        sub_24A70FD54((uint64_t)v8, (uint64_t *)&unk_2697B3630);
        unint64_t v39 = 0;
        unint64_t v40 = 0xE000000000000000;
        sub_24A763338();
        swift_bridgeObjectRelease();
        unint64_t v39 = 0xD000000000000019;
        unint64_t v40 = 0x800000024A769240;
        sub_24A762348();
        sub_24A762E68();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v22);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v37, v8, v12);
        uint64_t v27 = v23;
        id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
        objc_msgSend(v28, sel_setDateStyle_, 0);
        objc_msgSend(v28, sel_setTimeStyle_, 1);
        unint64_t v39 = 0;
        unint64_t v40 = 0xE000000000000000;
        sub_24A763338();
        swift_bridgeObjectRelease();
        unint64_t v39 = 0xD000000000000019;
        unint64_t v40 = 0x800000024A769260;
        uint64_t v29 = sub_24A7624A8();
        uint64_t v34 = v11;
        id v30 = (void *)v29;
        id v31 = objc_msgSend(v28, sel_stringFromDate_, v29);

        sub_24A762E08();
        sub_24A762E68();

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v37, v12);
        (*(void (**)(char *, uint64_t))(v27 + 8))(v34, v22);
      }
    }
    else
    {
      unint64_t v39 = 0;
      unint64_t v40 = 0xE000000000000000;
      sub_24A763338();
      swift_bridgeObjectRelease();
      unint64_t v39 = 0xD000000000000019;
      unint64_t v40 = 0x800000024A769220;
      sub_24A762E68();
      swift_bridgeObjectRelease();
      sub_24A762E68();
      sub_24A762E68();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v20, v12);
    id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
    objc_msgSend(v24, sel_setDateStyle_, 0);
    objc_msgSend(v24, sel_setTimeStyle_, 1);
    unint64_t v39 = 0;
    unint64_t v40 = 0xE000000000000000;
    sub_24A763338();
    swift_bridgeObjectRelease();
    unint64_t v39 = 0xD000000000000013;
    unint64_t v40 = 0x800000024A769280;
    uint64_t v25 = (void *)sub_24A7624A8();
    id v26 = objc_msgSend(v24, sel_stringFromDate_, v25);

    sub_24A762E08();
    sub_24A762E68();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
  }
  return sub_24A762408();
}

uint64_t TriggerParameters.coordinates.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TriggerParameters();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A7599CC(v1, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v5 = *((void *)v4 + 2);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24A75CCDC((uint64_t)v4);
    return 0;
  }
  return v5;
}

uint64_t TriggerParameters.createDialog.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v38 = a1;
  uint64_t v3 = sub_24A7625F8();
  uint64_t v34 = *(char **)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24A704710((uint64_t *)&unk_2697B3630);
  MEMORY[0x270FA5388](v6 - 8);
  int v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24A762398();
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24A762528();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v37 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v33 - v16;
  uint64_t v18 = type metadata accessor for TriggerParameters();
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A7599CC(v2, (uint64_t)v20);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v23 = v35;
      uint64_t v22 = v36;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v11, v20, v36);
      sub_24A7625C8();
      sub_24A7625B8();
      (*((void (**)(char *, uint64_t))v34 + 1))(v5, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1)
      {
        sub_24A70FD54((uint64_t)v8, (uint64_t *)&unk_2697B3630);
        unint64_t v39 = 0;
        unint64_t v40 = 0xE000000000000000;
        sub_24A763338();
        swift_bridgeObjectRelease();
        unint64_t v39 = 0xD00000000000001ELL;
        unint64_t v40 = 0x800000024A7692C0;
        sub_24A762348();
        sub_24A762E68();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v22);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v37, v8, v12);
        uint64_t v27 = v23;
        id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
        objc_msgSend(v28, sel_setDateStyle_, 0);
        objc_msgSend(v28, sel_setTimeStyle_, 1);
        unint64_t v39 = 0;
        unint64_t v40 = 0xE000000000000000;
        sub_24A763338();
        swift_bridgeObjectRelease();
        unint64_t v39 = 0xD00000000000001ELL;
        unint64_t v40 = 0x800000024A7692E0;
        uint64_t v29 = sub_24A7624A8();
        uint64_t v34 = v11;
        id v30 = (void *)v29;
        id v31 = objc_msgSend(v28, sel_stringFromDate_, v29);

        sub_24A762E08();
        sub_24A762E68();

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v37, v12);
        (*(void (**)(char *, uint64_t))(v27 + 8))(v34, v22);
      }
    }
    else
    {
      unint64_t v39 = 0;
      unint64_t v40 = 0xE000000000000000;
      sub_24A763338();
      swift_bridgeObjectRelease();
      unint64_t v39 = 0xD000000000000015;
      unint64_t v40 = 0x800000024A7692A0;
      sub_24A762E68();
      swift_bridgeObjectRelease();
      sub_24A762E68();
      sub_24A762E68();
      swift_bridgeObjectRelease();
      sub_24A762E68();
      sub_24A762E68();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v20, v12);
    id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
    objc_msgSend(v24, sel_setDateStyle_, 2);
    objc_msgSend(v24, sel_setTimeStyle_, 1);
    unint64_t v39 = 0;
    unint64_t v40 = 0xE000000000000000;
    sub_24A763338();
    swift_bridgeObjectRelease();
    unint64_t v39 = 0xD000000000000018;
    unint64_t v40 = 0x800000024A769300;
    uint64_t v25 = (void *)sub_24A7624A8();
    id v26 = objc_msgSend(v24, sel_stringFromDate_, v25);

    sub_24A762E08();
    sub_24A762E68();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
  }
  return sub_24A762408();
}

uint64_t sub_24A75BC5C(char a1)
{
  return *(void *)&aDate_0[8 * a1];
}

uint64_t sub_24A75BC7C(char a1)
{
  return *(void *)&aName_3[8 * a1];
}

uint64_t sub_24A75BC9C()
{
  return sub_24A75BC5C(*v0);
}

uint64_t sub_24A75BCA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24A75DCFC(a1, a2);
  *a3 = result;
  return result;
}

void sub_24A75BCCC(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_24A75BCD8(uint64_t a1)
{
  unint64_t v2 = sub_24A75CB8C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A75BD14(uint64_t a1)
{
  unint64_t v2 = sub_24A75CB8C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24A75BD5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24A75DE2C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24A75BD88(uint64_t a1)
{
  unint64_t v2 = sub_24A75CC34();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A75BDC4(uint64_t a1)
{
  unint64_t v2 = sub_24A75CC34();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24A75BE04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24A75DED8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24A75BE30(uint64_t a1)
{
  unint64_t v2 = sub_24A75CC88();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A75BE6C(uint64_t a1)
{
  unint64_t v2 = sub_24A75CC88();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24A75BEA8()
{
  return sub_24A75BC7C(*v0);
}

uint64_t sub_24A75BEB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24A75DF60(a1, a2);
  *a3 = result;
  return result;
}

void sub_24A75BED8(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_24A75BEE4(uint64_t a1)
{
  unint64_t v2 = sub_24A75CBE0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A75BF20(uint64_t a1)
{
  unint64_t v2 = sub_24A75CBE0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TriggerParameters.encode(to:)(void *a1)
{
  uint64_t v42 = sub_24A704710(&qword_2697B4170);
  uint64_t v33 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_24A704710(&qword_2697B4178);
  uint64_t v43 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v37 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24A762398();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v36 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24A704710(&qword_2697B4180);
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  MEMORY[0x270FA5388](v6);
  int v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24A762528();
  uint64_t v44 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TriggerParameters();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_24A704710(&qword_2697B4188);
  uint64_t v45 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A705BC4(a1, a1[3]);
  sub_24A75CB8C();
  uint64_t v47 = v16;
  sub_24A7636D8();
  sub_24A7599CC(v49, (uint64_t)v14);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v25 = v34;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v11, v14, v9);
    char v50 = 0;
    sub_24A75CC88();
    uint64_t v23 = v47;
    uint64_t v22 = v48;
    sub_24A763518();
    sub_24A75CD38(&qword_2697B38F8, MEMORY[0x263F07490]);
    uint64_t v26 = v35;
    sub_24A763578();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v26);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v23, v22);
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v19 = v38;
    uint64_t v18 = v39;
    uint64_t v20 = v36;
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v36, v14, v39);
    char v51 = 1;
    sub_24A75CC34();
    uint64_t v21 = v37;
    uint64_t v23 = v47;
    uint64_t v22 = v48;
    sub_24A763518();
    sub_24A75CD38(&qword_2697B4190, MEMORY[0x263F063B0]);
    uint64_t v24 = v40;
    sub_24A763578();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v21, v24);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v23, v22);
  }
  char v58 = 2;
  sub_24A75CBE0();
  id v28 = v41;
  id v30 = v47;
  uint64_t v29 = v48;
  sub_24A763518();
  char v57 = 0;
  uint64_t v31 = v42;
  uint64_t v32 = v46;
  sub_24A763548();
  swift_bridgeObjectRelease();
  if (!v32)
  {
    char v56 = 1;
    sub_24A763568();
    char v55 = 2;
    sub_24A763568();
    char v54 = 3;
    sub_24A763568();
    char v53 = 4;
    sub_24A763558();
    char v52 = 5;
    sub_24A763558();
  }
  (*(void (**)(char *, uint64_t))(v33 + 8))(v28, v31);
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v30, v29);
}

uint64_t sub_24A75C6B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TriggerParameters.init(from:)(a1, a2);
}

uint64_t sub_24A75C6D0(void *a1)
{
  return TriggerParameters.encode(to:)(a1);
}

uint64_t _s23ConditionalEngineShared17TriggerParametersO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A762398();
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v46 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24A762528();
  uint64_t v47 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TriggerParameters();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v46 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v46 - v16;
  uint64_t v18 = sub_24A704710(&qword_2697B4208);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t)&v21[*(int *)(v19 + 56)];
  sub_24A7599CC(a1, (uint64_t)v21);
  sub_24A7599CC(a2, v22);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v29 = v47;
    sub_24A7599CC((uint64_t)v21, (uint64_t)v17);
    if (!swift_getEnumCaseMultiPayload())
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v8, v22, v6);
      char v27 = sub_24A7624E8();
      uint64_t v44 = *(void (**)(char *, uint64_t))(v29 + 8);
      v44(v8, v6);
      v44(v17, v6);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v6);
    goto LABEL_17;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_24A7599CC((uint64_t)v21, (uint64_t)v12);
    uint64_t v31 = *(void *)v12;
    uint64_t v30 = *((void *)v12 + 1);
    double v33 = *((double *)v12 + 2);
    double v32 = *((double *)v12 + 3);
    double v34 = *((double *)v12 + 4);
    int v35 = v12[40];
    char v36 = v12[41];
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    double v38 = *(double *)(v22 + 16);
    double v37 = *(double *)(v22 + 24);
    double v39 = *(double *)(v22 + 32);
    int v40 = *(unsigned __int8 *)(v22 + 40);
    char v41 = *(unsigned char *)(v22 + 41);
    if (v31 == *(void *)v22 && v30 == *(void *)(v22 + 8))
    {
      swift_bridgeObjectRelease_n();
      if (v33 != v38)
      {
LABEL_24:
        sub_24A75CCDC((uint64_t)v21);
        goto LABEL_25;
      }
    }
    else
    {
      char v43 = sub_24A7635B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v43 & 1) == 0 || v33 != v38) {
        goto LABEL_24;
      }
    }
    if (v32 == v37 && v34 == v39 && v35 == v40)
    {
      sub_24A75CCDC((uint64_t)v21);
      char v27 = v36 ^ v41 ^ 1;
      return v27 & 1;
    }
    goto LABEL_24;
  }
  sub_24A7599CC((uint64_t)v21, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v15, v49);
LABEL_17:
    sub_24A70FD54((uint64_t)v21, &qword_2697B4208);
LABEL_25:
    char v27 = 0;
    return v27 & 1;
  }
  uint64_t v25 = v48;
  uint64_t v24 = v49;
  uint64_t v26 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v46, v22, v49);
  char v27 = MEMORY[0x24C5CD400](v15, v26);
  id v28 = *(void (**)(char *, uint64_t))(v25 + 8);
  v28(v26, v24);
  v28(v15, v24);
LABEL_19:
  sub_24A75CCDC((uint64_t)v21);
  return v27 & 1;
}

unint64_t sub_24A75CB8C()
{
  unint64_t result = qword_2697B4148;
  if (!qword_2697B4148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B4148);
  }
  return result;
}

unint64_t sub_24A75CBE0()
{
  unint64_t result = qword_2697B4150;
  if (!qword_2697B4150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B4150);
  }
  return result;
}

unint64_t sub_24A75CC34()
{
  unint64_t result = qword_2697B4158;
  if (!qword_2697B4158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B4158);
  }
  return result;
}

unint64_t sub_24A75CC88()
{
  unint64_t result = qword_2697B4168;
  if (!qword_2697B4168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B4168);
  }
  return result;
}

uint64_t sub_24A75CCDC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TriggerParameters();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24A75CD38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TriggerParameters(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)a1 = *a2;
    a1 = v8 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v9;
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(void *)(a1 + 32) = a2[4];
      *(_WORD *)(a1 + 40) = *((_WORD *)a2 + 20);
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload == 1) {
        uint64_t v7 = sub_24A762398();
      }
      else {
        uint64_t v7 = sub_24A762528();
      }
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TriggerParameters(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (result == 1)
    {
      uint64_t v3 = sub_24A762398();
    }
    else
    {
      if (result) {
        return result;
      }
      uint64_t v3 = sub_24A762528();
    }
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
}

uint64_t initializeWithCopy for TriggerParameters(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v6 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload == 1) {
      uint64_t v5 = sub_24A762398();
    }
    else {
      uint64_t v5 = sub_24A762528();
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for TriggerParameters(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_24A75CCDC(a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload == 1) {
        uint64_t v5 = sub_24A762398();
      }
      else {
        uint64_t v5 = sub_24A762528();
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for TriggerParameters(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = sub_24A762398();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_24A762528();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for TriggerParameters(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24A75CCDC((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = sub_24A762398();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_24A762528();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TriggerParameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for TriggerParameters(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_24A75D47C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24A75D48C()
{
  uint64_t result = sub_24A762528();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24A762398();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TriggerParameters.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A75D624);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TriggerParameters.CodingKeys()
{
  return &type metadata for TriggerParameters.CodingKeys;
}

ValueMetadata *type metadata accessor for TriggerParameters.DateCodingKeys()
{
  return &type metadata for TriggerParameters.DateCodingKeys;
}

unsigned char *_s23ConditionalEngineShared17TriggerParametersO14DateCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24A75D710);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TriggerParameters.DailyCodingKeys()
{
  return &type metadata for TriggerParameters.DailyCodingKeys;
}

uint64_t getEnumTagSinglePayload for TriggerParameters.LocationCodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TriggerParameters.LocationCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A75D8A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TriggerParameters.LocationCodingKeys()
{
  return &type metadata for TriggerParameters.LocationCodingKeys;
}

unint64_t sub_24A75D8E0()
{
  unint64_t result = qword_2697B41A8;
  if (!qword_2697B41A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B41A8);
  }
  return result;
}

unint64_t sub_24A75D938()
{
  unint64_t result = qword_2697B41B0;
  if (!qword_2697B41B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B41B0);
  }
  return result;
}

unint64_t sub_24A75D990()
{
  unint64_t result = qword_2697B41B8;
  if (!qword_2697B41B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B41B8);
  }
  return result;
}

unint64_t sub_24A75D9E8()
{
  unint64_t result = qword_2697B41C0;
  if (!qword_2697B41C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B41C0);
  }
  return result;
}

unint64_t sub_24A75DA40()
{
  unint64_t result = qword_2697B41C8;
  if (!qword_2697B41C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B41C8);
  }
  return result;
}

unint64_t sub_24A75DA98()
{
  unint64_t result = qword_2697B41D0;
  if (!qword_2697B41D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B41D0);
  }
  return result;
}

unint64_t sub_24A75DAF0()
{
  unint64_t result = qword_2697B41D8;
  if (!qword_2697B41D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B41D8);
  }
  return result;
}

unint64_t sub_24A75DB48()
{
  unint64_t result = qword_2697B41E0;
  if (!qword_2697B41E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B41E0);
  }
  return result;
}

unint64_t sub_24A75DBA0()
{
  unint64_t result = qword_2697B41E8;
  if (!qword_2697B41E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B41E8);
  }
  return result;
}

unint64_t sub_24A75DBF8()
{
  unint64_t result = qword_2697B41F0;
  if (!qword_2697B41F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B41F0);
  }
  return result;
}

unint64_t sub_24A75DC50()
{
  unint64_t result = qword_2697B41F8;
  if (!qword_2697B41F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B41F8);
  }
  return result;
}

unint64_t sub_24A75DCA8()
{
  unint64_t result = qword_2697B4200;
  if (!qword_2697B4200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B4200);
  }
  return result;
}

uint64_t sub_24A75DCFC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v3 || (sub_24A7635B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x796C696164 && a2 == 0xE500000000000000 || (sub_24A7635B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24A7635B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24A75DE2C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E656E6F706D6F63 && a2 == 0xEA00000000007374)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24A7635B8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24A75DEBC()
{
  return 0x6E656E6F706D6F63;
}

uint64_t sub_24A75DED8(uint64_t a1, uint64_t a2)
{
  if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24A7635B8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24A75DF50()
{
  return 1702125924;
}

uint64_t sub_24A75DF60(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v3 || (sub_24A7635B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000 || (sub_24A7635B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_24A7635B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x737569646172 && a2 == 0xE600000000000000 || (sub_24A7635B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x657265746E457369 && a2 == 0xE900000000000064 || (sub_24A7635B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D6954656E4F7369 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_24A7635B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t static NSUserDefaults.runner.getter()
{
  if (qword_2697B2F18 != -1) {
    swift_once();
  }
  swift_beginAccess();
  v2[0] = xmmword_2697B4210;
  v2[1] = *(_OWORD *)&qword_2697B4220;
  uint64_t v3 = qword_2697B4230;
  sub_24A736590((uint64_t)v2);
  uint64_t v0 = sub_24A734C34();
  sub_24A7365D4((uint64_t)v2);
  return v0;
}

void static NSUserDefaults.runner.setter()
{
  if (qword_2697B2F18 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = (void *)qword_2697B4230;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_24A7635D8();
  int v2 = (void *)sub_24A762DF8();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
}

void (*static NSUserDefaults.runner.modify(void *a1))(uint64_t a1, char a2)
{
  int v2 = malloc(0x60uLL);
  *a1 = v2;
  if (qword_2697B2F18 != -1) {
    swift_once();
  }
  swift_beginAccess();
  long long v3 = *(_OWORD *)&qword_2697B4220;
  *int v2 = xmmword_2697B4210;
  v2[1] = v3;
  *((void *)v2 + 4) = qword_2697B4230;
  *((void *)v2 + 8) = sub_24A734C34();
  *((void *)v2 + 9) = v4;
  return sub_24A75E3F8;
}

void sub_24A75E3F8(uint64_t a1, char a2)
{
  long long v3 = *(void **)a1;
  *(void *)(*(void *)a1 + 80) = *(void *)(*(void *)a1 + 64);
  uint64_t v4 = (void *)qword_2697B4230;
  v3[11] = v3[9];
  swift_bridgeObjectRetain();
  if (a2)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_24A7635D8();
    char v6 = (void *)sub_24A762DF8();
    objc_msgSend(v4, sel_setObject_forKey_, v5, v6);

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  else
  {
    uint64_t v7 = sub_24A7635D8();
    int v8 = (void *)sub_24A762DF8();
    objc_msgSend(v4, sel_setObject_forKey_, v7, v8);
    swift_endAccess();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }

  free(v3);
}

void sub_24A75E53C()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v1 = (void *)sub_24A762DF8();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    *(void *)&xmmword_2697B4210 = 0x647261646E617473;
    *((void *)&xmmword_2697B4210 + 1) = 0xE800000000000000;
    strcpy((char *)&qword_2697B4220, "config.runner");
    unk_2697B422E = -4864;
    qword_2697B4230 = (uint64_t)v2;
  }
  else
  {
    sub_24A763418();
    __break(1u);
  }
}

id static NSUserDefaults.$runner.getter@<X0>(void *a1@<X8>)
{
  if (qword_2697B2F18 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = *((void *)&xmmword_2697B4210 + 1);
  uint64_t v3 = qword_2697B4220;
  uint64_t v4 = unk_2697B4228;
  id v7 = (id)qword_2697B4230;
  uint64_t v5 = qword_2697B4230;
  *a1 = xmmword_2697B4210;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return v7;
}

uint64_t static NSUserDefaults.createAppIntentConfirmation.getter()
{
  if (qword_2697B2F20 != -1) {
    swift_once();
  }
  swift_beginAccess();
  char v0 = byte_2697B4238;
  uint64_t v1 = qword_2697B4240;
  uint64_t v2 = unk_2697B4248;
  uint64_t v3 = (void *)qword_2697B4250;
  swift_bridgeObjectRetain();
  id v4 = v3;
  char v5 = sub_24A734D14(v0, v1, v2, v4);

  swift_bridgeObjectRelease();
  return v5 & 1;
}

void static NSUserDefaults.createAppIntentConfirmation.setter()
{
  if (qword_2697B2F20 != -1) {
    swift_once();
  }
  swift_beginAccess();
  char v0 = (void *)qword_2697B4250;
  uint64_t v1 = sub_24A7635D8();
  uint64_t v2 = (void *)sub_24A762DF8();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);
  swift_endAccess();
  swift_unknownObjectRelease();
}

uint64_t (*static NSUserDefaults.createAppIntentConfirmation.modify(uint64_t a1))(uint64_t a1, char a2)
{
  if (qword_2697B2F20 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *(unsigned char *)(a1 + 24) = sub_24A734D14(byte_2697B4238, qword_2697B4240, unk_2697B4248, (void *)qword_2697B4250) & 1;
  return sub_24A75E938;
}

uint64_t sub_24A75E938(uint64_t a1, char a2)
{
  uint64_t v3 = (void *)qword_2697B4250;
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a1 + 24);
  uint64_t v4 = sub_24A7635D8();
  char v5 = (void *)sub_24A762DF8();
  objc_msgSend(v3, sel_setObject_forKey_, v4, v5);
  if (a2)
  {

    swift_unknownObjectRelease();
    return swift_endAccess();
  }
  else
  {
    swift_endAccess();

    return swift_unknownObjectRelease();
  }
}

void sub_24A75EA0C()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v1 = (void *)sub_24A762DF8();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    byte_2697B4238 = 0;
    qword_2697B4240 = 0xD00000000000001BLL;
    unk_2697B4248 = 0x800000024A769430;
    qword_2697B4250 = (uint64_t)v2;
  }
  else
  {
    sub_24A763418();
    __break(1u);
  }
}

id static NSUserDefaults.$createAppIntentConfirmation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2697B2F20 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v3 = qword_2697B4240;
  uint64_t v2 = unk_2697B4248;
  id v6 = (id)qword_2697B4250;
  uint64_t v4 = qword_2697B4250;
  *(unsigned char *)a1 = byte_2697B4238;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRetain();

  return v6;
}

double static NSUserDefaults.locationTriggerRadiusMeters.getter()
{
  if (qword_2697B2F28 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = qword_2697B4260;
  uint64_t v1 = qword_2697B4268;
  uint64_t v2 = (void *)qword_2697B4270;
  swift_bridgeObjectRetain();
  id v3 = v2;
  sub_24A734DF0(v0, v1, v3);
  double v5 = v4;

  swift_bridgeObjectRelease();
  return v5;
}

void static NSUserDefaults.locationTriggerRadiusMeters.setter(double a1)
{
  if (qword_2697B2F28 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)qword_2697B4270;
  uint64_t v3 = sub_24A7635D8();
  double v4 = (void *)sub_24A762DF8();
  objc_msgSend(v2, sel_setObject_forKey_, v3, v4, *(void *)&a1);
  swift_endAccess();
  swift_unknownObjectRelease();
}

void (*static NSUserDefaults.locationTriggerRadiusMeters.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  if (qword_2697B2F28 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_24A734DF0(qword_2697B4260, qword_2697B4268, (void *)qword_2697B4270);
  v2[3] = v3;
  return sub_24A75EDF4;
}

void sub_24A75EDF4(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  double v4 = (void *)qword_2697B4270;
  *(void *)(*(void *)a1 + 32) = *(void *)(*(void *)a1 + 24);
  uint64_t v5 = sub_24A7635D8();
  id v6 = (void *)sub_24A762DF8();
  objc_msgSend(v4, sel_setObject_forKey_, v5, v6);
  if (a2)
  {

    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();

    swift_unknownObjectRelease();
  }

  free(v3);
}

void sub_24A75EEBC()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v1 = (void *)sub_24A762DF8();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    qword_2697B4258 = 0x4072C00000000000;
    qword_2697B4260 = 0xD00000000000001BLL;
    qword_2697B4268 = 0x800000024A769410;
    qword_2697B4270 = (uint64_t)v2;
  }
  else
  {
    sub_24A763418();
    __break(1u);
  }
}

id static NSUserDefaults.$locationTriggerRadiusMeters.getter@<X0>(void *a1@<X8>)
{
  if (qword_2697B2F28 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v3 = qword_2697B4260;
  uint64_t v2 = qword_2697B4268;
  id v6 = (id)qword_2697B4270;
  uint64_t v4 = qword_2697B4270;
  *a1 = qword_2697B4258;
  a1[1] = v3;
  a1[2] = v2;
  a1[3] = v4;
  swift_bridgeObjectRetain();

  return v6;
}

void sub_24A75F058()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v1 = (void *)sub_24A762DF8();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    xmmword_2697B4278 = xmmword_24A7670F0;
    qword_2697B4288 = 0xD000000000000012;
    unk_2697B4290 = 0x800000024A769450;
    qword_2697B4298 = (uint64_t)v2;
  }
  else
  {
    sub_24A763418();
    __break(1u);
  }
}

uint64_t static NSUserDefaults.openAIKey.getter()
{
  if (qword_2697B2F38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  v2[0] = xmmword_2697B42A0;
  v2[1] = *(_OWORD *)&qword_2697B42B0;
  uint64_t v3 = qword_2697B42C0;
  sub_24A736590((uint64_t)v2);
  uint64_t v0 = sub_24A734C34();
  sub_24A7365D4((uint64_t)v2);
  return v0;
}

void static NSUserDefaults.openAIKey.setter()
{
  if (qword_2697B2F38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = (void *)qword_2697B42C0;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_24A7635D8();
  id v2 = (void *)sub_24A762DF8();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
}

void (*static NSUserDefaults.openAIKey.modify(void *a1))(uint64_t a1, char a2)
{
  id v2 = malloc(0x60uLL);
  *a1 = v2;
  if (qword_2697B2F38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  long long v3 = *(_OWORD *)&qword_2697B42B0;
  *id v2 = xmmword_2697B42A0;
  v2[1] = v3;
  *((void *)v2 + 4) = qword_2697B42C0;
  *((void *)v2 + 8) = sub_24A734C34();
  *((void *)v2 + 9) = v4;
  return sub_24A75F394;
}

void sub_24A75F394(uint64_t a1, char a2)
{
  long long v3 = *(void **)a1;
  *(void *)(*(void *)a1 + 80) = *(void *)(*(void *)a1 + 64);
  uint64_t v4 = (void *)qword_2697B42C0;
  v3[11] = v3[9];
  swift_bridgeObjectRetain();
  if (a2)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_24A7635D8();
    id v6 = (void *)sub_24A762DF8();
    objc_msgSend(v4, sel_setObject_forKey_, v5, v6);

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  else
  {
    uint64_t v7 = sub_24A7635D8();
    int v8 = (void *)sub_24A762DF8();
    objc_msgSend(v4, sel_setObject_forKey_, v7, v8);
    swift_endAccess();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }

  free(v3);
}

void sub_24A75F4D8()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v1 = (void *)sub_24A762DF8();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    *(void *)&xmmword_2697B42A0 = 0;
    *((void *)&xmmword_2697B42A0 + 1) = 0xE000000000000000;
    qword_2697B42B0 = 0xD000000000000010;
    unk_2697B42B8 = 0x800000024A7693F0;
    qword_2697B42C0 = (uint64_t)v2;
  }
  else
  {
    sub_24A763418();
    __break(1u);
  }
}

id static NSUserDefaults.$openAIKey.getter@<X0>(void *a1@<X8>)
{
  if (qword_2697B2F38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = *((void *)&xmmword_2697B42A0 + 1);
  uint64_t v3 = qword_2697B42B0;
  uint64_t v4 = unk_2697B42B8;
  id v7 = (id)qword_2697B42C0;
  uint64_t v5 = qword_2697B42C0;
  *a1 = xmmword_2697B42A0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return v7;
}

uint64_t static NSUserDefaults.maxTokens.getter()
{
  if (qword_2697B2F40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  long long v0 = xmmword_2697B42C8;
  uint64_t v2 = qword_2697B42D8;
  uint64_t v1 = (void *)qword_2697B42E0;
  swift_bridgeObjectRetain();
  id v3 = v1;
  uint64_t v4 = sub_24A734EB4(v0, *((uint64_t *)&v0 + 1), v2, v3);

  swift_bridgeObjectRelease();
  return v4;
}

void static NSUserDefaults.maxTokens.setter(uint64_t a1)
{
  if (qword_2697B2F40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)qword_2697B42E0;
  uint64_t v5 = a1;
  uint64_t v3 = sub_24A7635D8();
  uint64_t v4 = (void *)sub_24A762DF8();
  objc_msgSend(v2, sel_setObject_forKey_, v3, v4, v5);
  swift_endAccess();
  swift_unknownObjectRelease();
}

void (*static NSUserDefaults.maxTokens.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  if (qword_2697B2F40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  v2[3] = sub_24A734EB4(xmmword_2697B42C8, *((uint64_t *)&xmmword_2697B42C8 + 1), qword_2697B42D8, (void *)qword_2697B42E0);
  return sub_24A75F8BC;
}

void sub_24A75F8BC(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = (void *)qword_2697B42E0;
  *(void *)(*(void *)a1 + 32) = *(void *)(*(void *)a1 + 24);
  uint64_t v5 = sub_24A7635D8();
  id v6 = (void *)sub_24A762DF8();
  objc_msgSend(v4, sel_setObject_forKey_, v5, v6);
  if (a2)
  {

    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();

    swift_unknownObjectRelease();
  }

  free(v3);
}

void sub_24A75F984()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v1 = (void *)sub_24A762DF8();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    xmmword_2697B42C8 = xmmword_24A767100;
    qword_2697B42D8 = 0x800000024A7693D0;
    qword_2697B42E0 = (uint64_t)v2;
  }
  else
  {
    sub_24A763418();
    __break(1u);
  }
}

id static NSUserDefaults.$maxTokens.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2697B2F40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = qword_2697B42D8;
  id v5 = (id)qword_2697B42E0;
  uint64_t v3 = qword_2697B42E0;
  *(_OWORD *)a1 = xmmword_2697B42C8;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();

  return v5;
}

double static NSUserDefaults.temperature.getter()
{
  if (qword_2697B2F48 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = qword_2697B42F0;
  uint64_t v1 = qword_2697B42F8;
  uint64_t v2 = (void *)qword_2697B4300;
  swift_bridgeObjectRetain();
  id v3 = v2;
  sub_24A734DF0(v0, v1, v3);
  double v5 = v4;

  swift_bridgeObjectRelease();
  return v5;
}

void static NSUserDefaults.temperature.setter(double a1)
{
  if (qword_2697B2F48 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)qword_2697B4300;
  uint64_t v3 = sub_24A7635D8();
  double v4 = (void *)sub_24A762DF8();
  objc_msgSend(v2, sel_setObject_forKey_, v3, v4, *(void *)&a1);
  swift_endAccess();
  swift_unknownObjectRelease();
}

void (*static NSUserDefaults.temperature.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  if (qword_2697B2F48 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_24A734DF0(qword_2697B42F0, qword_2697B42F8, (void *)qword_2697B4300);
  v2[3] = v3;
  return sub_24A75FD68;
}

void sub_24A75FD68(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  double v4 = (void *)qword_2697B4300;
  *(void *)(*(void *)a1 + 32) = *(void *)(*(void *)a1 + 24);
  uint64_t v5 = sub_24A7635D8();
  id v6 = (void *)sub_24A762DF8();
  objc_msgSend(v4, sel_setObject_forKey_, v5, v6);
  if (a2)
  {

    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();

    swift_unknownObjectRelease();
  }

  free(v3);
}

void sub_24A75FE30()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v1 = (void *)sub_24A762DF8();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    qword_2697B42E8 = 0;
    qword_2697B42F0 = 0xD000000000000012;
    qword_2697B42F8 = 0x800000024A7693B0;
    qword_2697B4300 = (uint64_t)v2;
  }
  else
  {
    sub_24A763418();
    __break(1u);
  }
}

id static NSUserDefaults.$temperature.getter@<X0>(void *a1@<X8>)
{
  if (qword_2697B2F48 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v3 = qword_2697B42F0;
  uint64_t v2 = qword_2697B42F8;
  id v6 = (id)qword_2697B4300;
  uint64_t v4 = qword_2697B4300;
  *a1 = qword_2697B42E8;
  a1[1] = v3;
  a1[2] = v2;
  a1[3] = v4;
  swift_bridgeObjectRetain();

  return v6;
}

uint64_t static NSUserDefaults.group.getter()
{
  if (qword_2697B2F50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  v2[0] = xmmword_2697B4308;
  v2[1] = *(_OWORD *)&qword_2697B4318;
  uint64_t v3 = qword_2697B4328;
  sub_24A736590((uint64_t)v2);
  uint64_t v0 = sub_24A734C34();
  sub_24A7365D4((uint64_t)v2);
  return v0;
}

void static NSUserDefaults.group.setter()
{
  if (qword_2697B2F50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = (void *)qword_2697B4328;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_24A7635D8();
  uint64_t v2 = (void *)sub_24A762DF8();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
}

void (*static NSUserDefaults.group.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = malloc(0x60uLL);
  *a1 = v2;
  if (qword_2697B2F50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  long long v3 = *(_OWORD *)&qword_2697B4318;
  *uint64_t v2 = xmmword_2697B4308;
  v2[1] = v3;
  *((void *)v2 + 4) = qword_2697B4328;
  *((void *)v2 + 8) = sub_24A734C34();
  *((void *)v2 + 9) = v4;
  return sub_24A760208;
}

void sub_24A760208(uint64_t a1, char a2)
{
  long long v3 = *(void **)a1;
  *(void *)(*(void *)a1 + 80) = *(void *)(*(void *)a1 + 64);
  uint64_t v4 = (void *)qword_2697B4328;
  v3[11] = v3[9];
  swift_bridgeObjectRetain();
  if (a2)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_24A7635D8();
    id v6 = (void *)sub_24A762DF8();
    objc_msgSend(v4, sel_setObject_forKey_, v5, v6);

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  else
  {
    uint64_t v7 = sub_24A7635D8();
    int v8 = (void *)sub_24A762DF8();
    objc_msgSend(v4, sel_setObject_forKey_, v7, v8);
    swift_endAccess();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }

  free(v3);
}

void sub_24A76034C()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v1 = (void *)sub_24A762DF8();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    *(void *)&xmmword_2697B4308 = 0x746C7561666564;
    *((void *)&xmmword_2697B4308 + 1) = 0xE700000000000000;
    strcpy((char *)&qword_2697B4318, "config.group");
    unk_2697B4325 = 0;
    unk_2697B4326 = -5120;
    qword_2697B4328 = (uint64_t)v2;
  }
  else
  {
    sub_24A763418();
    __break(1u);
  }
}

id static NSUserDefaults.$group.getter@<X0>(void *a1@<X8>)
{
  if (qword_2697B2F50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = *((void *)&xmmword_2697B4308 + 1);
  uint64_t v3 = qword_2697B4318;
  uint64_t v4 = unk_2697B4320;
  id v7 = (id)qword_2697B4328;
  uint64_t v5 = qword_2697B4328;
  *a1 = xmmword_2697B4308;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return v7;
}

uint64_t static NSUserDefaults.model.getter()
{
  if (qword_2697B2F58 != -1) {
    swift_once();
  }
  swift_beginAccess();
  v2[0] = xmmword_2697B4330;
  v2[1] = *(_OWORD *)&qword_2697B4340;
  uint64_t v3 = qword_2697B4350;
  sub_24A736590((uint64_t)v2);
  uint64_t v0 = sub_24A734C34();
  sub_24A7365D4((uint64_t)v2);
  return v0;
}

void static NSUserDefaults.model.setter()
{
  if (qword_2697B2F58 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = (void *)qword_2697B4350;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_24A7635D8();
  uint64_t v2 = (void *)sub_24A762DF8();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
}

void (*static NSUserDefaults.model.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = malloc(0x60uLL);
  *a1 = v2;
  if (qword_2697B2F58 != -1) {
    swift_once();
  }
  swift_beginAccess();
  long long v3 = *(_OWORD *)&qword_2697B4340;
  *uint64_t v2 = xmmword_2697B4330;
  v2[1] = v3;
  *((void *)v2 + 4) = qword_2697B4350;
  *((void *)v2 + 8) = sub_24A734C34();
  *((void *)v2 + 9) = v4;
  return sub_24A760758;
}

void sub_24A760758(uint64_t a1, char a2)
{
  long long v3 = *(void **)a1;
  *(void *)(*(void *)a1 + 80) = *(void *)(*(void *)a1 + 64);
  uint64_t v4 = (void *)qword_2697B4350;
  v3[11] = v3[9];
  swift_bridgeObjectRetain();
  if (a2)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_24A7635D8();
    id v6 = (void *)sub_24A762DF8();
    objc_msgSend(v4, sel_setObject_forKey_, v5, v6);

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  else
  {
    uint64_t v7 = sub_24A7635D8();
    int v8 = (void *)sub_24A762DF8();
    objc_msgSend(v4, sel_setObject_forKey_, v7, v8);
    swift_endAccess();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }

  free(v3);
}

void sub_24A76089C()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v1 = (void *)sub_24A762DF8();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    *(void *)&xmmword_2697B4330 = 0x342D747067;
    *((void *)&xmmword_2697B4330 + 1) = 0xE500000000000000;
    strcpy((char *)&qword_2697B4340, "config.model");
    unk_2697B434D = 0;
    unk_2697B434E = -5120;
    qword_2697B4350 = (uint64_t)v2;
  }
  else
  {
    sub_24A763418();
    __break(1u);
  }
}

id static NSUserDefaults.$model.getter@<X0>(void *a1@<X8>)
{
  if (qword_2697B2F58 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = *((void *)&xmmword_2697B4330 + 1);
  uint64_t v3 = qword_2697B4340;
  uint64_t v4 = unk_2697B4348;
  id v7 = (id)qword_2697B4350;
  uint64_t v5 = qword_2697B4350;
  *a1 = xmmword_2697B4330;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return v7;
}

uint64_t sub_24A760A60()
{
  if (qword_2697B2F30 != -1) {
    swift_once();
  }
  swift_beginAccess();
  v6[0] = xmmword_2697B4278;
  v6[1] = *(_OWORD *)&qword_2697B4288;
  uint64_t v7 = qword_2697B4298;
  sub_24A760DF8((uint64_t *)v6);
  sub_24A734B10(&v4);
  sub_24A760E40((uint64_t *)v6);
  unint64_t v1 = v5;
  if (v5 >> 60 == 15) {
    return sub_24A70AD44(MEMORY[0x263F8EE78]);
  }
  uint64_t v3 = v4;
  sub_24A7622C8();
  swift_allocObject();
  sub_24A7622B8();
  sub_24A704710(&qword_2697B4358);
  sub_24A760E88(&qword_2697B4370, (void (*)(void))sub_24A760F04);
  sub_24A7622A8();
  swift_release();
  uint64_t result = sub_24A724B14(v3, v1);
  if (!v0)
  {
    uint64_t result = v4;
    if (!v4) {
      return sub_24A70AD44(MEMORY[0x263F8EE78]);
    }
  }
  return result;
}

uint64_t sub_24A760BEC()
{
  sub_24A7622F8();
  swift_allocObject();
  sub_24A7622E8();
  sub_24A704710(&qword_2697B4358);
  sub_24A760E88(&qword_2697B4360, (void (*)(void))sub_24A760DA4);
  uint64_t v1 = sub_24A7622D8();
  unint64_t v3 = v2;
  uint64_t result = swift_release();
  if (!v0)
  {
    if (qword_2697B2F30 != -1) {
      swift_once();
    }
    swift_beginAccess();
    unint64_t v5 = (void *)qword_2697B4298;
    sub_24A736E14(v1, v3);
    sub_24A736E14(v1, v3);
    sub_24A704710(&qword_2697B3D68);
    uint64_t v6 = sub_24A7635D8();
    uint64_t v7 = (void *)sub_24A762DF8();
    objc_msgSend(v5, sel_setObject_forKey_, v6, v7);
    swift_endAccess();
    swift_unknownObjectRelease();

    sub_24A7249F8(v1, v3);
    return sub_24A7249F8(v1, v3);
  }
  return result;
}

unint64_t sub_24A760DA4()
{
  unint64_t result = qword_2697B4368;
  if (!qword_2697B4368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B4368);
  }
  return result;
}

uint64_t *sub_24A760DF8(uint64_t *a1)
{
  unint64_t v2 = (void *)a1[4];
  sub_24A736E00(*a1, a1[1]);
  swift_bridgeObjectRetain();
  id v3 = v2;
  return a1;
}

uint64_t *sub_24A760E40(uint64_t *a1)
{
  unint64_t v2 = (void *)a1[4];
  sub_24A724B14(*a1, a1[1]);

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24A760E88(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24A704B6C(&qword_2697B4358);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A760F04()
{
  unint64_t result = qword_2697B4378;
  if (!qword_2697B4378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697B4378);
  }
  return result;
}

uint64_t UserDefault.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v21 = a2;
  uint64_t v5 = a1 - 8;
  uint64_t v6 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  int v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = sub_24A763178();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v20 - v12;
  uint64_t v14 = *(void **)(v3 + *(int *)(v5 + 40));
  uint64_t v15 = (void *)sub_24A762DF8();
  id v16 = objc_msgSend(v14, sel_objectForKey_, v15);

  if (v16)
  {
    sub_24A7631F8();
    swift_unknownObjectRelease();
    sub_24A70D414(&v22, v23);
  }
  else
  {
    memset(v23, 0, sizeof(v23));
  }
  sub_24A704710(&qword_2697B3020);
  int v17 = swift_dynamicCast();
  uint64_t v18 = *(void *)(v9 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v13, v17 ^ 1u, 1, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v3, a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v13, 1, v9) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 16))(v21, v8, v9);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a1);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a1);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(v21, v13, v9);
  }
}

uint64_t UserDefault.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  sub_24A7618D0(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8);

  return v4(a1);
}

uint64_t UserDefault.init(key:defaultValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v14);
  id v15 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  id v16 = (void *)sub_24A762DF8();
  id v17 = objc_msgSend(v15, sel_initWithSuiteName_, v16);

  if (v17)
  {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a3, a4);
    uint64_t v18 = type metadata accessor for UserDefault();
    uint64_t v19 = (void *)(a5 + *(int *)(v18 + 28));
    void *v19 = a1;
    v19[1] = a2;
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a5, v12, a4);
    *(void *)(a5 + *(int *)(v18 + 32)) = v17;
  }
  else
  {
    uint64_t result = sub_24A763418();
    __break(1u);
  }
  return result;
}

uint64_t UserDefault.projectedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(a2, v2, a1);
}

uint64_t UserDefault.defaultValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t UserDefault.key.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

id UserDefault.container.getter(uint64_t a1)
{
  return *(id *)(v1 + *(int *)(a1 + 32));
}

uint64_t static NSUserDefaults.makeConditionalEngineUserDefaults()()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v1 = (void *)sub_24A762DF8();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2) {
    return (uint64_t)v2;
  }
  uint64_t result = sub_24A763418();
  __break(1u);
  return result;
}

uint64_t UserDefault.init(key:defaultValue:container:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = type metadata accessor for UserDefault();
  uint64_t v13 = (void *)(a6 + *(int *)(v12 + 28));
  void *v13 = a1;
  v13[1] = a2;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6, a3, a5);
  *(void *)(a6 + *(int *)(v12 + 32)) = a4;
  return result;
}

void (*UserDefault.wrappedValue.modify(void *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  void *v5 = a2;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v5[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v5[5] = v9;
  UserDefault.wrappedValue.getter(a2, (uint64_t)v9);
  return sub_24A761780;
}

void sub_24A761780(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[4];
  uint64_t v4 = (void *)(*a1)[5];
  uint64_t v5 = (*a1)[2];
  uint64_t v6 = (*a1)[3];
  uint64_t v7 = **a1;
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    sub_24A7618D0((uint64_t)v3, v7);
    size_t v8 = *(void (**)(void *, uint64_t))(v6 + 8);
    v8(v3, v5);
    v8(v4, v5);
  }
  else
  {
    sub_24A7618D0((*a1)[5], v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);

  free(v2);
}

Swift::Void __swiftcall UserDefault.removeObject()()
{
  uint64_t v2 = *(void **)(v1 + *(int *)(v0 + 32));
  id v3 = (id)sub_24A762DF8();
  objc_msgSend(v2, sel_removeObjectForKey_, v3);
}

void sub_24A7618D0(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(v2 + *(int *)(a2 + 32));
  uint64_t v4 = sub_24A7635A8();
  id v5 = (id)sub_24A762DF8();
  objc_msgSend(v3, sel_setObject_forKey_, v4, v5);
  swift_unknownObjectRelease();
}

uint64_t type metadata accessor for UserDefault()
{
  return sub_24A762278();
}

uint64_t sub_24A761974@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for UserDefault();
  return UserDefault.wrappedValue.getter(v2, a1);
}

void sub_24A7619B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UserDefault();
  sub_24A7618D0(a1, v2);
}

uint64_t sub_24A7619F0()
{
  return 8;
}

void *sub_24A7619FC(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_24A761A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_24A761A10()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24A761AB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v10 = *v11;
    v10[1] = v11[1];
    uint64_t v12 = (void **)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = *v12;
    *(void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8) = *v12;
    swift_bridgeObjectRetain();
    id v14 = v13;
  }
  return v4;
}

void sub_24A761BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)((v4 + 23) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_24A761C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  size_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  uint64_t v9 = (void **)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *v9;
  *(void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8) = *v9;
  swift_bridgeObjectRetain();
  id v11 = v10;
  return a1;
}

uint64_t sub_24A761D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  size_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void **)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(void **)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  id v11 = *v9;
  void *v9 = v10;
  id v12 = v10;

  return a1;
}

uint64_t sub_24A761DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  size_t v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  *(void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24A761E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  size_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v9 = (void **)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *v9;
  void *v9 = *(void **)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);

  return a1;
}

uint64_t sub_24A761EF4(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24A762048);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_24A76205C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_42;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v19 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                void *v19 = a2 ^ 0x80000000;
                v19[1] = 0;
              }
              else
              {
                v19[1] = a2 - 1;
              }
            }
            else
            {
              uint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x24A762250);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t sub_24A762278()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24A7622A8()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_24A7622B8()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_24A7622C8()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_24A7622D8()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_24A7622E8()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_24A7622F8()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_24A762308()
{
  return MEMORY[0x270EEE188]();
}

uint64_t sub_24A762318()
{
  return MEMORY[0x270EEE258]();
}

uint64_t sub_24A762328()
{
  return MEMORY[0x270EEE438]();
}

uint64_t sub_24A762338()
{
  return MEMORY[0x270EEE450]();
}

uint64_t sub_24A762348()
{
  return MEMORY[0x270EEE6E8]();
}

uint64_t sub_24A762358()
{
  return MEMORY[0x270EEE748]();
}

uint64_t sub_24A762368()
{
  return MEMORY[0x270EEE7B8]();
}

uint64_t sub_24A762378()
{
  return MEMORY[0x270EEE828]();
}

uint64_t sub_24A762388()
{
  return MEMORY[0x270EEE890]();
}

uint64_t sub_24A762398()
{
  return MEMORY[0x270EEE8E8]();
}

uint64_t sub_24A7623A8()
{
  return MEMORY[0x270EEE908]();
}

uint64_t sub_24A7623B8()
{
  return MEMORY[0x270EEE920]();
}

uint64_t sub_24A7623C8()
{
  return MEMORY[0x270EEE930]();
}

uint64_t sub_24A7623D8()
{
  return MEMORY[0x270EEE950]();
}

uint64_t sub_24A7623E8()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_24A7623F8()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_24A762408()
{
  return MEMORY[0x270EEF868]();
}

uint64_t sub_24A762418()
{
  return MEMORY[0x270EEFC10]();
}

uint64_t sub_24A762428()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_24A762438()
{
  return MEMORY[0x270EEFE80]();
}

uint64_t sub_24A762448()
{
  return MEMORY[0x270EEFF00]();
}

uint64_t sub_24A762458()
{
  return MEMORY[0x270EEFF40]();
}

uint64_t sub_24A762468()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_24A762478()
{
  return MEMORY[0x270EEFFC8]();
}

uint64_t sub_24A762488()
{
  return MEMORY[0x270EF01C0]();
}

uint64_t sub_24A762498()
{
  return MEMORY[0x270EF0898]();
}

uint64_t sub_24A7624A8()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_24A7624B8()
{
  return MEMORY[0x270EF09A8]();
}

uint64_t _s23ConditionalEngineShared21ScheduledQueryHistoryC5EventV1loiySbAE_AEtFZ_0()
{
  return MEMORY[0x270EF09B8]();
}

uint64_t sub_24A7624D8()
{
  return MEMORY[0x270EF09D8]();
}

uint64_t sub_24A7624E8()
{
  return MEMORY[0x270EF0B88]();
}

uint64_t sub_24A7624F8()
{
  return MEMORY[0x270EF0BA8]();
}

uint64_t sub_24A762508()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_24A762518()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_24A762528()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_24A762538()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_24A762548()
{
  return MEMORY[0x270EF0CB0]();
}

uint64_t sub_24A762558()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_24A762568()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_24A762578()
{
  return MEMORY[0x270EF1160]();
}

uint64_t sub_24A762588()
{
  return MEMORY[0x270EF1258]();
}

uint64_t sub_24A762598()
{
  return MEMORY[0x270EF1280]();
}

uint64_t sub_24A7625A8()
{
  return MEMORY[0x270EF12C0]();
}

uint64_t sub_24A7625B8()
{
  return MEMORY[0x270EF1368]();
}

uint64_t sub_24A7625C8()
{
  return MEMORY[0x270EF13D8]();
}

uint64_t sub_24A7625D8()
{
  return MEMORY[0x270EF13F0]();
}

uint64_t sub_24A7625E8()
{
  return MEMORY[0x270EF1428]();
}

uint64_t sub_24A7625F8()
{
  return MEMORY[0x270EF1440]();
}

uint64_t sub_24A762608()
{
  return MEMORY[0x270EF1608]();
}

uint64_t sub_24A762618()
{
  return MEMORY[0x270F28690]();
}

uint64_t sub_24A762628()
{
  return MEMORY[0x270F3D770]();
}

uint64_t sub_24A762638()
{
  return MEMORY[0x270F3D778]();
}

uint64_t sub_24A762648()
{
  return MEMORY[0x270F3D890]();
}

uint64_t sub_24A762658()
{
  return MEMORY[0x270F3D898]();
}

uint64_t sub_24A762678()
{
  return MEMORY[0x270F3D8A8]();
}

uint64_t sub_24A762688()
{
  return MEMORY[0x270F3D910]();
}

uint64_t sub_24A762698()
{
  return MEMORY[0x270F3D928]();
}

uint64_t sub_24A7626A8()
{
  return MEMORY[0x270F3D9B0]();
}

uint64_t sub_24A7626B8()
{
  return MEMORY[0x270F3DA08]();
}

uint64_t sub_24A7626C8()
{
  return MEMORY[0x270F3DA78]();
}

uint64_t sub_24A7626D8()
{
  return MEMORY[0x270F3DA80]();
}

uint64_t sub_24A7626E8()
{
  return MEMORY[0x270F3DA88]();
}

uint64_t sub_24A7626F8()
{
  return MEMORY[0x270F3DA90]();
}

uint64_t sub_24A762708()
{
  return MEMORY[0x270F3DA98]();
}

uint64_t sub_24A762718()
{
  return MEMORY[0x270F3DAA0]();
}

uint64_t sub_24A762728()
{
  return MEMORY[0x270F3DAE0]();
}

uint64_t sub_24A762738()
{
  return MEMORY[0x270F3DAE8]();
}

uint64_t sub_24A762748()
{
  return MEMORY[0x270F3DBB8]();
}

uint64_t sub_24A762758()
{
  return MEMORY[0x270F3DBE8]();
}

uint64_t sub_24A762768()
{
  return MEMORY[0x270F3DBF0]();
}

uint64_t sub_24A762778()
{
  return MEMORY[0x270F3DC20]();
}

uint64_t sub_24A762788()
{
  return MEMORY[0x270F3DC68]();
}

uint64_t sub_24A762798()
{
  return MEMORY[0x270F3DE98]();
}

uint64_t sub_24A7627A8()
{
  return MEMORY[0x270F3DF60]();
}

uint64_t sub_24A7627B8()
{
  return MEMORY[0x270F3DFB0]();
}

uint64_t sub_24A7627C8()
{
  return MEMORY[0x270F3DFD8]();
}

uint64_t sub_24A7627D8()
{
  return MEMORY[0x270F3DFE0]();
}

uint64_t sub_24A7627E8()
{
  return MEMORY[0x270F3E2D0]();
}

uint64_t sub_24A7627F8()
{
  return MEMORY[0x270F3E2D8]();
}

uint64_t sub_24A762808()
{
  return MEMORY[0x270F3E458]();
}

uint64_t sub_24A762818()
{
  return MEMORY[0x270F3E468]();
}

uint64_t sub_24A762828()
{
  return MEMORY[0x270F3E5E8]();
}

uint64_t sub_24A762838()
{
  return MEMORY[0x270F3E5F8]();
}

uint64_t sub_24A762848()
{
  return MEMORY[0x270F3E600]();
}

uint64_t sub_24A762858()
{
  return MEMORY[0x270F3E620]();
}

uint64_t sub_24A762868()
{
  return MEMORY[0x270F3E660]();
}

uint64_t sub_24A762878()
{
  return MEMORY[0x270F3E6A0]();
}

uint64_t sub_24A762888()
{
  return MEMORY[0x270F3E768]();
}

uint64_t sub_24A762898()
{
  return MEMORY[0x270F3E7A0]();
}

uint64_t sub_24A7628A8()
{
  return MEMORY[0x270F3E7B0]();
}

uint64_t sub_24A7628B8()
{
  return MEMORY[0x270F3E7D0]();
}

uint64_t sub_24A7628C8()
{
  return MEMORY[0x270F3E7D8]();
}

uint64_t sub_24A7628D8()
{
  return MEMORY[0x270F3E848]();
}

uint64_t sub_24A7628E8()
{
  return MEMORY[0x270F3E850]();
}

uint64_t sub_24A7628F8()
{
  return MEMORY[0x270F3E860]();
}

uint64_t sub_24A762908()
{
  return MEMORY[0x270F3E868]();
}

uint64_t sub_24A762918()
{
  return MEMORY[0x270F3E8C8]();
}

uint64_t sub_24A762928()
{
  return MEMORY[0x270F3E9C8]();
}

uint64_t sub_24A762938()
{
  return MEMORY[0x270F3EC80]();
}

uint64_t sub_24A762948()
{
  return MEMORY[0x270FA2A68]();
}

uint64_t sub_24A762958()
{
  return MEMORY[0x270FA2A78]();
}

uint64_t sub_24A762968()
{
  return MEMORY[0x270FA2A88]();
}

uint64_t sub_24A762978()
{
  return MEMORY[0x270FA2A90]();
}

uint64_t sub_24A762988()
{
  return MEMORY[0x270FA2A98]();
}

uint64_t sub_24A762998()
{
  return MEMORY[0x270FA2AA0]();
}

uint64_t sub_24A7629A8()
{
  return MEMORY[0x270FA2AA8]();
}

uint64_t sub_24A7629B8()
{
  return MEMORY[0x270FA2AB0]();
}

uint64_t sub_24A7629C8()
{
  return MEMORY[0x270FA2AB8]();
}

uint64_t sub_24A7629D8()
{
  return MEMORY[0x270F0C820]();
}

uint64_t sub_24A7629E8()
{
  return MEMORY[0x270F0C830]();
}

uint64_t sub_24A7629F8()
{
  return MEMORY[0x270F0C840]();
}

uint64_t sub_24A762A08()
{
  return MEMORY[0x270F0C858]();
}

uint64_t sub_24A762A18()
{
  return MEMORY[0x270F0C868]();
}

uint64_t sub_24A762A28()
{
  return MEMORY[0x270F0C870]();
}

uint64_t sub_24A762A38()
{
  return MEMORY[0x270F0C888]();
}

uint64_t sub_24A762A48()
{
  return MEMORY[0x270F0C898]();
}

uint64_t sub_24A762A58()
{
  return MEMORY[0x270F0C8A8]();
}

uint64_t sub_24A762A68()
{
  return MEMORY[0x270F0C8B0]();
}

uint64_t sub_24A762A78()
{
  return MEMORY[0x270F0C8C0]();
}

uint64_t sub_24A762A88()
{
  return MEMORY[0x270F0C8F8]();
}

uint64_t sub_24A762A98()
{
  return MEMORY[0x270F0C928]();
}

uint64_t sub_24A762AB8()
{
  return MEMORY[0x270F0C9D8]();
}

uint64_t sub_24A762AD8()
{
  return MEMORY[0x270F0CA40]();
}

uint64_t sub_24A762AE8()
{
  return MEMORY[0x270F0CA50]();
}

uint64_t sub_24A762AF8()
{
  return MEMORY[0x270F0CA58]();
}

uint64_t sub_24A762B08()
{
  return MEMORY[0x270F0CA70]();
}

uint64_t sub_24A762B18()
{
  return MEMORY[0x270F0CA78]();
}

uint64_t sub_24A762B28()
{
  return MEMORY[0x270F0CA80]();
}

uint64_t sub_24A762B38()
{
  return MEMORY[0x270F0CB68]();
}

uint64_t sub_24A762B48()
{
  return MEMORY[0x270F0CB70]();
}

uint64_t sub_24A762B78()
{
  return MEMORY[0x270F84570]();
}

uint64_t sub_24A762B88()
{
  return MEMORY[0x270F845C8]();
}

uint64_t sub_24A762B98()
{
  return MEMORY[0x270F84610]();
}

uint64_t sub_24A762BA8()
{
  return MEMORY[0x270F84618]();
}

uint64_t sub_24A762BB8()
{
  return MEMORY[0x270F84620]();
}

uint64_t sub_24A762BC8()
{
  return MEMORY[0x270F84628]();
}

uint64_t sub_24A762BD8()
{
  return MEMORY[0x270F84630]();
}

uint64_t sub_24A762BE8()
{
  return MEMORY[0x270F84638]();
}

uint64_t sub_24A762BF8()
{
  return MEMORY[0x270F84650]();
}

uint64_t sub_24A762C08()
{
  return MEMORY[0x270F84658]();
}

uint64_t sub_24A762C18()
{
  return MEMORY[0x270F84798]();
}

uint64_t sub_24A762C28()
{
  return MEMORY[0x270F0E920]();
}

uint64_t sub_24A762C38()
{
  return MEMORY[0x270F0E928]();
}

uint64_t sub_24A762C48()
{
  return MEMORY[0x270F0E930]();
}

uint64_t sub_24A762C78()
{
  return MEMORY[0x270FA1938]();
}

uint64_t sub_24A762C88()
{
  return MEMORY[0x270FA2CC0]();
}

uint64_t sub_24A762C98()
{
  return MEMORY[0x270FA2CE8]();
}

uint64_t sub_24A762CA8()
{
  return MEMORY[0x270FA2D00]();
}

uint64_t sub_24A762CB8()
{
  return MEMORY[0x270FA2D30]();
}

uint64_t sub_24A762CC8()
{
  return MEMORY[0x270FA2D58]();
}

uint64_t sub_24A762CD8()
{
  return MEMORY[0x270FA2D88]();
}

uint64_t sub_24A762CE8()
{
  return MEMORY[0x270FA2D90]();
}

uint64_t sub_24A762CF8()
{
  return MEMORY[0x270FA2DA8]();
}

uint64_t sub_24A762D08()
{
  return MEMORY[0x270FA2DB0]();
}

uint64_t sub_24A762D18()
{
  return MEMORY[0x270FA2DD0]();
}

uint64_t sub_24A762D28()
{
  return MEMORY[0x270FA2DE0]();
}

uint64_t sub_24A762D38()
{
  return MEMORY[0x270FA2DF0]();
}

uint64_t sub_24A762D48()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_24A762D58()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_24A762D68()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_24A762D78()
{
  return MEMORY[0x270EE3C20]();
}

uint64_t sub_24A762D88()
{
  return MEMORY[0x270EE3CE0]();
}

uint64_t sub_24A762D98()
{
  return MEMORY[0x270FA0A00]();
}

uint64_t sub_24A762DA8()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_24A762DB8()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_24A762DC8()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_24A762DD8()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_24A762DE8()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_24A762DF8()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_24A762E08()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_24A762E18()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_24A762E28()
{
  return MEMORY[0x270F9D5F8]();
}

uint64_t sub_24A762E38()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_24A762E48()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_24A762E58()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_24A762E68()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_24A762E78()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_24A762E88()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_24A762E98()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_24A762EA8()
{
  return MEMORY[0x270F9D808]();
}

uint64_t sub_24A762EB8()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_24A762EC8()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_24A762ED8()
{
  return MEMORY[0x270F9D878]();
}

uint64_t sub_24A762EE8()
{
  return MEMORY[0x270F9D898]();
}

uint64_t sub_24A762EF8()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_24A762F08()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_24A762F18()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_24A762F28()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_24A762F38()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_24A762F48()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_24A762F58()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_24A762F68()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_24A762F78()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_24A762F88()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_24A762F98()
{
  return MEMORY[0x270FA1E18]();
}

uint64_t sub_24A762FA8()
{
  return MEMORY[0x270FA1E20]();
}

uint64_t sub_24A762FB8()
{
  return MEMORY[0x270FA1E28]();
}

uint64_t sub_24A762FD8()
{
  return MEMORY[0x270FA1EA0]();
}

uint64_t sub_24A762FE8()
{
  return MEMORY[0x270FA1EA8]();
}

uint64_t sub_24A762FF8()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_24A763008()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_24A763018()
{
  return MEMORY[0x270F9DDA0]();
}

uint64_t sub_24A763028()
{
  return MEMORY[0x270F9DDD8]();
}

uint64_t sub_24A763038()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_24A763048()
{
  return MEMORY[0x270F9DF80]();
}

uint64_t sub_24A763058()
{
  return MEMORY[0x270EF1CE0]();
}

uint64_t sub_24A763068()
{
  return MEMORY[0x270FA2B90]();
}

uint64_t sub_24A763078()
{
  return MEMORY[0x270FA2BE0]();
}

uint64_t sub_24A763088()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_24A763098()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_24A7630A8()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_24A7630B8()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_24A7630C8()
{
  return MEMORY[0x270FA0C50]();
}

uint64_t sub_24A7630D8()
{
  return MEMORY[0x270FA0D50]();
}

uint64_t sub_24A7630E8()
{
  return MEMORY[0x270FA0DB8]();
}

uint64_t sub_24A7630F8()
{
  return MEMORY[0x270FA2E90]();
}

uint64_t sub_24A763108()
{
  return MEMORY[0x270FA2EA8]();
}

uint64_t sub_24A763148()
{
  return MEMORY[0x270FA1170]();
}

uint64_t sub_24A763158()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_24A763168()
{
  return MEMORY[0x270FA2EC8]();
}

uint64_t sub_24A763178()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_24A763188()
{
  return MEMORY[0x270F9E500]();
}

uint64_t sub_24A763198()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_24A7631A8()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_24A7631B8()
{
  return MEMORY[0x270EF2478]();
}

uint64_t sub_24A7631C8()
{
  return MEMORY[0x270EF24A0]();
}

uint64_t sub_24A7631D8()
{
  return MEMORY[0x270EF25B0]();
}

uint64_t sub_24A7631E8()
{
  return MEMORY[0x270FA13A0]();
}

uint64_t sub_24A7631F8()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_24A763208()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_24A763218()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_24A763228()
{
  return MEMORY[0x270F9E800]();
}

uint64_t sub_24A763238()
{
  return MEMORY[0x270F9E810]();
}

uint64_t sub_24A763248()
{
  return MEMORY[0x270F9E818]();
}

uint64_t sub_24A763258()
{
  return MEMORY[0x270F9E830]();
}

uint64_t sub_24A763268()
{
  return MEMORY[0x270F9E838]();
}

uint64_t sub_24A763278()
{
  return MEMORY[0x270F9E840]();
}

uint64_t sub_24A763288()
{
  return MEMORY[0x270F9E848]();
}

uint64_t sub_24A763298()
{
  return MEMORY[0x270F9E858]();
}

uint64_t sub_24A7632A8()
{
  return MEMORY[0x270F9E860]();
}

uint64_t sub_24A7632B8()
{
  return MEMORY[0x270F9E870]();
}

uint64_t sub_24A7632C8()
{
  return MEMORY[0x270F9E880]();
}

uint64_t sub_24A7632E8()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_24A7632F8()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_24A763308()
{
  return MEMORY[0x270F9E968]();
}

uint64_t sub_24A763318()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_24A763328()
{
  return MEMORY[0x270F9E988]();
}

uint64_t sub_24A763338()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_24A763348()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_24A763358()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_24A763368()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_24A763378()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_24A763388()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_24A763398()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_24A7633A8()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_24A7633B8()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_24A7633C8()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_24A7633D8()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_24A7633E8()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_24A7633F8()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_24A763408()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_24A763418()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_24A763428()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_24A763438()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_24A763448()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_24A763458()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_24A763468()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_24A763478()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_24A763488()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_24A763498()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_24A7634A8()
{
  return MEMORY[0x270F9F278]();
}

uint64_t sub_24A7634B8()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_24A7634C8()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_24A7634D8()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_24A7634E8()
{
  return MEMORY[0x270F9F2F8]();
}

uint64_t sub_24A7634F8()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_24A763508()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_24A763518()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_24A763528()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_24A763538()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_24A763548()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_24A763558()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_24A763568()
{
  return MEMORY[0x270F9F438]();
}

uint64_t sub_24A763578()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_24A763588()
{
  return MEMORY[0x270F9F4D0]();
}

uint64_t sub_24A763598()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_24A7635A8()
{
  return MEMORY[0x270F9F7C0]();
}

uint64_t sub_24A7635B8()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_24A7635D8()
{
  return MEMORY[0x270F9FA88]();
}

uint64_t sub_24A7635E8()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_24A7635F8()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_24A763628()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_24A763638()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_24A763648()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_24A763658()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_24A763668()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_24A763678()
{
  return MEMORY[0x270F9FC28]();
}

uint64_t sub_24A763688()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_24A763698()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_24A7636A8()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_24A7636B8()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_24A7636C8()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_24A7636D8()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_24A7636E8()
{
  return MEMORY[0x270FA0088]();
}

uint64_t sub_24A763718()
{
  return MEMORY[0x270FA0128]();
}

uint64_t LNConfirmationActionNameEnumAsString()
{
  return MEMORY[0x270F47638]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x270FA0170]();
}

void bzero(void *a1, size_t a2)
{
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x270ED9340]();
}

void exit(int a1)
{
}

long double fmod(long double __x, long double __y)
{
  MEMORY[0x270ED99D0](__x, __y);
  return result;
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x270FA23F8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x270FA2420]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x270FA2428]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}